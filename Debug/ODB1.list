
ODB1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00007b50  08000110  08000110  00001110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000005ec  08007c60  08007c60  00008c60  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800824c  0800824c  0000a1d4  2**0
                  CONTENTS
  4 .ARM          00000008  0800824c  0800824c  0000924c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08008254  08008254  0000a1d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08008254  08008254  00009254  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08008258  08008258  00009258  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001d4  20000000  0800825c  0000a000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000005b8  200001d4  08008430  0000a1d4  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000078c  08008430  0000a78c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0000a1d4  2**0
                  CONTENTS, READONLY
 12 .debug_info   000094a5  00000000  00000000  0000a1fd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001d50  00000000  00000000  000136a2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loclists 00000c9e  00000000  00000000  000153f2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000550  00000000  00000000  00016090  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000403  00000000  00000000  000165e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001b277  00000000  00000000  000169e3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000c1d7  00000000  00000000  00031c5a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00095b93  00000000  00000000  0003de31  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000d39c4  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000021b4  00000000  00000000  000d3a08  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	@ (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	@ (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200001d4 	.word	0x200001d4
 800012c:	00000000 	.word	0x00000000
 8000130:	08007c48 	.word	0x08007c48

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	@ (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	@ (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	@ (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200001d8 	.word	0x200001d8
 800014c:	08007c48 	.word	0x08007c48

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <__aeabi_drsub>:
 8000160:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000164:	e002      	b.n	800016c <__adddf3>
 8000166:	bf00      	nop

08000168 <__aeabi_dsub>:
 8000168:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800016c <__adddf3>:
 800016c:	b530      	push	{r4, r5, lr}
 800016e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000172:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000176:	ea94 0f05 	teq	r4, r5
 800017a:	bf08      	it	eq
 800017c:	ea90 0f02 	teqeq	r0, r2
 8000180:	bf1f      	itttt	ne
 8000182:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000186:	ea55 0c02 	orrsne.w	ip, r5, r2
 800018a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800018e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000192:	f000 80e2 	beq.w	800035a <__adddf3+0x1ee>
 8000196:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800019a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800019e:	bfb8      	it	lt
 80001a0:	426d      	neglt	r5, r5
 80001a2:	dd0c      	ble.n	80001be <__adddf3+0x52>
 80001a4:	442c      	add	r4, r5
 80001a6:	ea80 0202 	eor.w	r2, r0, r2
 80001aa:	ea81 0303 	eor.w	r3, r1, r3
 80001ae:	ea82 0000 	eor.w	r0, r2, r0
 80001b2:	ea83 0101 	eor.w	r1, r3, r1
 80001b6:	ea80 0202 	eor.w	r2, r0, r2
 80001ba:	ea81 0303 	eor.w	r3, r1, r3
 80001be:	2d36      	cmp	r5, #54	@ 0x36
 80001c0:	bf88      	it	hi
 80001c2:	bd30      	pophi	{r4, r5, pc}
 80001c4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80001c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001cc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80001d0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001d4:	d002      	beq.n	80001dc <__adddf3+0x70>
 80001d6:	4240      	negs	r0, r0
 80001d8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001dc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 80001e0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001e4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001e8:	d002      	beq.n	80001f0 <__adddf3+0x84>
 80001ea:	4252      	negs	r2, r2
 80001ec:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80001f0:	ea94 0f05 	teq	r4, r5
 80001f4:	f000 80a7 	beq.w	8000346 <__adddf3+0x1da>
 80001f8:	f1a4 0401 	sub.w	r4, r4, #1
 80001fc:	f1d5 0e20 	rsbs	lr, r5, #32
 8000200:	db0d      	blt.n	800021e <__adddf3+0xb2>
 8000202:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000206:	fa22 f205 	lsr.w	r2, r2, r5
 800020a:	1880      	adds	r0, r0, r2
 800020c:	f141 0100 	adc.w	r1, r1, #0
 8000210:	fa03 f20e 	lsl.w	r2, r3, lr
 8000214:	1880      	adds	r0, r0, r2
 8000216:	fa43 f305 	asr.w	r3, r3, r5
 800021a:	4159      	adcs	r1, r3
 800021c:	e00e      	b.n	800023c <__adddf3+0xd0>
 800021e:	f1a5 0520 	sub.w	r5, r5, #32
 8000222:	f10e 0e20 	add.w	lr, lr, #32
 8000226:	2a01      	cmp	r2, #1
 8000228:	fa03 fc0e 	lsl.w	ip, r3, lr
 800022c:	bf28      	it	cs
 800022e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000232:	fa43 f305 	asr.w	r3, r3, r5
 8000236:	18c0      	adds	r0, r0, r3
 8000238:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800023c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000240:	d507      	bpl.n	8000252 <__adddf3+0xe6>
 8000242:	f04f 0e00 	mov.w	lr, #0
 8000246:	f1dc 0c00 	rsbs	ip, ip, #0
 800024a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800024e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000252:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000256:	d31b      	bcc.n	8000290 <__adddf3+0x124>
 8000258:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800025c:	d30c      	bcc.n	8000278 <__adddf3+0x10c>
 800025e:	0849      	lsrs	r1, r1, #1
 8000260:	ea5f 0030 	movs.w	r0, r0, rrx
 8000264:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000268:	f104 0401 	add.w	r4, r4, #1
 800026c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000270:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000274:	f080 809a 	bcs.w	80003ac <__adddf3+0x240>
 8000278:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800027c:	bf08      	it	eq
 800027e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000282:	f150 0000 	adcs.w	r0, r0, #0
 8000286:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800028a:	ea41 0105 	orr.w	r1, r1, r5
 800028e:	bd30      	pop	{r4, r5, pc}
 8000290:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000294:	4140      	adcs	r0, r0
 8000296:	eb41 0101 	adc.w	r1, r1, r1
 800029a:	3c01      	subs	r4, #1
 800029c:	bf28      	it	cs
 800029e:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80002a2:	d2e9      	bcs.n	8000278 <__adddf3+0x10c>
 80002a4:	f091 0f00 	teq	r1, #0
 80002a8:	bf04      	itt	eq
 80002aa:	4601      	moveq	r1, r0
 80002ac:	2000      	moveq	r0, #0
 80002ae:	fab1 f381 	clz	r3, r1
 80002b2:	bf08      	it	eq
 80002b4:	3320      	addeq	r3, #32
 80002b6:	f1a3 030b 	sub.w	r3, r3, #11
 80002ba:	f1b3 0220 	subs.w	r2, r3, #32
 80002be:	da0c      	bge.n	80002da <__adddf3+0x16e>
 80002c0:	320c      	adds	r2, #12
 80002c2:	dd08      	ble.n	80002d6 <__adddf3+0x16a>
 80002c4:	f102 0c14 	add.w	ip, r2, #20
 80002c8:	f1c2 020c 	rsb	r2, r2, #12
 80002cc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002d0:	fa21 f102 	lsr.w	r1, r1, r2
 80002d4:	e00c      	b.n	80002f0 <__adddf3+0x184>
 80002d6:	f102 0214 	add.w	r2, r2, #20
 80002da:	bfd8      	it	le
 80002dc:	f1c2 0c20 	rsble	ip, r2, #32
 80002e0:	fa01 f102 	lsl.w	r1, r1, r2
 80002e4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002e8:	bfdc      	itt	le
 80002ea:	ea41 010c 	orrle.w	r1, r1, ip
 80002ee:	4090      	lslle	r0, r2
 80002f0:	1ae4      	subs	r4, r4, r3
 80002f2:	bfa2      	ittt	ge
 80002f4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80002f8:	4329      	orrge	r1, r5
 80002fa:	bd30      	popge	{r4, r5, pc}
 80002fc:	ea6f 0404 	mvn.w	r4, r4
 8000300:	3c1f      	subs	r4, #31
 8000302:	da1c      	bge.n	800033e <__adddf3+0x1d2>
 8000304:	340c      	adds	r4, #12
 8000306:	dc0e      	bgt.n	8000326 <__adddf3+0x1ba>
 8000308:	f104 0414 	add.w	r4, r4, #20
 800030c:	f1c4 0220 	rsb	r2, r4, #32
 8000310:	fa20 f004 	lsr.w	r0, r0, r4
 8000314:	fa01 f302 	lsl.w	r3, r1, r2
 8000318:	ea40 0003 	orr.w	r0, r0, r3
 800031c:	fa21 f304 	lsr.w	r3, r1, r4
 8000320:	ea45 0103 	orr.w	r1, r5, r3
 8000324:	bd30      	pop	{r4, r5, pc}
 8000326:	f1c4 040c 	rsb	r4, r4, #12
 800032a:	f1c4 0220 	rsb	r2, r4, #32
 800032e:	fa20 f002 	lsr.w	r0, r0, r2
 8000332:	fa01 f304 	lsl.w	r3, r1, r4
 8000336:	ea40 0003 	orr.w	r0, r0, r3
 800033a:	4629      	mov	r1, r5
 800033c:	bd30      	pop	{r4, r5, pc}
 800033e:	fa21 f004 	lsr.w	r0, r1, r4
 8000342:	4629      	mov	r1, r5
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f094 0f00 	teq	r4, #0
 800034a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800034e:	bf06      	itte	eq
 8000350:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000354:	3401      	addeq	r4, #1
 8000356:	3d01      	subne	r5, #1
 8000358:	e74e      	b.n	80001f8 <__adddf3+0x8c>
 800035a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800035e:	bf18      	it	ne
 8000360:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000364:	d029      	beq.n	80003ba <__adddf3+0x24e>
 8000366:	ea94 0f05 	teq	r4, r5
 800036a:	bf08      	it	eq
 800036c:	ea90 0f02 	teqeq	r0, r2
 8000370:	d005      	beq.n	800037e <__adddf3+0x212>
 8000372:	ea54 0c00 	orrs.w	ip, r4, r0
 8000376:	bf04      	itt	eq
 8000378:	4619      	moveq	r1, r3
 800037a:	4610      	moveq	r0, r2
 800037c:	bd30      	pop	{r4, r5, pc}
 800037e:	ea91 0f03 	teq	r1, r3
 8000382:	bf1e      	ittt	ne
 8000384:	2100      	movne	r1, #0
 8000386:	2000      	movne	r0, #0
 8000388:	bd30      	popne	{r4, r5, pc}
 800038a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800038e:	d105      	bne.n	800039c <__adddf3+0x230>
 8000390:	0040      	lsls	r0, r0, #1
 8000392:	4149      	adcs	r1, r1
 8000394:	bf28      	it	cs
 8000396:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 800039a:	bd30      	pop	{r4, r5, pc}
 800039c:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80003a0:	bf3c      	itt	cc
 80003a2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80003a6:	bd30      	popcc	{r4, r5, pc}
 80003a8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003ac:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80003b0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80003b4:	f04f 0000 	mov.w	r0, #0
 80003b8:	bd30      	pop	{r4, r5, pc}
 80003ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003be:	bf1a      	itte	ne
 80003c0:	4619      	movne	r1, r3
 80003c2:	4610      	movne	r0, r2
 80003c4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003c8:	bf1c      	itt	ne
 80003ca:	460b      	movne	r3, r1
 80003cc:	4602      	movne	r2, r0
 80003ce:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003d2:	bf06      	itte	eq
 80003d4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003d8:	ea91 0f03 	teqeq	r1, r3
 80003dc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 80003e0:	bd30      	pop	{r4, r5, pc}
 80003e2:	bf00      	nop

080003e4 <__aeabi_ui2d>:
 80003e4:	f090 0f00 	teq	r0, #0
 80003e8:	bf04      	itt	eq
 80003ea:	2100      	moveq	r1, #0
 80003ec:	4770      	bxeq	lr
 80003ee:	b530      	push	{r4, r5, lr}
 80003f0:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80003f4:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80003f8:	f04f 0500 	mov.w	r5, #0
 80003fc:	f04f 0100 	mov.w	r1, #0
 8000400:	e750      	b.n	80002a4 <__adddf3+0x138>
 8000402:	bf00      	nop

08000404 <__aeabi_i2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000418:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800041c:	bf48      	it	mi
 800041e:	4240      	negmi	r0, r0
 8000420:	f04f 0100 	mov.w	r1, #0
 8000424:	e73e      	b.n	80002a4 <__adddf3+0x138>
 8000426:	bf00      	nop

08000428 <__aeabi_f2d>:
 8000428:	0042      	lsls	r2, r0, #1
 800042a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800042e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000432:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000436:	bf1f      	itttt	ne
 8000438:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800043c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000440:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000444:	4770      	bxne	lr
 8000446:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800044a:	bf08      	it	eq
 800044c:	4770      	bxeq	lr
 800044e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000452:	bf04      	itt	eq
 8000454:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000458:	4770      	bxeq	lr
 800045a:	b530      	push	{r4, r5, lr}
 800045c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000460:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000464:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000468:	e71c      	b.n	80002a4 <__adddf3+0x138>
 800046a:	bf00      	nop

0800046c <__aeabi_ul2d>:
 800046c:	ea50 0201 	orrs.w	r2, r0, r1
 8000470:	bf08      	it	eq
 8000472:	4770      	bxeq	lr
 8000474:	b530      	push	{r4, r5, lr}
 8000476:	f04f 0500 	mov.w	r5, #0
 800047a:	e00a      	b.n	8000492 <__aeabi_l2d+0x16>

0800047c <__aeabi_l2d>:
 800047c:	ea50 0201 	orrs.w	r2, r0, r1
 8000480:	bf08      	it	eq
 8000482:	4770      	bxeq	lr
 8000484:	b530      	push	{r4, r5, lr}
 8000486:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 800048a:	d502      	bpl.n	8000492 <__aeabi_l2d+0x16>
 800048c:	4240      	negs	r0, r0
 800048e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000492:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000496:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800049a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800049e:	f43f aed8 	beq.w	8000252 <__adddf3+0xe6>
 80004a2:	f04f 0203 	mov.w	r2, #3
 80004a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004aa:	bf18      	it	ne
 80004ac:	3203      	addne	r2, #3
 80004ae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004b2:	bf18      	it	ne
 80004b4:	3203      	addne	r2, #3
 80004b6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004ba:	f1c2 0320 	rsb	r3, r2, #32
 80004be:	fa00 fc03 	lsl.w	ip, r0, r3
 80004c2:	fa20 f002 	lsr.w	r0, r0, r2
 80004c6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ca:	ea40 000e 	orr.w	r0, r0, lr
 80004ce:	fa21 f102 	lsr.w	r1, r1, r2
 80004d2:	4414      	add	r4, r2
 80004d4:	e6bd      	b.n	8000252 <__adddf3+0xe6>
 80004d6:	bf00      	nop

080004d8 <__aeabi_dmul>:
 80004d8:	b570      	push	{r4, r5, r6, lr}
 80004da:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80004de:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80004e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004e6:	bf1d      	ittte	ne
 80004e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004ec:	ea94 0f0c 	teqne	r4, ip
 80004f0:	ea95 0f0c 	teqne	r5, ip
 80004f4:	f000 f8de 	bleq	80006b4 <__aeabi_dmul+0x1dc>
 80004f8:	442c      	add	r4, r5
 80004fa:	ea81 0603 	eor.w	r6, r1, r3
 80004fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000502:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000506:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800050a:	bf18      	it	ne
 800050c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000510:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000514:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000518:	d038      	beq.n	800058c <__aeabi_dmul+0xb4>
 800051a:	fba0 ce02 	umull	ip, lr, r0, r2
 800051e:	f04f 0500 	mov.w	r5, #0
 8000522:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000526:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800052a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800052e:	f04f 0600 	mov.w	r6, #0
 8000532:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000536:	f09c 0f00 	teq	ip, #0
 800053a:	bf18      	it	ne
 800053c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000540:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000544:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000548:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800054c:	d204      	bcs.n	8000558 <__aeabi_dmul+0x80>
 800054e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000552:	416d      	adcs	r5, r5
 8000554:	eb46 0606 	adc.w	r6, r6, r6
 8000558:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800055c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000560:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000564:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000568:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800056c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000570:	bf88      	it	hi
 8000572:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000576:	d81e      	bhi.n	80005b6 <__aeabi_dmul+0xde>
 8000578:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800057c:	bf08      	it	eq
 800057e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000582:	f150 0000 	adcs.w	r0, r0, #0
 8000586:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800058a:	bd70      	pop	{r4, r5, r6, pc}
 800058c:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000590:	ea46 0101 	orr.w	r1, r6, r1
 8000594:	ea40 0002 	orr.w	r0, r0, r2
 8000598:	ea81 0103 	eor.w	r1, r1, r3
 800059c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005a0:	bfc2      	ittt	gt
 80005a2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005aa:	bd70      	popgt	{r4, r5, r6, pc}
 80005ac:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80005b0:	f04f 0e00 	mov.w	lr, #0
 80005b4:	3c01      	subs	r4, #1
 80005b6:	f300 80ab 	bgt.w	8000710 <__aeabi_dmul+0x238>
 80005ba:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80005be:	bfde      	ittt	le
 80005c0:	2000      	movle	r0, #0
 80005c2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80005c6:	bd70      	pople	{r4, r5, r6, pc}
 80005c8:	f1c4 0400 	rsb	r4, r4, #0
 80005cc:	3c20      	subs	r4, #32
 80005ce:	da35      	bge.n	800063c <__aeabi_dmul+0x164>
 80005d0:	340c      	adds	r4, #12
 80005d2:	dc1b      	bgt.n	800060c <__aeabi_dmul+0x134>
 80005d4:	f104 0414 	add.w	r4, r4, #20
 80005d8:	f1c4 0520 	rsb	r5, r4, #32
 80005dc:	fa00 f305 	lsl.w	r3, r0, r5
 80005e0:	fa20 f004 	lsr.w	r0, r0, r4
 80005e4:	fa01 f205 	lsl.w	r2, r1, r5
 80005e8:	ea40 0002 	orr.w	r0, r0, r2
 80005ec:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 80005f0:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80005f8:	fa21 f604 	lsr.w	r6, r1, r4
 80005fc:	eb42 0106 	adc.w	r1, r2, r6
 8000600:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000604:	bf08      	it	eq
 8000606:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800060a:	bd70      	pop	{r4, r5, r6, pc}
 800060c:	f1c4 040c 	rsb	r4, r4, #12
 8000610:	f1c4 0520 	rsb	r5, r4, #32
 8000614:	fa00 f304 	lsl.w	r3, r0, r4
 8000618:	fa20 f005 	lsr.w	r0, r0, r5
 800061c:	fa01 f204 	lsl.w	r2, r1, r4
 8000620:	ea40 0002 	orr.w	r0, r0, r2
 8000624:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000628:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800062c:	f141 0100 	adc.w	r1, r1, #0
 8000630:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000634:	bf08      	it	eq
 8000636:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800063a:	bd70      	pop	{r4, r5, r6, pc}
 800063c:	f1c4 0520 	rsb	r5, r4, #32
 8000640:	fa00 f205 	lsl.w	r2, r0, r5
 8000644:	ea4e 0e02 	orr.w	lr, lr, r2
 8000648:	fa20 f304 	lsr.w	r3, r0, r4
 800064c:	fa01 f205 	lsl.w	r2, r1, r5
 8000650:	ea43 0302 	orr.w	r3, r3, r2
 8000654:	fa21 f004 	lsr.w	r0, r1, r4
 8000658:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800065c:	fa21 f204 	lsr.w	r2, r1, r4
 8000660:	ea20 0002 	bic.w	r0, r0, r2
 8000664:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000668:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800066c:	bf08      	it	eq
 800066e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000672:	bd70      	pop	{r4, r5, r6, pc}
 8000674:	f094 0f00 	teq	r4, #0
 8000678:	d10f      	bne.n	800069a <__aeabi_dmul+0x1c2>
 800067a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800067e:	0040      	lsls	r0, r0, #1
 8000680:	eb41 0101 	adc.w	r1, r1, r1
 8000684:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000688:	bf08      	it	eq
 800068a:	3c01      	subeq	r4, #1
 800068c:	d0f7      	beq.n	800067e <__aeabi_dmul+0x1a6>
 800068e:	ea41 0106 	orr.w	r1, r1, r6
 8000692:	f095 0f00 	teq	r5, #0
 8000696:	bf18      	it	ne
 8000698:	4770      	bxne	lr
 800069a:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 800069e:	0052      	lsls	r2, r2, #1
 80006a0:	eb43 0303 	adc.w	r3, r3, r3
 80006a4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80006a8:	bf08      	it	eq
 80006aa:	3d01      	subeq	r5, #1
 80006ac:	d0f7      	beq.n	800069e <__aeabi_dmul+0x1c6>
 80006ae:	ea43 0306 	orr.w	r3, r3, r6
 80006b2:	4770      	bx	lr
 80006b4:	ea94 0f0c 	teq	r4, ip
 80006b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006bc:	bf18      	it	ne
 80006be:	ea95 0f0c 	teqne	r5, ip
 80006c2:	d00c      	beq.n	80006de <__aeabi_dmul+0x206>
 80006c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006c8:	bf18      	it	ne
 80006ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ce:	d1d1      	bne.n	8000674 <__aeabi_dmul+0x19c>
 80006d0:	ea81 0103 	eor.w	r1, r1, r3
 80006d4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80006d8:	f04f 0000 	mov.w	r0, #0
 80006dc:	bd70      	pop	{r4, r5, r6, pc}
 80006de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006e2:	bf06      	itte	eq
 80006e4:	4610      	moveq	r0, r2
 80006e6:	4619      	moveq	r1, r3
 80006e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ec:	d019      	beq.n	8000722 <__aeabi_dmul+0x24a>
 80006ee:	ea94 0f0c 	teq	r4, ip
 80006f2:	d102      	bne.n	80006fa <__aeabi_dmul+0x222>
 80006f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80006f8:	d113      	bne.n	8000722 <__aeabi_dmul+0x24a>
 80006fa:	ea95 0f0c 	teq	r5, ip
 80006fe:	d105      	bne.n	800070c <__aeabi_dmul+0x234>
 8000700:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000704:	bf1c      	itt	ne
 8000706:	4610      	movne	r0, r2
 8000708:	4619      	movne	r1, r3
 800070a:	d10a      	bne.n	8000722 <__aeabi_dmul+0x24a>
 800070c:	ea81 0103 	eor.w	r1, r1, r3
 8000710:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000714:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000718:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800071c:	f04f 0000 	mov.w	r0, #0
 8000720:	bd70      	pop	{r4, r5, r6, pc}
 8000722:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000726:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800072a:	bd70      	pop	{r4, r5, r6, pc}

0800072c <__aeabi_ddiv>:
 800072c:	b570      	push	{r4, r5, r6, lr}
 800072e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000732:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000736:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800073a:	bf1d      	ittte	ne
 800073c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000740:	ea94 0f0c 	teqne	r4, ip
 8000744:	ea95 0f0c 	teqne	r5, ip
 8000748:	f000 f8a7 	bleq	800089a <__aeabi_ddiv+0x16e>
 800074c:	eba4 0405 	sub.w	r4, r4, r5
 8000750:	ea81 0e03 	eor.w	lr, r1, r3
 8000754:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000758:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800075c:	f000 8088 	beq.w	8000870 <__aeabi_ddiv+0x144>
 8000760:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000764:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000768:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800076c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000770:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000774:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000778:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800077c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000780:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 8000784:	429d      	cmp	r5, r3
 8000786:	bf08      	it	eq
 8000788:	4296      	cmpeq	r6, r2
 800078a:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 800078e:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 8000792:	d202      	bcs.n	800079a <__aeabi_ddiv+0x6e>
 8000794:	085b      	lsrs	r3, r3, #1
 8000796:	ea4f 0232 	mov.w	r2, r2, rrx
 800079a:	1ab6      	subs	r6, r6, r2
 800079c:	eb65 0503 	sbc.w	r5, r5, r3
 80007a0:	085b      	lsrs	r3, r3, #1
 80007a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007a6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80007aa:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80007ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80007b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007b6:	bf22      	ittt	cs
 80007b8:	1ab6      	subcs	r6, r6, r2
 80007ba:	4675      	movcs	r5, lr
 80007bc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007c0:	085b      	lsrs	r3, r3, #1
 80007c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ce:	bf22      	ittt	cs
 80007d0:	1ab6      	subcs	r6, r6, r2
 80007d2:	4675      	movcs	r5, lr
 80007d4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007d8:	085b      	lsrs	r3, r3, #1
 80007da:	ea4f 0232 	mov.w	r2, r2, rrx
 80007de:	ebb6 0e02 	subs.w	lr, r6, r2
 80007e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007e6:	bf22      	ittt	cs
 80007e8:	1ab6      	subcs	r6, r6, r2
 80007ea:	4675      	movcs	r5, lr
 80007ec:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80007f0:	085b      	lsrs	r3, r3, #1
 80007f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007fe:	bf22      	ittt	cs
 8000800:	1ab6      	subcs	r6, r6, r2
 8000802:	4675      	movcs	r5, lr
 8000804:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000808:	ea55 0e06 	orrs.w	lr, r5, r6
 800080c:	d018      	beq.n	8000840 <__aeabi_ddiv+0x114>
 800080e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000812:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000816:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800081a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800081e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000822:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000826:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800082a:	d1c0      	bne.n	80007ae <__aeabi_ddiv+0x82>
 800082c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000830:	d10b      	bne.n	800084a <__aeabi_ddiv+0x11e>
 8000832:	ea41 0100 	orr.w	r1, r1, r0
 8000836:	f04f 0000 	mov.w	r0, #0
 800083a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800083e:	e7b6      	b.n	80007ae <__aeabi_ddiv+0x82>
 8000840:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000844:	bf04      	itt	eq
 8000846:	4301      	orreq	r1, r0
 8000848:	2000      	moveq	r0, #0
 800084a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800084e:	bf88      	it	hi
 8000850:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000854:	f63f aeaf 	bhi.w	80005b6 <__aeabi_dmul+0xde>
 8000858:	ebb5 0c03 	subs.w	ip, r5, r3
 800085c:	bf04      	itt	eq
 800085e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000862:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000866:	f150 0000 	adcs.w	r0, r0, #0
 800086a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800086e:	bd70      	pop	{r4, r5, r6, pc}
 8000870:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000874:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000878:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800087c:	bfc2      	ittt	gt
 800087e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000882:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000886:	bd70      	popgt	{r4, r5, r6, pc}
 8000888:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 800088c:	f04f 0e00 	mov.w	lr, #0
 8000890:	3c01      	subs	r4, #1
 8000892:	e690      	b.n	80005b6 <__aeabi_dmul+0xde>
 8000894:	ea45 0e06 	orr.w	lr, r5, r6
 8000898:	e68d      	b.n	80005b6 <__aeabi_dmul+0xde>
 800089a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800089e:	ea94 0f0c 	teq	r4, ip
 80008a2:	bf08      	it	eq
 80008a4:	ea95 0f0c 	teqeq	r5, ip
 80008a8:	f43f af3b 	beq.w	8000722 <__aeabi_dmul+0x24a>
 80008ac:	ea94 0f0c 	teq	r4, ip
 80008b0:	d10a      	bne.n	80008c8 <__aeabi_ddiv+0x19c>
 80008b2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008b6:	f47f af34 	bne.w	8000722 <__aeabi_dmul+0x24a>
 80008ba:	ea95 0f0c 	teq	r5, ip
 80008be:	f47f af25 	bne.w	800070c <__aeabi_dmul+0x234>
 80008c2:	4610      	mov	r0, r2
 80008c4:	4619      	mov	r1, r3
 80008c6:	e72c      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008c8:	ea95 0f0c 	teq	r5, ip
 80008cc:	d106      	bne.n	80008dc <__aeabi_ddiv+0x1b0>
 80008ce:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008d2:	f43f aefd 	beq.w	80006d0 <__aeabi_dmul+0x1f8>
 80008d6:	4610      	mov	r0, r2
 80008d8:	4619      	mov	r1, r3
 80008da:	e722      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008dc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008e0:	bf18      	it	ne
 80008e2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008e6:	f47f aec5 	bne.w	8000674 <__aeabi_dmul+0x19c>
 80008ea:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008ee:	f47f af0d 	bne.w	800070c <__aeabi_dmul+0x234>
 80008f2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80008f6:	f47f aeeb 	bne.w	80006d0 <__aeabi_dmul+0x1f8>
 80008fa:	e712      	b.n	8000722 <__aeabi_dmul+0x24a>

080008fc <__gedf2>:
 80008fc:	f04f 3cff 	mov.w	ip, #4294967295
 8000900:	e006      	b.n	8000910 <__cmpdf2+0x4>
 8000902:	bf00      	nop

08000904 <__ledf2>:
 8000904:	f04f 0c01 	mov.w	ip, #1
 8000908:	e002      	b.n	8000910 <__cmpdf2+0x4>
 800090a:	bf00      	nop

0800090c <__cmpdf2>:
 800090c:	f04f 0c01 	mov.w	ip, #1
 8000910:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000914:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000918:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800091c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000920:	bf18      	it	ne
 8000922:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000926:	d01b      	beq.n	8000960 <__cmpdf2+0x54>
 8000928:	b001      	add	sp, #4
 800092a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800092e:	bf0c      	ite	eq
 8000930:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000934:	ea91 0f03 	teqne	r1, r3
 8000938:	bf02      	ittt	eq
 800093a:	ea90 0f02 	teqeq	r0, r2
 800093e:	2000      	moveq	r0, #0
 8000940:	4770      	bxeq	lr
 8000942:	f110 0f00 	cmn.w	r0, #0
 8000946:	ea91 0f03 	teq	r1, r3
 800094a:	bf58      	it	pl
 800094c:	4299      	cmppl	r1, r3
 800094e:	bf08      	it	eq
 8000950:	4290      	cmpeq	r0, r2
 8000952:	bf2c      	ite	cs
 8000954:	17d8      	asrcs	r0, r3, #31
 8000956:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800095a:	f040 0001 	orr.w	r0, r0, #1
 800095e:	4770      	bx	lr
 8000960:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000964:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000968:	d102      	bne.n	8000970 <__cmpdf2+0x64>
 800096a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800096e:	d107      	bne.n	8000980 <__cmpdf2+0x74>
 8000970:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000974:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000978:	d1d6      	bne.n	8000928 <__cmpdf2+0x1c>
 800097a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800097e:	d0d3      	beq.n	8000928 <__cmpdf2+0x1c>
 8000980:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000984:	4770      	bx	lr
 8000986:	bf00      	nop

08000988 <__aeabi_cdrcmple>:
 8000988:	4684      	mov	ip, r0
 800098a:	4610      	mov	r0, r2
 800098c:	4662      	mov	r2, ip
 800098e:	468c      	mov	ip, r1
 8000990:	4619      	mov	r1, r3
 8000992:	4663      	mov	r3, ip
 8000994:	e000      	b.n	8000998 <__aeabi_cdcmpeq>
 8000996:	bf00      	nop

08000998 <__aeabi_cdcmpeq>:
 8000998:	b501      	push	{r0, lr}
 800099a:	f7ff ffb7 	bl	800090c <__cmpdf2>
 800099e:	2800      	cmp	r0, #0
 80009a0:	bf48      	it	mi
 80009a2:	f110 0f00 	cmnmi.w	r0, #0
 80009a6:	bd01      	pop	{r0, pc}

080009a8 <__aeabi_dcmpeq>:
 80009a8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009ac:	f7ff fff4 	bl	8000998 <__aeabi_cdcmpeq>
 80009b0:	bf0c      	ite	eq
 80009b2:	2001      	moveq	r0, #1
 80009b4:	2000      	movne	r0, #0
 80009b6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ba:	bf00      	nop

080009bc <__aeabi_dcmplt>:
 80009bc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009c0:	f7ff ffea 	bl	8000998 <__aeabi_cdcmpeq>
 80009c4:	bf34      	ite	cc
 80009c6:	2001      	movcc	r0, #1
 80009c8:	2000      	movcs	r0, #0
 80009ca:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ce:	bf00      	nop

080009d0 <__aeabi_dcmple>:
 80009d0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009d4:	f7ff ffe0 	bl	8000998 <__aeabi_cdcmpeq>
 80009d8:	bf94      	ite	ls
 80009da:	2001      	movls	r0, #1
 80009dc:	2000      	movhi	r0, #0
 80009de:	f85d fb08 	ldr.w	pc, [sp], #8
 80009e2:	bf00      	nop

080009e4 <__aeabi_dcmpge>:
 80009e4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e8:	f7ff ffce 	bl	8000988 <__aeabi_cdrcmple>
 80009ec:	bf94      	ite	ls
 80009ee:	2001      	movls	r0, #1
 80009f0:	2000      	movhi	r0, #0
 80009f2:	f85d fb08 	ldr.w	pc, [sp], #8
 80009f6:	bf00      	nop

080009f8 <__aeabi_dcmpgt>:
 80009f8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009fc:	f7ff ffc4 	bl	8000988 <__aeabi_cdrcmple>
 8000a00:	bf34      	ite	cc
 8000a02:	2001      	movcc	r0, #1
 8000a04:	2000      	movcs	r0, #0
 8000a06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a0a:	bf00      	nop

08000a0c <__aeabi_dcmpun>:
 8000a0c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a14:	d102      	bne.n	8000a1c <__aeabi_dcmpun+0x10>
 8000a16:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a1a:	d10a      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a24:	d102      	bne.n	8000a2c <__aeabi_dcmpun+0x20>
 8000a26:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a2a:	d102      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a2c:	f04f 0000 	mov.w	r0, #0
 8000a30:	4770      	bx	lr
 8000a32:	f04f 0001 	mov.w	r0, #1
 8000a36:	4770      	bx	lr

08000a38 <__aeabi_d2iz>:
 8000a38:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a3c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000a40:	d215      	bcs.n	8000a6e <__aeabi_d2iz+0x36>
 8000a42:	d511      	bpl.n	8000a68 <__aeabi_d2iz+0x30>
 8000a44:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000a48:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a4c:	d912      	bls.n	8000a74 <__aeabi_d2iz+0x3c>
 8000a4e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a52:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000a56:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a5a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000a5e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a62:	bf18      	it	ne
 8000a64:	4240      	negne	r0, r0
 8000a66:	4770      	bx	lr
 8000a68:	f04f 0000 	mov.w	r0, #0
 8000a6c:	4770      	bx	lr
 8000a6e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a72:	d105      	bne.n	8000a80 <__aeabi_d2iz+0x48>
 8000a74:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000a78:	bf08      	it	eq
 8000a7a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000a7e:	4770      	bx	lr
 8000a80:	f04f 0000 	mov.w	r0, #0
 8000a84:	4770      	bx	lr
 8000a86:	bf00      	nop

08000a88 <BMP280_ReadRegister>:

    float altitude = (T0 / alpha) * (1 - pow((pressure / P0), (1 / beta)));
    return altitude;
}

uint8_t BMP280_ReadRegister(uint8_t reg) {
 8000a88:	b500      	push	{lr}
 8000a8a:	b085      	sub	sp, #20
 8000a8c:	f88d 0007 	strb.w	r0, [sp, #7]

    uint8_t received_data;
    Write_GPIO(PA, 8, LOW); // Disable CS
 8000a90:	2200      	movs	r2, #0
 8000a92:	2108      	movs	r1, #8
 8000a94:	2001      	movs	r0, #1
 8000a96:	f000 fafb 	bl	8001090 <Write_GPIO>
    SPI2_TX(&reg, 1);
 8000a9a:	2101      	movs	r1, #1
 8000a9c:	f10d 0007 	add.w	r0, sp, #7
 8000aa0:	f000 fb7a 	bl	8001198 <SPI2_TX>
    SPI2_RX(&received_data, 1);
 8000aa4:	2101      	movs	r1, #1
 8000aa6:	f10d 000f 	add.w	r0, sp, #15
 8000aaa:	f000 fb93 	bl	80011d4 <SPI2_RX>
    Write_GPIO(PA, 8, HIGH); // Enable CS
 8000aae:	2201      	movs	r2, #1
 8000ab0:	2108      	movs	r1, #8
 8000ab2:	4610      	mov	r0, r2
 8000ab4:	f000 faec 	bl	8001090 <Write_GPIO>
    return received_data;
}
 8000ab8:	f89d 000f 	ldrb.w	r0, [sp, #15]
 8000abc:	b005      	add	sp, #20
 8000abe:	f85d fb04 	ldr.w	pc, [sp], #4

08000ac2 <BMP280_ReadCalibrationData>:
void BMP280_ReadCalibrationData(BMP280 *devBMP) {
 8000ac2:	b530      	push	{r4, r5, lr}
 8000ac4:	b089      	sub	sp, #36	@ 0x24
 8000ac6:	4605      	mov	r5, r0
	while((BMP280_ReadRegister(BMP280_REG_STATUS) & 0x04) != 0);
 8000ac8:	20f3      	movs	r0, #243	@ 0xf3
 8000aca:	f7ff ffdd 	bl	8000a88 <BMP280_ReadRegister>
 8000ace:	f010 0f04 	tst.w	r0, #4
 8000ad2:	d1f9      	bne.n	8000ac8 <BMP280_ReadCalibrationData+0x6>
    for (int i = 0; i < 26; i++) {
 8000ad4:	2400      	movs	r4, #0
 8000ad6:	e00a      	b.n	8000aee <BMP280_ReadCalibrationData+0x2c>
        calib[i] = BMP280_ReadRegister(BMP280_REG_CALIB_00 + i);
 8000ad8:	f1a4 0078 	sub.w	r0, r4, #120	@ 0x78
 8000adc:	b2c0      	uxtb	r0, r0
 8000ade:	f7ff ffd3 	bl	8000a88 <BMP280_ReadRegister>
 8000ae2:	f104 0320 	add.w	r3, r4, #32
 8000ae6:	446b      	add	r3, sp
 8000ae8:	f803 0c1c 	strb.w	r0, [r3, #-28]
    for (int i = 0; i < 26; i++) {
 8000aec:	3401      	adds	r4, #1
 8000aee:	2c19      	cmp	r4, #25
 8000af0:	ddf2      	ble.n	8000ad8 <BMP280_ReadCalibrationData+0x16>
    devBMP->calib_data.dig_T1 = (calib[1] << 8) | calib[0];
 8000af2:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8000af6:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8000afa:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000afe:	812b      	strh	r3, [r5, #8]
    devBMP->calib_data.dig_T2 = (calib[3] << 8) | calib[2];
 8000b00:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8000b04:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8000b08:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000b0c:	816b      	strh	r3, [r5, #10]
    devBMP->calib_data.dig_T3 = (calib[5] << 8) | calib[4];
 8000b0e:	f89d 2009 	ldrb.w	r2, [sp, #9]
 8000b12:	f89d 3008 	ldrb.w	r3, [sp, #8]
 8000b16:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000b1a:	81ab      	strh	r3, [r5, #12]
    devBMP->calib_data.dig_P1 = (calib[7] << 8) | calib[6];
 8000b1c:	f89d 200b 	ldrb.w	r2, [sp, #11]
 8000b20:	f89d 300a 	ldrb.w	r3, [sp, #10]
 8000b24:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000b28:	81eb      	strh	r3, [r5, #14]
    devBMP->calib_data.dig_P2 = (calib[9] << 8) | calib[8];
 8000b2a:	f89d 200d 	ldrb.w	r2, [sp, #13]
 8000b2e:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8000b32:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000b36:	822b      	strh	r3, [r5, #16]
    devBMP->calib_data.dig_P3 = (calib[11] << 8) | calib[10];
 8000b38:	f89d 200f 	ldrb.w	r2, [sp, #15]
 8000b3c:	f89d 300e 	ldrb.w	r3, [sp, #14]
 8000b40:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000b44:	826b      	strh	r3, [r5, #18]
    devBMP->calib_data.dig_P4 = (calib[13] << 8) | calib[12];
 8000b46:	f89d 2011 	ldrb.w	r2, [sp, #17]
 8000b4a:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8000b4e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000b52:	82ab      	strh	r3, [r5, #20]
    devBMP->calib_data.dig_P5 = (calib[15] << 8) | calib[14];
 8000b54:	f89d 2013 	ldrb.w	r2, [sp, #19]
 8000b58:	f89d 3012 	ldrb.w	r3, [sp, #18]
 8000b5c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000b60:	82eb      	strh	r3, [r5, #22]
    devBMP->calib_data.dig_P6 = (calib[17] << 8) | calib[16];
 8000b62:	f89d 2015 	ldrb.w	r2, [sp, #21]
 8000b66:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8000b6a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000b6e:	832b      	strh	r3, [r5, #24]
    devBMP->calib_data.dig_P7 = (calib[19] << 8) | calib[18];
 8000b70:	f89d 2017 	ldrb.w	r2, [sp, #23]
 8000b74:	f89d 3016 	ldrb.w	r3, [sp, #22]
 8000b78:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000b7c:	836b      	strh	r3, [r5, #26]
    devBMP->calib_data.dig_P8 = (calib[21] << 8) | calib[20];
 8000b7e:	f89d 2019 	ldrb.w	r2, [sp, #25]
 8000b82:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8000b86:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000b8a:	83ab      	strh	r3, [r5, #28]
    devBMP->calib_data.dig_P9 = (calib[23] << 8) | calib[22];
 8000b8c:	f89d 201b 	ldrb.w	r2, [sp, #27]
 8000b90:	f89d 301a 	ldrb.w	r3, [sp, #26]
 8000b94:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000b98:	83eb      	strh	r3, [r5, #30]
}
 8000b9a:	b009      	add	sp, #36	@ 0x24
 8000b9c:	bd30      	pop	{r4, r5, pc}

08000b9e <BMP280_WriteRegister>:

uint8_t BMP280_WriteRegister(uint8_t reg, uint8_t value) {
 8000b9e:	b500      	push	{lr}
 8000ba0:	b083      	sub	sp, #12

    uint8_t data[2] = {reg, value};
 8000ba2:	f88d 0004 	strb.w	r0, [sp, #4]
 8000ba6:	f88d 1005 	strb.w	r1, [sp, #5]
    Write_GPIO(PA, 8, LOW); // Disable CS
 8000baa:	2200      	movs	r2, #0
 8000bac:	2108      	movs	r1, #8
 8000bae:	2001      	movs	r0, #1
 8000bb0:	f000 fa6e 	bl	8001090 <Write_GPIO>
    SPI2_TX(data, 2);
 8000bb4:	2102      	movs	r1, #2
 8000bb6:	a801      	add	r0, sp, #4
 8000bb8:	f000 faee 	bl	8001198 <SPI2_TX>
    Write_GPIO(PA, 8, HIGH); // Enable CS
 8000bbc:	2201      	movs	r2, #1
 8000bbe:	2108      	movs	r1, #8
 8000bc0:	4610      	mov	r0, r2
 8000bc2:	f000 fa65 	bl	8001090 <Write_GPIO>
    return 0; // OK
}
 8000bc6:	2000      	movs	r0, #0
 8000bc8:	b003      	add	sp, #12
 8000bca:	f85d fb04 	ldr.w	pc, [sp], #4

08000bce <BMP280_Init>:
uint8_t BMP280_Init(BMP280 *devBMP) {
 8000bce:	b510      	push	{r4, lr}
 8000bd0:	4604      	mov	r4, r0
	SPI_Init(2);
 8000bd2:	2002      	movs	r0, #2
 8000bd4:	f000 fa7c 	bl	80010d0 <SPI_Init>
    BMP280_WriteRegister(BMP280_REG_RESET, BMP280_RESET_WORD); // Reset
 8000bd8:	21b6      	movs	r1, #182	@ 0xb6
 8000bda:	20e0      	movs	r0, #224	@ 0xe0
 8000bdc:	f7ff ffdf 	bl	8000b9e <BMP280_WriteRegister>
    if (BMP280_ReadRegister(BMP280_REG_ID) != BMP280_DEVICE_ID) {
 8000be0:	20d0      	movs	r0, #208	@ 0xd0
 8000be2:	f7ff ff51 	bl	8000a88 <BMP280_ReadRegister>
 8000be6:	2858      	cmp	r0, #88	@ 0x58
 8000be8:	d001      	beq.n	8000bee <BMP280_Init+0x20>
        return 1; // Error
 8000bea:	2001      	movs	r0, #1
}
 8000bec:	bd10      	pop	{r4, pc}
    BMP280_ReadCalibrationData(devBMP);
 8000bee:	4620      	mov	r0, r4
 8000bf0:	f7ff ff67 	bl	8000ac2 <BMP280_ReadCalibrationData>
    BMP280_WriteRegister(BMP280_REG_CTRL_MEAS, BMP280_SETTING_CTRL_MEAS_NORMAL);
 8000bf4:	2157      	movs	r1, #87	@ 0x57
 8000bf6:	20f4      	movs	r0, #244	@ 0xf4
 8000bf8:	f7ff ffd1 	bl	8000b9e <BMP280_WriteRegister>
    BMP280_WriteRegister(BMP280_REG_CONFIG, BMP280_SETTING_CONFIG);
 8000bfc:	2108      	movs	r1, #8
 8000bfe:	20f5      	movs	r0, #245	@ 0xf5
 8000c00:	f7ff ffcd 	bl	8000b9e <BMP280_WriteRegister>
    return 0;
 8000c04:	2000      	movs	r0, #0
 8000c06:	e7f1      	b.n	8000bec <BMP280_Init+0x1e>

08000c08 <CD74HC4051_Init>:

#include "GAUL_Drivers/CD74HC4051.h"
#include "GAUL_Drivers/Pyros.h"
#include "GAUL_Drivers/Low_Level_Drivers/ADC_driver.h"

uint8_t CD74HC4051_Init (ADC_HandleTypeDef *hadc) {
 8000c08:	b510      	push	{r4, lr}
 8000c0a:	4604      	mov	r4, r0

	// Read pin
	Init_GPIO(PA, 0, IN, I_AN); // MUL_AN
 8000c0c:	2300      	movs	r3, #0
 8000c0e:	461a      	mov	r2, r3
 8000c10:	4619      	mov	r1, r3
 8000c12:	2001      	movs	r0, #1
 8000c14:	f000 f9f2 	bl	8000ffc <Init_GPIO>
	// Batteries
	Init_GPIO(PC, 13, OUT2, O_GP_PP); // MUL_S0
 8000c18:	2300      	movs	r3, #0
 8000c1a:	2202      	movs	r2, #2
 8000c1c:	210d      	movs	r1, #13
 8000c1e:	2003      	movs	r0, #3
 8000c20:	f000 f9ec 	bl	8000ffc <Init_GPIO>
	Init_GPIO(PC, 14, OUT2, O_GP_PP); // MUL_S1
 8000c24:	2300      	movs	r3, #0
 8000c26:	2202      	movs	r2, #2
 8000c28:	210e      	movs	r1, #14
 8000c2a:	2003      	movs	r0, #3
 8000c2c:	f000 f9e6 	bl	8000ffc <Init_GPIO>
	Init_GPIO(PC, 15, OUT2, O_GP_PP); // MUL_S2
 8000c30:	2300      	movs	r3, #0
 8000c32:	2202      	movs	r2, #2
 8000c34:	210f      	movs	r1, #15
 8000c36:	2003      	movs	r0, #3
 8000c38:	f000 f9e0 	bl	8000ffc <Init_GPIO>
	Init_GPIO(PB, 8, OUT2, O_GP_PP); // MUL_E~
 8000c3c:	2300      	movs	r3, #0
 8000c3e:	2202      	movs	r2, #2
 8000c40:	2108      	movs	r1, #8
 8000c42:	4610      	mov	r0, r2
 8000c44:	f000 f9da 	bl	8000ffc <Init_GPIO>
	// Set MUL_E~ (inverse)
	Write_GPIO(PB, 8, HIGH);
 8000c48:	2201      	movs	r2, #1
 8000c4a:	2108      	movs	r1, #8
 8000c4c:	2002      	movs	r0, #2
 8000c4e:	f000 fa1f 	bl	8001090 <Write_GPIO>
	// Pyros
	Pyro_Init();
 8000c52:	f000 f93b 	bl	8000ecc <Pyro_Init>

	//ADC calibration
	ADC_Stop(hadc);
 8000c56:	4620      	mov	r0, r4
 8000c58:	f000 f9cb 	bl	8000ff2 <ADC_Stop>
	ADC_Calibration(hadc);
 8000c5c:	4620      	mov	r0, r4
 8000c5e:	f000 f9c3 	bl	8000fe8 <ADC_Calibration>

	return 0; // OK
}
 8000c62:	2000      	movs	r0, #0
 8000c64:	bd10      	pop	{r4, pc}

08000c66 <ICM20602_Read>:
{
	return Read_GPIO(PA, 10);
}

void ICM20602_Read(uint8_t address, uint8_t rxData[], uint8_t size)
{
 8000c66:	b530      	push	{r4, r5, lr}
 8000c68:	b083      	sub	sp, #12
 8000c6a:	460c      	mov	r4, r1
 8000c6c:	4615      	mov	r5, r2
 8000c6e:	f88d 0007 	strb.w	r0, [sp, #7]
	address |= 0x80;  // read operation
 8000c72:	b2c3      	uxtb	r3, r0
 8000c74:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8000c78:	f88d 3007 	strb.w	r3, [sp, #7]

	Write_GPIO(PB, 12, LOW);
 8000c7c:	2200      	movs	r2, #0
 8000c7e:	210c      	movs	r1, #12
 8000c80:	2002      	movs	r0, #2
 8000c82:	f000 fa05 	bl	8001090 <Write_GPIO>
	SPI2_TX(&address, 1);  // send address
 8000c86:	2101      	movs	r1, #1
 8000c88:	f10d 0007 	add.w	r0, sp, #7
 8000c8c:	f000 fa84 	bl	8001198 <SPI2_TX>
	SPI2_RX(rxData, size);  // receive 6 bytes data
 8000c90:	4629      	mov	r1, r5
 8000c92:	4620      	mov	r0, r4
 8000c94:	f000 fa9e 	bl	80011d4 <SPI2_RX>
	Write_GPIO(PB, 12, HIGH);
 8000c98:	2201      	movs	r2, #1
 8000c9a:	210c      	movs	r1, #12
 8000c9c:	2002      	movs	r0, #2
 8000c9e:	f000 f9f7 	bl	8001090 <Write_GPIO>
}
 8000ca2:	b003      	add	sp, #12
 8000ca4:	bd30      	pop	{r4, r5, pc}

08000ca6 <ICM20602_Write>:

void ICM20602_Write(uint8_t address, uint8_t value)
{
 8000ca6:	b500      	push	{lr}
 8000ca8:	b083      	sub	sp, #12
 8000caa:	f88d 0007 	strb.w	r0, [sp, #7]
 8000cae:	f88d 1006 	strb.w	r1, [sp, #6]
	Write_GPIO(PB, 12, LOW);
 8000cb2:	2200      	movs	r2, #0
 8000cb4:	210c      	movs	r1, #12
 8000cb6:	2002      	movs	r0, #2
 8000cb8:	f000 f9ea 	bl	8001090 <Write_GPIO>
	SPI2_TX(&address, 1);  // send address
 8000cbc:	2101      	movs	r1, #1
 8000cbe:	f10d 0007 	add.w	r0, sp, #7
 8000cc2:	f000 fa69 	bl	8001198 <SPI2_TX>
	SPI2_TX(&value, 1);  // send value
 8000cc6:	2101      	movs	r1, #1
 8000cc8:	f10d 0006 	add.w	r0, sp, #6
 8000ccc:	f000 fa64 	bl	8001198 <SPI2_TX>
	Write_GPIO(PB, 12, HIGH);
 8000cd0:	2201      	movs	r2, #1
 8000cd2:	210c      	movs	r1, #12
 8000cd4:	2002      	movs	r0, #2
 8000cd6:	f000 f9db 	bl	8001090 <Write_GPIO>
	HAL_Delay(20);
 8000cda:	2014      	movs	r0, #20
 8000cdc:	f000 ff62 	bl	8001ba4 <HAL_Delay>
}
 8000ce0:	b003      	add	sp, #12
 8000ce2:	f85d fb04 	ldr.w	pc, [sp], #4

08000ce6 <ICM20602_Remove_DC_Offset>:
{
 8000ce6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000cea:	b084      	sub	sp, #16
 8000cec:	460d      	mov	r5, r1
	int16_t offset[3] = {0,0,0};
 8000cee:	2400      	movs	r4, #0
 8000cf0:	f8ad 4008 	strh.w	r4, [sp, #8]
 8000cf4:	f8ad 400a 	strh.w	r4, [sp, #10]
 8000cf8:	f8ad 400c 	strh.w	r4, [sp, #12]
	for(i = 0; i < mean; i++)
 8000cfc:	e027      	b.n	8000d4e <ICM20602_Remove_DC_Offset+0x68>
		ICM20602_Read(ICM20602_REG_GYRO_XOUT_H, rxData, 6);
 8000cfe:	2206      	movs	r2, #6
 8000d00:	4669      	mov	r1, sp
 8000d02:	2043      	movs	r0, #67	@ 0x43
 8000d04:	f7ff ffaf 	bl	8000c66 <ICM20602_Read>
		offset[0] += (rxData[0] << 8) | rxData[1];
 8000d08:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8000d0c:	f89d 1000 	ldrb.w	r1, [sp]
 8000d10:	f89d 2001 	ldrb.w	r2, [sp, #1]
 8000d14:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000d18:	4413      	add	r3, r2
 8000d1a:	f8ad 3008 	strh.w	r3, [sp, #8]
		offset[1] += (rxData[2] << 8) | rxData[3];
 8000d1e:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8000d22:	f89d 1002 	ldrb.w	r1, [sp, #2]
 8000d26:	f89d 2003 	ldrb.w	r2, [sp, #3]
 8000d2a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000d2e:	4413      	add	r3, r2
 8000d30:	f8ad 300a 	strh.w	r3, [sp, #10]
		offset[2] += (rxData[4] << 8) | rxData[5];
 8000d34:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8000d38:	f89d 1004 	ldrb.w	r1, [sp, #4]
 8000d3c:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8000d40:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000d44:	4413      	add	r3, r2
 8000d46:	f8ad 300c 	strh.w	r3, [sp, #12]
	for(i = 0; i < mean; i++)
 8000d4a:	3401      	adds	r4, #1
 8000d4c:	b264      	sxtb	r4, r4
 8000d4e:	42ac      	cmp	r4, r5
 8000d50:	dbd5      	blt.n	8000cfe <ICM20602_Remove_DC_Offset+0x18>
	offset[0] /= mean;
 8000d52:	f9bd 7008 	ldrsh.w	r7, [sp, #8]
 8000d56:	fb97 f7f5 	sdiv	r7, r7, r5
 8000d5a:	b239      	sxth	r1, r7
 8000d5c:	f8ad 1008 	strh.w	r1, [sp, #8]
	offset[1] /= mean;
 8000d60:	f9bd 600a 	ldrsh.w	r6, [sp, #10]
 8000d64:	fb96 f6f5 	sdiv	r6, r6, r5
 8000d68:	fa0f f886 	sxth.w	r8, r6
 8000d6c:	f8ad 800a 	strh.w	r8, [sp, #10]
	offset[2] /= mean;
 8000d70:	f9bd 400c 	ldrsh.w	r4, [sp, #12]
 8000d74:	fb94 f4f5 	sdiv	r4, r4, r5
 8000d78:	b225      	sxth	r5, r4
 8000d7a:	f8ad 500c 	strh.w	r5, [sp, #12]
	ICM20602_Write(ICM20602_REG_XG_OFFS_USRH, (offset[0]*-2)>>8);
 8000d7e:	ebc1 71c1 	rsb	r1, r1, r1, lsl #31
 8000d82:	f3c1 11c7 	ubfx	r1, r1, #7, #8
 8000d86:	2013      	movs	r0, #19
 8000d88:	f7ff ff8d 	bl	8000ca6 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_XG_OFFS_USRL, offset[0]*-2);
 8000d8c:	ebc7 17c7 	rsb	r7, r7, r7, lsl #7
 8000d90:	0079      	lsls	r1, r7, #1
 8000d92:	f001 01fe 	and.w	r1, r1, #254	@ 0xfe
 8000d96:	2014      	movs	r0, #20
 8000d98:	f7ff ff85 	bl	8000ca6 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_YG_OFFS_USRH, (offset[1]*-2)>>8);
 8000d9c:	ebc8 78c8 	rsb	r8, r8, r8, lsl #31
 8000da0:	f3c8 11c7 	ubfx	r1, r8, #7, #8
 8000da4:	2015      	movs	r0, #21
 8000da6:	f7ff ff7e 	bl	8000ca6 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_YG_OFFS_USRL, offset[1]*-2);
 8000daa:	ebc6 16c6 	rsb	r6, r6, r6, lsl #7
 8000dae:	0071      	lsls	r1, r6, #1
 8000db0:	f001 01fe 	and.w	r1, r1, #254	@ 0xfe
 8000db4:	2016      	movs	r0, #22
 8000db6:	f7ff ff76 	bl	8000ca6 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_ZG_OFFS_USRH, (offset[2]*-2)>>8);
 8000dba:	ebc5 75c5 	rsb	r5, r5, r5, lsl #31
 8000dbe:	f3c5 11c7 	ubfx	r1, r5, #7, #8
 8000dc2:	2017      	movs	r0, #23
 8000dc4:	f7ff ff6f 	bl	8000ca6 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_ZG_OFFS_USRL, offset[2]*-2);
 8000dc8:	ebc4 14c4 	rsb	r4, r4, r4, lsl #7
 8000dcc:	0061      	lsls	r1, r4, #1
 8000dce:	f001 01fe 	and.w	r1, r1, #254	@ 0xfe
 8000dd2:	2018      	movs	r0, #24
 8000dd4:	f7ff ff67 	bl	8000ca6 <ICM20602_Write>
}
 8000dd8:	b004      	add	sp, #16
 8000dda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000dde <ICM20602_Init>:
{
 8000dde:	b530      	push	{r4, r5, lr}
 8000de0:	b083      	sub	sp, #12
 8000de2:	4604      	mov	r4, r0
	dev->gyroXRaw = 	0.0f;
 8000de4:	2500      	movs	r5, #0
 8000de6:	8005      	strh	r5, [r0, #0]
	dev->gyroYRaw = 	0.0f;
 8000de8:	8045      	strh	r5, [r0, #2]
	dev->gyroZRaw = 	0.0f;
 8000dea:	8085      	strh	r5, [r0, #4]
	dev->accXRaw = 		0.0f;
 8000dec:	80c5      	strh	r5, [r0, #6]
	dev->accYRaw = 		0.0f;
 8000dee:	8105      	strh	r5, [r0, #8]
	dev->accZRaw = 		0.0f;
 8000df0:	8145      	strh	r5, [r0, #10]
	dev->temperatureC = 0.0f;
 8000df2:	2300      	movs	r3, #0
 8000df4:	6243      	str	r3, [r0, #36]	@ 0x24
	Init_GPIO(PA,  10, IN, I_PP); // Init GPIO for the interrupt
 8000df6:	2302      	movs	r3, #2
 8000df8:	462a      	mov	r2, r5
 8000dfa:	210a      	movs	r1, #10
 8000dfc:	2001      	movs	r0, #1
 8000dfe:	f000 f8fd 	bl	8000ffc <Init_GPIO>
	ICM20602_Write(ICM20602_REG_PWR_MGMT_1, 0x80);
 8000e02:	2180      	movs	r1, #128	@ 0x80
 8000e04:	206b      	movs	r0, #107	@ 0x6b
 8000e06:	f7ff ff4e 	bl	8000ca6 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_I2C_IF, 0x40);
 8000e0a:	2140      	movs	r1, #64	@ 0x40
 8000e0c:	2070      	movs	r0, #112	@ 0x70
 8000e0e:	f7ff ff4a 	bl	8000ca6 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_PWR_MGMT_1, 0x01);
 8000e12:	2101      	movs	r1, #1
 8000e14:	206b      	movs	r0, #107	@ 0x6b
 8000e16:	f7ff ff46 	bl	8000ca6 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_SMPLRT_DIV, 0x00);
 8000e1a:	4629      	mov	r1, r5
 8000e1c:	2019      	movs	r0, #25
 8000e1e:	f7ff ff42 	bl	8000ca6 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_CONFIG, 0x05);
 8000e22:	2105      	movs	r1, #5
 8000e24:	201a      	movs	r0, #26
 8000e26:	f7ff ff3e 	bl	8000ca6 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_GYRO_CONFIG, 0x018);
 8000e2a:	2118      	movs	r1, #24
 8000e2c:	201b      	movs	r0, #27
 8000e2e:	f7ff ff3a 	bl	8000ca6 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_ACCEL_CONFIG, 0x18);
 8000e32:	2118      	movs	r1, #24
 8000e34:	201c      	movs	r0, #28
 8000e36:	f7ff ff36 	bl	8000ca6 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_ACCEL_CONFIG2, 0x03); // Acc FCHOICE 1kHz(bit3-0), DLPF fc 44.8Hz(bit2:0-011)
 8000e3a:	2103      	movs	r1, #3
 8000e3c:	201d      	movs	r0, #29
 8000e3e:	f7ff ff32 	bl	8000ca6 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_INT_ENABLE, 0x01);
 8000e42:	2101      	movs	r1, #1
 8000e44:	2038      	movs	r0, #56	@ 0x38
 8000e46:	f7ff ff2e 	bl	8000ca6 <ICM20602_Write>
	ICM20602_Read(ICM20602_REG_WHO_AM_I, rxData, 1);
 8000e4a:	2201      	movs	r2, #1
 8000e4c:	a901      	add	r1, sp, #4
 8000e4e:	2075      	movs	r0, #117	@ 0x75
 8000e50:	f7ff ff09 	bl	8000c66 <ICM20602_Read>
	ICM20602_Read(ICM20602_REG_I2C_IF, rxData, 1);
 8000e54:	2201      	movs	r2, #1
 8000e56:	a901      	add	r1, sp, #4
 8000e58:	2070      	movs	r0, #112	@ 0x70
 8000e5a:	f7ff ff04 	bl	8000c66 <ICM20602_Read>
	ICM20602_Read(ICM20602_REG_PWR_MGMT_1, rxData, 1);
 8000e5e:	2201      	movs	r2, #1
 8000e60:	a901      	add	r1, sp, #4
 8000e62:	206b      	movs	r0, #107	@ 0x6b
 8000e64:	f7ff feff 	bl	8000c66 <ICM20602_Read>
	ICM20602_Read(ICM20602_REG_SMPLRT_DIV, rxData, 1);
 8000e68:	2201      	movs	r2, #1
 8000e6a:	a901      	add	r1, sp, #4
 8000e6c:	2019      	movs	r0, #25
 8000e6e:	f7ff fefa 	bl	8000c66 <ICM20602_Read>
	ICM20602_Read(ICM20602_REG_CONFIG, rxData, 1);
 8000e72:	2201      	movs	r2, #1
 8000e74:	a901      	add	r1, sp, #4
 8000e76:	201a      	movs	r0, #26
 8000e78:	f7ff fef5 	bl	8000c66 <ICM20602_Read>
	ICM20602_Read(ICM20602_REG_ACCEL_CONFIG, rxData, 1);
 8000e7c:	2201      	movs	r2, #1
 8000e7e:	a901      	add	r1, sp, #4
 8000e80:	201c      	movs	r0, #28
 8000e82:	f7ff fef0 	bl	8000c66 <ICM20602_Read>
	ICM20602_Read(ICM20602_REG_ACCEL_CONFIG2, rxData, 1);
 8000e86:	2201      	movs	r2, #1
 8000e88:	a901      	add	r1, sp, #4
 8000e8a:	201d      	movs	r0, #29
 8000e8c:	f7ff feeb 	bl	8000c66 <ICM20602_Read>
	ICM20602_Remove_DC_Offset(dev,2);
 8000e90:	2102      	movs	r1, #2
 8000e92:	4620      	mov	r0, r4
 8000e94:	f7ff ff27 	bl	8000ce6 <ICM20602_Remove_DC_Offset>
}
 8000e98:	4628      	mov	r0, r5
 8000e9a:	b003      	add	sp, #12
 8000e9c:	bd30      	pop	{r4, r5, pc}
	...

08000ea0 <MEM2067_SDCardDetection>:
	printf("Unmounted.\n");

	return 0; // OK
}

uint8_t MEM2067_SDCardDetection(void) {
 8000ea0:	b510      	push	{r4, lr}

    FRESULT res = f_mount(&USERFatFS, (TCHAR const*)USERPath, 1);
 8000ea2:	2201      	movs	r2, #1
 8000ea4:	4906      	ldr	r1, [pc, #24]	@ (8000ec0 <MEM2067_SDCardDetection+0x20>)
 8000ea6:	4807      	ldr	r0, [pc, #28]	@ (8000ec4 <MEM2067_SDCardDetection+0x24>)
 8000ea8:	f004 f99c 	bl	80051e4 <f_mount>

    if (res == FR_OK) {
 8000eac:	b110      	cbz	r0, 8000eb4 <MEM2067_SDCardDetection+0x14>
        f_mount(NULL, (TCHAR const*)"", 1);
        return 0; // OK
    } else {
        return 1; // Erreur
 8000eae:	2401      	movs	r4, #1
    }
}
 8000eb0:	4620      	mov	r0, r4
 8000eb2:	bd10      	pop	{r4, pc}
 8000eb4:	4604      	mov	r4, r0
        f_mount(NULL, (TCHAR const*)"", 1);
 8000eb6:	2201      	movs	r2, #1
 8000eb8:	4903      	ldr	r1, [pc, #12]	@ (8000ec8 <MEM2067_SDCardDetection+0x28>)
 8000eba:	f004 f993 	bl	80051e4 <f_mount>
        return 0; // OK
 8000ebe:	e7f7      	b.n	8000eb0 <MEM2067_SDCardDetection+0x10>
 8000ec0:	200003e0 	.word	0x200003e0
 8000ec4:	200003e4 	.word	0x200003e4
 8000ec8:	08007cc4 	.word	0x08007cc4

08000ecc <Pyro_Init>:
 *      Author: gagno
 */

#include "GAUL_Drivers/Pyros.h"

void Pyro_Init(void) {
 8000ecc:	b508      	push	{r3, lr}

	// Pyros
	Init_GPIO(PB, 4, OUT2, O_GP_PP); // PyroON0
 8000ece:	2300      	movs	r3, #0
 8000ed0:	2202      	movs	r2, #2
 8000ed2:	2104      	movs	r1, #4
 8000ed4:	4610      	mov	r0, r2
 8000ed6:	f000 f891 	bl	8000ffc <Init_GPIO>
	Init_GPIO(PB, 5, OUT2, O_GP_PP); // PyroON1
 8000eda:	2300      	movs	r3, #0
 8000edc:	2202      	movs	r2, #2
 8000ede:	2105      	movs	r1, #5
 8000ee0:	4610      	mov	r0, r2
 8000ee2:	f000 f88b 	bl	8000ffc <Init_GPIO>
	Init_GPIO(PA, 15, OUT2, O_GP_PP); // Pyro_Test~
 8000ee6:	2300      	movs	r3, #0
 8000ee8:	2202      	movs	r2, #2
 8000eea:	210f      	movs	r1, #15
 8000eec:	2001      	movs	r0, #1
 8000eee:	f000 f885 	bl	8000ffc <Init_GPIO>
	// Set Pyro_Test~ (inverse) et Pyros_ON LOW
	Write_GPIO(PA, 15, HIGH);
 8000ef2:	2201      	movs	r2, #1
 8000ef4:	210f      	movs	r1, #15
 8000ef6:	4610      	mov	r0, r2
 8000ef8:	f000 f8ca 	bl	8001090 <Write_GPIO>
	Write_GPIO(PB, 4, LOW);
 8000efc:	2200      	movs	r2, #0
 8000efe:	2104      	movs	r1, #4
 8000f00:	2002      	movs	r0, #2
 8000f02:	f000 f8c5 	bl	8001090 <Write_GPIO>
	Write_GPIO(PB, 5, LOW);
 8000f06:	2200      	movs	r2, #0
 8000f08:	2105      	movs	r1, #5
 8000f0a:	2002      	movs	r0, #2
 8000f0c:	f000 f8c0 	bl	8001090 <Write_GPIO>
}
 8000f10:	bd08      	pop	{r3, pc}
	...

08000f14 <ws2812_timer2_init>:
static uint16_t ws2812_gpio_set_bits = 0;
static uint16_t dma_buffer[DMA_BUFFER_SIZE];


static void ws2812_timer2_init(void)
{
 8000f14:	b570      	push	{r4, r5, r6, lr}
 8000f16:	b08e      	sub	sp, #56	@ 0x38
    TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000f18:	2400      	movs	r4, #0
 8000f1a:	940a      	str	r4, [sp, #40]	@ 0x28
 8000f1c:	940b      	str	r4, [sp, #44]	@ 0x2c
 8000f1e:	940c      	str	r4, [sp, #48]	@ 0x30
 8000f20:	940d      	str	r4, [sp, #52]	@ 0x34
    TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000f22:	9408      	str	r4, [sp, #32]
 8000f24:	9409      	str	r4, [sp, #36]	@ 0x24
    TIM_OC_InitTypeDef sConfigOC = {0};
 8000f26:	9401      	str	r4, [sp, #4]
 8000f28:	9402      	str	r4, [sp, #8]
 8000f2a:	9403      	str	r4, [sp, #12]
 8000f2c:	9404      	str	r4, [sp, #16]
 8000f2e:	9405      	str	r4, [sp, #20]
 8000f30:	9406      	str	r4, [sp, #24]
 8000f32:	9407      	str	r4, [sp, #28]

    htimer2.Instance = TIM2;
 8000f34:	4d1a      	ldr	r5, [pc, #104]	@ (8000fa0 <ws2812_timer2_init+0x8c>)
 8000f36:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000f3a:	602b      	str	r3, [r5, #0]
    htimer2.Init.Prescaler = 0;
 8000f3c:	606c      	str	r4, [r5, #4]
    htimer2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000f3e:	60ac      	str	r4, [r5, #8]
    htimer2.Init.Period = WS2812_TIMER_PERIOD;
 8000f40:	235a      	movs	r3, #90	@ 0x5a
 8000f42:	60eb      	str	r3, [r5, #12]

    htimer2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000f44:	612c      	str	r4, [r5, #16]
    htimer2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000f46:	61ac      	str	r4, [r5, #24]
    HAL_TIM_Base_Init(&htimer2);
 8000f48:	4628      	mov	r0, r5
 8000f4a:	f002 fa73 	bl	8003434 <HAL_TIM_Base_Init>

    sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000f4e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000f52:	930a      	str	r3, [sp, #40]	@ 0x28
    HAL_TIM_ConfigClockSource(&htimer2, &sClockSourceConfig);
 8000f54:	a90a      	add	r1, sp, #40	@ 0x28
 8000f56:	4628      	mov	r0, r5
 8000f58:	f002 fbd6 	bl	8003708 <HAL_TIM_ConfigClockSource>
    HAL_TIM_PWM_Init(&htimer2);
 8000f5c:	4628      	mov	r0, r5
 8000f5e:	f002 fab8 	bl	80034d2 <HAL_TIM_PWM_Init>
    sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000f62:	9408      	str	r4, [sp, #32]
    sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000f64:	9409      	str	r4, [sp, #36]	@ 0x24
    HAL_TIMEx_MasterConfigSynchronization(&htimer2, &sMasterConfig);
 8000f66:	a908      	add	r1, sp, #32
 8000f68:	4628      	mov	r0, r5
 8000f6a:	f002 ff15 	bl	8003d98 <HAL_TIMEx_MasterConfigSynchronization>

    sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8000f6e:	2660      	movs	r6, #96	@ 0x60
 8000f70:	9601      	str	r6, [sp, #4]

    sConfigOC.Pulse = WS2812_TIMER_PWM_CH1_TIME;
 8000f72:	231c      	movs	r3, #28
 8000f74:	9302      	str	r3, [sp, #8]
    sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8000f76:	9403      	str	r4, [sp, #12]
    sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8000f78:	9405      	str	r4, [sp, #20]
    HAL_TIM_PWM_ConfigChannel(&htimer2, &sConfigOC, TIM_CHANNEL_1);
 8000f7a:	4622      	mov	r2, r4
 8000f7c:	a901      	add	r1, sp, #4
 8000f7e:	4628      	mov	r0, r5
 8000f80:	f002 fb00 	bl	8003584 <HAL_TIM_PWM_ConfigChannel>
    sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8000f84:	9601      	str	r6, [sp, #4]

    sConfigOC.Pulse = WS2812_TIMER_PWM_CH2_TIME;
 8000f86:	2339      	movs	r3, #57	@ 0x39
 8000f88:	9302      	str	r3, [sp, #8]
    sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8000f8a:	9403      	str	r4, [sp, #12]
    sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8000f8c:	9405      	str	r4, [sp, #20]
    HAL_TIM_PWM_ConfigChannel(&htimer2, &sConfigOC, TIM_CHANNEL_2);
 8000f8e:	2204      	movs	r2, #4
 8000f90:	eb0d 0102 	add.w	r1, sp, r2
 8000f94:	4628      	mov	r0, r5
 8000f96:	f002 faf5 	bl	8003584 <HAL_TIM_PWM_ConfigChannel>
}
 8000f9a:	b00e      	add	sp, #56	@ 0x38
 8000f9c:	bd70      	pop	{r4, r5, r6, pc}
 8000f9e:	bf00      	nop
 8000fa0:	200001f0 	.word	0x200001f0

08000fa4 <WS2812_Init>:
	__HAL_DMA_DISABLE(&hdma_tim2_pwm_ch1);
	__HAL_DMA_DISABLE(&hdma_tim2_pwm_ch2);
}

void WS2812_Init()
{
 8000fa4:	b500      	push	{lr}
 8000fa6:	b083      	sub	sp, #12
    /* DMA controller clock enable */
    __HAL_RCC_DMA1_CLK_ENABLE();
 8000fa8:	4b0e      	ldr	r3, [pc, #56]	@ (8000fe4 <WS2812_Init+0x40>)
 8000faa:	695a      	ldr	r2, [r3, #20]
 8000fac:	f042 0201 	orr.w	r2, r2, #1
 8000fb0:	615a      	str	r2, [r3, #20]
 8000fb2:	695b      	ldr	r3, [r3, #20]
 8000fb4:	f003 0301 	and.w	r3, r3, #1
 8000fb8:	9301      	str	r3, [sp, #4]
 8000fba:	9b01      	ldr	r3, [sp, #4]

    /* DMA interrupt init, not that we're using it... */
    HAL_NVIC_SetPriority(DMA1_Channel2_IRQn, 0, 0);
 8000fbc:	2200      	movs	r2, #0
 8000fbe:	4611      	mov	r1, r2
 8000fc0:	200c      	movs	r0, #12
 8000fc2:	f001 fa30 	bl	8002426 <HAL_NVIC_SetPriority>
    HAL_NVIC_SetPriority(DMA1_Channel5_IRQn, 0, 0);
 8000fc6:	2200      	movs	r2, #0
 8000fc8:	4611      	mov	r1, r2
 8000fca:	200f      	movs	r0, #15
 8000fcc:	f001 fa2b 	bl	8002426 <HAL_NVIC_SetPriority>
    HAL_NVIC_SetPriority(DMA1_Channel7_IRQn, 0, 0);
 8000fd0:	2200      	movs	r2, #0
 8000fd2:	4611      	mov	r1, r2
 8000fd4:	2011      	movs	r0, #17
 8000fd6:	f001 fa26 	bl	8002426 <HAL_NVIC_SetPriority>

    ws2812_timer2_init();
 8000fda:	f7ff ff9b 	bl	8000f14 <ws2812_timer2_init>
}
 8000fde:	b003      	add	sp, #12
 8000fe0:	f85d fb04 	ldr.w	pc, [sp], #4
 8000fe4:	40021000 	.word	0x40021000

08000fe8 <ADC_Calibration>:
	HAL_ADC_Start(hadc);

	return 0;
}

uint8_t ADC_Calibration(ADC_HandleTypeDef *hadc) {
 8000fe8:	b508      	push	{r3, lr}

	HAL_ADCEx_Calibration_Start(hadc);
 8000fea:	f001 f897 	bl	800211c <HAL_ADCEx_Calibration_Start>

	return 0;
}
 8000fee:	2000      	movs	r0, #0
 8000ff0:	bd08      	pop	{r3, pc}

08000ff2 <ADC_Stop>:

uint8_t ADC_Stop(ADC_HandleTypeDef *hadc) {
 8000ff2:	b508      	push	{r3, lr}

	HAL_ADC_Stop(hadc);
 8000ff4:	f000 fed2 	bl	8001d9c <HAL_ADC_Stop>

	return 0;
}
 8000ff8:	2000      	movs	r0, #0
 8000ffa:	bd08      	pop	{r3, pc}

08000ffc <Init_GPIO>:
#include "GAUL_Drivers/Low_Level_Drivers/GPIO_driver.h"

void Init_GPIO(unsigned short port, unsigned short pin, unsigned short dir, unsigned short opt)
{
 8000ffc:	b510      	push	{r4, lr}
 volatile unsigned long * CR;
 unsigned short tPIN = pin;
 unsigned short offset = 0x00;

	if(pin > 7)
 8000ffe:	2907      	cmp	r1, #7
 8001000:	d904      	bls.n	800100c <Init_GPIO+0x10>
		{
			tPIN -= 8;
 8001002:	3908      	subs	r1, #8
 8001004:	b289      	uxth	r1, r1
			offset = 0x01;
 8001006:	f04f 0e01 	mov.w	lr, #1
 800100a:	e001      	b.n	8001010 <Init_GPIO+0x14>
 unsigned short offset = 0x00;
 800100c:	f04f 0e00 	mov.w	lr, #0
		}

	if(port == 1)
 8001010:	2801      	cmp	r0, #1
 8001012:	d00f      	beq.n	8001034 <Init_GPIO+0x38>
		{
			RCC_APB2ENR |= 4; //// Enabling PORT A
			CR = (volatile unsigned long *) (&GPIO_A + offset);
		}
	else if(port == 2)
 8001014:	2802      	cmp	r0, #2
 8001016:	d02d      	beq.n	8001074 <Init_GPIO+0x78>
		{
			RCC_APB2ENR |= 8; //// Enabling PORT A
			CR = (volatile unsigned long *) (&GPIO_B + offset);
		}
	else if(port == 3)
 8001018:	2803      	cmp	r0, #3
 800101a:	d116      	bne.n	800104a <Init_GPIO+0x4e>
		{
			RCC_APB2ENR |= 0x10; //// Enabling PORT A
 800101c:	4c1b      	ldr	r4, [pc, #108]	@ (800108c <Init_GPIO+0x90>)
 800101e:	69a0      	ldr	r0, [r4, #24]
 8001020:	f040 0010 	orr.w	r0, r0, #16
 8001024:	61a0      	str	r0, [r4, #24]
			CR = (volatile unsigned long *) (&GPIO_C + offset);
 8001026:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800102a:	f10e 4c80 	add.w	ip, lr, #1073741824	@ 0x40000000
 800102e:	f50c 3c88 	add.w	ip, ip, #69632	@ 0x11000
 8001032:	e00a      	b.n	800104a <Init_GPIO+0x4e>
			RCC_APB2ENR |= 4; //// Enabling PORT A
 8001034:	4c15      	ldr	r4, [pc, #84]	@ (800108c <Init_GPIO+0x90>)
 8001036:	69a0      	ldr	r0, [r4, #24]
 8001038:	f040 0004 	orr.w	r0, r0, #4
 800103c:	61a0      	str	r0, [r4, #24]
			CR = (volatile unsigned long *) (&GPIO_A + offset);
 800103e:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8001042:	f10e 4c80 	add.w	ip, lr, #1073741824	@ 0x40000000
 8001046:	f50c 3c84 	add.w	ip, ip, #67584	@ 0x10800
		}

		*CR &= ~(0xf<<(tPIN)*4); ///Reset the taget pin
 800104a:	f8dc 0000 	ldr.w	r0, [ip]
 800104e:	0089      	lsls	r1, r1, #2
 8001050:	f04f 0e0f 	mov.w	lr, #15
 8001054:	fa0e fe01 	lsl.w	lr, lr, r1
 8001058:	ea20 000e 	bic.w	r0, r0, lr
 800105c:	f8cc 0000 	str.w	r0, [ip]
		*CR |= ((dir <<(tPIN*4)) | (opt<<(tPIN*4+2))); //// Set up the direction and the option of the PIN
 8001060:	f8dc 0000 	ldr.w	r0, [ip]
 8001064:	408a      	lsls	r2, r1
 8001066:	3102      	adds	r1, #2
 8001068:	408b      	lsls	r3, r1
 800106a:	431a      	orrs	r2, r3
 800106c:	4302      	orrs	r2, r0
 800106e:	f8cc 2000 	str.w	r2, [ip]
}
 8001072:	bd10      	pop	{r4, pc}
			RCC_APB2ENR |= 8; //// Enabling PORT A
 8001074:	4c05      	ldr	r4, [pc, #20]	@ (800108c <Init_GPIO+0x90>)
 8001076:	69a0      	ldr	r0, [r4, #24]
 8001078:	f040 0008 	orr.w	r0, r0, #8
 800107c:	61a0      	str	r0, [r4, #24]
			CR = (volatile unsigned long *) (&GPIO_B + offset);
 800107e:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8001082:	f10e 4c80 	add.w	ip, lr, #1073741824	@ 0x40000000
 8001086:	f50c 3c86 	add.w	ip, ip, #68608	@ 0x10c00
 800108a:	e7de      	b.n	800104a <Init_GPIO+0x4e>
 800108c:	40021000 	.word	0x40021000

08001090 <Write_GPIO>:
{
		volatile unsigned long * ODR;
		unsigned long offset = 0x03;


	if(port == 1)
 8001090:	2801      	cmp	r0, #1
 8001092:	d005      	beq.n	80010a0 <Write_GPIO+0x10>
		{
			ODR = (volatile unsigned long *) (&GPIO_A + offset);
		}
	else if(port == 2)
 8001094:	2802      	cmp	r0, #2
 8001096:	d00a      	beq.n	80010ae <Write_GPIO+0x1e>
		{
			ODR = (volatile unsigned long *) (&GPIO_B + offset);
		}
	else if(port == 3)
 8001098:	2803      	cmp	r0, #3
 800109a:	d102      	bne.n	80010a2 <Write_GPIO+0x12>
	{
		ODR = (volatile unsigned long *) (&GPIO_C + offset);
 800109c:	4b09      	ldr	r3, [pc, #36]	@ (80010c4 <Write_GPIO+0x34>)
 800109e:	e000      	b.n	80010a2 <Write_GPIO+0x12>
			ODR = (volatile unsigned long *) (&GPIO_A + offset);
 80010a0:	4b09      	ldr	r3, [pc, #36]	@ (80010c8 <Write_GPIO+0x38>)
	}
	state ? (*ODR |= (state<<pin)) : (*ODR &= ~(1<<pin));
 80010a2:	b132      	cbz	r2, 80010b2 <Write_GPIO+0x22>
 80010a4:	6818      	ldr	r0, [r3, #0]
 80010a6:	408a      	lsls	r2, r1
 80010a8:	4302      	orrs	r2, r0
 80010aa:	601a      	str	r2, [r3, #0]
 80010ac:	4770      	bx	lr
			ODR = (volatile unsigned long *) (&GPIO_B + offset);
 80010ae:	4b07      	ldr	r3, [pc, #28]	@ (80010cc <Write_GPIO+0x3c>)
 80010b0:	e7f7      	b.n	80010a2 <Write_GPIO+0x12>
	state ? (*ODR |= (state<<pin)) : (*ODR &= ~(1<<pin));
 80010b2:	681a      	ldr	r2, [r3, #0]
 80010b4:	2001      	movs	r0, #1
 80010b6:	fa00 f101 	lsl.w	r1, r0, r1
 80010ba:	ea22 0201 	bic.w	r2, r2, r1
 80010be:	601a      	str	r2, [r3, #0]
}
 80010c0:	4770      	bx	lr
 80010c2:	bf00      	nop
 80010c4:	4001100c 	.word	0x4001100c
 80010c8:	4001080c 	.word	0x4001080c
 80010cc:	40010c0c 	.word	0x40010c0c

080010d0 <SPI_Init>:

#include "main.h"
#include "GAUL_Drivers/Low_Level_Drivers/GPIO_driver.h"
#include "GAUL_Drivers/Low_Level_Drivers/SPI_driver.h"

void SPI_Init(unsigned short spi) {
 80010d0:	b508      	push	{r3, lr}
    if(spi == 1) {
 80010d2:	2801      	cmp	r0, #1
 80010d4:	d002      	beq.n	80010dc <SPI_Init+0xc>
        Init_GPIO(PA, 7, OUT50, O_AF_PP); // MOSI SPI1

        Write_GPIO(PA, 4, HIGH);

        SPI1->CR1 = SPI_CR1_MSTR | SPI_CR1_BR_1 | SPI_CR1_BR_2 | SPI_CR1_SSM | SPI_CR1_SSI | SPI_CR1_SPE;
    } else if(spi == 2) {
 80010d6:	2802      	cmp	r0, #2
 80010d8:	d026      	beq.n	8001128 <SPI_Init+0x58>
        Write_GPIO(PA, 8, HIGH);
        Write_GPIO(PB, 12, HIGH);

        SPI2->CR1 = SPI_CR1_MSTR | SPI_CR1_BR_1 | SPI_CR1_BR_2 | SPI_CR1_SSM | SPI_CR1_SSI | SPI_CR1_SPE;
    }
}
 80010da:	bd08      	pop	{r3, pc}
        RCC->APB2ENR |= RCC_APB2ENR_SPI1EN;
 80010dc:	4a2b      	ldr	r2, [pc, #172]	@ (800118c <SPI_Init+0xbc>)
 80010de:	6993      	ldr	r3, [r2, #24]
 80010e0:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80010e4:	6193      	str	r3, [r2, #24]
        Init_GPIO(PA, 4, OUT50, O_GP_PP); // CS
 80010e6:	2300      	movs	r3, #0
 80010e8:	2203      	movs	r2, #3
 80010ea:	2104      	movs	r1, #4
 80010ec:	f7ff ff86 	bl	8000ffc <Init_GPIO>
        Init_GPIO(PA, 5, OUT50, O_AF_PP); // CLK
 80010f0:	2302      	movs	r3, #2
 80010f2:	2203      	movs	r2, #3
 80010f4:	2105      	movs	r1, #5
 80010f6:	2001      	movs	r0, #1
 80010f8:	f7ff ff80 	bl	8000ffc <Init_GPIO>
        Init_GPIO(PA, 6, IN, I_PP);    // MISO SPI1
 80010fc:	2302      	movs	r3, #2
 80010fe:	2200      	movs	r2, #0
 8001100:	2106      	movs	r1, #6
 8001102:	2001      	movs	r0, #1
 8001104:	f7ff ff7a 	bl	8000ffc <Init_GPIO>
        Init_GPIO(PA, 7, OUT50, O_AF_PP); // MOSI SPI1
 8001108:	2302      	movs	r3, #2
 800110a:	2203      	movs	r2, #3
 800110c:	2107      	movs	r1, #7
 800110e:	2001      	movs	r0, #1
 8001110:	f7ff ff74 	bl	8000ffc <Init_GPIO>
        Write_GPIO(PA, 4, HIGH);
 8001114:	2201      	movs	r2, #1
 8001116:	2104      	movs	r1, #4
 8001118:	4610      	mov	r0, r2
 800111a:	f7ff ffb9 	bl	8001090 <Write_GPIO>
        SPI1->CR1 = SPI_CR1_MSTR | SPI_CR1_BR_1 | SPI_CR1_BR_2 | SPI_CR1_SSM | SPI_CR1_SSI | SPI_CR1_SPE;
 800111e:	4b1c      	ldr	r3, [pc, #112]	@ (8001190 <SPI_Init+0xc0>)
 8001120:	f44f 725d 	mov.w	r2, #884	@ 0x374
 8001124:	601a      	str	r2, [r3, #0]
 8001126:	e7d8      	b.n	80010da <SPI_Init+0xa>
        RCC->APB1ENR |= RCC_APB1ENR_SPI2EN;
 8001128:	4a18      	ldr	r2, [pc, #96]	@ (800118c <SPI_Init+0xbc>)
 800112a:	69d3      	ldr	r3, [r2, #28]
 800112c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001130:	61d3      	str	r3, [r2, #28]
        Init_GPIO(PA, 8, OUT50, O_GP_PP); // CS (optionnel)
 8001132:	2300      	movs	r3, #0
 8001134:	2203      	movs	r2, #3
 8001136:	2108      	movs	r1, #8
 8001138:	2001      	movs	r0, #1
 800113a:	f7ff ff5f 	bl	8000ffc <Init_GPIO>
        Init_GPIO(PB, 12, OUT50, O_GP_PP); // CS
 800113e:	2300      	movs	r3, #0
 8001140:	2203      	movs	r2, #3
 8001142:	210c      	movs	r1, #12
 8001144:	2002      	movs	r0, #2
 8001146:	f7ff ff59 	bl	8000ffc <Init_GPIO>
        Init_GPIO(PB, 13, OUT50, O_AF_PP); // CLK
 800114a:	2302      	movs	r3, #2
 800114c:	2203      	movs	r2, #3
 800114e:	210d      	movs	r1, #13
 8001150:	4618      	mov	r0, r3
 8001152:	f7ff ff53 	bl	8000ffc <Init_GPIO>
        Init_GPIO(PB, 14, IN, I_PP);    // MISO SPI2
 8001156:	2302      	movs	r3, #2
 8001158:	2200      	movs	r2, #0
 800115a:	210e      	movs	r1, #14
 800115c:	4618      	mov	r0, r3
 800115e:	f7ff ff4d 	bl	8000ffc <Init_GPIO>
        Init_GPIO(PB, 15, OUT50, O_AF_PP); // MOSI SPI2
 8001162:	2302      	movs	r3, #2
 8001164:	2203      	movs	r2, #3
 8001166:	210f      	movs	r1, #15
 8001168:	4618      	mov	r0, r3
 800116a:	f7ff ff47 	bl	8000ffc <Init_GPIO>
        Write_GPIO(PA, 8, HIGH);
 800116e:	2201      	movs	r2, #1
 8001170:	2108      	movs	r1, #8
 8001172:	4610      	mov	r0, r2
 8001174:	f7ff ff8c 	bl	8001090 <Write_GPIO>
        Write_GPIO(PB, 12, HIGH);
 8001178:	2201      	movs	r2, #1
 800117a:	210c      	movs	r1, #12
 800117c:	2002      	movs	r0, #2
 800117e:	f7ff ff87 	bl	8001090 <Write_GPIO>
        SPI2->CR1 = SPI_CR1_MSTR | SPI_CR1_BR_1 | SPI_CR1_BR_2 | SPI_CR1_SSM | SPI_CR1_SSI | SPI_CR1_SPE;
 8001182:	4b04      	ldr	r3, [pc, #16]	@ (8001194 <SPI_Init+0xc4>)
 8001184:	f44f 725d 	mov.w	r2, #884	@ 0x374
 8001188:	601a      	str	r2, [r3, #0]
}
 800118a:	e7a6      	b.n	80010da <SPI_Init+0xa>
 800118c:	40021000 	.word	0x40021000
 8001190:	40013000 	.word	0x40013000
 8001194:	40003800 	.word	0x40003800

08001198 <SPI2_TX>:

    uint8_t temp = SPI1->DR;
    temp = SPI1->SR;
}

void SPI2_TX(uint8_t *data, int size) {
 8001198:	468c      	mov	ip, r1

    for (int i = 0; i < size; ++i) {
 800119a:	2200      	movs	r2, #0
 800119c:	e008      	b.n	80011b0 <SPI2_TX+0x18>
        while (!(SPI2->SR & SPI_SR_TXE)) {}
 800119e:	4b0c      	ldr	r3, [pc, #48]	@ (80011d0 <SPI2_TX+0x38>)
 80011a0:	689b      	ldr	r3, [r3, #8]
 80011a2:	f013 0f02 	tst.w	r3, #2
 80011a6:	d0fa      	beq.n	800119e <SPI2_TX+0x6>
        SPI2->DR = data[i];
 80011a8:	5c81      	ldrb	r1, [r0, r2]
 80011aa:	4b09      	ldr	r3, [pc, #36]	@ (80011d0 <SPI2_TX+0x38>)
 80011ac:	60d9      	str	r1, [r3, #12]
    for (int i = 0; i < size; ++i) {
 80011ae:	3201      	adds	r2, #1
 80011b0:	4562      	cmp	r2, ip
 80011b2:	dbf4      	blt.n	800119e <SPI2_TX+0x6>
    }

    while (!(SPI2->SR & SPI_SR_TXE)) {}
 80011b4:	4b06      	ldr	r3, [pc, #24]	@ (80011d0 <SPI2_TX+0x38>)
 80011b6:	689b      	ldr	r3, [r3, #8]
 80011b8:	f013 0f02 	tst.w	r3, #2
 80011bc:	d0fa      	beq.n	80011b4 <SPI2_TX+0x1c>
    while (SPI2->SR & SPI_SR_BSY) {}
 80011be:	4b04      	ldr	r3, [pc, #16]	@ (80011d0 <SPI2_TX+0x38>)
 80011c0:	689b      	ldr	r3, [r3, #8]
 80011c2:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80011c6:	d1fa      	bne.n	80011be <SPI2_TX+0x26>

    uint8_t temp = SPI2->DR;
 80011c8:	4b01      	ldr	r3, [pc, #4]	@ (80011d0 <SPI2_TX+0x38>)
 80011ca:	68da      	ldr	r2, [r3, #12]
    temp = SPI2->SR;
 80011cc:	689b      	ldr	r3, [r3, #8]
}
 80011ce:	4770      	bx	lr
 80011d0:	40003800 	.word	0x40003800

080011d4 <SPI2_RX>:
    }
}

void SPI2_RX(uint8_t *data, int size) {

    while (size) {
 80011d4:	e011      	b.n	80011fa <SPI2_RX+0x26>
        while (SPI2->SR & SPI_SR_BSY) {}
 80011d6:	4b0a      	ldr	r3, [pc, #40]	@ (8001200 <SPI2_RX+0x2c>)
 80011d8:	689b      	ldr	r3, [r3, #8]
 80011da:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80011de:	d1fa      	bne.n	80011d6 <SPI2_RX+0x2>
        SPI2->DR = 0;
 80011e0:	4b07      	ldr	r3, [pc, #28]	@ (8001200 <SPI2_RX+0x2c>)
 80011e2:	2200      	movs	r2, #0
 80011e4:	60da      	str	r2, [r3, #12]
        while (!(SPI2->SR & SPI_SR_RXNE)) {}
 80011e6:	4b06      	ldr	r3, [pc, #24]	@ (8001200 <SPI2_RX+0x2c>)
 80011e8:	689b      	ldr	r3, [r3, #8]
 80011ea:	f013 0f01 	tst.w	r3, #1
 80011ee:	d0fa      	beq.n	80011e6 <SPI2_RX+0x12>
        *data++ = SPI2->DR;
 80011f0:	4b03      	ldr	r3, [pc, #12]	@ (8001200 <SPI2_RX+0x2c>)
 80011f2:	68db      	ldr	r3, [r3, #12]
 80011f4:	f800 3b01 	strb.w	r3, [r0], #1
        --size;
 80011f8:	3901      	subs	r1, #1
    while (size) {
 80011fa:	2900      	cmp	r1, #0
 80011fc:	d1eb      	bne.n	80011d6 <SPI2_RX+0x2>
    }
}
 80011fe:	4770      	bx	lr
 8001200:	40003800 	.word	0x40003800

08001204 <USART_Init>:
#include "GAUL_Drivers/Low_Level_Drivers/USART_driver.h"
#include "main.h"


void USART_Init(unsigned short usart)
{
 8001204:	b508      	push	{r3, lr}
    if(usart == 1) {
 8001206:	2801      	cmp	r0, #1
 8001208:	d004      	beq.n	8001214 <USART_Init+0x10>
        USART1->CR1 |= USART_CR1_TE; // Activer la transmission
        USART1->CR1 |= USART_CR1_RE; // Activer la réception
        // Activation des interruptions globales pour USART1
        NVIC_EnableIRQ(USART1_IRQn);
    }
    else if(usart == 2) {
 800120a:	2802      	cmp	r0, #2
 800120c:	d024      	beq.n	8001258 <USART_Init+0x54>
        USART2->CR1 |= USART_CR1_TE; // Activer la transmission
        USART2->CR1 |= USART_CR1_RE; // Activer la réception
        // Activation des interruptions globales pour USART2
        NVIC_EnableIRQ(USART2_IRQn);
    }
    else if(usart == 3) {
 800120e:	2803      	cmp	r0, #3
 8001210:	d044      	beq.n	800129c <USART_Init+0x98>
        USART3->CR1 |= USART_CR1_TE; // Activer la transmission
        USART3->CR1 |= USART_CR1_RE; // Activer la réception
        // Activation des interruptions globales pour USART3
        NVIC_EnableIRQ(USART3_IRQn);
    }
}
 8001212:	bd08      	pop	{r3, pc}
        RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 8001214:	4a32      	ldr	r2, [pc, #200]	@ (80012e0 <USART_Init+0xdc>)
 8001216:	6993      	ldr	r3, [r2, #24]
 8001218:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800121c:	6193      	str	r3, [r2, #24]
        Init_GPIO(PB, 6, OUT50, O_AF_PP); // TX
 800121e:	2302      	movs	r3, #2
 8001220:	2203      	movs	r2, #3
 8001222:	2106      	movs	r1, #6
 8001224:	4618      	mov	r0, r3
 8001226:	f7ff fee9 	bl	8000ffc <Init_GPIO>
        Init_GPIO(PB, 7, IN, I_PP); // RX
 800122a:	2302      	movs	r3, #2
 800122c:	2200      	movs	r2, #0
 800122e:	2107      	movs	r1, #7
 8001230:	4618      	mov	r0, r3
 8001232:	f7ff fee3 	bl	8000ffc <Init_GPIO>
        USART1->CR1 |= USART_CR1_UE; // Activer USART (0x0C)
 8001236:	4b2b      	ldr	r3, [pc, #172]	@ (80012e4 <USART_Init+0xe0>)
 8001238:	68da      	ldr	r2, [r3, #12]
 800123a:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800123e:	60da      	str	r2, [r3, #12]
        USART1->CR1 |= USART_CR1_TE; // Activer la transmission
 8001240:	68da      	ldr	r2, [r3, #12]
 8001242:	f042 0208 	orr.w	r2, r2, #8
 8001246:	60da      	str	r2, [r3, #12]
        USART1->CR1 |= USART_CR1_RE; // Activer la réception
 8001248:	68da      	ldr	r2, [r3, #12]
 800124a:	f042 0204 	orr.w	r2, r2, #4
 800124e:	60da      	str	r2, [r3, #12]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001250:	4b25      	ldr	r3, [pc, #148]	@ (80012e8 <USART_Init+0xe4>)
 8001252:	2220      	movs	r2, #32
 8001254:	605a      	str	r2, [r3, #4]
 8001256:	e7dc      	b.n	8001212 <USART_Init+0xe>
        RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 8001258:	4a21      	ldr	r2, [pc, #132]	@ (80012e0 <USART_Init+0xdc>)
 800125a:	69d3      	ldr	r3, [r2, #28]
 800125c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001260:	61d3      	str	r3, [r2, #28]
        Init_GPIO(PA, 2, OUT50, O_AF_PP); // TX
 8001262:	2302      	movs	r3, #2
 8001264:	2203      	movs	r2, #3
 8001266:	4619      	mov	r1, r3
 8001268:	2001      	movs	r0, #1
 800126a:	f7ff fec7 	bl	8000ffc <Init_GPIO>
        Init_GPIO(PA, 3, IN, I_PP); // RX
 800126e:	2302      	movs	r3, #2
 8001270:	2200      	movs	r2, #0
 8001272:	2103      	movs	r1, #3
 8001274:	2001      	movs	r0, #1
 8001276:	f7ff fec1 	bl	8000ffc <Init_GPIO>
        USART2->CR1 |= USART_CR1_UE; // Activer USART (0x10)
 800127a:	4b1c      	ldr	r3, [pc, #112]	@ (80012ec <USART_Init+0xe8>)
 800127c:	68da      	ldr	r2, [r3, #12]
 800127e:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8001282:	60da      	str	r2, [r3, #12]
        USART2->CR1 |= USART_CR1_TE; // Activer la transmission
 8001284:	68da      	ldr	r2, [r3, #12]
 8001286:	f042 0208 	orr.w	r2, r2, #8
 800128a:	60da      	str	r2, [r3, #12]
        USART2->CR1 |= USART_CR1_RE; // Activer la réception
 800128c:	68da      	ldr	r2, [r3, #12]
 800128e:	f042 0204 	orr.w	r2, r2, #4
 8001292:	60da      	str	r2, [r3, #12]
 8001294:	4b14      	ldr	r3, [pc, #80]	@ (80012e8 <USART_Init+0xe4>)
 8001296:	2240      	movs	r2, #64	@ 0x40
 8001298:	605a      	str	r2, [r3, #4]
 800129a:	e7ba      	b.n	8001212 <USART_Init+0xe>
        RCC->APB1ENR |= RCC_APB1ENR_USART3EN ;
 800129c:	4a10      	ldr	r2, [pc, #64]	@ (80012e0 <USART_Init+0xdc>)
 800129e:	69d3      	ldr	r3, [r2, #28]
 80012a0:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80012a4:	61d3      	str	r3, [r2, #28]
        Init_GPIO(PB, 10, OUT50, O_AF_PP); // TX
 80012a6:	2302      	movs	r3, #2
 80012a8:	2203      	movs	r2, #3
 80012aa:	210a      	movs	r1, #10
 80012ac:	4618      	mov	r0, r3
 80012ae:	f7ff fea5 	bl	8000ffc <Init_GPIO>
        Init_GPIO(PB, 11, IN, I_PP); // RX
 80012b2:	2302      	movs	r3, #2
 80012b4:	2200      	movs	r2, #0
 80012b6:	210b      	movs	r1, #11
 80012b8:	4618      	mov	r0, r3
 80012ba:	f7ff fe9f 	bl	8000ffc <Init_GPIO>
        USART3->CR1 |= USART_CR1_UE; // Activer USART (0x14)
 80012be:	4b0c      	ldr	r3, [pc, #48]	@ (80012f0 <USART_Init+0xec>)
 80012c0:	68da      	ldr	r2, [r3, #12]
 80012c2:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80012c6:	60da      	str	r2, [r3, #12]
        USART3->CR1 |= USART_CR1_TE; // Activer la transmission
 80012c8:	68da      	ldr	r2, [r3, #12]
 80012ca:	f042 0208 	orr.w	r2, r2, #8
 80012ce:	60da      	str	r2, [r3, #12]
        USART3->CR1 |= USART_CR1_RE; // Activer la réception
 80012d0:	68da      	ldr	r2, [r3, #12]
 80012d2:	f042 0204 	orr.w	r2, r2, #4
 80012d6:	60da      	str	r2, [r3, #12]
 80012d8:	4b03      	ldr	r3, [pc, #12]	@ (80012e8 <USART_Init+0xe4>)
 80012da:	2280      	movs	r2, #128	@ 0x80
 80012dc:	605a      	str	r2, [r3, #4]
}
 80012de:	e798      	b.n	8001212 <USART_Init+0xe>
 80012e0:	40021000 	.word	0x40021000
 80012e4:	40013800 	.word	0x40013800
 80012e8:	e000e100 	.word	0xe000e100
 80012ec:	40004400 	.word	0x40004400
 80012f0:	40004800 	.word	0x40004800

080012f4 <ITM_SendChar>:
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80012f4:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80012f8:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	@ 0xe80
 80012fc:	f013 0f01 	tst.w	r3, #1
 8001300:	d011      	beq.n	8001326 <ITM_SendChar+0x32>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 8001302:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8001306:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	@ 0xe00
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 800130a:	f013 0f01 	tst.w	r3, #1
 800130e:	d101      	bne.n	8001314 <ITM_SendChar+0x20>
 8001310:	4770      	bx	lr
  {
    while (ITM->PORT[0U].u32 == 0UL)
    {
      __NOP();
 8001312:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 8001314:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8001318:	681b      	ldr	r3, [r3, #0]
 800131a:	2b00      	cmp	r3, #0
 800131c:	d0f9      	beq.n	8001312 <ITM_SendChar+0x1e>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 800131e:	b2c3      	uxtb	r3, r0
 8001320:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 8001324:	7013      	strb	r3, [r2, #0]
  }
  return (ch);
}
 8001326:	4770      	bx	lr

08001328 <_write>:

}

/* USER CODE BEGIN 4 */
int _write(int le, char *ptr, int len)
{
 8001328:	b570      	push	{r4, r5, r6, lr}
 800132a:	460c      	mov	r4, r1
 800132c:	4616      	mov	r6, r2
	int DataIdx;
	for(DataIdx = 0; DataIdx < len; DataIdx++)
 800132e:	2500      	movs	r5, #0
 8001330:	e004      	b.n	800133c <_write+0x14>
	{
		ITM_SendChar(*ptr++);
 8001332:	f814 0b01 	ldrb.w	r0, [r4], #1
 8001336:	f7ff ffdd 	bl	80012f4 <ITM_SendChar>
	for(DataIdx = 0; DataIdx < len; DataIdx++)
 800133a:	3501      	adds	r5, #1
 800133c:	42b5      	cmp	r5, r6
 800133e:	dbf8      	blt.n	8001332 <_write+0xa>
	}
	return len;
}
 8001340:	4630      	mov	r0, r6
 8001342:	bd70      	pop	{r4, r5, r6, pc}

08001344 <Error_Handler>:
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001344:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001346:	e7fe      	b.n	8001346 <Error_Handler+0x2>

08001348 <MX_USART1_UART_Init>:
{
 8001348:	b508      	push	{r3, lr}
  huart1.Instance = USART1;
 800134a:	480a      	ldr	r0, [pc, #40]	@ (8001374 <MX_USART1_UART_Init+0x2c>)
 800134c:	4b0a      	ldr	r3, [pc, #40]	@ (8001378 <MX_USART1_UART_Init+0x30>)
 800134e:	6003      	str	r3, [r0, #0]
  huart1.Init.BaudRate = 9600;
 8001350:	f44f 5316 	mov.w	r3, #9600	@ 0x2580
 8001354:	6043      	str	r3, [r0, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8001356:	2300      	movs	r3, #0
 8001358:	6083      	str	r3, [r0, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 800135a:	60c3      	str	r3, [r0, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 800135c:	6103      	str	r3, [r0, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 800135e:	220c      	movs	r2, #12
 8001360:	6142      	str	r2, [r0, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001362:	6183      	str	r3, [r0, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8001364:	61c3      	str	r3, [r0, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8001366:	f002 fd75 	bl	8003e54 <HAL_UART_Init>
 800136a:	b900      	cbnz	r0, 800136e <MX_USART1_UART_Init+0x26>
}
 800136c:	bd08      	pop	{r3, pc}
    Error_Handler();
 800136e:	f7ff ffe9 	bl	8001344 <Error_Handler>
 8001372:	bf00      	nop
 8001374:	200002c8 	.word	0x200002c8
 8001378:	40013800 	.word	0x40013800

0800137c <MX_USART2_UART_Init>:
{
 800137c:	b508      	push	{r3, lr}
  huart2.Instance = USART2;
 800137e:	480a      	ldr	r0, [pc, #40]	@ (80013a8 <MX_USART2_UART_Init+0x2c>)
 8001380:	4b0a      	ldr	r3, [pc, #40]	@ (80013ac <MX_USART2_UART_Init+0x30>)
 8001382:	6003      	str	r3, [r0, #0]
  huart2.Init.BaudRate = 9600;
 8001384:	f44f 5316 	mov.w	r3, #9600	@ 0x2580
 8001388:	6043      	str	r3, [r0, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800138a:	2300      	movs	r3, #0
 800138c:	6083      	str	r3, [r0, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 800138e:	60c3      	str	r3, [r0, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8001390:	6103      	str	r3, [r0, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8001392:	220c      	movs	r2, #12
 8001394:	6142      	str	r2, [r0, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001396:	6183      	str	r3, [r0, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8001398:	61c3      	str	r3, [r0, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800139a:	f002 fd5b 	bl	8003e54 <HAL_UART_Init>
 800139e:	b900      	cbnz	r0, 80013a2 <MX_USART2_UART_Init+0x26>
}
 80013a0:	bd08      	pop	{r3, pc}
    Error_Handler();
 80013a2:	f7ff ffcf 	bl	8001344 <Error_Handler>
 80013a6:	bf00      	nop
 80013a8:	20000280 	.word	0x20000280
 80013ac:	40004400 	.word	0x40004400

080013b0 <MX_USART3_UART_Init>:
{
 80013b0:	b508      	push	{r3, lr}
  huart3.Instance = USART3;
 80013b2:	480a      	ldr	r0, [pc, #40]	@ (80013dc <MX_USART3_UART_Init+0x2c>)
 80013b4:	4b0a      	ldr	r3, [pc, #40]	@ (80013e0 <MX_USART3_UART_Init+0x30>)
 80013b6:	6003      	str	r3, [r0, #0]
  huart3.Init.BaudRate = 9600;
 80013b8:	f44f 5316 	mov.w	r3, #9600	@ 0x2580
 80013bc:	6043      	str	r3, [r0, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 80013be:	2300      	movs	r3, #0
 80013c0:	6083      	str	r3, [r0, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 80013c2:	60c3      	str	r3, [r0, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 80013c4:	6103      	str	r3, [r0, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 80013c6:	220c      	movs	r2, #12
 80013c8:	6142      	str	r2, [r0, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80013ca:	6183      	str	r3, [r0, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 80013cc:	61c3      	str	r3, [r0, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 80013ce:	f002 fd41 	bl	8003e54 <HAL_UART_Init>
 80013d2:	b900      	cbnz	r0, 80013d6 <MX_USART3_UART_Init+0x26>
}
 80013d4:	bd08      	pop	{r3, pc}
    Error_Handler();
 80013d6:	f7ff ffb5 	bl	8001344 <Error_Handler>
 80013da:	bf00      	nop
 80013dc:	20000238 	.word	0x20000238
 80013e0:	40004800 	.word	0x40004800

080013e4 <MX_TIM3_Init>:
{
 80013e4:	b500      	push	{lr}
 80013e6:	b08f      	sub	sp, #60	@ 0x3c
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80013e8:	2300      	movs	r3, #0
 80013ea:	930a      	str	r3, [sp, #40]	@ 0x28
 80013ec:	930b      	str	r3, [sp, #44]	@ 0x2c
 80013ee:	930c      	str	r3, [sp, #48]	@ 0x30
 80013f0:	930d      	str	r3, [sp, #52]	@ 0x34
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80013f2:	9308      	str	r3, [sp, #32]
 80013f4:	9309      	str	r3, [sp, #36]	@ 0x24
  TIM_OC_InitTypeDef sConfigOC = {0};
 80013f6:	9301      	str	r3, [sp, #4]
 80013f8:	9302      	str	r3, [sp, #8]
 80013fa:	9303      	str	r3, [sp, #12]
 80013fc:	9304      	str	r3, [sp, #16]
 80013fe:	9305      	str	r3, [sp, #20]
 8001400:	9306      	str	r3, [sp, #24]
 8001402:	9307      	str	r3, [sp, #28]
  htim3.Instance = TIM3;
 8001404:	481e      	ldr	r0, [pc, #120]	@ (8001480 <MX_TIM3_Init+0x9c>)
 8001406:	4a1f      	ldr	r2, [pc, #124]	@ (8001484 <MX_TIM3_Init+0xa0>)
 8001408:	6002      	str	r2, [r0, #0]
  htim3.Init.Prescaler = 127;
 800140a:	227f      	movs	r2, #127	@ 0x7f
 800140c:	6042      	str	r2, [r0, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 800140e:	6083      	str	r3, [r0, #8]
  htim3.Init.Period = 20;
 8001410:	2214      	movs	r2, #20
 8001412:	60c2      	str	r2, [r0, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001414:	6103      	str	r3, [r0, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001416:	6183      	str	r3, [r0, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001418:	f002 f80c 	bl	8003434 <HAL_TIM_Base_Init>
 800141c:	bb28      	cbnz	r0, 800146a <MX_TIM3_Init+0x86>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800141e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001422:	930a      	str	r3, [sp, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001424:	a90a      	add	r1, sp, #40	@ 0x28
 8001426:	4816      	ldr	r0, [pc, #88]	@ (8001480 <MX_TIM3_Init+0x9c>)
 8001428:	f002 f96e 	bl	8003708 <HAL_TIM_ConfigClockSource>
 800142c:	b9f8      	cbnz	r0, 800146e <MX_TIM3_Init+0x8a>
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 800142e:	4814      	ldr	r0, [pc, #80]	@ (8001480 <MX_TIM3_Init+0x9c>)
 8001430:	f002 f84f 	bl	80034d2 <HAL_TIM_PWM_Init>
 8001434:	b9e8      	cbnz	r0, 8001472 <MX_TIM3_Init+0x8e>
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001436:	2300      	movs	r3, #0
 8001438:	9308      	str	r3, [sp, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800143a:	9309      	str	r3, [sp, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 800143c:	a908      	add	r1, sp, #32
 800143e:	4810      	ldr	r0, [pc, #64]	@ (8001480 <MX_TIM3_Init+0x9c>)
 8001440:	f002 fcaa 	bl	8003d98 <HAL_TIMEx_MasterConfigSynchronization>
 8001444:	b9b8      	cbnz	r0, 8001476 <MX_TIM3_Init+0x92>
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001446:	2360      	movs	r3, #96	@ 0x60
 8001448:	9301      	str	r3, [sp, #4]
  sConfigOC.Pulse = 0;
 800144a:	2300      	movs	r3, #0
 800144c:	9302      	str	r3, [sp, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800144e:	9303      	str	r3, [sp, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001450:	9305      	str	r3, [sp, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8001452:	220c      	movs	r2, #12
 8001454:	a901      	add	r1, sp, #4
 8001456:	480a      	ldr	r0, [pc, #40]	@ (8001480 <MX_TIM3_Init+0x9c>)
 8001458:	f002 f894 	bl	8003584 <HAL_TIM_PWM_ConfigChannel>
 800145c:	b968      	cbnz	r0, 800147a <MX_TIM3_Init+0x96>
  HAL_TIM_MspPostInit(&htim3);
 800145e:	4808      	ldr	r0, [pc, #32]	@ (8001480 <MX_TIM3_Init+0x9c>)
 8001460:	f000 f9c2 	bl	80017e8 <HAL_TIM_MspPostInit>
}
 8001464:	b00f      	add	sp, #60	@ 0x3c
 8001466:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 800146a:	f7ff ff6b 	bl	8001344 <Error_Handler>
    Error_Handler();
 800146e:	f7ff ff69 	bl	8001344 <Error_Handler>
    Error_Handler();
 8001472:	f7ff ff67 	bl	8001344 <Error_Handler>
    Error_Handler();
 8001476:	f7ff ff65 	bl	8001344 <Error_Handler>
    Error_Handler();
 800147a:	f7ff ff63 	bl	8001344 <Error_Handler>
 800147e:	bf00      	nop
 8001480:	20000310 	.word	0x20000310
 8001484:	40000400 	.word	0x40000400

08001488 <MX_TIM2_Init>:
{
 8001488:	b500      	push	{lr}
 800148a:	b087      	sub	sp, #28
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800148c:	2300      	movs	r3, #0
 800148e:	9302      	str	r3, [sp, #8]
 8001490:	9303      	str	r3, [sp, #12]
 8001492:	9304      	str	r3, [sp, #16]
 8001494:	9305      	str	r3, [sp, #20]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001496:	9300      	str	r3, [sp, #0]
 8001498:	9301      	str	r3, [sp, #4]
  htim2.Instance = TIM2;
 800149a:	4814      	ldr	r0, [pc, #80]	@ (80014ec <MX_TIM2_Init+0x64>)
 800149c:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80014a0:	6002      	str	r2, [r0, #0]
  htim2.Init.Prescaler = 14400;
 80014a2:	f44f 5261 	mov.w	r2, #14400	@ 0x3840
 80014a6:	6042      	str	r2, [r0, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80014a8:	6083      	str	r3, [r0, #8]
  htim2.Init.Period = 65535;
 80014aa:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80014ae:	60c2      	str	r2, [r0, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80014b0:	6103      	str	r3, [r0, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80014b2:	6183      	str	r3, [r0, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80014b4:	f001 ffbe 	bl	8003434 <HAL_TIM_Base_Init>
 80014b8:	b990      	cbnz	r0, 80014e0 <MX_TIM2_Init+0x58>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80014ba:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80014be:	9302      	str	r3, [sp, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80014c0:	a902      	add	r1, sp, #8
 80014c2:	480a      	ldr	r0, [pc, #40]	@ (80014ec <MX_TIM2_Init+0x64>)
 80014c4:	f002 f920 	bl	8003708 <HAL_TIM_ConfigClockSource>
 80014c8:	b960      	cbnz	r0, 80014e4 <MX_TIM2_Init+0x5c>
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80014ca:	2300      	movs	r3, #0
 80014cc:	9300      	str	r3, [sp, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80014ce:	9301      	str	r3, [sp, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80014d0:	4669      	mov	r1, sp
 80014d2:	4806      	ldr	r0, [pc, #24]	@ (80014ec <MX_TIM2_Init+0x64>)
 80014d4:	f002 fc60 	bl	8003d98 <HAL_TIMEx_MasterConfigSynchronization>
 80014d8:	b930      	cbnz	r0, 80014e8 <MX_TIM2_Init+0x60>
}
 80014da:	b007      	add	sp, #28
 80014dc:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 80014e0:	f7ff ff30 	bl	8001344 <Error_Handler>
    Error_Handler();
 80014e4:	f7ff ff2e 	bl	8001344 <Error_Handler>
    Error_Handler();
 80014e8:	f7ff ff2c 	bl	8001344 <Error_Handler>
 80014ec:	20000358 	.word	0x20000358

080014f0 <MX_ADC1_Init>:
{
 80014f0:	b500      	push	{lr}
 80014f2:	b085      	sub	sp, #20
  ADC_ChannelConfTypeDef sConfig = {0};
 80014f4:	2300      	movs	r3, #0
 80014f6:	9301      	str	r3, [sp, #4]
 80014f8:	9302      	str	r3, [sp, #8]
 80014fa:	9303      	str	r3, [sp, #12]
  hadc1.Instance = ADC1;
 80014fc:	480f      	ldr	r0, [pc, #60]	@ (800153c <MX_ADC1_Init+0x4c>)
 80014fe:	4a10      	ldr	r2, [pc, #64]	@ (8001540 <MX_ADC1_Init+0x50>)
 8001500:	6002      	str	r2, [r0, #0]
  hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 8001502:	6083      	str	r3, [r0, #8]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8001504:	7303      	strb	r3, [r0, #12]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8001506:	7503      	strb	r3, [r0, #20]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001508:	f44f 2260 	mov.w	r2, #917504	@ 0xe0000
 800150c:	61c2      	str	r2, [r0, #28]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800150e:	6043      	str	r3, [r0, #4]
  hadc1.Init.NbrOfConversion = 1;
 8001510:	2301      	movs	r3, #1
 8001512:	6103      	str	r3, [r0, #16]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001514:	f000 fb6a 	bl	8001bec <HAL_ADC_Init>
 8001518:	b960      	cbnz	r0, 8001534 <MX_ADC1_Init+0x44>
  sConfig.Channel = ADC_CHANNEL_0;
 800151a:	2300      	movs	r3, #0
 800151c:	9301      	str	r3, [sp, #4]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 800151e:	2201      	movs	r2, #1
 8001520:	9202      	str	r2, [sp, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 8001522:	9303      	str	r3, [sp, #12]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001524:	a901      	add	r1, sp, #4
 8001526:	4805      	ldr	r0, [pc, #20]	@ (800153c <MX_ADC1_Init+0x4c>)
 8001528:	f000 fc64 	bl	8001df4 <HAL_ADC_ConfigChannel>
 800152c:	b920      	cbnz	r0, 8001538 <MX_ADC1_Init+0x48>
}
 800152e:	b005      	add	sp, #20
 8001530:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 8001534:	f7ff ff06 	bl	8001344 <Error_Handler>
    Error_Handler();
 8001538:	f7ff ff04 	bl	8001344 <Error_Handler>
 800153c:	200003a8 	.word	0x200003a8
 8001540:	40012400 	.word	0x40012400

08001544 <MX_CRC_Init>:
{
 8001544:	b508      	push	{r3, lr}
  hcrc.Instance = CRC;
 8001546:	4804      	ldr	r0, [pc, #16]	@ (8001558 <MX_CRC_Init+0x14>)
 8001548:	4b04      	ldr	r3, [pc, #16]	@ (800155c <MX_CRC_Init+0x18>)
 800154a:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800154c:	f000 ffa1 	bl	8002492 <HAL_CRC_Init>
 8001550:	b900      	cbnz	r0, 8001554 <MX_CRC_Init+0x10>
}
 8001552:	bd08      	pop	{r3, pc}
    Error_Handler();
 8001554:	f7ff fef6 	bl	8001344 <Error_Handler>
 8001558:	200003a0 	.word	0x200003a0
 800155c:	40023000 	.word	0x40023000

08001560 <SystemClock_Config>:
{
 8001560:	b500      	push	{lr}
 8001562:	b095      	sub	sp, #84	@ 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001564:	2228      	movs	r2, #40	@ 0x28
 8001566:	2100      	movs	r1, #0
 8001568:	eb0d 0002 	add.w	r0, sp, r2
 800156c:	f004 fd8c 	bl	8006088 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001570:	2300      	movs	r3, #0
 8001572:	9305      	str	r3, [sp, #20]
 8001574:	9306      	str	r3, [sp, #24]
 8001576:	9307      	str	r3, [sp, #28]
 8001578:	9308      	str	r3, [sp, #32]
 800157a:	9309      	str	r3, [sp, #36]	@ 0x24
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 800157c:	9301      	str	r3, [sp, #4]
 800157e:	9302      	str	r3, [sp, #8]
 8001580:	9303      	str	r3, [sp, #12]
 8001582:	9304      	str	r3, [sp, #16]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001584:	2201      	movs	r2, #1
 8001586:	920a      	str	r2, [sp, #40]	@ 0x28
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001588:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 800158c:	930b      	str	r3, [sp, #44]	@ 0x2c
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV2;
 800158e:	f44f 3100 	mov.w	r1, #131072	@ 0x20000
 8001592:	910c      	str	r1, [sp, #48]	@ 0x30
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001594:	920e      	str	r2, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001596:	2202      	movs	r2, #2
 8001598:	9211      	str	r2, [sp, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800159a:	9312      	str	r3, [sp, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 800159c:	f44f 13e0 	mov.w	r3, #1835008	@ 0x1c0000
 80015a0:	9313      	str	r3, [sp, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80015a2:	a80a      	add	r0, sp, #40	@ 0x28
 80015a4:	f001 f9c8 	bl	8002938 <HAL_RCC_OscConfig>
 80015a8:	b9c8      	cbnz	r0, 80015de <SystemClock_Config+0x7e>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80015aa:	230f      	movs	r3, #15
 80015ac:	9305      	str	r3, [sp, #20]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80015ae:	2102      	movs	r1, #2
 80015b0:	9106      	str	r1, [sp, #24]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80015b2:	2300      	movs	r3, #0
 80015b4:	9307      	str	r3, [sp, #28]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80015b6:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80015ba:	9208      	str	r2, [sp, #32]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80015bc:	9309      	str	r3, [sp, #36]	@ 0x24
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 80015be:	a805      	add	r0, sp, #20
 80015c0:	f001 fc3c 	bl	8002e3c <HAL_RCC_ClockConfig>
 80015c4:	b968      	cbnz	r0, 80015e2 <SystemClock_Config+0x82>
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 80015c6:	2302      	movs	r3, #2
 80015c8:	9301      	str	r3, [sp, #4]
  PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 80015ca:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80015ce:	9303      	str	r3, [sp, #12]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80015d0:	a801      	add	r0, sp, #4
 80015d2:	f001 fdc3 	bl	800315c <HAL_RCCEx_PeriphCLKConfig>
 80015d6:	b930      	cbnz	r0, 80015e6 <SystemClock_Config+0x86>
}
 80015d8:	b015      	add	sp, #84	@ 0x54
 80015da:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 80015de:	f7ff feb1 	bl	8001344 <Error_Handler>
    Error_Handler();
 80015e2:	f7ff feaf 	bl	8001344 <Error_Handler>
    Error_Handler();
 80015e6:	f7ff fead 	bl	8001344 <Error_Handler>
	...

080015ec <main>:
{
 80015ec:	b500      	push	{lr}
 80015ee:	b099      	sub	sp, #100	@ 0x64
  HAL_Init();
 80015f0:	f000 fa76 	bl	8001ae0 <HAL_Init>
  SystemClock_Config();
 80015f4:	f7ff ffb4 	bl	8001560 <SystemClock_Config>
  MX_USART1_UART_Init();
 80015f8:	f7ff fea6 	bl	8001348 <MX_USART1_UART_Init>
  MX_USART2_UART_Init();
 80015fc:	f7ff febe 	bl	800137c <MX_USART2_UART_Init>
  MX_USART3_UART_Init();
 8001600:	f7ff fed6 	bl	80013b0 <MX_USART3_UART_Init>
  MX_TIM3_Init();
 8001604:	f7ff feee 	bl	80013e4 <MX_TIM3_Init>
  MX_TIM2_Init();
 8001608:	f7ff ff3e 	bl	8001488 <MX_TIM2_Init>
  MX_ADC1_Init();
 800160c:	f7ff ff70 	bl	80014f0 <MX_ADC1_Init>
  MX_CRC_Init();
 8001610:	f7ff ff98 	bl	8001544 <MX_CRC_Init>
  printf(" Starting--------------------------------------------------------\r\n");
 8001614:	4821      	ldr	r0, [pc, #132]	@ (800169c <main+0xb0>)
 8001616:	f004 fc57 	bl	8005ec8 <puts>
  SPI_Init(1);
 800161a:	2001      	movs	r0, #1
 800161c:	f7ff fd58 	bl	80010d0 <SPI_Init>
  SPI_Init(2);
 8001620:	2002      	movs	r0, #2
 8001622:	f7ff fd55 	bl	80010d0 <SPI_Init>
  USART_Init(1);
 8001626:	2001      	movs	r0, #1
 8001628:	f7ff fdec 	bl	8001204 <USART_Init>
  USART_Init(2);
 800162c:	2002      	movs	r0, #2
 800162e:	f7ff fde9 	bl	8001204 <USART_Init>
  printf("Components initialization--------------------------------------------------------\r\n");
 8001632:	481b      	ldr	r0, [pc, #108]	@ (80016a0 <main+0xb4>)
 8001634:	f004 fc48 	bl	8005ec8 <puts>
  WS2812_Init();
 8001638:	f7ff fcb4 	bl	8000fa4 <WS2812_Init>
  printf("+ WS2812 succeed...\r\n");
 800163c:	4819      	ldr	r0, [pc, #100]	@ (80016a4 <main+0xb8>)
 800163e:	f004 fc43 	bl	8005ec8 <puts>
  if (CD74HC4051_Init(&hadc1) != 0) {
 8001642:	4819      	ldr	r0, [pc, #100]	@ (80016a8 <main+0xbc>)
 8001644:	f7ff fae0 	bl	8000c08 <CD74HC4051_Init>
 8001648:	b1c0      	cbz	r0, 800167c <main+0x90>
	  printf("- CD74HC4051 error...\r\n");
 800164a:	4818      	ldr	r0, [pc, #96]	@ (80016ac <main+0xc0>)
 800164c:	f004 fc3c 	bl	8005ec8 <puts>
  if (BMP280_Init(&bmp) != 0) {
 8001650:	a80f      	add	r0, sp, #60	@ 0x3c
 8001652:	f7ff fabc 	bl	8000bce <BMP280_Init>
 8001656:	b1a8      	cbz	r0, 8001684 <main+0x98>
	  printf("- BMP280 error...\r\n");
 8001658:	4815      	ldr	r0, [pc, #84]	@ (80016b0 <main+0xc4>)
 800165a:	f004 fc35 	bl	8005ec8 <puts>
  if (ICM20602_Init(&icm) != 0) {
 800165e:	a801      	add	r0, sp, #4
 8001660:	f7ff fbbd 	bl	8000dde <ICM20602_Init>
 8001664:	b190      	cbz	r0, 800168c <main+0xa0>
	  printf("- ICM20602 error...\r\n");
 8001666:	4813      	ldr	r0, [pc, #76]	@ (80016b4 <main+0xc8>)
 8001668:	f004 fc2e 	bl	8005ec8 <puts>
  if (MEM2067_SDCardDetection() == 1) {
 800166c:	f7ff fc18 	bl	8000ea0 <MEM2067_SDCardDetection>
 8001670:	2801      	cmp	r0, #1
 8001672:	d00f      	beq.n	8001694 <main+0xa8>
	  printf("+ SD card detected in MEM2067...\r\n");
 8001674:	4810      	ldr	r0, [pc, #64]	@ (80016b8 <main+0xcc>)
 8001676:	f004 fc27 	bl	8005ec8 <puts>
  while (1)
 800167a:	e7fe      	b.n	800167a <main+0x8e>
	  printf("+ CD74HC4051 succeed...\r\n");
 800167c:	480f      	ldr	r0, [pc, #60]	@ (80016bc <main+0xd0>)
 800167e:	f004 fc23 	bl	8005ec8 <puts>
 8001682:	e7e5      	b.n	8001650 <main+0x64>
	  printf("+ BMP280 succeed...\r\n");
 8001684:	480e      	ldr	r0, [pc, #56]	@ (80016c0 <main+0xd4>)
 8001686:	f004 fc1f 	bl	8005ec8 <puts>
 800168a:	e7e8      	b.n	800165e <main+0x72>
	  printf("+ ICM20602 succeed...\r\n");
 800168c:	480d      	ldr	r0, [pc, #52]	@ (80016c4 <main+0xd8>)
 800168e:	f004 fc1b 	bl	8005ec8 <puts>
 8001692:	e7eb      	b.n	800166c <main+0x80>
      printf("- No SD card detected in MEM2067...\r\n");
 8001694:	480c      	ldr	r0, [pc, #48]	@ (80016c8 <main+0xdc>)
 8001696:	f004 fc17 	bl	8005ec8 <puts>
 800169a:	e7ee      	b.n	800167a <main+0x8e>
 800169c:	08007d10 	.word	0x08007d10
 80016a0:	08007d54 	.word	0x08007d54
 80016a4:	08007da8 	.word	0x08007da8
 80016a8:	200003a8 	.word	0x200003a8
 80016ac:	08007dc0 	.word	0x08007dc0
 80016b0:	08007df4 	.word	0x08007df4
 80016b4:	08007e20 	.word	0x08007e20
 80016b8:	08007e78 	.word	0x08007e78
 80016bc:	08007dd8 	.word	0x08007dd8
 80016c0:	08007e08 	.word	0x08007e08
 80016c4:	08007e38 	.word	0x08007e38
 80016c8:	08007e50 	.word	0x08007e50

080016cc <HAL_MspInit>:
 80016cc:	b082      	sub	sp, #8
 80016ce:	4b0e      	ldr	r3, [pc, #56]	@ (8001708 <HAL_MspInit+0x3c>)
 80016d0:	699a      	ldr	r2, [r3, #24]
 80016d2:	f042 0201 	orr.w	r2, r2, #1
 80016d6:	619a      	str	r2, [r3, #24]
 80016d8:	699a      	ldr	r2, [r3, #24]
 80016da:	f002 0201 	and.w	r2, r2, #1
 80016de:	9200      	str	r2, [sp, #0]
 80016e0:	9a00      	ldr	r2, [sp, #0]
 80016e2:	69da      	ldr	r2, [r3, #28]
 80016e4:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80016e8:	61da      	str	r2, [r3, #28]
 80016ea:	69db      	ldr	r3, [r3, #28]
 80016ec:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80016f0:	9301      	str	r3, [sp, #4]
 80016f2:	9b01      	ldr	r3, [sp, #4]
 80016f4:	4a05      	ldr	r2, [pc, #20]	@ (800170c <HAL_MspInit+0x40>)
 80016f6:	6853      	ldr	r3, [r2, #4]
 80016f8:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 80016fc:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8001700:	6053      	str	r3, [r2, #4]
 8001702:	b002      	add	sp, #8
 8001704:	4770      	bx	lr
 8001706:	bf00      	nop
 8001708:	40021000 	.word	0x40021000
 800170c:	40010000 	.word	0x40010000

08001710 <HAL_ADC_MspInit>:
 8001710:	b500      	push	{lr}
 8001712:	b087      	sub	sp, #28
 8001714:	2300      	movs	r3, #0
 8001716:	9302      	str	r3, [sp, #8]
 8001718:	9303      	str	r3, [sp, #12]
 800171a:	9304      	str	r3, [sp, #16]
 800171c:	9305      	str	r3, [sp, #20]
 800171e:	6802      	ldr	r2, [r0, #0]
 8001720:	4b11      	ldr	r3, [pc, #68]	@ (8001768 <HAL_ADC_MspInit+0x58>)
 8001722:	429a      	cmp	r2, r3
 8001724:	d002      	beq.n	800172c <HAL_ADC_MspInit+0x1c>
 8001726:	b007      	add	sp, #28
 8001728:	f85d fb04 	ldr.w	pc, [sp], #4
 800172c:	f503 436c 	add.w	r3, r3, #60416	@ 0xec00
 8001730:	699a      	ldr	r2, [r3, #24]
 8001732:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8001736:	619a      	str	r2, [r3, #24]
 8001738:	699a      	ldr	r2, [r3, #24]
 800173a:	f402 7200 	and.w	r2, r2, #512	@ 0x200
 800173e:	9200      	str	r2, [sp, #0]
 8001740:	9a00      	ldr	r2, [sp, #0]
 8001742:	699a      	ldr	r2, [r3, #24]
 8001744:	f042 0204 	orr.w	r2, r2, #4
 8001748:	619a      	str	r2, [r3, #24]
 800174a:	699b      	ldr	r3, [r3, #24]
 800174c:	f003 0304 	and.w	r3, r3, #4
 8001750:	9301      	str	r3, [sp, #4]
 8001752:	9b01      	ldr	r3, [sp, #4]
 8001754:	2301      	movs	r3, #1
 8001756:	9302      	str	r3, [sp, #8]
 8001758:	2303      	movs	r3, #3
 800175a:	9303      	str	r3, [sp, #12]
 800175c:	a902      	add	r1, sp, #8
 800175e:	4803      	ldr	r0, [pc, #12]	@ (800176c <HAL_ADC_MspInit+0x5c>)
 8001760:	f000 ff66 	bl	8002630 <HAL_GPIO_Init>
 8001764:	e7df      	b.n	8001726 <HAL_ADC_MspInit+0x16>
 8001766:	bf00      	nop
 8001768:	40012400 	.word	0x40012400
 800176c:	40010800 	.word	0x40010800

08001770 <HAL_CRC_MspInit>:
 8001770:	6802      	ldr	r2, [r0, #0]
 8001772:	4b09      	ldr	r3, [pc, #36]	@ (8001798 <HAL_CRC_MspInit+0x28>)
 8001774:	429a      	cmp	r2, r3
 8001776:	d000      	beq.n	800177a <HAL_CRC_MspInit+0xa>
 8001778:	4770      	bx	lr
 800177a:	b082      	sub	sp, #8
 800177c:	f5a3 5300 	sub.w	r3, r3, #8192	@ 0x2000
 8001780:	695a      	ldr	r2, [r3, #20]
 8001782:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8001786:	615a      	str	r2, [r3, #20]
 8001788:	695b      	ldr	r3, [r3, #20]
 800178a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800178e:	9301      	str	r3, [sp, #4]
 8001790:	9b01      	ldr	r3, [sp, #4]
 8001792:	b002      	add	sp, #8
 8001794:	4770      	bx	lr
 8001796:	bf00      	nop
 8001798:	40023000 	.word	0x40023000

0800179c <HAL_TIM_Base_MspInit>:
 800179c:	b082      	sub	sp, #8
 800179e:	6803      	ldr	r3, [r0, #0]
 80017a0:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80017a4:	d004      	beq.n	80017b0 <HAL_TIM_Base_MspInit+0x14>
 80017a6:	4a0e      	ldr	r2, [pc, #56]	@ (80017e0 <HAL_TIM_Base_MspInit+0x44>)
 80017a8:	4293      	cmp	r3, r2
 80017aa:	d00d      	beq.n	80017c8 <HAL_TIM_Base_MspInit+0x2c>
 80017ac:	b002      	add	sp, #8
 80017ae:	4770      	bx	lr
 80017b0:	f503 3304 	add.w	r3, r3, #135168	@ 0x21000
 80017b4:	69da      	ldr	r2, [r3, #28]
 80017b6:	f042 0201 	orr.w	r2, r2, #1
 80017ba:	61da      	str	r2, [r3, #28]
 80017bc:	69db      	ldr	r3, [r3, #28]
 80017be:	f003 0301 	and.w	r3, r3, #1
 80017c2:	9300      	str	r3, [sp, #0]
 80017c4:	9b00      	ldr	r3, [sp, #0]
 80017c6:	e7f1      	b.n	80017ac <HAL_TIM_Base_MspInit+0x10>
 80017c8:	4b06      	ldr	r3, [pc, #24]	@ (80017e4 <HAL_TIM_Base_MspInit+0x48>)
 80017ca:	69da      	ldr	r2, [r3, #28]
 80017cc:	f042 0202 	orr.w	r2, r2, #2
 80017d0:	61da      	str	r2, [r3, #28]
 80017d2:	69db      	ldr	r3, [r3, #28]
 80017d4:	f003 0302 	and.w	r3, r3, #2
 80017d8:	9301      	str	r3, [sp, #4]
 80017da:	9b01      	ldr	r3, [sp, #4]
 80017dc:	e7e6      	b.n	80017ac <HAL_TIM_Base_MspInit+0x10>
 80017de:	bf00      	nop
 80017e0:	40000400 	.word	0x40000400
 80017e4:	40021000 	.word	0x40021000

080017e8 <HAL_TIM_MspPostInit>:
 80017e8:	b500      	push	{lr}
 80017ea:	b087      	sub	sp, #28
 80017ec:	2300      	movs	r3, #0
 80017ee:	9302      	str	r3, [sp, #8]
 80017f0:	9303      	str	r3, [sp, #12]
 80017f2:	9304      	str	r3, [sp, #16]
 80017f4:	9305      	str	r3, [sp, #20]
 80017f6:	6802      	ldr	r2, [r0, #0]
 80017f8:	4b0c      	ldr	r3, [pc, #48]	@ (800182c <HAL_TIM_MspPostInit+0x44>)
 80017fa:	429a      	cmp	r2, r3
 80017fc:	d002      	beq.n	8001804 <HAL_TIM_MspPostInit+0x1c>
 80017fe:	b007      	add	sp, #28
 8001800:	f85d fb04 	ldr.w	pc, [sp], #4
 8001804:	f503 3303 	add.w	r3, r3, #134144	@ 0x20c00
 8001808:	699a      	ldr	r2, [r3, #24]
 800180a:	f042 0208 	orr.w	r2, r2, #8
 800180e:	619a      	str	r2, [r3, #24]
 8001810:	699b      	ldr	r3, [r3, #24]
 8001812:	f003 0308 	and.w	r3, r3, #8
 8001816:	9301      	str	r3, [sp, #4]
 8001818:	9b01      	ldr	r3, [sp, #4]
 800181a:	2302      	movs	r3, #2
 800181c:	9302      	str	r3, [sp, #8]
 800181e:	9303      	str	r3, [sp, #12]
 8001820:	9305      	str	r3, [sp, #20]
 8001822:	a902      	add	r1, sp, #8
 8001824:	4802      	ldr	r0, [pc, #8]	@ (8001830 <HAL_TIM_MspPostInit+0x48>)
 8001826:	f000 ff03 	bl	8002630 <HAL_GPIO_Init>
 800182a:	e7e8      	b.n	80017fe <HAL_TIM_MspPostInit+0x16>
 800182c:	40000400 	.word	0x40000400
 8001830:	40010c00 	.word	0x40010c00

08001834 <HAL_UART_MspInit>:
 8001834:	b530      	push	{r4, r5, lr}
 8001836:	b08b      	sub	sp, #44	@ 0x2c
 8001838:	2300      	movs	r3, #0
 800183a:	9306      	str	r3, [sp, #24]
 800183c:	9307      	str	r3, [sp, #28]
 800183e:	9308      	str	r3, [sp, #32]
 8001840:	9309      	str	r3, [sp, #36]	@ 0x24
 8001842:	6803      	ldr	r3, [r0, #0]
 8001844:	4a51      	ldr	r2, [pc, #324]	@ (800198c <HAL_UART_MspInit+0x158>)
 8001846:	4293      	cmp	r3, r2
 8001848:	d007      	beq.n	800185a <HAL_UART_MspInit+0x26>
 800184a:	4a51      	ldr	r2, [pc, #324]	@ (8001990 <HAL_UART_MspInit+0x15c>)
 800184c:	4293      	cmp	r3, r2
 800184e:	d03b      	beq.n	80018c8 <HAL_UART_MspInit+0x94>
 8001850:	4a50      	ldr	r2, [pc, #320]	@ (8001994 <HAL_UART_MspInit+0x160>)
 8001852:	4293      	cmp	r3, r2
 8001854:	d068      	beq.n	8001928 <HAL_UART_MspInit+0xf4>
 8001856:	b00b      	add	sp, #44	@ 0x2c
 8001858:	bd30      	pop	{r4, r5, pc}
 800185a:	4b4f      	ldr	r3, [pc, #316]	@ (8001998 <HAL_UART_MspInit+0x164>)
 800185c:	699a      	ldr	r2, [r3, #24]
 800185e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8001862:	619a      	str	r2, [r3, #24]
 8001864:	699a      	ldr	r2, [r3, #24]
 8001866:	f402 4280 	and.w	r2, r2, #16384	@ 0x4000
 800186a:	9200      	str	r2, [sp, #0]
 800186c:	9a00      	ldr	r2, [sp, #0]
 800186e:	699a      	ldr	r2, [r3, #24]
 8001870:	f042 0208 	orr.w	r2, r2, #8
 8001874:	619a      	str	r2, [r3, #24]
 8001876:	699b      	ldr	r3, [r3, #24]
 8001878:	f003 0308 	and.w	r3, r3, #8
 800187c:	9301      	str	r3, [sp, #4]
 800187e:	9b01      	ldr	r3, [sp, #4]
 8001880:	2340      	movs	r3, #64	@ 0x40
 8001882:	9306      	str	r3, [sp, #24]
 8001884:	2302      	movs	r3, #2
 8001886:	9307      	str	r3, [sp, #28]
 8001888:	2303      	movs	r3, #3
 800188a:	9309      	str	r3, [sp, #36]	@ 0x24
 800188c:	4d43      	ldr	r5, [pc, #268]	@ (800199c <HAL_UART_MspInit+0x168>)
 800188e:	a906      	add	r1, sp, #24
 8001890:	4628      	mov	r0, r5
 8001892:	f000 fecd 	bl	8002630 <HAL_GPIO_Init>
 8001896:	2380      	movs	r3, #128	@ 0x80
 8001898:	9306      	str	r3, [sp, #24]
 800189a:	2400      	movs	r4, #0
 800189c:	9407      	str	r4, [sp, #28]
 800189e:	9408      	str	r4, [sp, #32]
 80018a0:	a906      	add	r1, sp, #24
 80018a2:	4628      	mov	r0, r5
 80018a4:	f000 fec4 	bl	8002630 <HAL_GPIO_Init>
 80018a8:	4a3d      	ldr	r2, [pc, #244]	@ (80019a0 <HAL_UART_MspInit+0x16c>)
 80018aa:	6853      	ldr	r3, [r2, #4]
 80018ac:	f043 63e0 	orr.w	r3, r3, #117440512	@ 0x7000000
 80018b0:	f043 0304 	orr.w	r3, r3, #4
 80018b4:	6053      	str	r3, [r2, #4]
 80018b6:	4622      	mov	r2, r4
 80018b8:	4621      	mov	r1, r4
 80018ba:	2025      	movs	r0, #37	@ 0x25
 80018bc:	f000 fdb3 	bl	8002426 <HAL_NVIC_SetPriority>
 80018c0:	2025      	movs	r0, #37	@ 0x25
 80018c2:	f000 fdcc 	bl	800245e <HAL_NVIC_EnableIRQ>
 80018c6:	e7c6      	b.n	8001856 <HAL_UART_MspInit+0x22>
 80018c8:	4b33      	ldr	r3, [pc, #204]	@ (8001998 <HAL_UART_MspInit+0x164>)
 80018ca:	69da      	ldr	r2, [r3, #28]
 80018cc:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 80018d0:	61da      	str	r2, [r3, #28]
 80018d2:	69da      	ldr	r2, [r3, #28]
 80018d4:	f402 3200 	and.w	r2, r2, #131072	@ 0x20000
 80018d8:	9202      	str	r2, [sp, #8]
 80018da:	9a02      	ldr	r2, [sp, #8]
 80018dc:	699a      	ldr	r2, [r3, #24]
 80018de:	f042 0204 	orr.w	r2, r2, #4
 80018e2:	619a      	str	r2, [r3, #24]
 80018e4:	699b      	ldr	r3, [r3, #24]
 80018e6:	f003 0304 	and.w	r3, r3, #4
 80018ea:	9303      	str	r3, [sp, #12]
 80018ec:	9b03      	ldr	r3, [sp, #12]
 80018ee:	2304      	movs	r3, #4
 80018f0:	9306      	str	r3, [sp, #24]
 80018f2:	2302      	movs	r3, #2
 80018f4:	9307      	str	r3, [sp, #28]
 80018f6:	2303      	movs	r3, #3
 80018f8:	9309      	str	r3, [sp, #36]	@ 0x24
 80018fa:	4d2a      	ldr	r5, [pc, #168]	@ (80019a4 <HAL_UART_MspInit+0x170>)
 80018fc:	a906      	add	r1, sp, #24
 80018fe:	4628      	mov	r0, r5
 8001900:	f000 fe96 	bl	8002630 <HAL_GPIO_Init>
 8001904:	2308      	movs	r3, #8
 8001906:	9306      	str	r3, [sp, #24]
 8001908:	2400      	movs	r4, #0
 800190a:	9407      	str	r4, [sp, #28]
 800190c:	9408      	str	r4, [sp, #32]
 800190e:	a906      	add	r1, sp, #24
 8001910:	4628      	mov	r0, r5
 8001912:	f000 fe8d 	bl	8002630 <HAL_GPIO_Init>
 8001916:	4622      	mov	r2, r4
 8001918:	4621      	mov	r1, r4
 800191a:	2026      	movs	r0, #38	@ 0x26
 800191c:	f000 fd83 	bl	8002426 <HAL_NVIC_SetPriority>
 8001920:	2026      	movs	r0, #38	@ 0x26
 8001922:	f000 fd9c 	bl	800245e <HAL_NVIC_EnableIRQ>
 8001926:	e796      	b.n	8001856 <HAL_UART_MspInit+0x22>
 8001928:	4b1b      	ldr	r3, [pc, #108]	@ (8001998 <HAL_UART_MspInit+0x164>)
 800192a:	69da      	ldr	r2, [r3, #28]
 800192c:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 8001930:	61da      	str	r2, [r3, #28]
 8001932:	69da      	ldr	r2, [r3, #28]
 8001934:	f402 2280 	and.w	r2, r2, #262144	@ 0x40000
 8001938:	9204      	str	r2, [sp, #16]
 800193a:	9a04      	ldr	r2, [sp, #16]
 800193c:	699a      	ldr	r2, [r3, #24]
 800193e:	f042 0208 	orr.w	r2, r2, #8
 8001942:	619a      	str	r2, [r3, #24]
 8001944:	699b      	ldr	r3, [r3, #24]
 8001946:	f003 0308 	and.w	r3, r3, #8
 800194a:	9305      	str	r3, [sp, #20]
 800194c:	9b05      	ldr	r3, [sp, #20]
 800194e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001952:	9306      	str	r3, [sp, #24]
 8001954:	2302      	movs	r3, #2
 8001956:	9307      	str	r3, [sp, #28]
 8001958:	2303      	movs	r3, #3
 800195a:	9309      	str	r3, [sp, #36]	@ 0x24
 800195c:	4d0f      	ldr	r5, [pc, #60]	@ (800199c <HAL_UART_MspInit+0x168>)
 800195e:	a906      	add	r1, sp, #24
 8001960:	4628      	mov	r0, r5
 8001962:	f000 fe65 	bl	8002630 <HAL_GPIO_Init>
 8001966:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800196a:	9306      	str	r3, [sp, #24]
 800196c:	2400      	movs	r4, #0
 800196e:	9407      	str	r4, [sp, #28]
 8001970:	9408      	str	r4, [sp, #32]
 8001972:	a906      	add	r1, sp, #24
 8001974:	4628      	mov	r0, r5
 8001976:	f000 fe5b 	bl	8002630 <HAL_GPIO_Init>
 800197a:	4622      	mov	r2, r4
 800197c:	4621      	mov	r1, r4
 800197e:	2027      	movs	r0, #39	@ 0x27
 8001980:	f000 fd51 	bl	8002426 <HAL_NVIC_SetPriority>
 8001984:	2027      	movs	r0, #39	@ 0x27
 8001986:	f000 fd6a 	bl	800245e <HAL_NVIC_EnableIRQ>
 800198a:	e764      	b.n	8001856 <HAL_UART_MspInit+0x22>
 800198c:	40013800 	.word	0x40013800
 8001990:	40004400 	.word	0x40004400
 8001994:	40004800 	.word	0x40004800
 8001998:	40021000 	.word	0x40021000
 800199c:	40010c00 	.word	0x40010c00
 80019a0:	40010000 	.word	0x40010000
 80019a4:	40010800 	.word	0x40010800

080019a8 <NMI_Handler>:
 80019a8:	e7fe      	b.n	80019a8 <NMI_Handler>

080019aa <HardFault_Handler>:
 80019aa:	e7fe      	b.n	80019aa <HardFault_Handler>

080019ac <MemManage_Handler>:
 80019ac:	e7fe      	b.n	80019ac <MemManage_Handler>

080019ae <BusFault_Handler>:
 80019ae:	e7fe      	b.n	80019ae <BusFault_Handler>

080019b0 <UsageFault_Handler>:
 80019b0:	e7fe      	b.n	80019b0 <UsageFault_Handler>

080019b2 <SVC_Handler>:
 80019b2:	4770      	bx	lr

080019b4 <DebugMon_Handler>:
 80019b4:	4770      	bx	lr

080019b6 <PendSV_Handler>:
 80019b6:	4770      	bx	lr

080019b8 <SysTick_Handler>:
 80019b8:	b508      	push	{r3, lr}
 80019ba:	f000 f8d7 	bl	8001b6c <HAL_IncTick>
 80019be:	bd08      	pop	{r3, pc}

080019c0 <USART1_IRQHandler>:
 80019c0:	b508      	push	{r3, lr}
 80019c2:	4802      	ldr	r0, [pc, #8]	@ (80019cc <USART1_IRQHandler+0xc>)
 80019c4:	f002 fa96 	bl	8003ef4 <HAL_UART_IRQHandler>
 80019c8:	bd08      	pop	{r3, pc}
 80019ca:	bf00      	nop
 80019cc:	200002c8 	.word	0x200002c8

080019d0 <USART2_IRQHandler>:
 80019d0:	b508      	push	{r3, lr}
 80019d2:	4802      	ldr	r0, [pc, #8]	@ (80019dc <USART2_IRQHandler+0xc>)
 80019d4:	f002 fa8e 	bl	8003ef4 <HAL_UART_IRQHandler>
 80019d8:	bd08      	pop	{r3, pc}
 80019da:	bf00      	nop
 80019dc:	20000280 	.word	0x20000280

080019e0 <USART3_IRQHandler>:
 80019e0:	b508      	push	{r3, lr}
 80019e2:	4802      	ldr	r0, [pc, #8]	@ (80019ec <USART3_IRQHandler+0xc>)
 80019e4:	f002 fa86 	bl	8003ef4 <HAL_UART_IRQHandler>
 80019e8:	bd08      	pop	{r3, pc}
 80019ea:	bf00      	nop
 80019ec:	20000238 	.word	0x20000238

080019f0 <_getpid>:
 80019f0:	2001      	movs	r0, #1
 80019f2:	4770      	bx	lr

080019f4 <_kill>:
 80019f4:	b508      	push	{r3, lr}
 80019f6:	f004 fba9 	bl	800614c <__errno>
 80019fa:	2316      	movs	r3, #22
 80019fc:	6003      	str	r3, [r0, #0]
 80019fe:	f04f 30ff 	mov.w	r0, #4294967295
 8001a02:	bd08      	pop	{r3, pc}

08001a04 <_exit>:
 8001a04:	b508      	push	{r3, lr}
 8001a06:	f04f 31ff 	mov.w	r1, #4294967295
 8001a0a:	f7ff fff3 	bl	80019f4 <_kill>
 8001a0e:	e7fe      	b.n	8001a0e <_exit+0xa>

08001a10 <_read>:
 8001a10:	b570      	push	{r4, r5, r6, lr}
 8001a12:	460c      	mov	r4, r1
 8001a14:	4616      	mov	r6, r2
 8001a16:	2500      	movs	r5, #0
 8001a18:	e006      	b.n	8001a28 <_read+0x18>
 8001a1a:	f3af 8000 	nop.w
 8001a1e:	4621      	mov	r1, r4
 8001a20:	f801 0b01 	strb.w	r0, [r1], #1
 8001a24:	3501      	adds	r5, #1
 8001a26:	460c      	mov	r4, r1
 8001a28:	42b5      	cmp	r5, r6
 8001a2a:	dbf6      	blt.n	8001a1a <_read+0xa>
 8001a2c:	4630      	mov	r0, r6
 8001a2e:	bd70      	pop	{r4, r5, r6, pc}

08001a30 <_close>:
 8001a30:	f04f 30ff 	mov.w	r0, #4294967295
 8001a34:	4770      	bx	lr

08001a36 <_fstat>:
 8001a36:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001a3a:	604b      	str	r3, [r1, #4]
 8001a3c:	2000      	movs	r0, #0
 8001a3e:	4770      	bx	lr

08001a40 <_isatty>:
 8001a40:	2001      	movs	r0, #1
 8001a42:	4770      	bx	lr

08001a44 <_lseek>:
 8001a44:	2000      	movs	r0, #0
 8001a46:	4770      	bx	lr

08001a48 <_sbrk>:
 8001a48:	b510      	push	{r4, lr}
 8001a4a:	4603      	mov	r3, r0
 8001a4c:	4a0c      	ldr	r2, [pc, #48]	@ (8001a80 <_sbrk+0x38>)
 8001a4e:	490d      	ldr	r1, [pc, #52]	@ (8001a84 <_sbrk+0x3c>)
 8001a50:	480d      	ldr	r0, [pc, #52]	@ (8001a88 <_sbrk+0x40>)
 8001a52:	6800      	ldr	r0, [r0, #0]
 8001a54:	b140      	cbz	r0, 8001a68 <_sbrk+0x20>
 8001a56:	480c      	ldr	r0, [pc, #48]	@ (8001a88 <_sbrk+0x40>)
 8001a58:	6800      	ldr	r0, [r0, #0]
 8001a5a:	4403      	add	r3, r0
 8001a5c:	1a52      	subs	r2, r2, r1
 8001a5e:	4293      	cmp	r3, r2
 8001a60:	d806      	bhi.n	8001a70 <_sbrk+0x28>
 8001a62:	4a09      	ldr	r2, [pc, #36]	@ (8001a88 <_sbrk+0x40>)
 8001a64:	6013      	str	r3, [r2, #0]
 8001a66:	bd10      	pop	{r4, pc}
 8001a68:	4807      	ldr	r0, [pc, #28]	@ (8001a88 <_sbrk+0x40>)
 8001a6a:	4c08      	ldr	r4, [pc, #32]	@ (8001a8c <_sbrk+0x44>)
 8001a6c:	6004      	str	r4, [r0, #0]
 8001a6e:	e7f2      	b.n	8001a56 <_sbrk+0xe>
 8001a70:	f004 fb6c 	bl	800614c <__errno>
 8001a74:	230c      	movs	r3, #12
 8001a76:	6003      	str	r3, [r0, #0]
 8001a78:	f04f 30ff 	mov.w	r0, #4294967295
 8001a7c:	e7f3      	b.n	8001a66 <_sbrk+0x1e>
 8001a7e:	bf00      	nop
 8001a80:	20005000 	.word	0x20005000
 8001a84:	00000400 	.word	0x00000400
 8001a88:	200003d8 	.word	0x200003d8
 8001a8c:	20000790 	.word	0x20000790

08001a90 <SystemInit>:
 8001a90:	4770      	bx	lr
	...

08001a94 <Reset_Handler>:
 8001a94:	f7ff fffc 	bl	8001a90 <SystemInit>
 8001a98:	480b      	ldr	r0, [pc, #44]	@ (8001ac8 <LoopFillZerobss+0xe>)
 8001a9a:	490c      	ldr	r1, [pc, #48]	@ (8001acc <LoopFillZerobss+0x12>)
 8001a9c:	4a0c      	ldr	r2, [pc, #48]	@ (8001ad0 <LoopFillZerobss+0x16>)
 8001a9e:	2300      	movs	r3, #0
 8001aa0:	e002      	b.n	8001aa8 <LoopCopyDataInit>

08001aa2 <CopyDataInit>:
 8001aa2:	58d4      	ldr	r4, [r2, r3]
 8001aa4:	50c4      	str	r4, [r0, r3]
 8001aa6:	3304      	adds	r3, #4

08001aa8 <LoopCopyDataInit>:
 8001aa8:	18c4      	adds	r4, r0, r3
 8001aaa:	428c      	cmp	r4, r1
 8001aac:	d3f9      	bcc.n	8001aa2 <CopyDataInit>
 8001aae:	4a09      	ldr	r2, [pc, #36]	@ (8001ad4 <LoopFillZerobss+0x1a>)
 8001ab0:	4c09      	ldr	r4, [pc, #36]	@ (8001ad8 <LoopFillZerobss+0x1e>)
 8001ab2:	2300      	movs	r3, #0
 8001ab4:	e001      	b.n	8001aba <LoopFillZerobss>

08001ab6 <FillZerobss>:
 8001ab6:	6013      	str	r3, [r2, #0]
 8001ab8:	3204      	adds	r2, #4

08001aba <LoopFillZerobss>:
 8001aba:	42a2      	cmp	r2, r4
 8001abc:	d3fb      	bcc.n	8001ab6 <FillZerobss>
 8001abe:	f004 fb4b 	bl	8006158 <__libc_init_array>
 8001ac2:	f7ff fd93 	bl	80015ec <main>
 8001ac6:	4770      	bx	lr
 8001ac8:	20000000 	.word	0x20000000
 8001acc:	200001d4 	.word	0x200001d4
 8001ad0:	0800825c 	.word	0x0800825c
 8001ad4:	200001d4 	.word	0x200001d4
 8001ad8:	2000078c 	.word	0x2000078c

08001adc <ADC1_2_IRQHandler>:
 8001adc:	e7fe      	b.n	8001adc <ADC1_2_IRQHandler>
	...

08001ae0 <HAL_Init>:
 8001ae0:	b580      	push	{r7, lr}
 8001ae2:	af00      	add	r7, sp, #0
 8001ae4:	4b08      	ldr	r3, [pc, #32]	@ (8001b08 <HAL_Init+0x28>)
 8001ae6:	681b      	ldr	r3, [r3, #0]
 8001ae8:	4a07      	ldr	r2, [pc, #28]	@ (8001b08 <HAL_Init+0x28>)
 8001aea:	f043 0310 	orr.w	r3, r3, #16
 8001aee:	6013      	str	r3, [r2, #0]
 8001af0:	2003      	movs	r0, #3
 8001af2:	f000 fc8d 	bl	8002410 <HAL_NVIC_SetPriorityGrouping>
 8001af6:	200f      	movs	r0, #15
 8001af8:	f000 f808 	bl	8001b0c <HAL_InitTick>
 8001afc:	f7ff fde6 	bl	80016cc <HAL_MspInit>
 8001b00:	2300      	movs	r3, #0
 8001b02:	4618      	mov	r0, r3
 8001b04:	bd80      	pop	{r7, pc}
 8001b06:	bf00      	nop
 8001b08:	40022000 	.word	0x40022000

08001b0c <HAL_InitTick>:
 8001b0c:	b580      	push	{r7, lr}
 8001b0e:	b082      	sub	sp, #8
 8001b10:	af00      	add	r7, sp, #0
 8001b12:	6078      	str	r0, [r7, #4]
 8001b14:	4b12      	ldr	r3, [pc, #72]	@ (8001b60 <HAL_InitTick+0x54>)
 8001b16:	681a      	ldr	r2, [r3, #0]
 8001b18:	4b12      	ldr	r3, [pc, #72]	@ (8001b64 <HAL_InitTick+0x58>)
 8001b1a:	781b      	ldrb	r3, [r3, #0]
 8001b1c:	4619      	mov	r1, r3
 8001b1e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001b22:	fbb3 f3f1 	udiv	r3, r3, r1
 8001b26:	fbb2 f3f3 	udiv	r3, r2, r3
 8001b2a:	4618      	mov	r0, r3
 8001b2c:	f000 fca5 	bl	800247a <HAL_SYSTICK_Config>
 8001b30:	4603      	mov	r3, r0
 8001b32:	2b00      	cmp	r3, #0
 8001b34:	d001      	beq.n	8001b3a <HAL_InitTick+0x2e>
 8001b36:	2301      	movs	r3, #1
 8001b38:	e00e      	b.n	8001b58 <HAL_InitTick+0x4c>
 8001b3a:	687b      	ldr	r3, [r7, #4]
 8001b3c:	2b0f      	cmp	r3, #15
 8001b3e:	d80a      	bhi.n	8001b56 <HAL_InitTick+0x4a>
 8001b40:	2200      	movs	r2, #0
 8001b42:	6879      	ldr	r1, [r7, #4]
 8001b44:	f04f 30ff 	mov.w	r0, #4294967295
 8001b48:	f000 fc6d 	bl	8002426 <HAL_NVIC_SetPriority>
 8001b4c:	4a06      	ldr	r2, [pc, #24]	@ (8001b68 <HAL_InitTick+0x5c>)
 8001b4e:	687b      	ldr	r3, [r7, #4]
 8001b50:	6013      	str	r3, [r2, #0]
 8001b52:	2300      	movs	r3, #0
 8001b54:	e000      	b.n	8001b58 <HAL_InitTick+0x4c>
 8001b56:	2301      	movs	r3, #1
 8001b58:	4618      	mov	r0, r3
 8001b5a:	3708      	adds	r7, #8
 8001b5c:	46bd      	mov	sp, r7
 8001b5e:	bd80      	pop	{r7, pc}
 8001b60:	20000000 	.word	0x20000000
 8001b64:	20000008 	.word	0x20000008
 8001b68:	20000004 	.word	0x20000004

08001b6c <HAL_IncTick>:
 8001b6c:	b480      	push	{r7}
 8001b6e:	af00      	add	r7, sp, #0
 8001b70:	4b05      	ldr	r3, [pc, #20]	@ (8001b88 <HAL_IncTick+0x1c>)
 8001b72:	781b      	ldrb	r3, [r3, #0]
 8001b74:	461a      	mov	r2, r3
 8001b76:	4b05      	ldr	r3, [pc, #20]	@ (8001b8c <HAL_IncTick+0x20>)
 8001b78:	681b      	ldr	r3, [r3, #0]
 8001b7a:	4413      	add	r3, r2
 8001b7c:	4a03      	ldr	r2, [pc, #12]	@ (8001b8c <HAL_IncTick+0x20>)
 8001b7e:	6013      	str	r3, [r2, #0]
 8001b80:	bf00      	nop
 8001b82:	46bd      	mov	sp, r7
 8001b84:	bc80      	pop	{r7}
 8001b86:	4770      	bx	lr
 8001b88:	20000008 	.word	0x20000008
 8001b8c:	200003dc 	.word	0x200003dc

08001b90 <HAL_GetTick>:
 8001b90:	b480      	push	{r7}
 8001b92:	af00      	add	r7, sp, #0
 8001b94:	4b02      	ldr	r3, [pc, #8]	@ (8001ba0 <HAL_GetTick+0x10>)
 8001b96:	681b      	ldr	r3, [r3, #0]
 8001b98:	4618      	mov	r0, r3
 8001b9a:	46bd      	mov	sp, r7
 8001b9c:	bc80      	pop	{r7}
 8001b9e:	4770      	bx	lr
 8001ba0:	200003dc 	.word	0x200003dc

08001ba4 <HAL_Delay>:
 8001ba4:	b580      	push	{r7, lr}
 8001ba6:	b084      	sub	sp, #16
 8001ba8:	af00      	add	r7, sp, #0
 8001baa:	6078      	str	r0, [r7, #4]
 8001bac:	f7ff fff0 	bl	8001b90 <HAL_GetTick>
 8001bb0:	60b8      	str	r0, [r7, #8]
 8001bb2:	687b      	ldr	r3, [r7, #4]
 8001bb4:	60fb      	str	r3, [r7, #12]
 8001bb6:	68fb      	ldr	r3, [r7, #12]
 8001bb8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001bbc:	d005      	beq.n	8001bca <HAL_Delay+0x26>
 8001bbe:	4b0a      	ldr	r3, [pc, #40]	@ (8001be8 <HAL_Delay+0x44>)
 8001bc0:	781b      	ldrb	r3, [r3, #0]
 8001bc2:	461a      	mov	r2, r3
 8001bc4:	68fb      	ldr	r3, [r7, #12]
 8001bc6:	4413      	add	r3, r2
 8001bc8:	60fb      	str	r3, [r7, #12]
 8001bca:	bf00      	nop
 8001bcc:	f7ff ffe0 	bl	8001b90 <HAL_GetTick>
 8001bd0:	4602      	mov	r2, r0
 8001bd2:	68bb      	ldr	r3, [r7, #8]
 8001bd4:	1ad3      	subs	r3, r2, r3
 8001bd6:	68fa      	ldr	r2, [r7, #12]
 8001bd8:	429a      	cmp	r2, r3
 8001bda:	d8f7      	bhi.n	8001bcc <HAL_Delay+0x28>
 8001bdc:	bf00      	nop
 8001bde:	bf00      	nop
 8001be0:	3710      	adds	r7, #16
 8001be2:	46bd      	mov	sp, r7
 8001be4:	bd80      	pop	{r7, pc}
 8001be6:	bf00      	nop
 8001be8:	20000008 	.word	0x20000008

08001bec <HAL_ADC_Init>:
 8001bec:	b580      	push	{r7, lr}
 8001bee:	b086      	sub	sp, #24
 8001bf0:	af00      	add	r7, sp, #0
 8001bf2:	6078      	str	r0, [r7, #4]
 8001bf4:	2300      	movs	r3, #0
 8001bf6:	75fb      	strb	r3, [r7, #23]
 8001bf8:	2300      	movs	r3, #0
 8001bfa:	613b      	str	r3, [r7, #16]
 8001bfc:	2300      	movs	r3, #0
 8001bfe:	60bb      	str	r3, [r7, #8]
 8001c00:	2300      	movs	r3, #0
 8001c02:	60fb      	str	r3, [r7, #12]
 8001c04:	687b      	ldr	r3, [r7, #4]
 8001c06:	2b00      	cmp	r3, #0
 8001c08:	d101      	bne.n	8001c0e <HAL_ADC_Init+0x22>
 8001c0a:	2301      	movs	r3, #1
 8001c0c:	e0be      	b.n	8001d8c <HAL_ADC_Init+0x1a0>
 8001c0e:	687b      	ldr	r3, [r7, #4]
 8001c10:	689b      	ldr	r3, [r3, #8]
 8001c12:	2b00      	cmp	r3, #0
 8001c14:	687b      	ldr	r3, [r7, #4]
 8001c16:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001c18:	2b00      	cmp	r3, #0
 8001c1a:	d109      	bne.n	8001c30 <HAL_ADC_Init+0x44>
 8001c1c:	687b      	ldr	r3, [r7, #4]
 8001c1e:	2200      	movs	r2, #0
 8001c20:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001c22:	687b      	ldr	r3, [r7, #4]
 8001c24:	2200      	movs	r2, #0
 8001c26:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8001c2a:	6878      	ldr	r0, [r7, #4]
 8001c2c:	f7ff fd70 	bl	8001710 <HAL_ADC_MspInit>
 8001c30:	6878      	ldr	r0, [r7, #4]
 8001c32:	f000 fa31 	bl	8002098 <ADC_ConversionStop_Disable>
 8001c36:	4603      	mov	r3, r0
 8001c38:	75fb      	strb	r3, [r7, #23]
 8001c3a:	687b      	ldr	r3, [r7, #4]
 8001c3c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001c3e:	f003 0310 	and.w	r3, r3, #16
 8001c42:	2b00      	cmp	r3, #0
 8001c44:	f040 8099 	bne.w	8001d7a <HAL_ADC_Init+0x18e>
 8001c48:	7dfb      	ldrb	r3, [r7, #23]
 8001c4a:	2b00      	cmp	r3, #0
 8001c4c:	f040 8095 	bne.w	8001d7a <HAL_ADC_Init+0x18e>
 8001c50:	687b      	ldr	r3, [r7, #4]
 8001c52:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001c54:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8001c58:	f023 0302 	bic.w	r3, r3, #2
 8001c5c:	f043 0202 	orr.w	r2, r3, #2
 8001c60:	687b      	ldr	r3, [r7, #4]
 8001c62:	629a      	str	r2, [r3, #40]	@ 0x28
 8001c64:	687b      	ldr	r3, [r7, #4]
 8001c66:	685a      	ldr	r2, [r3, #4]
 8001c68:	687b      	ldr	r3, [r7, #4]
 8001c6a:	69db      	ldr	r3, [r3, #28]
 8001c6c:	431a      	orrs	r2, r3
 8001c6e:	687b      	ldr	r3, [r7, #4]
 8001c70:	7b1b      	ldrb	r3, [r3, #12]
 8001c72:	005b      	lsls	r3, r3, #1
 8001c74:	4313      	orrs	r3, r2
 8001c76:	68ba      	ldr	r2, [r7, #8]
 8001c78:	4313      	orrs	r3, r2
 8001c7a:	60bb      	str	r3, [r7, #8]
 8001c7c:	687b      	ldr	r3, [r7, #4]
 8001c7e:	689b      	ldr	r3, [r3, #8]
 8001c80:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8001c84:	d003      	beq.n	8001c8e <HAL_ADC_Init+0xa2>
 8001c86:	687b      	ldr	r3, [r7, #4]
 8001c88:	689b      	ldr	r3, [r3, #8]
 8001c8a:	2b01      	cmp	r3, #1
 8001c8c:	d102      	bne.n	8001c94 <HAL_ADC_Init+0xa8>
 8001c8e:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8001c92:	e000      	b.n	8001c96 <HAL_ADC_Init+0xaa>
 8001c94:	2300      	movs	r3, #0
 8001c96:	693a      	ldr	r2, [r7, #16]
 8001c98:	4313      	orrs	r3, r2
 8001c9a:	613b      	str	r3, [r7, #16]
 8001c9c:	687b      	ldr	r3, [r7, #4]
 8001c9e:	7d1b      	ldrb	r3, [r3, #20]
 8001ca0:	2b01      	cmp	r3, #1
 8001ca2:	d119      	bne.n	8001cd8 <HAL_ADC_Init+0xec>
 8001ca4:	687b      	ldr	r3, [r7, #4]
 8001ca6:	7b1b      	ldrb	r3, [r3, #12]
 8001ca8:	2b00      	cmp	r3, #0
 8001caa:	d109      	bne.n	8001cc0 <HAL_ADC_Init+0xd4>
 8001cac:	687b      	ldr	r3, [r7, #4]
 8001cae:	699b      	ldr	r3, [r3, #24]
 8001cb0:	3b01      	subs	r3, #1
 8001cb2:	035a      	lsls	r2, r3, #13
 8001cb4:	693b      	ldr	r3, [r7, #16]
 8001cb6:	4313      	orrs	r3, r2
 8001cb8:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8001cbc:	613b      	str	r3, [r7, #16]
 8001cbe:	e00b      	b.n	8001cd8 <HAL_ADC_Init+0xec>
 8001cc0:	687b      	ldr	r3, [r7, #4]
 8001cc2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001cc4:	f043 0220 	orr.w	r2, r3, #32
 8001cc8:	687b      	ldr	r3, [r7, #4]
 8001cca:	629a      	str	r2, [r3, #40]	@ 0x28
 8001ccc:	687b      	ldr	r3, [r7, #4]
 8001cce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001cd0:	f043 0201 	orr.w	r2, r3, #1
 8001cd4:	687b      	ldr	r3, [r7, #4]
 8001cd6:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001cd8:	687b      	ldr	r3, [r7, #4]
 8001cda:	681b      	ldr	r3, [r3, #0]
 8001cdc:	685b      	ldr	r3, [r3, #4]
 8001cde:	f423 4169 	bic.w	r1, r3, #59648	@ 0xe900
 8001ce2:	687b      	ldr	r3, [r7, #4]
 8001ce4:	681b      	ldr	r3, [r3, #0]
 8001ce6:	693a      	ldr	r2, [r7, #16]
 8001ce8:	430a      	orrs	r2, r1
 8001cea:	605a      	str	r2, [r3, #4]
 8001cec:	687b      	ldr	r3, [r7, #4]
 8001cee:	681b      	ldr	r3, [r3, #0]
 8001cf0:	689a      	ldr	r2, [r3, #8]
 8001cf2:	4b28      	ldr	r3, [pc, #160]	@ (8001d94 <HAL_ADC_Init+0x1a8>)
 8001cf4:	4013      	ands	r3, r2
 8001cf6:	687a      	ldr	r2, [r7, #4]
 8001cf8:	6812      	ldr	r2, [r2, #0]
 8001cfa:	68b9      	ldr	r1, [r7, #8]
 8001cfc:	430b      	orrs	r3, r1
 8001cfe:	6093      	str	r3, [r2, #8]
 8001d00:	687b      	ldr	r3, [r7, #4]
 8001d02:	689b      	ldr	r3, [r3, #8]
 8001d04:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8001d08:	d003      	beq.n	8001d12 <HAL_ADC_Init+0x126>
 8001d0a:	687b      	ldr	r3, [r7, #4]
 8001d0c:	689b      	ldr	r3, [r3, #8]
 8001d0e:	2b01      	cmp	r3, #1
 8001d10:	d104      	bne.n	8001d1c <HAL_ADC_Init+0x130>
 8001d12:	687b      	ldr	r3, [r7, #4]
 8001d14:	691b      	ldr	r3, [r3, #16]
 8001d16:	3b01      	subs	r3, #1
 8001d18:	051b      	lsls	r3, r3, #20
 8001d1a:	60fb      	str	r3, [r7, #12]
 8001d1c:	687b      	ldr	r3, [r7, #4]
 8001d1e:	681b      	ldr	r3, [r3, #0]
 8001d20:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001d22:	f423 0170 	bic.w	r1, r3, #15728640	@ 0xf00000
 8001d26:	687b      	ldr	r3, [r7, #4]
 8001d28:	681b      	ldr	r3, [r3, #0]
 8001d2a:	68fa      	ldr	r2, [r7, #12]
 8001d2c:	430a      	orrs	r2, r1
 8001d2e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001d30:	687b      	ldr	r3, [r7, #4]
 8001d32:	681b      	ldr	r3, [r3, #0]
 8001d34:	689a      	ldr	r2, [r3, #8]
 8001d36:	4b18      	ldr	r3, [pc, #96]	@ (8001d98 <HAL_ADC_Init+0x1ac>)
 8001d38:	4013      	ands	r3, r2
 8001d3a:	68ba      	ldr	r2, [r7, #8]
 8001d3c:	429a      	cmp	r2, r3
 8001d3e:	d10b      	bne.n	8001d58 <HAL_ADC_Init+0x16c>
 8001d40:	687b      	ldr	r3, [r7, #4]
 8001d42:	2200      	movs	r2, #0
 8001d44:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001d46:	687b      	ldr	r3, [r7, #4]
 8001d48:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001d4a:	f023 0303 	bic.w	r3, r3, #3
 8001d4e:	f043 0201 	orr.w	r2, r3, #1
 8001d52:	687b      	ldr	r3, [r7, #4]
 8001d54:	629a      	str	r2, [r3, #40]	@ 0x28
 8001d56:	e018      	b.n	8001d8a <HAL_ADC_Init+0x19e>
 8001d58:	687b      	ldr	r3, [r7, #4]
 8001d5a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001d5c:	f023 0312 	bic.w	r3, r3, #18
 8001d60:	f043 0210 	orr.w	r2, r3, #16
 8001d64:	687b      	ldr	r3, [r7, #4]
 8001d66:	629a      	str	r2, [r3, #40]	@ 0x28
 8001d68:	687b      	ldr	r3, [r7, #4]
 8001d6a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001d6c:	f043 0201 	orr.w	r2, r3, #1
 8001d70:	687b      	ldr	r3, [r7, #4]
 8001d72:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001d74:	2301      	movs	r3, #1
 8001d76:	75fb      	strb	r3, [r7, #23]
 8001d78:	e007      	b.n	8001d8a <HAL_ADC_Init+0x19e>
 8001d7a:	687b      	ldr	r3, [r7, #4]
 8001d7c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001d7e:	f043 0210 	orr.w	r2, r3, #16
 8001d82:	687b      	ldr	r3, [r7, #4]
 8001d84:	629a      	str	r2, [r3, #40]	@ 0x28
 8001d86:	2301      	movs	r3, #1
 8001d88:	75fb      	strb	r3, [r7, #23]
 8001d8a:	7dfb      	ldrb	r3, [r7, #23]
 8001d8c:	4618      	mov	r0, r3
 8001d8e:	3718      	adds	r7, #24
 8001d90:	46bd      	mov	sp, r7
 8001d92:	bd80      	pop	{r7, pc}
 8001d94:	ffe1f7fd 	.word	0xffe1f7fd
 8001d98:	ff1f0efe 	.word	0xff1f0efe

08001d9c <HAL_ADC_Stop>:
 8001d9c:	b580      	push	{r7, lr}
 8001d9e:	b084      	sub	sp, #16
 8001da0:	af00      	add	r7, sp, #0
 8001da2:	6078      	str	r0, [r7, #4]
 8001da4:	2300      	movs	r3, #0
 8001da6:	73fb      	strb	r3, [r7, #15]
 8001da8:	687b      	ldr	r3, [r7, #4]
 8001daa:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8001dae:	2b01      	cmp	r3, #1
 8001db0:	d101      	bne.n	8001db6 <HAL_ADC_Stop+0x1a>
 8001db2:	2302      	movs	r3, #2
 8001db4:	e01a      	b.n	8001dec <HAL_ADC_Stop+0x50>
 8001db6:	687b      	ldr	r3, [r7, #4]
 8001db8:	2201      	movs	r2, #1
 8001dba:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8001dbe:	6878      	ldr	r0, [r7, #4]
 8001dc0:	f000 f96a 	bl	8002098 <ADC_ConversionStop_Disable>
 8001dc4:	4603      	mov	r3, r0
 8001dc6:	73fb      	strb	r3, [r7, #15]
 8001dc8:	7bfb      	ldrb	r3, [r7, #15]
 8001dca:	2b00      	cmp	r3, #0
 8001dcc:	d109      	bne.n	8001de2 <HAL_ADC_Stop+0x46>
 8001dce:	687b      	ldr	r3, [r7, #4]
 8001dd0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001dd2:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8001dd6:	f023 0301 	bic.w	r3, r3, #1
 8001dda:	f043 0201 	orr.w	r2, r3, #1
 8001dde:	687b      	ldr	r3, [r7, #4]
 8001de0:	629a      	str	r2, [r3, #40]	@ 0x28
 8001de2:	687b      	ldr	r3, [r7, #4]
 8001de4:	2200      	movs	r2, #0
 8001de6:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8001dea:	7bfb      	ldrb	r3, [r7, #15]
 8001dec:	4618      	mov	r0, r3
 8001dee:	3710      	adds	r7, #16
 8001df0:	46bd      	mov	sp, r7
 8001df2:	bd80      	pop	{r7, pc}

08001df4 <HAL_ADC_ConfigChannel>:
 8001df4:	b480      	push	{r7}
 8001df6:	b085      	sub	sp, #20
 8001df8:	af00      	add	r7, sp, #0
 8001dfa:	6078      	str	r0, [r7, #4]
 8001dfc:	6039      	str	r1, [r7, #0]
 8001dfe:	2300      	movs	r3, #0
 8001e00:	73fb      	strb	r3, [r7, #15]
 8001e02:	2300      	movs	r3, #0
 8001e04:	60bb      	str	r3, [r7, #8]
 8001e06:	687b      	ldr	r3, [r7, #4]
 8001e08:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8001e0c:	2b01      	cmp	r3, #1
 8001e0e:	d101      	bne.n	8001e14 <HAL_ADC_ConfigChannel+0x20>
 8001e10:	2302      	movs	r3, #2
 8001e12:	e0dc      	b.n	8001fce <HAL_ADC_ConfigChannel+0x1da>
 8001e14:	687b      	ldr	r3, [r7, #4]
 8001e16:	2201      	movs	r2, #1
 8001e18:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8001e1c:	683b      	ldr	r3, [r7, #0]
 8001e1e:	685b      	ldr	r3, [r3, #4]
 8001e20:	2b06      	cmp	r3, #6
 8001e22:	d81c      	bhi.n	8001e5e <HAL_ADC_ConfigChannel+0x6a>
 8001e24:	687b      	ldr	r3, [r7, #4]
 8001e26:	681b      	ldr	r3, [r3, #0]
 8001e28:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8001e2a:	683b      	ldr	r3, [r7, #0]
 8001e2c:	685a      	ldr	r2, [r3, #4]
 8001e2e:	4613      	mov	r3, r2
 8001e30:	009b      	lsls	r3, r3, #2
 8001e32:	4413      	add	r3, r2
 8001e34:	3b05      	subs	r3, #5
 8001e36:	221f      	movs	r2, #31
 8001e38:	fa02 f303 	lsl.w	r3, r2, r3
 8001e3c:	43db      	mvns	r3, r3
 8001e3e:	4019      	ands	r1, r3
 8001e40:	683b      	ldr	r3, [r7, #0]
 8001e42:	6818      	ldr	r0, [r3, #0]
 8001e44:	683b      	ldr	r3, [r7, #0]
 8001e46:	685a      	ldr	r2, [r3, #4]
 8001e48:	4613      	mov	r3, r2
 8001e4a:	009b      	lsls	r3, r3, #2
 8001e4c:	4413      	add	r3, r2
 8001e4e:	3b05      	subs	r3, #5
 8001e50:	fa00 f203 	lsl.w	r2, r0, r3
 8001e54:	687b      	ldr	r3, [r7, #4]
 8001e56:	681b      	ldr	r3, [r3, #0]
 8001e58:	430a      	orrs	r2, r1
 8001e5a:	635a      	str	r2, [r3, #52]	@ 0x34
 8001e5c:	e03c      	b.n	8001ed8 <HAL_ADC_ConfigChannel+0xe4>
 8001e5e:	683b      	ldr	r3, [r7, #0]
 8001e60:	685b      	ldr	r3, [r3, #4]
 8001e62:	2b0c      	cmp	r3, #12
 8001e64:	d81c      	bhi.n	8001ea0 <HAL_ADC_ConfigChannel+0xac>
 8001e66:	687b      	ldr	r3, [r7, #4]
 8001e68:	681b      	ldr	r3, [r3, #0]
 8001e6a:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8001e6c:	683b      	ldr	r3, [r7, #0]
 8001e6e:	685a      	ldr	r2, [r3, #4]
 8001e70:	4613      	mov	r3, r2
 8001e72:	009b      	lsls	r3, r3, #2
 8001e74:	4413      	add	r3, r2
 8001e76:	3b23      	subs	r3, #35	@ 0x23
 8001e78:	221f      	movs	r2, #31
 8001e7a:	fa02 f303 	lsl.w	r3, r2, r3
 8001e7e:	43db      	mvns	r3, r3
 8001e80:	4019      	ands	r1, r3
 8001e82:	683b      	ldr	r3, [r7, #0]
 8001e84:	6818      	ldr	r0, [r3, #0]
 8001e86:	683b      	ldr	r3, [r7, #0]
 8001e88:	685a      	ldr	r2, [r3, #4]
 8001e8a:	4613      	mov	r3, r2
 8001e8c:	009b      	lsls	r3, r3, #2
 8001e8e:	4413      	add	r3, r2
 8001e90:	3b23      	subs	r3, #35	@ 0x23
 8001e92:	fa00 f203 	lsl.w	r2, r0, r3
 8001e96:	687b      	ldr	r3, [r7, #4]
 8001e98:	681b      	ldr	r3, [r3, #0]
 8001e9a:	430a      	orrs	r2, r1
 8001e9c:	631a      	str	r2, [r3, #48]	@ 0x30
 8001e9e:	e01b      	b.n	8001ed8 <HAL_ADC_ConfigChannel+0xe4>
 8001ea0:	687b      	ldr	r3, [r7, #4]
 8001ea2:	681b      	ldr	r3, [r3, #0]
 8001ea4:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8001ea6:	683b      	ldr	r3, [r7, #0]
 8001ea8:	685a      	ldr	r2, [r3, #4]
 8001eaa:	4613      	mov	r3, r2
 8001eac:	009b      	lsls	r3, r3, #2
 8001eae:	4413      	add	r3, r2
 8001eb0:	3b41      	subs	r3, #65	@ 0x41
 8001eb2:	221f      	movs	r2, #31
 8001eb4:	fa02 f303 	lsl.w	r3, r2, r3
 8001eb8:	43db      	mvns	r3, r3
 8001eba:	4019      	ands	r1, r3
 8001ebc:	683b      	ldr	r3, [r7, #0]
 8001ebe:	6818      	ldr	r0, [r3, #0]
 8001ec0:	683b      	ldr	r3, [r7, #0]
 8001ec2:	685a      	ldr	r2, [r3, #4]
 8001ec4:	4613      	mov	r3, r2
 8001ec6:	009b      	lsls	r3, r3, #2
 8001ec8:	4413      	add	r3, r2
 8001eca:	3b41      	subs	r3, #65	@ 0x41
 8001ecc:	fa00 f203 	lsl.w	r2, r0, r3
 8001ed0:	687b      	ldr	r3, [r7, #4]
 8001ed2:	681b      	ldr	r3, [r3, #0]
 8001ed4:	430a      	orrs	r2, r1
 8001ed6:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001ed8:	683b      	ldr	r3, [r7, #0]
 8001eda:	681b      	ldr	r3, [r3, #0]
 8001edc:	2b09      	cmp	r3, #9
 8001ede:	d91c      	bls.n	8001f1a <HAL_ADC_ConfigChannel+0x126>
 8001ee0:	687b      	ldr	r3, [r7, #4]
 8001ee2:	681b      	ldr	r3, [r3, #0]
 8001ee4:	68d9      	ldr	r1, [r3, #12]
 8001ee6:	683b      	ldr	r3, [r7, #0]
 8001ee8:	681a      	ldr	r2, [r3, #0]
 8001eea:	4613      	mov	r3, r2
 8001eec:	005b      	lsls	r3, r3, #1
 8001eee:	4413      	add	r3, r2
 8001ef0:	3b1e      	subs	r3, #30
 8001ef2:	2207      	movs	r2, #7
 8001ef4:	fa02 f303 	lsl.w	r3, r2, r3
 8001ef8:	43db      	mvns	r3, r3
 8001efa:	4019      	ands	r1, r3
 8001efc:	683b      	ldr	r3, [r7, #0]
 8001efe:	6898      	ldr	r0, [r3, #8]
 8001f00:	683b      	ldr	r3, [r7, #0]
 8001f02:	681a      	ldr	r2, [r3, #0]
 8001f04:	4613      	mov	r3, r2
 8001f06:	005b      	lsls	r3, r3, #1
 8001f08:	4413      	add	r3, r2
 8001f0a:	3b1e      	subs	r3, #30
 8001f0c:	fa00 f203 	lsl.w	r2, r0, r3
 8001f10:	687b      	ldr	r3, [r7, #4]
 8001f12:	681b      	ldr	r3, [r3, #0]
 8001f14:	430a      	orrs	r2, r1
 8001f16:	60da      	str	r2, [r3, #12]
 8001f18:	e019      	b.n	8001f4e <HAL_ADC_ConfigChannel+0x15a>
 8001f1a:	687b      	ldr	r3, [r7, #4]
 8001f1c:	681b      	ldr	r3, [r3, #0]
 8001f1e:	6919      	ldr	r1, [r3, #16]
 8001f20:	683b      	ldr	r3, [r7, #0]
 8001f22:	681a      	ldr	r2, [r3, #0]
 8001f24:	4613      	mov	r3, r2
 8001f26:	005b      	lsls	r3, r3, #1
 8001f28:	4413      	add	r3, r2
 8001f2a:	2207      	movs	r2, #7
 8001f2c:	fa02 f303 	lsl.w	r3, r2, r3
 8001f30:	43db      	mvns	r3, r3
 8001f32:	4019      	ands	r1, r3
 8001f34:	683b      	ldr	r3, [r7, #0]
 8001f36:	6898      	ldr	r0, [r3, #8]
 8001f38:	683b      	ldr	r3, [r7, #0]
 8001f3a:	681a      	ldr	r2, [r3, #0]
 8001f3c:	4613      	mov	r3, r2
 8001f3e:	005b      	lsls	r3, r3, #1
 8001f40:	4413      	add	r3, r2
 8001f42:	fa00 f203 	lsl.w	r2, r0, r3
 8001f46:	687b      	ldr	r3, [r7, #4]
 8001f48:	681b      	ldr	r3, [r3, #0]
 8001f4a:	430a      	orrs	r2, r1
 8001f4c:	611a      	str	r2, [r3, #16]
 8001f4e:	683b      	ldr	r3, [r7, #0]
 8001f50:	681b      	ldr	r3, [r3, #0]
 8001f52:	2b10      	cmp	r3, #16
 8001f54:	d003      	beq.n	8001f5e <HAL_ADC_ConfigChannel+0x16a>
 8001f56:	683b      	ldr	r3, [r7, #0]
 8001f58:	681b      	ldr	r3, [r3, #0]
 8001f5a:	2b11      	cmp	r3, #17
 8001f5c:	d132      	bne.n	8001fc4 <HAL_ADC_ConfigChannel+0x1d0>
 8001f5e:	687b      	ldr	r3, [r7, #4]
 8001f60:	681b      	ldr	r3, [r3, #0]
 8001f62:	4a1d      	ldr	r2, [pc, #116]	@ (8001fd8 <HAL_ADC_ConfigChannel+0x1e4>)
 8001f64:	4293      	cmp	r3, r2
 8001f66:	d125      	bne.n	8001fb4 <HAL_ADC_ConfigChannel+0x1c0>
 8001f68:	687b      	ldr	r3, [r7, #4]
 8001f6a:	681b      	ldr	r3, [r3, #0]
 8001f6c:	689b      	ldr	r3, [r3, #8]
 8001f6e:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8001f72:	2b00      	cmp	r3, #0
 8001f74:	d126      	bne.n	8001fc4 <HAL_ADC_ConfigChannel+0x1d0>
 8001f76:	687b      	ldr	r3, [r7, #4]
 8001f78:	681b      	ldr	r3, [r3, #0]
 8001f7a:	689a      	ldr	r2, [r3, #8]
 8001f7c:	687b      	ldr	r3, [r7, #4]
 8001f7e:	681b      	ldr	r3, [r3, #0]
 8001f80:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8001f84:	609a      	str	r2, [r3, #8]
 8001f86:	683b      	ldr	r3, [r7, #0]
 8001f88:	681b      	ldr	r3, [r3, #0]
 8001f8a:	2b10      	cmp	r3, #16
 8001f8c:	d11a      	bne.n	8001fc4 <HAL_ADC_ConfigChannel+0x1d0>
 8001f8e:	4b13      	ldr	r3, [pc, #76]	@ (8001fdc <HAL_ADC_ConfigChannel+0x1e8>)
 8001f90:	681b      	ldr	r3, [r3, #0]
 8001f92:	4a13      	ldr	r2, [pc, #76]	@ (8001fe0 <HAL_ADC_ConfigChannel+0x1ec>)
 8001f94:	fba2 2303 	umull	r2, r3, r2, r3
 8001f98:	0c9a      	lsrs	r2, r3, #18
 8001f9a:	4613      	mov	r3, r2
 8001f9c:	009b      	lsls	r3, r3, #2
 8001f9e:	4413      	add	r3, r2
 8001fa0:	005b      	lsls	r3, r3, #1
 8001fa2:	60bb      	str	r3, [r7, #8]
 8001fa4:	e002      	b.n	8001fac <HAL_ADC_ConfigChannel+0x1b8>
 8001fa6:	68bb      	ldr	r3, [r7, #8]
 8001fa8:	3b01      	subs	r3, #1
 8001faa:	60bb      	str	r3, [r7, #8]
 8001fac:	68bb      	ldr	r3, [r7, #8]
 8001fae:	2b00      	cmp	r3, #0
 8001fb0:	d1f9      	bne.n	8001fa6 <HAL_ADC_ConfigChannel+0x1b2>
 8001fb2:	e007      	b.n	8001fc4 <HAL_ADC_ConfigChannel+0x1d0>
 8001fb4:	687b      	ldr	r3, [r7, #4]
 8001fb6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001fb8:	f043 0220 	orr.w	r2, r3, #32
 8001fbc:	687b      	ldr	r3, [r7, #4]
 8001fbe:	629a      	str	r2, [r3, #40]	@ 0x28
 8001fc0:	2301      	movs	r3, #1
 8001fc2:	73fb      	strb	r3, [r7, #15]
 8001fc4:	687b      	ldr	r3, [r7, #4]
 8001fc6:	2200      	movs	r2, #0
 8001fc8:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8001fcc:	7bfb      	ldrb	r3, [r7, #15]
 8001fce:	4618      	mov	r0, r3
 8001fd0:	3714      	adds	r7, #20
 8001fd2:	46bd      	mov	sp, r7
 8001fd4:	bc80      	pop	{r7}
 8001fd6:	4770      	bx	lr
 8001fd8:	40012400 	.word	0x40012400
 8001fdc:	20000000 	.word	0x20000000
 8001fe0:	431bde83 	.word	0x431bde83

08001fe4 <ADC_Enable>:
 8001fe4:	b580      	push	{r7, lr}
 8001fe6:	b084      	sub	sp, #16
 8001fe8:	af00      	add	r7, sp, #0
 8001fea:	6078      	str	r0, [r7, #4]
 8001fec:	2300      	movs	r3, #0
 8001fee:	60fb      	str	r3, [r7, #12]
 8001ff0:	2300      	movs	r3, #0
 8001ff2:	60bb      	str	r3, [r7, #8]
 8001ff4:	687b      	ldr	r3, [r7, #4]
 8001ff6:	681b      	ldr	r3, [r3, #0]
 8001ff8:	689b      	ldr	r3, [r3, #8]
 8001ffa:	f003 0301 	and.w	r3, r3, #1
 8001ffe:	2b01      	cmp	r3, #1
 8002000:	d040      	beq.n	8002084 <ADC_Enable+0xa0>
 8002002:	687b      	ldr	r3, [r7, #4]
 8002004:	681b      	ldr	r3, [r3, #0]
 8002006:	689a      	ldr	r2, [r3, #8]
 8002008:	687b      	ldr	r3, [r7, #4]
 800200a:	681b      	ldr	r3, [r3, #0]
 800200c:	f042 0201 	orr.w	r2, r2, #1
 8002010:	609a      	str	r2, [r3, #8]
 8002012:	4b1f      	ldr	r3, [pc, #124]	@ (8002090 <ADC_Enable+0xac>)
 8002014:	681b      	ldr	r3, [r3, #0]
 8002016:	4a1f      	ldr	r2, [pc, #124]	@ (8002094 <ADC_Enable+0xb0>)
 8002018:	fba2 2303 	umull	r2, r3, r2, r3
 800201c:	0c9b      	lsrs	r3, r3, #18
 800201e:	60bb      	str	r3, [r7, #8]
 8002020:	e002      	b.n	8002028 <ADC_Enable+0x44>
 8002022:	68bb      	ldr	r3, [r7, #8]
 8002024:	3b01      	subs	r3, #1
 8002026:	60bb      	str	r3, [r7, #8]
 8002028:	68bb      	ldr	r3, [r7, #8]
 800202a:	2b00      	cmp	r3, #0
 800202c:	d1f9      	bne.n	8002022 <ADC_Enable+0x3e>
 800202e:	f7ff fdaf 	bl	8001b90 <HAL_GetTick>
 8002032:	60f8      	str	r0, [r7, #12]
 8002034:	e01f      	b.n	8002076 <ADC_Enable+0x92>
 8002036:	f7ff fdab 	bl	8001b90 <HAL_GetTick>
 800203a:	4602      	mov	r2, r0
 800203c:	68fb      	ldr	r3, [r7, #12]
 800203e:	1ad3      	subs	r3, r2, r3
 8002040:	2b02      	cmp	r3, #2
 8002042:	d918      	bls.n	8002076 <ADC_Enable+0x92>
 8002044:	687b      	ldr	r3, [r7, #4]
 8002046:	681b      	ldr	r3, [r3, #0]
 8002048:	689b      	ldr	r3, [r3, #8]
 800204a:	f003 0301 	and.w	r3, r3, #1
 800204e:	2b01      	cmp	r3, #1
 8002050:	d011      	beq.n	8002076 <ADC_Enable+0x92>
 8002052:	687b      	ldr	r3, [r7, #4]
 8002054:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002056:	f043 0210 	orr.w	r2, r3, #16
 800205a:	687b      	ldr	r3, [r7, #4]
 800205c:	629a      	str	r2, [r3, #40]	@ 0x28
 800205e:	687b      	ldr	r3, [r7, #4]
 8002060:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002062:	f043 0201 	orr.w	r2, r3, #1
 8002066:	687b      	ldr	r3, [r7, #4]
 8002068:	62da      	str	r2, [r3, #44]	@ 0x2c
 800206a:	687b      	ldr	r3, [r7, #4]
 800206c:	2200      	movs	r2, #0
 800206e:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002072:	2301      	movs	r3, #1
 8002074:	e007      	b.n	8002086 <ADC_Enable+0xa2>
 8002076:	687b      	ldr	r3, [r7, #4]
 8002078:	681b      	ldr	r3, [r3, #0]
 800207a:	689b      	ldr	r3, [r3, #8]
 800207c:	f003 0301 	and.w	r3, r3, #1
 8002080:	2b01      	cmp	r3, #1
 8002082:	d1d8      	bne.n	8002036 <ADC_Enable+0x52>
 8002084:	2300      	movs	r3, #0
 8002086:	4618      	mov	r0, r3
 8002088:	3710      	adds	r7, #16
 800208a:	46bd      	mov	sp, r7
 800208c:	bd80      	pop	{r7, pc}
 800208e:	bf00      	nop
 8002090:	20000000 	.word	0x20000000
 8002094:	431bde83 	.word	0x431bde83

08002098 <ADC_ConversionStop_Disable>:
 8002098:	b580      	push	{r7, lr}
 800209a:	b084      	sub	sp, #16
 800209c:	af00      	add	r7, sp, #0
 800209e:	6078      	str	r0, [r7, #4]
 80020a0:	2300      	movs	r3, #0
 80020a2:	60fb      	str	r3, [r7, #12]
 80020a4:	687b      	ldr	r3, [r7, #4]
 80020a6:	681b      	ldr	r3, [r3, #0]
 80020a8:	689b      	ldr	r3, [r3, #8]
 80020aa:	f003 0301 	and.w	r3, r3, #1
 80020ae:	2b01      	cmp	r3, #1
 80020b0:	d12e      	bne.n	8002110 <ADC_ConversionStop_Disable+0x78>
 80020b2:	687b      	ldr	r3, [r7, #4]
 80020b4:	681b      	ldr	r3, [r3, #0]
 80020b6:	689a      	ldr	r2, [r3, #8]
 80020b8:	687b      	ldr	r3, [r7, #4]
 80020ba:	681b      	ldr	r3, [r3, #0]
 80020bc:	f022 0201 	bic.w	r2, r2, #1
 80020c0:	609a      	str	r2, [r3, #8]
 80020c2:	f7ff fd65 	bl	8001b90 <HAL_GetTick>
 80020c6:	60f8      	str	r0, [r7, #12]
 80020c8:	e01b      	b.n	8002102 <ADC_ConversionStop_Disable+0x6a>
 80020ca:	f7ff fd61 	bl	8001b90 <HAL_GetTick>
 80020ce:	4602      	mov	r2, r0
 80020d0:	68fb      	ldr	r3, [r7, #12]
 80020d2:	1ad3      	subs	r3, r2, r3
 80020d4:	2b02      	cmp	r3, #2
 80020d6:	d914      	bls.n	8002102 <ADC_ConversionStop_Disable+0x6a>
 80020d8:	687b      	ldr	r3, [r7, #4]
 80020da:	681b      	ldr	r3, [r3, #0]
 80020dc:	689b      	ldr	r3, [r3, #8]
 80020de:	f003 0301 	and.w	r3, r3, #1
 80020e2:	2b01      	cmp	r3, #1
 80020e4:	d10d      	bne.n	8002102 <ADC_ConversionStop_Disable+0x6a>
 80020e6:	687b      	ldr	r3, [r7, #4]
 80020e8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80020ea:	f043 0210 	orr.w	r2, r3, #16
 80020ee:	687b      	ldr	r3, [r7, #4]
 80020f0:	629a      	str	r2, [r3, #40]	@ 0x28
 80020f2:	687b      	ldr	r3, [r7, #4]
 80020f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80020f6:	f043 0201 	orr.w	r2, r3, #1
 80020fa:	687b      	ldr	r3, [r7, #4]
 80020fc:	62da      	str	r2, [r3, #44]	@ 0x2c
 80020fe:	2301      	movs	r3, #1
 8002100:	e007      	b.n	8002112 <ADC_ConversionStop_Disable+0x7a>
 8002102:	687b      	ldr	r3, [r7, #4]
 8002104:	681b      	ldr	r3, [r3, #0]
 8002106:	689b      	ldr	r3, [r3, #8]
 8002108:	f003 0301 	and.w	r3, r3, #1
 800210c:	2b01      	cmp	r3, #1
 800210e:	d0dc      	beq.n	80020ca <ADC_ConversionStop_Disable+0x32>
 8002110:	2300      	movs	r3, #0
 8002112:	4618      	mov	r0, r3
 8002114:	3710      	adds	r7, #16
 8002116:	46bd      	mov	sp, r7
 8002118:	bd80      	pop	{r7, pc}
	...

0800211c <HAL_ADCEx_Calibration_Start>:
 800211c:	b590      	push	{r4, r7, lr}
 800211e:	b087      	sub	sp, #28
 8002120:	af00      	add	r7, sp, #0
 8002122:	6078      	str	r0, [r7, #4]
 8002124:	2300      	movs	r3, #0
 8002126:	75fb      	strb	r3, [r7, #23]
 8002128:	2300      	movs	r3, #0
 800212a:	60fb      	str	r3, [r7, #12]
 800212c:	687b      	ldr	r3, [r7, #4]
 800212e:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8002132:	2b01      	cmp	r3, #1
 8002134:	d101      	bne.n	800213a <HAL_ADCEx_Calibration_Start+0x1e>
 8002136:	2302      	movs	r3, #2
 8002138:	e097      	b.n	800226a <HAL_ADCEx_Calibration_Start+0x14e>
 800213a:	687b      	ldr	r3, [r7, #4]
 800213c:	2201      	movs	r2, #1
 800213e:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002142:	6878      	ldr	r0, [r7, #4]
 8002144:	f7ff ffa8 	bl	8002098 <ADC_ConversionStop_Disable>
 8002148:	4603      	mov	r3, r0
 800214a:	75fb      	strb	r3, [r7, #23]
 800214c:	6878      	ldr	r0, [r7, #4]
 800214e:	f7ff ff49 	bl	8001fe4 <ADC_Enable>
 8002152:	4603      	mov	r3, r0
 8002154:	75fb      	strb	r3, [r7, #23]
 8002156:	7dfb      	ldrb	r3, [r7, #23]
 8002158:	2b00      	cmp	r3, #0
 800215a:	f040 8081 	bne.w	8002260 <HAL_ADCEx_Calibration_Start+0x144>
 800215e:	687b      	ldr	r3, [r7, #4]
 8002160:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002162:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8002166:	f023 0302 	bic.w	r3, r3, #2
 800216a:	f043 0202 	orr.w	r2, r3, #2
 800216e:	687b      	ldr	r3, [r7, #4]
 8002170:	629a      	str	r2, [r3, #40]	@ 0x28
 8002172:	4b40      	ldr	r3, [pc, #256]	@ (8002274 <HAL_ADCEx_Calibration_Start+0x158>)
 8002174:	681c      	ldr	r4, [r3, #0]
 8002176:	2002      	movs	r0, #2
 8002178:	f001 f8a6 	bl	80032c8 <HAL_RCCEx_GetPeriphCLKFreq>
 800217c:	4603      	mov	r3, r0
 800217e:	fbb4 f3f3 	udiv	r3, r4, r3
 8002182:	005b      	lsls	r3, r3, #1
 8002184:	60fb      	str	r3, [r7, #12]
 8002186:	e002      	b.n	800218e <HAL_ADCEx_Calibration_Start+0x72>
 8002188:	68fb      	ldr	r3, [r7, #12]
 800218a:	3b01      	subs	r3, #1
 800218c:	60fb      	str	r3, [r7, #12]
 800218e:	68fb      	ldr	r3, [r7, #12]
 8002190:	2b00      	cmp	r3, #0
 8002192:	d1f9      	bne.n	8002188 <HAL_ADCEx_Calibration_Start+0x6c>
 8002194:	687b      	ldr	r3, [r7, #4]
 8002196:	681b      	ldr	r3, [r3, #0]
 8002198:	689a      	ldr	r2, [r3, #8]
 800219a:	687b      	ldr	r3, [r7, #4]
 800219c:	681b      	ldr	r3, [r3, #0]
 800219e:	f042 0208 	orr.w	r2, r2, #8
 80021a2:	609a      	str	r2, [r3, #8]
 80021a4:	f7ff fcf4 	bl	8001b90 <HAL_GetTick>
 80021a8:	6138      	str	r0, [r7, #16]
 80021aa:	e01b      	b.n	80021e4 <HAL_ADCEx_Calibration_Start+0xc8>
 80021ac:	f7ff fcf0 	bl	8001b90 <HAL_GetTick>
 80021b0:	4602      	mov	r2, r0
 80021b2:	693b      	ldr	r3, [r7, #16]
 80021b4:	1ad3      	subs	r3, r2, r3
 80021b6:	2b0a      	cmp	r3, #10
 80021b8:	d914      	bls.n	80021e4 <HAL_ADCEx_Calibration_Start+0xc8>
 80021ba:	687b      	ldr	r3, [r7, #4]
 80021bc:	681b      	ldr	r3, [r3, #0]
 80021be:	689b      	ldr	r3, [r3, #8]
 80021c0:	f003 0308 	and.w	r3, r3, #8
 80021c4:	2b00      	cmp	r3, #0
 80021c6:	d00d      	beq.n	80021e4 <HAL_ADCEx_Calibration_Start+0xc8>
 80021c8:	687b      	ldr	r3, [r7, #4]
 80021ca:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80021cc:	f023 0312 	bic.w	r3, r3, #18
 80021d0:	f043 0210 	orr.w	r2, r3, #16
 80021d4:	687b      	ldr	r3, [r7, #4]
 80021d6:	629a      	str	r2, [r3, #40]	@ 0x28
 80021d8:	687b      	ldr	r3, [r7, #4]
 80021da:	2200      	movs	r2, #0
 80021dc:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80021e0:	2301      	movs	r3, #1
 80021e2:	e042      	b.n	800226a <HAL_ADCEx_Calibration_Start+0x14e>
 80021e4:	687b      	ldr	r3, [r7, #4]
 80021e6:	681b      	ldr	r3, [r3, #0]
 80021e8:	689b      	ldr	r3, [r3, #8]
 80021ea:	f003 0308 	and.w	r3, r3, #8
 80021ee:	2b00      	cmp	r3, #0
 80021f0:	d1dc      	bne.n	80021ac <HAL_ADCEx_Calibration_Start+0x90>
 80021f2:	687b      	ldr	r3, [r7, #4]
 80021f4:	681b      	ldr	r3, [r3, #0]
 80021f6:	689a      	ldr	r2, [r3, #8]
 80021f8:	687b      	ldr	r3, [r7, #4]
 80021fa:	681b      	ldr	r3, [r3, #0]
 80021fc:	f042 0204 	orr.w	r2, r2, #4
 8002200:	609a      	str	r2, [r3, #8]
 8002202:	f7ff fcc5 	bl	8001b90 <HAL_GetTick>
 8002206:	6138      	str	r0, [r7, #16]
 8002208:	e01b      	b.n	8002242 <HAL_ADCEx_Calibration_Start+0x126>
 800220a:	f7ff fcc1 	bl	8001b90 <HAL_GetTick>
 800220e:	4602      	mov	r2, r0
 8002210:	693b      	ldr	r3, [r7, #16]
 8002212:	1ad3      	subs	r3, r2, r3
 8002214:	2b0a      	cmp	r3, #10
 8002216:	d914      	bls.n	8002242 <HAL_ADCEx_Calibration_Start+0x126>
 8002218:	687b      	ldr	r3, [r7, #4]
 800221a:	681b      	ldr	r3, [r3, #0]
 800221c:	689b      	ldr	r3, [r3, #8]
 800221e:	f003 0304 	and.w	r3, r3, #4
 8002222:	2b00      	cmp	r3, #0
 8002224:	d00d      	beq.n	8002242 <HAL_ADCEx_Calibration_Start+0x126>
 8002226:	687b      	ldr	r3, [r7, #4]
 8002228:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800222a:	f023 0312 	bic.w	r3, r3, #18
 800222e:	f043 0210 	orr.w	r2, r3, #16
 8002232:	687b      	ldr	r3, [r7, #4]
 8002234:	629a      	str	r2, [r3, #40]	@ 0x28
 8002236:	687b      	ldr	r3, [r7, #4]
 8002238:	2200      	movs	r2, #0
 800223a:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 800223e:	2301      	movs	r3, #1
 8002240:	e013      	b.n	800226a <HAL_ADCEx_Calibration_Start+0x14e>
 8002242:	687b      	ldr	r3, [r7, #4]
 8002244:	681b      	ldr	r3, [r3, #0]
 8002246:	689b      	ldr	r3, [r3, #8]
 8002248:	f003 0304 	and.w	r3, r3, #4
 800224c:	2b00      	cmp	r3, #0
 800224e:	d1dc      	bne.n	800220a <HAL_ADCEx_Calibration_Start+0xee>
 8002250:	687b      	ldr	r3, [r7, #4]
 8002252:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002254:	f023 0303 	bic.w	r3, r3, #3
 8002258:	f043 0201 	orr.w	r2, r3, #1
 800225c:	687b      	ldr	r3, [r7, #4]
 800225e:	629a      	str	r2, [r3, #40]	@ 0x28
 8002260:	687b      	ldr	r3, [r7, #4]
 8002262:	2200      	movs	r2, #0
 8002264:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002268:	7dfb      	ldrb	r3, [r7, #23]
 800226a:	4618      	mov	r0, r3
 800226c:	371c      	adds	r7, #28
 800226e:	46bd      	mov	sp, r7
 8002270:	bd90      	pop	{r4, r7, pc}
 8002272:	bf00      	nop
 8002274:	20000000 	.word	0x20000000

08002278 <__NVIC_SetPriorityGrouping>:
 8002278:	b480      	push	{r7}
 800227a:	b085      	sub	sp, #20
 800227c:	af00      	add	r7, sp, #0
 800227e:	6078      	str	r0, [r7, #4]
 8002280:	687b      	ldr	r3, [r7, #4]
 8002282:	f003 0307 	and.w	r3, r3, #7
 8002286:	60fb      	str	r3, [r7, #12]
 8002288:	4b0c      	ldr	r3, [pc, #48]	@ (80022bc <__NVIC_SetPriorityGrouping+0x44>)
 800228a:	68db      	ldr	r3, [r3, #12]
 800228c:	60bb      	str	r3, [r7, #8]
 800228e:	68ba      	ldr	r2, [r7, #8]
 8002290:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8002294:	4013      	ands	r3, r2
 8002296:	60bb      	str	r3, [r7, #8]
 8002298:	68fb      	ldr	r3, [r7, #12]
 800229a:	021a      	lsls	r2, r3, #8
 800229c:	68bb      	ldr	r3, [r7, #8]
 800229e:	4313      	orrs	r3, r2
 80022a0:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80022a4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80022a8:	60bb      	str	r3, [r7, #8]
 80022aa:	4a04      	ldr	r2, [pc, #16]	@ (80022bc <__NVIC_SetPriorityGrouping+0x44>)
 80022ac:	68bb      	ldr	r3, [r7, #8]
 80022ae:	60d3      	str	r3, [r2, #12]
 80022b0:	bf00      	nop
 80022b2:	3714      	adds	r7, #20
 80022b4:	46bd      	mov	sp, r7
 80022b6:	bc80      	pop	{r7}
 80022b8:	4770      	bx	lr
 80022ba:	bf00      	nop
 80022bc:	e000ed00 	.word	0xe000ed00

080022c0 <__NVIC_GetPriorityGrouping>:
 80022c0:	b480      	push	{r7}
 80022c2:	af00      	add	r7, sp, #0
 80022c4:	4b04      	ldr	r3, [pc, #16]	@ (80022d8 <__NVIC_GetPriorityGrouping+0x18>)
 80022c6:	68db      	ldr	r3, [r3, #12]
 80022c8:	0a1b      	lsrs	r3, r3, #8
 80022ca:	f003 0307 	and.w	r3, r3, #7
 80022ce:	4618      	mov	r0, r3
 80022d0:	46bd      	mov	sp, r7
 80022d2:	bc80      	pop	{r7}
 80022d4:	4770      	bx	lr
 80022d6:	bf00      	nop
 80022d8:	e000ed00 	.word	0xe000ed00

080022dc <__NVIC_EnableIRQ>:
 80022dc:	b480      	push	{r7}
 80022de:	b083      	sub	sp, #12
 80022e0:	af00      	add	r7, sp, #0
 80022e2:	4603      	mov	r3, r0
 80022e4:	71fb      	strb	r3, [r7, #7]
 80022e6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80022ea:	2b00      	cmp	r3, #0
 80022ec:	db0b      	blt.n	8002306 <__NVIC_EnableIRQ+0x2a>
 80022ee:	79fb      	ldrb	r3, [r7, #7]
 80022f0:	f003 021f 	and.w	r2, r3, #31
 80022f4:	4906      	ldr	r1, [pc, #24]	@ (8002310 <__NVIC_EnableIRQ+0x34>)
 80022f6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80022fa:	095b      	lsrs	r3, r3, #5
 80022fc:	2001      	movs	r0, #1
 80022fe:	fa00 f202 	lsl.w	r2, r0, r2
 8002302:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002306:	bf00      	nop
 8002308:	370c      	adds	r7, #12
 800230a:	46bd      	mov	sp, r7
 800230c:	bc80      	pop	{r7}
 800230e:	4770      	bx	lr
 8002310:	e000e100 	.word	0xe000e100

08002314 <__NVIC_SetPriority>:
 8002314:	b480      	push	{r7}
 8002316:	b083      	sub	sp, #12
 8002318:	af00      	add	r7, sp, #0
 800231a:	4603      	mov	r3, r0
 800231c:	6039      	str	r1, [r7, #0]
 800231e:	71fb      	strb	r3, [r7, #7]
 8002320:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002324:	2b00      	cmp	r3, #0
 8002326:	db0a      	blt.n	800233e <__NVIC_SetPriority+0x2a>
 8002328:	683b      	ldr	r3, [r7, #0]
 800232a:	b2da      	uxtb	r2, r3
 800232c:	490c      	ldr	r1, [pc, #48]	@ (8002360 <__NVIC_SetPriority+0x4c>)
 800232e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002332:	0112      	lsls	r2, r2, #4
 8002334:	b2d2      	uxtb	r2, r2
 8002336:	440b      	add	r3, r1
 8002338:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 800233c:	e00a      	b.n	8002354 <__NVIC_SetPriority+0x40>
 800233e:	683b      	ldr	r3, [r7, #0]
 8002340:	b2da      	uxtb	r2, r3
 8002342:	4908      	ldr	r1, [pc, #32]	@ (8002364 <__NVIC_SetPriority+0x50>)
 8002344:	79fb      	ldrb	r3, [r7, #7]
 8002346:	f003 030f 	and.w	r3, r3, #15
 800234a:	3b04      	subs	r3, #4
 800234c:	0112      	lsls	r2, r2, #4
 800234e:	b2d2      	uxtb	r2, r2
 8002350:	440b      	add	r3, r1
 8002352:	761a      	strb	r2, [r3, #24]
 8002354:	bf00      	nop
 8002356:	370c      	adds	r7, #12
 8002358:	46bd      	mov	sp, r7
 800235a:	bc80      	pop	{r7}
 800235c:	4770      	bx	lr
 800235e:	bf00      	nop
 8002360:	e000e100 	.word	0xe000e100
 8002364:	e000ed00 	.word	0xe000ed00

08002368 <NVIC_EncodePriority>:
 8002368:	b480      	push	{r7}
 800236a:	b089      	sub	sp, #36	@ 0x24
 800236c:	af00      	add	r7, sp, #0
 800236e:	60f8      	str	r0, [r7, #12]
 8002370:	60b9      	str	r1, [r7, #8]
 8002372:	607a      	str	r2, [r7, #4]
 8002374:	68fb      	ldr	r3, [r7, #12]
 8002376:	f003 0307 	and.w	r3, r3, #7
 800237a:	61fb      	str	r3, [r7, #28]
 800237c:	69fb      	ldr	r3, [r7, #28]
 800237e:	f1c3 0307 	rsb	r3, r3, #7
 8002382:	2b04      	cmp	r3, #4
 8002384:	bf28      	it	cs
 8002386:	2304      	movcs	r3, #4
 8002388:	61bb      	str	r3, [r7, #24]
 800238a:	69fb      	ldr	r3, [r7, #28]
 800238c:	3304      	adds	r3, #4
 800238e:	2b06      	cmp	r3, #6
 8002390:	d902      	bls.n	8002398 <NVIC_EncodePriority+0x30>
 8002392:	69fb      	ldr	r3, [r7, #28]
 8002394:	3b03      	subs	r3, #3
 8002396:	e000      	b.n	800239a <NVIC_EncodePriority+0x32>
 8002398:	2300      	movs	r3, #0
 800239a:	617b      	str	r3, [r7, #20]
 800239c:	f04f 32ff 	mov.w	r2, #4294967295
 80023a0:	69bb      	ldr	r3, [r7, #24]
 80023a2:	fa02 f303 	lsl.w	r3, r2, r3
 80023a6:	43da      	mvns	r2, r3
 80023a8:	68bb      	ldr	r3, [r7, #8]
 80023aa:	401a      	ands	r2, r3
 80023ac:	697b      	ldr	r3, [r7, #20]
 80023ae:	409a      	lsls	r2, r3
 80023b0:	f04f 31ff 	mov.w	r1, #4294967295
 80023b4:	697b      	ldr	r3, [r7, #20]
 80023b6:	fa01 f303 	lsl.w	r3, r1, r3
 80023ba:	43d9      	mvns	r1, r3
 80023bc:	687b      	ldr	r3, [r7, #4]
 80023be:	400b      	ands	r3, r1
 80023c0:	4313      	orrs	r3, r2
 80023c2:	4618      	mov	r0, r3
 80023c4:	3724      	adds	r7, #36	@ 0x24
 80023c6:	46bd      	mov	sp, r7
 80023c8:	bc80      	pop	{r7}
 80023ca:	4770      	bx	lr

080023cc <SysTick_Config>:
 80023cc:	b580      	push	{r7, lr}
 80023ce:	b082      	sub	sp, #8
 80023d0:	af00      	add	r7, sp, #0
 80023d2:	6078      	str	r0, [r7, #4]
 80023d4:	687b      	ldr	r3, [r7, #4]
 80023d6:	3b01      	subs	r3, #1
 80023d8:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80023dc:	d301      	bcc.n	80023e2 <SysTick_Config+0x16>
 80023de:	2301      	movs	r3, #1
 80023e0:	e00f      	b.n	8002402 <SysTick_Config+0x36>
 80023e2:	4a0a      	ldr	r2, [pc, #40]	@ (800240c <SysTick_Config+0x40>)
 80023e4:	687b      	ldr	r3, [r7, #4]
 80023e6:	3b01      	subs	r3, #1
 80023e8:	6053      	str	r3, [r2, #4]
 80023ea:	210f      	movs	r1, #15
 80023ec:	f04f 30ff 	mov.w	r0, #4294967295
 80023f0:	f7ff ff90 	bl	8002314 <__NVIC_SetPriority>
 80023f4:	4b05      	ldr	r3, [pc, #20]	@ (800240c <SysTick_Config+0x40>)
 80023f6:	2200      	movs	r2, #0
 80023f8:	609a      	str	r2, [r3, #8]
 80023fa:	4b04      	ldr	r3, [pc, #16]	@ (800240c <SysTick_Config+0x40>)
 80023fc:	2207      	movs	r2, #7
 80023fe:	601a      	str	r2, [r3, #0]
 8002400:	2300      	movs	r3, #0
 8002402:	4618      	mov	r0, r3
 8002404:	3708      	adds	r7, #8
 8002406:	46bd      	mov	sp, r7
 8002408:	bd80      	pop	{r7, pc}
 800240a:	bf00      	nop
 800240c:	e000e010 	.word	0xe000e010

08002410 <HAL_NVIC_SetPriorityGrouping>:
 8002410:	b580      	push	{r7, lr}
 8002412:	b082      	sub	sp, #8
 8002414:	af00      	add	r7, sp, #0
 8002416:	6078      	str	r0, [r7, #4]
 8002418:	6878      	ldr	r0, [r7, #4]
 800241a:	f7ff ff2d 	bl	8002278 <__NVIC_SetPriorityGrouping>
 800241e:	bf00      	nop
 8002420:	3708      	adds	r7, #8
 8002422:	46bd      	mov	sp, r7
 8002424:	bd80      	pop	{r7, pc}

08002426 <HAL_NVIC_SetPriority>:
 8002426:	b580      	push	{r7, lr}
 8002428:	b086      	sub	sp, #24
 800242a:	af00      	add	r7, sp, #0
 800242c:	4603      	mov	r3, r0
 800242e:	60b9      	str	r1, [r7, #8]
 8002430:	607a      	str	r2, [r7, #4]
 8002432:	73fb      	strb	r3, [r7, #15]
 8002434:	2300      	movs	r3, #0
 8002436:	617b      	str	r3, [r7, #20]
 8002438:	f7ff ff42 	bl	80022c0 <__NVIC_GetPriorityGrouping>
 800243c:	6178      	str	r0, [r7, #20]
 800243e:	687a      	ldr	r2, [r7, #4]
 8002440:	68b9      	ldr	r1, [r7, #8]
 8002442:	6978      	ldr	r0, [r7, #20]
 8002444:	f7ff ff90 	bl	8002368 <NVIC_EncodePriority>
 8002448:	4602      	mov	r2, r0
 800244a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800244e:	4611      	mov	r1, r2
 8002450:	4618      	mov	r0, r3
 8002452:	f7ff ff5f 	bl	8002314 <__NVIC_SetPriority>
 8002456:	bf00      	nop
 8002458:	3718      	adds	r7, #24
 800245a:	46bd      	mov	sp, r7
 800245c:	bd80      	pop	{r7, pc}

0800245e <HAL_NVIC_EnableIRQ>:
 800245e:	b580      	push	{r7, lr}
 8002460:	b082      	sub	sp, #8
 8002462:	af00      	add	r7, sp, #0
 8002464:	4603      	mov	r3, r0
 8002466:	71fb      	strb	r3, [r7, #7]
 8002468:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800246c:	4618      	mov	r0, r3
 800246e:	f7ff ff35 	bl	80022dc <__NVIC_EnableIRQ>
 8002472:	bf00      	nop
 8002474:	3708      	adds	r7, #8
 8002476:	46bd      	mov	sp, r7
 8002478:	bd80      	pop	{r7, pc}

0800247a <HAL_SYSTICK_Config>:
 800247a:	b580      	push	{r7, lr}
 800247c:	b082      	sub	sp, #8
 800247e:	af00      	add	r7, sp, #0
 8002480:	6078      	str	r0, [r7, #4]
 8002482:	6878      	ldr	r0, [r7, #4]
 8002484:	f7ff ffa2 	bl	80023cc <SysTick_Config>
 8002488:	4603      	mov	r3, r0
 800248a:	4618      	mov	r0, r3
 800248c:	3708      	adds	r7, #8
 800248e:	46bd      	mov	sp, r7
 8002490:	bd80      	pop	{r7, pc}

08002492 <HAL_CRC_Init>:
 8002492:	b580      	push	{r7, lr}
 8002494:	b082      	sub	sp, #8
 8002496:	af00      	add	r7, sp, #0
 8002498:	6078      	str	r0, [r7, #4]
 800249a:	687b      	ldr	r3, [r7, #4]
 800249c:	2b00      	cmp	r3, #0
 800249e:	d101      	bne.n	80024a4 <HAL_CRC_Init+0x12>
 80024a0:	2301      	movs	r3, #1
 80024a2:	e00e      	b.n	80024c2 <HAL_CRC_Init+0x30>
 80024a4:	687b      	ldr	r3, [r7, #4]
 80024a6:	795b      	ldrb	r3, [r3, #5]
 80024a8:	b2db      	uxtb	r3, r3
 80024aa:	2b00      	cmp	r3, #0
 80024ac:	d105      	bne.n	80024ba <HAL_CRC_Init+0x28>
 80024ae:	687b      	ldr	r3, [r7, #4]
 80024b0:	2200      	movs	r2, #0
 80024b2:	711a      	strb	r2, [r3, #4]
 80024b4:	6878      	ldr	r0, [r7, #4]
 80024b6:	f7ff f95b 	bl	8001770 <HAL_CRC_MspInit>
 80024ba:	687b      	ldr	r3, [r7, #4]
 80024bc:	2201      	movs	r2, #1
 80024be:	715a      	strb	r2, [r3, #5]
 80024c0:	2300      	movs	r3, #0
 80024c2:	4618      	mov	r0, r3
 80024c4:	3708      	adds	r7, #8
 80024c6:	46bd      	mov	sp, r7
 80024c8:	bd80      	pop	{r7, pc}

080024ca <HAL_DMA_Abort>:
 80024ca:	b480      	push	{r7}
 80024cc:	b085      	sub	sp, #20
 80024ce:	af00      	add	r7, sp, #0
 80024d0:	6078      	str	r0, [r7, #4]
 80024d2:	2300      	movs	r3, #0
 80024d4:	73fb      	strb	r3, [r7, #15]
 80024d6:	687b      	ldr	r3, [r7, #4]
 80024d8:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 80024dc:	b2db      	uxtb	r3, r3
 80024de:	2b02      	cmp	r3, #2
 80024e0:	d008      	beq.n	80024f4 <HAL_DMA_Abort+0x2a>
 80024e2:	687b      	ldr	r3, [r7, #4]
 80024e4:	2204      	movs	r2, #4
 80024e6:	639a      	str	r2, [r3, #56]	@ 0x38
 80024e8:	687b      	ldr	r3, [r7, #4]
 80024ea:	2200      	movs	r2, #0
 80024ec:	f883 2020 	strb.w	r2, [r3, #32]
 80024f0:	2301      	movs	r3, #1
 80024f2:	e020      	b.n	8002536 <HAL_DMA_Abort+0x6c>
 80024f4:	687b      	ldr	r3, [r7, #4]
 80024f6:	681b      	ldr	r3, [r3, #0]
 80024f8:	681a      	ldr	r2, [r3, #0]
 80024fa:	687b      	ldr	r3, [r7, #4]
 80024fc:	681b      	ldr	r3, [r3, #0]
 80024fe:	f022 020e 	bic.w	r2, r2, #14
 8002502:	601a      	str	r2, [r3, #0]
 8002504:	687b      	ldr	r3, [r7, #4]
 8002506:	681b      	ldr	r3, [r3, #0]
 8002508:	681a      	ldr	r2, [r3, #0]
 800250a:	687b      	ldr	r3, [r7, #4]
 800250c:	681b      	ldr	r3, [r3, #0]
 800250e:	f022 0201 	bic.w	r2, r2, #1
 8002512:	601a      	str	r2, [r3, #0]
 8002514:	687b      	ldr	r3, [r7, #4]
 8002516:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8002518:	687b      	ldr	r3, [r7, #4]
 800251a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800251c:	2101      	movs	r1, #1
 800251e:	fa01 f202 	lsl.w	r2, r1, r2
 8002522:	605a      	str	r2, [r3, #4]
 8002524:	687b      	ldr	r3, [r7, #4]
 8002526:	2201      	movs	r2, #1
 8002528:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 800252c:	687b      	ldr	r3, [r7, #4]
 800252e:	2200      	movs	r2, #0
 8002530:	f883 2020 	strb.w	r2, [r3, #32]
 8002534:	7bfb      	ldrb	r3, [r7, #15]
 8002536:	4618      	mov	r0, r3
 8002538:	3714      	adds	r7, #20
 800253a:	46bd      	mov	sp, r7
 800253c:	bc80      	pop	{r7}
 800253e:	4770      	bx	lr

08002540 <HAL_DMA_Abort_IT>:
 8002540:	b580      	push	{r7, lr}
 8002542:	b084      	sub	sp, #16
 8002544:	af00      	add	r7, sp, #0
 8002546:	6078      	str	r0, [r7, #4]
 8002548:	2300      	movs	r3, #0
 800254a:	73fb      	strb	r3, [r7, #15]
 800254c:	687b      	ldr	r3, [r7, #4]
 800254e:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 8002552:	b2db      	uxtb	r3, r3
 8002554:	2b02      	cmp	r3, #2
 8002556:	d005      	beq.n	8002564 <HAL_DMA_Abort_IT+0x24>
 8002558:	687b      	ldr	r3, [r7, #4]
 800255a:	2204      	movs	r2, #4
 800255c:	639a      	str	r2, [r3, #56]	@ 0x38
 800255e:	2301      	movs	r3, #1
 8002560:	73fb      	strb	r3, [r7, #15]
 8002562:	e051      	b.n	8002608 <HAL_DMA_Abort_IT+0xc8>
 8002564:	687b      	ldr	r3, [r7, #4]
 8002566:	681b      	ldr	r3, [r3, #0]
 8002568:	681a      	ldr	r2, [r3, #0]
 800256a:	687b      	ldr	r3, [r7, #4]
 800256c:	681b      	ldr	r3, [r3, #0]
 800256e:	f022 020e 	bic.w	r2, r2, #14
 8002572:	601a      	str	r2, [r3, #0]
 8002574:	687b      	ldr	r3, [r7, #4]
 8002576:	681b      	ldr	r3, [r3, #0]
 8002578:	681a      	ldr	r2, [r3, #0]
 800257a:	687b      	ldr	r3, [r7, #4]
 800257c:	681b      	ldr	r3, [r3, #0]
 800257e:	f022 0201 	bic.w	r2, r2, #1
 8002582:	601a      	str	r2, [r3, #0]
 8002584:	687b      	ldr	r3, [r7, #4]
 8002586:	681b      	ldr	r3, [r3, #0]
 8002588:	4a22      	ldr	r2, [pc, #136]	@ (8002614 <HAL_DMA_Abort_IT+0xd4>)
 800258a:	4293      	cmp	r3, r2
 800258c:	d029      	beq.n	80025e2 <HAL_DMA_Abort_IT+0xa2>
 800258e:	687b      	ldr	r3, [r7, #4]
 8002590:	681b      	ldr	r3, [r3, #0]
 8002592:	4a21      	ldr	r2, [pc, #132]	@ (8002618 <HAL_DMA_Abort_IT+0xd8>)
 8002594:	4293      	cmp	r3, r2
 8002596:	d022      	beq.n	80025de <HAL_DMA_Abort_IT+0x9e>
 8002598:	687b      	ldr	r3, [r7, #4]
 800259a:	681b      	ldr	r3, [r3, #0]
 800259c:	4a1f      	ldr	r2, [pc, #124]	@ (800261c <HAL_DMA_Abort_IT+0xdc>)
 800259e:	4293      	cmp	r3, r2
 80025a0:	d01a      	beq.n	80025d8 <HAL_DMA_Abort_IT+0x98>
 80025a2:	687b      	ldr	r3, [r7, #4]
 80025a4:	681b      	ldr	r3, [r3, #0]
 80025a6:	4a1e      	ldr	r2, [pc, #120]	@ (8002620 <HAL_DMA_Abort_IT+0xe0>)
 80025a8:	4293      	cmp	r3, r2
 80025aa:	d012      	beq.n	80025d2 <HAL_DMA_Abort_IT+0x92>
 80025ac:	687b      	ldr	r3, [r7, #4]
 80025ae:	681b      	ldr	r3, [r3, #0]
 80025b0:	4a1c      	ldr	r2, [pc, #112]	@ (8002624 <HAL_DMA_Abort_IT+0xe4>)
 80025b2:	4293      	cmp	r3, r2
 80025b4:	d00a      	beq.n	80025cc <HAL_DMA_Abort_IT+0x8c>
 80025b6:	687b      	ldr	r3, [r7, #4]
 80025b8:	681b      	ldr	r3, [r3, #0]
 80025ba:	4a1b      	ldr	r2, [pc, #108]	@ (8002628 <HAL_DMA_Abort_IT+0xe8>)
 80025bc:	4293      	cmp	r3, r2
 80025be:	d102      	bne.n	80025c6 <HAL_DMA_Abort_IT+0x86>
 80025c0:	f44f 1380 	mov.w	r3, #1048576	@ 0x100000
 80025c4:	e00e      	b.n	80025e4 <HAL_DMA_Abort_IT+0xa4>
 80025c6:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 80025ca:	e00b      	b.n	80025e4 <HAL_DMA_Abort_IT+0xa4>
 80025cc:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80025d0:	e008      	b.n	80025e4 <HAL_DMA_Abort_IT+0xa4>
 80025d2:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80025d6:	e005      	b.n	80025e4 <HAL_DMA_Abort_IT+0xa4>
 80025d8:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80025dc:	e002      	b.n	80025e4 <HAL_DMA_Abort_IT+0xa4>
 80025de:	2310      	movs	r3, #16
 80025e0:	e000      	b.n	80025e4 <HAL_DMA_Abort_IT+0xa4>
 80025e2:	2301      	movs	r3, #1
 80025e4:	4a11      	ldr	r2, [pc, #68]	@ (800262c <HAL_DMA_Abort_IT+0xec>)
 80025e6:	6053      	str	r3, [r2, #4]
 80025e8:	687b      	ldr	r3, [r7, #4]
 80025ea:	2201      	movs	r2, #1
 80025ec:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 80025f0:	687b      	ldr	r3, [r7, #4]
 80025f2:	2200      	movs	r2, #0
 80025f4:	f883 2020 	strb.w	r2, [r3, #32]
 80025f8:	687b      	ldr	r3, [r7, #4]
 80025fa:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80025fc:	2b00      	cmp	r3, #0
 80025fe:	d003      	beq.n	8002608 <HAL_DMA_Abort_IT+0xc8>
 8002600:	687b      	ldr	r3, [r7, #4]
 8002602:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002604:	6878      	ldr	r0, [r7, #4]
 8002606:	4798      	blx	r3
 8002608:	7bfb      	ldrb	r3, [r7, #15]
 800260a:	4618      	mov	r0, r3
 800260c:	3710      	adds	r7, #16
 800260e:	46bd      	mov	sp, r7
 8002610:	bd80      	pop	{r7, pc}
 8002612:	bf00      	nop
 8002614:	40020008 	.word	0x40020008
 8002618:	4002001c 	.word	0x4002001c
 800261c:	40020030 	.word	0x40020030
 8002620:	40020044 	.word	0x40020044
 8002624:	40020058 	.word	0x40020058
 8002628:	4002006c 	.word	0x4002006c
 800262c:	40020000 	.word	0x40020000

08002630 <HAL_GPIO_Init>:
 8002630:	b480      	push	{r7}
 8002632:	b08b      	sub	sp, #44	@ 0x2c
 8002634:	af00      	add	r7, sp, #0
 8002636:	6078      	str	r0, [r7, #4]
 8002638:	6039      	str	r1, [r7, #0]
 800263a:	2300      	movs	r3, #0
 800263c:	627b      	str	r3, [r7, #36]	@ 0x24
 800263e:	2300      	movs	r3, #0
 8002640:	623b      	str	r3, [r7, #32]
 8002642:	e169      	b.n	8002918 <HAL_GPIO_Init+0x2e8>
 8002644:	2201      	movs	r2, #1
 8002646:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002648:	fa02 f303 	lsl.w	r3, r2, r3
 800264c:	61fb      	str	r3, [r7, #28]
 800264e:	683b      	ldr	r3, [r7, #0]
 8002650:	681b      	ldr	r3, [r3, #0]
 8002652:	69fa      	ldr	r2, [r7, #28]
 8002654:	4013      	ands	r3, r2
 8002656:	61bb      	str	r3, [r7, #24]
 8002658:	69ba      	ldr	r2, [r7, #24]
 800265a:	69fb      	ldr	r3, [r7, #28]
 800265c:	429a      	cmp	r2, r3
 800265e:	f040 8158 	bne.w	8002912 <HAL_GPIO_Init+0x2e2>
 8002662:	683b      	ldr	r3, [r7, #0]
 8002664:	685b      	ldr	r3, [r3, #4]
 8002666:	4a9a      	ldr	r2, [pc, #616]	@ (80028d0 <HAL_GPIO_Init+0x2a0>)
 8002668:	4293      	cmp	r3, r2
 800266a:	d05e      	beq.n	800272a <HAL_GPIO_Init+0xfa>
 800266c:	4a98      	ldr	r2, [pc, #608]	@ (80028d0 <HAL_GPIO_Init+0x2a0>)
 800266e:	4293      	cmp	r3, r2
 8002670:	d875      	bhi.n	800275e <HAL_GPIO_Init+0x12e>
 8002672:	4a98      	ldr	r2, [pc, #608]	@ (80028d4 <HAL_GPIO_Init+0x2a4>)
 8002674:	4293      	cmp	r3, r2
 8002676:	d058      	beq.n	800272a <HAL_GPIO_Init+0xfa>
 8002678:	4a96      	ldr	r2, [pc, #600]	@ (80028d4 <HAL_GPIO_Init+0x2a4>)
 800267a:	4293      	cmp	r3, r2
 800267c:	d86f      	bhi.n	800275e <HAL_GPIO_Init+0x12e>
 800267e:	4a96      	ldr	r2, [pc, #600]	@ (80028d8 <HAL_GPIO_Init+0x2a8>)
 8002680:	4293      	cmp	r3, r2
 8002682:	d052      	beq.n	800272a <HAL_GPIO_Init+0xfa>
 8002684:	4a94      	ldr	r2, [pc, #592]	@ (80028d8 <HAL_GPIO_Init+0x2a8>)
 8002686:	4293      	cmp	r3, r2
 8002688:	d869      	bhi.n	800275e <HAL_GPIO_Init+0x12e>
 800268a:	4a94      	ldr	r2, [pc, #592]	@ (80028dc <HAL_GPIO_Init+0x2ac>)
 800268c:	4293      	cmp	r3, r2
 800268e:	d04c      	beq.n	800272a <HAL_GPIO_Init+0xfa>
 8002690:	4a92      	ldr	r2, [pc, #584]	@ (80028dc <HAL_GPIO_Init+0x2ac>)
 8002692:	4293      	cmp	r3, r2
 8002694:	d863      	bhi.n	800275e <HAL_GPIO_Init+0x12e>
 8002696:	4a92      	ldr	r2, [pc, #584]	@ (80028e0 <HAL_GPIO_Init+0x2b0>)
 8002698:	4293      	cmp	r3, r2
 800269a:	d046      	beq.n	800272a <HAL_GPIO_Init+0xfa>
 800269c:	4a90      	ldr	r2, [pc, #576]	@ (80028e0 <HAL_GPIO_Init+0x2b0>)
 800269e:	4293      	cmp	r3, r2
 80026a0:	d85d      	bhi.n	800275e <HAL_GPIO_Init+0x12e>
 80026a2:	2b12      	cmp	r3, #18
 80026a4:	d82a      	bhi.n	80026fc <HAL_GPIO_Init+0xcc>
 80026a6:	2b12      	cmp	r3, #18
 80026a8:	d859      	bhi.n	800275e <HAL_GPIO_Init+0x12e>
 80026aa:	a201      	add	r2, pc, #4	@ (adr r2, 80026b0 <HAL_GPIO_Init+0x80>)
 80026ac:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80026b0:	0800272b 	.word	0x0800272b
 80026b4:	08002705 	.word	0x08002705
 80026b8:	08002717 	.word	0x08002717
 80026bc:	08002759 	.word	0x08002759
 80026c0:	0800275f 	.word	0x0800275f
 80026c4:	0800275f 	.word	0x0800275f
 80026c8:	0800275f 	.word	0x0800275f
 80026cc:	0800275f 	.word	0x0800275f
 80026d0:	0800275f 	.word	0x0800275f
 80026d4:	0800275f 	.word	0x0800275f
 80026d8:	0800275f 	.word	0x0800275f
 80026dc:	0800275f 	.word	0x0800275f
 80026e0:	0800275f 	.word	0x0800275f
 80026e4:	0800275f 	.word	0x0800275f
 80026e8:	0800275f 	.word	0x0800275f
 80026ec:	0800275f 	.word	0x0800275f
 80026f0:	0800275f 	.word	0x0800275f
 80026f4:	0800270d 	.word	0x0800270d
 80026f8:	08002721 	.word	0x08002721
 80026fc:	4a79      	ldr	r2, [pc, #484]	@ (80028e4 <HAL_GPIO_Init+0x2b4>)
 80026fe:	4293      	cmp	r3, r2
 8002700:	d013      	beq.n	800272a <HAL_GPIO_Init+0xfa>
 8002702:	e02c      	b.n	800275e <HAL_GPIO_Init+0x12e>
 8002704:	683b      	ldr	r3, [r7, #0]
 8002706:	68db      	ldr	r3, [r3, #12]
 8002708:	623b      	str	r3, [r7, #32]
 800270a:	e029      	b.n	8002760 <HAL_GPIO_Init+0x130>
 800270c:	683b      	ldr	r3, [r7, #0]
 800270e:	68db      	ldr	r3, [r3, #12]
 8002710:	3304      	adds	r3, #4
 8002712:	623b      	str	r3, [r7, #32]
 8002714:	e024      	b.n	8002760 <HAL_GPIO_Init+0x130>
 8002716:	683b      	ldr	r3, [r7, #0]
 8002718:	68db      	ldr	r3, [r3, #12]
 800271a:	3308      	adds	r3, #8
 800271c:	623b      	str	r3, [r7, #32]
 800271e:	e01f      	b.n	8002760 <HAL_GPIO_Init+0x130>
 8002720:	683b      	ldr	r3, [r7, #0]
 8002722:	68db      	ldr	r3, [r3, #12]
 8002724:	330c      	adds	r3, #12
 8002726:	623b      	str	r3, [r7, #32]
 8002728:	e01a      	b.n	8002760 <HAL_GPIO_Init+0x130>
 800272a:	683b      	ldr	r3, [r7, #0]
 800272c:	689b      	ldr	r3, [r3, #8]
 800272e:	2b00      	cmp	r3, #0
 8002730:	d102      	bne.n	8002738 <HAL_GPIO_Init+0x108>
 8002732:	2304      	movs	r3, #4
 8002734:	623b      	str	r3, [r7, #32]
 8002736:	e013      	b.n	8002760 <HAL_GPIO_Init+0x130>
 8002738:	683b      	ldr	r3, [r7, #0]
 800273a:	689b      	ldr	r3, [r3, #8]
 800273c:	2b01      	cmp	r3, #1
 800273e:	d105      	bne.n	800274c <HAL_GPIO_Init+0x11c>
 8002740:	2308      	movs	r3, #8
 8002742:	623b      	str	r3, [r7, #32]
 8002744:	687b      	ldr	r3, [r7, #4]
 8002746:	69fa      	ldr	r2, [r7, #28]
 8002748:	611a      	str	r2, [r3, #16]
 800274a:	e009      	b.n	8002760 <HAL_GPIO_Init+0x130>
 800274c:	2308      	movs	r3, #8
 800274e:	623b      	str	r3, [r7, #32]
 8002750:	687b      	ldr	r3, [r7, #4]
 8002752:	69fa      	ldr	r2, [r7, #28]
 8002754:	615a      	str	r2, [r3, #20]
 8002756:	e003      	b.n	8002760 <HAL_GPIO_Init+0x130>
 8002758:	2300      	movs	r3, #0
 800275a:	623b      	str	r3, [r7, #32]
 800275c:	e000      	b.n	8002760 <HAL_GPIO_Init+0x130>
 800275e:	bf00      	nop
 8002760:	69bb      	ldr	r3, [r7, #24]
 8002762:	2bff      	cmp	r3, #255	@ 0xff
 8002764:	d801      	bhi.n	800276a <HAL_GPIO_Init+0x13a>
 8002766:	687b      	ldr	r3, [r7, #4]
 8002768:	e001      	b.n	800276e <HAL_GPIO_Init+0x13e>
 800276a:	687b      	ldr	r3, [r7, #4]
 800276c:	3304      	adds	r3, #4
 800276e:	617b      	str	r3, [r7, #20]
 8002770:	69bb      	ldr	r3, [r7, #24]
 8002772:	2bff      	cmp	r3, #255	@ 0xff
 8002774:	d802      	bhi.n	800277c <HAL_GPIO_Init+0x14c>
 8002776:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002778:	009b      	lsls	r3, r3, #2
 800277a:	e002      	b.n	8002782 <HAL_GPIO_Init+0x152>
 800277c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800277e:	3b08      	subs	r3, #8
 8002780:	009b      	lsls	r3, r3, #2
 8002782:	613b      	str	r3, [r7, #16]
 8002784:	697b      	ldr	r3, [r7, #20]
 8002786:	681a      	ldr	r2, [r3, #0]
 8002788:	210f      	movs	r1, #15
 800278a:	693b      	ldr	r3, [r7, #16]
 800278c:	fa01 f303 	lsl.w	r3, r1, r3
 8002790:	43db      	mvns	r3, r3
 8002792:	401a      	ands	r2, r3
 8002794:	6a39      	ldr	r1, [r7, #32]
 8002796:	693b      	ldr	r3, [r7, #16]
 8002798:	fa01 f303 	lsl.w	r3, r1, r3
 800279c:	431a      	orrs	r2, r3
 800279e:	697b      	ldr	r3, [r7, #20]
 80027a0:	601a      	str	r2, [r3, #0]
 80027a2:	683b      	ldr	r3, [r7, #0]
 80027a4:	685b      	ldr	r3, [r3, #4]
 80027a6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80027aa:	2b00      	cmp	r3, #0
 80027ac:	f000 80b1 	beq.w	8002912 <HAL_GPIO_Init+0x2e2>
 80027b0:	4b4d      	ldr	r3, [pc, #308]	@ (80028e8 <HAL_GPIO_Init+0x2b8>)
 80027b2:	699b      	ldr	r3, [r3, #24]
 80027b4:	4a4c      	ldr	r2, [pc, #304]	@ (80028e8 <HAL_GPIO_Init+0x2b8>)
 80027b6:	f043 0301 	orr.w	r3, r3, #1
 80027ba:	6193      	str	r3, [r2, #24]
 80027bc:	4b4a      	ldr	r3, [pc, #296]	@ (80028e8 <HAL_GPIO_Init+0x2b8>)
 80027be:	699b      	ldr	r3, [r3, #24]
 80027c0:	f003 0301 	and.w	r3, r3, #1
 80027c4:	60bb      	str	r3, [r7, #8]
 80027c6:	68bb      	ldr	r3, [r7, #8]
 80027c8:	4a48      	ldr	r2, [pc, #288]	@ (80028ec <HAL_GPIO_Init+0x2bc>)
 80027ca:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80027cc:	089b      	lsrs	r3, r3, #2
 80027ce:	3302      	adds	r3, #2
 80027d0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80027d4:	60fb      	str	r3, [r7, #12]
 80027d6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80027d8:	f003 0303 	and.w	r3, r3, #3
 80027dc:	009b      	lsls	r3, r3, #2
 80027de:	220f      	movs	r2, #15
 80027e0:	fa02 f303 	lsl.w	r3, r2, r3
 80027e4:	43db      	mvns	r3, r3
 80027e6:	68fa      	ldr	r2, [r7, #12]
 80027e8:	4013      	ands	r3, r2
 80027ea:	60fb      	str	r3, [r7, #12]
 80027ec:	687b      	ldr	r3, [r7, #4]
 80027ee:	4a40      	ldr	r2, [pc, #256]	@ (80028f0 <HAL_GPIO_Init+0x2c0>)
 80027f0:	4293      	cmp	r3, r2
 80027f2:	d013      	beq.n	800281c <HAL_GPIO_Init+0x1ec>
 80027f4:	687b      	ldr	r3, [r7, #4]
 80027f6:	4a3f      	ldr	r2, [pc, #252]	@ (80028f4 <HAL_GPIO_Init+0x2c4>)
 80027f8:	4293      	cmp	r3, r2
 80027fa:	d00d      	beq.n	8002818 <HAL_GPIO_Init+0x1e8>
 80027fc:	687b      	ldr	r3, [r7, #4]
 80027fe:	4a3e      	ldr	r2, [pc, #248]	@ (80028f8 <HAL_GPIO_Init+0x2c8>)
 8002800:	4293      	cmp	r3, r2
 8002802:	d007      	beq.n	8002814 <HAL_GPIO_Init+0x1e4>
 8002804:	687b      	ldr	r3, [r7, #4]
 8002806:	4a3d      	ldr	r2, [pc, #244]	@ (80028fc <HAL_GPIO_Init+0x2cc>)
 8002808:	4293      	cmp	r3, r2
 800280a:	d101      	bne.n	8002810 <HAL_GPIO_Init+0x1e0>
 800280c:	2303      	movs	r3, #3
 800280e:	e006      	b.n	800281e <HAL_GPIO_Init+0x1ee>
 8002810:	2304      	movs	r3, #4
 8002812:	e004      	b.n	800281e <HAL_GPIO_Init+0x1ee>
 8002814:	2302      	movs	r3, #2
 8002816:	e002      	b.n	800281e <HAL_GPIO_Init+0x1ee>
 8002818:	2301      	movs	r3, #1
 800281a:	e000      	b.n	800281e <HAL_GPIO_Init+0x1ee>
 800281c:	2300      	movs	r3, #0
 800281e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8002820:	f002 0203 	and.w	r2, r2, #3
 8002824:	0092      	lsls	r2, r2, #2
 8002826:	4093      	lsls	r3, r2
 8002828:	68fa      	ldr	r2, [r7, #12]
 800282a:	4313      	orrs	r3, r2
 800282c:	60fb      	str	r3, [r7, #12]
 800282e:	492f      	ldr	r1, [pc, #188]	@ (80028ec <HAL_GPIO_Init+0x2bc>)
 8002830:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002832:	089b      	lsrs	r3, r3, #2
 8002834:	3302      	adds	r3, #2
 8002836:	68fa      	ldr	r2, [r7, #12]
 8002838:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800283c:	683b      	ldr	r3, [r7, #0]
 800283e:	685b      	ldr	r3, [r3, #4]
 8002840:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8002844:	2b00      	cmp	r3, #0
 8002846:	d006      	beq.n	8002856 <HAL_GPIO_Init+0x226>
 8002848:	4b2d      	ldr	r3, [pc, #180]	@ (8002900 <HAL_GPIO_Init+0x2d0>)
 800284a:	689a      	ldr	r2, [r3, #8]
 800284c:	492c      	ldr	r1, [pc, #176]	@ (8002900 <HAL_GPIO_Init+0x2d0>)
 800284e:	69bb      	ldr	r3, [r7, #24]
 8002850:	4313      	orrs	r3, r2
 8002852:	608b      	str	r3, [r1, #8]
 8002854:	e006      	b.n	8002864 <HAL_GPIO_Init+0x234>
 8002856:	4b2a      	ldr	r3, [pc, #168]	@ (8002900 <HAL_GPIO_Init+0x2d0>)
 8002858:	689a      	ldr	r2, [r3, #8]
 800285a:	69bb      	ldr	r3, [r7, #24]
 800285c:	43db      	mvns	r3, r3
 800285e:	4928      	ldr	r1, [pc, #160]	@ (8002900 <HAL_GPIO_Init+0x2d0>)
 8002860:	4013      	ands	r3, r2
 8002862:	608b      	str	r3, [r1, #8]
 8002864:	683b      	ldr	r3, [r7, #0]
 8002866:	685b      	ldr	r3, [r3, #4]
 8002868:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800286c:	2b00      	cmp	r3, #0
 800286e:	d006      	beq.n	800287e <HAL_GPIO_Init+0x24e>
 8002870:	4b23      	ldr	r3, [pc, #140]	@ (8002900 <HAL_GPIO_Init+0x2d0>)
 8002872:	68da      	ldr	r2, [r3, #12]
 8002874:	4922      	ldr	r1, [pc, #136]	@ (8002900 <HAL_GPIO_Init+0x2d0>)
 8002876:	69bb      	ldr	r3, [r7, #24]
 8002878:	4313      	orrs	r3, r2
 800287a:	60cb      	str	r3, [r1, #12]
 800287c:	e006      	b.n	800288c <HAL_GPIO_Init+0x25c>
 800287e:	4b20      	ldr	r3, [pc, #128]	@ (8002900 <HAL_GPIO_Init+0x2d0>)
 8002880:	68da      	ldr	r2, [r3, #12]
 8002882:	69bb      	ldr	r3, [r7, #24]
 8002884:	43db      	mvns	r3, r3
 8002886:	491e      	ldr	r1, [pc, #120]	@ (8002900 <HAL_GPIO_Init+0x2d0>)
 8002888:	4013      	ands	r3, r2
 800288a:	60cb      	str	r3, [r1, #12]
 800288c:	683b      	ldr	r3, [r7, #0]
 800288e:	685b      	ldr	r3, [r3, #4]
 8002890:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002894:	2b00      	cmp	r3, #0
 8002896:	d006      	beq.n	80028a6 <HAL_GPIO_Init+0x276>
 8002898:	4b19      	ldr	r3, [pc, #100]	@ (8002900 <HAL_GPIO_Init+0x2d0>)
 800289a:	685a      	ldr	r2, [r3, #4]
 800289c:	4918      	ldr	r1, [pc, #96]	@ (8002900 <HAL_GPIO_Init+0x2d0>)
 800289e:	69bb      	ldr	r3, [r7, #24]
 80028a0:	4313      	orrs	r3, r2
 80028a2:	604b      	str	r3, [r1, #4]
 80028a4:	e006      	b.n	80028b4 <HAL_GPIO_Init+0x284>
 80028a6:	4b16      	ldr	r3, [pc, #88]	@ (8002900 <HAL_GPIO_Init+0x2d0>)
 80028a8:	685a      	ldr	r2, [r3, #4]
 80028aa:	69bb      	ldr	r3, [r7, #24]
 80028ac:	43db      	mvns	r3, r3
 80028ae:	4914      	ldr	r1, [pc, #80]	@ (8002900 <HAL_GPIO_Init+0x2d0>)
 80028b0:	4013      	ands	r3, r2
 80028b2:	604b      	str	r3, [r1, #4]
 80028b4:	683b      	ldr	r3, [r7, #0]
 80028b6:	685b      	ldr	r3, [r3, #4]
 80028b8:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80028bc:	2b00      	cmp	r3, #0
 80028be:	d021      	beq.n	8002904 <HAL_GPIO_Init+0x2d4>
 80028c0:	4b0f      	ldr	r3, [pc, #60]	@ (8002900 <HAL_GPIO_Init+0x2d0>)
 80028c2:	681a      	ldr	r2, [r3, #0]
 80028c4:	490e      	ldr	r1, [pc, #56]	@ (8002900 <HAL_GPIO_Init+0x2d0>)
 80028c6:	69bb      	ldr	r3, [r7, #24]
 80028c8:	4313      	orrs	r3, r2
 80028ca:	600b      	str	r3, [r1, #0]
 80028cc:	e021      	b.n	8002912 <HAL_GPIO_Init+0x2e2>
 80028ce:	bf00      	nop
 80028d0:	10320000 	.word	0x10320000
 80028d4:	10310000 	.word	0x10310000
 80028d8:	10220000 	.word	0x10220000
 80028dc:	10210000 	.word	0x10210000
 80028e0:	10120000 	.word	0x10120000
 80028e4:	10110000 	.word	0x10110000
 80028e8:	40021000 	.word	0x40021000
 80028ec:	40010000 	.word	0x40010000
 80028f0:	40010800 	.word	0x40010800
 80028f4:	40010c00 	.word	0x40010c00
 80028f8:	40011000 	.word	0x40011000
 80028fc:	40011400 	.word	0x40011400
 8002900:	40010400 	.word	0x40010400
 8002904:	4b0b      	ldr	r3, [pc, #44]	@ (8002934 <HAL_GPIO_Init+0x304>)
 8002906:	681a      	ldr	r2, [r3, #0]
 8002908:	69bb      	ldr	r3, [r7, #24]
 800290a:	43db      	mvns	r3, r3
 800290c:	4909      	ldr	r1, [pc, #36]	@ (8002934 <HAL_GPIO_Init+0x304>)
 800290e:	4013      	ands	r3, r2
 8002910:	600b      	str	r3, [r1, #0]
 8002912:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002914:	3301      	adds	r3, #1
 8002916:	627b      	str	r3, [r7, #36]	@ 0x24
 8002918:	683b      	ldr	r3, [r7, #0]
 800291a:	681a      	ldr	r2, [r3, #0]
 800291c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800291e:	fa22 f303 	lsr.w	r3, r2, r3
 8002922:	2b00      	cmp	r3, #0
 8002924:	f47f ae8e 	bne.w	8002644 <HAL_GPIO_Init+0x14>
 8002928:	bf00      	nop
 800292a:	bf00      	nop
 800292c:	372c      	adds	r7, #44	@ 0x2c
 800292e:	46bd      	mov	sp, r7
 8002930:	bc80      	pop	{r7}
 8002932:	4770      	bx	lr
 8002934:	40010400 	.word	0x40010400

08002938 <HAL_RCC_OscConfig>:
 8002938:	b580      	push	{r7, lr}
 800293a:	b086      	sub	sp, #24
 800293c:	af00      	add	r7, sp, #0
 800293e:	6078      	str	r0, [r7, #4]
 8002940:	687b      	ldr	r3, [r7, #4]
 8002942:	2b00      	cmp	r3, #0
 8002944:	d101      	bne.n	800294a <HAL_RCC_OscConfig+0x12>
 8002946:	2301      	movs	r3, #1
 8002948:	e272      	b.n	8002e30 <HAL_RCC_OscConfig+0x4f8>
 800294a:	687b      	ldr	r3, [r7, #4]
 800294c:	681b      	ldr	r3, [r3, #0]
 800294e:	f003 0301 	and.w	r3, r3, #1
 8002952:	2b00      	cmp	r3, #0
 8002954:	f000 8087 	beq.w	8002a66 <HAL_RCC_OscConfig+0x12e>
 8002958:	4b92      	ldr	r3, [pc, #584]	@ (8002ba4 <HAL_RCC_OscConfig+0x26c>)
 800295a:	685b      	ldr	r3, [r3, #4]
 800295c:	f003 030c 	and.w	r3, r3, #12
 8002960:	2b04      	cmp	r3, #4
 8002962:	d00c      	beq.n	800297e <HAL_RCC_OscConfig+0x46>
 8002964:	4b8f      	ldr	r3, [pc, #572]	@ (8002ba4 <HAL_RCC_OscConfig+0x26c>)
 8002966:	685b      	ldr	r3, [r3, #4]
 8002968:	f003 030c 	and.w	r3, r3, #12
 800296c:	2b08      	cmp	r3, #8
 800296e:	d112      	bne.n	8002996 <HAL_RCC_OscConfig+0x5e>
 8002970:	4b8c      	ldr	r3, [pc, #560]	@ (8002ba4 <HAL_RCC_OscConfig+0x26c>)
 8002972:	685b      	ldr	r3, [r3, #4]
 8002974:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002978:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800297c:	d10b      	bne.n	8002996 <HAL_RCC_OscConfig+0x5e>
 800297e:	4b89      	ldr	r3, [pc, #548]	@ (8002ba4 <HAL_RCC_OscConfig+0x26c>)
 8002980:	681b      	ldr	r3, [r3, #0]
 8002982:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002986:	2b00      	cmp	r3, #0
 8002988:	d06c      	beq.n	8002a64 <HAL_RCC_OscConfig+0x12c>
 800298a:	687b      	ldr	r3, [r7, #4]
 800298c:	685b      	ldr	r3, [r3, #4]
 800298e:	2b00      	cmp	r3, #0
 8002990:	d168      	bne.n	8002a64 <HAL_RCC_OscConfig+0x12c>
 8002992:	2301      	movs	r3, #1
 8002994:	e24c      	b.n	8002e30 <HAL_RCC_OscConfig+0x4f8>
 8002996:	687b      	ldr	r3, [r7, #4]
 8002998:	685b      	ldr	r3, [r3, #4]
 800299a:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800299e:	d106      	bne.n	80029ae <HAL_RCC_OscConfig+0x76>
 80029a0:	4b80      	ldr	r3, [pc, #512]	@ (8002ba4 <HAL_RCC_OscConfig+0x26c>)
 80029a2:	681b      	ldr	r3, [r3, #0]
 80029a4:	4a7f      	ldr	r2, [pc, #508]	@ (8002ba4 <HAL_RCC_OscConfig+0x26c>)
 80029a6:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80029aa:	6013      	str	r3, [r2, #0]
 80029ac:	e02e      	b.n	8002a0c <HAL_RCC_OscConfig+0xd4>
 80029ae:	687b      	ldr	r3, [r7, #4]
 80029b0:	685b      	ldr	r3, [r3, #4]
 80029b2:	2b00      	cmp	r3, #0
 80029b4:	d10c      	bne.n	80029d0 <HAL_RCC_OscConfig+0x98>
 80029b6:	4b7b      	ldr	r3, [pc, #492]	@ (8002ba4 <HAL_RCC_OscConfig+0x26c>)
 80029b8:	681b      	ldr	r3, [r3, #0]
 80029ba:	4a7a      	ldr	r2, [pc, #488]	@ (8002ba4 <HAL_RCC_OscConfig+0x26c>)
 80029bc:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80029c0:	6013      	str	r3, [r2, #0]
 80029c2:	4b78      	ldr	r3, [pc, #480]	@ (8002ba4 <HAL_RCC_OscConfig+0x26c>)
 80029c4:	681b      	ldr	r3, [r3, #0]
 80029c6:	4a77      	ldr	r2, [pc, #476]	@ (8002ba4 <HAL_RCC_OscConfig+0x26c>)
 80029c8:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80029cc:	6013      	str	r3, [r2, #0]
 80029ce:	e01d      	b.n	8002a0c <HAL_RCC_OscConfig+0xd4>
 80029d0:	687b      	ldr	r3, [r7, #4]
 80029d2:	685b      	ldr	r3, [r3, #4]
 80029d4:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80029d8:	d10c      	bne.n	80029f4 <HAL_RCC_OscConfig+0xbc>
 80029da:	4b72      	ldr	r3, [pc, #456]	@ (8002ba4 <HAL_RCC_OscConfig+0x26c>)
 80029dc:	681b      	ldr	r3, [r3, #0]
 80029de:	4a71      	ldr	r2, [pc, #452]	@ (8002ba4 <HAL_RCC_OscConfig+0x26c>)
 80029e0:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80029e4:	6013      	str	r3, [r2, #0]
 80029e6:	4b6f      	ldr	r3, [pc, #444]	@ (8002ba4 <HAL_RCC_OscConfig+0x26c>)
 80029e8:	681b      	ldr	r3, [r3, #0]
 80029ea:	4a6e      	ldr	r2, [pc, #440]	@ (8002ba4 <HAL_RCC_OscConfig+0x26c>)
 80029ec:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80029f0:	6013      	str	r3, [r2, #0]
 80029f2:	e00b      	b.n	8002a0c <HAL_RCC_OscConfig+0xd4>
 80029f4:	4b6b      	ldr	r3, [pc, #428]	@ (8002ba4 <HAL_RCC_OscConfig+0x26c>)
 80029f6:	681b      	ldr	r3, [r3, #0]
 80029f8:	4a6a      	ldr	r2, [pc, #424]	@ (8002ba4 <HAL_RCC_OscConfig+0x26c>)
 80029fa:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80029fe:	6013      	str	r3, [r2, #0]
 8002a00:	4b68      	ldr	r3, [pc, #416]	@ (8002ba4 <HAL_RCC_OscConfig+0x26c>)
 8002a02:	681b      	ldr	r3, [r3, #0]
 8002a04:	4a67      	ldr	r2, [pc, #412]	@ (8002ba4 <HAL_RCC_OscConfig+0x26c>)
 8002a06:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8002a0a:	6013      	str	r3, [r2, #0]
 8002a0c:	687b      	ldr	r3, [r7, #4]
 8002a0e:	685b      	ldr	r3, [r3, #4]
 8002a10:	2b00      	cmp	r3, #0
 8002a12:	d013      	beq.n	8002a3c <HAL_RCC_OscConfig+0x104>
 8002a14:	f7ff f8bc 	bl	8001b90 <HAL_GetTick>
 8002a18:	6138      	str	r0, [r7, #16]
 8002a1a:	e008      	b.n	8002a2e <HAL_RCC_OscConfig+0xf6>
 8002a1c:	f7ff f8b8 	bl	8001b90 <HAL_GetTick>
 8002a20:	4602      	mov	r2, r0
 8002a22:	693b      	ldr	r3, [r7, #16]
 8002a24:	1ad3      	subs	r3, r2, r3
 8002a26:	2b64      	cmp	r3, #100	@ 0x64
 8002a28:	d901      	bls.n	8002a2e <HAL_RCC_OscConfig+0xf6>
 8002a2a:	2303      	movs	r3, #3
 8002a2c:	e200      	b.n	8002e30 <HAL_RCC_OscConfig+0x4f8>
 8002a2e:	4b5d      	ldr	r3, [pc, #372]	@ (8002ba4 <HAL_RCC_OscConfig+0x26c>)
 8002a30:	681b      	ldr	r3, [r3, #0]
 8002a32:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002a36:	2b00      	cmp	r3, #0
 8002a38:	d0f0      	beq.n	8002a1c <HAL_RCC_OscConfig+0xe4>
 8002a3a:	e014      	b.n	8002a66 <HAL_RCC_OscConfig+0x12e>
 8002a3c:	f7ff f8a8 	bl	8001b90 <HAL_GetTick>
 8002a40:	6138      	str	r0, [r7, #16]
 8002a42:	e008      	b.n	8002a56 <HAL_RCC_OscConfig+0x11e>
 8002a44:	f7ff f8a4 	bl	8001b90 <HAL_GetTick>
 8002a48:	4602      	mov	r2, r0
 8002a4a:	693b      	ldr	r3, [r7, #16]
 8002a4c:	1ad3      	subs	r3, r2, r3
 8002a4e:	2b64      	cmp	r3, #100	@ 0x64
 8002a50:	d901      	bls.n	8002a56 <HAL_RCC_OscConfig+0x11e>
 8002a52:	2303      	movs	r3, #3
 8002a54:	e1ec      	b.n	8002e30 <HAL_RCC_OscConfig+0x4f8>
 8002a56:	4b53      	ldr	r3, [pc, #332]	@ (8002ba4 <HAL_RCC_OscConfig+0x26c>)
 8002a58:	681b      	ldr	r3, [r3, #0]
 8002a5a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002a5e:	2b00      	cmp	r3, #0
 8002a60:	d1f0      	bne.n	8002a44 <HAL_RCC_OscConfig+0x10c>
 8002a62:	e000      	b.n	8002a66 <HAL_RCC_OscConfig+0x12e>
 8002a64:	bf00      	nop
 8002a66:	687b      	ldr	r3, [r7, #4]
 8002a68:	681b      	ldr	r3, [r3, #0]
 8002a6a:	f003 0302 	and.w	r3, r3, #2
 8002a6e:	2b00      	cmp	r3, #0
 8002a70:	d063      	beq.n	8002b3a <HAL_RCC_OscConfig+0x202>
 8002a72:	4b4c      	ldr	r3, [pc, #304]	@ (8002ba4 <HAL_RCC_OscConfig+0x26c>)
 8002a74:	685b      	ldr	r3, [r3, #4]
 8002a76:	f003 030c 	and.w	r3, r3, #12
 8002a7a:	2b00      	cmp	r3, #0
 8002a7c:	d00b      	beq.n	8002a96 <HAL_RCC_OscConfig+0x15e>
 8002a7e:	4b49      	ldr	r3, [pc, #292]	@ (8002ba4 <HAL_RCC_OscConfig+0x26c>)
 8002a80:	685b      	ldr	r3, [r3, #4]
 8002a82:	f003 030c 	and.w	r3, r3, #12
 8002a86:	2b08      	cmp	r3, #8
 8002a88:	d11c      	bne.n	8002ac4 <HAL_RCC_OscConfig+0x18c>
 8002a8a:	4b46      	ldr	r3, [pc, #280]	@ (8002ba4 <HAL_RCC_OscConfig+0x26c>)
 8002a8c:	685b      	ldr	r3, [r3, #4]
 8002a8e:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002a92:	2b00      	cmp	r3, #0
 8002a94:	d116      	bne.n	8002ac4 <HAL_RCC_OscConfig+0x18c>
 8002a96:	4b43      	ldr	r3, [pc, #268]	@ (8002ba4 <HAL_RCC_OscConfig+0x26c>)
 8002a98:	681b      	ldr	r3, [r3, #0]
 8002a9a:	f003 0302 	and.w	r3, r3, #2
 8002a9e:	2b00      	cmp	r3, #0
 8002aa0:	d005      	beq.n	8002aae <HAL_RCC_OscConfig+0x176>
 8002aa2:	687b      	ldr	r3, [r7, #4]
 8002aa4:	691b      	ldr	r3, [r3, #16]
 8002aa6:	2b01      	cmp	r3, #1
 8002aa8:	d001      	beq.n	8002aae <HAL_RCC_OscConfig+0x176>
 8002aaa:	2301      	movs	r3, #1
 8002aac:	e1c0      	b.n	8002e30 <HAL_RCC_OscConfig+0x4f8>
 8002aae:	4b3d      	ldr	r3, [pc, #244]	@ (8002ba4 <HAL_RCC_OscConfig+0x26c>)
 8002ab0:	681b      	ldr	r3, [r3, #0]
 8002ab2:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002ab6:	687b      	ldr	r3, [r7, #4]
 8002ab8:	695b      	ldr	r3, [r3, #20]
 8002aba:	00db      	lsls	r3, r3, #3
 8002abc:	4939      	ldr	r1, [pc, #228]	@ (8002ba4 <HAL_RCC_OscConfig+0x26c>)
 8002abe:	4313      	orrs	r3, r2
 8002ac0:	600b      	str	r3, [r1, #0]
 8002ac2:	e03a      	b.n	8002b3a <HAL_RCC_OscConfig+0x202>
 8002ac4:	687b      	ldr	r3, [r7, #4]
 8002ac6:	691b      	ldr	r3, [r3, #16]
 8002ac8:	2b00      	cmp	r3, #0
 8002aca:	d020      	beq.n	8002b0e <HAL_RCC_OscConfig+0x1d6>
 8002acc:	4b36      	ldr	r3, [pc, #216]	@ (8002ba8 <HAL_RCC_OscConfig+0x270>)
 8002ace:	2201      	movs	r2, #1
 8002ad0:	601a      	str	r2, [r3, #0]
 8002ad2:	f7ff f85d 	bl	8001b90 <HAL_GetTick>
 8002ad6:	6138      	str	r0, [r7, #16]
 8002ad8:	e008      	b.n	8002aec <HAL_RCC_OscConfig+0x1b4>
 8002ada:	f7ff f859 	bl	8001b90 <HAL_GetTick>
 8002ade:	4602      	mov	r2, r0
 8002ae0:	693b      	ldr	r3, [r7, #16]
 8002ae2:	1ad3      	subs	r3, r2, r3
 8002ae4:	2b02      	cmp	r3, #2
 8002ae6:	d901      	bls.n	8002aec <HAL_RCC_OscConfig+0x1b4>
 8002ae8:	2303      	movs	r3, #3
 8002aea:	e1a1      	b.n	8002e30 <HAL_RCC_OscConfig+0x4f8>
 8002aec:	4b2d      	ldr	r3, [pc, #180]	@ (8002ba4 <HAL_RCC_OscConfig+0x26c>)
 8002aee:	681b      	ldr	r3, [r3, #0]
 8002af0:	f003 0302 	and.w	r3, r3, #2
 8002af4:	2b00      	cmp	r3, #0
 8002af6:	d0f0      	beq.n	8002ada <HAL_RCC_OscConfig+0x1a2>
 8002af8:	4b2a      	ldr	r3, [pc, #168]	@ (8002ba4 <HAL_RCC_OscConfig+0x26c>)
 8002afa:	681b      	ldr	r3, [r3, #0]
 8002afc:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002b00:	687b      	ldr	r3, [r7, #4]
 8002b02:	695b      	ldr	r3, [r3, #20]
 8002b04:	00db      	lsls	r3, r3, #3
 8002b06:	4927      	ldr	r1, [pc, #156]	@ (8002ba4 <HAL_RCC_OscConfig+0x26c>)
 8002b08:	4313      	orrs	r3, r2
 8002b0a:	600b      	str	r3, [r1, #0]
 8002b0c:	e015      	b.n	8002b3a <HAL_RCC_OscConfig+0x202>
 8002b0e:	4b26      	ldr	r3, [pc, #152]	@ (8002ba8 <HAL_RCC_OscConfig+0x270>)
 8002b10:	2200      	movs	r2, #0
 8002b12:	601a      	str	r2, [r3, #0]
 8002b14:	f7ff f83c 	bl	8001b90 <HAL_GetTick>
 8002b18:	6138      	str	r0, [r7, #16]
 8002b1a:	e008      	b.n	8002b2e <HAL_RCC_OscConfig+0x1f6>
 8002b1c:	f7ff f838 	bl	8001b90 <HAL_GetTick>
 8002b20:	4602      	mov	r2, r0
 8002b22:	693b      	ldr	r3, [r7, #16]
 8002b24:	1ad3      	subs	r3, r2, r3
 8002b26:	2b02      	cmp	r3, #2
 8002b28:	d901      	bls.n	8002b2e <HAL_RCC_OscConfig+0x1f6>
 8002b2a:	2303      	movs	r3, #3
 8002b2c:	e180      	b.n	8002e30 <HAL_RCC_OscConfig+0x4f8>
 8002b2e:	4b1d      	ldr	r3, [pc, #116]	@ (8002ba4 <HAL_RCC_OscConfig+0x26c>)
 8002b30:	681b      	ldr	r3, [r3, #0]
 8002b32:	f003 0302 	and.w	r3, r3, #2
 8002b36:	2b00      	cmp	r3, #0
 8002b38:	d1f0      	bne.n	8002b1c <HAL_RCC_OscConfig+0x1e4>
 8002b3a:	687b      	ldr	r3, [r7, #4]
 8002b3c:	681b      	ldr	r3, [r3, #0]
 8002b3e:	f003 0308 	and.w	r3, r3, #8
 8002b42:	2b00      	cmp	r3, #0
 8002b44:	d03a      	beq.n	8002bbc <HAL_RCC_OscConfig+0x284>
 8002b46:	687b      	ldr	r3, [r7, #4]
 8002b48:	699b      	ldr	r3, [r3, #24]
 8002b4a:	2b00      	cmp	r3, #0
 8002b4c:	d019      	beq.n	8002b82 <HAL_RCC_OscConfig+0x24a>
 8002b4e:	4b17      	ldr	r3, [pc, #92]	@ (8002bac <HAL_RCC_OscConfig+0x274>)
 8002b50:	2201      	movs	r2, #1
 8002b52:	601a      	str	r2, [r3, #0]
 8002b54:	f7ff f81c 	bl	8001b90 <HAL_GetTick>
 8002b58:	6138      	str	r0, [r7, #16]
 8002b5a:	e008      	b.n	8002b6e <HAL_RCC_OscConfig+0x236>
 8002b5c:	f7ff f818 	bl	8001b90 <HAL_GetTick>
 8002b60:	4602      	mov	r2, r0
 8002b62:	693b      	ldr	r3, [r7, #16]
 8002b64:	1ad3      	subs	r3, r2, r3
 8002b66:	2b02      	cmp	r3, #2
 8002b68:	d901      	bls.n	8002b6e <HAL_RCC_OscConfig+0x236>
 8002b6a:	2303      	movs	r3, #3
 8002b6c:	e160      	b.n	8002e30 <HAL_RCC_OscConfig+0x4f8>
 8002b6e:	4b0d      	ldr	r3, [pc, #52]	@ (8002ba4 <HAL_RCC_OscConfig+0x26c>)
 8002b70:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002b72:	f003 0302 	and.w	r3, r3, #2
 8002b76:	2b00      	cmp	r3, #0
 8002b78:	d0f0      	beq.n	8002b5c <HAL_RCC_OscConfig+0x224>
 8002b7a:	2001      	movs	r0, #1
 8002b7c:	f000 fad0 	bl	8003120 <RCC_Delay>
 8002b80:	e01c      	b.n	8002bbc <HAL_RCC_OscConfig+0x284>
 8002b82:	4b0a      	ldr	r3, [pc, #40]	@ (8002bac <HAL_RCC_OscConfig+0x274>)
 8002b84:	2200      	movs	r2, #0
 8002b86:	601a      	str	r2, [r3, #0]
 8002b88:	f7ff f802 	bl	8001b90 <HAL_GetTick>
 8002b8c:	6138      	str	r0, [r7, #16]
 8002b8e:	e00f      	b.n	8002bb0 <HAL_RCC_OscConfig+0x278>
 8002b90:	f7fe fffe 	bl	8001b90 <HAL_GetTick>
 8002b94:	4602      	mov	r2, r0
 8002b96:	693b      	ldr	r3, [r7, #16]
 8002b98:	1ad3      	subs	r3, r2, r3
 8002b9a:	2b02      	cmp	r3, #2
 8002b9c:	d908      	bls.n	8002bb0 <HAL_RCC_OscConfig+0x278>
 8002b9e:	2303      	movs	r3, #3
 8002ba0:	e146      	b.n	8002e30 <HAL_RCC_OscConfig+0x4f8>
 8002ba2:	bf00      	nop
 8002ba4:	40021000 	.word	0x40021000
 8002ba8:	42420000 	.word	0x42420000
 8002bac:	42420480 	.word	0x42420480
 8002bb0:	4b92      	ldr	r3, [pc, #584]	@ (8002dfc <HAL_RCC_OscConfig+0x4c4>)
 8002bb2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002bb4:	f003 0302 	and.w	r3, r3, #2
 8002bb8:	2b00      	cmp	r3, #0
 8002bba:	d1e9      	bne.n	8002b90 <HAL_RCC_OscConfig+0x258>
 8002bbc:	687b      	ldr	r3, [r7, #4]
 8002bbe:	681b      	ldr	r3, [r3, #0]
 8002bc0:	f003 0304 	and.w	r3, r3, #4
 8002bc4:	2b00      	cmp	r3, #0
 8002bc6:	f000 80a6 	beq.w	8002d16 <HAL_RCC_OscConfig+0x3de>
 8002bca:	2300      	movs	r3, #0
 8002bcc:	75fb      	strb	r3, [r7, #23]
 8002bce:	4b8b      	ldr	r3, [pc, #556]	@ (8002dfc <HAL_RCC_OscConfig+0x4c4>)
 8002bd0:	69db      	ldr	r3, [r3, #28]
 8002bd2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002bd6:	2b00      	cmp	r3, #0
 8002bd8:	d10d      	bne.n	8002bf6 <HAL_RCC_OscConfig+0x2be>
 8002bda:	4b88      	ldr	r3, [pc, #544]	@ (8002dfc <HAL_RCC_OscConfig+0x4c4>)
 8002bdc:	69db      	ldr	r3, [r3, #28]
 8002bde:	4a87      	ldr	r2, [pc, #540]	@ (8002dfc <HAL_RCC_OscConfig+0x4c4>)
 8002be0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002be4:	61d3      	str	r3, [r2, #28]
 8002be6:	4b85      	ldr	r3, [pc, #532]	@ (8002dfc <HAL_RCC_OscConfig+0x4c4>)
 8002be8:	69db      	ldr	r3, [r3, #28]
 8002bea:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002bee:	60bb      	str	r3, [r7, #8]
 8002bf0:	68bb      	ldr	r3, [r7, #8]
 8002bf2:	2301      	movs	r3, #1
 8002bf4:	75fb      	strb	r3, [r7, #23]
 8002bf6:	4b82      	ldr	r3, [pc, #520]	@ (8002e00 <HAL_RCC_OscConfig+0x4c8>)
 8002bf8:	681b      	ldr	r3, [r3, #0]
 8002bfa:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002bfe:	2b00      	cmp	r3, #0
 8002c00:	d118      	bne.n	8002c34 <HAL_RCC_OscConfig+0x2fc>
 8002c02:	4b7f      	ldr	r3, [pc, #508]	@ (8002e00 <HAL_RCC_OscConfig+0x4c8>)
 8002c04:	681b      	ldr	r3, [r3, #0]
 8002c06:	4a7e      	ldr	r2, [pc, #504]	@ (8002e00 <HAL_RCC_OscConfig+0x4c8>)
 8002c08:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002c0c:	6013      	str	r3, [r2, #0]
 8002c0e:	f7fe ffbf 	bl	8001b90 <HAL_GetTick>
 8002c12:	6138      	str	r0, [r7, #16]
 8002c14:	e008      	b.n	8002c28 <HAL_RCC_OscConfig+0x2f0>
 8002c16:	f7fe ffbb 	bl	8001b90 <HAL_GetTick>
 8002c1a:	4602      	mov	r2, r0
 8002c1c:	693b      	ldr	r3, [r7, #16]
 8002c1e:	1ad3      	subs	r3, r2, r3
 8002c20:	2b64      	cmp	r3, #100	@ 0x64
 8002c22:	d901      	bls.n	8002c28 <HAL_RCC_OscConfig+0x2f0>
 8002c24:	2303      	movs	r3, #3
 8002c26:	e103      	b.n	8002e30 <HAL_RCC_OscConfig+0x4f8>
 8002c28:	4b75      	ldr	r3, [pc, #468]	@ (8002e00 <HAL_RCC_OscConfig+0x4c8>)
 8002c2a:	681b      	ldr	r3, [r3, #0]
 8002c2c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002c30:	2b00      	cmp	r3, #0
 8002c32:	d0f0      	beq.n	8002c16 <HAL_RCC_OscConfig+0x2de>
 8002c34:	687b      	ldr	r3, [r7, #4]
 8002c36:	68db      	ldr	r3, [r3, #12]
 8002c38:	2b01      	cmp	r3, #1
 8002c3a:	d106      	bne.n	8002c4a <HAL_RCC_OscConfig+0x312>
 8002c3c:	4b6f      	ldr	r3, [pc, #444]	@ (8002dfc <HAL_RCC_OscConfig+0x4c4>)
 8002c3e:	6a1b      	ldr	r3, [r3, #32]
 8002c40:	4a6e      	ldr	r2, [pc, #440]	@ (8002dfc <HAL_RCC_OscConfig+0x4c4>)
 8002c42:	f043 0301 	orr.w	r3, r3, #1
 8002c46:	6213      	str	r3, [r2, #32]
 8002c48:	e02d      	b.n	8002ca6 <HAL_RCC_OscConfig+0x36e>
 8002c4a:	687b      	ldr	r3, [r7, #4]
 8002c4c:	68db      	ldr	r3, [r3, #12]
 8002c4e:	2b00      	cmp	r3, #0
 8002c50:	d10c      	bne.n	8002c6c <HAL_RCC_OscConfig+0x334>
 8002c52:	4b6a      	ldr	r3, [pc, #424]	@ (8002dfc <HAL_RCC_OscConfig+0x4c4>)
 8002c54:	6a1b      	ldr	r3, [r3, #32]
 8002c56:	4a69      	ldr	r2, [pc, #420]	@ (8002dfc <HAL_RCC_OscConfig+0x4c4>)
 8002c58:	f023 0301 	bic.w	r3, r3, #1
 8002c5c:	6213      	str	r3, [r2, #32]
 8002c5e:	4b67      	ldr	r3, [pc, #412]	@ (8002dfc <HAL_RCC_OscConfig+0x4c4>)
 8002c60:	6a1b      	ldr	r3, [r3, #32]
 8002c62:	4a66      	ldr	r2, [pc, #408]	@ (8002dfc <HAL_RCC_OscConfig+0x4c4>)
 8002c64:	f023 0304 	bic.w	r3, r3, #4
 8002c68:	6213      	str	r3, [r2, #32]
 8002c6a:	e01c      	b.n	8002ca6 <HAL_RCC_OscConfig+0x36e>
 8002c6c:	687b      	ldr	r3, [r7, #4]
 8002c6e:	68db      	ldr	r3, [r3, #12]
 8002c70:	2b05      	cmp	r3, #5
 8002c72:	d10c      	bne.n	8002c8e <HAL_RCC_OscConfig+0x356>
 8002c74:	4b61      	ldr	r3, [pc, #388]	@ (8002dfc <HAL_RCC_OscConfig+0x4c4>)
 8002c76:	6a1b      	ldr	r3, [r3, #32]
 8002c78:	4a60      	ldr	r2, [pc, #384]	@ (8002dfc <HAL_RCC_OscConfig+0x4c4>)
 8002c7a:	f043 0304 	orr.w	r3, r3, #4
 8002c7e:	6213      	str	r3, [r2, #32]
 8002c80:	4b5e      	ldr	r3, [pc, #376]	@ (8002dfc <HAL_RCC_OscConfig+0x4c4>)
 8002c82:	6a1b      	ldr	r3, [r3, #32]
 8002c84:	4a5d      	ldr	r2, [pc, #372]	@ (8002dfc <HAL_RCC_OscConfig+0x4c4>)
 8002c86:	f043 0301 	orr.w	r3, r3, #1
 8002c8a:	6213      	str	r3, [r2, #32]
 8002c8c:	e00b      	b.n	8002ca6 <HAL_RCC_OscConfig+0x36e>
 8002c8e:	4b5b      	ldr	r3, [pc, #364]	@ (8002dfc <HAL_RCC_OscConfig+0x4c4>)
 8002c90:	6a1b      	ldr	r3, [r3, #32]
 8002c92:	4a5a      	ldr	r2, [pc, #360]	@ (8002dfc <HAL_RCC_OscConfig+0x4c4>)
 8002c94:	f023 0301 	bic.w	r3, r3, #1
 8002c98:	6213      	str	r3, [r2, #32]
 8002c9a:	4b58      	ldr	r3, [pc, #352]	@ (8002dfc <HAL_RCC_OscConfig+0x4c4>)
 8002c9c:	6a1b      	ldr	r3, [r3, #32]
 8002c9e:	4a57      	ldr	r2, [pc, #348]	@ (8002dfc <HAL_RCC_OscConfig+0x4c4>)
 8002ca0:	f023 0304 	bic.w	r3, r3, #4
 8002ca4:	6213      	str	r3, [r2, #32]
 8002ca6:	687b      	ldr	r3, [r7, #4]
 8002ca8:	68db      	ldr	r3, [r3, #12]
 8002caa:	2b00      	cmp	r3, #0
 8002cac:	d015      	beq.n	8002cda <HAL_RCC_OscConfig+0x3a2>
 8002cae:	f7fe ff6f 	bl	8001b90 <HAL_GetTick>
 8002cb2:	6138      	str	r0, [r7, #16]
 8002cb4:	e00a      	b.n	8002ccc <HAL_RCC_OscConfig+0x394>
 8002cb6:	f7fe ff6b 	bl	8001b90 <HAL_GetTick>
 8002cba:	4602      	mov	r2, r0
 8002cbc:	693b      	ldr	r3, [r7, #16]
 8002cbe:	1ad3      	subs	r3, r2, r3
 8002cc0:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002cc4:	4293      	cmp	r3, r2
 8002cc6:	d901      	bls.n	8002ccc <HAL_RCC_OscConfig+0x394>
 8002cc8:	2303      	movs	r3, #3
 8002cca:	e0b1      	b.n	8002e30 <HAL_RCC_OscConfig+0x4f8>
 8002ccc:	4b4b      	ldr	r3, [pc, #300]	@ (8002dfc <HAL_RCC_OscConfig+0x4c4>)
 8002cce:	6a1b      	ldr	r3, [r3, #32]
 8002cd0:	f003 0302 	and.w	r3, r3, #2
 8002cd4:	2b00      	cmp	r3, #0
 8002cd6:	d0ee      	beq.n	8002cb6 <HAL_RCC_OscConfig+0x37e>
 8002cd8:	e014      	b.n	8002d04 <HAL_RCC_OscConfig+0x3cc>
 8002cda:	f7fe ff59 	bl	8001b90 <HAL_GetTick>
 8002cde:	6138      	str	r0, [r7, #16]
 8002ce0:	e00a      	b.n	8002cf8 <HAL_RCC_OscConfig+0x3c0>
 8002ce2:	f7fe ff55 	bl	8001b90 <HAL_GetTick>
 8002ce6:	4602      	mov	r2, r0
 8002ce8:	693b      	ldr	r3, [r7, #16]
 8002cea:	1ad3      	subs	r3, r2, r3
 8002cec:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002cf0:	4293      	cmp	r3, r2
 8002cf2:	d901      	bls.n	8002cf8 <HAL_RCC_OscConfig+0x3c0>
 8002cf4:	2303      	movs	r3, #3
 8002cf6:	e09b      	b.n	8002e30 <HAL_RCC_OscConfig+0x4f8>
 8002cf8:	4b40      	ldr	r3, [pc, #256]	@ (8002dfc <HAL_RCC_OscConfig+0x4c4>)
 8002cfa:	6a1b      	ldr	r3, [r3, #32]
 8002cfc:	f003 0302 	and.w	r3, r3, #2
 8002d00:	2b00      	cmp	r3, #0
 8002d02:	d1ee      	bne.n	8002ce2 <HAL_RCC_OscConfig+0x3aa>
 8002d04:	7dfb      	ldrb	r3, [r7, #23]
 8002d06:	2b01      	cmp	r3, #1
 8002d08:	d105      	bne.n	8002d16 <HAL_RCC_OscConfig+0x3de>
 8002d0a:	4b3c      	ldr	r3, [pc, #240]	@ (8002dfc <HAL_RCC_OscConfig+0x4c4>)
 8002d0c:	69db      	ldr	r3, [r3, #28]
 8002d0e:	4a3b      	ldr	r2, [pc, #236]	@ (8002dfc <HAL_RCC_OscConfig+0x4c4>)
 8002d10:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8002d14:	61d3      	str	r3, [r2, #28]
 8002d16:	687b      	ldr	r3, [r7, #4]
 8002d18:	69db      	ldr	r3, [r3, #28]
 8002d1a:	2b00      	cmp	r3, #0
 8002d1c:	f000 8087 	beq.w	8002e2e <HAL_RCC_OscConfig+0x4f6>
 8002d20:	4b36      	ldr	r3, [pc, #216]	@ (8002dfc <HAL_RCC_OscConfig+0x4c4>)
 8002d22:	685b      	ldr	r3, [r3, #4]
 8002d24:	f003 030c 	and.w	r3, r3, #12
 8002d28:	2b08      	cmp	r3, #8
 8002d2a:	d061      	beq.n	8002df0 <HAL_RCC_OscConfig+0x4b8>
 8002d2c:	687b      	ldr	r3, [r7, #4]
 8002d2e:	69db      	ldr	r3, [r3, #28]
 8002d30:	2b02      	cmp	r3, #2
 8002d32:	d146      	bne.n	8002dc2 <HAL_RCC_OscConfig+0x48a>
 8002d34:	4b33      	ldr	r3, [pc, #204]	@ (8002e04 <HAL_RCC_OscConfig+0x4cc>)
 8002d36:	2200      	movs	r2, #0
 8002d38:	601a      	str	r2, [r3, #0]
 8002d3a:	f7fe ff29 	bl	8001b90 <HAL_GetTick>
 8002d3e:	6138      	str	r0, [r7, #16]
 8002d40:	e008      	b.n	8002d54 <HAL_RCC_OscConfig+0x41c>
 8002d42:	f7fe ff25 	bl	8001b90 <HAL_GetTick>
 8002d46:	4602      	mov	r2, r0
 8002d48:	693b      	ldr	r3, [r7, #16]
 8002d4a:	1ad3      	subs	r3, r2, r3
 8002d4c:	2b02      	cmp	r3, #2
 8002d4e:	d901      	bls.n	8002d54 <HAL_RCC_OscConfig+0x41c>
 8002d50:	2303      	movs	r3, #3
 8002d52:	e06d      	b.n	8002e30 <HAL_RCC_OscConfig+0x4f8>
 8002d54:	4b29      	ldr	r3, [pc, #164]	@ (8002dfc <HAL_RCC_OscConfig+0x4c4>)
 8002d56:	681b      	ldr	r3, [r3, #0]
 8002d58:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002d5c:	2b00      	cmp	r3, #0
 8002d5e:	d1f0      	bne.n	8002d42 <HAL_RCC_OscConfig+0x40a>
 8002d60:	687b      	ldr	r3, [r7, #4]
 8002d62:	6a1b      	ldr	r3, [r3, #32]
 8002d64:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8002d68:	d108      	bne.n	8002d7c <HAL_RCC_OscConfig+0x444>
 8002d6a:	4b24      	ldr	r3, [pc, #144]	@ (8002dfc <HAL_RCC_OscConfig+0x4c4>)
 8002d6c:	685b      	ldr	r3, [r3, #4]
 8002d6e:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 8002d72:	687b      	ldr	r3, [r7, #4]
 8002d74:	689b      	ldr	r3, [r3, #8]
 8002d76:	4921      	ldr	r1, [pc, #132]	@ (8002dfc <HAL_RCC_OscConfig+0x4c4>)
 8002d78:	4313      	orrs	r3, r2
 8002d7a:	604b      	str	r3, [r1, #4]
 8002d7c:	4b1f      	ldr	r3, [pc, #124]	@ (8002dfc <HAL_RCC_OscConfig+0x4c4>)
 8002d7e:	685b      	ldr	r3, [r3, #4]
 8002d80:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 8002d84:	687b      	ldr	r3, [r7, #4]
 8002d86:	6a19      	ldr	r1, [r3, #32]
 8002d88:	687b      	ldr	r3, [r7, #4]
 8002d8a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002d8c:	430b      	orrs	r3, r1
 8002d8e:	491b      	ldr	r1, [pc, #108]	@ (8002dfc <HAL_RCC_OscConfig+0x4c4>)
 8002d90:	4313      	orrs	r3, r2
 8002d92:	604b      	str	r3, [r1, #4]
 8002d94:	4b1b      	ldr	r3, [pc, #108]	@ (8002e04 <HAL_RCC_OscConfig+0x4cc>)
 8002d96:	2201      	movs	r2, #1
 8002d98:	601a      	str	r2, [r3, #0]
 8002d9a:	f7fe fef9 	bl	8001b90 <HAL_GetTick>
 8002d9e:	6138      	str	r0, [r7, #16]
 8002da0:	e008      	b.n	8002db4 <HAL_RCC_OscConfig+0x47c>
 8002da2:	f7fe fef5 	bl	8001b90 <HAL_GetTick>
 8002da6:	4602      	mov	r2, r0
 8002da8:	693b      	ldr	r3, [r7, #16]
 8002daa:	1ad3      	subs	r3, r2, r3
 8002dac:	2b02      	cmp	r3, #2
 8002dae:	d901      	bls.n	8002db4 <HAL_RCC_OscConfig+0x47c>
 8002db0:	2303      	movs	r3, #3
 8002db2:	e03d      	b.n	8002e30 <HAL_RCC_OscConfig+0x4f8>
 8002db4:	4b11      	ldr	r3, [pc, #68]	@ (8002dfc <HAL_RCC_OscConfig+0x4c4>)
 8002db6:	681b      	ldr	r3, [r3, #0]
 8002db8:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002dbc:	2b00      	cmp	r3, #0
 8002dbe:	d0f0      	beq.n	8002da2 <HAL_RCC_OscConfig+0x46a>
 8002dc0:	e035      	b.n	8002e2e <HAL_RCC_OscConfig+0x4f6>
 8002dc2:	4b10      	ldr	r3, [pc, #64]	@ (8002e04 <HAL_RCC_OscConfig+0x4cc>)
 8002dc4:	2200      	movs	r2, #0
 8002dc6:	601a      	str	r2, [r3, #0]
 8002dc8:	f7fe fee2 	bl	8001b90 <HAL_GetTick>
 8002dcc:	6138      	str	r0, [r7, #16]
 8002dce:	e008      	b.n	8002de2 <HAL_RCC_OscConfig+0x4aa>
 8002dd0:	f7fe fede 	bl	8001b90 <HAL_GetTick>
 8002dd4:	4602      	mov	r2, r0
 8002dd6:	693b      	ldr	r3, [r7, #16]
 8002dd8:	1ad3      	subs	r3, r2, r3
 8002dda:	2b02      	cmp	r3, #2
 8002ddc:	d901      	bls.n	8002de2 <HAL_RCC_OscConfig+0x4aa>
 8002dde:	2303      	movs	r3, #3
 8002de0:	e026      	b.n	8002e30 <HAL_RCC_OscConfig+0x4f8>
 8002de2:	4b06      	ldr	r3, [pc, #24]	@ (8002dfc <HAL_RCC_OscConfig+0x4c4>)
 8002de4:	681b      	ldr	r3, [r3, #0]
 8002de6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002dea:	2b00      	cmp	r3, #0
 8002dec:	d1f0      	bne.n	8002dd0 <HAL_RCC_OscConfig+0x498>
 8002dee:	e01e      	b.n	8002e2e <HAL_RCC_OscConfig+0x4f6>
 8002df0:	687b      	ldr	r3, [r7, #4]
 8002df2:	69db      	ldr	r3, [r3, #28]
 8002df4:	2b01      	cmp	r3, #1
 8002df6:	d107      	bne.n	8002e08 <HAL_RCC_OscConfig+0x4d0>
 8002df8:	2301      	movs	r3, #1
 8002dfa:	e019      	b.n	8002e30 <HAL_RCC_OscConfig+0x4f8>
 8002dfc:	40021000 	.word	0x40021000
 8002e00:	40007000 	.word	0x40007000
 8002e04:	42420060 	.word	0x42420060
 8002e08:	4b0b      	ldr	r3, [pc, #44]	@ (8002e38 <HAL_RCC_OscConfig+0x500>)
 8002e0a:	685b      	ldr	r3, [r3, #4]
 8002e0c:	60fb      	str	r3, [r7, #12]
 8002e0e:	68fb      	ldr	r3, [r7, #12]
 8002e10:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 8002e14:	687b      	ldr	r3, [r7, #4]
 8002e16:	6a1b      	ldr	r3, [r3, #32]
 8002e18:	429a      	cmp	r2, r3
 8002e1a:	d106      	bne.n	8002e2a <HAL_RCC_OscConfig+0x4f2>
 8002e1c:	68fb      	ldr	r3, [r7, #12]
 8002e1e:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 8002e22:	687b      	ldr	r3, [r7, #4]
 8002e24:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002e26:	429a      	cmp	r2, r3
 8002e28:	d001      	beq.n	8002e2e <HAL_RCC_OscConfig+0x4f6>
 8002e2a:	2301      	movs	r3, #1
 8002e2c:	e000      	b.n	8002e30 <HAL_RCC_OscConfig+0x4f8>
 8002e2e:	2300      	movs	r3, #0
 8002e30:	4618      	mov	r0, r3
 8002e32:	3718      	adds	r7, #24
 8002e34:	46bd      	mov	sp, r7
 8002e36:	bd80      	pop	{r7, pc}
 8002e38:	40021000 	.word	0x40021000

08002e3c <HAL_RCC_ClockConfig>:
 8002e3c:	b580      	push	{r7, lr}
 8002e3e:	b084      	sub	sp, #16
 8002e40:	af00      	add	r7, sp, #0
 8002e42:	6078      	str	r0, [r7, #4]
 8002e44:	6039      	str	r1, [r7, #0]
 8002e46:	687b      	ldr	r3, [r7, #4]
 8002e48:	2b00      	cmp	r3, #0
 8002e4a:	d101      	bne.n	8002e50 <HAL_RCC_ClockConfig+0x14>
 8002e4c:	2301      	movs	r3, #1
 8002e4e:	e0d0      	b.n	8002ff2 <HAL_RCC_ClockConfig+0x1b6>
 8002e50:	4b6a      	ldr	r3, [pc, #424]	@ (8002ffc <HAL_RCC_ClockConfig+0x1c0>)
 8002e52:	681b      	ldr	r3, [r3, #0]
 8002e54:	f003 0307 	and.w	r3, r3, #7
 8002e58:	683a      	ldr	r2, [r7, #0]
 8002e5a:	429a      	cmp	r2, r3
 8002e5c:	d910      	bls.n	8002e80 <HAL_RCC_ClockConfig+0x44>
 8002e5e:	4b67      	ldr	r3, [pc, #412]	@ (8002ffc <HAL_RCC_ClockConfig+0x1c0>)
 8002e60:	681b      	ldr	r3, [r3, #0]
 8002e62:	f023 0207 	bic.w	r2, r3, #7
 8002e66:	4965      	ldr	r1, [pc, #404]	@ (8002ffc <HAL_RCC_ClockConfig+0x1c0>)
 8002e68:	683b      	ldr	r3, [r7, #0]
 8002e6a:	4313      	orrs	r3, r2
 8002e6c:	600b      	str	r3, [r1, #0]
 8002e6e:	4b63      	ldr	r3, [pc, #396]	@ (8002ffc <HAL_RCC_ClockConfig+0x1c0>)
 8002e70:	681b      	ldr	r3, [r3, #0]
 8002e72:	f003 0307 	and.w	r3, r3, #7
 8002e76:	683a      	ldr	r2, [r7, #0]
 8002e78:	429a      	cmp	r2, r3
 8002e7a:	d001      	beq.n	8002e80 <HAL_RCC_ClockConfig+0x44>
 8002e7c:	2301      	movs	r3, #1
 8002e7e:	e0b8      	b.n	8002ff2 <HAL_RCC_ClockConfig+0x1b6>
 8002e80:	687b      	ldr	r3, [r7, #4]
 8002e82:	681b      	ldr	r3, [r3, #0]
 8002e84:	f003 0302 	and.w	r3, r3, #2
 8002e88:	2b00      	cmp	r3, #0
 8002e8a:	d020      	beq.n	8002ece <HAL_RCC_ClockConfig+0x92>
 8002e8c:	687b      	ldr	r3, [r7, #4]
 8002e8e:	681b      	ldr	r3, [r3, #0]
 8002e90:	f003 0304 	and.w	r3, r3, #4
 8002e94:	2b00      	cmp	r3, #0
 8002e96:	d005      	beq.n	8002ea4 <HAL_RCC_ClockConfig+0x68>
 8002e98:	4b59      	ldr	r3, [pc, #356]	@ (8003000 <HAL_RCC_ClockConfig+0x1c4>)
 8002e9a:	685b      	ldr	r3, [r3, #4]
 8002e9c:	4a58      	ldr	r2, [pc, #352]	@ (8003000 <HAL_RCC_ClockConfig+0x1c4>)
 8002e9e:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8002ea2:	6053      	str	r3, [r2, #4]
 8002ea4:	687b      	ldr	r3, [r7, #4]
 8002ea6:	681b      	ldr	r3, [r3, #0]
 8002ea8:	f003 0308 	and.w	r3, r3, #8
 8002eac:	2b00      	cmp	r3, #0
 8002eae:	d005      	beq.n	8002ebc <HAL_RCC_ClockConfig+0x80>
 8002eb0:	4b53      	ldr	r3, [pc, #332]	@ (8003000 <HAL_RCC_ClockConfig+0x1c4>)
 8002eb2:	685b      	ldr	r3, [r3, #4]
 8002eb4:	4a52      	ldr	r2, [pc, #328]	@ (8003000 <HAL_RCC_ClockConfig+0x1c4>)
 8002eb6:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 8002eba:	6053      	str	r3, [r2, #4]
 8002ebc:	4b50      	ldr	r3, [pc, #320]	@ (8003000 <HAL_RCC_ClockConfig+0x1c4>)
 8002ebe:	685b      	ldr	r3, [r3, #4]
 8002ec0:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8002ec4:	687b      	ldr	r3, [r7, #4]
 8002ec6:	689b      	ldr	r3, [r3, #8]
 8002ec8:	494d      	ldr	r1, [pc, #308]	@ (8003000 <HAL_RCC_ClockConfig+0x1c4>)
 8002eca:	4313      	orrs	r3, r2
 8002ecc:	604b      	str	r3, [r1, #4]
 8002ece:	687b      	ldr	r3, [r7, #4]
 8002ed0:	681b      	ldr	r3, [r3, #0]
 8002ed2:	f003 0301 	and.w	r3, r3, #1
 8002ed6:	2b00      	cmp	r3, #0
 8002ed8:	d040      	beq.n	8002f5c <HAL_RCC_ClockConfig+0x120>
 8002eda:	687b      	ldr	r3, [r7, #4]
 8002edc:	685b      	ldr	r3, [r3, #4]
 8002ede:	2b01      	cmp	r3, #1
 8002ee0:	d107      	bne.n	8002ef2 <HAL_RCC_ClockConfig+0xb6>
 8002ee2:	4b47      	ldr	r3, [pc, #284]	@ (8003000 <HAL_RCC_ClockConfig+0x1c4>)
 8002ee4:	681b      	ldr	r3, [r3, #0]
 8002ee6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002eea:	2b00      	cmp	r3, #0
 8002eec:	d115      	bne.n	8002f1a <HAL_RCC_ClockConfig+0xde>
 8002eee:	2301      	movs	r3, #1
 8002ef0:	e07f      	b.n	8002ff2 <HAL_RCC_ClockConfig+0x1b6>
 8002ef2:	687b      	ldr	r3, [r7, #4]
 8002ef4:	685b      	ldr	r3, [r3, #4]
 8002ef6:	2b02      	cmp	r3, #2
 8002ef8:	d107      	bne.n	8002f0a <HAL_RCC_ClockConfig+0xce>
 8002efa:	4b41      	ldr	r3, [pc, #260]	@ (8003000 <HAL_RCC_ClockConfig+0x1c4>)
 8002efc:	681b      	ldr	r3, [r3, #0]
 8002efe:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002f02:	2b00      	cmp	r3, #0
 8002f04:	d109      	bne.n	8002f1a <HAL_RCC_ClockConfig+0xde>
 8002f06:	2301      	movs	r3, #1
 8002f08:	e073      	b.n	8002ff2 <HAL_RCC_ClockConfig+0x1b6>
 8002f0a:	4b3d      	ldr	r3, [pc, #244]	@ (8003000 <HAL_RCC_ClockConfig+0x1c4>)
 8002f0c:	681b      	ldr	r3, [r3, #0]
 8002f0e:	f003 0302 	and.w	r3, r3, #2
 8002f12:	2b00      	cmp	r3, #0
 8002f14:	d101      	bne.n	8002f1a <HAL_RCC_ClockConfig+0xde>
 8002f16:	2301      	movs	r3, #1
 8002f18:	e06b      	b.n	8002ff2 <HAL_RCC_ClockConfig+0x1b6>
 8002f1a:	4b39      	ldr	r3, [pc, #228]	@ (8003000 <HAL_RCC_ClockConfig+0x1c4>)
 8002f1c:	685b      	ldr	r3, [r3, #4]
 8002f1e:	f023 0203 	bic.w	r2, r3, #3
 8002f22:	687b      	ldr	r3, [r7, #4]
 8002f24:	685b      	ldr	r3, [r3, #4]
 8002f26:	4936      	ldr	r1, [pc, #216]	@ (8003000 <HAL_RCC_ClockConfig+0x1c4>)
 8002f28:	4313      	orrs	r3, r2
 8002f2a:	604b      	str	r3, [r1, #4]
 8002f2c:	f7fe fe30 	bl	8001b90 <HAL_GetTick>
 8002f30:	60f8      	str	r0, [r7, #12]
 8002f32:	e00a      	b.n	8002f4a <HAL_RCC_ClockConfig+0x10e>
 8002f34:	f7fe fe2c 	bl	8001b90 <HAL_GetTick>
 8002f38:	4602      	mov	r2, r0
 8002f3a:	68fb      	ldr	r3, [r7, #12]
 8002f3c:	1ad3      	subs	r3, r2, r3
 8002f3e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002f42:	4293      	cmp	r3, r2
 8002f44:	d901      	bls.n	8002f4a <HAL_RCC_ClockConfig+0x10e>
 8002f46:	2303      	movs	r3, #3
 8002f48:	e053      	b.n	8002ff2 <HAL_RCC_ClockConfig+0x1b6>
 8002f4a:	4b2d      	ldr	r3, [pc, #180]	@ (8003000 <HAL_RCC_ClockConfig+0x1c4>)
 8002f4c:	685b      	ldr	r3, [r3, #4]
 8002f4e:	f003 020c 	and.w	r2, r3, #12
 8002f52:	687b      	ldr	r3, [r7, #4]
 8002f54:	685b      	ldr	r3, [r3, #4]
 8002f56:	009b      	lsls	r3, r3, #2
 8002f58:	429a      	cmp	r2, r3
 8002f5a:	d1eb      	bne.n	8002f34 <HAL_RCC_ClockConfig+0xf8>
 8002f5c:	4b27      	ldr	r3, [pc, #156]	@ (8002ffc <HAL_RCC_ClockConfig+0x1c0>)
 8002f5e:	681b      	ldr	r3, [r3, #0]
 8002f60:	f003 0307 	and.w	r3, r3, #7
 8002f64:	683a      	ldr	r2, [r7, #0]
 8002f66:	429a      	cmp	r2, r3
 8002f68:	d210      	bcs.n	8002f8c <HAL_RCC_ClockConfig+0x150>
 8002f6a:	4b24      	ldr	r3, [pc, #144]	@ (8002ffc <HAL_RCC_ClockConfig+0x1c0>)
 8002f6c:	681b      	ldr	r3, [r3, #0]
 8002f6e:	f023 0207 	bic.w	r2, r3, #7
 8002f72:	4922      	ldr	r1, [pc, #136]	@ (8002ffc <HAL_RCC_ClockConfig+0x1c0>)
 8002f74:	683b      	ldr	r3, [r7, #0]
 8002f76:	4313      	orrs	r3, r2
 8002f78:	600b      	str	r3, [r1, #0]
 8002f7a:	4b20      	ldr	r3, [pc, #128]	@ (8002ffc <HAL_RCC_ClockConfig+0x1c0>)
 8002f7c:	681b      	ldr	r3, [r3, #0]
 8002f7e:	f003 0307 	and.w	r3, r3, #7
 8002f82:	683a      	ldr	r2, [r7, #0]
 8002f84:	429a      	cmp	r2, r3
 8002f86:	d001      	beq.n	8002f8c <HAL_RCC_ClockConfig+0x150>
 8002f88:	2301      	movs	r3, #1
 8002f8a:	e032      	b.n	8002ff2 <HAL_RCC_ClockConfig+0x1b6>
 8002f8c:	687b      	ldr	r3, [r7, #4]
 8002f8e:	681b      	ldr	r3, [r3, #0]
 8002f90:	f003 0304 	and.w	r3, r3, #4
 8002f94:	2b00      	cmp	r3, #0
 8002f96:	d008      	beq.n	8002faa <HAL_RCC_ClockConfig+0x16e>
 8002f98:	4b19      	ldr	r3, [pc, #100]	@ (8003000 <HAL_RCC_ClockConfig+0x1c4>)
 8002f9a:	685b      	ldr	r3, [r3, #4]
 8002f9c:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8002fa0:	687b      	ldr	r3, [r7, #4]
 8002fa2:	68db      	ldr	r3, [r3, #12]
 8002fa4:	4916      	ldr	r1, [pc, #88]	@ (8003000 <HAL_RCC_ClockConfig+0x1c4>)
 8002fa6:	4313      	orrs	r3, r2
 8002fa8:	604b      	str	r3, [r1, #4]
 8002faa:	687b      	ldr	r3, [r7, #4]
 8002fac:	681b      	ldr	r3, [r3, #0]
 8002fae:	f003 0308 	and.w	r3, r3, #8
 8002fb2:	2b00      	cmp	r3, #0
 8002fb4:	d009      	beq.n	8002fca <HAL_RCC_ClockConfig+0x18e>
 8002fb6:	4b12      	ldr	r3, [pc, #72]	@ (8003000 <HAL_RCC_ClockConfig+0x1c4>)
 8002fb8:	685b      	ldr	r3, [r3, #4]
 8002fba:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8002fbe:	687b      	ldr	r3, [r7, #4]
 8002fc0:	691b      	ldr	r3, [r3, #16]
 8002fc2:	00db      	lsls	r3, r3, #3
 8002fc4:	490e      	ldr	r1, [pc, #56]	@ (8003000 <HAL_RCC_ClockConfig+0x1c4>)
 8002fc6:	4313      	orrs	r3, r2
 8002fc8:	604b      	str	r3, [r1, #4]
 8002fca:	f000 f821 	bl	8003010 <HAL_RCC_GetSysClockFreq>
 8002fce:	4602      	mov	r2, r0
 8002fd0:	4b0b      	ldr	r3, [pc, #44]	@ (8003000 <HAL_RCC_ClockConfig+0x1c4>)
 8002fd2:	685b      	ldr	r3, [r3, #4]
 8002fd4:	091b      	lsrs	r3, r3, #4
 8002fd6:	f003 030f 	and.w	r3, r3, #15
 8002fda:	490a      	ldr	r1, [pc, #40]	@ (8003004 <HAL_RCC_ClockConfig+0x1c8>)
 8002fdc:	5ccb      	ldrb	r3, [r1, r3]
 8002fde:	fa22 f303 	lsr.w	r3, r2, r3
 8002fe2:	4a09      	ldr	r2, [pc, #36]	@ (8003008 <HAL_RCC_ClockConfig+0x1cc>)
 8002fe4:	6013      	str	r3, [r2, #0]
 8002fe6:	4b09      	ldr	r3, [pc, #36]	@ (800300c <HAL_RCC_ClockConfig+0x1d0>)
 8002fe8:	681b      	ldr	r3, [r3, #0]
 8002fea:	4618      	mov	r0, r3
 8002fec:	f7fe fd8e 	bl	8001b0c <HAL_InitTick>
 8002ff0:	2300      	movs	r3, #0
 8002ff2:	4618      	mov	r0, r3
 8002ff4:	3710      	adds	r7, #16
 8002ff6:	46bd      	mov	sp, r7
 8002ff8:	bd80      	pop	{r7, pc}
 8002ffa:	bf00      	nop
 8002ffc:	40022000 	.word	0x40022000
 8003000:	40021000 	.word	0x40021000
 8003004:	08007ea4 	.word	0x08007ea4
 8003008:	20000000 	.word	0x20000000
 800300c:	20000004 	.word	0x20000004

08003010 <HAL_RCC_GetSysClockFreq>:
 8003010:	b480      	push	{r7}
 8003012:	b087      	sub	sp, #28
 8003014:	af00      	add	r7, sp, #0
 8003016:	2300      	movs	r3, #0
 8003018:	60fb      	str	r3, [r7, #12]
 800301a:	2300      	movs	r3, #0
 800301c:	60bb      	str	r3, [r7, #8]
 800301e:	2300      	movs	r3, #0
 8003020:	617b      	str	r3, [r7, #20]
 8003022:	2300      	movs	r3, #0
 8003024:	607b      	str	r3, [r7, #4]
 8003026:	2300      	movs	r3, #0
 8003028:	613b      	str	r3, [r7, #16]
 800302a:	4b1e      	ldr	r3, [pc, #120]	@ (80030a4 <HAL_RCC_GetSysClockFreq+0x94>)
 800302c:	685b      	ldr	r3, [r3, #4]
 800302e:	60fb      	str	r3, [r7, #12]
 8003030:	68fb      	ldr	r3, [r7, #12]
 8003032:	f003 030c 	and.w	r3, r3, #12
 8003036:	2b04      	cmp	r3, #4
 8003038:	d002      	beq.n	8003040 <HAL_RCC_GetSysClockFreq+0x30>
 800303a:	2b08      	cmp	r3, #8
 800303c:	d003      	beq.n	8003046 <HAL_RCC_GetSysClockFreq+0x36>
 800303e:	e027      	b.n	8003090 <HAL_RCC_GetSysClockFreq+0x80>
 8003040:	4b19      	ldr	r3, [pc, #100]	@ (80030a8 <HAL_RCC_GetSysClockFreq+0x98>)
 8003042:	613b      	str	r3, [r7, #16]
 8003044:	e027      	b.n	8003096 <HAL_RCC_GetSysClockFreq+0x86>
 8003046:	68fb      	ldr	r3, [r7, #12]
 8003048:	0c9b      	lsrs	r3, r3, #18
 800304a:	f003 030f 	and.w	r3, r3, #15
 800304e:	4a17      	ldr	r2, [pc, #92]	@ (80030ac <HAL_RCC_GetSysClockFreq+0x9c>)
 8003050:	5cd3      	ldrb	r3, [r2, r3]
 8003052:	607b      	str	r3, [r7, #4]
 8003054:	68fb      	ldr	r3, [r7, #12]
 8003056:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800305a:	2b00      	cmp	r3, #0
 800305c:	d010      	beq.n	8003080 <HAL_RCC_GetSysClockFreq+0x70>
 800305e:	4b11      	ldr	r3, [pc, #68]	@ (80030a4 <HAL_RCC_GetSysClockFreq+0x94>)
 8003060:	685b      	ldr	r3, [r3, #4]
 8003062:	0c5b      	lsrs	r3, r3, #17
 8003064:	f003 0301 	and.w	r3, r3, #1
 8003068:	4a11      	ldr	r2, [pc, #68]	@ (80030b0 <HAL_RCC_GetSysClockFreq+0xa0>)
 800306a:	5cd3      	ldrb	r3, [r2, r3]
 800306c:	60bb      	str	r3, [r7, #8]
 800306e:	687b      	ldr	r3, [r7, #4]
 8003070:	4a0d      	ldr	r2, [pc, #52]	@ (80030a8 <HAL_RCC_GetSysClockFreq+0x98>)
 8003072:	fb03 f202 	mul.w	r2, r3, r2
 8003076:	68bb      	ldr	r3, [r7, #8]
 8003078:	fbb2 f3f3 	udiv	r3, r2, r3
 800307c:	617b      	str	r3, [r7, #20]
 800307e:	e004      	b.n	800308a <HAL_RCC_GetSysClockFreq+0x7a>
 8003080:	687b      	ldr	r3, [r7, #4]
 8003082:	4a0c      	ldr	r2, [pc, #48]	@ (80030b4 <HAL_RCC_GetSysClockFreq+0xa4>)
 8003084:	fb02 f303 	mul.w	r3, r2, r3
 8003088:	617b      	str	r3, [r7, #20]
 800308a:	697b      	ldr	r3, [r7, #20]
 800308c:	613b      	str	r3, [r7, #16]
 800308e:	e002      	b.n	8003096 <HAL_RCC_GetSysClockFreq+0x86>
 8003090:	4b09      	ldr	r3, [pc, #36]	@ (80030b8 <HAL_RCC_GetSysClockFreq+0xa8>)
 8003092:	613b      	str	r3, [r7, #16]
 8003094:	bf00      	nop
 8003096:	693b      	ldr	r3, [r7, #16]
 8003098:	4618      	mov	r0, r3
 800309a:	371c      	adds	r7, #28
 800309c:	46bd      	mov	sp, r7
 800309e:	bc80      	pop	{r7}
 80030a0:	4770      	bx	lr
 80030a2:	bf00      	nop
 80030a4:	40021000 	.word	0x40021000
 80030a8:	00f42400 	.word	0x00f42400
 80030ac:	08007eb4 	.word	0x08007eb4
 80030b0:	08007ec4 	.word	0x08007ec4
 80030b4:	003d0900 	.word	0x003d0900
 80030b8:	007a1200 	.word	0x007a1200

080030bc <HAL_RCC_GetHCLKFreq>:
 80030bc:	b480      	push	{r7}
 80030be:	af00      	add	r7, sp, #0
 80030c0:	4b02      	ldr	r3, [pc, #8]	@ (80030cc <HAL_RCC_GetHCLKFreq+0x10>)
 80030c2:	681b      	ldr	r3, [r3, #0]
 80030c4:	4618      	mov	r0, r3
 80030c6:	46bd      	mov	sp, r7
 80030c8:	bc80      	pop	{r7}
 80030ca:	4770      	bx	lr
 80030cc:	20000000 	.word	0x20000000

080030d0 <HAL_RCC_GetPCLK1Freq>:
 80030d0:	b580      	push	{r7, lr}
 80030d2:	af00      	add	r7, sp, #0
 80030d4:	f7ff fff2 	bl	80030bc <HAL_RCC_GetHCLKFreq>
 80030d8:	4602      	mov	r2, r0
 80030da:	4b05      	ldr	r3, [pc, #20]	@ (80030f0 <HAL_RCC_GetPCLK1Freq+0x20>)
 80030dc:	685b      	ldr	r3, [r3, #4]
 80030de:	0a1b      	lsrs	r3, r3, #8
 80030e0:	f003 0307 	and.w	r3, r3, #7
 80030e4:	4903      	ldr	r1, [pc, #12]	@ (80030f4 <HAL_RCC_GetPCLK1Freq+0x24>)
 80030e6:	5ccb      	ldrb	r3, [r1, r3]
 80030e8:	fa22 f303 	lsr.w	r3, r2, r3
 80030ec:	4618      	mov	r0, r3
 80030ee:	bd80      	pop	{r7, pc}
 80030f0:	40021000 	.word	0x40021000
 80030f4:	08007e9c 	.word	0x08007e9c

080030f8 <HAL_RCC_GetPCLK2Freq>:
 80030f8:	b580      	push	{r7, lr}
 80030fa:	af00      	add	r7, sp, #0
 80030fc:	f7ff ffde 	bl	80030bc <HAL_RCC_GetHCLKFreq>
 8003100:	4602      	mov	r2, r0
 8003102:	4b05      	ldr	r3, [pc, #20]	@ (8003118 <HAL_RCC_GetPCLK2Freq+0x20>)
 8003104:	685b      	ldr	r3, [r3, #4]
 8003106:	0adb      	lsrs	r3, r3, #11
 8003108:	f003 0307 	and.w	r3, r3, #7
 800310c:	4903      	ldr	r1, [pc, #12]	@ (800311c <HAL_RCC_GetPCLK2Freq+0x24>)
 800310e:	5ccb      	ldrb	r3, [r1, r3]
 8003110:	fa22 f303 	lsr.w	r3, r2, r3
 8003114:	4618      	mov	r0, r3
 8003116:	bd80      	pop	{r7, pc}
 8003118:	40021000 	.word	0x40021000
 800311c:	08007e9c 	.word	0x08007e9c

08003120 <RCC_Delay>:
 8003120:	b480      	push	{r7}
 8003122:	b085      	sub	sp, #20
 8003124:	af00      	add	r7, sp, #0
 8003126:	6078      	str	r0, [r7, #4]
 8003128:	4b0a      	ldr	r3, [pc, #40]	@ (8003154 <RCC_Delay+0x34>)
 800312a:	681b      	ldr	r3, [r3, #0]
 800312c:	4a0a      	ldr	r2, [pc, #40]	@ (8003158 <RCC_Delay+0x38>)
 800312e:	fba2 2303 	umull	r2, r3, r2, r3
 8003132:	0a5b      	lsrs	r3, r3, #9
 8003134:	687a      	ldr	r2, [r7, #4]
 8003136:	fb02 f303 	mul.w	r3, r2, r3
 800313a:	60fb      	str	r3, [r7, #12]
 800313c:	bf00      	nop
 800313e:	68fb      	ldr	r3, [r7, #12]
 8003140:	1e5a      	subs	r2, r3, #1
 8003142:	60fa      	str	r2, [r7, #12]
 8003144:	2b00      	cmp	r3, #0
 8003146:	d1f9      	bne.n	800313c <RCC_Delay+0x1c>
 8003148:	bf00      	nop
 800314a:	bf00      	nop
 800314c:	3714      	adds	r7, #20
 800314e:	46bd      	mov	sp, r7
 8003150:	bc80      	pop	{r7}
 8003152:	4770      	bx	lr
 8003154:	20000000 	.word	0x20000000
 8003158:	10624dd3 	.word	0x10624dd3

0800315c <HAL_RCCEx_PeriphCLKConfig>:
 800315c:	b580      	push	{r7, lr}
 800315e:	b086      	sub	sp, #24
 8003160:	af00      	add	r7, sp, #0
 8003162:	6078      	str	r0, [r7, #4]
 8003164:	2300      	movs	r3, #0
 8003166:	613b      	str	r3, [r7, #16]
 8003168:	2300      	movs	r3, #0
 800316a:	60fb      	str	r3, [r7, #12]
 800316c:	687b      	ldr	r3, [r7, #4]
 800316e:	681b      	ldr	r3, [r3, #0]
 8003170:	f003 0301 	and.w	r3, r3, #1
 8003174:	2b00      	cmp	r3, #0
 8003176:	d07d      	beq.n	8003274 <HAL_RCCEx_PeriphCLKConfig+0x118>
 8003178:	2300      	movs	r3, #0
 800317a:	75fb      	strb	r3, [r7, #23]
 800317c:	4b4f      	ldr	r3, [pc, #316]	@ (80032bc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800317e:	69db      	ldr	r3, [r3, #28]
 8003180:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003184:	2b00      	cmp	r3, #0
 8003186:	d10d      	bne.n	80031a4 <HAL_RCCEx_PeriphCLKConfig+0x48>
 8003188:	4b4c      	ldr	r3, [pc, #304]	@ (80032bc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800318a:	69db      	ldr	r3, [r3, #28]
 800318c:	4a4b      	ldr	r2, [pc, #300]	@ (80032bc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800318e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003192:	61d3      	str	r3, [r2, #28]
 8003194:	4b49      	ldr	r3, [pc, #292]	@ (80032bc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003196:	69db      	ldr	r3, [r3, #28]
 8003198:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800319c:	60bb      	str	r3, [r7, #8]
 800319e:	68bb      	ldr	r3, [r7, #8]
 80031a0:	2301      	movs	r3, #1
 80031a2:	75fb      	strb	r3, [r7, #23]
 80031a4:	4b46      	ldr	r3, [pc, #280]	@ (80032c0 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 80031a6:	681b      	ldr	r3, [r3, #0]
 80031a8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80031ac:	2b00      	cmp	r3, #0
 80031ae:	d118      	bne.n	80031e2 <HAL_RCCEx_PeriphCLKConfig+0x86>
 80031b0:	4b43      	ldr	r3, [pc, #268]	@ (80032c0 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 80031b2:	681b      	ldr	r3, [r3, #0]
 80031b4:	4a42      	ldr	r2, [pc, #264]	@ (80032c0 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 80031b6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80031ba:	6013      	str	r3, [r2, #0]
 80031bc:	f7fe fce8 	bl	8001b90 <HAL_GetTick>
 80031c0:	6138      	str	r0, [r7, #16]
 80031c2:	e008      	b.n	80031d6 <HAL_RCCEx_PeriphCLKConfig+0x7a>
 80031c4:	f7fe fce4 	bl	8001b90 <HAL_GetTick>
 80031c8:	4602      	mov	r2, r0
 80031ca:	693b      	ldr	r3, [r7, #16]
 80031cc:	1ad3      	subs	r3, r2, r3
 80031ce:	2b64      	cmp	r3, #100	@ 0x64
 80031d0:	d901      	bls.n	80031d6 <HAL_RCCEx_PeriphCLKConfig+0x7a>
 80031d2:	2303      	movs	r3, #3
 80031d4:	e06d      	b.n	80032b2 <HAL_RCCEx_PeriphCLKConfig+0x156>
 80031d6:	4b3a      	ldr	r3, [pc, #232]	@ (80032c0 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 80031d8:	681b      	ldr	r3, [r3, #0]
 80031da:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80031de:	2b00      	cmp	r3, #0
 80031e0:	d0f0      	beq.n	80031c4 <HAL_RCCEx_PeriphCLKConfig+0x68>
 80031e2:	4b36      	ldr	r3, [pc, #216]	@ (80032bc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80031e4:	6a1b      	ldr	r3, [r3, #32]
 80031e6:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80031ea:	60fb      	str	r3, [r7, #12]
 80031ec:	68fb      	ldr	r3, [r7, #12]
 80031ee:	2b00      	cmp	r3, #0
 80031f0:	d02e      	beq.n	8003250 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 80031f2:	687b      	ldr	r3, [r7, #4]
 80031f4:	685b      	ldr	r3, [r3, #4]
 80031f6:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80031fa:	68fa      	ldr	r2, [r7, #12]
 80031fc:	429a      	cmp	r2, r3
 80031fe:	d027      	beq.n	8003250 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8003200:	4b2e      	ldr	r3, [pc, #184]	@ (80032bc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003202:	6a1b      	ldr	r3, [r3, #32]
 8003204:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8003208:	60fb      	str	r3, [r7, #12]
 800320a:	4b2e      	ldr	r3, [pc, #184]	@ (80032c4 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 800320c:	2201      	movs	r2, #1
 800320e:	601a      	str	r2, [r3, #0]
 8003210:	4b2c      	ldr	r3, [pc, #176]	@ (80032c4 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 8003212:	2200      	movs	r2, #0
 8003214:	601a      	str	r2, [r3, #0]
 8003216:	4a29      	ldr	r2, [pc, #164]	@ (80032bc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003218:	68fb      	ldr	r3, [r7, #12]
 800321a:	6213      	str	r3, [r2, #32]
 800321c:	68fb      	ldr	r3, [r7, #12]
 800321e:	f003 0301 	and.w	r3, r3, #1
 8003222:	2b00      	cmp	r3, #0
 8003224:	d014      	beq.n	8003250 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8003226:	f7fe fcb3 	bl	8001b90 <HAL_GetTick>
 800322a:	6138      	str	r0, [r7, #16]
 800322c:	e00a      	b.n	8003244 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 800322e:	f7fe fcaf 	bl	8001b90 <HAL_GetTick>
 8003232:	4602      	mov	r2, r0
 8003234:	693b      	ldr	r3, [r7, #16]
 8003236:	1ad3      	subs	r3, r2, r3
 8003238:	f241 3288 	movw	r2, #5000	@ 0x1388
 800323c:	4293      	cmp	r3, r2
 800323e:	d901      	bls.n	8003244 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 8003240:	2303      	movs	r3, #3
 8003242:	e036      	b.n	80032b2 <HAL_RCCEx_PeriphCLKConfig+0x156>
 8003244:	4b1d      	ldr	r3, [pc, #116]	@ (80032bc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003246:	6a1b      	ldr	r3, [r3, #32]
 8003248:	f003 0302 	and.w	r3, r3, #2
 800324c:	2b00      	cmp	r3, #0
 800324e:	d0ee      	beq.n	800322e <HAL_RCCEx_PeriphCLKConfig+0xd2>
 8003250:	4b1a      	ldr	r3, [pc, #104]	@ (80032bc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003252:	6a1b      	ldr	r3, [r3, #32]
 8003254:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8003258:	687b      	ldr	r3, [r7, #4]
 800325a:	685b      	ldr	r3, [r3, #4]
 800325c:	4917      	ldr	r1, [pc, #92]	@ (80032bc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800325e:	4313      	orrs	r3, r2
 8003260:	620b      	str	r3, [r1, #32]
 8003262:	7dfb      	ldrb	r3, [r7, #23]
 8003264:	2b01      	cmp	r3, #1
 8003266:	d105      	bne.n	8003274 <HAL_RCCEx_PeriphCLKConfig+0x118>
 8003268:	4b14      	ldr	r3, [pc, #80]	@ (80032bc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800326a:	69db      	ldr	r3, [r3, #28]
 800326c:	4a13      	ldr	r2, [pc, #76]	@ (80032bc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800326e:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8003272:	61d3      	str	r3, [r2, #28]
 8003274:	687b      	ldr	r3, [r7, #4]
 8003276:	681b      	ldr	r3, [r3, #0]
 8003278:	f003 0302 	and.w	r3, r3, #2
 800327c:	2b00      	cmp	r3, #0
 800327e:	d008      	beq.n	8003292 <HAL_RCCEx_PeriphCLKConfig+0x136>
 8003280:	4b0e      	ldr	r3, [pc, #56]	@ (80032bc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003282:	685b      	ldr	r3, [r3, #4]
 8003284:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 8003288:	687b      	ldr	r3, [r7, #4]
 800328a:	689b      	ldr	r3, [r3, #8]
 800328c:	490b      	ldr	r1, [pc, #44]	@ (80032bc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800328e:	4313      	orrs	r3, r2
 8003290:	604b      	str	r3, [r1, #4]
 8003292:	687b      	ldr	r3, [r7, #4]
 8003294:	681b      	ldr	r3, [r3, #0]
 8003296:	f003 0310 	and.w	r3, r3, #16
 800329a:	2b00      	cmp	r3, #0
 800329c:	d008      	beq.n	80032b0 <HAL_RCCEx_PeriphCLKConfig+0x154>
 800329e:	4b07      	ldr	r3, [pc, #28]	@ (80032bc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80032a0:	685b      	ldr	r3, [r3, #4]
 80032a2:	f423 0280 	bic.w	r2, r3, #4194304	@ 0x400000
 80032a6:	687b      	ldr	r3, [r7, #4]
 80032a8:	68db      	ldr	r3, [r3, #12]
 80032aa:	4904      	ldr	r1, [pc, #16]	@ (80032bc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80032ac:	4313      	orrs	r3, r2
 80032ae:	604b      	str	r3, [r1, #4]
 80032b0:	2300      	movs	r3, #0
 80032b2:	4618      	mov	r0, r3
 80032b4:	3718      	adds	r7, #24
 80032b6:	46bd      	mov	sp, r7
 80032b8:	bd80      	pop	{r7, pc}
 80032ba:	bf00      	nop
 80032bc:	40021000 	.word	0x40021000
 80032c0:	40007000 	.word	0x40007000
 80032c4:	42420440 	.word	0x42420440

080032c8 <HAL_RCCEx_GetPeriphCLKFreq>:
 80032c8:	b580      	push	{r7, lr}
 80032ca:	b088      	sub	sp, #32
 80032cc:	af00      	add	r7, sp, #0
 80032ce:	6078      	str	r0, [r7, #4]
 80032d0:	2300      	movs	r3, #0
 80032d2:	617b      	str	r3, [r7, #20]
 80032d4:	2300      	movs	r3, #0
 80032d6:	61fb      	str	r3, [r7, #28]
 80032d8:	2300      	movs	r3, #0
 80032da:	613b      	str	r3, [r7, #16]
 80032dc:	2300      	movs	r3, #0
 80032de:	60fb      	str	r3, [r7, #12]
 80032e0:	2300      	movs	r3, #0
 80032e2:	61bb      	str	r3, [r7, #24]
 80032e4:	687b      	ldr	r3, [r7, #4]
 80032e6:	2b10      	cmp	r3, #16
 80032e8:	d00a      	beq.n	8003300 <HAL_RCCEx_GetPeriphCLKFreq+0x38>
 80032ea:	687b      	ldr	r3, [r7, #4]
 80032ec:	2b10      	cmp	r3, #16
 80032ee:	f200 8089 	bhi.w	8003404 <HAL_RCCEx_GetPeriphCLKFreq+0x13c>
 80032f2:	687b      	ldr	r3, [r7, #4]
 80032f4:	2b01      	cmp	r3, #1
 80032f6:	d045      	beq.n	8003384 <HAL_RCCEx_GetPeriphCLKFreq+0xbc>
 80032f8:	687b      	ldr	r3, [r7, #4]
 80032fa:	2b02      	cmp	r3, #2
 80032fc:	d074      	beq.n	80033e8 <HAL_RCCEx_GetPeriphCLKFreq+0x120>
 80032fe:	e081      	b.n	8003404 <HAL_RCCEx_GetPeriphCLKFreq+0x13c>
 8003300:	4b45      	ldr	r3, [pc, #276]	@ (8003418 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 8003302:	685b      	ldr	r3, [r3, #4]
 8003304:	60fb      	str	r3, [r7, #12]
 8003306:	4b44      	ldr	r3, [pc, #272]	@ (8003418 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 8003308:	681b      	ldr	r3, [r3, #0]
 800330a:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800330e:	2b00      	cmp	r3, #0
 8003310:	d07a      	beq.n	8003408 <HAL_RCCEx_GetPeriphCLKFreq+0x140>
 8003312:	68fb      	ldr	r3, [r7, #12]
 8003314:	0c9b      	lsrs	r3, r3, #18
 8003316:	f003 030f 	and.w	r3, r3, #15
 800331a:	4a40      	ldr	r2, [pc, #256]	@ (800341c <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 800331c:	5cd3      	ldrb	r3, [r2, r3]
 800331e:	613b      	str	r3, [r7, #16]
 8003320:	68fb      	ldr	r3, [r7, #12]
 8003322:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003326:	2b00      	cmp	r3, #0
 8003328:	d015      	beq.n	8003356 <HAL_RCCEx_GetPeriphCLKFreq+0x8e>
 800332a:	4b3b      	ldr	r3, [pc, #236]	@ (8003418 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 800332c:	685b      	ldr	r3, [r3, #4]
 800332e:	0c5b      	lsrs	r3, r3, #17
 8003330:	f003 0301 	and.w	r3, r3, #1
 8003334:	4a3a      	ldr	r2, [pc, #232]	@ (8003420 <HAL_RCCEx_GetPeriphCLKFreq+0x158>)
 8003336:	5cd3      	ldrb	r3, [r2, r3]
 8003338:	617b      	str	r3, [r7, #20]
 800333a:	68fb      	ldr	r3, [r7, #12]
 800333c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003340:	2b00      	cmp	r3, #0
 8003342:	d00d      	beq.n	8003360 <HAL_RCCEx_GetPeriphCLKFreq+0x98>
 8003344:	4a37      	ldr	r2, [pc, #220]	@ (8003424 <HAL_RCCEx_GetPeriphCLKFreq+0x15c>)
 8003346:	697b      	ldr	r3, [r7, #20]
 8003348:	fbb2 f2f3 	udiv	r2, r2, r3
 800334c:	693b      	ldr	r3, [r7, #16]
 800334e:	fb02 f303 	mul.w	r3, r2, r3
 8003352:	61fb      	str	r3, [r7, #28]
 8003354:	e004      	b.n	8003360 <HAL_RCCEx_GetPeriphCLKFreq+0x98>
 8003356:	693b      	ldr	r3, [r7, #16]
 8003358:	4a33      	ldr	r2, [pc, #204]	@ (8003428 <HAL_RCCEx_GetPeriphCLKFreq+0x160>)
 800335a:	fb02 f303 	mul.w	r3, r2, r3
 800335e:	61fb      	str	r3, [r7, #28]
 8003360:	4b2d      	ldr	r3, [pc, #180]	@ (8003418 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 8003362:	685b      	ldr	r3, [r3, #4]
 8003364:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003368:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800336c:	d102      	bne.n	8003374 <HAL_RCCEx_GetPeriphCLKFreq+0xac>
 800336e:	69fb      	ldr	r3, [r7, #28]
 8003370:	61bb      	str	r3, [r7, #24]
 8003372:	e049      	b.n	8003408 <HAL_RCCEx_GetPeriphCLKFreq+0x140>
 8003374:	69fb      	ldr	r3, [r7, #28]
 8003376:	005b      	lsls	r3, r3, #1
 8003378:	4a2c      	ldr	r2, [pc, #176]	@ (800342c <HAL_RCCEx_GetPeriphCLKFreq+0x164>)
 800337a:	fba2 2303 	umull	r2, r3, r2, r3
 800337e:	085b      	lsrs	r3, r3, #1
 8003380:	61bb      	str	r3, [r7, #24]
 8003382:	e041      	b.n	8003408 <HAL_RCCEx_GetPeriphCLKFreq+0x140>
 8003384:	4b24      	ldr	r3, [pc, #144]	@ (8003418 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 8003386:	6a1b      	ldr	r3, [r3, #32]
 8003388:	60fb      	str	r3, [r7, #12]
 800338a:	68fb      	ldr	r3, [r7, #12]
 800338c:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003390:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8003394:	d108      	bne.n	80033a8 <HAL_RCCEx_GetPeriphCLKFreq+0xe0>
 8003396:	68fb      	ldr	r3, [r7, #12]
 8003398:	f003 0302 	and.w	r3, r3, #2
 800339c:	2b00      	cmp	r3, #0
 800339e:	d003      	beq.n	80033a8 <HAL_RCCEx_GetPeriphCLKFreq+0xe0>
 80033a0:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80033a4:	61bb      	str	r3, [r7, #24]
 80033a6:	e01e      	b.n	80033e6 <HAL_RCCEx_GetPeriphCLKFreq+0x11e>
 80033a8:	68fb      	ldr	r3, [r7, #12]
 80033aa:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80033ae:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80033b2:	d109      	bne.n	80033c8 <HAL_RCCEx_GetPeriphCLKFreq+0x100>
 80033b4:	4b18      	ldr	r3, [pc, #96]	@ (8003418 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 80033b6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80033b8:	f003 0302 	and.w	r3, r3, #2
 80033bc:	2b00      	cmp	r3, #0
 80033be:	d003      	beq.n	80033c8 <HAL_RCCEx_GetPeriphCLKFreq+0x100>
 80033c0:	f649 4340 	movw	r3, #40000	@ 0x9c40
 80033c4:	61bb      	str	r3, [r7, #24]
 80033c6:	e00e      	b.n	80033e6 <HAL_RCCEx_GetPeriphCLKFreq+0x11e>
 80033c8:	68fb      	ldr	r3, [r7, #12]
 80033ca:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80033ce:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80033d2:	d11b      	bne.n	800340c <HAL_RCCEx_GetPeriphCLKFreq+0x144>
 80033d4:	4b10      	ldr	r3, [pc, #64]	@ (8003418 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 80033d6:	681b      	ldr	r3, [r3, #0]
 80033d8:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80033dc:	2b00      	cmp	r3, #0
 80033de:	d015      	beq.n	800340c <HAL_RCCEx_GetPeriphCLKFreq+0x144>
 80033e0:	4b13      	ldr	r3, [pc, #76]	@ (8003430 <HAL_RCCEx_GetPeriphCLKFreq+0x168>)
 80033e2:	61bb      	str	r3, [r7, #24]
 80033e4:	e012      	b.n	800340c <HAL_RCCEx_GetPeriphCLKFreq+0x144>
 80033e6:	e011      	b.n	800340c <HAL_RCCEx_GetPeriphCLKFreq+0x144>
 80033e8:	f7ff fe86 	bl	80030f8 <HAL_RCC_GetPCLK2Freq>
 80033ec:	4602      	mov	r2, r0
 80033ee:	4b0a      	ldr	r3, [pc, #40]	@ (8003418 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 80033f0:	685b      	ldr	r3, [r3, #4]
 80033f2:	0b9b      	lsrs	r3, r3, #14
 80033f4:	f003 0303 	and.w	r3, r3, #3
 80033f8:	3301      	adds	r3, #1
 80033fa:	005b      	lsls	r3, r3, #1
 80033fc:	fbb2 f3f3 	udiv	r3, r2, r3
 8003400:	61bb      	str	r3, [r7, #24]
 8003402:	e004      	b.n	800340e <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 8003404:	bf00      	nop
 8003406:	e002      	b.n	800340e <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 8003408:	bf00      	nop
 800340a:	e000      	b.n	800340e <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 800340c:	bf00      	nop
 800340e:	69bb      	ldr	r3, [r7, #24]
 8003410:	4618      	mov	r0, r3
 8003412:	3720      	adds	r7, #32
 8003414:	46bd      	mov	sp, r7
 8003416:	bd80      	pop	{r7, pc}
 8003418:	40021000 	.word	0x40021000
 800341c:	08007ec8 	.word	0x08007ec8
 8003420:	08007ed8 	.word	0x08007ed8
 8003424:	00f42400 	.word	0x00f42400
 8003428:	003d0900 	.word	0x003d0900
 800342c:	aaaaaaab 	.word	0xaaaaaaab
 8003430:	0001e848 	.word	0x0001e848

08003434 <HAL_TIM_Base_Init>:
 8003434:	b580      	push	{r7, lr}
 8003436:	b082      	sub	sp, #8
 8003438:	af00      	add	r7, sp, #0
 800343a:	6078      	str	r0, [r7, #4]
 800343c:	687b      	ldr	r3, [r7, #4]
 800343e:	2b00      	cmp	r3, #0
 8003440:	d101      	bne.n	8003446 <HAL_TIM_Base_Init+0x12>
 8003442:	2301      	movs	r3, #1
 8003444:	e041      	b.n	80034ca <HAL_TIM_Base_Init+0x96>
 8003446:	687b      	ldr	r3, [r7, #4]
 8003448:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800344c:	b2db      	uxtb	r3, r3
 800344e:	2b00      	cmp	r3, #0
 8003450:	d106      	bne.n	8003460 <HAL_TIM_Base_Init+0x2c>
 8003452:	687b      	ldr	r3, [r7, #4]
 8003454:	2200      	movs	r2, #0
 8003456:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800345a:	6878      	ldr	r0, [r7, #4]
 800345c:	f7fe f99e 	bl	800179c <HAL_TIM_Base_MspInit>
 8003460:	687b      	ldr	r3, [r7, #4]
 8003462:	2202      	movs	r2, #2
 8003464:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003468:	687b      	ldr	r3, [r7, #4]
 800346a:	681a      	ldr	r2, [r3, #0]
 800346c:	687b      	ldr	r3, [r7, #4]
 800346e:	3304      	adds	r3, #4
 8003470:	4619      	mov	r1, r3
 8003472:	4610      	mov	r0, r2
 8003474:	f000 fa10 	bl	8003898 <TIM_Base_SetConfig>
 8003478:	687b      	ldr	r3, [r7, #4]
 800347a:	2201      	movs	r2, #1
 800347c:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8003480:	687b      	ldr	r3, [r7, #4]
 8003482:	2201      	movs	r2, #1
 8003484:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003488:	687b      	ldr	r3, [r7, #4]
 800348a:	2201      	movs	r2, #1
 800348c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8003490:	687b      	ldr	r3, [r7, #4]
 8003492:	2201      	movs	r2, #1
 8003494:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003498:	687b      	ldr	r3, [r7, #4]
 800349a:	2201      	movs	r2, #1
 800349c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80034a0:	687b      	ldr	r3, [r7, #4]
 80034a2:	2201      	movs	r2, #1
 80034a4:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80034a8:	687b      	ldr	r3, [r7, #4]
 80034aa:	2201      	movs	r2, #1
 80034ac:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80034b0:	687b      	ldr	r3, [r7, #4]
 80034b2:	2201      	movs	r2, #1
 80034b4:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80034b8:	687b      	ldr	r3, [r7, #4]
 80034ba:	2201      	movs	r2, #1
 80034bc:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80034c0:	687b      	ldr	r3, [r7, #4]
 80034c2:	2201      	movs	r2, #1
 80034c4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80034c8:	2300      	movs	r3, #0
 80034ca:	4618      	mov	r0, r3
 80034cc:	3708      	adds	r7, #8
 80034ce:	46bd      	mov	sp, r7
 80034d0:	bd80      	pop	{r7, pc}

080034d2 <HAL_TIM_PWM_Init>:
 80034d2:	b580      	push	{r7, lr}
 80034d4:	b082      	sub	sp, #8
 80034d6:	af00      	add	r7, sp, #0
 80034d8:	6078      	str	r0, [r7, #4]
 80034da:	687b      	ldr	r3, [r7, #4]
 80034dc:	2b00      	cmp	r3, #0
 80034de:	d101      	bne.n	80034e4 <HAL_TIM_PWM_Init+0x12>
 80034e0:	2301      	movs	r3, #1
 80034e2:	e041      	b.n	8003568 <HAL_TIM_PWM_Init+0x96>
 80034e4:	687b      	ldr	r3, [r7, #4]
 80034e6:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80034ea:	b2db      	uxtb	r3, r3
 80034ec:	2b00      	cmp	r3, #0
 80034ee:	d106      	bne.n	80034fe <HAL_TIM_PWM_Init+0x2c>
 80034f0:	687b      	ldr	r3, [r7, #4]
 80034f2:	2200      	movs	r2, #0
 80034f4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80034f8:	6878      	ldr	r0, [r7, #4]
 80034fa:	f000 f839 	bl	8003570 <HAL_TIM_PWM_MspInit>
 80034fe:	687b      	ldr	r3, [r7, #4]
 8003500:	2202      	movs	r2, #2
 8003502:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003506:	687b      	ldr	r3, [r7, #4]
 8003508:	681a      	ldr	r2, [r3, #0]
 800350a:	687b      	ldr	r3, [r7, #4]
 800350c:	3304      	adds	r3, #4
 800350e:	4619      	mov	r1, r3
 8003510:	4610      	mov	r0, r2
 8003512:	f000 f9c1 	bl	8003898 <TIM_Base_SetConfig>
 8003516:	687b      	ldr	r3, [r7, #4]
 8003518:	2201      	movs	r2, #1
 800351a:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800351e:	687b      	ldr	r3, [r7, #4]
 8003520:	2201      	movs	r2, #1
 8003522:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003526:	687b      	ldr	r3, [r7, #4]
 8003528:	2201      	movs	r2, #1
 800352a:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800352e:	687b      	ldr	r3, [r7, #4]
 8003530:	2201      	movs	r2, #1
 8003532:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003536:	687b      	ldr	r3, [r7, #4]
 8003538:	2201      	movs	r2, #1
 800353a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800353e:	687b      	ldr	r3, [r7, #4]
 8003540:	2201      	movs	r2, #1
 8003542:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003546:	687b      	ldr	r3, [r7, #4]
 8003548:	2201      	movs	r2, #1
 800354a:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800354e:	687b      	ldr	r3, [r7, #4]
 8003550:	2201      	movs	r2, #1
 8003552:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8003556:	687b      	ldr	r3, [r7, #4]
 8003558:	2201      	movs	r2, #1
 800355a:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800355e:	687b      	ldr	r3, [r7, #4]
 8003560:	2201      	movs	r2, #1
 8003562:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003566:	2300      	movs	r3, #0
 8003568:	4618      	mov	r0, r3
 800356a:	3708      	adds	r7, #8
 800356c:	46bd      	mov	sp, r7
 800356e:	bd80      	pop	{r7, pc}

08003570 <HAL_TIM_PWM_MspInit>:
 8003570:	b480      	push	{r7}
 8003572:	b083      	sub	sp, #12
 8003574:	af00      	add	r7, sp, #0
 8003576:	6078      	str	r0, [r7, #4]
 8003578:	bf00      	nop
 800357a:	370c      	adds	r7, #12
 800357c:	46bd      	mov	sp, r7
 800357e:	bc80      	pop	{r7}
 8003580:	4770      	bx	lr
	...

08003584 <HAL_TIM_PWM_ConfigChannel>:
 8003584:	b580      	push	{r7, lr}
 8003586:	b086      	sub	sp, #24
 8003588:	af00      	add	r7, sp, #0
 800358a:	60f8      	str	r0, [r7, #12]
 800358c:	60b9      	str	r1, [r7, #8]
 800358e:	607a      	str	r2, [r7, #4]
 8003590:	2300      	movs	r3, #0
 8003592:	75fb      	strb	r3, [r7, #23]
 8003594:	68fb      	ldr	r3, [r7, #12]
 8003596:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800359a:	2b01      	cmp	r3, #1
 800359c:	d101      	bne.n	80035a2 <HAL_TIM_PWM_ConfigChannel+0x1e>
 800359e:	2302      	movs	r3, #2
 80035a0:	e0ae      	b.n	8003700 <HAL_TIM_PWM_ConfigChannel+0x17c>
 80035a2:	68fb      	ldr	r3, [r7, #12]
 80035a4:	2201      	movs	r2, #1
 80035a6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80035aa:	687b      	ldr	r3, [r7, #4]
 80035ac:	2b0c      	cmp	r3, #12
 80035ae:	f200 809f 	bhi.w	80036f0 <HAL_TIM_PWM_ConfigChannel+0x16c>
 80035b2:	a201      	add	r2, pc, #4	@ (adr r2, 80035b8 <HAL_TIM_PWM_ConfigChannel+0x34>)
 80035b4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80035b8:	080035ed 	.word	0x080035ed
 80035bc:	080036f1 	.word	0x080036f1
 80035c0:	080036f1 	.word	0x080036f1
 80035c4:	080036f1 	.word	0x080036f1
 80035c8:	0800362d 	.word	0x0800362d
 80035cc:	080036f1 	.word	0x080036f1
 80035d0:	080036f1 	.word	0x080036f1
 80035d4:	080036f1 	.word	0x080036f1
 80035d8:	0800366f 	.word	0x0800366f
 80035dc:	080036f1 	.word	0x080036f1
 80035e0:	080036f1 	.word	0x080036f1
 80035e4:	080036f1 	.word	0x080036f1
 80035e8:	080036af 	.word	0x080036af
 80035ec:	68fb      	ldr	r3, [r7, #12]
 80035ee:	681b      	ldr	r3, [r3, #0]
 80035f0:	68b9      	ldr	r1, [r7, #8]
 80035f2:	4618      	mov	r0, r3
 80035f4:	f000 f9b2 	bl	800395c <TIM_OC1_SetConfig>
 80035f8:	68fb      	ldr	r3, [r7, #12]
 80035fa:	681b      	ldr	r3, [r3, #0]
 80035fc:	699a      	ldr	r2, [r3, #24]
 80035fe:	68fb      	ldr	r3, [r7, #12]
 8003600:	681b      	ldr	r3, [r3, #0]
 8003602:	f042 0208 	orr.w	r2, r2, #8
 8003606:	619a      	str	r2, [r3, #24]
 8003608:	68fb      	ldr	r3, [r7, #12]
 800360a:	681b      	ldr	r3, [r3, #0]
 800360c:	699a      	ldr	r2, [r3, #24]
 800360e:	68fb      	ldr	r3, [r7, #12]
 8003610:	681b      	ldr	r3, [r3, #0]
 8003612:	f022 0204 	bic.w	r2, r2, #4
 8003616:	619a      	str	r2, [r3, #24]
 8003618:	68fb      	ldr	r3, [r7, #12]
 800361a:	681b      	ldr	r3, [r3, #0]
 800361c:	6999      	ldr	r1, [r3, #24]
 800361e:	68bb      	ldr	r3, [r7, #8]
 8003620:	691a      	ldr	r2, [r3, #16]
 8003622:	68fb      	ldr	r3, [r7, #12]
 8003624:	681b      	ldr	r3, [r3, #0]
 8003626:	430a      	orrs	r2, r1
 8003628:	619a      	str	r2, [r3, #24]
 800362a:	e064      	b.n	80036f6 <HAL_TIM_PWM_ConfigChannel+0x172>
 800362c:	68fb      	ldr	r3, [r7, #12]
 800362e:	681b      	ldr	r3, [r3, #0]
 8003630:	68b9      	ldr	r1, [r7, #8]
 8003632:	4618      	mov	r0, r3
 8003634:	f000 f9f8 	bl	8003a28 <TIM_OC2_SetConfig>
 8003638:	68fb      	ldr	r3, [r7, #12]
 800363a:	681b      	ldr	r3, [r3, #0]
 800363c:	699a      	ldr	r2, [r3, #24]
 800363e:	68fb      	ldr	r3, [r7, #12]
 8003640:	681b      	ldr	r3, [r3, #0]
 8003642:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8003646:	619a      	str	r2, [r3, #24]
 8003648:	68fb      	ldr	r3, [r7, #12]
 800364a:	681b      	ldr	r3, [r3, #0]
 800364c:	699a      	ldr	r2, [r3, #24]
 800364e:	68fb      	ldr	r3, [r7, #12]
 8003650:	681b      	ldr	r3, [r3, #0]
 8003652:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003656:	619a      	str	r2, [r3, #24]
 8003658:	68fb      	ldr	r3, [r7, #12]
 800365a:	681b      	ldr	r3, [r3, #0]
 800365c:	6999      	ldr	r1, [r3, #24]
 800365e:	68bb      	ldr	r3, [r7, #8]
 8003660:	691b      	ldr	r3, [r3, #16]
 8003662:	021a      	lsls	r2, r3, #8
 8003664:	68fb      	ldr	r3, [r7, #12]
 8003666:	681b      	ldr	r3, [r3, #0]
 8003668:	430a      	orrs	r2, r1
 800366a:	619a      	str	r2, [r3, #24]
 800366c:	e043      	b.n	80036f6 <HAL_TIM_PWM_ConfigChannel+0x172>
 800366e:	68fb      	ldr	r3, [r7, #12]
 8003670:	681b      	ldr	r3, [r3, #0]
 8003672:	68b9      	ldr	r1, [r7, #8]
 8003674:	4618      	mov	r0, r3
 8003676:	f000 fa41 	bl	8003afc <TIM_OC3_SetConfig>
 800367a:	68fb      	ldr	r3, [r7, #12]
 800367c:	681b      	ldr	r3, [r3, #0]
 800367e:	69da      	ldr	r2, [r3, #28]
 8003680:	68fb      	ldr	r3, [r7, #12]
 8003682:	681b      	ldr	r3, [r3, #0]
 8003684:	f042 0208 	orr.w	r2, r2, #8
 8003688:	61da      	str	r2, [r3, #28]
 800368a:	68fb      	ldr	r3, [r7, #12]
 800368c:	681b      	ldr	r3, [r3, #0]
 800368e:	69da      	ldr	r2, [r3, #28]
 8003690:	68fb      	ldr	r3, [r7, #12]
 8003692:	681b      	ldr	r3, [r3, #0]
 8003694:	f022 0204 	bic.w	r2, r2, #4
 8003698:	61da      	str	r2, [r3, #28]
 800369a:	68fb      	ldr	r3, [r7, #12]
 800369c:	681b      	ldr	r3, [r3, #0]
 800369e:	69d9      	ldr	r1, [r3, #28]
 80036a0:	68bb      	ldr	r3, [r7, #8]
 80036a2:	691a      	ldr	r2, [r3, #16]
 80036a4:	68fb      	ldr	r3, [r7, #12]
 80036a6:	681b      	ldr	r3, [r3, #0]
 80036a8:	430a      	orrs	r2, r1
 80036aa:	61da      	str	r2, [r3, #28]
 80036ac:	e023      	b.n	80036f6 <HAL_TIM_PWM_ConfigChannel+0x172>
 80036ae:	68fb      	ldr	r3, [r7, #12]
 80036b0:	681b      	ldr	r3, [r3, #0]
 80036b2:	68b9      	ldr	r1, [r7, #8]
 80036b4:	4618      	mov	r0, r3
 80036b6:	f000 fa8b 	bl	8003bd0 <TIM_OC4_SetConfig>
 80036ba:	68fb      	ldr	r3, [r7, #12]
 80036bc:	681b      	ldr	r3, [r3, #0]
 80036be:	69da      	ldr	r2, [r3, #28]
 80036c0:	68fb      	ldr	r3, [r7, #12]
 80036c2:	681b      	ldr	r3, [r3, #0]
 80036c4:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80036c8:	61da      	str	r2, [r3, #28]
 80036ca:	68fb      	ldr	r3, [r7, #12]
 80036cc:	681b      	ldr	r3, [r3, #0]
 80036ce:	69da      	ldr	r2, [r3, #28]
 80036d0:	68fb      	ldr	r3, [r7, #12]
 80036d2:	681b      	ldr	r3, [r3, #0]
 80036d4:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80036d8:	61da      	str	r2, [r3, #28]
 80036da:	68fb      	ldr	r3, [r7, #12]
 80036dc:	681b      	ldr	r3, [r3, #0]
 80036de:	69d9      	ldr	r1, [r3, #28]
 80036e0:	68bb      	ldr	r3, [r7, #8]
 80036e2:	691b      	ldr	r3, [r3, #16]
 80036e4:	021a      	lsls	r2, r3, #8
 80036e6:	68fb      	ldr	r3, [r7, #12]
 80036e8:	681b      	ldr	r3, [r3, #0]
 80036ea:	430a      	orrs	r2, r1
 80036ec:	61da      	str	r2, [r3, #28]
 80036ee:	e002      	b.n	80036f6 <HAL_TIM_PWM_ConfigChannel+0x172>
 80036f0:	2301      	movs	r3, #1
 80036f2:	75fb      	strb	r3, [r7, #23]
 80036f4:	bf00      	nop
 80036f6:	68fb      	ldr	r3, [r7, #12]
 80036f8:	2200      	movs	r2, #0
 80036fa:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80036fe:	7dfb      	ldrb	r3, [r7, #23]
 8003700:	4618      	mov	r0, r3
 8003702:	3718      	adds	r7, #24
 8003704:	46bd      	mov	sp, r7
 8003706:	bd80      	pop	{r7, pc}

08003708 <HAL_TIM_ConfigClockSource>:
 8003708:	b580      	push	{r7, lr}
 800370a:	b084      	sub	sp, #16
 800370c:	af00      	add	r7, sp, #0
 800370e:	6078      	str	r0, [r7, #4]
 8003710:	6039      	str	r1, [r7, #0]
 8003712:	2300      	movs	r3, #0
 8003714:	73fb      	strb	r3, [r7, #15]
 8003716:	687b      	ldr	r3, [r7, #4]
 8003718:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800371c:	2b01      	cmp	r3, #1
 800371e:	d101      	bne.n	8003724 <HAL_TIM_ConfigClockSource+0x1c>
 8003720:	2302      	movs	r3, #2
 8003722:	e0b4      	b.n	800388e <HAL_TIM_ConfigClockSource+0x186>
 8003724:	687b      	ldr	r3, [r7, #4]
 8003726:	2201      	movs	r2, #1
 8003728:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800372c:	687b      	ldr	r3, [r7, #4]
 800372e:	2202      	movs	r2, #2
 8003730:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003734:	687b      	ldr	r3, [r7, #4]
 8003736:	681b      	ldr	r3, [r3, #0]
 8003738:	689b      	ldr	r3, [r3, #8]
 800373a:	60bb      	str	r3, [r7, #8]
 800373c:	68bb      	ldr	r3, [r7, #8]
 800373e:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8003742:	60bb      	str	r3, [r7, #8]
 8003744:	68bb      	ldr	r3, [r7, #8]
 8003746:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 800374a:	60bb      	str	r3, [r7, #8]
 800374c:	687b      	ldr	r3, [r7, #4]
 800374e:	681b      	ldr	r3, [r3, #0]
 8003750:	68ba      	ldr	r2, [r7, #8]
 8003752:	609a      	str	r2, [r3, #8]
 8003754:	683b      	ldr	r3, [r7, #0]
 8003756:	681b      	ldr	r3, [r3, #0]
 8003758:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800375c:	d03e      	beq.n	80037dc <HAL_TIM_ConfigClockSource+0xd4>
 800375e:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8003762:	f200 8087 	bhi.w	8003874 <HAL_TIM_ConfigClockSource+0x16c>
 8003766:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800376a:	f000 8086 	beq.w	800387a <HAL_TIM_ConfigClockSource+0x172>
 800376e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003772:	d87f      	bhi.n	8003874 <HAL_TIM_ConfigClockSource+0x16c>
 8003774:	2b70      	cmp	r3, #112	@ 0x70
 8003776:	d01a      	beq.n	80037ae <HAL_TIM_ConfigClockSource+0xa6>
 8003778:	2b70      	cmp	r3, #112	@ 0x70
 800377a:	d87b      	bhi.n	8003874 <HAL_TIM_ConfigClockSource+0x16c>
 800377c:	2b60      	cmp	r3, #96	@ 0x60
 800377e:	d050      	beq.n	8003822 <HAL_TIM_ConfigClockSource+0x11a>
 8003780:	2b60      	cmp	r3, #96	@ 0x60
 8003782:	d877      	bhi.n	8003874 <HAL_TIM_ConfigClockSource+0x16c>
 8003784:	2b50      	cmp	r3, #80	@ 0x50
 8003786:	d03c      	beq.n	8003802 <HAL_TIM_ConfigClockSource+0xfa>
 8003788:	2b50      	cmp	r3, #80	@ 0x50
 800378a:	d873      	bhi.n	8003874 <HAL_TIM_ConfigClockSource+0x16c>
 800378c:	2b40      	cmp	r3, #64	@ 0x40
 800378e:	d058      	beq.n	8003842 <HAL_TIM_ConfigClockSource+0x13a>
 8003790:	2b40      	cmp	r3, #64	@ 0x40
 8003792:	d86f      	bhi.n	8003874 <HAL_TIM_ConfigClockSource+0x16c>
 8003794:	2b30      	cmp	r3, #48	@ 0x30
 8003796:	d064      	beq.n	8003862 <HAL_TIM_ConfigClockSource+0x15a>
 8003798:	2b30      	cmp	r3, #48	@ 0x30
 800379a:	d86b      	bhi.n	8003874 <HAL_TIM_ConfigClockSource+0x16c>
 800379c:	2b20      	cmp	r3, #32
 800379e:	d060      	beq.n	8003862 <HAL_TIM_ConfigClockSource+0x15a>
 80037a0:	2b20      	cmp	r3, #32
 80037a2:	d867      	bhi.n	8003874 <HAL_TIM_ConfigClockSource+0x16c>
 80037a4:	2b00      	cmp	r3, #0
 80037a6:	d05c      	beq.n	8003862 <HAL_TIM_ConfigClockSource+0x15a>
 80037a8:	2b10      	cmp	r3, #16
 80037aa:	d05a      	beq.n	8003862 <HAL_TIM_ConfigClockSource+0x15a>
 80037ac:	e062      	b.n	8003874 <HAL_TIM_ConfigClockSource+0x16c>
 80037ae:	687b      	ldr	r3, [r7, #4]
 80037b0:	6818      	ldr	r0, [r3, #0]
 80037b2:	683b      	ldr	r3, [r7, #0]
 80037b4:	6899      	ldr	r1, [r3, #8]
 80037b6:	683b      	ldr	r3, [r7, #0]
 80037b8:	685a      	ldr	r2, [r3, #4]
 80037ba:	683b      	ldr	r3, [r7, #0]
 80037bc:	68db      	ldr	r3, [r3, #12]
 80037be:	f000 facc 	bl	8003d5a <TIM_ETR_SetConfig>
 80037c2:	687b      	ldr	r3, [r7, #4]
 80037c4:	681b      	ldr	r3, [r3, #0]
 80037c6:	689b      	ldr	r3, [r3, #8]
 80037c8:	60bb      	str	r3, [r7, #8]
 80037ca:	68bb      	ldr	r3, [r7, #8]
 80037cc:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 80037d0:	60bb      	str	r3, [r7, #8]
 80037d2:	687b      	ldr	r3, [r7, #4]
 80037d4:	681b      	ldr	r3, [r3, #0]
 80037d6:	68ba      	ldr	r2, [r7, #8]
 80037d8:	609a      	str	r2, [r3, #8]
 80037da:	e04f      	b.n	800387c <HAL_TIM_ConfigClockSource+0x174>
 80037dc:	687b      	ldr	r3, [r7, #4]
 80037de:	6818      	ldr	r0, [r3, #0]
 80037e0:	683b      	ldr	r3, [r7, #0]
 80037e2:	6899      	ldr	r1, [r3, #8]
 80037e4:	683b      	ldr	r3, [r7, #0]
 80037e6:	685a      	ldr	r2, [r3, #4]
 80037e8:	683b      	ldr	r3, [r7, #0]
 80037ea:	68db      	ldr	r3, [r3, #12]
 80037ec:	f000 fab5 	bl	8003d5a <TIM_ETR_SetConfig>
 80037f0:	687b      	ldr	r3, [r7, #4]
 80037f2:	681b      	ldr	r3, [r3, #0]
 80037f4:	689a      	ldr	r2, [r3, #8]
 80037f6:	687b      	ldr	r3, [r7, #4]
 80037f8:	681b      	ldr	r3, [r3, #0]
 80037fa:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80037fe:	609a      	str	r2, [r3, #8]
 8003800:	e03c      	b.n	800387c <HAL_TIM_ConfigClockSource+0x174>
 8003802:	687b      	ldr	r3, [r7, #4]
 8003804:	6818      	ldr	r0, [r3, #0]
 8003806:	683b      	ldr	r3, [r7, #0]
 8003808:	6859      	ldr	r1, [r3, #4]
 800380a:	683b      	ldr	r3, [r7, #0]
 800380c:	68db      	ldr	r3, [r3, #12]
 800380e:	461a      	mov	r2, r3
 8003810:	f000 fa2c 	bl	8003c6c <TIM_TI1_ConfigInputStage>
 8003814:	687b      	ldr	r3, [r7, #4]
 8003816:	681b      	ldr	r3, [r3, #0]
 8003818:	2150      	movs	r1, #80	@ 0x50
 800381a:	4618      	mov	r0, r3
 800381c:	f000 fa83 	bl	8003d26 <TIM_ITRx_SetConfig>
 8003820:	e02c      	b.n	800387c <HAL_TIM_ConfigClockSource+0x174>
 8003822:	687b      	ldr	r3, [r7, #4]
 8003824:	6818      	ldr	r0, [r3, #0]
 8003826:	683b      	ldr	r3, [r7, #0]
 8003828:	6859      	ldr	r1, [r3, #4]
 800382a:	683b      	ldr	r3, [r7, #0]
 800382c:	68db      	ldr	r3, [r3, #12]
 800382e:	461a      	mov	r2, r3
 8003830:	f000 fa4a 	bl	8003cc8 <TIM_TI2_ConfigInputStage>
 8003834:	687b      	ldr	r3, [r7, #4]
 8003836:	681b      	ldr	r3, [r3, #0]
 8003838:	2160      	movs	r1, #96	@ 0x60
 800383a:	4618      	mov	r0, r3
 800383c:	f000 fa73 	bl	8003d26 <TIM_ITRx_SetConfig>
 8003840:	e01c      	b.n	800387c <HAL_TIM_ConfigClockSource+0x174>
 8003842:	687b      	ldr	r3, [r7, #4]
 8003844:	6818      	ldr	r0, [r3, #0]
 8003846:	683b      	ldr	r3, [r7, #0]
 8003848:	6859      	ldr	r1, [r3, #4]
 800384a:	683b      	ldr	r3, [r7, #0]
 800384c:	68db      	ldr	r3, [r3, #12]
 800384e:	461a      	mov	r2, r3
 8003850:	f000 fa0c 	bl	8003c6c <TIM_TI1_ConfigInputStage>
 8003854:	687b      	ldr	r3, [r7, #4]
 8003856:	681b      	ldr	r3, [r3, #0]
 8003858:	2140      	movs	r1, #64	@ 0x40
 800385a:	4618      	mov	r0, r3
 800385c:	f000 fa63 	bl	8003d26 <TIM_ITRx_SetConfig>
 8003860:	e00c      	b.n	800387c <HAL_TIM_ConfigClockSource+0x174>
 8003862:	687b      	ldr	r3, [r7, #4]
 8003864:	681a      	ldr	r2, [r3, #0]
 8003866:	683b      	ldr	r3, [r7, #0]
 8003868:	681b      	ldr	r3, [r3, #0]
 800386a:	4619      	mov	r1, r3
 800386c:	4610      	mov	r0, r2
 800386e:	f000 fa5a 	bl	8003d26 <TIM_ITRx_SetConfig>
 8003872:	e003      	b.n	800387c <HAL_TIM_ConfigClockSource+0x174>
 8003874:	2301      	movs	r3, #1
 8003876:	73fb      	strb	r3, [r7, #15]
 8003878:	e000      	b.n	800387c <HAL_TIM_ConfigClockSource+0x174>
 800387a:	bf00      	nop
 800387c:	687b      	ldr	r3, [r7, #4]
 800387e:	2201      	movs	r2, #1
 8003880:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003884:	687b      	ldr	r3, [r7, #4]
 8003886:	2200      	movs	r2, #0
 8003888:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800388c:	7bfb      	ldrb	r3, [r7, #15]
 800388e:	4618      	mov	r0, r3
 8003890:	3710      	adds	r7, #16
 8003892:	46bd      	mov	sp, r7
 8003894:	bd80      	pop	{r7, pc}
	...

08003898 <TIM_Base_SetConfig>:
 8003898:	b480      	push	{r7}
 800389a:	b085      	sub	sp, #20
 800389c:	af00      	add	r7, sp, #0
 800389e:	6078      	str	r0, [r7, #4]
 80038a0:	6039      	str	r1, [r7, #0]
 80038a2:	687b      	ldr	r3, [r7, #4]
 80038a4:	681b      	ldr	r3, [r3, #0]
 80038a6:	60fb      	str	r3, [r7, #12]
 80038a8:	687b      	ldr	r3, [r7, #4]
 80038aa:	4a29      	ldr	r2, [pc, #164]	@ (8003950 <TIM_Base_SetConfig+0xb8>)
 80038ac:	4293      	cmp	r3, r2
 80038ae:	d00b      	beq.n	80038c8 <TIM_Base_SetConfig+0x30>
 80038b0:	687b      	ldr	r3, [r7, #4]
 80038b2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80038b6:	d007      	beq.n	80038c8 <TIM_Base_SetConfig+0x30>
 80038b8:	687b      	ldr	r3, [r7, #4]
 80038ba:	4a26      	ldr	r2, [pc, #152]	@ (8003954 <TIM_Base_SetConfig+0xbc>)
 80038bc:	4293      	cmp	r3, r2
 80038be:	d003      	beq.n	80038c8 <TIM_Base_SetConfig+0x30>
 80038c0:	687b      	ldr	r3, [r7, #4]
 80038c2:	4a25      	ldr	r2, [pc, #148]	@ (8003958 <TIM_Base_SetConfig+0xc0>)
 80038c4:	4293      	cmp	r3, r2
 80038c6:	d108      	bne.n	80038da <TIM_Base_SetConfig+0x42>
 80038c8:	68fb      	ldr	r3, [r7, #12]
 80038ca:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80038ce:	60fb      	str	r3, [r7, #12]
 80038d0:	683b      	ldr	r3, [r7, #0]
 80038d2:	685b      	ldr	r3, [r3, #4]
 80038d4:	68fa      	ldr	r2, [r7, #12]
 80038d6:	4313      	orrs	r3, r2
 80038d8:	60fb      	str	r3, [r7, #12]
 80038da:	687b      	ldr	r3, [r7, #4]
 80038dc:	4a1c      	ldr	r2, [pc, #112]	@ (8003950 <TIM_Base_SetConfig+0xb8>)
 80038de:	4293      	cmp	r3, r2
 80038e0:	d00b      	beq.n	80038fa <TIM_Base_SetConfig+0x62>
 80038e2:	687b      	ldr	r3, [r7, #4]
 80038e4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80038e8:	d007      	beq.n	80038fa <TIM_Base_SetConfig+0x62>
 80038ea:	687b      	ldr	r3, [r7, #4]
 80038ec:	4a19      	ldr	r2, [pc, #100]	@ (8003954 <TIM_Base_SetConfig+0xbc>)
 80038ee:	4293      	cmp	r3, r2
 80038f0:	d003      	beq.n	80038fa <TIM_Base_SetConfig+0x62>
 80038f2:	687b      	ldr	r3, [r7, #4]
 80038f4:	4a18      	ldr	r2, [pc, #96]	@ (8003958 <TIM_Base_SetConfig+0xc0>)
 80038f6:	4293      	cmp	r3, r2
 80038f8:	d108      	bne.n	800390c <TIM_Base_SetConfig+0x74>
 80038fa:	68fb      	ldr	r3, [r7, #12]
 80038fc:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8003900:	60fb      	str	r3, [r7, #12]
 8003902:	683b      	ldr	r3, [r7, #0]
 8003904:	68db      	ldr	r3, [r3, #12]
 8003906:	68fa      	ldr	r2, [r7, #12]
 8003908:	4313      	orrs	r3, r2
 800390a:	60fb      	str	r3, [r7, #12]
 800390c:	68fb      	ldr	r3, [r7, #12]
 800390e:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8003912:	683b      	ldr	r3, [r7, #0]
 8003914:	695b      	ldr	r3, [r3, #20]
 8003916:	4313      	orrs	r3, r2
 8003918:	60fb      	str	r3, [r7, #12]
 800391a:	687b      	ldr	r3, [r7, #4]
 800391c:	68fa      	ldr	r2, [r7, #12]
 800391e:	601a      	str	r2, [r3, #0]
 8003920:	683b      	ldr	r3, [r7, #0]
 8003922:	689a      	ldr	r2, [r3, #8]
 8003924:	687b      	ldr	r3, [r7, #4]
 8003926:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003928:	683b      	ldr	r3, [r7, #0]
 800392a:	681a      	ldr	r2, [r3, #0]
 800392c:	687b      	ldr	r3, [r7, #4]
 800392e:	629a      	str	r2, [r3, #40]	@ 0x28
 8003930:	687b      	ldr	r3, [r7, #4]
 8003932:	4a07      	ldr	r2, [pc, #28]	@ (8003950 <TIM_Base_SetConfig+0xb8>)
 8003934:	4293      	cmp	r3, r2
 8003936:	d103      	bne.n	8003940 <TIM_Base_SetConfig+0xa8>
 8003938:	683b      	ldr	r3, [r7, #0]
 800393a:	691a      	ldr	r2, [r3, #16]
 800393c:	687b      	ldr	r3, [r7, #4]
 800393e:	631a      	str	r2, [r3, #48]	@ 0x30
 8003940:	687b      	ldr	r3, [r7, #4]
 8003942:	2201      	movs	r2, #1
 8003944:	615a      	str	r2, [r3, #20]
 8003946:	bf00      	nop
 8003948:	3714      	adds	r7, #20
 800394a:	46bd      	mov	sp, r7
 800394c:	bc80      	pop	{r7}
 800394e:	4770      	bx	lr
 8003950:	40012c00 	.word	0x40012c00
 8003954:	40000400 	.word	0x40000400
 8003958:	40000800 	.word	0x40000800

0800395c <TIM_OC1_SetConfig>:
 800395c:	b480      	push	{r7}
 800395e:	b087      	sub	sp, #28
 8003960:	af00      	add	r7, sp, #0
 8003962:	6078      	str	r0, [r7, #4]
 8003964:	6039      	str	r1, [r7, #0]
 8003966:	687b      	ldr	r3, [r7, #4]
 8003968:	6a1b      	ldr	r3, [r3, #32]
 800396a:	617b      	str	r3, [r7, #20]
 800396c:	687b      	ldr	r3, [r7, #4]
 800396e:	6a1b      	ldr	r3, [r3, #32]
 8003970:	f023 0201 	bic.w	r2, r3, #1
 8003974:	687b      	ldr	r3, [r7, #4]
 8003976:	621a      	str	r2, [r3, #32]
 8003978:	687b      	ldr	r3, [r7, #4]
 800397a:	685b      	ldr	r3, [r3, #4]
 800397c:	613b      	str	r3, [r7, #16]
 800397e:	687b      	ldr	r3, [r7, #4]
 8003980:	699b      	ldr	r3, [r3, #24]
 8003982:	60fb      	str	r3, [r7, #12]
 8003984:	68fb      	ldr	r3, [r7, #12]
 8003986:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800398a:	60fb      	str	r3, [r7, #12]
 800398c:	68fb      	ldr	r3, [r7, #12]
 800398e:	f023 0303 	bic.w	r3, r3, #3
 8003992:	60fb      	str	r3, [r7, #12]
 8003994:	683b      	ldr	r3, [r7, #0]
 8003996:	681b      	ldr	r3, [r3, #0]
 8003998:	68fa      	ldr	r2, [r7, #12]
 800399a:	4313      	orrs	r3, r2
 800399c:	60fb      	str	r3, [r7, #12]
 800399e:	697b      	ldr	r3, [r7, #20]
 80039a0:	f023 0302 	bic.w	r3, r3, #2
 80039a4:	617b      	str	r3, [r7, #20]
 80039a6:	683b      	ldr	r3, [r7, #0]
 80039a8:	689b      	ldr	r3, [r3, #8]
 80039aa:	697a      	ldr	r2, [r7, #20]
 80039ac:	4313      	orrs	r3, r2
 80039ae:	617b      	str	r3, [r7, #20]
 80039b0:	687b      	ldr	r3, [r7, #4]
 80039b2:	4a1c      	ldr	r2, [pc, #112]	@ (8003a24 <TIM_OC1_SetConfig+0xc8>)
 80039b4:	4293      	cmp	r3, r2
 80039b6:	d10c      	bne.n	80039d2 <TIM_OC1_SetConfig+0x76>
 80039b8:	697b      	ldr	r3, [r7, #20]
 80039ba:	f023 0308 	bic.w	r3, r3, #8
 80039be:	617b      	str	r3, [r7, #20]
 80039c0:	683b      	ldr	r3, [r7, #0]
 80039c2:	68db      	ldr	r3, [r3, #12]
 80039c4:	697a      	ldr	r2, [r7, #20]
 80039c6:	4313      	orrs	r3, r2
 80039c8:	617b      	str	r3, [r7, #20]
 80039ca:	697b      	ldr	r3, [r7, #20]
 80039cc:	f023 0304 	bic.w	r3, r3, #4
 80039d0:	617b      	str	r3, [r7, #20]
 80039d2:	687b      	ldr	r3, [r7, #4]
 80039d4:	4a13      	ldr	r2, [pc, #76]	@ (8003a24 <TIM_OC1_SetConfig+0xc8>)
 80039d6:	4293      	cmp	r3, r2
 80039d8:	d111      	bne.n	80039fe <TIM_OC1_SetConfig+0xa2>
 80039da:	693b      	ldr	r3, [r7, #16]
 80039dc:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80039e0:	613b      	str	r3, [r7, #16]
 80039e2:	693b      	ldr	r3, [r7, #16]
 80039e4:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80039e8:	613b      	str	r3, [r7, #16]
 80039ea:	683b      	ldr	r3, [r7, #0]
 80039ec:	695b      	ldr	r3, [r3, #20]
 80039ee:	693a      	ldr	r2, [r7, #16]
 80039f0:	4313      	orrs	r3, r2
 80039f2:	613b      	str	r3, [r7, #16]
 80039f4:	683b      	ldr	r3, [r7, #0]
 80039f6:	699b      	ldr	r3, [r3, #24]
 80039f8:	693a      	ldr	r2, [r7, #16]
 80039fa:	4313      	orrs	r3, r2
 80039fc:	613b      	str	r3, [r7, #16]
 80039fe:	687b      	ldr	r3, [r7, #4]
 8003a00:	693a      	ldr	r2, [r7, #16]
 8003a02:	605a      	str	r2, [r3, #4]
 8003a04:	687b      	ldr	r3, [r7, #4]
 8003a06:	68fa      	ldr	r2, [r7, #12]
 8003a08:	619a      	str	r2, [r3, #24]
 8003a0a:	683b      	ldr	r3, [r7, #0]
 8003a0c:	685a      	ldr	r2, [r3, #4]
 8003a0e:	687b      	ldr	r3, [r7, #4]
 8003a10:	635a      	str	r2, [r3, #52]	@ 0x34
 8003a12:	687b      	ldr	r3, [r7, #4]
 8003a14:	697a      	ldr	r2, [r7, #20]
 8003a16:	621a      	str	r2, [r3, #32]
 8003a18:	bf00      	nop
 8003a1a:	371c      	adds	r7, #28
 8003a1c:	46bd      	mov	sp, r7
 8003a1e:	bc80      	pop	{r7}
 8003a20:	4770      	bx	lr
 8003a22:	bf00      	nop
 8003a24:	40012c00 	.word	0x40012c00

08003a28 <TIM_OC2_SetConfig>:
 8003a28:	b480      	push	{r7}
 8003a2a:	b087      	sub	sp, #28
 8003a2c:	af00      	add	r7, sp, #0
 8003a2e:	6078      	str	r0, [r7, #4]
 8003a30:	6039      	str	r1, [r7, #0]
 8003a32:	687b      	ldr	r3, [r7, #4]
 8003a34:	6a1b      	ldr	r3, [r3, #32]
 8003a36:	617b      	str	r3, [r7, #20]
 8003a38:	687b      	ldr	r3, [r7, #4]
 8003a3a:	6a1b      	ldr	r3, [r3, #32]
 8003a3c:	f023 0210 	bic.w	r2, r3, #16
 8003a40:	687b      	ldr	r3, [r7, #4]
 8003a42:	621a      	str	r2, [r3, #32]
 8003a44:	687b      	ldr	r3, [r7, #4]
 8003a46:	685b      	ldr	r3, [r3, #4]
 8003a48:	613b      	str	r3, [r7, #16]
 8003a4a:	687b      	ldr	r3, [r7, #4]
 8003a4c:	699b      	ldr	r3, [r3, #24]
 8003a4e:	60fb      	str	r3, [r7, #12]
 8003a50:	68fb      	ldr	r3, [r7, #12]
 8003a52:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8003a56:	60fb      	str	r3, [r7, #12]
 8003a58:	68fb      	ldr	r3, [r7, #12]
 8003a5a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8003a5e:	60fb      	str	r3, [r7, #12]
 8003a60:	683b      	ldr	r3, [r7, #0]
 8003a62:	681b      	ldr	r3, [r3, #0]
 8003a64:	021b      	lsls	r3, r3, #8
 8003a66:	68fa      	ldr	r2, [r7, #12]
 8003a68:	4313      	orrs	r3, r2
 8003a6a:	60fb      	str	r3, [r7, #12]
 8003a6c:	697b      	ldr	r3, [r7, #20]
 8003a6e:	f023 0320 	bic.w	r3, r3, #32
 8003a72:	617b      	str	r3, [r7, #20]
 8003a74:	683b      	ldr	r3, [r7, #0]
 8003a76:	689b      	ldr	r3, [r3, #8]
 8003a78:	011b      	lsls	r3, r3, #4
 8003a7a:	697a      	ldr	r2, [r7, #20]
 8003a7c:	4313      	orrs	r3, r2
 8003a7e:	617b      	str	r3, [r7, #20]
 8003a80:	687b      	ldr	r3, [r7, #4]
 8003a82:	4a1d      	ldr	r2, [pc, #116]	@ (8003af8 <TIM_OC2_SetConfig+0xd0>)
 8003a84:	4293      	cmp	r3, r2
 8003a86:	d10d      	bne.n	8003aa4 <TIM_OC2_SetConfig+0x7c>
 8003a88:	697b      	ldr	r3, [r7, #20]
 8003a8a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8003a8e:	617b      	str	r3, [r7, #20]
 8003a90:	683b      	ldr	r3, [r7, #0]
 8003a92:	68db      	ldr	r3, [r3, #12]
 8003a94:	011b      	lsls	r3, r3, #4
 8003a96:	697a      	ldr	r2, [r7, #20]
 8003a98:	4313      	orrs	r3, r2
 8003a9a:	617b      	str	r3, [r7, #20]
 8003a9c:	697b      	ldr	r3, [r7, #20]
 8003a9e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8003aa2:	617b      	str	r3, [r7, #20]
 8003aa4:	687b      	ldr	r3, [r7, #4]
 8003aa6:	4a14      	ldr	r2, [pc, #80]	@ (8003af8 <TIM_OC2_SetConfig+0xd0>)
 8003aa8:	4293      	cmp	r3, r2
 8003aaa:	d113      	bne.n	8003ad4 <TIM_OC2_SetConfig+0xac>
 8003aac:	693b      	ldr	r3, [r7, #16]
 8003aae:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8003ab2:	613b      	str	r3, [r7, #16]
 8003ab4:	693b      	ldr	r3, [r7, #16]
 8003ab6:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8003aba:	613b      	str	r3, [r7, #16]
 8003abc:	683b      	ldr	r3, [r7, #0]
 8003abe:	695b      	ldr	r3, [r3, #20]
 8003ac0:	009b      	lsls	r3, r3, #2
 8003ac2:	693a      	ldr	r2, [r7, #16]
 8003ac4:	4313      	orrs	r3, r2
 8003ac6:	613b      	str	r3, [r7, #16]
 8003ac8:	683b      	ldr	r3, [r7, #0]
 8003aca:	699b      	ldr	r3, [r3, #24]
 8003acc:	009b      	lsls	r3, r3, #2
 8003ace:	693a      	ldr	r2, [r7, #16]
 8003ad0:	4313      	orrs	r3, r2
 8003ad2:	613b      	str	r3, [r7, #16]
 8003ad4:	687b      	ldr	r3, [r7, #4]
 8003ad6:	693a      	ldr	r2, [r7, #16]
 8003ad8:	605a      	str	r2, [r3, #4]
 8003ada:	687b      	ldr	r3, [r7, #4]
 8003adc:	68fa      	ldr	r2, [r7, #12]
 8003ade:	619a      	str	r2, [r3, #24]
 8003ae0:	683b      	ldr	r3, [r7, #0]
 8003ae2:	685a      	ldr	r2, [r3, #4]
 8003ae4:	687b      	ldr	r3, [r7, #4]
 8003ae6:	639a      	str	r2, [r3, #56]	@ 0x38
 8003ae8:	687b      	ldr	r3, [r7, #4]
 8003aea:	697a      	ldr	r2, [r7, #20]
 8003aec:	621a      	str	r2, [r3, #32]
 8003aee:	bf00      	nop
 8003af0:	371c      	adds	r7, #28
 8003af2:	46bd      	mov	sp, r7
 8003af4:	bc80      	pop	{r7}
 8003af6:	4770      	bx	lr
 8003af8:	40012c00 	.word	0x40012c00

08003afc <TIM_OC3_SetConfig>:
 8003afc:	b480      	push	{r7}
 8003afe:	b087      	sub	sp, #28
 8003b00:	af00      	add	r7, sp, #0
 8003b02:	6078      	str	r0, [r7, #4]
 8003b04:	6039      	str	r1, [r7, #0]
 8003b06:	687b      	ldr	r3, [r7, #4]
 8003b08:	6a1b      	ldr	r3, [r3, #32]
 8003b0a:	617b      	str	r3, [r7, #20]
 8003b0c:	687b      	ldr	r3, [r7, #4]
 8003b0e:	6a1b      	ldr	r3, [r3, #32]
 8003b10:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8003b14:	687b      	ldr	r3, [r7, #4]
 8003b16:	621a      	str	r2, [r3, #32]
 8003b18:	687b      	ldr	r3, [r7, #4]
 8003b1a:	685b      	ldr	r3, [r3, #4]
 8003b1c:	613b      	str	r3, [r7, #16]
 8003b1e:	687b      	ldr	r3, [r7, #4]
 8003b20:	69db      	ldr	r3, [r3, #28]
 8003b22:	60fb      	str	r3, [r7, #12]
 8003b24:	68fb      	ldr	r3, [r7, #12]
 8003b26:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8003b2a:	60fb      	str	r3, [r7, #12]
 8003b2c:	68fb      	ldr	r3, [r7, #12]
 8003b2e:	f023 0303 	bic.w	r3, r3, #3
 8003b32:	60fb      	str	r3, [r7, #12]
 8003b34:	683b      	ldr	r3, [r7, #0]
 8003b36:	681b      	ldr	r3, [r3, #0]
 8003b38:	68fa      	ldr	r2, [r7, #12]
 8003b3a:	4313      	orrs	r3, r2
 8003b3c:	60fb      	str	r3, [r7, #12]
 8003b3e:	697b      	ldr	r3, [r7, #20]
 8003b40:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8003b44:	617b      	str	r3, [r7, #20]
 8003b46:	683b      	ldr	r3, [r7, #0]
 8003b48:	689b      	ldr	r3, [r3, #8]
 8003b4a:	021b      	lsls	r3, r3, #8
 8003b4c:	697a      	ldr	r2, [r7, #20]
 8003b4e:	4313      	orrs	r3, r2
 8003b50:	617b      	str	r3, [r7, #20]
 8003b52:	687b      	ldr	r3, [r7, #4]
 8003b54:	4a1d      	ldr	r2, [pc, #116]	@ (8003bcc <TIM_OC3_SetConfig+0xd0>)
 8003b56:	4293      	cmp	r3, r2
 8003b58:	d10d      	bne.n	8003b76 <TIM_OC3_SetConfig+0x7a>
 8003b5a:	697b      	ldr	r3, [r7, #20]
 8003b5c:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8003b60:	617b      	str	r3, [r7, #20]
 8003b62:	683b      	ldr	r3, [r7, #0]
 8003b64:	68db      	ldr	r3, [r3, #12]
 8003b66:	021b      	lsls	r3, r3, #8
 8003b68:	697a      	ldr	r2, [r7, #20]
 8003b6a:	4313      	orrs	r3, r2
 8003b6c:	617b      	str	r3, [r7, #20]
 8003b6e:	697b      	ldr	r3, [r7, #20]
 8003b70:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8003b74:	617b      	str	r3, [r7, #20]
 8003b76:	687b      	ldr	r3, [r7, #4]
 8003b78:	4a14      	ldr	r2, [pc, #80]	@ (8003bcc <TIM_OC3_SetConfig+0xd0>)
 8003b7a:	4293      	cmp	r3, r2
 8003b7c:	d113      	bne.n	8003ba6 <TIM_OC3_SetConfig+0xaa>
 8003b7e:	693b      	ldr	r3, [r7, #16]
 8003b80:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8003b84:	613b      	str	r3, [r7, #16]
 8003b86:	693b      	ldr	r3, [r7, #16]
 8003b88:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8003b8c:	613b      	str	r3, [r7, #16]
 8003b8e:	683b      	ldr	r3, [r7, #0]
 8003b90:	695b      	ldr	r3, [r3, #20]
 8003b92:	011b      	lsls	r3, r3, #4
 8003b94:	693a      	ldr	r2, [r7, #16]
 8003b96:	4313      	orrs	r3, r2
 8003b98:	613b      	str	r3, [r7, #16]
 8003b9a:	683b      	ldr	r3, [r7, #0]
 8003b9c:	699b      	ldr	r3, [r3, #24]
 8003b9e:	011b      	lsls	r3, r3, #4
 8003ba0:	693a      	ldr	r2, [r7, #16]
 8003ba2:	4313      	orrs	r3, r2
 8003ba4:	613b      	str	r3, [r7, #16]
 8003ba6:	687b      	ldr	r3, [r7, #4]
 8003ba8:	693a      	ldr	r2, [r7, #16]
 8003baa:	605a      	str	r2, [r3, #4]
 8003bac:	687b      	ldr	r3, [r7, #4]
 8003bae:	68fa      	ldr	r2, [r7, #12]
 8003bb0:	61da      	str	r2, [r3, #28]
 8003bb2:	683b      	ldr	r3, [r7, #0]
 8003bb4:	685a      	ldr	r2, [r3, #4]
 8003bb6:	687b      	ldr	r3, [r7, #4]
 8003bb8:	63da      	str	r2, [r3, #60]	@ 0x3c
 8003bba:	687b      	ldr	r3, [r7, #4]
 8003bbc:	697a      	ldr	r2, [r7, #20]
 8003bbe:	621a      	str	r2, [r3, #32]
 8003bc0:	bf00      	nop
 8003bc2:	371c      	adds	r7, #28
 8003bc4:	46bd      	mov	sp, r7
 8003bc6:	bc80      	pop	{r7}
 8003bc8:	4770      	bx	lr
 8003bca:	bf00      	nop
 8003bcc:	40012c00 	.word	0x40012c00

08003bd0 <TIM_OC4_SetConfig>:
 8003bd0:	b480      	push	{r7}
 8003bd2:	b087      	sub	sp, #28
 8003bd4:	af00      	add	r7, sp, #0
 8003bd6:	6078      	str	r0, [r7, #4]
 8003bd8:	6039      	str	r1, [r7, #0]
 8003bda:	687b      	ldr	r3, [r7, #4]
 8003bdc:	6a1b      	ldr	r3, [r3, #32]
 8003bde:	613b      	str	r3, [r7, #16]
 8003be0:	687b      	ldr	r3, [r7, #4]
 8003be2:	6a1b      	ldr	r3, [r3, #32]
 8003be4:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8003be8:	687b      	ldr	r3, [r7, #4]
 8003bea:	621a      	str	r2, [r3, #32]
 8003bec:	687b      	ldr	r3, [r7, #4]
 8003bee:	685b      	ldr	r3, [r3, #4]
 8003bf0:	617b      	str	r3, [r7, #20]
 8003bf2:	687b      	ldr	r3, [r7, #4]
 8003bf4:	69db      	ldr	r3, [r3, #28]
 8003bf6:	60fb      	str	r3, [r7, #12]
 8003bf8:	68fb      	ldr	r3, [r7, #12]
 8003bfa:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8003bfe:	60fb      	str	r3, [r7, #12]
 8003c00:	68fb      	ldr	r3, [r7, #12]
 8003c02:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8003c06:	60fb      	str	r3, [r7, #12]
 8003c08:	683b      	ldr	r3, [r7, #0]
 8003c0a:	681b      	ldr	r3, [r3, #0]
 8003c0c:	021b      	lsls	r3, r3, #8
 8003c0e:	68fa      	ldr	r2, [r7, #12]
 8003c10:	4313      	orrs	r3, r2
 8003c12:	60fb      	str	r3, [r7, #12]
 8003c14:	693b      	ldr	r3, [r7, #16]
 8003c16:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8003c1a:	613b      	str	r3, [r7, #16]
 8003c1c:	683b      	ldr	r3, [r7, #0]
 8003c1e:	689b      	ldr	r3, [r3, #8]
 8003c20:	031b      	lsls	r3, r3, #12
 8003c22:	693a      	ldr	r2, [r7, #16]
 8003c24:	4313      	orrs	r3, r2
 8003c26:	613b      	str	r3, [r7, #16]
 8003c28:	687b      	ldr	r3, [r7, #4]
 8003c2a:	4a0f      	ldr	r2, [pc, #60]	@ (8003c68 <TIM_OC4_SetConfig+0x98>)
 8003c2c:	4293      	cmp	r3, r2
 8003c2e:	d109      	bne.n	8003c44 <TIM_OC4_SetConfig+0x74>
 8003c30:	697b      	ldr	r3, [r7, #20]
 8003c32:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8003c36:	617b      	str	r3, [r7, #20]
 8003c38:	683b      	ldr	r3, [r7, #0]
 8003c3a:	695b      	ldr	r3, [r3, #20]
 8003c3c:	019b      	lsls	r3, r3, #6
 8003c3e:	697a      	ldr	r2, [r7, #20]
 8003c40:	4313      	orrs	r3, r2
 8003c42:	617b      	str	r3, [r7, #20]
 8003c44:	687b      	ldr	r3, [r7, #4]
 8003c46:	697a      	ldr	r2, [r7, #20]
 8003c48:	605a      	str	r2, [r3, #4]
 8003c4a:	687b      	ldr	r3, [r7, #4]
 8003c4c:	68fa      	ldr	r2, [r7, #12]
 8003c4e:	61da      	str	r2, [r3, #28]
 8003c50:	683b      	ldr	r3, [r7, #0]
 8003c52:	685a      	ldr	r2, [r3, #4]
 8003c54:	687b      	ldr	r3, [r7, #4]
 8003c56:	641a      	str	r2, [r3, #64]	@ 0x40
 8003c58:	687b      	ldr	r3, [r7, #4]
 8003c5a:	693a      	ldr	r2, [r7, #16]
 8003c5c:	621a      	str	r2, [r3, #32]
 8003c5e:	bf00      	nop
 8003c60:	371c      	adds	r7, #28
 8003c62:	46bd      	mov	sp, r7
 8003c64:	bc80      	pop	{r7}
 8003c66:	4770      	bx	lr
 8003c68:	40012c00 	.word	0x40012c00

08003c6c <TIM_TI1_ConfigInputStage>:
 8003c6c:	b480      	push	{r7}
 8003c6e:	b087      	sub	sp, #28
 8003c70:	af00      	add	r7, sp, #0
 8003c72:	60f8      	str	r0, [r7, #12]
 8003c74:	60b9      	str	r1, [r7, #8]
 8003c76:	607a      	str	r2, [r7, #4]
 8003c78:	68fb      	ldr	r3, [r7, #12]
 8003c7a:	6a1b      	ldr	r3, [r3, #32]
 8003c7c:	617b      	str	r3, [r7, #20]
 8003c7e:	68fb      	ldr	r3, [r7, #12]
 8003c80:	6a1b      	ldr	r3, [r3, #32]
 8003c82:	f023 0201 	bic.w	r2, r3, #1
 8003c86:	68fb      	ldr	r3, [r7, #12]
 8003c88:	621a      	str	r2, [r3, #32]
 8003c8a:	68fb      	ldr	r3, [r7, #12]
 8003c8c:	699b      	ldr	r3, [r3, #24]
 8003c8e:	613b      	str	r3, [r7, #16]
 8003c90:	693b      	ldr	r3, [r7, #16]
 8003c92:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8003c96:	613b      	str	r3, [r7, #16]
 8003c98:	687b      	ldr	r3, [r7, #4]
 8003c9a:	011b      	lsls	r3, r3, #4
 8003c9c:	693a      	ldr	r2, [r7, #16]
 8003c9e:	4313      	orrs	r3, r2
 8003ca0:	613b      	str	r3, [r7, #16]
 8003ca2:	697b      	ldr	r3, [r7, #20]
 8003ca4:	f023 030a 	bic.w	r3, r3, #10
 8003ca8:	617b      	str	r3, [r7, #20]
 8003caa:	697a      	ldr	r2, [r7, #20]
 8003cac:	68bb      	ldr	r3, [r7, #8]
 8003cae:	4313      	orrs	r3, r2
 8003cb0:	617b      	str	r3, [r7, #20]
 8003cb2:	68fb      	ldr	r3, [r7, #12]
 8003cb4:	693a      	ldr	r2, [r7, #16]
 8003cb6:	619a      	str	r2, [r3, #24]
 8003cb8:	68fb      	ldr	r3, [r7, #12]
 8003cba:	697a      	ldr	r2, [r7, #20]
 8003cbc:	621a      	str	r2, [r3, #32]
 8003cbe:	bf00      	nop
 8003cc0:	371c      	adds	r7, #28
 8003cc2:	46bd      	mov	sp, r7
 8003cc4:	bc80      	pop	{r7}
 8003cc6:	4770      	bx	lr

08003cc8 <TIM_TI2_ConfigInputStage>:
 8003cc8:	b480      	push	{r7}
 8003cca:	b087      	sub	sp, #28
 8003ccc:	af00      	add	r7, sp, #0
 8003cce:	60f8      	str	r0, [r7, #12]
 8003cd0:	60b9      	str	r1, [r7, #8]
 8003cd2:	607a      	str	r2, [r7, #4]
 8003cd4:	68fb      	ldr	r3, [r7, #12]
 8003cd6:	6a1b      	ldr	r3, [r3, #32]
 8003cd8:	617b      	str	r3, [r7, #20]
 8003cda:	68fb      	ldr	r3, [r7, #12]
 8003cdc:	6a1b      	ldr	r3, [r3, #32]
 8003cde:	f023 0210 	bic.w	r2, r3, #16
 8003ce2:	68fb      	ldr	r3, [r7, #12]
 8003ce4:	621a      	str	r2, [r3, #32]
 8003ce6:	68fb      	ldr	r3, [r7, #12]
 8003ce8:	699b      	ldr	r3, [r3, #24]
 8003cea:	613b      	str	r3, [r7, #16]
 8003cec:	693b      	ldr	r3, [r7, #16]
 8003cee:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8003cf2:	613b      	str	r3, [r7, #16]
 8003cf4:	687b      	ldr	r3, [r7, #4]
 8003cf6:	031b      	lsls	r3, r3, #12
 8003cf8:	693a      	ldr	r2, [r7, #16]
 8003cfa:	4313      	orrs	r3, r2
 8003cfc:	613b      	str	r3, [r7, #16]
 8003cfe:	697b      	ldr	r3, [r7, #20]
 8003d00:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8003d04:	617b      	str	r3, [r7, #20]
 8003d06:	68bb      	ldr	r3, [r7, #8]
 8003d08:	011b      	lsls	r3, r3, #4
 8003d0a:	697a      	ldr	r2, [r7, #20]
 8003d0c:	4313      	orrs	r3, r2
 8003d0e:	617b      	str	r3, [r7, #20]
 8003d10:	68fb      	ldr	r3, [r7, #12]
 8003d12:	693a      	ldr	r2, [r7, #16]
 8003d14:	619a      	str	r2, [r3, #24]
 8003d16:	68fb      	ldr	r3, [r7, #12]
 8003d18:	697a      	ldr	r2, [r7, #20]
 8003d1a:	621a      	str	r2, [r3, #32]
 8003d1c:	bf00      	nop
 8003d1e:	371c      	adds	r7, #28
 8003d20:	46bd      	mov	sp, r7
 8003d22:	bc80      	pop	{r7}
 8003d24:	4770      	bx	lr

08003d26 <TIM_ITRx_SetConfig>:
 8003d26:	b480      	push	{r7}
 8003d28:	b085      	sub	sp, #20
 8003d2a:	af00      	add	r7, sp, #0
 8003d2c:	6078      	str	r0, [r7, #4]
 8003d2e:	6039      	str	r1, [r7, #0]
 8003d30:	687b      	ldr	r3, [r7, #4]
 8003d32:	689b      	ldr	r3, [r3, #8]
 8003d34:	60fb      	str	r3, [r7, #12]
 8003d36:	68fb      	ldr	r3, [r7, #12]
 8003d38:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8003d3c:	60fb      	str	r3, [r7, #12]
 8003d3e:	683a      	ldr	r2, [r7, #0]
 8003d40:	68fb      	ldr	r3, [r7, #12]
 8003d42:	4313      	orrs	r3, r2
 8003d44:	f043 0307 	orr.w	r3, r3, #7
 8003d48:	60fb      	str	r3, [r7, #12]
 8003d4a:	687b      	ldr	r3, [r7, #4]
 8003d4c:	68fa      	ldr	r2, [r7, #12]
 8003d4e:	609a      	str	r2, [r3, #8]
 8003d50:	bf00      	nop
 8003d52:	3714      	adds	r7, #20
 8003d54:	46bd      	mov	sp, r7
 8003d56:	bc80      	pop	{r7}
 8003d58:	4770      	bx	lr

08003d5a <TIM_ETR_SetConfig>:
 8003d5a:	b480      	push	{r7}
 8003d5c:	b087      	sub	sp, #28
 8003d5e:	af00      	add	r7, sp, #0
 8003d60:	60f8      	str	r0, [r7, #12]
 8003d62:	60b9      	str	r1, [r7, #8]
 8003d64:	607a      	str	r2, [r7, #4]
 8003d66:	603b      	str	r3, [r7, #0]
 8003d68:	68fb      	ldr	r3, [r7, #12]
 8003d6a:	689b      	ldr	r3, [r3, #8]
 8003d6c:	617b      	str	r3, [r7, #20]
 8003d6e:	697b      	ldr	r3, [r7, #20]
 8003d70:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8003d74:	617b      	str	r3, [r7, #20]
 8003d76:	683b      	ldr	r3, [r7, #0]
 8003d78:	021a      	lsls	r2, r3, #8
 8003d7a:	687b      	ldr	r3, [r7, #4]
 8003d7c:	431a      	orrs	r2, r3
 8003d7e:	68bb      	ldr	r3, [r7, #8]
 8003d80:	4313      	orrs	r3, r2
 8003d82:	697a      	ldr	r2, [r7, #20]
 8003d84:	4313      	orrs	r3, r2
 8003d86:	617b      	str	r3, [r7, #20]
 8003d88:	68fb      	ldr	r3, [r7, #12]
 8003d8a:	697a      	ldr	r2, [r7, #20]
 8003d8c:	609a      	str	r2, [r3, #8]
 8003d8e:	bf00      	nop
 8003d90:	371c      	adds	r7, #28
 8003d92:	46bd      	mov	sp, r7
 8003d94:	bc80      	pop	{r7}
 8003d96:	4770      	bx	lr

08003d98 <HAL_TIMEx_MasterConfigSynchronization>:
 8003d98:	b480      	push	{r7}
 8003d9a:	b085      	sub	sp, #20
 8003d9c:	af00      	add	r7, sp, #0
 8003d9e:	6078      	str	r0, [r7, #4]
 8003da0:	6039      	str	r1, [r7, #0]
 8003da2:	687b      	ldr	r3, [r7, #4]
 8003da4:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8003da8:	2b01      	cmp	r3, #1
 8003daa:	d101      	bne.n	8003db0 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8003dac:	2302      	movs	r3, #2
 8003dae:	e046      	b.n	8003e3e <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8003db0:	687b      	ldr	r3, [r7, #4]
 8003db2:	2201      	movs	r2, #1
 8003db4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003db8:	687b      	ldr	r3, [r7, #4]
 8003dba:	2202      	movs	r2, #2
 8003dbc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003dc0:	687b      	ldr	r3, [r7, #4]
 8003dc2:	681b      	ldr	r3, [r3, #0]
 8003dc4:	685b      	ldr	r3, [r3, #4]
 8003dc6:	60fb      	str	r3, [r7, #12]
 8003dc8:	687b      	ldr	r3, [r7, #4]
 8003dca:	681b      	ldr	r3, [r3, #0]
 8003dcc:	689b      	ldr	r3, [r3, #8]
 8003dce:	60bb      	str	r3, [r7, #8]
 8003dd0:	68fb      	ldr	r3, [r7, #12]
 8003dd2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8003dd6:	60fb      	str	r3, [r7, #12]
 8003dd8:	683b      	ldr	r3, [r7, #0]
 8003dda:	681b      	ldr	r3, [r3, #0]
 8003ddc:	68fa      	ldr	r2, [r7, #12]
 8003dde:	4313      	orrs	r3, r2
 8003de0:	60fb      	str	r3, [r7, #12]
 8003de2:	687b      	ldr	r3, [r7, #4]
 8003de4:	681b      	ldr	r3, [r3, #0]
 8003de6:	68fa      	ldr	r2, [r7, #12]
 8003de8:	605a      	str	r2, [r3, #4]
 8003dea:	687b      	ldr	r3, [r7, #4]
 8003dec:	681b      	ldr	r3, [r3, #0]
 8003dee:	4a16      	ldr	r2, [pc, #88]	@ (8003e48 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8003df0:	4293      	cmp	r3, r2
 8003df2:	d00e      	beq.n	8003e12 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003df4:	687b      	ldr	r3, [r7, #4]
 8003df6:	681b      	ldr	r3, [r3, #0]
 8003df8:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003dfc:	d009      	beq.n	8003e12 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003dfe:	687b      	ldr	r3, [r7, #4]
 8003e00:	681b      	ldr	r3, [r3, #0]
 8003e02:	4a12      	ldr	r2, [pc, #72]	@ (8003e4c <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8003e04:	4293      	cmp	r3, r2
 8003e06:	d004      	beq.n	8003e12 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003e08:	687b      	ldr	r3, [r7, #4]
 8003e0a:	681b      	ldr	r3, [r3, #0]
 8003e0c:	4a10      	ldr	r2, [pc, #64]	@ (8003e50 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 8003e0e:	4293      	cmp	r3, r2
 8003e10:	d10c      	bne.n	8003e2c <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8003e12:	68bb      	ldr	r3, [r7, #8]
 8003e14:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8003e18:	60bb      	str	r3, [r7, #8]
 8003e1a:	683b      	ldr	r3, [r7, #0]
 8003e1c:	685b      	ldr	r3, [r3, #4]
 8003e1e:	68ba      	ldr	r2, [r7, #8]
 8003e20:	4313      	orrs	r3, r2
 8003e22:	60bb      	str	r3, [r7, #8]
 8003e24:	687b      	ldr	r3, [r7, #4]
 8003e26:	681b      	ldr	r3, [r3, #0]
 8003e28:	68ba      	ldr	r2, [r7, #8]
 8003e2a:	609a      	str	r2, [r3, #8]
 8003e2c:	687b      	ldr	r3, [r7, #4]
 8003e2e:	2201      	movs	r2, #1
 8003e30:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003e34:	687b      	ldr	r3, [r7, #4]
 8003e36:	2200      	movs	r2, #0
 8003e38:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003e3c:	2300      	movs	r3, #0
 8003e3e:	4618      	mov	r0, r3
 8003e40:	3714      	adds	r7, #20
 8003e42:	46bd      	mov	sp, r7
 8003e44:	bc80      	pop	{r7}
 8003e46:	4770      	bx	lr
 8003e48:	40012c00 	.word	0x40012c00
 8003e4c:	40000400 	.word	0x40000400
 8003e50:	40000800 	.word	0x40000800

08003e54 <HAL_UART_Init>:
 8003e54:	b580      	push	{r7, lr}
 8003e56:	b082      	sub	sp, #8
 8003e58:	af00      	add	r7, sp, #0
 8003e5a:	6078      	str	r0, [r7, #4]
 8003e5c:	687b      	ldr	r3, [r7, #4]
 8003e5e:	2b00      	cmp	r3, #0
 8003e60:	d101      	bne.n	8003e66 <HAL_UART_Init+0x12>
 8003e62:	2301      	movs	r3, #1
 8003e64:	e042      	b.n	8003eec <HAL_UART_Init+0x98>
 8003e66:	687b      	ldr	r3, [r7, #4]
 8003e68:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003e6c:	b2db      	uxtb	r3, r3
 8003e6e:	2b00      	cmp	r3, #0
 8003e70:	d106      	bne.n	8003e80 <HAL_UART_Init+0x2c>
 8003e72:	687b      	ldr	r3, [r7, #4]
 8003e74:	2200      	movs	r2, #0
 8003e76:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003e7a:	6878      	ldr	r0, [r7, #4]
 8003e7c:	f7fd fcda 	bl	8001834 <HAL_UART_MspInit>
 8003e80:	687b      	ldr	r3, [r7, #4]
 8003e82:	2224      	movs	r2, #36	@ 0x24
 8003e84:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003e88:	687b      	ldr	r3, [r7, #4]
 8003e8a:	681b      	ldr	r3, [r3, #0]
 8003e8c:	68da      	ldr	r2, [r3, #12]
 8003e8e:	687b      	ldr	r3, [r7, #4]
 8003e90:	681b      	ldr	r3, [r3, #0]
 8003e92:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8003e96:	60da      	str	r2, [r3, #12]
 8003e98:	6878      	ldr	r0, [r7, #4]
 8003e9a:	f000 fc7f 	bl	800479c <UART_SetConfig>
 8003e9e:	687b      	ldr	r3, [r7, #4]
 8003ea0:	681b      	ldr	r3, [r3, #0]
 8003ea2:	691a      	ldr	r2, [r3, #16]
 8003ea4:	687b      	ldr	r3, [r7, #4]
 8003ea6:	681b      	ldr	r3, [r3, #0]
 8003ea8:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8003eac:	611a      	str	r2, [r3, #16]
 8003eae:	687b      	ldr	r3, [r7, #4]
 8003eb0:	681b      	ldr	r3, [r3, #0]
 8003eb2:	695a      	ldr	r2, [r3, #20]
 8003eb4:	687b      	ldr	r3, [r7, #4]
 8003eb6:	681b      	ldr	r3, [r3, #0]
 8003eb8:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8003ebc:	615a      	str	r2, [r3, #20]
 8003ebe:	687b      	ldr	r3, [r7, #4]
 8003ec0:	681b      	ldr	r3, [r3, #0]
 8003ec2:	68da      	ldr	r2, [r3, #12]
 8003ec4:	687b      	ldr	r3, [r7, #4]
 8003ec6:	681b      	ldr	r3, [r3, #0]
 8003ec8:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8003ecc:	60da      	str	r2, [r3, #12]
 8003ece:	687b      	ldr	r3, [r7, #4]
 8003ed0:	2200      	movs	r2, #0
 8003ed2:	645a      	str	r2, [r3, #68]	@ 0x44
 8003ed4:	687b      	ldr	r3, [r7, #4]
 8003ed6:	2220      	movs	r2, #32
 8003ed8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003edc:	687b      	ldr	r3, [r7, #4]
 8003ede:	2220      	movs	r2, #32
 8003ee0:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003ee4:	687b      	ldr	r3, [r7, #4]
 8003ee6:	2200      	movs	r2, #0
 8003ee8:	635a      	str	r2, [r3, #52]	@ 0x34
 8003eea:	2300      	movs	r3, #0
 8003eec:	4618      	mov	r0, r3
 8003eee:	3708      	adds	r7, #8
 8003ef0:	46bd      	mov	sp, r7
 8003ef2:	bd80      	pop	{r7, pc}

08003ef4 <HAL_UART_IRQHandler>:
 8003ef4:	b580      	push	{r7, lr}
 8003ef6:	b0ba      	sub	sp, #232	@ 0xe8
 8003ef8:	af00      	add	r7, sp, #0
 8003efa:	6078      	str	r0, [r7, #4]
 8003efc:	687b      	ldr	r3, [r7, #4]
 8003efe:	681b      	ldr	r3, [r3, #0]
 8003f00:	681b      	ldr	r3, [r3, #0]
 8003f02:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8003f06:	687b      	ldr	r3, [r7, #4]
 8003f08:	681b      	ldr	r3, [r3, #0]
 8003f0a:	68db      	ldr	r3, [r3, #12]
 8003f0c:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8003f10:	687b      	ldr	r3, [r7, #4]
 8003f12:	681b      	ldr	r3, [r3, #0]
 8003f14:	695b      	ldr	r3, [r3, #20]
 8003f16:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8003f1a:	2300      	movs	r3, #0
 8003f1c:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8003f20:	2300      	movs	r3, #0
 8003f22:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8003f26:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003f2a:	f003 030f 	and.w	r3, r3, #15
 8003f2e:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8003f32:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8003f36:	2b00      	cmp	r3, #0
 8003f38:	d10f      	bne.n	8003f5a <HAL_UART_IRQHandler+0x66>
 8003f3a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003f3e:	f003 0320 	and.w	r3, r3, #32
 8003f42:	2b00      	cmp	r3, #0
 8003f44:	d009      	beq.n	8003f5a <HAL_UART_IRQHandler+0x66>
 8003f46:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003f4a:	f003 0320 	and.w	r3, r3, #32
 8003f4e:	2b00      	cmp	r3, #0
 8003f50:	d003      	beq.n	8003f5a <HAL_UART_IRQHandler+0x66>
 8003f52:	6878      	ldr	r0, [r7, #4]
 8003f54:	f000 fb63 	bl	800461e <UART_Receive_IT>
 8003f58:	e25b      	b.n	8004412 <HAL_UART_IRQHandler+0x51e>
 8003f5a:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8003f5e:	2b00      	cmp	r3, #0
 8003f60:	f000 80de 	beq.w	8004120 <HAL_UART_IRQHandler+0x22c>
 8003f64:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8003f68:	f003 0301 	and.w	r3, r3, #1
 8003f6c:	2b00      	cmp	r3, #0
 8003f6e:	d106      	bne.n	8003f7e <HAL_UART_IRQHandler+0x8a>
 8003f70:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003f74:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8003f78:	2b00      	cmp	r3, #0
 8003f7a:	f000 80d1 	beq.w	8004120 <HAL_UART_IRQHandler+0x22c>
 8003f7e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003f82:	f003 0301 	and.w	r3, r3, #1
 8003f86:	2b00      	cmp	r3, #0
 8003f88:	d00b      	beq.n	8003fa2 <HAL_UART_IRQHandler+0xae>
 8003f8a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003f8e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003f92:	2b00      	cmp	r3, #0
 8003f94:	d005      	beq.n	8003fa2 <HAL_UART_IRQHandler+0xae>
 8003f96:	687b      	ldr	r3, [r7, #4]
 8003f98:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003f9a:	f043 0201 	orr.w	r2, r3, #1
 8003f9e:	687b      	ldr	r3, [r7, #4]
 8003fa0:	645a      	str	r2, [r3, #68]	@ 0x44
 8003fa2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003fa6:	f003 0304 	and.w	r3, r3, #4
 8003faa:	2b00      	cmp	r3, #0
 8003fac:	d00b      	beq.n	8003fc6 <HAL_UART_IRQHandler+0xd2>
 8003fae:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8003fb2:	f003 0301 	and.w	r3, r3, #1
 8003fb6:	2b00      	cmp	r3, #0
 8003fb8:	d005      	beq.n	8003fc6 <HAL_UART_IRQHandler+0xd2>
 8003fba:	687b      	ldr	r3, [r7, #4]
 8003fbc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003fbe:	f043 0202 	orr.w	r2, r3, #2
 8003fc2:	687b      	ldr	r3, [r7, #4]
 8003fc4:	645a      	str	r2, [r3, #68]	@ 0x44
 8003fc6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003fca:	f003 0302 	and.w	r3, r3, #2
 8003fce:	2b00      	cmp	r3, #0
 8003fd0:	d00b      	beq.n	8003fea <HAL_UART_IRQHandler+0xf6>
 8003fd2:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8003fd6:	f003 0301 	and.w	r3, r3, #1
 8003fda:	2b00      	cmp	r3, #0
 8003fdc:	d005      	beq.n	8003fea <HAL_UART_IRQHandler+0xf6>
 8003fde:	687b      	ldr	r3, [r7, #4]
 8003fe0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003fe2:	f043 0204 	orr.w	r2, r3, #4
 8003fe6:	687b      	ldr	r3, [r7, #4]
 8003fe8:	645a      	str	r2, [r3, #68]	@ 0x44
 8003fea:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003fee:	f003 0308 	and.w	r3, r3, #8
 8003ff2:	2b00      	cmp	r3, #0
 8003ff4:	d011      	beq.n	800401a <HAL_UART_IRQHandler+0x126>
 8003ff6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003ffa:	f003 0320 	and.w	r3, r3, #32
 8003ffe:	2b00      	cmp	r3, #0
 8004000:	d105      	bne.n	800400e <HAL_UART_IRQHandler+0x11a>
 8004002:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8004006:	f003 0301 	and.w	r3, r3, #1
 800400a:	2b00      	cmp	r3, #0
 800400c:	d005      	beq.n	800401a <HAL_UART_IRQHandler+0x126>
 800400e:	687b      	ldr	r3, [r7, #4]
 8004010:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004012:	f043 0208 	orr.w	r2, r3, #8
 8004016:	687b      	ldr	r3, [r7, #4]
 8004018:	645a      	str	r2, [r3, #68]	@ 0x44
 800401a:	687b      	ldr	r3, [r7, #4]
 800401c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800401e:	2b00      	cmp	r3, #0
 8004020:	f000 81f2 	beq.w	8004408 <HAL_UART_IRQHandler+0x514>
 8004024:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8004028:	f003 0320 	and.w	r3, r3, #32
 800402c:	2b00      	cmp	r3, #0
 800402e:	d008      	beq.n	8004042 <HAL_UART_IRQHandler+0x14e>
 8004030:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004034:	f003 0320 	and.w	r3, r3, #32
 8004038:	2b00      	cmp	r3, #0
 800403a:	d002      	beq.n	8004042 <HAL_UART_IRQHandler+0x14e>
 800403c:	6878      	ldr	r0, [r7, #4]
 800403e:	f000 faee 	bl	800461e <UART_Receive_IT>
 8004042:	687b      	ldr	r3, [r7, #4]
 8004044:	681b      	ldr	r3, [r3, #0]
 8004046:	695b      	ldr	r3, [r3, #20]
 8004048:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800404c:	2b00      	cmp	r3, #0
 800404e:	bf14      	ite	ne
 8004050:	2301      	movne	r3, #1
 8004052:	2300      	moveq	r3, #0
 8004054:	b2db      	uxtb	r3, r3
 8004056:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 800405a:	687b      	ldr	r3, [r7, #4]
 800405c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800405e:	f003 0308 	and.w	r3, r3, #8
 8004062:	2b00      	cmp	r3, #0
 8004064:	d103      	bne.n	800406e <HAL_UART_IRQHandler+0x17a>
 8004066:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 800406a:	2b00      	cmp	r3, #0
 800406c:	d04f      	beq.n	800410e <HAL_UART_IRQHandler+0x21a>
 800406e:	6878      	ldr	r0, [r7, #4]
 8004070:	f000 f9f8 	bl	8004464 <UART_EndRxTransfer>
 8004074:	687b      	ldr	r3, [r7, #4]
 8004076:	681b      	ldr	r3, [r3, #0]
 8004078:	695b      	ldr	r3, [r3, #20]
 800407a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800407e:	2b00      	cmp	r3, #0
 8004080:	d041      	beq.n	8004106 <HAL_UART_IRQHandler+0x212>
 8004082:	687b      	ldr	r3, [r7, #4]
 8004084:	681b      	ldr	r3, [r3, #0]
 8004086:	3314      	adds	r3, #20
 8004088:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 800408c:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8004090:	e853 3f00 	ldrex	r3, [r3]
 8004094:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8004098:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 800409c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80040a0:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 80040a4:	687b      	ldr	r3, [r7, #4]
 80040a6:	681b      	ldr	r3, [r3, #0]
 80040a8:	3314      	adds	r3, #20
 80040aa:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 80040ae:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 80040b2:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 80040b6:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 80040ba:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 80040be:	e841 2300 	strex	r3, r2, [r1]
 80040c2:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80040c6:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 80040ca:	2b00      	cmp	r3, #0
 80040cc:	d1d9      	bne.n	8004082 <HAL_UART_IRQHandler+0x18e>
 80040ce:	687b      	ldr	r3, [r7, #4]
 80040d0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80040d2:	2b00      	cmp	r3, #0
 80040d4:	d013      	beq.n	80040fe <HAL_UART_IRQHandler+0x20a>
 80040d6:	687b      	ldr	r3, [r7, #4]
 80040d8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80040da:	4a7e      	ldr	r2, [pc, #504]	@ (80042d4 <HAL_UART_IRQHandler+0x3e0>)
 80040dc:	635a      	str	r2, [r3, #52]	@ 0x34
 80040de:	687b      	ldr	r3, [r7, #4]
 80040e0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80040e2:	4618      	mov	r0, r3
 80040e4:	f7fe fa2c 	bl	8002540 <HAL_DMA_Abort_IT>
 80040e8:	4603      	mov	r3, r0
 80040ea:	2b00      	cmp	r3, #0
 80040ec:	d016      	beq.n	800411c <HAL_UART_IRQHandler+0x228>
 80040ee:	687b      	ldr	r3, [r7, #4]
 80040f0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80040f2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80040f4:	687a      	ldr	r2, [r7, #4]
 80040f6:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 80040f8:	4610      	mov	r0, r2
 80040fa:	4798      	blx	r3
 80040fc:	e00e      	b.n	800411c <HAL_UART_IRQHandler+0x228>
 80040fe:	6878      	ldr	r0, [r7, #4]
 8004100:	f000 f99c 	bl	800443c <HAL_UART_ErrorCallback>
 8004104:	e00a      	b.n	800411c <HAL_UART_IRQHandler+0x228>
 8004106:	6878      	ldr	r0, [r7, #4]
 8004108:	f000 f998 	bl	800443c <HAL_UART_ErrorCallback>
 800410c:	e006      	b.n	800411c <HAL_UART_IRQHandler+0x228>
 800410e:	6878      	ldr	r0, [r7, #4]
 8004110:	f000 f994 	bl	800443c <HAL_UART_ErrorCallback>
 8004114:	687b      	ldr	r3, [r7, #4]
 8004116:	2200      	movs	r2, #0
 8004118:	645a      	str	r2, [r3, #68]	@ 0x44
 800411a:	e175      	b.n	8004408 <HAL_UART_IRQHandler+0x514>
 800411c:	bf00      	nop
 800411e:	e173      	b.n	8004408 <HAL_UART_IRQHandler+0x514>
 8004120:	687b      	ldr	r3, [r7, #4]
 8004122:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004124:	2b01      	cmp	r3, #1
 8004126:	f040 814f 	bne.w	80043c8 <HAL_UART_IRQHandler+0x4d4>
 800412a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800412e:	f003 0310 	and.w	r3, r3, #16
 8004132:	2b00      	cmp	r3, #0
 8004134:	f000 8148 	beq.w	80043c8 <HAL_UART_IRQHandler+0x4d4>
 8004138:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800413c:	f003 0310 	and.w	r3, r3, #16
 8004140:	2b00      	cmp	r3, #0
 8004142:	f000 8141 	beq.w	80043c8 <HAL_UART_IRQHandler+0x4d4>
 8004146:	2300      	movs	r3, #0
 8004148:	60bb      	str	r3, [r7, #8]
 800414a:	687b      	ldr	r3, [r7, #4]
 800414c:	681b      	ldr	r3, [r3, #0]
 800414e:	681b      	ldr	r3, [r3, #0]
 8004150:	60bb      	str	r3, [r7, #8]
 8004152:	687b      	ldr	r3, [r7, #4]
 8004154:	681b      	ldr	r3, [r3, #0]
 8004156:	685b      	ldr	r3, [r3, #4]
 8004158:	60bb      	str	r3, [r7, #8]
 800415a:	68bb      	ldr	r3, [r7, #8]
 800415c:	687b      	ldr	r3, [r7, #4]
 800415e:	681b      	ldr	r3, [r3, #0]
 8004160:	695b      	ldr	r3, [r3, #20]
 8004162:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004166:	2b00      	cmp	r3, #0
 8004168:	f000 80b6 	beq.w	80042d8 <HAL_UART_IRQHandler+0x3e4>
 800416c:	687b      	ldr	r3, [r7, #4]
 800416e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004170:	681b      	ldr	r3, [r3, #0]
 8004172:	685b      	ldr	r3, [r3, #4]
 8004174:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8004178:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 800417c:	2b00      	cmp	r3, #0
 800417e:	f000 8145 	beq.w	800440c <HAL_UART_IRQHandler+0x518>
 8004182:	687b      	ldr	r3, [r7, #4]
 8004184:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8004186:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 800418a:	429a      	cmp	r2, r3
 800418c:	f080 813e 	bcs.w	800440c <HAL_UART_IRQHandler+0x518>
 8004190:	687b      	ldr	r3, [r7, #4]
 8004192:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8004196:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8004198:	687b      	ldr	r3, [r7, #4]
 800419a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800419c:	699b      	ldr	r3, [r3, #24]
 800419e:	2b20      	cmp	r3, #32
 80041a0:	f000 8088 	beq.w	80042b4 <HAL_UART_IRQHandler+0x3c0>
 80041a4:	687b      	ldr	r3, [r7, #4]
 80041a6:	681b      	ldr	r3, [r3, #0]
 80041a8:	330c      	adds	r3, #12
 80041aa:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80041ae:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 80041b2:	e853 3f00 	ldrex	r3, [r3]
 80041b6:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80041ba:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80041be:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80041c2:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 80041c6:	687b      	ldr	r3, [r7, #4]
 80041c8:	681b      	ldr	r3, [r3, #0]
 80041ca:	330c      	adds	r3, #12
 80041cc:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 80041d0:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 80041d4:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80041d8:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 80041dc:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 80041e0:	e841 2300 	strex	r3, r2, [r1]
 80041e4:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 80041e8:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80041ec:	2b00      	cmp	r3, #0
 80041ee:	d1d9      	bne.n	80041a4 <HAL_UART_IRQHandler+0x2b0>
 80041f0:	687b      	ldr	r3, [r7, #4]
 80041f2:	681b      	ldr	r3, [r3, #0]
 80041f4:	3314      	adds	r3, #20
 80041f6:	677b      	str	r3, [r7, #116]	@ 0x74
 80041f8:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80041fa:	e853 3f00 	ldrex	r3, [r3]
 80041fe:	673b      	str	r3, [r7, #112]	@ 0x70
 8004200:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8004202:	f023 0301 	bic.w	r3, r3, #1
 8004206:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 800420a:	687b      	ldr	r3, [r7, #4]
 800420c:	681b      	ldr	r3, [r3, #0]
 800420e:	3314      	adds	r3, #20
 8004210:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8004214:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 8004218:	67fb      	str	r3, [r7, #124]	@ 0x7c
 800421a:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 800421c:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 8004220:	e841 2300 	strex	r3, r2, [r1]
 8004224:	67bb      	str	r3, [r7, #120]	@ 0x78
 8004226:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8004228:	2b00      	cmp	r3, #0
 800422a:	d1e1      	bne.n	80041f0 <HAL_UART_IRQHandler+0x2fc>
 800422c:	687b      	ldr	r3, [r7, #4]
 800422e:	681b      	ldr	r3, [r3, #0]
 8004230:	3314      	adds	r3, #20
 8004232:	663b      	str	r3, [r7, #96]	@ 0x60
 8004234:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8004236:	e853 3f00 	ldrex	r3, [r3]
 800423a:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800423c:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800423e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8004242:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8004246:	687b      	ldr	r3, [r7, #4]
 8004248:	681b      	ldr	r3, [r3, #0]
 800424a:	3314      	adds	r3, #20
 800424c:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 8004250:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8004252:	66bb      	str	r3, [r7, #104]	@ 0x68
 8004254:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 8004256:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8004258:	e841 2300 	strex	r3, r2, [r1]
 800425c:	667b      	str	r3, [r7, #100]	@ 0x64
 800425e:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8004260:	2b00      	cmp	r3, #0
 8004262:	d1e3      	bne.n	800422c <HAL_UART_IRQHandler+0x338>
 8004264:	687b      	ldr	r3, [r7, #4]
 8004266:	2220      	movs	r2, #32
 8004268:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800426c:	687b      	ldr	r3, [r7, #4]
 800426e:	2200      	movs	r2, #0
 8004270:	631a      	str	r2, [r3, #48]	@ 0x30
 8004272:	687b      	ldr	r3, [r7, #4]
 8004274:	681b      	ldr	r3, [r3, #0]
 8004276:	330c      	adds	r3, #12
 8004278:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800427a:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800427c:	e853 3f00 	ldrex	r3, [r3]
 8004280:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004282:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8004284:	f023 0310 	bic.w	r3, r3, #16
 8004288:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800428c:	687b      	ldr	r3, [r7, #4]
 800428e:	681b      	ldr	r3, [r3, #0]
 8004290:	330c      	adds	r3, #12
 8004292:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 8004296:	65ba      	str	r2, [r7, #88]	@ 0x58
 8004298:	657b      	str	r3, [r7, #84]	@ 0x54
 800429a:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 800429c:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 800429e:	e841 2300 	strex	r3, r2, [r1]
 80042a2:	653b      	str	r3, [r7, #80]	@ 0x50
 80042a4:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80042a6:	2b00      	cmp	r3, #0
 80042a8:	d1e3      	bne.n	8004272 <HAL_UART_IRQHandler+0x37e>
 80042aa:	687b      	ldr	r3, [r7, #4]
 80042ac:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80042ae:	4618      	mov	r0, r3
 80042b0:	f7fe f90b 	bl	80024ca <HAL_DMA_Abort>
 80042b4:	687b      	ldr	r3, [r7, #4]
 80042b6:	2202      	movs	r2, #2
 80042b8:	635a      	str	r2, [r3, #52]	@ 0x34
 80042ba:	687b      	ldr	r3, [r7, #4]
 80042bc:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 80042be:	687b      	ldr	r3, [r7, #4]
 80042c0:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80042c2:	b29b      	uxth	r3, r3
 80042c4:	1ad3      	subs	r3, r2, r3
 80042c6:	b29b      	uxth	r3, r3
 80042c8:	4619      	mov	r1, r3
 80042ca:	6878      	ldr	r0, [r7, #4]
 80042cc:	f000 f8bf 	bl	800444e <HAL_UARTEx_RxEventCallback>
 80042d0:	e09c      	b.n	800440c <HAL_UART_IRQHandler+0x518>
 80042d2:	bf00      	nop
 80042d4:	08004529 	.word	0x08004529
 80042d8:	687b      	ldr	r3, [r7, #4]
 80042da:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 80042dc:	687b      	ldr	r3, [r7, #4]
 80042de:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80042e0:	b29b      	uxth	r3, r3
 80042e2:	1ad3      	subs	r3, r2, r3
 80042e4:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 80042e8:	687b      	ldr	r3, [r7, #4]
 80042ea:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80042ec:	b29b      	uxth	r3, r3
 80042ee:	2b00      	cmp	r3, #0
 80042f0:	f000 808e 	beq.w	8004410 <HAL_UART_IRQHandler+0x51c>
 80042f4:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 80042f8:	2b00      	cmp	r3, #0
 80042fa:	f000 8089 	beq.w	8004410 <HAL_UART_IRQHandler+0x51c>
 80042fe:	687b      	ldr	r3, [r7, #4]
 8004300:	681b      	ldr	r3, [r3, #0]
 8004302:	330c      	adds	r3, #12
 8004304:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004306:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004308:	e853 3f00 	ldrex	r3, [r3]
 800430c:	637b      	str	r3, [r7, #52]	@ 0x34
 800430e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004310:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8004314:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8004318:	687b      	ldr	r3, [r7, #4]
 800431a:	681b      	ldr	r3, [r3, #0]
 800431c:	330c      	adds	r3, #12
 800431e:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 8004322:	647a      	str	r2, [r7, #68]	@ 0x44
 8004324:	643b      	str	r3, [r7, #64]	@ 0x40
 8004326:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8004328:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800432a:	e841 2300 	strex	r3, r2, [r1]
 800432e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004330:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004332:	2b00      	cmp	r3, #0
 8004334:	d1e3      	bne.n	80042fe <HAL_UART_IRQHandler+0x40a>
 8004336:	687b      	ldr	r3, [r7, #4]
 8004338:	681b      	ldr	r3, [r3, #0]
 800433a:	3314      	adds	r3, #20
 800433c:	627b      	str	r3, [r7, #36]	@ 0x24
 800433e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004340:	e853 3f00 	ldrex	r3, [r3]
 8004344:	623b      	str	r3, [r7, #32]
 8004346:	6a3b      	ldr	r3, [r7, #32]
 8004348:	f023 0301 	bic.w	r3, r3, #1
 800434c:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8004350:	687b      	ldr	r3, [r7, #4]
 8004352:	681b      	ldr	r3, [r3, #0]
 8004354:	3314      	adds	r3, #20
 8004356:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 800435a:	633a      	str	r2, [r7, #48]	@ 0x30
 800435c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800435e:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004360:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8004362:	e841 2300 	strex	r3, r2, [r1]
 8004366:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004368:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800436a:	2b00      	cmp	r3, #0
 800436c:	d1e3      	bne.n	8004336 <HAL_UART_IRQHandler+0x442>
 800436e:	687b      	ldr	r3, [r7, #4]
 8004370:	2220      	movs	r2, #32
 8004372:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004376:	687b      	ldr	r3, [r7, #4]
 8004378:	2200      	movs	r2, #0
 800437a:	631a      	str	r2, [r3, #48]	@ 0x30
 800437c:	687b      	ldr	r3, [r7, #4]
 800437e:	681b      	ldr	r3, [r3, #0]
 8004380:	330c      	adds	r3, #12
 8004382:	613b      	str	r3, [r7, #16]
 8004384:	693b      	ldr	r3, [r7, #16]
 8004386:	e853 3f00 	ldrex	r3, [r3]
 800438a:	60fb      	str	r3, [r7, #12]
 800438c:	68fb      	ldr	r3, [r7, #12]
 800438e:	f023 0310 	bic.w	r3, r3, #16
 8004392:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8004396:	687b      	ldr	r3, [r7, #4]
 8004398:	681b      	ldr	r3, [r3, #0]
 800439a:	330c      	adds	r3, #12
 800439c:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 80043a0:	61fa      	str	r2, [r7, #28]
 80043a2:	61bb      	str	r3, [r7, #24]
 80043a4:	69b9      	ldr	r1, [r7, #24]
 80043a6:	69fa      	ldr	r2, [r7, #28]
 80043a8:	e841 2300 	strex	r3, r2, [r1]
 80043ac:	617b      	str	r3, [r7, #20]
 80043ae:	697b      	ldr	r3, [r7, #20]
 80043b0:	2b00      	cmp	r3, #0
 80043b2:	d1e3      	bne.n	800437c <HAL_UART_IRQHandler+0x488>
 80043b4:	687b      	ldr	r3, [r7, #4]
 80043b6:	2202      	movs	r2, #2
 80043b8:	635a      	str	r2, [r3, #52]	@ 0x34
 80043ba:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 80043be:	4619      	mov	r1, r3
 80043c0:	6878      	ldr	r0, [r7, #4]
 80043c2:	f000 f844 	bl	800444e <HAL_UARTEx_RxEventCallback>
 80043c6:	e023      	b.n	8004410 <HAL_UART_IRQHandler+0x51c>
 80043c8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80043cc:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80043d0:	2b00      	cmp	r3, #0
 80043d2:	d009      	beq.n	80043e8 <HAL_UART_IRQHandler+0x4f4>
 80043d4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80043d8:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80043dc:	2b00      	cmp	r3, #0
 80043de:	d003      	beq.n	80043e8 <HAL_UART_IRQHandler+0x4f4>
 80043e0:	6878      	ldr	r0, [r7, #4]
 80043e2:	f000 f8b5 	bl	8004550 <UART_Transmit_IT>
 80043e6:	e014      	b.n	8004412 <HAL_UART_IRQHandler+0x51e>
 80043e8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80043ec:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80043f0:	2b00      	cmp	r3, #0
 80043f2:	d00e      	beq.n	8004412 <HAL_UART_IRQHandler+0x51e>
 80043f4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80043f8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80043fc:	2b00      	cmp	r3, #0
 80043fe:	d008      	beq.n	8004412 <HAL_UART_IRQHandler+0x51e>
 8004400:	6878      	ldr	r0, [r7, #4]
 8004402:	f000 f8f4 	bl	80045ee <UART_EndTransmit_IT>
 8004406:	e004      	b.n	8004412 <HAL_UART_IRQHandler+0x51e>
 8004408:	bf00      	nop
 800440a:	e002      	b.n	8004412 <HAL_UART_IRQHandler+0x51e>
 800440c:	bf00      	nop
 800440e:	e000      	b.n	8004412 <HAL_UART_IRQHandler+0x51e>
 8004410:	bf00      	nop
 8004412:	37e8      	adds	r7, #232	@ 0xe8
 8004414:	46bd      	mov	sp, r7
 8004416:	bd80      	pop	{r7, pc}

08004418 <HAL_UART_TxCpltCallback>:
 8004418:	b480      	push	{r7}
 800441a:	b083      	sub	sp, #12
 800441c:	af00      	add	r7, sp, #0
 800441e:	6078      	str	r0, [r7, #4]
 8004420:	bf00      	nop
 8004422:	370c      	adds	r7, #12
 8004424:	46bd      	mov	sp, r7
 8004426:	bc80      	pop	{r7}
 8004428:	4770      	bx	lr

0800442a <HAL_UART_RxCpltCallback>:
 800442a:	b480      	push	{r7}
 800442c:	b083      	sub	sp, #12
 800442e:	af00      	add	r7, sp, #0
 8004430:	6078      	str	r0, [r7, #4]
 8004432:	bf00      	nop
 8004434:	370c      	adds	r7, #12
 8004436:	46bd      	mov	sp, r7
 8004438:	bc80      	pop	{r7}
 800443a:	4770      	bx	lr

0800443c <HAL_UART_ErrorCallback>:
 800443c:	b480      	push	{r7}
 800443e:	b083      	sub	sp, #12
 8004440:	af00      	add	r7, sp, #0
 8004442:	6078      	str	r0, [r7, #4]
 8004444:	bf00      	nop
 8004446:	370c      	adds	r7, #12
 8004448:	46bd      	mov	sp, r7
 800444a:	bc80      	pop	{r7}
 800444c:	4770      	bx	lr

0800444e <HAL_UARTEx_RxEventCallback>:
 800444e:	b480      	push	{r7}
 8004450:	b083      	sub	sp, #12
 8004452:	af00      	add	r7, sp, #0
 8004454:	6078      	str	r0, [r7, #4]
 8004456:	460b      	mov	r3, r1
 8004458:	807b      	strh	r3, [r7, #2]
 800445a:	bf00      	nop
 800445c:	370c      	adds	r7, #12
 800445e:	46bd      	mov	sp, r7
 8004460:	bc80      	pop	{r7}
 8004462:	4770      	bx	lr

08004464 <UART_EndRxTransfer>:
 8004464:	b480      	push	{r7}
 8004466:	b095      	sub	sp, #84	@ 0x54
 8004468:	af00      	add	r7, sp, #0
 800446a:	6078      	str	r0, [r7, #4]
 800446c:	687b      	ldr	r3, [r7, #4]
 800446e:	681b      	ldr	r3, [r3, #0]
 8004470:	330c      	adds	r3, #12
 8004472:	637b      	str	r3, [r7, #52]	@ 0x34
 8004474:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004476:	e853 3f00 	ldrex	r3, [r3]
 800447a:	633b      	str	r3, [r7, #48]	@ 0x30
 800447c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800447e:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8004482:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004484:	687b      	ldr	r3, [r7, #4]
 8004486:	681b      	ldr	r3, [r3, #0]
 8004488:	330c      	adds	r3, #12
 800448a:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 800448c:	643a      	str	r2, [r7, #64]	@ 0x40
 800448e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004490:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8004492:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8004494:	e841 2300 	strex	r3, r2, [r1]
 8004498:	63bb      	str	r3, [r7, #56]	@ 0x38
 800449a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800449c:	2b00      	cmp	r3, #0
 800449e:	d1e5      	bne.n	800446c <UART_EndRxTransfer+0x8>
 80044a0:	687b      	ldr	r3, [r7, #4]
 80044a2:	681b      	ldr	r3, [r3, #0]
 80044a4:	3314      	adds	r3, #20
 80044a6:	623b      	str	r3, [r7, #32]
 80044a8:	6a3b      	ldr	r3, [r7, #32]
 80044aa:	e853 3f00 	ldrex	r3, [r3]
 80044ae:	61fb      	str	r3, [r7, #28]
 80044b0:	69fb      	ldr	r3, [r7, #28]
 80044b2:	f023 0301 	bic.w	r3, r3, #1
 80044b6:	64bb      	str	r3, [r7, #72]	@ 0x48
 80044b8:	687b      	ldr	r3, [r7, #4]
 80044ba:	681b      	ldr	r3, [r3, #0]
 80044bc:	3314      	adds	r3, #20
 80044be:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80044c0:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80044c2:	62bb      	str	r3, [r7, #40]	@ 0x28
 80044c4:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80044c6:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80044c8:	e841 2300 	strex	r3, r2, [r1]
 80044cc:	627b      	str	r3, [r7, #36]	@ 0x24
 80044ce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80044d0:	2b00      	cmp	r3, #0
 80044d2:	d1e5      	bne.n	80044a0 <UART_EndRxTransfer+0x3c>
 80044d4:	687b      	ldr	r3, [r7, #4]
 80044d6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80044d8:	2b01      	cmp	r3, #1
 80044da:	d119      	bne.n	8004510 <UART_EndRxTransfer+0xac>
 80044dc:	687b      	ldr	r3, [r7, #4]
 80044de:	681b      	ldr	r3, [r3, #0]
 80044e0:	330c      	adds	r3, #12
 80044e2:	60fb      	str	r3, [r7, #12]
 80044e4:	68fb      	ldr	r3, [r7, #12]
 80044e6:	e853 3f00 	ldrex	r3, [r3]
 80044ea:	60bb      	str	r3, [r7, #8]
 80044ec:	68bb      	ldr	r3, [r7, #8]
 80044ee:	f023 0310 	bic.w	r3, r3, #16
 80044f2:	647b      	str	r3, [r7, #68]	@ 0x44
 80044f4:	687b      	ldr	r3, [r7, #4]
 80044f6:	681b      	ldr	r3, [r3, #0]
 80044f8:	330c      	adds	r3, #12
 80044fa:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80044fc:	61ba      	str	r2, [r7, #24]
 80044fe:	617b      	str	r3, [r7, #20]
 8004500:	6979      	ldr	r1, [r7, #20]
 8004502:	69ba      	ldr	r2, [r7, #24]
 8004504:	e841 2300 	strex	r3, r2, [r1]
 8004508:	613b      	str	r3, [r7, #16]
 800450a:	693b      	ldr	r3, [r7, #16]
 800450c:	2b00      	cmp	r3, #0
 800450e:	d1e5      	bne.n	80044dc <UART_EndRxTransfer+0x78>
 8004510:	687b      	ldr	r3, [r7, #4]
 8004512:	2220      	movs	r2, #32
 8004514:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004518:	687b      	ldr	r3, [r7, #4]
 800451a:	2200      	movs	r2, #0
 800451c:	631a      	str	r2, [r3, #48]	@ 0x30
 800451e:	bf00      	nop
 8004520:	3754      	adds	r7, #84	@ 0x54
 8004522:	46bd      	mov	sp, r7
 8004524:	bc80      	pop	{r7}
 8004526:	4770      	bx	lr

08004528 <UART_DMAAbortOnError>:
 8004528:	b580      	push	{r7, lr}
 800452a:	b084      	sub	sp, #16
 800452c:	af00      	add	r7, sp, #0
 800452e:	6078      	str	r0, [r7, #4]
 8004530:	687b      	ldr	r3, [r7, #4]
 8004532:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004534:	60fb      	str	r3, [r7, #12]
 8004536:	68fb      	ldr	r3, [r7, #12]
 8004538:	2200      	movs	r2, #0
 800453a:	85da      	strh	r2, [r3, #46]	@ 0x2e
 800453c:	68fb      	ldr	r3, [r7, #12]
 800453e:	2200      	movs	r2, #0
 8004540:	84da      	strh	r2, [r3, #38]	@ 0x26
 8004542:	68f8      	ldr	r0, [r7, #12]
 8004544:	f7ff ff7a 	bl	800443c <HAL_UART_ErrorCallback>
 8004548:	bf00      	nop
 800454a:	3710      	adds	r7, #16
 800454c:	46bd      	mov	sp, r7
 800454e:	bd80      	pop	{r7, pc}

08004550 <UART_Transmit_IT>:
 8004550:	b480      	push	{r7}
 8004552:	b085      	sub	sp, #20
 8004554:	af00      	add	r7, sp, #0
 8004556:	6078      	str	r0, [r7, #4]
 8004558:	687b      	ldr	r3, [r7, #4]
 800455a:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800455e:	b2db      	uxtb	r3, r3
 8004560:	2b21      	cmp	r3, #33	@ 0x21
 8004562:	d13e      	bne.n	80045e2 <UART_Transmit_IT+0x92>
 8004564:	687b      	ldr	r3, [r7, #4]
 8004566:	689b      	ldr	r3, [r3, #8]
 8004568:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800456c:	d114      	bne.n	8004598 <UART_Transmit_IT+0x48>
 800456e:	687b      	ldr	r3, [r7, #4]
 8004570:	691b      	ldr	r3, [r3, #16]
 8004572:	2b00      	cmp	r3, #0
 8004574:	d110      	bne.n	8004598 <UART_Transmit_IT+0x48>
 8004576:	687b      	ldr	r3, [r7, #4]
 8004578:	6a1b      	ldr	r3, [r3, #32]
 800457a:	60fb      	str	r3, [r7, #12]
 800457c:	68fb      	ldr	r3, [r7, #12]
 800457e:	881b      	ldrh	r3, [r3, #0]
 8004580:	461a      	mov	r2, r3
 8004582:	687b      	ldr	r3, [r7, #4]
 8004584:	681b      	ldr	r3, [r3, #0]
 8004586:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800458a:	605a      	str	r2, [r3, #4]
 800458c:	687b      	ldr	r3, [r7, #4]
 800458e:	6a1b      	ldr	r3, [r3, #32]
 8004590:	1c9a      	adds	r2, r3, #2
 8004592:	687b      	ldr	r3, [r7, #4]
 8004594:	621a      	str	r2, [r3, #32]
 8004596:	e008      	b.n	80045aa <UART_Transmit_IT+0x5a>
 8004598:	687b      	ldr	r3, [r7, #4]
 800459a:	6a1b      	ldr	r3, [r3, #32]
 800459c:	1c59      	adds	r1, r3, #1
 800459e:	687a      	ldr	r2, [r7, #4]
 80045a0:	6211      	str	r1, [r2, #32]
 80045a2:	781a      	ldrb	r2, [r3, #0]
 80045a4:	687b      	ldr	r3, [r7, #4]
 80045a6:	681b      	ldr	r3, [r3, #0]
 80045a8:	605a      	str	r2, [r3, #4]
 80045aa:	687b      	ldr	r3, [r7, #4]
 80045ac:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 80045ae:	b29b      	uxth	r3, r3
 80045b0:	3b01      	subs	r3, #1
 80045b2:	b29b      	uxth	r3, r3
 80045b4:	687a      	ldr	r2, [r7, #4]
 80045b6:	4619      	mov	r1, r3
 80045b8:	84d1      	strh	r1, [r2, #38]	@ 0x26
 80045ba:	2b00      	cmp	r3, #0
 80045bc:	d10f      	bne.n	80045de <UART_Transmit_IT+0x8e>
 80045be:	687b      	ldr	r3, [r7, #4]
 80045c0:	681b      	ldr	r3, [r3, #0]
 80045c2:	68da      	ldr	r2, [r3, #12]
 80045c4:	687b      	ldr	r3, [r7, #4]
 80045c6:	681b      	ldr	r3, [r3, #0]
 80045c8:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80045cc:	60da      	str	r2, [r3, #12]
 80045ce:	687b      	ldr	r3, [r7, #4]
 80045d0:	681b      	ldr	r3, [r3, #0]
 80045d2:	68da      	ldr	r2, [r3, #12]
 80045d4:	687b      	ldr	r3, [r7, #4]
 80045d6:	681b      	ldr	r3, [r3, #0]
 80045d8:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80045dc:	60da      	str	r2, [r3, #12]
 80045de:	2300      	movs	r3, #0
 80045e0:	e000      	b.n	80045e4 <UART_Transmit_IT+0x94>
 80045e2:	2302      	movs	r3, #2
 80045e4:	4618      	mov	r0, r3
 80045e6:	3714      	adds	r7, #20
 80045e8:	46bd      	mov	sp, r7
 80045ea:	bc80      	pop	{r7}
 80045ec:	4770      	bx	lr

080045ee <UART_EndTransmit_IT>:
 80045ee:	b580      	push	{r7, lr}
 80045f0:	b082      	sub	sp, #8
 80045f2:	af00      	add	r7, sp, #0
 80045f4:	6078      	str	r0, [r7, #4]
 80045f6:	687b      	ldr	r3, [r7, #4]
 80045f8:	681b      	ldr	r3, [r3, #0]
 80045fa:	68da      	ldr	r2, [r3, #12]
 80045fc:	687b      	ldr	r3, [r7, #4]
 80045fe:	681b      	ldr	r3, [r3, #0]
 8004600:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8004604:	60da      	str	r2, [r3, #12]
 8004606:	687b      	ldr	r3, [r7, #4]
 8004608:	2220      	movs	r2, #32
 800460a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800460e:	6878      	ldr	r0, [r7, #4]
 8004610:	f7ff ff02 	bl	8004418 <HAL_UART_TxCpltCallback>
 8004614:	2300      	movs	r3, #0
 8004616:	4618      	mov	r0, r3
 8004618:	3708      	adds	r7, #8
 800461a:	46bd      	mov	sp, r7
 800461c:	bd80      	pop	{r7, pc}

0800461e <UART_Receive_IT>:
 800461e:	b580      	push	{r7, lr}
 8004620:	b08c      	sub	sp, #48	@ 0x30
 8004622:	af00      	add	r7, sp, #0
 8004624:	6078      	str	r0, [r7, #4]
 8004626:	687b      	ldr	r3, [r7, #4]
 8004628:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 800462c:	b2db      	uxtb	r3, r3
 800462e:	2b22      	cmp	r3, #34	@ 0x22
 8004630:	f040 80ae 	bne.w	8004790 <UART_Receive_IT+0x172>
 8004634:	687b      	ldr	r3, [r7, #4]
 8004636:	689b      	ldr	r3, [r3, #8]
 8004638:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800463c:	d117      	bne.n	800466e <UART_Receive_IT+0x50>
 800463e:	687b      	ldr	r3, [r7, #4]
 8004640:	691b      	ldr	r3, [r3, #16]
 8004642:	2b00      	cmp	r3, #0
 8004644:	d113      	bne.n	800466e <UART_Receive_IT+0x50>
 8004646:	2300      	movs	r3, #0
 8004648:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800464a:	687b      	ldr	r3, [r7, #4]
 800464c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800464e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004650:	687b      	ldr	r3, [r7, #4]
 8004652:	681b      	ldr	r3, [r3, #0]
 8004654:	685b      	ldr	r3, [r3, #4]
 8004656:	b29b      	uxth	r3, r3
 8004658:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800465c:	b29a      	uxth	r2, r3
 800465e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004660:	801a      	strh	r2, [r3, #0]
 8004662:	687b      	ldr	r3, [r7, #4]
 8004664:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004666:	1c9a      	adds	r2, r3, #2
 8004668:	687b      	ldr	r3, [r7, #4]
 800466a:	629a      	str	r2, [r3, #40]	@ 0x28
 800466c:	e026      	b.n	80046bc <UART_Receive_IT+0x9e>
 800466e:	687b      	ldr	r3, [r7, #4]
 8004670:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004672:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004674:	2300      	movs	r3, #0
 8004676:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004678:	687b      	ldr	r3, [r7, #4]
 800467a:	689b      	ldr	r3, [r3, #8]
 800467c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004680:	d007      	beq.n	8004692 <UART_Receive_IT+0x74>
 8004682:	687b      	ldr	r3, [r7, #4]
 8004684:	689b      	ldr	r3, [r3, #8]
 8004686:	2b00      	cmp	r3, #0
 8004688:	d10a      	bne.n	80046a0 <UART_Receive_IT+0x82>
 800468a:	687b      	ldr	r3, [r7, #4]
 800468c:	691b      	ldr	r3, [r3, #16]
 800468e:	2b00      	cmp	r3, #0
 8004690:	d106      	bne.n	80046a0 <UART_Receive_IT+0x82>
 8004692:	687b      	ldr	r3, [r7, #4]
 8004694:	681b      	ldr	r3, [r3, #0]
 8004696:	685b      	ldr	r3, [r3, #4]
 8004698:	b2da      	uxtb	r2, r3
 800469a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800469c:	701a      	strb	r2, [r3, #0]
 800469e:	e008      	b.n	80046b2 <UART_Receive_IT+0x94>
 80046a0:	687b      	ldr	r3, [r7, #4]
 80046a2:	681b      	ldr	r3, [r3, #0]
 80046a4:	685b      	ldr	r3, [r3, #4]
 80046a6:	b2db      	uxtb	r3, r3
 80046a8:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80046ac:	b2da      	uxtb	r2, r3
 80046ae:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80046b0:	701a      	strb	r2, [r3, #0]
 80046b2:	687b      	ldr	r3, [r7, #4]
 80046b4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80046b6:	1c5a      	adds	r2, r3, #1
 80046b8:	687b      	ldr	r3, [r7, #4]
 80046ba:	629a      	str	r2, [r3, #40]	@ 0x28
 80046bc:	687b      	ldr	r3, [r7, #4]
 80046be:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80046c0:	b29b      	uxth	r3, r3
 80046c2:	3b01      	subs	r3, #1
 80046c4:	b29b      	uxth	r3, r3
 80046c6:	687a      	ldr	r2, [r7, #4]
 80046c8:	4619      	mov	r1, r3
 80046ca:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 80046cc:	2b00      	cmp	r3, #0
 80046ce:	d15d      	bne.n	800478c <UART_Receive_IT+0x16e>
 80046d0:	687b      	ldr	r3, [r7, #4]
 80046d2:	681b      	ldr	r3, [r3, #0]
 80046d4:	68da      	ldr	r2, [r3, #12]
 80046d6:	687b      	ldr	r3, [r7, #4]
 80046d8:	681b      	ldr	r3, [r3, #0]
 80046da:	f022 0220 	bic.w	r2, r2, #32
 80046de:	60da      	str	r2, [r3, #12]
 80046e0:	687b      	ldr	r3, [r7, #4]
 80046e2:	681b      	ldr	r3, [r3, #0]
 80046e4:	68da      	ldr	r2, [r3, #12]
 80046e6:	687b      	ldr	r3, [r7, #4]
 80046e8:	681b      	ldr	r3, [r3, #0]
 80046ea:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80046ee:	60da      	str	r2, [r3, #12]
 80046f0:	687b      	ldr	r3, [r7, #4]
 80046f2:	681b      	ldr	r3, [r3, #0]
 80046f4:	695a      	ldr	r2, [r3, #20]
 80046f6:	687b      	ldr	r3, [r7, #4]
 80046f8:	681b      	ldr	r3, [r3, #0]
 80046fa:	f022 0201 	bic.w	r2, r2, #1
 80046fe:	615a      	str	r2, [r3, #20]
 8004700:	687b      	ldr	r3, [r7, #4]
 8004702:	2220      	movs	r2, #32
 8004704:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004708:	687b      	ldr	r3, [r7, #4]
 800470a:	2200      	movs	r2, #0
 800470c:	635a      	str	r2, [r3, #52]	@ 0x34
 800470e:	687b      	ldr	r3, [r7, #4]
 8004710:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004712:	2b01      	cmp	r3, #1
 8004714:	d135      	bne.n	8004782 <UART_Receive_IT+0x164>
 8004716:	687b      	ldr	r3, [r7, #4]
 8004718:	2200      	movs	r2, #0
 800471a:	631a      	str	r2, [r3, #48]	@ 0x30
 800471c:	687b      	ldr	r3, [r7, #4]
 800471e:	681b      	ldr	r3, [r3, #0]
 8004720:	330c      	adds	r3, #12
 8004722:	617b      	str	r3, [r7, #20]
 8004724:	697b      	ldr	r3, [r7, #20]
 8004726:	e853 3f00 	ldrex	r3, [r3]
 800472a:	613b      	str	r3, [r7, #16]
 800472c:	693b      	ldr	r3, [r7, #16]
 800472e:	f023 0310 	bic.w	r3, r3, #16
 8004732:	627b      	str	r3, [r7, #36]	@ 0x24
 8004734:	687b      	ldr	r3, [r7, #4]
 8004736:	681b      	ldr	r3, [r3, #0]
 8004738:	330c      	adds	r3, #12
 800473a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800473c:	623a      	str	r2, [r7, #32]
 800473e:	61fb      	str	r3, [r7, #28]
 8004740:	69f9      	ldr	r1, [r7, #28]
 8004742:	6a3a      	ldr	r2, [r7, #32]
 8004744:	e841 2300 	strex	r3, r2, [r1]
 8004748:	61bb      	str	r3, [r7, #24]
 800474a:	69bb      	ldr	r3, [r7, #24]
 800474c:	2b00      	cmp	r3, #0
 800474e:	d1e5      	bne.n	800471c <UART_Receive_IT+0xfe>
 8004750:	687b      	ldr	r3, [r7, #4]
 8004752:	681b      	ldr	r3, [r3, #0]
 8004754:	681b      	ldr	r3, [r3, #0]
 8004756:	f003 0310 	and.w	r3, r3, #16
 800475a:	2b10      	cmp	r3, #16
 800475c:	d10a      	bne.n	8004774 <UART_Receive_IT+0x156>
 800475e:	2300      	movs	r3, #0
 8004760:	60fb      	str	r3, [r7, #12]
 8004762:	687b      	ldr	r3, [r7, #4]
 8004764:	681b      	ldr	r3, [r3, #0]
 8004766:	681b      	ldr	r3, [r3, #0]
 8004768:	60fb      	str	r3, [r7, #12]
 800476a:	687b      	ldr	r3, [r7, #4]
 800476c:	681b      	ldr	r3, [r3, #0]
 800476e:	685b      	ldr	r3, [r3, #4]
 8004770:	60fb      	str	r3, [r7, #12]
 8004772:	68fb      	ldr	r3, [r7, #12]
 8004774:	687b      	ldr	r3, [r7, #4]
 8004776:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8004778:	4619      	mov	r1, r3
 800477a:	6878      	ldr	r0, [r7, #4]
 800477c:	f7ff fe67 	bl	800444e <HAL_UARTEx_RxEventCallback>
 8004780:	e002      	b.n	8004788 <UART_Receive_IT+0x16a>
 8004782:	6878      	ldr	r0, [r7, #4]
 8004784:	f7ff fe51 	bl	800442a <HAL_UART_RxCpltCallback>
 8004788:	2300      	movs	r3, #0
 800478a:	e002      	b.n	8004792 <UART_Receive_IT+0x174>
 800478c:	2300      	movs	r3, #0
 800478e:	e000      	b.n	8004792 <UART_Receive_IT+0x174>
 8004790:	2302      	movs	r3, #2
 8004792:	4618      	mov	r0, r3
 8004794:	3730      	adds	r7, #48	@ 0x30
 8004796:	46bd      	mov	sp, r7
 8004798:	bd80      	pop	{r7, pc}
	...

0800479c <UART_SetConfig>:
 800479c:	b580      	push	{r7, lr}
 800479e:	b084      	sub	sp, #16
 80047a0:	af00      	add	r7, sp, #0
 80047a2:	6078      	str	r0, [r7, #4]
 80047a4:	687b      	ldr	r3, [r7, #4]
 80047a6:	681b      	ldr	r3, [r3, #0]
 80047a8:	691b      	ldr	r3, [r3, #16]
 80047aa:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 80047ae:	687b      	ldr	r3, [r7, #4]
 80047b0:	68da      	ldr	r2, [r3, #12]
 80047b2:	687b      	ldr	r3, [r7, #4]
 80047b4:	681b      	ldr	r3, [r3, #0]
 80047b6:	430a      	orrs	r2, r1
 80047b8:	611a      	str	r2, [r3, #16]
 80047ba:	687b      	ldr	r3, [r7, #4]
 80047bc:	689a      	ldr	r2, [r3, #8]
 80047be:	687b      	ldr	r3, [r7, #4]
 80047c0:	691b      	ldr	r3, [r3, #16]
 80047c2:	431a      	orrs	r2, r3
 80047c4:	687b      	ldr	r3, [r7, #4]
 80047c6:	695b      	ldr	r3, [r3, #20]
 80047c8:	4313      	orrs	r3, r2
 80047ca:	60bb      	str	r3, [r7, #8]
 80047cc:	687b      	ldr	r3, [r7, #4]
 80047ce:	681b      	ldr	r3, [r3, #0]
 80047d0:	68db      	ldr	r3, [r3, #12]
 80047d2:	f423 53b0 	bic.w	r3, r3, #5632	@ 0x1600
 80047d6:	f023 030c 	bic.w	r3, r3, #12
 80047da:	687a      	ldr	r2, [r7, #4]
 80047dc:	6812      	ldr	r2, [r2, #0]
 80047de:	68b9      	ldr	r1, [r7, #8]
 80047e0:	430b      	orrs	r3, r1
 80047e2:	60d3      	str	r3, [r2, #12]
 80047e4:	687b      	ldr	r3, [r7, #4]
 80047e6:	681b      	ldr	r3, [r3, #0]
 80047e8:	695b      	ldr	r3, [r3, #20]
 80047ea:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 80047ee:	687b      	ldr	r3, [r7, #4]
 80047f0:	699a      	ldr	r2, [r3, #24]
 80047f2:	687b      	ldr	r3, [r7, #4]
 80047f4:	681b      	ldr	r3, [r3, #0]
 80047f6:	430a      	orrs	r2, r1
 80047f8:	615a      	str	r2, [r3, #20]
 80047fa:	687b      	ldr	r3, [r7, #4]
 80047fc:	681b      	ldr	r3, [r3, #0]
 80047fe:	4a2c      	ldr	r2, [pc, #176]	@ (80048b0 <UART_SetConfig+0x114>)
 8004800:	4293      	cmp	r3, r2
 8004802:	d103      	bne.n	800480c <UART_SetConfig+0x70>
 8004804:	f7fe fc78 	bl	80030f8 <HAL_RCC_GetPCLK2Freq>
 8004808:	60f8      	str	r0, [r7, #12]
 800480a:	e002      	b.n	8004812 <UART_SetConfig+0x76>
 800480c:	f7fe fc60 	bl	80030d0 <HAL_RCC_GetPCLK1Freq>
 8004810:	60f8      	str	r0, [r7, #12]
 8004812:	68fa      	ldr	r2, [r7, #12]
 8004814:	4613      	mov	r3, r2
 8004816:	009b      	lsls	r3, r3, #2
 8004818:	4413      	add	r3, r2
 800481a:	009a      	lsls	r2, r3, #2
 800481c:	441a      	add	r2, r3
 800481e:	687b      	ldr	r3, [r7, #4]
 8004820:	685b      	ldr	r3, [r3, #4]
 8004822:	009b      	lsls	r3, r3, #2
 8004824:	fbb2 f3f3 	udiv	r3, r2, r3
 8004828:	4a22      	ldr	r2, [pc, #136]	@ (80048b4 <UART_SetConfig+0x118>)
 800482a:	fba2 2303 	umull	r2, r3, r2, r3
 800482e:	095b      	lsrs	r3, r3, #5
 8004830:	0119      	lsls	r1, r3, #4
 8004832:	68fa      	ldr	r2, [r7, #12]
 8004834:	4613      	mov	r3, r2
 8004836:	009b      	lsls	r3, r3, #2
 8004838:	4413      	add	r3, r2
 800483a:	009a      	lsls	r2, r3, #2
 800483c:	441a      	add	r2, r3
 800483e:	687b      	ldr	r3, [r7, #4]
 8004840:	685b      	ldr	r3, [r3, #4]
 8004842:	009b      	lsls	r3, r3, #2
 8004844:	fbb2 f2f3 	udiv	r2, r2, r3
 8004848:	4b1a      	ldr	r3, [pc, #104]	@ (80048b4 <UART_SetConfig+0x118>)
 800484a:	fba3 0302 	umull	r0, r3, r3, r2
 800484e:	095b      	lsrs	r3, r3, #5
 8004850:	2064      	movs	r0, #100	@ 0x64
 8004852:	fb00 f303 	mul.w	r3, r0, r3
 8004856:	1ad3      	subs	r3, r2, r3
 8004858:	011b      	lsls	r3, r3, #4
 800485a:	3332      	adds	r3, #50	@ 0x32
 800485c:	4a15      	ldr	r2, [pc, #84]	@ (80048b4 <UART_SetConfig+0x118>)
 800485e:	fba2 2303 	umull	r2, r3, r2, r3
 8004862:	095b      	lsrs	r3, r3, #5
 8004864:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8004868:	4419      	add	r1, r3
 800486a:	68fa      	ldr	r2, [r7, #12]
 800486c:	4613      	mov	r3, r2
 800486e:	009b      	lsls	r3, r3, #2
 8004870:	4413      	add	r3, r2
 8004872:	009a      	lsls	r2, r3, #2
 8004874:	441a      	add	r2, r3
 8004876:	687b      	ldr	r3, [r7, #4]
 8004878:	685b      	ldr	r3, [r3, #4]
 800487a:	009b      	lsls	r3, r3, #2
 800487c:	fbb2 f2f3 	udiv	r2, r2, r3
 8004880:	4b0c      	ldr	r3, [pc, #48]	@ (80048b4 <UART_SetConfig+0x118>)
 8004882:	fba3 0302 	umull	r0, r3, r3, r2
 8004886:	095b      	lsrs	r3, r3, #5
 8004888:	2064      	movs	r0, #100	@ 0x64
 800488a:	fb00 f303 	mul.w	r3, r0, r3
 800488e:	1ad3      	subs	r3, r2, r3
 8004890:	011b      	lsls	r3, r3, #4
 8004892:	3332      	adds	r3, #50	@ 0x32
 8004894:	4a07      	ldr	r2, [pc, #28]	@ (80048b4 <UART_SetConfig+0x118>)
 8004896:	fba2 2303 	umull	r2, r3, r2, r3
 800489a:	095b      	lsrs	r3, r3, #5
 800489c:	f003 020f 	and.w	r2, r3, #15
 80048a0:	687b      	ldr	r3, [r7, #4]
 80048a2:	681b      	ldr	r3, [r3, #0]
 80048a4:	440a      	add	r2, r1
 80048a6:	609a      	str	r2, [r3, #8]
 80048a8:	bf00      	nop
 80048aa:	3710      	adds	r7, #16
 80048ac:	46bd      	mov	sp, r7
 80048ae:	bd80      	pop	{r7, pc}
 80048b0:	40013800 	.word	0x40013800
 80048b4:	51eb851f 	.word	0x51eb851f

080048b8 <disk_status>:
  * @retval DSTATUS: Operation status
  */
DSTATUS disk_status (
	BYTE pdrv		/* Physical drive nmuber to identify the drive */
)
{
 80048b8:	b580      	push	{r7, lr}
 80048ba:	b084      	sub	sp, #16
 80048bc:	af00      	add	r7, sp, #0
 80048be:	4603      	mov	r3, r0
 80048c0:	71fb      	strb	r3, [r7, #7]
  DSTATUS stat;
  
  stat = disk.drv[pdrv]->disk_status(disk.lun[pdrv]);
 80048c2:	79fb      	ldrb	r3, [r7, #7]
 80048c4:	4a08      	ldr	r2, [pc, #32]	@ (80048e8 <disk_status+0x30>)
 80048c6:	009b      	lsls	r3, r3, #2
 80048c8:	4413      	add	r3, r2
 80048ca:	685b      	ldr	r3, [r3, #4]
 80048cc:	685b      	ldr	r3, [r3, #4]
 80048ce:	79fa      	ldrb	r2, [r7, #7]
 80048d0:	4905      	ldr	r1, [pc, #20]	@ (80048e8 <disk_status+0x30>)
 80048d2:	440a      	add	r2, r1
 80048d4:	7a12      	ldrb	r2, [r2, #8]
 80048d6:	4610      	mov	r0, r2
 80048d8:	4798      	blx	r3
 80048da:	4603      	mov	r3, r0
 80048dc:	73fb      	strb	r3, [r7, #15]
  return stat;
 80048de:	7bfb      	ldrb	r3, [r7, #15]
}
 80048e0:	4618      	mov	r0, r3
 80048e2:	3710      	adds	r7, #16
 80048e4:	46bd      	mov	sp, r7
 80048e6:	bd80      	pop	{r7, pc}
 80048e8:	20000634 	.word	0x20000634

080048ec <disk_initialize>:
  * @retval DSTATUS: Operation status
  */
DSTATUS disk_initialize (
	BYTE pdrv				/* Physical drive nmuber to identify the drive */
)
{
 80048ec:	b580      	push	{r7, lr}
 80048ee:	b084      	sub	sp, #16
 80048f0:	af00      	add	r7, sp, #0
 80048f2:	4603      	mov	r3, r0
 80048f4:	71fb      	strb	r3, [r7, #7]
  DSTATUS stat = RES_OK;
 80048f6:	2300      	movs	r3, #0
 80048f8:	73fb      	strb	r3, [r7, #15]
  
  if(disk.is_initialized[pdrv] == 0)
 80048fa:	79fb      	ldrb	r3, [r7, #7]
 80048fc:	4a0d      	ldr	r2, [pc, #52]	@ (8004934 <disk_initialize+0x48>)
 80048fe:	5cd3      	ldrb	r3, [r2, r3]
 8004900:	2b00      	cmp	r3, #0
 8004902:	d111      	bne.n	8004928 <disk_initialize+0x3c>
  { 
    disk.is_initialized[pdrv] = 1;
 8004904:	79fb      	ldrb	r3, [r7, #7]
 8004906:	4a0b      	ldr	r2, [pc, #44]	@ (8004934 <disk_initialize+0x48>)
 8004908:	2101      	movs	r1, #1
 800490a:	54d1      	strb	r1, [r2, r3]
    stat = disk.drv[pdrv]->disk_initialize(disk.lun[pdrv]);
 800490c:	79fb      	ldrb	r3, [r7, #7]
 800490e:	4a09      	ldr	r2, [pc, #36]	@ (8004934 <disk_initialize+0x48>)
 8004910:	009b      	lsls	r3, r3, #2
 8004912:	4413      	add	r3, r2
 8004914:	685b      	ldr	r3, [r3, #4]
 8004916:	681b      	ldr	r3, [r3, #0]
 8004918:	79fa      	ldrb	r2, [r7, #7]
 800491a:	4906      	ldr	r1, [pc, #24]	@ (8004934 <disk_initialize+0x48>)
 800491c:	440a      	add	r2, r1
 800491e:	7a12      	ldrb	r2, [r2, #8]
 8004920:	4610      	mov	r0, r2
 8004922:	4798      	blx	r3
 8004924:	4603      	mov	r3, r0
 8004926:	73fb      	strb	r3, [r7, #15]
  }
  return stat;
 8004928:	7bfb      	ldrb	r3, [r7, #15]
}
 800492a:	4618      	mov	r0, r3
 800492c:	3710      	adds	r7, #16
 800492e:	46bd      	mov	sp, r7
 8004930:	bd80      	pop	{r7, pc}
 8004932:	bf00      	nop
 8004934:	20000634 	.word	0x20000634

08004938 <disk_read>:
	BYTE pdrv,		/* Physical drive nmuber to identify the drive */
	BYTE *buff,		/* Data buffer to store read data */
	DWORD sector,	        /* Sector address in LBA */
	UINT count		/* Number of sectors to read */
)
{
 8004938:	b590      	push	{r4, r7, lr}
 800493a:	b087      	sub	sp, #28
 800493c:	af00      	add	r7, sp, #0
 800493e:	60b9      	str	r1, [r7, #8]
 8004940:	607a      	str	r2, [r7, #4]
 8004942:	603b      	str	r3, [r7, #0]
 8004944:	4603      	mov	r3, r0
 8004946:	73fb      	strb	r3, [r7, #15]
  DRESULT res;
 
  res = disk.drv[pdrv]->disk_read(disk.lun[pdrv], buff, sector, count);
 8004948:	7bfb      	ldrb	r3, [r7, #15]
 800494a:	4a0a      	ldr	r2, [pc, #40]	@ (8004974 <disk_read+0x3c>)
 800494c:	009b      	lsls	r3, r3, #2
 800494e:	4413      	add	r3, r2
 8004950:	685b      	ldr	r3, [r3, #4]
 8004952:	689c      	ldr	r4, [r3, #8]
 8004954:	7bfb      	ldrb	r3, [r7, #15]
 8004956:	4a07      	ldr	r2, [pc, #28]	@ (8004974 <disk_read+0x3c>)
 8004958:	4413      	add	r3, r2
 800495a:	7a18      	ldrb	r0, [r3, #8]
 800495c:	683b      	ldr	r3, [r7, #0]
 800495e:	687a      	ldr	r2, [r7, #4]
 8004960:	68b9      	ldr	r1, [r7, #8]
 8004962:	47a0      	blx	r4
 8004964:	4603      	mov	r3, r0
 8004966:	75fb      	strb	r3, [r7, #23]
  return res;
 8004968:	7dfb      	ldrb	r3, [r7, #23]
}
 800496a:	4618      	mov	r0, r3
 800496c:	371c      	adds	r7, #28
 800496e:	46bd      	mov	sp, r7
 8004970:	bd90      	pop	{r4, r7, pc}
 8004972:	bf00      	nop
 8004974:	20000634 	.word	0x20000634

08004978 <disk_write>:
	BYTE pdrv,		/* Physical drive nmuber to identify the drive */
	const BYTE *buff,	/* Data to be written */
	DWORD sector,		/* Sector address in LBA */
	UINT count        	/* Number of sectors to write */
)
{
 8004978:	b590      	push	{r4, r7, lr}
 800497a:	b087      	sub	sp, #28
 800497c:	af00      	add	r7, sp, #0
 800497e:	60b9      	str	r1, [r7, #8]
 8004980:	607a      	str	r2, [r7, #4]
 8004982:	603b      	str	r3, [r7, #0]
 8004984:	4603      	mov	r3, r0
 8004986:	73fb      	strb	r3, [r7, #15]
  DRESULT res;
  
  res = disk.drv[pdrv]->disk_write(disk.lun[pdrv], buff, sector, count);
 8004988:	7bfb      	ldrb	r3, [r7, #15]
 800498a:	4a0a      	ldr	r2, [pc, #40]	@ (80049b4 <disk_write+0x3c>)
 800498c:	009b      	lsls	r3, r3, #2
 800498e:	4413      	add	r3, r2
 8004990:	685b      	ldr	r3, [r3, #4]
 8004992:	68dc      	ldr	r4, [r3, #12]
 8004994:	7bfb      	ldrb	r3, [r7, #15]
 8004996:	4a07      	ldr	r2, [pc, #28]	@ (80049b4 <disk_write+0x3c>)
 8004998:	4413      	add	r3, r2
 800499a:	7a18      	ldrb	r0, [r3, #8]
 800499c:	683b      	ldr	r3, [r7, #0]
 800499e:	687a      	ldr	r2, [r7, #4]
 80049a0:	68b9      	ldr	r1, [r7, #8]
 80049a2:	47a0      	blx	r4
 80049a4:	4603      	mov	r3, r0
 80049a6:	75fb      	strb	r3, [r7, #23]
  return res;
 80049a8:	7dfb      	ldrb	r3, [r7, #23]
}
 80049aa:	4618      	mov	r0, r3
 80049ac:	371c      	adds	r7, #28
 80049ae:	46bd      	mov	sp, r7
 80049b0:	bd90      	pop	{r4, r7, pc}
 80049b2:	bf00      	nop
 80049b4:	20000634 	.word	0x20000634

080049b8 <clear_lock>:

static
void clear_lock (	/* Clear lock entries of the volume */
	FATFS *fs
)
{
 80049b8:	b480      	push	{r7}
 80049ba:	b085      	sub	sp, #20
 80049bc:	af00      	add	r7, sp, #0
 80049be:	6078      	str	r0, [r7, #4]
	UINT i;

	for (i = 0; i < _FS_LOCK; i++) {
 80049c0:	2300      	movs	r3, #0
 80049c2:	60fb      	str	r3, [r7, #12]
 80049c4:	e016      	b.n	80049f4 <clear_lock+0x3c>
		if (Files[i].fs == fs) Files[i].fs = 0;
 80049c6:	4910      	ldr	r1, [pc, #64]	@ (8004a08 <clear_lock+0x50>)
 80049c8:	68fa      	ldr	r2, [r7, #12]
 80049ca:	4613      	mov	r3, r2
 80049cc:	005b      	lsls	r3, r3, #1
 80049ce:	4413      	add	r3, r2
 80049d0:	009b      	lsls	r3, r3, #2
 80049d2:	440b      	add	r3, r1
 80049d4:	681b      	ldr	r3, [r3, #0]
 80049d6:	687a      	ldr	r2, [r7, #4]
 80049d8:	429a      	cmp	r2, r3
 80049da:	d108      	bne.n	80049ee <clear_lock+0x36>
 80049dc:	490a      	ldr	r1, [pc, #40]	@ (8004a08 <clear_lock+0x50>)
 80049de:	68fa      	ldr	r2, [r7, #12]
 80049e0:	4613      	mov	r3, r2
 80049e2:	005b      	lsls	r3, r3, #1
 80049e4:	4413      	add	r3, r2
 80049e6:	009b      	lsls	r3, r3, #2
 80049e8:	440b      	add	r3, r1
 80049ea:	2200      	movs	r2, #0
 80049ec:	601a      	str	r2, [r3, #0]
	for (i = 0; i < _FS_LOCK; i++) {
 80049ee:	68fb      	ldr	r3, [r7, #12]
 80049f0:	3301      	adds	r3, #1
 80049f2:	60fb      	str	r3, [r7, #12]
 80049f4:	68fb      	ldr	r3, [r7, #12]
 80049f6:	2b01      	cmp	r3, #1
 80049f8:	d9e5      	bls.n	80049c6 <clear_lock+0xe>
	}
}
 80049fa:	bf00      	nop
 80049fc:	bf00      	nop
 80049fe:	3714      	adds	r7, #20
 8004a00:	46bd      	mov	sp, r7
 8004a02:	bc80      	pop	{r7}
 8004a04:	4770      	bx	lr
 8004a06:	bf00      	nop
 8004a08:	2000061c 	.word	0x2000061c

08004a0c <sync_window>:
#if !_FS_READONLY
static
FRESULT sync_window (
	FATFS* fs		/* File system object */
)
{
 8004a0c:	b580      	push	{r7, lr}
 8004a0e:	b086      	sub	sp, #24
 8004a10:	af00      	add	r7, sp, #0
 8004a12:	6078      	str	r0, [r7, #4]
	DWORD wsect;
	UINT nf;
	FRESULT res = FR_OK;
 8004a14:	2300      	movs	r3, #0
 8004a16:	73fb      	strb	r3, [r7, #15]


	if (fs->wflag) {	/* Write back the sector if it is dirty */
 8004a18:	687b      	ldr	r3, [r7, #4]
 8004a1a:	f893 3204 	ldrb.w	r3, [r3, #516]	@ 0x204
 8004a1e:	2b00      	cmp	r3, #0
 8004a20:	d038      	beq.n	8004a94 <sync_window+0x88>
		wsect = fs->winsect;	/* Current sector number */
 8004a22:	687b      	ldr	r3, [r7, #4]
 8004a24:	f8d3 322c 	ldr.w	r3, [r3, #556]	@ 0x22c
 8004a28:	617b      	str	r3, [r7, #20]
		if (disk_write(fs->drv, fs->win.d8, wsect, 1) != RES_OK) {
 8004a2a:	687b      	ldr	r3, [r7, #4]
 8004a2c:	f893 0201 	ldrb.w	r0, [r3, #513]	@ 0x201
 8004a30:	6879      	ldr	r1, [r7, #4]
 8004a32:	2301      	movs	r3, #1
 8004a34:	697a      	ldr	r2, [r7, #20]
 8004a36:	f7ff ff9f 	bl	8004978 <disk_write>
 8004a3a:	4603      	mov	r3, r0
 8004a3c:	2b00      	cmp	r3, #0
 8004a3e:	d002      	beq.n	8004a46 <sync_window+0x3a>
			res = FR_DISK_ERR;
 8004a40:	2301      	movs	r3, #1
 8004a42:	73fb      	strb	r3, [r7, #15]
 8004a44:	e026      	b.n	8004a94 <sync_window+0x88>
		} else {
			fs->wflag = 0;
 8004a46:	687b      	ldr	r3, [r7, #4]
 8004a48:	2200      	movs	r2, #0
 8004a4a:	f883 2204 	strb.w	r2, [r3, #516]	@ 0x204
			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 8004a4e:	687b      	ldr	r3, [r7, #4]
 8004a50:	f8d3 3220 	ldr.w	r3, [r3, #544]	@ 0x220
 8004a54:	697a      	ldr	r2, [r7, #20]
 8004a56:	1ad2      	subs	r2, r2, r3
 8004a58:	687b      	ldr	r3, [r7, #4]
 8004a5a:	f8d3 3218 	ldr.w	r3, [r3, #536]	@ 0x218
 8004a5e:	429a      	cmp	r2, r3
 8004a60:	d218      	bcs.n	8004a94 <sync_window+0x88>
				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 8004a62:	687b      	ldr	r3, [r7, #4]
 8004a64:	f893 3203 	ldrb.w	r3, [r3, #515]	@ 0x203
 8004a68:	613b      	str	r3, [r7, #16]
 8004a6a:	e010      	b.n	8004a8e <sync_window+0x82>
					wsect += fs->fsize;
 8004a6c:	687b      	ldr	r3, [r7, #4]
 8004a6e:	f8d3 3218 	ldr.w	r3, [r3, #536]	@ 0x218
 8004a72:	697a      	ldr	r2, [r7, #20]
 8004a74:	4413      	add	r3, r2
 8004a76:	617b      	str	r3, [r7, #20]
					disk_write(fs->drv, fs->win.d8, wsect, 1);
 8004a78:	687b      	ldr	r3, [r7, #4]
 8004a7a:	f893 0201 	ldrb.w	r0, [r3, #513]	@ 0x201
 8004a7e:	6879      	ldr	r1, [r7, #4]
 8004a80:	2301      	movs	r3, #1
 8004a82:	697a      	ldr	r2, [r7, #20]
 8004a84:	f7ff ff78 	bl	8004978 <disk_write>
				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 8004a88:	693b      	ldr	r3, [r7, #16]
 8004a8a:	3b01      	subs	r3, #1
 8004a8c:	613b      	str	r3, [r7, #16]
 8004a8e:	693b      	ldr	r3, [r7, #16]
 8004a90:	2b01      	cmp	r3, #1
 8004a92:	d8eb      	bhi.n	8004a6c <sync_window+0x60>
				}
			}
		}
	}
	return res;
 8004a94:	7bfb      	ldrb	r3, [r7, #15]
}
 8004a96:	4618      	mov	r0, r3
 8004a98:	3718      	adds	r7, #24
 8004a9a:	46bd      	mov	sp, r7
 8004a9c:	bd80      	pop	{r7, pc}

08004a9e <move_window>:
static
FRESULT move_window (
	FATFS* fs,		/* File system object */
	DWORD sector	/* Sector number to make appearance in the fs->win[].d8 */
)
{
 8004a9e:	b580      	push	{r7, lr}
 8004aa0:	b084      	sub	sp, #16
 8004aa2:	af00      	add	r7, sp, #0
 8004aa4:	6078      	str	r0, [r7, #4]
 8004aa6:	6039      	str	r1, [r7, #0]
	FRESULT res = FR_OK;
 8004aa8:	2300      	movs	r3, #0
 8004aaa:	73fb      	strb	r3, [r7, #15]


	if (sector != fs->winsect) {	/* Window offset changed? */
 8004aac:	687b      	ldr	r3, [r7, #4]
 8004aae:	f8d3 322c 	ldr.w	r3, [r3, #556]	@ 0x22c
 8004ab2:	683a      	ldr	r2, [r7, #0]
 8004ab4:	429a      	cmp	r2, r3
 8004ab6:	d01b      	beq.n	8004af0 <move_window+0x52>
#if !_FS_READONLY
		res = sync_window(fs);		/* Write-back changes */
 8004ab8:	6878      	ldr	r0, [r7, #4]
 8004aba:	f7ff ffa7 	bl	8004a0c <sync_window>
 8004abe:	4603      	mov	r3, r0
 8004ac0:	73fb      	strb	r3, [r7, #15]
#endif
		if (res == FR_OK) {			/* Fill sector window with new data */
 8004ac2:	7bfb      	ldrb	r3, [r7, #15]
 8004ac4:	2b00      	cmp	r3, #0
 8004ac6:	d113      	bne.n	8004af0 <move_window+0x52>
			if (disk_read(fs->drv, fs->win.d8, sector, 1) != RES_OK) {
 8004ac8:	687b      	ldr	r3, [r7, #4]
 8004aca:	f893 0201 	ldrb.w	r0, [r3, #513]	@ 0x201
 8004ace:	6879      	ldr	r1, [r7, #4]
 8004ad0:	2301      	movs	r3, #1
 8004ad2:	683a      	ldr	r2, [r7, #0]
 8004ad4:	f7ff ff30 	bl	8004938 <disk_read>
 8004ad8:	4603      	mov	r3, r0
 8004ada:	2b00      	cmp	r3, #0
 8004adc:	d004      	beq.n	8004ae8 <move_window+0x4a>
				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
 8004ade:	f04f 33ff 	mov.w	r3, #4294967295
 8004ae2:	603b      	str	r3, [r7, #0]
				res = FR_DISK_ERR;
 8004ae4:	2301      	movs	r3, #1
 8004ae6:	73fb      	strb	r3, [r7, #15]
			}
			fs->winsect = sector;
 8004ae8:	687b      	ldr	r3, [r7, #4]
 8004aea:	683a      	ldr	r2, [r7, #0]
 8004aec:	f8c3 222c 	str.w	r2, [r3, #556]	@ 0x22c
		}
	}
	return res;
 8004af0:	7bfb      	ldrb	r3, [r7, #15]
}
 8004af2:	4618      	mov	r0, r3
 8004af4:	3710      	adds	r7, #16
 8004af6:	46bd      	mov	sp, r7
 8004af8:	bd80      	pop	{r7, pc}

08004afa <get_ldnumber>:

static
int get_ldnumber (		/* Returns logical drive number (-1:invalid drive) */
	const TCHAR** path	/* Pointer to pointer to the path name */
)
{
 8004afa:	b480      	push	{r7}
 8004afc:	b087      	sub	sp, #28
 8004afe:	af00      	add	r7, sp, #0
 8004b00:	6078      	str	r0, [r7, #4]
	const TCHAR *tp, *tt;
	UINT i;
	int vol = -1;
 8004b02:	f04f 33ff 	mov.w	r3, #4294967295
 8004b06:	613b      	str	r3, [r7, #16]
	char c;
	TCHAR tc;
#endif


	if (*path) {	/* If the pointer is not a null */
 8004b08:	687b      	ldr	r3, [r7, #4]
 8004b0a:	681b      	ldr	r3, [r3, #0]
 8004b0c:	2b00      	cmp	r3, #0
 8004b0e:	d031      	beq.n	8004b74 <get_ldnumber+0x7a>
		for (tt = *path; (UINT)*tt >= (_USE_LFN ? ' ' : '!') && *tt != ':'; tt++) ;	/* Find ':' in the path */
 8004b10:	687b      	ldr	r3, [r7, #4]
 8004b12:	681b      	ldr	r3, [r3, #0]
 8004b14:	617b      	str	r3, [r7, #20]
 8004b16:	e002      	b.n	8004b1e <get_ldnumber+0x24>
 8004b18:	697b      	ldr	r3, [r7, #20]
 8004b1a:	3301      	adds	r3, #1
 8004b1c:	617b      	str	r3, [r7, #20]
 8004b1e:	697b      	ldr	r3, [r7, #20]
 8004b20:	781b      	ldrb	r3, [r3, #0]
 8004b22:	2b20      	cmp	r3, #32
 8004b24:	d903      	bls.n	8004b2e <get_ldnumber+0x34>
 8004b26:	697b      	ldr	r3, [r7, #20]
 8004b28:	781b      	ldrb	r3, [r3, #0]
 8004b2a:	2b3a      	cmp	r3, #58	@ 0x3a
 8004b2c:	d1f4      	bne.n	8004b18 <get_ldnumber+0x1e>
		if (*tt == ':') {	/* If a ':' is exist in the path name */
 8004b2e:	697b      	ldr	r3, [r7, #20]
 8004b30:	781b      	ldrb	r3, [r3, #0]
 8004b32:	2b3a      	cmp	r3, #58	@ 0x3a
 8004b34:	d11c      	bne.n	8004b70 <get_ldnumber+0x76>
			tp = *path;
 8004b36:	687b      	ldr	r3, [r7, #4]
 8004b38:	681b      	ldr	r3, [r3, #0]
 8004b3a:	60fb      	str	r3, [r7, #12]
			i = *tp++ - '0'; 
 8004b3c:	68fb      	ldr	r3, [r7, #12]
 8004b3e:	1c5a      	adds	r2, r3, #1
 8004b40:	60fa      	str	r2, [r7, #12]
 8004b42:	781b      	ldrb	r3, [r3, #0]
 8004b44:	3b30      	subs	r3, #48	@ 0x30
 8004b46:	60bb      	str	r3, [r7, #8]
			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
 8004b48:	68bb      	ldr	r3, [r7, #8]
 8004b4a:	2b09      	cmp	r3, #9
 8004b4c:	d80e      	bhi.n	8004b6c <get_ldnumber+0x72>
 8004b4e:	68fa      	ldr	r2, [r7, #12]
 8004b50:	697b      	ldr	r3, [r7, #20]
 8004b52:	429a      	cmp	r2, r3
 8004b54:	d10a      	bne.n	8004b6c <get_ldnumber+0x72>
				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
 8004b56:	68bb      	ldr	r3, [r7, #8]
 8004b58:	2b00      	cmp	r3, #0
 8004b5a:	d107      	bne.n	8004b6c <get_ldnumber+0x72>
					vol = (int)i;
 8004b5c:	68bb      	ldr	r3, [r7, #8]
 8004b5e:	613b      	str	r3, [r7, #16]
					*path = ++tt;
 8004b60:	697b      	ldr	r3, [r7, #20]
 8004b62:	3301      	adds	r3, #1
 8004b64:	617b      	str	r3, [r7, #20]
 8004b66:	687b      	ldr	r3, [r7, #4]
 8004b68:	697a      	ldr	r2, [r7, #20]
 8004b6a:	601a      	str	r2, [r3, #0]
					vol = (int)i;
					*path = tt;
				}
			}
#endif
			return vol;
 8004b6c:	693b      	ldr	r3, [r7, #16]
 8004b6e:	e002      	b.n	8004b76 <get_ldnumber+0x7c>
		}
#if _FS_RPATH && _VOLUMES >= 2
		vol = CurrVol;	/* Current drive */
#else
		vol = 0;		/* Drive 0 */
 8004b70:	2300      	movs	r3, #0
 8004b72:	613b      	str	r3, [r7, #16]
#endif
	}
	return vol;
 8004b74:	693b      	ldr	r3, [r7, #16]
}
 8004b76:	4618      	mov	r0, r3
 8004b78:	371c      	adds	r7, #28
 8004b7a:	46bd      	mov	sp, r7
 8004b7c:	bc80      	pop	{r7}
 8004b7e:	4770      	bx	lr

08004b80 <check_fs>:
static
BYTE check_fs (	/* 0:FAT boor sector, 1:Valid boor sector but not FAT, 2:Not a boot sector, 3:Disk error */
	FATFS* fs,	/* File system object */
	DWORD sect	/* Sector# (lba) to check if it is an FAT boot record or not */
)
{
 8004b80:	b580      	push	{r7, lr}
 8004b82:	b082      	sub	sp, #8
 8004b84:	af00      	add	r7, sp, #0
 8004b86:	6078      	str	r0, [r7, #4]
 8004b88:	6039      	str	r1, [r7, #0]
	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;	/* Invaidate window */
 8004b8a:	687b      	ldr	r3, [r7, #4]
 8004b8c:	2200      	movs	r2, #0
 8004b8e:	f883 2204 	strb.w	r2, [r3, #516]	@ 0x204
 8004b92:	687b      	ldr	r3, [r7, #4]
 8004b94:	f04f 32ff 	mov.w	r2, #4294967295
 8004b98:	f8c3 222c 	str.w	r2, [r3, #556]	@ 0x22c
	if (move_window(fs, sect) != FR_OK)			/* Load boot record */
 8004b9c:	6839      	ldr	r1, [r7, #0]
 8004b9e:	6878      	ldr	r0, [r7, #4]
 8004ba0:	f7ff ff7d 	bl	8004a9e <move_window>
 8004ba4:	4603      	mov	r3, r0
 8004ba6:	2b00      	cmp	r3, #0
 8004ba8:	d001      	beq.n	8004bae <check_fs+0x2e>
		return 3;
 8004baa:	2303      	movs	r3, #3
 8004bac:	e04a      	b.n	8004c44 <check_fs+0xc4>

	if (LD_WORD(&fs->win.d8[BS_55AA]) != 0xAA55)	/* Check boot record signature (always placed at offset 510 even if the sector size is >512) */
 8004bae:	687b      	ldr	r3, [r7, #4]
 8004bb0:	f503 73ff 	add.w	r3, r3, #510	@ 0x1fe
 8004bb4:	3301      	adds	r3, #1
 8004bb6:	781b      	ldrb	r3, [r3, #0]
 8004bb8:	021b      	lsls	r3, r3, #8
 8004bba:	b21a      	sxth	r2, r3
 8004bbc:	687b      	ldr	r3, [r7, #4]
 8004bbe:	f893 31fe 	ldrb.w	r3, [r3, #510]	@ 0x1fe
 8004bc2:	b21b      	sxth	r3, r3
 8004bc4:	4313      	orrs	r3, r2
 8004bc6:	b21b      	sxth	r3, r3
 8004bc8:	4a20      	ldr	r2, [pc, #128]	@ (8004c4c <check_fs+0xcc>)
 8004bca:	4293      	cmp	r3, r2
 8004bcc:	d001      	beq.n	8004bd2 <check_fs+0x52>
		return 2;
 8004bce:	2302      	movs	r3, #2
 8004bd0:	e038      	b.n	8004c44 <check_fs+0xc4>

	if ((LD_DWORD(&fs->win.d8[BS_FilSysType]) & 0xFFFFFF) == 0x544146)		/* Check "FAT" string */
 8004bd2:	687b      	ldr	r3, [r7, #4]
 8004bd4:	3336      	adds	r3, #54	@ 0x36
 8004bd6:	3303      	adds	r3, #3
 8004bd8:	781b      	ldrb	r3, [r3, #0]
 8004bda:	061a      	lsls	r2, r3, #24
 8004bdc:	687b      	ldr	r3, [r7, #4]
 8004bde:	3336      	adds	r3, #54	@ 0x36
 8004be0:	3302      	adds	r3, #2
 8004be2:	781b      	ldrb	r3, [r3, #0]
 8004be4:	041b      	lsls	r3, r3, #16
 8004be6:	431a      	orrs	r2, r3
 8004be8:	687b      	ldr	r3, [r7, #4]
 8004bea:	3336      	adds	r3, #54	@ 0x36
 8004bec:	3301      	adds	r3, #1
 8004bee:	781b      	ldrb	r3, [r3, #0]
 8004bf0:	021b      	lsls	r3, r3, #8
 8004bf2:	4313      	orrs	r3, r2
 8004bf4:	687a      	ldr	r2, [r7, #4]
 8004bf6:	f892 2036 	ldrb.w	r2, [r2, #54]	@ 0x36
 8004bfa:	4313      	orrs	r3, r2
 8004bfc:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 8004c00:	4a13      	ldr	r2, [pc, #76]	@ (8004c50 <check_fs+0xd0>)
 8004c02:	4293      	cmp	r3, r2
 8004c04:	d101      	bne.n	8004c0a <check_fs+0x8a>
		return 0;
 8004c06:	2300      	movs	r3, #0
 8004c08:	e01c      	b.n	8004c44 <check_fs+0xc4>
	if ((LD_DWORD(&fs->win.d8[BS_FilSysType32]) & 0xFFFFFF) == 0x544146)	/* Check "FAT" string */
 8004c0a:	687b      	ldr	r3, [r7, #4]
 8004c0c:	3352      	adds	r3, #82	@ 0x52
 8004c0e:	3303      	adds	r3, #3
 8004c10:	781b      	ldrb	r3, [r3, #0]
 8004c12:	061a      	lsls	r2, r3, #24
 8004c14:	687b      	ldr	r3, [r7, #4]
 8004c16:	3352      	adds	r3, #82	@ 0x52
 8004c18:	3302      	adds	r3, #2
 8004c1a:	781b      	ldrb	r3, [r3, #0]
 8004c1c:	041b      	lsls	r3, r3, #16
 8004c1e:	431a      	orrs	r2, r3
 8004c20:	687b      	ldr	r3, [r7, #4]
 8004c22:	3352      	adds	r3, #82	@ 0x52
 8004c24:	3301      	adds	r3, #1
 8004c26:	781b      	ldrb	r3, [r3, #0]
 8004c28:	021b      	lsls	r3, r3, #8
 8004c2a:	4313      	orrs	r3, r2
 8004c2c:	687a      	ldr	r2, [r7, #4]
 8004c2e:	f892 2052 	ldrb.w	r2, [r2, #82]	@ 0x52
 8004c32:	4313      	orrs	r3, r2
 8004c34:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 8004c38:	4a05      	ldr	r2, [pc, #20]	@ (8004c50 <check_fs+0xd0>)
 8004c3a:	4293      	cmp	r3, r2
 8004c3c:	d101      	bne.n	8004c42 <check_fs+0xc2>
		return 0;
 8004c3e:	2300      	movs	r3, #0
 8004c40:	e000      	b.n	8004c44 <check_fs+0xc4>

	return 1;
 8004c42:	2301      	movs	r3, #1
}
 8004c44:	4618      	mov	r0, r3
 8004c46:	3708      	adds	r7, #8
 8004c48:	46bd      	mov	sp, r7
 8004c4a:	bd80      	pop	{r7, pc}
 8004c4c:	ffffaa55 	.word	0xffffaa55
 8004c50:	00544146 	.word	0x00544146

08004c54 <find_volume>:
FRESULT find_volume (	/* FR_OK(0): successful, !=0: any error occurred */
	FATFS** rfs,		/* Pointer to pointer to the found file system object */
	const TCHAR** path,	/* Pointer to pointer to the path name (drive number) */
	BYTE wmode			/* !=0: Check write protection for write access */
)
{
 8004c54:	b580      	push	{r7, lr}
 8004c56:	b096      	sub	sp, #88	@ 0x58
 8004c58:	af00      	add	r7, sp, #0
 8004c5a:	60f8      	str	r0, [r7, #12]
 8004c5c:	60b9      	str	r1, [r7, #8]
 8004c5e:	4613      	mov	r3, r2
 8004c60:	71fb      	strb	r3, [r7, #7]
	FATFS *fs;
	UINT i;


	/* Get logical drive number from the path name */
	*rfs = 0;
 8004c62:	68fb      	ldr	r3, [r7, #12]
 8004c64:	2200      	movs	r2, #0
 8004c66:	601a      	str	r2, [r3, #0]
	vol = get_ldnumber(path);
 8004c68:	68b8      	ldr	r0, [r7, #8]
 8004c6a:	f7ff ff46 	bl	8004afa <get_ldnumber>
 8004c6e:	63f8      	str	r0, [r7, #60]	@ 0x3c
	if (vol < 0) return FR_INVALID_DRIVE;
 8004c70:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004c72:	2b00      	cmp	r3, #0
 8004c74:	da01      	bge.n	8004c7a <find_volume+0x26>
 8004c76:	230b      	movs	r3, #11
 8004c78:	e2a8      	b.n	80051cc <find_volume+0x578>

	/* Check if the file system object is valid or not */
	fs = FatFs[vol];					/* Get pointer to the file system object */
 8004c7a:	4a9d      	ldr	r2, [pc, #628]	@ (8004ef0 <find_volume+0x29c>)
 8004c7c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004c7e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004c82:	63bb      	str	r3, [r7, #56]	@ 0x38
	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
 8004c84:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004c86:	2b00      	cmp	r3, #0
 8004c88:	d101      	bne.n	8004c8e <find_volume+0x3a>
 8004c8a:	230c      	movs	r3, #12
 8004c8c:	e29e      	b.n	80051cc <find_volume+0x578>

	ENTER_FF(fs);						/* Lock the volume */
	*rfs = fs;							/* Return pointer to the file system object */
 8004c8e:	68fb      	ldr	r3, [r7, #12]
 8004c90:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8004c92:	601a      	str	r2, [r3, #0]

	if (fs->fs_type) {					/* If the volume has been mounted */
 8004c94:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004c96:	f893 3200 	ldrb.w	r3, [r3, #512]	@ 0x200
 8004c9a:	2b00      	cmp	r3, #0
 8004c9c:	d01b      	beq.n	8004cd6 <find_volume+0x82>
		stat = disk_status(fs->drv);
 8004c9e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004ca0:	f893 3201 	ldrb.w	r3, [r3, #513]	@ 0x201
 8004ca4:	4618      	mov	r0, r3
 8004ca6:	f7ff fe07 	bl	80048b8 <disk_status>
 8004caa:	4603      	mov	r3, r0
 8004cac:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
 8004cb0:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 8004cb4:	f003 0301 	and.w	r3, r3, #1
 8004cb8:	2b00      	cmp	r3, #0
 8004cba:	d10c      	bne.n	8004cd6 <find_volume+0x82>
			if (!_FS_READONLY && wmode && (stat & STA_PROTECT))	/* Check write protection if needed */
 8004cbc:	79fb      	ldrb	r3, [r7, #7]
 8004cbe:	2b00      	cmp	r3, #0
 8004cc0:	d007      	beq.n	8004cd2 <find_volume+0x7e>
 8004cc2:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 8004cc6:	f003 0304 	and.w	r3, r3, #4
 8004cca:	2b00      	cmp	r3, #0
 8004ccc:	d001      	beq.n	8004cd2 <find_volume+0x7e>
				return FR_WRITE_PROTECTED;
 8004cce:	230a      	movs	r3, #10
 8004cd0:	e27c      	b.n	80051cc <find_volume+0x578>
			return FR_OK;				/* The file system object is valid */
 8004cd2:	2300      	movs	r3, #0
 8004cd4:	e27a      	b.n	80051cc <find_volume+0x578>
	}

	/* The file system object is not valid. */
	/* Following code attempts to mount the volume. (analyze BPB and initialize the fs object) */

	fs->fs_type = 0;					/* Clear the file system object */
 8004cd6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004cd8:	2200      	movs	r2, #0
 8004cda:	f883 2200 	strb.w	r2, [r3, #512]	@ 0x200
	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
 8004cde:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004ce0:	b2da      	uxtb	r2, r3
 8004ce2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004ce4:	f883 2201 	strb.w	r2, [r3, #513]	@ 0x201
	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
 8004ce8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004cea:	f893 3201 	ldrb.w	r3, [r3, #513]	@ 0x201
 8004cee:	4618      	mov	r0, r3
 8004cf0:	f7ff fdfc 	bl	80048ec <disk_initialize>
 8004cf4:	4603      	mov	r3, r0
 8004cf6:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
	if (stat & STA_NOINIT)				/* Check if the initialization succeeded */
 8004cfa:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 8004cfe:	f003 0301 	and.w	r3, r3, #1
 8004d02:	2b00      	cmp	r3, #0
 8004d04:	d001      	beq.n	8004d0a <find_volume+0xb6>
		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
 8004d06:	2303      	movs	r3, #3
 8004d08:	e260      	b.n	80051cc <find_volume+0x578>
	if (!_FS_READONLY && wmode && (stat & STA_PROTECT))	/* Check disk write protection if needed */
 8004d0a:	79fb      	ldrb	r3, [r7, #7]
 8004d0c:	2b00      	cmp	r3, #0
 8004d0e:	d007      	beq.n	8004d20 <find_volume+0xcc>
 8004d10:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 8004d14:	f003 0304 	and.w	r3, r3, #4
 8004d18:	2b00      	cmp	r3, #0
 8004d1a:	d001      	beq.n	8004d20 <find_volume+0xcc>
		return FR_WRITE_PROTECTED;
 8004d1c:	230a      	movs	r3, #10
 8004d1e:	e255      	b.n	80051cc <find_volume+0x578>
#if _MAX_SS != _MIN_SS						/* Get sector size (multiple sector size cfg only) */
	if (disk_ioctl(fs->drv, GET_SECTOR_SIZE, &SS(fs)) != RES_OK
		|| SS(fs) < _MIN_SS || SS(fs) > _MAX_SS) return FR_DISK_ERR;
#endif
	/* Find an FAT partition on the drive. Supports only generic partitioning, FDISK and SFD. */
	bsect = 0;
 8004d20:	2300      	movs	r3, #0
 8004d22:	653b      	str	r3, [r7, #80]	@ 0x50
	fmt = check_fs(fs, bsect);					/* Load sector 0 and check if it is an FAT boot sector as SFD */
 8004d24:	6d39      	ldr	r1, [r7, #80]	@ 0x50
 8004d26:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 8004d28:	f7ff ff2a 	bl	8004b80 <check_fs>
 8004d2c:	4603      	mov	r3, r0
 8004d2e:	f887 3057 	strb.w	r3, [r7, #87]	@ 0x57
	if (fmt == 1 || (!fmt && (LD2PT(vol)))) {	/* Not an FAT boot sector or forced partition number */
 8004d32:	f897 3057 	ldrb.w	r3, [r7, #87]	@ 0x57
 8004d36:	2b01      	cmp	r3, #1
 8004d38:	d153      	bne.n	8004de2 <find_volume+0x18e>
		for (i = 0; i < 4; i++) {			/* Get partition offset */
 8004d3a:	2300      	movs	r3, #0
 8004d3c:	643b      	str	r3, [r7, #64]	@ 0x40
 8004d3e:	e028      	b.n	8004d92 <find_volume+0x13e>
			pt = fs->win.d8 + MBR_Table + i * SZ_PTE;
 8004d40:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8004d42:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8004d44:	011b      	lsls	r3, r3, #4
 8004d46:	f503 73df 	add.w	r3, r3, #446	@ 0x1be
 8004d4a:	4413      	add	r3, r2
 8004d4c:	633b      	str	r3, [r7, #48]	@ 0x30
			br[i] = pt[4] ? LD_DWORD(&pt[8]) : 0;
 8004d4e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004d50:	3304      	adds	r3, #4
 8004d52:	781b      	ldrb	r3, [r3, #0]
 8004d54:	2b00      	cmp	r3, #0
 8004d56:	d012      	beq.n	8004d7e <find_volume+0x12a>
 8004d58:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004d5a:	330b      	adds	r3, #11
 8004d5c:	781b      	ldrb	r3, [r3, #0]
 8004d5e:	061a      	lsls	r2, r3, #24
 8004d60:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004d62:	330a      	adds	r3, #10
 8004d64:	781b      	ldrb	r3, [r3, #0]
 8004d66:	041b      	lsls	r3, r3, #16
 8004d68:	431a      	orrs	r2, r3
 8004d6a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004d6c:	3309      	adds	r3, #9
 8004d6e:	781b      	ldrb	r3, [r3, #0]
 8004d70:	021b      	lsls	r3, r3, #8
 8004d72:	4313      	orrs	r3, r2
 8004d74:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8004d76:	3208      	adds	r2, #8
 8004d78:	7812      	ldrb	r2, [r2, #0]
 8004d7a:	431a      	orrs	r2, r3
 8004d7c:	e000      	b.n	8004d80 <find_volume+0x12c>
 8004d7e:	2200      	movs	r2, #0
 8004d80:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8004d82:	009b      	lsls	r3, r3, #2
 8004d84:	3358      	adds	r3, #88	@ 0x58
 8004d86:	443b      	add	r3, r7
 8004d88:	f843 2c44 	str.w	r2, [r3, #-68]
		for (i = 0; i < 4; i++) {			/* Get partition offset */
 8004d8c:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8004d8e:	3301      	adds	r3, #1
 8004d90:	643b      	str	r3, [r7, #64]	@ 0x40
 8004d92:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8004d94:	2b03      	cmp	r3, #3
 8004d96:	d9d3      	bls.n	8004d40 <find_volume+0xec>
		}
		i = LD2PT(vol);						/* Partition number: 0:auto, 1-4:forced */
 8004d98:	2300      	movs	r3, #0
 8004d9a:	643b      	str	r3, [r7, #64]	@ 0x40
		if (i) i--;
 8004d9c:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8004d9e:	2b00      	cmp	r3, #0
 8004da0:	d002      	beq.n	8004da8 <find_volume+0x154>
 8004da2:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8004da4:	3b01      	subs	r3, #1
 8004da6:	643b      	str	r3, [r7, #64]	@ 0x40
		do {								/* Find an FAT volume */
			bsect = br[i];
 8004da8:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8004daa:	009b      	lsls	r3, r3, #2
 8004dac:	3358      	adds	r3, #88	@ 0x58
 8004dae:	443b      	add	r3, r7
 8004db0:	f853 3c44 	ldr.w	r3, [r3, #-68]
 8004db4:	653b      	str	r3, [r7, #80]	@ 0x50
			fmt = bsect ? check_fs(fs, bsect) : 2;	/* Check the partition */
 8004db6:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8004db8:	2b00      	cmp	r3, #0
 8004dba:	d005      	beq.n	8004dc8 <find_volume+0x174>
 8004dbc:	6d39      	ldr	r1, [r7, #80]	@ 0x50
 8004dbe:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 8004dc0:	f7ff fede 	bl	8004b80 <check_fs>
 8004dc4:	4603      	mov	r3, r0
 8004dc6:	e000      	b.n	8004dca <find_volume+0x176>
 8004dc8:	2302      	movs	r3, #2
 8004dca:	f887 3057 	strb.w	r3, [r7, #87]	@ 0x57
		} while (!LD2PT(vol) && fmt && ++i < 4);
 8004dce:	f897 3057 	ldrb.w	r3, [r7, #87]	@ 0x57
 8004dd2:	2b00      	cmp	r3, #0
 8004dd4:	d005      	beq.n	8004de2 <find_volume+0x18e>
 8004dd6:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8004dd8:	3301      	adds	r3, #1
 8004dda:	643b      	str	r3, [r7, #64]	@ 0x40
 8004ddc:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8004dde:	2b03      	cmp	r3, #3
 8004de0:	d9e2      	bls.n	8004da8 <find_volume+0x154>
	}
	if (fmt == 3) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
 8004de2:	f897 3057 	ldrb.w	r3, [r7, #87]	@ 0x57
 8004de6:	2b03      	cmp	r3, #3
 8004de8:	d101      	bne.n	8004dee <find_volume+0x19a>
 8004dea:	2301      	movs	r3, #1
 8004dec:	e1ee      	b.n	80051cc <find_volume+0x578>
	if (fmt) return FR_NO_FILESYSTEM;		/* No FAT volume is found */
 8004dee:	f897 3057 	ldrb.w	r3, [r7, #87]	@ 0x57
 8004df2:	2b00      	cmp	r3, #0
 8004df4:	d001      	beq.n	8004dfa <find_volume+0x1a6>
 8004df6:	230d      	movs	r3, #13
 8004df8:	e1e8      	b.n	80051cc <find_volume+0x578>

	/* An FAT volume is found. Following code initializes the file system object */

	if (LD_WORD(fs->win.d8 + BPB_BytsPerSec) != SS(fs))	/* (BPB_BytsPerSec must be equal to the physical sector size) */
 8004dfa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004dfc:	7b1b      	ldrb	r3, [r3, #12]
 8004dfe:	021b      	lsls	r3, r3, #8
 8004e00:	b21a      	sxth	r2, r3
 8004e02:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004e04:	7adb      	ldrb	r3, [r3, #11]
 8004e06:	b21b      	sxth	r3, r3
 8004e08:	4313      	orrs	r3, r2
 8004e0a:	b21b      	sxth	r3, r3
 8004e0c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8004e10:	d001      	beq.n	8004e16 <find_volume+0x1c2>
		return FR_NO_FILESYSTEM;
 8004e12:	230d      	movs	r3, #13
 8004e14:	e1da      	b.n	80051cc <find_volume+0x578>

	fasize = LD_WORD(fs->win.d8 + BPB_FATSz16);			/* Number of sectors per FAT */
 8004e16:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004e18:	7ddb      	ldrb	r3, [r3, #23]
 8004e1a:	021b      	lsls	r3, r3, #8
 8004e1c:	b21a      	sxth	r2, r3
 8004e1e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004e20:	7d9b      	ldrb	r3, [r3, #22]
 8004e22:	b21b      	sxth	r3, r3
 8004e24:	4313      	orrs	r3, r2
 8004e26:	b21b      	sxth	r3, r3
 8004e28:	b29b      	uxth	r3, r3
 8004e2a:	64fb      	str	r3, [r7, #76]	@ 0x4c
	if (!fasize) fasize = LD_DWORD(fs->win.d8 + BPB_FATSz32);
 8004e2c:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004e2e:	2b00      	cmp	r3, #0
 8004e30:	d112      	bne.n	8004e58 <find_volume+0x204>
 8004e32:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004e34:	f893 3027 	ldrb.w	r3, [r3, #39]	@ 0x27
 8004e38:	061a      	lsls	r2, r3, #24
 8004e3a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004e3c:	f893 3026 	ldrb.w	r3, [r3, #38]	@ 0x26
 8004e40:	041b      	lsls	r3, r3, #16
 8004e42:	431a      	orrs	r2, r3
 8004e44:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004e46:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 8004e4a:	021b      	lsls	r3, r3, #8
 8004e4c:	4313      	orrs	r3, r2
 8004e4e:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8004e50:	f892 2024 	ldrb.w	r2, [r2, #36]	@ 0x24
 8004e54:	4313      	orrs	r3, r2
 8004e56:	64fb      	str	r3, [r7, #76]	@ 0x4c
	fs->fsize = fasize;
 8004e58:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004e5a:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8004e5c:	f8c3 2218 	str.w	r2, [r3, #536]	@ 0x218

	fs->n_fats = fs->win.d8[BPB_NumFATs];					/* Number of FAT copies */
 8004e60:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004e62:	7c1a      	ldrb	r2, [r3, #16]
 8004e64:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004e66:	f883 2203 	strb.w	r2, [r3, #515]	@ 0x203
	if (fs->n_fats != 1 && fs->n_fats != 2)				/* (Must be 1 or 2) */
 8004e6a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004e6c:	f893 3203 	ldrb.w	r3, [r3, #515]	@ 0x203
 8004e70:	2b01      	cmp	r3, #1
 8004e72:	d006      	beq.n	8004e82 <find_volume+0x22e>
 8004e74:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004e76:	f893 3203 	ldrb.w	r3, [r3, #515]	@ 0x203
 8004e7a:	2b02      	cmp	r3, #2
 8004e7c:	d001      	beq.n	8004e82 <find_volume+0x22e>
		return FR_NO_FILESYSTEM;
 8004e7e:	230d      	movs	r3, #13
 8004e80:	e1a4      	b.n	80051cc <find_volume+0x578>
	fasize *= fs->n_fats;								/* Number of sectors for FAT area */
 8004e82:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004e84:	f893 3203 	ldrb.w	r3, [r3, #515]	@ 0x203
 8004e88:	461a      	mov	r2, r3
 8004e8a:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004e8c:	fb02 f303 	mul.w	r3, r2, r3
 8004e90:	64fb      	str	r3, [r7, #76]	@ 0x4c

	fs->csize = fs->win.d8[BPB_SecPerClus];				/* Number of sectors per cluster */
 8004e92:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004e94:	7b5a      	ldrb	r2, [r3, #13]
 8004e96:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004e98:	f883 2202 	strb.w	r2, [r3, #514]	@ 0x202
	if (!fs->csize || (fs->csize & (fs->csize - 1)))	/* (Must be power of 2) */
 8004e9c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004e9e:	f893 3202 	ldrb.w	r3, [r3, #514]	@ 0x202
 8004ea2:	2b00      	cmp	r3, #0
 8004ea4:	d00a      	beq.n	8004ebc <find_volume+0x268>
 8004ea6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004ea8:	f893 3202 	ldrb.w	r3, [r3, #514]	@ 0x202
 8004eac:	461a      	mov	r2, r3
 8004eae:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004eb0:	f893 3202 	ldrb.w	r3, [r3, #514]	@ 0x202
 8004eb4:	3b01      	subs	r3, #1
 8004eb6:	4013      	ands	r3, r2
 8004eb8:	2b00      	cmp	r3, #0
 8004eba:	d001      	beq.n	8004ec0 <find_volume+0x26c>
		return FR_NO_FILESYSTEM;
 8004ebc:	230d      	movs	r3, #13
 8004ebe:	e185      	b.n	80051cc <find_volume+0x578>

	fs->n_rootdir = LD_WORD(fs->win.d8 + BPB_RootEntCnt);	/* Number of root directory entries */
 8004ec0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004ec2:	7c9b      	ldrb	r3, [r3, #18]
 8004ec4:	021b      	lsls	r3, r3, #8
 8004ec6:	b21a      	sxth	r2, r3
 8004ec8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004eca:	7c5b      	ldrb	r3, [r3, #17]
 8004ecc:	b21b      	sxth	r3, r3
 8004ece:	4313      	orrs	r3, r2
 8004ed0:	b21b      	sxth	r3, r3
 8004ed2:	b29a      	uxth	r2, r3
 8004ed4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004ed6:	f8a3 2208 	strh.w	r2, [r3, #520]	@ 0x208
	if (fs->n_rootdir % (SS(fs) / SZ_DIRE))				/* (Must be sector aligned) */
 8004eda:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004edc:	f8b3 3208 	ldrh.w	r3, [r3, #520]	@ 0x208
 8004ee0:	f003 030f 	and.w	r3, r3, #15
 8004ee4:	b29b      	uxth	r3, r3
 8004ee6:	2b00      	cmp	r3, #0
 8004ee8:	d004      	beq.n	8004ef4 <find_volume+0x2a0>
		return FR_NO_FILESYSTEM;
 8004eea:	230d      	movs	r3, #13
 8004eec:	e16e      	b.n	80051cc <find_volume+0x578>
 8004eee:	bf00      	nop
 8004ef0:	20000614 	.word	0x20000614

	tsect = LD_WORD(fs->win.d8 + BPB_TotSec16);			/* Number of sectors on the volume */
 8004ef4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004ef6:	7d1b      	ldrb	r3, [r3, #20]
 8004ef8:	021b      	lsls	r3, r3, #8
 8004efa:	b21a      	sxth	r2, r3
 8004efc:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004efe:	7cdb      	ldrb	r3, [r3, #19]
 8004f00:	b21b      	sxth	r3, r3
 8004f02:	4313      	orrs	r3, r2
 8004f04:	b21b      	sxth	r3, r3
 8004f06:	b29b      	uxth	r3, r3
 8004f08:	64bb      	str	r3, [r7, #72]	@ 0x48
	if (!tsect) tsect = LD_DWORD(fs->win.d8 + BPB_TotSec32);
 8004f0a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8004f0c:	2b00      	cmp	r3, #0
 8004f0e:	d112      	bne.n	8004f36 <find_volume+0x2e2>
 8004f10:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004f12:	f893 3023 	ldrb.w	r3, [r3, #35]	@ 0x23
 8004f16:	061a      	lsls	r2, r3, #24
 8004f18:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004f1a:	f893 3022 	ldrb.w	r3, [r3, #34]	@ 0x22
 8004f1e:	041b      	lsls	r3, r3, #16
 8004f20:	431a      	orrs	r2, r3
 8004f22:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004f24:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 8004f28:	021b      	lsls	r3, r3, #8
 8004f2a:	4313      	orrs	r3, r2
 8004f2c:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8004f2e:	f892 2020 	ldrb.w	r2, [r2, #32]
 8004f32:	4313      	orrs	r3, r2
 8004f34:	64bb      	str	r3, [r7, #72]	@ 0x48

	nrsv = LD_WORD(fs->win.d8 + BPB_RsvdSecCnt);			/* Number of reserved sectors */
 8004f36:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004f38:	7bdb      	ldrb	r3, [r3, #15]
 8004f3a:	021b      	lsls	r3, r3, #8
 8004f3c:	b21a      	sxth	r2, r3
 8004f3e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004f40:	7b9b      	ldrb	r3, [r3, #14]
 8004f42:	b21b      	sxth	r3, r3
 8004f44:	4313      	orrs	r3, r2
 8004f46:	b21b      	sxth	r3, r3
 8004f48:	85fb      	strh	r3, [r7, #46]	@ 0x2e
	if (!nrsv) return FR_NO_FILESYSTEM;					/* (Must not be 0) */
 8004f4a:	8dfb      	ldrh	r3, [r7, #46]	@ 0x2e
 8004f4c:	2b00      	cmp	r3, #0
 8004f4e:	d101      	bne.n	8004f54 <find_volume+0x300>
 8004f50:	230d      	movs	r3, #13
 8004f52:	e13b      	b.n	80051cc <find_volume+0x578>

	/* Determine the FAT sub type */
	sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZ_DIRE);	/* RSV + FAT + DIR */
 8004f54:	8dfa      	ldrh	r2, [r7, #46]	@ 0x2e
 8004f56:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004f58:	4413      	add	r3, r2
 8004f5a:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8004f5c:	f8b2 2208 	ldrh.w	r2, [r2, #520]	@ 0x208
 8004f60:	0912      	lsrs	r2, r2, #4
 8004f62:	b292      	uxth	r2, r2
 8004f64:	4413      	add	r3, r2
 8004f66:	62bb      	str	r3, [r7, #40]	@ 0x28
	if (tsect < sysect) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
 8004f68:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8004f6a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004f6c:	429a      	cmp	r2, r3
 8004f6e:	d201      	bcs.n	8004f74 <find_volume+0x320>
 8004f70:	230d      	movs	r3, #13
 8004f72:	e12b      	b.n	80051cc <find_volume+0x578>
	nclst = (tsect - sysect) / fs->csize;				/* Number of clusters */
 8004f74:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8004f76:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004f78:	1ad3      	subs	r3, r2, r3
 8004f7a:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8004f7c:	f892 2202 	ldrb.w	r2, [r2, #514]	@ 0x202
 8004f80:	fbb3 f3f2 	udiv	r3, r3, r2
 8004f84:	627b      	str	r3, [r7, #36]	@ 0x24
	if (!nclst) return FR_NO_FILESYSTEM;				/* (Invalid volume size) */
 8004f86:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004f88:	2b00      	cmp	r3, #0
 8004f8a:	d101      	bne.n	8004f90 <find_volume+0x33c>
 8004f8c:	230d      	movs	r3, #13
 8004f8e:	e11d      	b.n	80051cc <find_volume+0x578>
	fmt = FS_FAT12;
 8004f90:	2301      	movs	r3, #1
 8004f92:	f887 3057 	strb.w	r3, [r7, #87]	@ 0x57
	if (nclst >= MIN_FAT16) fmt = FS_FAT16;
 8004f96:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004f98:	f640 72f5 	movw	r2, #4085	@ 0xff5
 8004f9c:	4293      	cmp	r3, r2
 8004f9e:	d902      	bls.n	8004fa6 <find_volume+0x352>
 8004fa0:	2302      	movs	r3, #2
 8004fa2:	f887 3057 	strb.w	r3, [r7, #87]	@ 0x57
	if (nclst >= MIN_FAT32) fmt = FS_FAT32;
 8004fa6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004fa8:	f64f 72f5 	movw	r2, #65525	@ 0xfff5
 8004fac:	4293      	cmp	r3, r2
 8004fae:	d902      	bls.n	8004fb6 <find_volume+0x362>
 8004fb0:	2303      	movs	r3, #3
 8004fb2:	f887 3057 	strb.w	r3, [r7, #87]	@ 0x57

	/* Boundaries and Limits */
	fs->n_fatent = nclst + 2;							/* Number of FAT entries */
 8004fb6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004fb8:	1c9a      	adds	r2, r3, #2
 8004fba:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004fbc:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
	fs->volbase = bsect;								/* Volume start sector */
 8004fc0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004fc2:	6d3a      	ldr	r2, [r7, #80]	@ 0x50
 8004fc4:	f8c3 221c 	str.w	r2, [r3, #540]	@ 0x21c
	fs->fatbase = bsect + nrsv; 						/* FAT start sector */
 8004fc8:	8dfa      	ldrh	r2, [r7, #46]	@ 0x2e
 8004fca:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8004fcc:	441a      	add	r2, r3
 8004fce:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004fd0:	f8c3 2220 	str.w	r2, [r3, #544]	@ 0x220
	fs->database = bsect + sysect;						/* Data start sector */
 8004fd4:	6d3a      	ldr	r2, [r7, #80]	@ 0x50
 8004fd6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004fd8:	441a      	add	r2, r3
 8004fda:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004fdc:	f8c3 2228 	str.w	r2, [r3, #552]	@ 0x228
	if (fmt == FS_FAT32) {
 8004fe0:	f897 3057 	ldrb.w	r3, [r7, #87]	@ 0x57
 8004fe4:	2b03      	cmp	r3, #3
 8004fe6:	d121      	bne.n	800502c <find_volume+0x3d8>
		if (fs->n_rootdir) return FR_NO_FILESYSTEM;		/* (BPB_RootEntCnt must be 0) */
 8004fe8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004fea:	f8b3 3208 	ldrh.w	r3, [r3, #520]	@ 0x208
 8004fee:	2b00      	cmp	r3, #0
 8004ff0:	d001      	beq.n	8004ff6 <find_volume+0x3a2>
 8004ff2:	230d      	movs	r3, #13
 8004ff4:	e0ea      	b.n	80051cc <find_volume+0x578>
		fs->dirbase = LD_DWORD(fs->win.d8 + BPB_RootClus);	/* Root directory start cluster */
 8004ff6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004ff8:	f893 302f 	ldrb.w	r3, [r3, #47]	@ 0x2f
 8004ffc:	061a      	lsls	r2, r3, #24
 8004ffe:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005000:	f893 302e 	ldrb.w	r3, [r3, #46]	@ 0x2e
 8005004:	041b      	lsls	r3, r3, #16
 8005006:	431a      	orrs	r2, r3
 8005008:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800500a:	f893 302d 	ldrb.w	r3, [r3, #45]	@ 0x2d
 800500e:	021b      	lsls	r3, r3, #8
 8005010:	4313      	orrs	r3, r2
 8005012:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8005014:	f892 202c 	ldrb.w	r2, [r2, #44]	@ 0x2c
 8005018:	431a      	orrs	r2, r3
 800501a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800501c:	f8c3 2224 	str.w	r2, [r3, #548]	@ 0x224
		szbfat = fs->n_fatent * 4;						/* (Needed FAT size) */
 8005020:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005022:	f8d3 3214 	ldr.w	r3, [r3, #532]	@ 0x214
 8005026:	009b      	lsls	r3, r3, #2
 8005028:	647b      	str	r3, [r7, #68]	@ 0x44
 800502a:	e025      	b.n	8005078 <find_volume+0x424>
	} else {
		if (!fs->n_rootdir)	return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must not be 0) */
 800502c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800502e:	f8b3 3208 	ldrh.w	r3, [r3, #520]	@ 0x208
 8005032:	2b00      	cmp	r3, #0
 8005034:	d101      	bne.n	800503a <find_volume+0x3e6>
 8005036:	230d      	movs	r3, #13
 8005038:	e0c8      	b.n	80051cc <find_volume+0x578>
		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
 800503a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800503c:	f8d3 2220 	ldr.w	r2, [r3, #544]	@ 0x220
 8005040:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8005042:	441a      	add	r2, r3
 8005044:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005046:	f8c3 2224 	str.w	r2, [r3, #548]	@ 0x224
		szbfat = (fmt == FS_FAT16) ?					/* (Needed FAT size) */
			fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
 800504a:	f897 3057 	ldrb.w	r3, [r7, #87]	@ 0x57
 800504e:	2b02      	cmp	r3, #2
 8005050:	d104      	bne.n	800505c <find_volume+0x408>
 8005052:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005054:	f8d3 3214 	ldr.w	r3, [r3, #532]	@ 0x214
 8005058:	005b      	lsls	r3, r3, #1
 800505a:	e00c      	b.n	8005076 <find_volume+0x422>
 800505c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800505e:	f8d3 2214 	ldr.w	r2, [r3, #532]	@ 0x214
 8005062:	4613      	mov	r3, r2
 8005064:	005b      	lsls	r3, r3, #1
 8005066:	4413      	add	r3, r2
 8005068:	085a      	lsrs	r2, r3, #1
 800506a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800506c:	f8d3 3214 	ldr.w	r3, [r3, #532]	@ 0x214
 8005070:	f003 0301 	and.w	r3, r3, #1
 8005074:	4413      	add	r3, r2
		szbfat = (fmt == FS_FAT16) ?					/* (Needed FAT size) */
 8005076:	647b      	str	r3, [r7, #68]	@ 0x44
	}
	if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs))	/* (BPB_FATSz must not be less than the size needed) */
 8005078:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800507a:	f8d3 2218 	ldr.w	r2, [r3, #536]	@ 0x218
 800507e:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8005080:	f203 13ff 	addw	r3, r3, #511	@ 0x1ff
 8005084:	0a5b      	lsrs	r3, r3, #9
 8005086:	429a      	cmp	r2, r3
 8005088:	d201      	bcs.n	800508e <find_volume+0x43a>
		return FR_NO_FILESYSTEM;
 800508a:	230d      	movs	r3, #13
 800508c:	e09e      	b.n	80051cc <find_volume+0x578>

#if !_FS_READONLY
	/* Initialize cluster allocation information */
	fs->last_clust = fs->free_clust = 0xFFFFFFFF;
 800508e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005090:	f04f 32ff 	mov.w	r2, #4294967295
 8005094:	f8c3 2210 	str.w	r2, [r3, #528]	@ 0x210
 8005098:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800509a:	f8d3 2210 	ldr.w	r2, [r3, #528]	@ 0x210
 800509e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80050a0:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c

	/* Get fsinfo if available */
	fs->fsi_flag = 0x80;
 80050a4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80050a6:	2280      	movs	r2, #128	@ 0x80
 80050a8:	f883 2205 	strb.w	r2, [r3, #517]	@ 0x205
#if (_FS_NOFSINFO & 3) != 3
	if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo is 1 */
 80050ac:	f897 3057 	ldrb.w	r3, [r7, #87]	@ 0x57
 80050b0:	2b03      	cmp	r3, #3
 80050b2:	d177      	bne.n	80051a4 <find_volume+0x550>
		&& LD_WORD(fs->win.d8 + BPB_FSInfo) == 1
 80050b4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80050b6:	f893 3031 	ldrb.w	r3, [r3, #49]	@ 0x31
 80050ba:	021b      	lsls	r3, r3, #8
 80050bc:	b21a      	sxth	r2, r3
 80050be:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80050c0:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 80050c4:	b21b      	sxth	r3, r3
 80050c6:	4313      	orrs	r3, r2
 80050c8:	b21b      	sxth	r3, r3
 80050ca:	2b01      	cmp	r3, #1
 80050cc:	d16a      	bne.n	80051a4 <find_volume+0x550>
		&& move_window(fs, bsect + 1) == FR_OK)
 80050ce:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80050d0:	3301      	adds	r3, #1
 80050d2:	4619      	mov	r1, r3
 80050d4:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 80050d6:	f7ff fce2 	bl	8004a9e <move_window>
 80050da:	4603      	mov	r3, r0
 80050dc:	2b00      	cmp	r3, #0
 80050de:	d161      	bne.n	80051a4 <find_volume+0x550>
	{
		fs->fsi_flag = 0;
 80050e0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80050e2:	2200      	movs	r2, #0
 80050e4:	f883 2205 	strb.w	r2, [r3, #517]	@ 0x205
		if (LD_WORD(fs->win.d8 + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
 80050e8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80050ea:	f893 31ff 	ldrb.w	r3, [r3, #511]	@ 0x1ff
 80050ee:	021b      	lsls	r3, r3, #8
 80050f0:	b21a      	sxth	r2, r3
 80050f2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80050f4:	f893 31fe 	ldrb.w	r3, [r3, #510]	@ 0x1fe
 80050f8:	b21b      	sxth	r3, r3
 80050fa:	4313      	orrs	r3, r2
 80050fc:	b21b      	sxth	r3, r3
 80050fe:	4a35      	ldr	r2, [pc, #212]	@ (80051d4 <find_volume+0x580>)
 8005100:	4293      	cmp	r3, r2
 8005102:	d14f      	bne.n	80051a4 <find_volume+0x550>
			&& LD_DWORD(fs->win.d8 + FSI_LeadSig) == 0x41615252
 8005104:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005106:	78db      	ldrb	r3, [r3, #3]
 8005108:	061a      	lsls	r2, r3, #24
 800510a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800510c:	789b      	ldrb	r3, [r3, #2]
 800510e:	041b      	lsls	r3, r3, #16
 8005110:	431a      	orrs	r2, r3
 8005112:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005114:	785b      	ldrb	r3, [r3, #1]
 8005116:	021b      	lsls	r3, r3, #8
 8005118:	4313      	orrs	r3, r2
 800511a:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800511c:	7812      	ldrb	r2, [r2, #0]
 800511e:	4313      	orrs	r3, r2
 8005120:	4a2d      	ldr	r2, [pc, #180]	@ (80051d8 <find_volume+0x584>)
 8005122:	4293      	cmp	r3, r2
 8005124:	d13e      	bne.n	80051a4 <find_volume+0x550>
			&& LD_DWORD(fs->win.d8 + FSI_StrucSig) == 0x61417272)
 8005126:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005128:	f893 31e7 	ldrb.w	r3, [r3, #487]	@ 0x1e7
 800512c:	061a      	lsls	r2, r3, #24
 800512e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005130:	f893 31e6 	ldrb.w	r3, [r3, #486]	@ 0x1e6
 8005134:	041b      	lsls	r3, r3, #16
 8005136:	431a      	orrs	r2, r3
 8005138:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800513a:	f893 31e5 	ldrb.w	r3, [r3, #485]	@ 0x1e5
 800513e:	021b      	lsls	r3, r3, #8
 8005140:	4313      	orrs	r3, r2
 8005142:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8005144:	f892 21e4 	ldrb.w	r2, [r2, #484]	@ 0x1e4
 8005148:	4313      	orrs	r3, r2
 800514a:	4a24      	ldr	r2, [pc, #144]	@ (80051dc <find_volume+0x588>)
 800514c:	4293      	cmp	r3, r2
 800514e:	d129      	bne.n	80051a4 <find_volume+0x550>
		{
#if (_FS_NOFSINFO & 1) == 0
			fs->free_clust = LD_DWORD(fs->win.d8 + FSI_Free_Count);
 8005150:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005152:	f893 31eb 	ldrb.w	r3, [r3, #491]	@ 0x1eb
 8005156:	061a      	lsls	r2, r3, #24
 8005158:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800515a:	f893 31ea 	ldrb.w	r3, [r3, #490]	@ 0x1ea
 800515e:	041b      	lsls	r3, r3, #16
 8005160:	431a      	orrs	r2, r3
 8005162:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005164:	f893 31e9 	ldrb.w	r3, [r3, #489]	@ 0x1e9
 8005168:	021b      	lsls	r3, r3, #8
 800516a:	4313      	orrs	r3, r2
 800516c:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800516e:	f892 21e8 	ldrb.w	r2, [r2, #488]	@ 0x1e8
 8005172:	431a      	orrs	r2, r3
 8005174:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005176:	f8c3 2210 	str.w	r2, [r3, #528]	@ 0x210
#endif
#if (_FS_NOFSINFO & 2) == 0
			fs->last_clust = LD_DWORD(fs->win.d8 + FSI_Nxt_Free);
 800517a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800517c:	f893 31ef 	ldrb.w	r3, [r3, #495]	@ 0x1ef
 8005180:	061a      	lsls	r2, r3, #24
 8005182:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005184:	f893 31ee 	ldrb.w	r3, [r3, #494]	@ 0x1ee
 8005188:	041b      	lsls	r3, r3, #16
 800518a:	431a      	orrs	r2, r3
 800518c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800518e:	f893 31ed 	ldrb.w	r3, [r3, #493]	@ 0x1ed
 8005192:	021b      	lsls	r3, r3, #8
 8005194:	4313      	orrs	r3, r2
 8005196:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8005198:	f892 21ec 	ldrb.w	r2, [r2, #492]	@ 0x1ec
 800519c:	431a      	orrs	r2, r3
 800519e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80051a0:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
#endif
		}
	}
#endif
#endif
	fs->fs_type = fmt;	/* FAT sub-type */
 80051a4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80051a6:	f897 2057 	ldrb.w	r2, [r7, #87]	@ 0x57
 80051aa:	f883 2200 	strb.w	r2, [r3, #512]	@ 0x200
	fs->id = ++Fsid;	/* File system mount ID */
 80051ae:	4b0c      	ldr	r3, [pc, #48]	@ (80051e0 <find_volume+0x58c>)
 80051b0:	881b      	ldrh	r3, [r3, #0]
 80051b2:	3301      	adds	r3, #1
 80051b4:	b29a      	uxth	r2, r3
 80051b6:	4b0a      	ldr	r3, [pc, #40]	@ (80051e0 <find_volume+0x58c>)
 80051b8:	801a      	strh	r2, [r3, #0]
 80051ba:	4b09      	ldr	r3, [pc, #36]	@ (80051e0 <find_volume+0x58c>)
 80051bc:	881a      	ldrh	r2, [r3, #0]
 80051be:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80051c0:	f8a3 2206 	strh.w	r2, [r3, #518]	@ 0x206
#if _FS_RPATH
	fs->cdir = 0;		/* Set current directory to root */
#endif
#if _FS_LOCK			/* Clear file lock semaphores */
	clear_lock(fs);
 80051c4:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 80051c6:	f7ff fbf7 	bl	80049b8 <clear_lock>
#endif

	return FR_OK;
 80051ca:	2300      	movs	r3, #0
}
 80051cc:	4618      	mov	r0, r3
 80051ce:	3758      	adds	r7, #88	@ 0x58
 80051d0:	46bd      	mov	sp, r7
 80051d2:	bd80      	pop	{r7, pc}
 80051d4:	ffffaa55 	.word	0xffffaa55
 80051d8:	41615252 	.word	0x41615252
 80051dc:	61417272 	.word	0x61417272
 80051e0:	20000618 	.word	0x20000618

080051e4 <f_mount>:
FRESULT f_mount (
	FATFS* fs,			/* Pointer to the file system object (NULL:unmount)*/
	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
	BYTE opt			/* 0:Do not mount (delayed mount), 1:Mount immediately */
)
{
 80051e4:	b580      	push	{r7, lr}
 80051e6:	b088      	sub	sp, #32
 80051e8:	af00      	add	r7, sp, #0
 80051ea:	60f8      	str	r0, [r7, #12]
 80051ec:	60b9      	str	r1, [r7, #8]
 80051ee:	4613      	mov	r3, r2
 80051f0:	71fb      	strb	r3, [r7, #7]
	FATFS *cfs;
	int vol;
	FRESULT res;
	const TCHAR *rp = path;
 80051f2:	68bb      	ldr	r3, [r7, #8]
 80051f4:	613b      	str	r3, [r7, #16]


	vol = get_ldnumber(&rp);
 80051f6:	f107 0310 	add.w	r3, r7, #16
 80051fa:	4618      	mov	r0, r3
 80051fc:	f7ff fc7d 	bl	8004afa <get_ldnumber>
 8005200:	61f8      	str	r0, [r7, #28]
	if (vol < 0) return FR_INVALID_DRIVE;
 8005202:	69fb      	ldr	r3, [r7, #28]
 8005204:	2b00      	cmp	r3, #0
 8005206:	da01      	bge.n	800520c <f_mount+0x28>
 8005208:	230b      	movs	r3, #11
 800520a:	e02d      	b.n	8005268 <f_mount+0x84>
	cfs = FatFs[vol];					/* Pointer to fs object */
 800520c:	4a18      	ldr	r2, [pc, #96]	@ (8005270 <f_mount+0x8c>)
 800520e:	69fb      	ldr	r3, [r7, #28]
 8005210:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8005214:	61bb      	str	r3, [r7, #24]

	if (cfs) {
 8005216:	69bb      	ldr	r3, [r7, #24]
 8005218:	2b00      	cmp	r3, #0
 800521a:	d006      	beq.n	800522a <f_mount+0x46>
#if _FS_LOCK
		clear_lock(cfs);
 800521c:	69b8      	ldr	r0, [r7, #24]
 800521e:	f7ff fbcb 	bl	80049b8 <clear_lock>
#endif
#if _FS_REENTRANT						/* Discard sync object of the current volume */
		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
#endif
		cfs->fs_type = 0;				/* Clear old fs object */
 8005222:	69bb      	ldr	r3, [r7, #24]
 8005224:	2200      	movs	r2, #0
 8005226:	f883 2200 	strb.w	r2, [r3, #512]	@ 0x200
	}

	if (fs) {
 800522a:	68fb      	ldr	r3, [r7, #12]
 800522c:	2b00      	cmp	r3, #0
 800522e:	d003      	beq.n	8005238 <f_mount+0x54>
		fs->fs_type = 0;				/* Clear new fs object */
 8005230:	68fb      	ldr	r3, [r7, #12]
 8005232:	2200      	movs	r2, #0
 8005234:	f883 2200 	strb.w	r2, [r3, #512]	@ 0x200
#if _FS_REENTRANT						/* Create sync object for the new volume */
		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
#endif
	}
	FatFs[vol] = fs;					/* Register new fs object */
 8005238:	68fa      	ldr	r2, [r7, #12]
 800523a:	490d      	ldr	r1, [pc, #52]	@ (8005270 <f_mount+0x8c>)
 800523c:	69fb      	ldr	r3, [r7, #28]
 800523e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
 8005242:	68fb      	ldr	r3, [r7, #12]
 8005244:	2b00      	cmp	r3, #0
 8005246:	d002      	beq.n	800524e <f_mount+0x6a>
 8005248:	79fb      	ldrb	r3, [r7, #7]
 800524a:	2b01      	cmp	r3, #1
 800524c:	d001      	beq.n	8005252 <f_mount+0x6e>
 800524e:	2300      	movs	r3, #0
 8005250:	e00a      	b.n	8005268 <f_mount+0x84>

	res = find_volume(&fs, &path, 0);	/* Force mounted the volume */
 8005252:	f107 0108 	add.w	r1, r7, #8
 8005256:	f107 030c 	add.w	r3, r7, #12
 800525a:	2200      	movs	r2, #0
 800525c:	4618      	mov	r0, r3
 800525e:	f7ff fcf9 	bl	8004c54 <find_volume>
 8005262:	4603      	mov	r3, r0
 8005264:	75fb      	strb	r3, [r7, #23]
	LEAVE_FF(fs, res);
 8005266:	7dfb      	ldrb	r3, [r7, #23]
}
 8005268:	4618      	mov	r0, r3
 800526a:	3720      	adds	r7, #32
 800526c:	46bd      	mov	sp, r7
 800526e:	bd80      	pop	{r7, pc}
 8005270:	20000614 	.word	0x20000614

08005274 <malloc>:
 8005274:	4b02      	ldr	r3, [pc, #8]	@ (8005280 <malloc+0xc>)
 8005276:	4601      	mov	r1, r0
 8005278:	6818      	ldr	r0, [r3, #0]
 800527a:	f000 b825 	b.w	80052c8 <_malloc_r>
 800527e:	bf00      	nop
 8005280:	20000018 	.word	0x20000018

08005284 <sbrk_aligned>:
 8005284:	b570      	push	{r4, r5, r6, lr}
 8005286:	4e0f      	ldr	r6, [pc, #60]	@ (80052c4 <sbrk_aligned+0x40>)
 8005288:	460c      	mov	r4, r1
 800528a:	6831      	ldr	r1, [r6, #0]
 800528c:	4605      	mov	r5, r0
 800528e:	b911      	cbnz	r1, 8005296 <sbrk_aligned+0x12>
 8005290:	f000 ff3a 	bl	8006108 <_sbrk_r>
 8005294:	6030      	str	r0, [r6, #0]
 8005296:	4621      	mov	r1, r4
 8005298:	4628      	mov	r0, r5
 800529a:	f000 ff35 	bl	8006108 <_sbrk_r>
 800529e:	1c43      	adds	r3, r0, #1
 80052a0:	d103      	bne.n	80052aa <sbrk_aligned+0x26>
 80052a2:	f04f 34ff 	mov.w	r4, #4294967295
 80052a6:	4620      	mov	r0, r4
 80052a8:	bd70      	pop	{r4, r5, r6, pc}
 80052aa:	1cc4      	adds	r4, r0, #3
 80052ac:	f024 0403 	bic.w	r4, r4, #3
 80052b0:	42a0      	cmp	r0, r4
 80052b2:	d0f8      	beq.n	80052a6 <sbrk_aligned+0x22>
 80052b4:	1a21      	subs	r1, r4, r0
 80052b6:	4628      	mov	r0, r5
 80052b8:	f000 ff26 	bl	8006108 <_sbrk_r>
 80052bc:	3001      	adds	r0, #1
 80052be:	d1f2      	bne.n	80052a6 <sbrk_aligned+0x22>
 80052c0:	e7ef      	b.n	80052a2 <sbrk_aligned+0x1e>
 80052c2:	bf00      	nop
 80052c4:	20000640 	.word	0x20000640

080052c8 <_malloc_r>:
 80052c8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80052cc:	1ccd      	adds	r5, r1, #3
 80052ce:	f025 0503 	bic.w	r5, r5, #3
 80052d2:	3508      	adds	r5, #8
 80052d4:	2d0c      	cmp	r5, #12
 80052d6:	bf38      	it	cc
 80052d8:	250c      	movcc	r5, #12
 80052da:	2d00      	cmp	r5, #0
 80052dc:	4606      	mov	r6, r0
 80052de:	db01      	blt.n	80052e4 <_malloc_r+0x1c>
 80052e0:	42a9      	cmp	r1, r5
 80052e2:	d904      	bls.n	80052ee <_malloc_r+0x26>
 80052e4:	230c      	movs	r3, #12
 80052e6:	6033      	str	r3, [r6, #0]
 80052e8:	2000      	movs	r0, #0
 80052ea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80052ee:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80053c4 <_malloc_r+0xfc>
 80052f2:	f000 f869 	bl	80053c8 <__malloc_lock>
 80052f6:	f8d8 3000 	ldr.w	r3, [r8]
 80052fa:	461c      	mov	r4, r3
 80052fc:	bb44      	cbnz	r4, 8005350 <_malloc_r+0x88>
 80052fe:	4629      	mov	r1, r5
 8005300:	4630      	mov	r0, r6
 8005302:	f7ff ffbf 	bl	8005284 <sbrk_aligned>
 8005306:	1c43      	adds	r3, r0, #1
 8005308:	4604      	mov	r4, r0
 800530a:	d158      	bne.n	80053be <_malloc_r+0xf6>
 800530c:	f8d8 4000 	ldr.w	r4, [r8]
 8005310:	4627      	mov	r7, r4
 8005312:	2f00      	cmp	r7, #0
 8005314:	d143      	bne.n	800539e <_malloc_r+0xd6>
 8005316:	2c00      	cmp	r4, #0
 8005318:	d04b      	beq.n	80053b2 <_malloc_r+0xea>
 800531a:	6823      	ldr	r3, [r4, #0]
 800531c:	4639      	mov	r1, r7
 800531e:	4630      	mov	r0, r6
 8005320:	eb04 0903 	add.w	r9, r4, r3
 8005324:	f000 fef0 	bl	8006108 <_sbrk_r>
 8005328:	4581      	cmp	r9, r0
 800532a:	d142      	bne.n	80053b2 <_malloc_r+0xea>
 800532c:	6821      	ldr	r1, [r4, #0]
 800532e:	4630      	mov	r0, r6
 8005330:	1a6d      	subs	r5, r5, r1
 8005332:	4629      	mov	r1, r5
 8005334:	f7ff ffa6 	bl	8005284 <sbrk_aligned>
 8005338:	3001      	adds	r0, #1
 800533a:	d03a      	beq.n	80053b2 <_malloc_r+0xea>
 800533c:	6823      	ldr	r3, [r4, #0]
 800533e:	442b      	add	r3, r5
 8005340:	6023      	str	r3, [r4, #0]
 8005342:	f8d8 3000 	ldr.w	r3, [r8]
 8005346:	685a      	ldr	r2, [r3, #4]
 8005348:	bb62      	cbnz	r2, 80053a4 <_malloc_r+0xdc>
 800534a:	f8c8 7000 	str.w	r7, [r8]
 800534e:	e00f      	b.n	8005370 <_malloc_r+0xa8>
 8005350:	6822      	ldr	r2, [r4, #0]
 8005352:	1b52      	subs	r2, r2, r5
 8005354:	d420      	bmi.n	8005398 <_malloc_r+0xd0>
 8005356:	2a0b      	cmp	r2, #11
 8005358:	d917      	bls.n	800538a <_malloc_r+0xc2>
 800535a:	1961      	adds	r1, r4, r5
 800535c:	42a3      	cmp	r3, r4
 800535e:	6025      	str	r5, [r4, #0]
 8005360:	bf18      	it	ne
 8005362:	6059      	strne	r1, [r3, #4]
 8005364:	6863      	ldr	r3, [r4, #4]
 8005366:	bf08      	it	eq
 8005368:	f8c8 1000 	streq.w	r1, [r8]
 800536c:	5162      	str	r2, [r4, r5]
 800536e:	604b      	str	r3, [r1, #4]
 8005370:	4630      	mov	r0, r6
 8005372:	f000 f82f 	bl	80053d4 <__malloc_unlock>
 8005376:	f104 000b 	add.w	r0, r4, #11
 800537a:	1d23      	adds	r3, r4, #4
 800537c:	f020 0007 	bic.w	r0, r0, #7
 8005380:	1ac2      	subs	r2, r0, r3
 8005382:	bf1c      	itt	ne
 8005384:	1a1b      	subne	r3, r3, r0
 8005386:	50a3      	strne	r3, [r4, r2]
 8005388:	e7af      	b.n	80052ea <_malloc_r+0x22>
 800538a:	6862      	ldr	r2, [r4, #4]
 800538c:	42a3      	cmp	r3, r4
 800538e:	bf0c      	ite	eq
 8005390:	f8c8 2000 	streq.w	r2, [r8]
 8005394:	605a      	strne	r2, [r3, #4]
 8005396:	e7eb      	b.n	8005370 <_malloc_r+0xa8>
 8005398:	4623      	mov	r3, r4
 800539a:	6864      	ldr	r4, [r4, #4]
 800539c:	e7ae      	b.n	80052fc <_malloc_r+0x34>
 800539e:	463c      	mov	r4, r7
 80053a0:	687f      	ldr	r7, [r7, #4]
 80053a2:	e7b6      	b.n	8005312 <_malloc_r+0x4a>
 80053a4:	461a      	mov	r2, r3
 80053a6:	685b      	ldr	r3, [r3, #4]
 80053a8:	42a3      	cmp	r3, r4
 80053aa:	d1fb      	bne.n	80053a4 <_malloc_r+0xdc>
 80053ac:	2300      	movs	r3, #0
 80053ae:	6053      	str	r3, [r2, #4]
 80053b0:	e7de      	b.n	8005370 <_malloc_r+0xa8>
 80053b2:	230c      	movs	r3, #12
 80053b4:	4630      	mov	r0, r6
 80053b6:	6033      	str	r3, [r6, #0]
 80053b8:	f000 f80c 	bl	80053d4 <__malloc_unlock>
 80053bc:	e794      	b.n	80052e8 <_malloc_r+0x20>
 80053be:	6005      	str	r5, [r0, #0]
 80053c0:	e7d6      	b.n	8005370 <_malloc_r+0xa8>
 80053c2:	bf00      	nop
 80053c4:	20000644 	.word	0x20000644

080053c8 <__malloc_lock>:
 80053c8:	4801      	ldr	r0, [pc, #4]	@ (80053d0 <__malloc_lock+0x8>)
 80053ca:	f000 beea 	b.w	80061a2 <__retarget_lock_acquire_recursive>
 80053ce:	bf00      	nop
 80053d0:	20000788 	.word	0x20000788

080053d4 <__malloc_unlock>:
 80053d4:	4801      	ldr	r0, [pc, #4]	@ (80053dc <__malloc_unlock+0x8>)
 80053d6:	f000 bee5 	b.w	80061a4 <__retarget_lock_release_recursive>
 80053da:	bf00      	nop
 80053dc:	20000788 	.word	0x20000788

080053e0 <__cvt>:
 80053e0:	2b00      	cmp	r3, #0
 80053e2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80053e6:	461d      	mov	r5, r3
 80053e8:	bfbb      	ittet	lt
 80053ea:	f103 4300 	addlt.w	r3, r3, #2147483648	@ 0x80000000
 80053ee:	461d      	movlt	r5, r3
 80053f0:	2300      	movge	r3, #0
 80053f2:	232d      	movlt	r3, #45	@ 0x2d
 80053f4:	b088      	sub	sp, #32
 80053f6:	4614      	mov	r4, r2
 80053f8:	bfb8      	it	lt
 80053fa:	4614      	movlt	r4, r2
 80053fc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80053fe:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 8005400:	7013      	strb	r3, [r2, #0]
 8005402:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8005404:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 8005408:	f023 0820 	bic.w	r8, r3, #32
 800540c:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8005410:	d005      	beq.n	800541e <__cvt+0x3e>
 8005412:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8005416:	d100      	bne.n	800541a <__cvt+0x3a>
 8005418:	3601      	adds	r6, #1
 800541a:	2302      	movs	r3, #2
 800541c:	e000      	b.n	8005420 <__cvt+0x40>
 800541e:	2303      	movs	r3, #3
 8005420:	aa07      	add	r2, sp, #28
 8005422:	9204      	str	r2, [sp, #16]
 8005424:	aa06      	add	r2, sp, #24
 8005426:	e9cd a202 	strd	sl, r2, [sp, #8]
 800542a:	e9cd 3600 	strd	r3, r6, [sp]
 800542e:	4622      	mov	r2, r4
 8005430:	462b      	mov	r3, r5
 8005432:	f000 ff7d 	bl	8006330 <_dtoa_r>
 8005436:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 800543a:	4607      	mov	r7, r0
 800543c:	d119      	bne.n	8005472 <__cvt+0x92>
 800543e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8005440:	07db      	lsls	r3, r3, #31
 8005442:	d50e      	bpl.n	8005462 <__cvt+0x82>
 8005444:	eb00 0906 	add.w	r9, r0, r6
 8005448:	2200      	movs	r2, #0
 800544a:	2300      	movs	r3, #0
 800544c:	4620      	mov	r0, r4
 800544e:	4629      	mov	r1, r5
 8005450:	f7fb faaa 	bl	80009a8 <__aeabi_dcmpeq>
 8005454:	b108      	cbz	r0, 800545a <__cvt+0x7a>
 8005456:	f8cd 901c 	str.w	r9, [sp, #28]
 800545a:	2230      	movs	r2, #48	@ 0x30
 800545c:	9b07      	ldr	r3, [sp, #28]
 800545e:	454b      	cmp	r3, r9
 8005460:	d31e      	bcc.n	80054a0 <__cvt+0xc0>
 8005462:	4638      	mov	r0, r7
 8005464:	9b07      	ldr	r3, [sp, #28]
 8005466:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8005468:	1bdb      	subs	r3, r3, r7
 800546a:	6013      	str	r3, [r2, #0]
 800546c:	b008      	add	sp, #32
 800546e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005472:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8005476:	eb00 0906 	add.w	r9, r0, r6
 800547a:	d1e5      	bne.n	8005448 <__cvt+0x68>
 800547c:	7803      	ldrb	r3, [r0, #0]
 800547e:	2b30      	cmp	r3, #48	@ 0x30
 8005480:	d10a      	bne.n	8005498 <__cvt+0xb8>
 8005482:	2200      	movs	r2, #0
 8005484:	2300      	movs	r3, #0
 8005486:	4620      	mov	r0, r4
 8005488:	4629      	mov	r1, r5
 800548a:	f7fb fa8d 	bl	80009a8 <__aeabi_dcmpeq>
 800548e:	b918      	cbnz	r0, 8005498 <__cvt+0xb8>
 8005490:	f1c6 0601 	rsb	r6, r6, #1
 8005494:	f8ca 6000 	str.w	r6, [sl]
 8005498:	f8da 3000 	ldr.w	r3, [sl]
 800549c:	4499      	add	r9, r3
 800549e:	e7d3      	b.n	8005448 <__cvt+0x68>
 80054a0:	1c59      	adds	r1, r3, #1
 80054a2:	9107      	str	r1, [sp, #28]
 80054a4:	701a      	strb	r2, [r3, #0]
 80054a6:	e7d9      	b.n	800545c <__cvt+0x7c>

080054a8 <__exponent>:
 80054a8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80054aa:	2900      	cmp	r1, #0
 80054ac:	bfb6      	itet	lt
 80054ae:	232d      	movlt	r3, #45	@ 0x2d
 80054b0:	232b      	movge	r3, #43	@ 0x2b
 80054b2:	4249      	neglt	r1, r1
 80054b4:	2909      	cmp	r1, #9
 80054b6:	7002      	strb	r2, [r0, #0]
 80054b8:	7043      	strb	r3, [r0, #1]
 80054ba:	dd29      	ble.n	8005510 <__exponent+0x68>
 80054bc:	f10d 0307 	add.w	r3, sp, #7
 80054c0:	461d      	mov	r5, r3
 80054c2:	270a      	movs	r7, #10
 80054c4:	fbb1 f6f7 	udiv	r6, r1, r7
 80054c8:	461a      	mov	r2, r3
 80054ca:	fb07 1416 	mls	r4, r7, r6, r1
 80054ce:	3430      	adds	r4, #48	@ 0x30
 80054d0:	f802 4c01 	strb.w	r4, [r2, #-1]
 80054d4:	460c      	mov	r4, r1
 80054d6:	2c63      	cmp	r4, #99	@ 0x63
 80054d8:	4631      	mov	r1, r6
 80054da:	f103 33ff 	add.w	r3, r3, #4294967295
 80054de:	dcf1      	bgt.n	80054c4 <__exponent+0x1c>
 80054e0:	3130      	adds	r1, #48	@ 0x30
 80054e2:	1e94      	subs	r4, r2, #2
 80054e4:	f803 1c01 	strb.w	r1, [r3, #-1]
 80054e8:	4623      	mov	r3, r4
 80054ea:	1c41      	adds	r1, r0, #1
 80054ec:	42ab      	cmp	r3, r5
 80054ee:	d30a      	bcc.n	8005506 <__exponent+0x5e>
 80054f0:	f10d 0309 	add.w	r3, sp, #9
 80054f4:	1a9b      	subs	r3, r3, r2
 80054f6:	42ac      	cmp	r4, r5
 80054f8:	bf88      	it	hi
 80054fa:	2300      	movhi	r3, #0
 80054fc:	3302      	adds	r3, #2
 80054fe:	4403      	add	r3, r0
 8005500:	1a18      	subs	r0, r3, r0
 8005502:	b003      	add	sp, #12
 8005504:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005506:	f813 6b01 	ldrb.w	r6, [r3], #1
 800550a:	f801 6f01 	strb.w	r6, [r1, #1]!
 800550e:	e7ed      	b.n	80054ec <__exponent+0x44>
 8005510:	2330      	movs	r3, #48	@ 0x30
 8005512:	3130      	adds	r1, #48	@ 0x30
 8005514:	7083      	strb	r3, [r0, #2]
 8005516:	70c1      	strb	r1, [r0, #3]
 8005518:	1d03      	adds	r3, r0, #4
 800551a:	e7f1      	b.n	8005500 <__exponent+0x58>

0800551c <_printf_float>:
 800551c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005520:	b091      	sub	sp, #68	@ 0x44
 8005522:	460c      	mov	r4, r1
 8005524:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
 8005528:	4616      	mov	r6, r2
 800552a:	461f      	mov	r7, r3
 800552c:	4605      	mov	r5, r0
 800552e:	f000 fdb3 	bl	8006098 <_localeconv_r>
 8005532:	6803      	ldr	r3, [r0, #0]
 8005534:	4618      	mov	r0, r3
 8005536:	9308      	str	r3, [sp, #32]
 8005538:	f7fa fe0a 	bl	8000150 <strlen>
 800553c:	2300      	movs	r3, #0
 800553e:	930e      	str	r3, [sp, #56]	@ 0x38
 8005540:	f8d8 3000 	ldr.w	r3, [r8]
 8005544:	9009      	str	r0, [sp, #36]	@ 0x24
 8005546:	3307      	adds	r3, #7
 8005548:	f023 0307 	bic.w	r3, r3, #7
 800554c:	f103 0208 	add.w	r2, r3, #8
 8005550:	f894 a018 	ldrb.w	sl, [r4, #24]
 8005554:	f8d4 b000 	ldr.w	fp, [r4]
 8005558:	f8c8 2000 	str.w	r2, [r8]
 800555c:	e9d3 8900 	ldrd	r8, r9, [r3]
 8005560:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8005564:	930b      	str	r3, [sp, #44]	@ 0x2c
 8005566:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 800556a:	f04f 32ff 	mov.w	r2, #4294967295
 800556e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8005572:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8005576:	4b9c      	ldr	r3, [pc, #624]	@ (80057e8 <_printf_float+0x2cc>)
 8005578:	f7fb fa48 	bl	8000a0c <__aeabi_dcmpun>
 800557c:	bb70      	cbnz	r0, 80055dc <_printf_float+0xc0>
 800557e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8005582:	f04f 32ff 	mov.w	r2, #4294967295
 8005586:	4b98      	ldr	r3, [pc, #608]	@ (80057e8 <_printf_float+0x2cc>)
 8005588:	f7fb fa22 	bl	80009d0 <__aeabi_dcmple>
 800558c:	bb30      	cbnz	r0, 80055dc <_printf_float+0xc0>
 800558e:	2200      	movs	r2, #0
 8005590:	2300      	movs	r3, #0
 8005592:	4640      	mov	r0, r8
 8005594:	4649      	mov	r1, r9
 8005596:	f7fb fa11 	bl	80009bc <__aeabi_dcmplt>
 800559a:	b110      	cbz	r0, 80055a2 <_printf_float+0x86>
 800559c:	232d      	movs	r3, #45	@ 0x2d
 800559e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80055a2:	4a92      	ldr	r2, [pc, #584]	@ (80057ec <_printf_float+0x2d0>)
 80055a4:	4b92      	ldr	r3, [pc, #584]	@ (80057f0 <_printf_float+0x2d4>)
 80055a6:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 80055aa:	bf94      	ite	ls
 80055ac:	4690      	movls	r8, r2
 80055ae:	4698      	movhi	r8, r3
 80055b0:	2303      	movs	r3, #3
 80055b2:	f04f 0900 	mov.w	r9, #0
 80055b6:	6123      	str	r3, [r4, #16]
 80055b8:	f02b 0304 	bic.w	r3, fp, #4
 80055bc:	6023      	str	r3, [r4, #0]
 80055be:	4633      	mov	r3, r6
 80055c0:	4621      	mov	r1, r4
 80055c2:	4628      	mov	r0, r5
 80055c4:	9700      	str	r7, [sp, #0]
 80055c6:	aa0f      	add	r2, sp, #60	@ 0x3c
 80055c8:	f000 f9d4 	bl	8005974 <_printf_common>
 80055cc:	3001      	adds	r0, #1
 80055ce:	f040 8090 	bne.w	80056f2 <_printf_float+0x1d6>
 80055d2:	f04f 30ff 	mov.w	r0, #4294967295
 80055d6:	b011      	add	sp, #68	@ 0x44
 80055d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80055dc:	4642      	mov	r2, r8
 80055de:	464b      	mov	r3, r9
 80055e0:	4640      	mov	r0, r8
 80055e2:	4649      	mov	r1, r9
 80055e4:	f7fb fa12 	bl	8000a0c <__aeabi_dcmpun>
 80055e8:	b148      	cbz	r0, 80055fe <_printf_float+0xe2>
 80055ea:	464b      	mov	r3, r9
 80055ec:	2b00      	cmp	r3, #0
 80055ee:	bfb8      	it	lt
 80055f0:	232d      	movlt	r3, #45	@ 0x2d
 80055f2:	4a80      	ldr	r2, [pc, #512]	@ (80057f4 <_printf_float+0x2d8>)
 80055f4:	bfb8      	it	lt
 80055f6:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 80055fa:	4b7f      	ldr	r3, [pc, #508]	@ (80057f8 <_printf_float+0x2dc>)
 80055fc:	e7d3      	b.n	80055a6 <_printf_float+0x8a>
 80055fe:	6863      	ldr	r3, [r4, #4]
 8005600:	f00a 01df 	and.w	r1, sl, #223	@ 0xdf
 8005604:	1c5a      	adds	r2, r3, #1
 8005606:	d13f      	bne.n	8005688 <_printf_float+0x16c>
 8005608:	2306      	movs	r3, #6
 800560a:	6063      	str	r3, [r4, #4]
 800560c:	2200      	movs	r2, #0
 800560e:	f44b 6380 	orr.w	r3, fp, #1024	@ 0x400
 8005612:	6023      	str	r3, [r4, #0]
 8005614:	9206      	str	r2, [sp, #24]
 8005616:	aa0e      	add	r2, sp, #56	@ 0x38
 8005618:	e9cd a204 	strd	sl, r2, [sp, #16]
 800561c:	aa0d      	add	r2, sp, #52	@ 0x34
 800561e:	9203      	str	r2, [sp, #12]
 8005620:	f10d 0233 	add.w	r2, sp, #51	@ 0x33
 8005624:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8005628:	6863      	ldr	r3, [r4, #4]
 800562a:	4642      	mov	r2, r8
 800562c:	9300      	str	r3, [sp, #0]
 800562e:	4628      	mov	r0, r5
 8005630:	464b      	mov	r3, r9
 8005632:	910a      	str	r1, [sp, #40]	@ 0x28
 8005634:	f7ff fed4 	bl	80053e0 <__cvt>
 8005638:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800563a:	4680      	mov	r8, r0
 800563c:	2947      	cmp	r1, #71	@ 0x47
 800563e:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8005640:	d128      	bne.n	8005694 <_printf_float+0x178>
 8005642:	1cc8      	adds	r0, r1, #3
 8005644:	db02      	blt.n	800564c <_printf_float+0x130>
 8005646:	6863      	ldr	r3, [r4, #4]
 8005648:	4299      	cmp	r1, r3
 800564a:	dd40      	ble.n	80056ce <_printf_float+0x1b2>
 800564c:	f1aa 0a02 	sub.w	sl, sl, #2
 8005650:	fa5f fa8a 	uxtb.w	sl, sl
 8005654:	4652      	mov	r2, sl
 8005656:	3901      	subs	r1, #1
 8005658:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800565c:	910d      	str	r1, [sp, #52]	@ 0x34
 800565e:	f7ff ff23 	bl	80054a8 <__exponent>
 8005662:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8005664:	4681      	mov	r9, r0
 8005666:	1813      	adds	r3, r2, r0
 8005668:	2a01      	cmp	r2, #1
 800566a:	6123      	str	r3, [r4, #16]
 800566c:	dc02      	bgt.n	8005674 <_printf_float+0x158>
 800566e:	6822      	ldr	r2, [r4, #0]
 8005670:	07d2      	lsls	r2, r2, #31
 8005672:	d501      	bpl.n	8005678 <_printf_float+0x15c>
 8005674:	3301      	adds	r3, #1
 8005676:	6123      	str	r3, [r4, #16]
 8005678:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 800567c:	2b00      	cmp	r3, #0
 800567e:	d09e      	beq.n	80055be <_printf_float+0xa2>
 8005680:	232d      	movs	r3, #45	@ 0x2d
 8005682:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8005686:	e79a      	b.n	80055be <_printf_float+0xa2>
 8005688:	2947      	cmp	r1, #71	@ 0x47
 800568a:	d1bf      	bne.n	800560c <_printf_float+0xf0>
 800568c:	2b00      	cmp	r3, #0
 800568e:	d1bd      	bne.n	800560c <_printf_float+0xf0>
 8005690:	2301      	movs	r3, #1
 8005692:	e7ba      	b.n	800560a <_printf_float+0xee>
 8005694:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8005698:	d9dc      	bls.n	8005654 <_printf_float+0x138>
 800569a:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 800569e:	d118      	bne.n	80056d2 <_printf_float+0x1b6>
 80056a0:	2900      	cmp	r1, #0
 80056a2:	6863      	ldr	r3, [r4, #4]
 80056a4:	dd0b      	ble.n	80056be <_printf_float+0x1a2>
 80056a6:	6121      	str	r1, [r4, #16]
 80056a8:	b913      	cbnz	r3, 80056b0 <_printf_float+0x194>
 80056aa:	6822      	ldr	r2, [r4, #0]
 80056ac:	07d0      	lsls	r0, r2, #31
 80056ae:	d502      	bpl.n	80056b6 <_printf_float+0x19a>
 80056b0:	3301      	adds	r3, #1
 80056b2:	440b      	add	r3, r1
 80056b4:	6123      	str	r3, [r4, #16]
 80056b6:	f04f 0900 	mov.w	r9, #0
 80056ba:	65a1      	str	r1, [r4, #88]	@ 0x58
 80056bc:	e7dc      	b.n	8005678 <_printf_float+0x15c>
 80056be:	b913      	cbnz	r3, 80056c6 <_printf_float+0x1aa>
 80056c0:	6822      	ldr	r2, [r4, #0]
 80056c2:	07d2      	lsls	r2, r2, #31
 80056c4:	d501      	bpl.n	80056ca <_printf_float+0x1ae>
 80056c6:	3302      	adds	r3, #2
 80056c8:	e7f4      	b.n	80056b4 <_printf_float+0x198>
 80056ca:	2301      	movs	r3, #1
 80056cc:	e7f2      	b.n	80056b4 <_printf_float+0x198>
 80056ce:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 80056d2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80056d4:	4299      	cmp	r1, r3
 80056d6:	db05      	blt.n	80056e4 <_printf_float+0x1c8>
 80056d8:	6823      	ldr	r3, [r4, #0]
 80056da:	6121      	str	r1, [r4, #16]
 80056dc:	07d8      	lsls	r0, r3, #31
 80056de:	d5ea      	bpl.n	80056b6 <_printf_float+0x19a>
 80056e0:	1c4b      	adds	r3, r1, #1
 80056e2:	e7e7      	b.n	80056b4 <_printf_float+0x198>
 80056e4:	2900      	cmp	r1, #0
 80056e6:	bfcc      	ite	gt
 80056e8:	2201      	movgt	r2, #1
 80056ea:	f1c1 0202 	rsble	r2, r1, #2
 80056ee:	4413      	add	r3, r2
 80056f0:	e7e0      	b.n	80056b4 <_printf_float+0x198>
 80056f2:	6823      	ldr	r3, [r4, #0]
 80056f4:	055a      	lsls	r2, r3, #21
 80056f6:	d407      	bmi.n	8005708 <_printf_float+0x1ec>
 80056f8:	6923      	ldr	r3, [r4, #16]
 80056fa:	4642      	mov	r2, r8
 80056fc:	4631      	mov	r1, r6
 80056fe:	4628      	mov	r0, r5
 8005700:	47b8      	blx	r7
 8005702:	3001      	adds	r0, #1
 8005704:	d12b      	bne.n	800575e <_printf_float+0x242>
 8005706:	e764      	b.n	80055d2 <_printf_float+0xb6>
 8005708:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800570c:	f240 80dc 	bls.w	80058c8 <_printf_float+0x3ac>
 8005710:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8005714:	2200      	movs	r2, #0
 8005716:	2300      	movs	r3, #0
 8005718:	f7fb f946 	bl	80009a8 <__aeabi_dcmpeq>
 800571c:	2800      	cmp	r0, #0
 800571e:	d033      	beq.n	8005788 <_printf_float+0x26c>
 8005720:	2301      	movs	r3, #1
 8005722:	4631      	mov	r1, r6
 8005724:	4628      	mov	r0, r5
 8005726:	4a35      	ldr	r2, [pc, #212]	@ (80057fc <_printf_float+0x2e0>)
 8005728:	47b8      	blx	r7
 800572a:	3001      	adds	r0, #1
 800572c:	f43f af51 	beq.w	80055d2 <_printf_float+0xb6>
 8005730:	e9dd 380d 	ldrd	r3, r8, [sp, #52]	@ 0x34
 8005734:	4543      	cmp	r3, r8
 8005736:	db02      	blt.n	800573e <_printf_float+0x222>
 8005738:	6823      	ldr	r3, [r4, #0]
 800573a:	07d8      	lsls	r0, r3, #31
 800573c:	d50f      	bpl.n	800575e <_printf_float+0x242>
 800573e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8005742:	4631      	mov	r1, r6
 8005744:	4628      	mov	r0, r5
 8005746:	47b8      	blx	r7
 8005748:	3001      	adds	r0, #1
 800574a:	f43f af42 	beq.w	80055d2 <_printf_float+0xb6>
 800574e:	f04f 0900 	mov.w	r9, #0
 8005752:	f108 38ff 	add.w	r8, r8, #4294967295
 8005756:	f104 0a1a 	add.w	sl, r4, #26
 800575a:	45c8      	cmp	r8, r9
 800575c:	dc09      	bgt.n	8005772 <_printf_float+0x256>
 800575e:	6823      	ldr	r3, [r4, #0]
 8005760:	079b      	lsls	r3, r3, #30
 8005762:	f100 8102 	bmi.w	800596a <_printf_float+0x44e>
 8005766:	68e0      	ldr	r0, [r4, #12]
 8005768:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800576a:	4298      	cmp	r0, r3
 800576c:	bfb8      	it	lt
 800576e:	4618      	movlt	r0, r3
 8005770:	e731      	b.n	80055d6 <_printf_float+0xba>
 8005772:	2301      	movs	r3, #1
 8005774:	4652      	mov	r2, sl
 8005776:	4631      	mov	r1, r6
 8005778:	4628      	mov	r0, r5
 800577a:	47b8      	blx	r7
 800577c:	3001      	adds	r0, #1
 800577e:	f43f af28 	beq.w	80055d2 <_printf_float+0xb6>
 8005782:	f109 0901 	add.w	r9, r9, #1
 8005786:	e7e8      	b.n	800575a <_printf_float+0x23e>
 8005788:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800578a:	2b00      	cmp	r3, #0
 800578c:	dc38      	bgt.n	8005800 <_printf_float+0x2e4>
 800578e:	2301      	movs	r3, #1
 8005790:	4631      	mov	r1, r6
 8005792:	4628      	mov	r0, r5
 8005794:	4a19      	ldr	r2, [pc, #100]	@ (80057fc <_printf_float+0x2e0>)
 8005796:	47b8      	blx	r7
 8005798:	3001      	adds	r0, #1
 800579a:	f43f af1a 	beq.w	80055d2 <_printf_float+0xb6>
 800579e:	e9dd 390d 	ldrd	r3, r9, [sp, #52]	@ 0x34
 80057a2:	ea59 0303 	orrs.w	r3, r9, r3
 80057a6:	d102      	bne.n	80057ae <_printf_float+0x292>
 80057a8:	6823      	ldr	r3, [r4, #0]
 80057aa:	07d9      	lsls	r1, r3, #31
 80057ac:	d5d7      	bpl.n	800575e <_printf_float+0x242>
 80057ae:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80057b2:	4631      	mov	r1, r6
 80057b4:	4628      	mov	r0, r5
 80057b6:	47b8      	blx	r7
 80057b8:	3001      	adds	r0, #1
 80057ba:	f43f af0a 	beq.w	80055d2 <_printf_float+0xb6>
 80057be:	f04f 0a00 	mov.w	sl, #0
 80057c2:	f104 0b1a 	add.w	fp, r4, #26
 80057c6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80057c8:	425b      	negs	r3, r3
 80057ca:	4553      	cmp	r3, sl
 80057cc:	dc01      	bgt.n	80057d2 <_printf_float+0x2b6>
 80057ce:	464b      	mov	r3, r9
 80057d0:	e793      	b.n	80056fa <_printf_float+0x1de>
 80057d2:	2301      	movs	r3, #1
 80057d4:	465a      	mov	r2, fp
 80057d6:	4631      	mov	r1, r6
 80057d8:	4628      	mov	r0, r5
 80057da:	47b8      	blx	r7
 80057dc:	3001      	adds	r0, #1
 80057de:	f43f aef8 	beq.w	80055d2 <_printf_float+0xb6>
 80057e2:	f10a 0a01 	add.w	sl, sl, #1
 80057e6:	e7ee      	b.n	80057c6 <_printf_float+0x2aa>
 80057e8:	7fefffff 	.word	0x7fefffff
 80057ec:	08007eda 	.word	0x08007eda
 80057f0:	08007ede 	.word	0x08007ede
 80057f4:	08007ee2 	.word	0x08007ee2
 80057f8:	08007ee6 	.word	0x08007ee6
 80057fc:	08007eea 	.word	0x08007eea
 8005800:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8005802:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8005806:	4553      	cmp	r3, sl
 8005808:	bfa8      	it	ge
 800580a:	4653      	movge	r3, sl
 800580c:	2b00      	cmp	r3, #0
 800580e:	4699      	mov	r9, r3
 8005810:	dc36      	bgt.n	8005880 <_printf_float+0x364>
 8005812:	f04f 0b00 	mov.w	fp, #0
 8005816:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800581a:	f104 021a 	add.w	r2, r4, #26
 800581e:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8005820:	930a      	str	r3, [sp, #40]	@ 0x28
 8005822:	eba3 0309 	sub.w	r3, r3, r9
 8005826:	455b      	cmp	r3, fp
 8005828:	dc31      	bgt.n	800588e <_printf_float+0x372>
 800582a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800582c:	459a      	cmp	sl, r3
 800582e:	dc3a      	bgt.n	80058a6 <_printf_float+0x38a>
 8005830:	6823      	ldr	r3, [r4, #0]
 8005832:	07da      	lsls	r2, r3, #31
 8005834:	d437      	bmi.n	80058a6 <_printf_float+0x38a>
 8005836:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8005838:	ebaa 0903 	sub.w	r9, sl, r3
 800583c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800583e:	ebaa 0303 	sub.w	r3, sl, r3
 8005842:	4599      	cmp	r9, r3
 8005844:	bfa8      	it	ge
 8005846:	4699      	movge	r9, r3
 8005848:	f1b9 0f00 	cmp.w	r9, #0
 800584c:	dc33      	bgt.n	80058b6 <_printf_float+0x39a>
 800584e:	f04f 0800 	mov.w	r8, #0
 8005852:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8005856:	f104 0b1a 	add.w	fp, r4, #26
 800585a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800585c:	ebaa 0303 	sub.w	r3, sl, r3
 8005860:	eba3 0309 	sub.w	r3, r3, r9
 8005864:	4543      	cmp	r3, r8
 8005866:	f77f af7a 	ble.w	800575e <_printf_float+0x242>
 800586a:	2301      	movs	r3, #1
 800586c:	465a      	mov	r2, fp
 800586e:	4631      	mov	r1, r6
 8005870:	4628      	mov	r0, r5
 8005872:	47b8      	blx	r7
 8005874:	3001      	adds	r0, #1
 8005876:	f43f aeac 	beq.w	80055d2 <_printf_float+0xb6>
 800587a:	f108 0801 	add.w	r8, r8, #1
 800587e:	e7ec      	b.n	800585a <_printf_float+0x33e>
 8005880:	4642      	mov	r2, r8
 8005882:	4631      	mov	r1, r6
 8005884:	4628      	mov	r0, r5
 8005886:	47b8      	blx	r7
 8005888:	3001      	adds	r0, #1
 800588a:	d1c2      	bne.n	8005812 <_printf_float+0x2f6>
 800588c:	e6a1      	b.n	80055d2 <_printf_float+0xb6>
 800588e:	2301      	movs	r3, #1
 8005890:	4631      	mov	r1, r6
 8005892:	4628      	mov	r0, r5
 8005894:	920a      	str	r2, [sp, #40]	@ 0x28
 8005896:	47b8      	blx	r7
 8005898:	3001      	adds	r0, #1
 800589a:	f43f ae9a 	beq.w	80055d2 <_printf_float+0xb6>
 800589e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80058a0:	f10b 0b01 	add.w	fp, fp, #1
 80058a4:	e7bb      	b.n	800581e <_printf_float+0x302>
 80058a6:	4631      	mov	r1, r6
 80058a8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80058ac:	4628      	mov	r0, r5
 80058ae:	47b8      	blx	r7
 80058b0:	3001      	adds	r0, #1
 80058b2:	d1c0      	bne.n	8005836 <_printf_float+0x31a>
 80058b4:	e68d      	b.n	80055d2 <_printf_float+0xb6>
 80058b6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80058b8:	464b      	mov	r3, r9
 80058ba:	4631      	mov	r1, r6
 80058bc:	4628      	mov	r0, r5
 80058be:	4442      	add	r2, r8
 80058c0:	47b8      	blx	r7
 80058c2:	3001      	adds	r0, #1
 80058c4:	d1c3      	bne.n	800584e <_printf_float+0x332>
 80058c6:	e684      	b.n	80055d2 <_printf_float+0xb6>
 80058c8:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 80058cc:	f1ba 0f01 	cmp.w	sl, #1
 80058d0:	dc01      	bgt.n	80058d6 <_printf_float+0x3ba>
 80058d2:	07db      	lsls	r3, r3, #31
 80058d4:	d536      	bpl.n	8005944 <_printf_float+0x428>
 80058d6:	2301      	movs	r3, #1
 80058d8:	4642      	mov	r2, r8
 80058da:	4631      	mov	r1, r6
 80058dc:	4628      	mov	r0, r5
 80058de:	47b8      	blx	r7
 80058e0:	3001      	adds	r0, #1
 80058e2:	f43f ae76 	beq.w	80055d2 <_printf_float+0xb6>
 80058e6:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80058ea:	4631      	mov	r1, r6
 80058ec:	4628      	mov	r0, r5
 80058ee:	47b8      	blx	r7
 80058f0:	3001      	adds	r0, #1
 80058f2:	f43f ae6e 	beq.w	80055d2 <_printf_float+0xb6>
 80058f6:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 80058fa:	2200      	movs	r2, #0
 80058fc:	2300      	movs	r3, #0
 80058fe:	f10a 3aff 	add.w	sl, sl, #4294967295
 8005902:	f7fb f851 	bl	80009a8 <__aeabi_dcmpeq>
 8005906:	b9c0      	cbnz	r0, 800593a <_printf_float+0x41e>
 8005908:	4653      	mov	r3, sl
 800590a:	f108 0201 	add.w	r2, r8, #1
 800590e:	4631      	mov	r1, r6
 8005910:	4628      	mov	r0, r5
 8005912:	47b8      	blx	r7
 8005914:	3001      	adds	r0, #1
 8005916:	d10c      	bne.n	8005932 <_printf_float+0x416>
 8005918:	e65b      	b.n	80055d2 <_printf_float+0xb6>
 800591a:	2301      	movs	r3, #1
 800591c:	465a      	mov	r2, fp
 800591e:	4631      	mov	r1, r6
 8005920:	4628      	mov	r0, r5
 8005922:	47b8      	blx	r7
 8005924:	3001      	adds	r0, #1
 8005926:	f43f ae54 	beq.w	80055d2 <_printf_float+0xb6>
 800592a:	f108 0801 	add.w	r8, r8, #1
 800592e:	45d0      	cmp	r8, sl
 8005930:	dbf3      	blt.n	800591a <_printf_float+0x3fe>
 8005932:	464b      	mov	r3, r9
 8005934:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8005938:	e6e0      	b.n	80056fc <_printf_float+0x1e0>
 800593a:	f04f 0800 	mov.w	r8, #0
 800593e:	f104 0b1a 	add.w	fp, r4, #26
 8005942:	e7f4      	b.n	800592e <_printf_float+0x412>
 8005944:	2301      	movs	r3, #1
 8005946:	4642      	mov	r2, r8
 8005948:	e7e1      	b.n	800590e <_printf_float+0x3f2>
 800594a:	2301      	movs	r3, #1
 800594c:	464a      	mov	r2, r9
 800594e:	4631      	mov	r1, r6
 8005950:	4628      	mov	r0, r5
 8005952:	47b8      	blx	r7
 8005954:	3001      	adds	r0, #1
 8005956:	f43f ae3c 	beq.w	80055d2 <_printf_float+0xb6>
 800595a:	f108 0801 	add.w	r8, r8, #1
 800595e:	68e3      	ldr	r3, [r4, #12]
 8005960:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8005962:	1a5b      	subs	r3, r3, r1
 8005964:	4543      	cmp	r3, r8
 8005966:	dcf0      	bgt.n	800594a <_printf_float+0x42e>
 8005968:	e6fd      	b.n	8005766 <_printf_float+0x24a>
 800596a:	f04f 0800 	mov.w	r8, #0
 800596e:	f104 0919 	add.w	r9, r4, #25
 8005972:	e7f4      	b.n	800595e <_printf_float+0x442>

08005974 <_printf_common>:
 8005974:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005978:	4616      	mov	r6, r2
 800597a:	4698      	mov	r8, r3
 800597c:	688a      	ldr	r2, [r1, #8]
 800597e:	690b      	ldr	r3, [r1, #16]
 8005980:	4607      	mov	r7, r0
 8005982:	4293      	cmp	r3, r2
 8005984:	bfb8      	it	lt
 8005986:	4613      	movlt	r3, r2
 8005988:	6033      	str	r3, [r6, #0]
 800598a:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800598e:	460c      	mov	r4, r1
 8005990:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8005994:	b10a      	cbz	r2, 800599a <_printf_common+0x26>
 8005996:	3301      	adds	r3, #1
 8005998:	6033      	str	r3, [r6, #0]
 800599a:	6823      	ldr	r3, [r4, #0]
 800599c:	0699      	lsls	r1, r3, #26
 800599e:	bf42      	ittt	mi
 80059a0:	6833      	ldrmi	r3, [r6, #0]
 80059a2:	3302      	addmi	r3, #2
 80059a4:	6033      	strmi	r3, [r6, #0]
 80059a6:	6825      	ldr	r5, [r4, #0]
 80059a8:	f015 0506 	ands.w	r5, r5, #6
 80059ac:	d106      	bne.n	80059bc <_printf_common+0x48>
 80059ae:	f104 0a19 	add.w	sl, r4, #25
 80059b2:	68e3      	ldr	r3, [r4, #12]
 80059b4:	6832      	ldr	r2, [r6, #0]
 80059b6:	1a9b      	subs	r3, r3, r2
 80059b8:	42ab      	cmp	r3, r5
 80059ba:	dc2b      	bgt.n	8005a14 <_printf_common+0xa0>
 80059bc:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 80059c0:	6822      	ldr	r2, [r4, #0]
 80059c2:	3b00      	subs	r3, #0
 80059c4:	bf18      	it	ne
 80059c6:	2301      	movne	r3, #1
 80059c8:	0692      	lsls	r2, r2, #26
 80059ca:	d430      	bmi.n	8005a2e <_printf_common+0xba>
 80059cc:	4641      	mov	r1, r8
 80059ce:	4638      	mov	r0, r7
 80059d0:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80059d4:	47c8      	blx	r9
 80059d6:	3001      	adds	r0, #1
 80059d8:	d023      	beq.n	8005a22 <_printf_common+0xae>
 80059da:	6823      	ldr	r3, [r4, #0]
 80059dc:	6922      	ldr	r2, [r4, #16]
 80059de:	f003 0306 	and.w	r3, r3, #6
 80059e2:	2b04      	cmp	r3, #4
 80059e4:	bf14      	ite	ne
 80059e6:	2500      	movne	r5, #0
 80059e8:	6833      	ldreq	r3, [r6, #0]
 80059ea:	f04f 0600 	mov.w	r6, #0
 80059ee:	bf08      	it	eq
 80059f0:	68e5      	ldreq	r5, [r4, #12]
 80059f2:	f104 041a 	add.w	r4, r4, #26
 80059f6:	bf08      	it	eq
 80059f8:	1aed      	subeq	r5, r5, r3
 80059fa:	f854 3c12 	ldr.w	r3, [r4, #-18]
 80059fe:	bf08      	it	eq
 8005a00:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8005a04:	4293      	cmp	r3, r2
 8005a06:	bfc4      	itt	gt
 8005a08:	1a9b      	subgt	r3, r3, r2
 8005a0a:	18ed      	addgt	r5, r5, r3
 8005a0c:	42b5      	cmp	r5, r6
 8005a0e:	d11a      	bne.n	8005a46 <_printf_common+0xd2>
 8005a10:	2000      	movs	r0, #0
 8005a12:	e008      	b.n	8005a26 <_printf_common+0xb2>
 8005a14:	2301      	movs	r3, #1
 8005a16:	4652      	mov	r2, sl
 8005a18:	4641      	mov	r1, r8
 8005a1a:	4638      	mov	r0, r7
 8005a1c:	47c8      	blx	r9
 8005a1e:	3001      	adds	r0, #1
 8005a20:	d103      	bne.n	8005a2a <_printf_common+0xb6>
 8005a22:	f04f 30ff 	mov.w	r0, #4294967295
 8005a26:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005a2a:	3501      	adds	r5, #1
 8005a2c:	e7c1      	b.n	80059b2 <_printf_common+0x3e>
 8005a2e:	2030      	movs	r0, #48	@ 0x30
 8005a30:	18e1      	adds	r1, r4, r3
 8005a32:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8005a36:	1c5a      	adds	r2, r3, #1
 8005a38:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8005a3c:	4422      	add	r2, r4
 8005a3e:	3302      	adds	r3, #2
 8005a40:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8005a44:	e7c2      	b.n	80059cc <_printf_common+0x58>
 8005a46:	2301      	movs	r3, #1
 8005a48:	4622      	mov	r2, r4
 8005a4a:	4641      	mov	r1, r8
 8005a4c:	4638      	mov	r0, r7
 8005a4e:	47c8      	blx	r9
 8005a50:	3001      	adds	r0, #1
 8005a52:	d0e6      	beq.n	8005a22 <_printf_common+0xae>
 8005a54:	3601      	adds	r6, #1
 8005a56:	e7d9      	b.n	8005a0c <_printf_common+0x98>

08005a58 <_printf_i>:
 8005a58:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005a5c:	7e0f      	ldrb	r7, [r1, #24]
 8005a5e:	4691      	mov	r9, r2
 8005a60:	2f78      	cmp	r7, #120	@ 0x78
 8005a62:	4680      	mov	r8, r0
 8005a64:	460c      	mov	r4, r1
 8005a66:	469a      	mov	sl, r3
 8005a68:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8005a6a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8005a6e:	d807      	bhi.n	8005a80 <_printf_i+0x28>
 8005a70:	2f62      	cmp	r7, #98	@ 0x62
 8005a72:	d80a      	bhi.n	8005a8a <_printf_i+0x32>
 8005a74:	2f00      	cmp	r7, #0
 8005a76:	f000 80d3 	beq.w	8005c20 <_printf_i+0x1c8>
 8005a7a:	2f58      	cmp	r7, #88	@ 0x58
 8005a7c:	f000 80ba 	beq.w	8005bf4 <_printf_i+0x19c>
 8005a80:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8005a84:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8005a88:	e03a      	b.n	8005b00 <_printf_i+0xa8>
 8005a8a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8005a8e:	2b15      	cmp	r3, #21
 8005a90:	d8f6      	bhi.n	8005a80 <_printf_i+0x28>
 8005a92:	a101      	add	r1, pc, #4	@ (adr r1, 8005a98 <_printf_i+0x40>)
 8005a94:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8005a98:	08005af1 	.word	0x08005af1
 8005a9c:	08005b05 	.word	0x08005b05
 8005aa0:	08005a81 	.word	0x08005a81
 8005aa4:	08005a81 	.word	0x08005a81
 8005aa8:	08005a81 	.word	0x08005a81
 8005aac:	08005a81 	.word	0x08005a81
 8005ab0:	08005b05 	.word	0x08005b05
 8005ab4:	08005a81 	.word	0x08005a81
 8005ab8:	08005a81 	.word	0x08005a81
 8005abc:	08005a81 	.word	0x08005a81
 8005ac0:	08005a81 	.word	0x08005a81
 8005ac4:	08005c07 	.word	0x08005c07
 8005ac8:	08005b2f 	.word	0x08005b2f
 8005acc:	08005bc1 	.word	0x08005bc1
 8005ad0:	08005a81 	.word	0x08005a81
 8005ad4:	08005a81 	.word	0x08005a81
 8005ad8:	08005c29 	.word	0x08005c29
 8005adc:	08005a81 	.word	0x08005a81
 8005ae0:	08005b2f 	.word	0x08005b2f
 8005ae4:	08005a81 	.word	0x08005a81
 8005ae8:	08005a81 	.word	0x08005a81
 8005aec:	08005bc9 	.word	0x08005bc9
 8005af0:	6833      	ldr	r3, [r6, #0]
 8005af2:	1d1a      	adds	r2, r3, #4
 8005af4:	681b      	ldr	r3, [r3, #0]
 8005af6:	6032      	str	r2, [r6, #0]
 8005af8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8005afc:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8005b00:	2301      	movs	r3, #1
 8005b02:	e09e      	b.n	8005c42 <_printf_i+0x1ea>
 8005b04:	6833      	ldr	r3, [r6, #0]
 8005b06:	6820      	ldr	r0, [r4, #0]
 8005b08:	1d19      	adds	r1, r3, #4
 8005b0a:	6031      	str	r1, [r6, #0]
 8005b0c:	0606      	lsls	r6, r0, #24
 8005b0e:	d501      	bpl.n	8005b14 <_printf_i+0xbc>
 8005b10:	681d      	ldr	r5, [r3, #0]
 8005b12:	e003      	b.n	8005b1c <_printf_i+0xc4>
 8005b14:	0645      	lsls	r5, r0, #25
 8005b16:	d5fb      	bpl.n	8005b10 <_printf_i+0xb8>
 8005b18:	f9b3 5000 	ldrsh.w	r5, [r3]
 8005b1c:	2d00      	cmp	r5, #0
 8005b1e:	da03      	bge.n	8005b28 <_printf_i+0xd0>
 8005b20:	232d      	movs	r3, #45	@ 0x2d
 8005b22:	426d      	negs	r5, r5
 8005b24:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8005b28:	230a      	movs	r3, #10
 8005b2a:	4859      	ldr	r0, [pc, #356]	@ (8005c90 <_printf_i+0x238>)
 8005b2c:	e011      	b.n	8005b52 <_printf_i+0xfa>
 8005b2e:	6821      	ldr	r1, [r4, #0]
 8005b30:	6833      	ldr	r3, [r6, #0]
 8005b32:	0608      	lsls	r0, r1, #24
 8005b34:	f853 5b04 	ldr.w	r5, [r3], #4
 8005b38:	d402      	bmi.n	8005b40 <_printf_i+0xe8>
 8005b3a:	0649      	lsls	r1, r1, #25
 8005b3c:	bf48      	it	mi
 8005b3e:	b2ad      	uxthmi	r5, r5
 8005b40:	2f6f      	cmp	r7, #111	@ 0x6f
 8005b42:	6033      	str	r3, [r6, #0]
 8005b44:	bf14      	ite	ne
 8005b46:	230a      	movne	r3, #10
 8005b48:	2308      	moveq	r3, #8
 8005b4a:	4851      	ldr	r0, [pc, #324]	@ (8005c90 <_printf_i+0x238>)
 8005b4c:	2100      	movs	r1, #0
 8005b4e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8005b52:	6866      	ldr	r6, [r4, #4]
 8005b54:	2e00      	cmp	r6, #0
 8005b56:	bfa8      	it	ge
 8005b58:	6821      	ldrge	r1, [r4, #0]
 8005b5a:	60a6      	str	r6, [r4, #8]
 8005b5c:	bfa4      	itt	ge
 8005b5e:	f021 0104 	bicge.w	r1, r1, #4
 8005b62:	6021      	strge	r1, [r4, #0]
 8005b64:	b90d      	cbnz	r5, 8005b6a <_printf_i+0x112>
 8005b66:	2e00      	cmp	r6, #0
 8005b68:	d04b      	beq.n	8005c02 <_printf_i+0x1aa>
 8005b6a:	4616      	mov	r6, r2
 8005b6c:	fbb5 f1f3 	udiv	r1, r5, r3
 8005b70:	fb03 5711 	mls	r7, r3, r1, r5
 8005b74:	5dc7      	ldrb	r7, [r0, r7]
 8005b76:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8005b7a:	462f      	mov	r7, r5
 8005b7c:	42bb      	cmp	r3, r7
 8005b7e:	460d      	mov	r5, r1
 8005b80:	d9f4      	bls.n	8005b6c <_printf_i+0x114>
 8005b82:	2b08      	cmp	r3, #8
 8005b84:	d10b      	bne.n	8005b9e <_printf_i+0x146>
 8005b86:	6823      	ldr	r3, [r4, #0]
 8005b88:	07df      	lsls	r7, r3, #31
 8005b8a:	d508      	bpl.n	8005b9e <_printf_i+0x146>
 8005b8c:	6923      	ldr	r3, [r4, #16]
 8005b8e:	6861      	ldr	r1, [r4, #4]
 8005b90:	4299      	cmp	r1, r3
 8005b92:	bfde      	ittt	le
 8005b94:	2330      	movle	r3, #48	@ 0x30
 8005b96:	f806 3c01 	strble.w	r3, [r6, #-1]
 8005b9a:	f106 36ff 	addle.w	r6, r6, #4294967295
 8005b9e:	1b92      	subs	r2, r2, r6
 8005ba0:	6122      	str	r2, [r4, #16]
 8005ba2:	464b      	mov	r3, r9
 8005ba4:	4621      	mov	r1, r4
 8005ba6:	4640      	mov	r0, r8
 8005ba8:	f8cd a000 	str.w	sl, [sp]
 8005bac:	aa03      	add	r2, sp, #12
 8005bae:	f7ff fee1 	bl	8005974 <_printf_common>
 8005bb2:	3001      	adds	r0, #1
 8005bb4:	d14a      	bne.n	8005c4c <_printf_i+0x1f4>
 8005bb6:	f04f 30ff 	mov.w	r0, #4294967295
 8005bba:	b004      	add	sp, #16
 8005bbc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005bc0:	6823      	ldr	r3, [r4, #0]
 8005bc2:	f043 0320 	orr.w	r3, r3, #32
 8005bc6:	6023      	str	r3, [r4, #0]
 8005bc8:	2778      	movs	r7, #120	@ 0x78
 8005bca:	4832      	ldr	r0, [pc, #200]	@ (8005c94 <_printf_i+0x23c>)
 8005bcc:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8005bd0:	6823      	ldr	r3, [r4, #0]
 8005bd2:	6831      	ldr	r1, [r6, #0]
 8005bd4:	061f      	lsls	r7, r3, #24
 8005bd6:	f851 5b04 	ldr.w	r5, [r1], #4
 8005bda:	d402      	bmi.n	8005be2 <_printf_i+0x18a>
 8005bdc:	065f      	lsls	r7, r3, #25
 8005bde:	bf48      	it	mi
 8005be0:	b2ad      	uxthmi	r5, r5
 8005be2:	6031      	str	r1, [r6, #0]
 8005be4:	07d9      	lsls	r1, r3, #31
 8005be6:	bf44      	itt	mi
 8005be8:	f043 0320 	orrmi.w	r3, r3, #32
 8005bec:	6023      	strmi	r3, [r4, #0]
 8005bee:	b11d      	cbz	r5, 8005bf8 <_printf_i+0x1a0>
 8005bf0:	2310      	movs	r3, #16
 8005bf2:	e7ab      	b.n	8005b4c <_printf_i+0xf4>
 8005bf4:	4826      	ldr	r0, [pc, #152]	@ (8005c90 <_printf_i+0x238>)
 8005bf6:	e7e9      	b.n	8005bcc <_printf_i+0x174>
 8005bf8:	6823      	ldr	r3, [r4, #0]
 8005bfa:	f023 0320 	bic.w	r3, r3, #32
 8005bfe:	6023      	str	r3, [r4, #0]
 8005c00:	e7f6      	b.n	8005bf0 <_printf_i+0x198>
 8005c02:	4616      	mov	r6, r2
 8005c04:	e7bd      	b.n	8005b82 <_printf_i+0x12a>
 8005c06:	6833      	ldr	r3, [r6, #0]
 8005c08:	6825      	ldr	r5, [r4, #0]
 8005c0a:	1d18      	adds	r0, r3, #4
 8005c0c:	6961      	ldr	r1, [r4, #20]
 8005c0e:	6030      	str	r0, [r6, #0]
 8005c10:	062e      	lsls	r6, r5, #24
 8005c12:	681b      	ldr	r3, [r3, #0]
 8005c14:	d501      	bpl.n	8005c1a <_printf_i+0x1c2>
 8005c16:	6019      	str	r1, [r3, #0]
 8005c18:	e002      	b.n	8005c20 <_printf_i+0x1c8>
 8005c1a:	0668      	lsls	r0, r5, #25
 8005c1c:	d5fb      	bpl.n	8005c16 <_printf_i+0x1be>
 8005c1e:	8019      	strh	r1, [r3, #0]
 8005c20:	2300      	movs	r3, #0
 8005c22:	4616      	mov	r6, r2
 8005c24:	6123      	str	r3, [r4, #16]
 8005c26:	e7bc      	b.n	8005ba2 <_printf_i+0x14a>
 8005c28:	6833      	ldr	r3, [r6, #0]
 8005c2a:	2100      	movs	r1, #0
 8005c2c:	1d1a      	adds	r2, r3, #4
 8005c2e:	6032      	str	r2, [r6, #0]
 8005c30:	681e      	ldr	r6, [r3, #0]
 8005c32:	6862      	ldr	r2, [r4, #4]
 8005c34:	4630      	mov	r0, r6
 8005c36:	f000 fab6 	bl	80061a6 <memchr>
 8005c3a:	b108      	cbz	r0, 8005c40 <_printf_i+0x1e8>
 8005c3c:	1b80      	subs	r0, r0, r6
 8005c3e:	6060      	str	r0, [r4, #4]
 8005c40:	6863      	ldr	r3, [r4, #4]
 8005c42:	6123      	str	r3, [r4, #16]
 8005c44:	2300      	movs	r3, #0
 8005c46:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8005c4a:	e7aa      	b.n	8005ba2 <_printf_i+0x14a>
 8005c4c:	4632      	mov	r2, r6
 8005c4e:	4649      	mov	r1, r9
 8005c50:	4640      	mov	r0, r8
 8005c52:	6923      	ldr	r3, [r4, #16]
 8005c54:	47d0      	blx	sl
 8005c56:	3001      	adds	r0, #1
 8005c58:	d0ad      	beq.n	8005bb6 <_printf_i+0x15e>
 8005c5a:	6823      	ldr	r3, [r4, #0]
 8005c5c:	079b      	lsls	r3, r3, #30
 8005c5e:	d413      	bmi.n	8005c88 <_printf_i+0x230>
 8005c60:	68e0      	ldr	r0, [r4, #12]
 8005c62:	9b03      	ldr	r3, [sp, #12]
 8005c64:	4298      	cmp	r0, r3
 8005c66:	bfb8      	it	lt
 8005c68:	4618      	movlt	r0, r3
 8005c6a:	e7a6      	b.n	8005bba <_printf_i+0x162>
 8005c6c:	2301      	movs	r3, #1
 8005c6e:	4632      	mov	r2, r6
 8005c70:	4649      	mov	r1, r9
 8005c72:	4640      	mov	r0, r8
 8005c74:	47d0      	blx	sl
 8005c76:	3001      	adds	r0, #1
 8005c78:	d09d      	beq.n	8005bb6 <_printf_i+0x15e>
 8005c7a:	3501      	adds	r5, #1
 8005c7c:	68e3      	ldr	r3, [r4, #12]
 8005c7e:	9903      	ldr	r1, [sp, #12]
 8005c80:	1a5b      	subs	r3, r3, r1
 8005c82:	42ab      	cmp	r3, r5
 8005c84:	dcf2      	bgt.n	8005c6c <_printf_i+0x214>
 8005c86:	e7eb      	b.n	8005c60 <_printf_i+0x208>
 8005c88:	2500      	movs	r5, #0
 8005c8a:	f104 0619 	add.w	r6, r4, #25
 8005c8e:	e7f5      	b.n	8005c7c <_printf_i+0x224>
 8005c90:	08007eec 	.word	0x08007eec
 8005c94:	08007efd 	.word	0x08007efd

08005c98 <std>:
 8005c98:	2300      	movs	r3, #0
 8005c9a:	b510      	push	{r4, lr}
 8005c9c:	4604      	mov	r4, r0
 8005c9e:	e9c0 3300 	strd	r3, r3, [r0]
 8005ca2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8005ca6:	6083      	str	r3, [r0, #8]
 8005ca8:	8181      	strh	r1, [r0, #12]
 8005caa:	6643      	str	r3, [r0, #100]	@ 0x64
 8005cac:	81c2      	strh	r2, [r0, #14]
 8005cae:	6183      	str	r3, [r0, #24]
 8005cb0:	4619      	mov	r1, r3
 8005cb2:	2208      	movs	r2, #8
 8005cb4:	305c      	adds	r0, #92	@ 0x5c
 8005cb6:	f000 f9e7 	bl	8006088 <memset>
 8005cba:	4b0d      	ldr	r3, [pc, #52]	@ (8005cf0 <std+0x58>)
 8005cbc:	6224      	str	r4, [r4, #32]
 8005cbe:	6263      	str	r3, [r4, #36]	@ 0x24
 8005cc0:	4b0c      	ldr	r3, [pc, #48]	@ (8005cf4 <std+0x5c>)
 8005cc2:	62a3      	str	r3, [r4, #40]	@ 0x28
 8005cc4:	4b0c      	ldr	r3, [pc, #48]	@ (8005cf8 <std+0x60>)
 8005cc6:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8005cc8:	4b0c      	ldr	r3, [pc, #48]	@ (8005cfc <std+0x64>)
 8005cca:	6323      	str	r3, [r4, #48]	@ 0x30
 8005ccc:	4b0c      	ldr	r3, [pc, #48]	@ (8005d00 <std+0x68>)
 8005cce:	429c      	cmp	r4, r3
 8005cd0:	d006      	beq.n	8005ce0 <std+0x48>
 8005cd2:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8005cd6:	4294      	cmp	r4, r2
 8005cd8:	d002      	beq.n	8005ce0 <std+0x48>
 8005cda:	33d0      	adds	r3, #208	@ 0xd0
 8005cdc:	429c      	cmp	r4, r3
 8005cde:	d105      	bne.n	8005cec <std+0x54>
 8005ce0:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8005ce4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005ce8:	f000 ba5a 	b.w	80061a0 <__retarget_lock_init_recursive>
 8005cec:	bd10      	pop	{r4, pc}
 8005cee:	bf00      	nop
 8005cf0:	08005ed9 	.word	0x08005ed9
 8005cf4:	08005efb 	.word	0x08005efb
 8005cf8:	08005f33 	.word	0x08005f33
 8005cfc:	08005f57 	.word	0x08005f57
 8005d00:	20000648 	.word	0x20000648

08005d04 <stdio_exit_handler>:
 8005d04:	4a02      	ldr	r2, [pc, #8]	@ (8005d10 <stdio_exit_handler+0xc>)
 8005d06:	4903      	ldr	r1, [pc, #12]	@ (8005d14 <stdio_exit_handler+0x10>)
 8005d08:	4803      	ldr	r0, [pc, #12]	@ (8005d18 <stdio_exit_handler+0x14>)
 8005d0a:	f000 b869 	b.w	8005de0 <_fwalk_sglue>
 8005d0e:	bf00      	nop
 8005d10:	2000000c 	.word	0x2000000c
 8005d14:	080079d1 	.word	0x080079d1
 8005d18:	2000001c 	.word	0x2000001c

08005d1c <cleanup_stdio>:
 8005d1c:	6841      	ldr	r1, [r0, #4]
 8005d1e:	4b0c      	ldr	r3, [pc, #48]	@ (8005d50 <cleanup_stdio+0x34>)
 8005d20:	b510      	push	{r4, lr}
 8005d22:	4299      	cmp	r1, r3
 8005d24:	4604      	mov	r4, r0
 8005d26:	d001      	beq.n	8005d2c <cleanup_stdio+0x10>
 8005d28:	f001 fe52 	bl	80079d0 <_fflush_r>
 8005d2c:	68a1      	ldr	r1, [r4, #8]
 8005d2e:	4b09      	ldr	r3, [pc, #36]	@ (8005d54 <cleanup_stdio+0x38>)
 8005d30:	4299      	cmp	r1, r3
 8005d32:	d002      	beq.n	8005d3a <cleanup_stdio+0x1e>
 8005d34:	4620      	mov	r0, r4
 8005d36:	f001 fe4b 	bl	80079d0 <_fflush_r>
 8005d3a:	68e1      	ldr	r1, [r4, #12]
 8005d3c:	4b06      	ldr	r3, [pc, #24]	@ (8005d58 <cleanup_stdio+0x3c>)
 8005d3e:	4299      	cmp	r1, r3
 8005d40:	d004      	beq.n	8005d4c <cleanup_stdio+0x30>
 8005d42:	4620      	mov	r0, r4
 8005d44:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005d48:	f001 be42 	b.w	80079d0 <_fflush_r>
 8005d4c:	bd10      	pop	{r4, pc}
 8005d4e:	bf00      	nop
 8005d50:	20000648 	.word	0x20000648
 8005d54:	200006b0 	.word	0x200006b0
 8005d58:	20000718 	.word	0x20000718

08005d5c <global_stdio_init.part.0>:
 8005d5c:	b510      	push	{r4, lr}
 8005d5e:	4b0b      	ldr	r3, [pc, #44]	@ (8005d8c <global_stdio_init.part.0+0x30>)
 8005d60:	4c0b      	ldr	r4, [pc, #44]	@ (8005d90 <global_stdio_init.part.0+0x34>)
 8005d62:	4a0c      	ldr	r2, [pc, #48]	@ (8005d94 <global_stdio_init.part.0+0x38>)
 8005d64:	4620      	mov	r0, r4
 8005d66:	601a      	str	r2, [r3, #0]
 8005d68:	2104      	movs	r1, #4
 8005d6a:	2200      	movs	r2, #0
 8005d6c:	f7ff ff94 	bl	8005c98 <std>
 8005d70:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8005d74:	2201      	movs	r2, #1
 8005d76:	2109      	movs	r1, #9
 8005d78:	f7ff ff8e 	bl	8005c98 <std>
 8005d7c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8005d80:	2202      	movs	r2, #2
 8005d82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005d86:	2112      	movs	r1, #18
 8005d88:	f7ff bf86 	b.w	8005c98 <std>
 8005d8c:	20000780 	.word	0x20000780
 8005d90:	20000648 	.word	0x20000648
 8005d94:	08005d05 	.word	0x08005d05

08005d98 <__sfp_lock_acquire>:
 8005d98:	4801      	ldr	r0, [pc, #4]	@ (8005da0 <__sfp_lock_acquire+0x8>)
 8005d9a:	f000 ba02 	b.w	80061a2 <__retarget_lock_acquire_recursive>
 8005d9e:	bf00      	nop
 8005da0:	20000789 	.word	0x20000789

08005da4 <__sfp_lock_release>:
 8005da4:	4801      	ldr	r0, [pc, #4]	@ (8005dac <__sfp_lock_release+0x8>)
 8005da6:	f000 b9fd 	b.w	80061a4 <__retarget_lock_release_recursive>
 8005daa:	bf00      	nop
 8005dac:	20000789 	.word	0x20000789

08005db0 <__sinit>:
 8005db0:	b510      	push	{r4, lr}
 8005db2:	4604      	mov	r4, r0
 8005db4:	f7ff fff0 	bl	8005d98 <__sfp_lock_acquire>
 8005db8:	6a23      	ldr	r3, [r4, #32]
 8005dba:	b11b      	cbz	r3, 8005dc4 <__sinit+0x14>
 8005dbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005dc0:	f7ff bff0 	b.w	8005da4 <__sfp_lock_release>
 8005dc4:	4b04      	ldr	r3, [pc, #16]	@ (8005dd8 <__sinit+0x28>)
 8005dc6:	6223      	str	r3, [r4, #32]
 8005dc8:	4b04      	ldr	r3, [pc, #16]	@ (8005ddc <__sinit+0x2c>)
 8005dca:	681b      	ldr	r3, [r3, #0]
 8005dcc:	2b00      	cmp	r3, #0
 8005dce:	d1f5      	bne.n	8005dbc <__sinit+0xc>
 8005dd0:	f7ff ffc4 	bl	8005d5c <global_stdio_init.part.0>
 8005dd4:	e7f2      	b.n	8005dbc <__sinit+0xc>
 8005dd6:	bf00      	nop
 8005dd8:	08005d1d 	.word	0x08005d1d
 8005ddc:	20000780 	.word	0x20000780

08005de0 <_fwalk_sglue>:
 8005de0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005de4:	4607      	mov	r7, r0
 8005de6:	4688      	mov	r8, r1
 8005de8:	4614      	mov	r4, r2
 8005dea:	2600      	movs	r6, #0
 8005dec:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8005df0:	f1b9 0901 	subs.w	r9, r9, #1
 8005df4:	d505      	bpl.n	8005e02 <_fwalk_sglue+0x22>
 8005df6:	6824      	ldr	r4, [r4, #0]
 8005df8:	2c00      	cmp	r4, #0
 8005dfa:	d1f7      	bne.n	8005dec <_fwalk_sglue+0xc>
 8005dfc:	4630      	mov	r0, r6
 8005dfe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005e02:	89ab      	ldrh	r3, [r5, #12]
 8005e04:	2b01      	cmp	r3, #1
 8005e06:	d907      	bls.n	8005e18 <_fwalk_sglue+0x38>
 8005e08:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8005e0c:	3301      	adds	r3, #1
 8005e0e:	d003      	beq.n	8005e18 <_fwalk_sglue+0x38>
 8005e10:	4629      	mov	r1, r5
 8005e12:	4638      	mov	r0, r7
 8005e14:	47c0      	blx	r8
 8005e16:	4306      	orrs	r6, r0
 8005e18:	3568      	adds	r5, #104	@ 0x68
 8005e1a:	e7e9      	b.n	8005df0 <_fwalk_sglue+0x10>

08005e1c <_puts_r>:
 8005e1c:	6a03      	ldr	r3, [r0, #32]
 8005e1e:	b570      	push	{r4, r5, r6, lr}
 8005e20:	4605      	mov	r5, r0
 8005e22:	460e      	mov	r6, r1
 8005e24:	6884      	ldr	r4, [r0, #8]
 8005e26:	b90b      	cbnz	r3, 8005e2c <_puts_r+0x10>
 8005e28:	f7ff ffc2 	bl	8005db0 <__sinit>
 8005e2c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8005e2e:	07db      	lsls	r3, r3, #31
 8005e30:	d405      	bmi.n	8005e3e <_puts_r+0x22>
 8005e32:	89a3      	ldrh	r3, [r4, #12]
 8005e34:	0598      	lsls	r0, r3, #22
 8005e36:	d402      	bmi.n	8005e3e <_puts_r+0x22>
 8005e38:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8005e3a:	f000 f9b2 	bl	80061a2 <__retarget_lock_acquire_recursive>
 8005e3e:	89a3      	ldrh	r3, [r4, #12]
 8005e40:	0719      	lsls	r1, r3, #28
 8005e42:	d502      	bpl.n	8005e4a <_puts_r+0x2e>
 8005e44:	6923      	ldr	r3, [r4, #16]
 8005e46:	2b00      	cmp	r3, #0
 8005e48:	d135      	bne.n	8005eb6 <_puts_r+0x9a>
 8005e4a:	4621      	mov	r1, r4
 8005e4c:	4628      	mov	r0, r5
 8005e4e:	f000 f8c5 	bl	8005fdc <__swsetup_r>
 8005e52:	b380      	cbz	r0, 8005eb6 <_puts_r+0x9a>
 8005e54:	f04f 35ff 	mov.w	r5, #4294967295
 8005e58:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8005e5a:	07da      	lsls	r2, r3, #31
 8005e5c:	d405      	bmi.n	8005e6a <_puts_r+0x4e>
 8005e5e:	89a3      	ldrh	r3, [r4, #12]
 8005e60:	059b      	lsls	r3, r3, #22
 8005e62:	d402      	bmi.n	8005e6a <_puts_r+0x4e>
 8005e64:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8005e66:	f000 f99d 	bl	80061a4 <__retarget_lock_release_recursive>
 8005e6a:	4628      	mov	r0, r5
 8005e6c:	bd70      	pop	{r4, r5, r6, pc}
 8005e6e:	2b00      	cmp	r3, #0
 8005e70:	da04      	bge.n	8005e7c <_puts_r+0x60>
 8005e72:	69a2      	ldr	r2, [r4, #24]
 8005e74:	429a      	cmp	r2, r3
 8005e76:	dc17      	bgt.n	8005ea8 <_puts_r+0x8c>
 8005e78:	290a      	cmp	r1, #10
 8005e7a:	d015      	beq.n	8005ea8 <_puts_r+0x8c>
 8005e7c:	6823      	ldr	r3, [r4, #0]
 8005e7e:	1c5a      	adds	r2, r3, #1
 8005e80:	6022      	str	r2, [r4, #0]
 8005e82:	7019      	strb	r1, [r3, #0]
 8005e84:	68a3      	ldr	r3, [r4, #8]
 8005e86:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8005e8a:	3b01      	subs	r3, #1
 8005e8c:	60a3      	str	r3, [r4, #8]
 8005e8e:	2900      	cmp	r1, #0
 8005e90:	d1ed      	bne.n	8005e6e <_puts_r+0x52>
 8005e92:	2b00      	cmp	r3, #0
 8005e94:	da11      	bge.n	8005eba <_puts_r+0x9e>
 8005e96:	4622      	mov	r2, r4
 8005e98:	210a      	movs	r1, #10
 8005e9a:	4628      	mov	r0, r5
 8005e9c:	f000 f85f 	bl	8005f5e <__swbuf_r>
 8005ea0:	3001      	adds	r0, #1
 8005ea2:	d0d7      	beq.n	8005e54 <_puts_r+0x38>
 8005ea4:	250a      	movs	r5, #10
 8005ea6:	e7d7      	b.n	8005e58 <_puts_r+0x3c>
 8005ea8:	4622      	mov	r2, r4
 8005eaa:	4628      	mov	r0, r5
 8005eac:	f000 f857 	bl	8005f5e <__swbuf_r>
 8005eb0:	3001      	adds	r0, #1
 8005eb2:	d1e7      	bne.n	8005e84 <_puts_r+0x68>
 8005eb4:	e7ce      	b.n	8005e54 <_puts_r+0x38>
 8005eb6:	3e01      	subs	r6, #1
 8005eb8:	e7e4      	b.n	8005e84 <_puts_r+0x68>
 8005eba:	6823      	ldr	r3, [r4, #0]
 8005ebc:	1c5a      	adds	r2, r3, #1
 8005ebe:	6022      	str	r2, [r4, #0]
 8005ec0:	220a      	movs	r2, #10
 8005ec2:	701a      	strb	r2, [r3, #0]
 8005ec4:	e7ee      	b.n	8005ea4 <_puts_r+0x88>
	...

08005ec8 <puts>:
 8005ec8:	4b02      	ldr	r3, [pc, #8]	@ (8005ed4 <puts+0xc>)
 8005eca:	4601      	mov	r1, r0
 8005ecc:	6818      	ldr	r0, [r3, #0]
 8005ece:	f7ff bfa5 	b.w	8005e1c <_puts_r>
 8005ed2:	bf00      	nop
 8005ed4:	20000018 	.word	0x20000018

08005ed8 <__sread>:
 8005ed8:	b510      	push	{r4, lr}
 8005eda:	460c      	mov	r4, r1
 8005edc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005ee0:	f000 f900 	bl	80060e4 <_read_r>
 8005ee4:	2800      	cmp	r0, #0
 8005ee6:	bfab      	itete	ge
 8005ee8:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8005eea:	89a3      	ldrhlt	r3, [r4, #12]
 8005eec:	181b      	addge	r3, r3, r0
 8005eee:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8005ef2:	bfac      	ite	ge
 8005ef4:	6563      	strge	r3, [r4, #84]	@ 0x54
 8005ef6:	81a3      	strhlt	r3, [r4, #12]
 8005ef8:	bd10      	pop	{r4, pc}

08005efa <__swrite>:
 8005efa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005efe:	461f      	mov	r7, r3
 8005f00:	898b      	ldrh	r3, [r1, #12]
 8005f02:	4605      	mov	r5, r0
 8005f04:	05db      	lsls	r3, r3, #23
 8005f06:	460c      	mov	r4, r1
 8005f08:	4616      	mov	r6, r2
 8005f0a:	d505      	bpl.n	8005f18 <__swrite+0x1e>
 8005f0c:	2302      	movs	r3, #2
 8005f0e:	2200      	movs	r2, #0
 8005f10:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005f14:	f000 f8d4 	bl	80060c0 <_lseek_r>
 8005f18:	89a3      	ldrh	r3, [r4, #12]
 8005f1a:	4632      	mov	r2, r6
 8005f1c:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8005f20:	81a3      	strh	r3, [r4, #12]
 8005f22:	4628      	mov	r0, r5
 8005f24:	463b      	mov	r3, r7
 8005f26:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005f2a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005f2e:	f000 b8fb 	b.w	8006128 <_write_r>

08005f32 <__sseek>:
 8005f32:	b510      	push	{r4, lr}
 8005f34:	460c      	mov	r4, r1
 8005f36:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005f3a:	f000 f8c1 	bl	80060c0 <_lseek_r>
 8005f3e:	1c43      	adds	r3, r0, #1
 8005f40:	89a3      	ldrh	r3, [r4, #12]
 8005f42:	bf15      	itete	ne
 8005f44:	6560      	strne	r0, [r4, #84]	@ 0x54
 8005f46:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8005f4a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8005f4e:	81a3      	strheq	r3, [r4, #12]
 8005f50:	bf18      	it	ne
 8005f52:	81a3      	strhne	r3, [r4, #12]
 8005f54:	bd10      	pop	{r4, pc}

08005f56 <__sclose>:
 8005f56:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005f5a:	f000 b8a1 	b.w	80060a0 <_close_r>

08005f5e <__swbuf_r>:
 8005f5e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005f60:	460e      	mov	r6, r1
 8005f62:	4614      	mov	r4, r2
 8005f64:	4605      	mov	r5, r0
 8005f66:	b118      	cbz	r0, 8005f70 <__swbuf_r+0x12>
 8005f68:	6a03      	ldr	r3, [r0, #32]
 8005f6a:	b90b      	cbnz	r3, 8005f70 <__swbuf_r+0x12>
 8005f6c:	f7ff ff20 	bl	8005db0 <__sinit>
 8005f70:	69a3      	ldr	r3, [r4, #24]
 8005f72:	60a3      	str	r3, [r4, #8]
 8005f74:	89a3      	ldrh	r3, [r4, #12]
 8005f76:	071a      	lsls	r2, r3, #28
 8005f78:	d501      	bpl.n	8005f7e <__swbuf_r+0x20>
 8005f7a:	6923      	ldr	r3, [r4, #16]
 8005f7c:	b943      	cbnz	r3, 8005f90 <__swbuf_r+0x32>
 8005f7e:	4621      	mov	r1, r4
 8005f80:	4628      	mov	r0, r5
 8005f82:	f000 f82b 	bl	8005fdc <__swsetup_r>
 8005f86:	b118      	cbz	r0, 8005f90 <__swbuf_r+0x32>
 8005f88:	f04f 37ff 	mov.w	r7, #4294967295
 8005f8c:	4638      	mov	r0, r7
 8005f8e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005f90:	6823      	ldr	r3, [r4, #0]
 8005f92:	6922      	ldr	r2, [r4, #16]
 8005f94:	b2f6      	uxtb	r6, r6
 8005f96:	1a98      	subs	r0, r3, r2
 8005f98:	6963      	ldr	r3, [r4, #20]
 8005f9a:	4637      	mov	r7, r6
 8005f9c:	4283      	cmp	r3, r0
 8005f9e:	dc05      	bgt.n	8005fac <__swbuf_r+0x4e>
 8005fa0:	4621      	mov	r1, r4
 8005fa2:	4628      	mov	r0, r5
 8005fa4:	f001 fd14 	bl	80079d0 <_fflush_r>
 8005fa8:	2800      	cmp	r0, #0
 8005faa:	d1ed      	bne.n	8005f88 <__swbuf_r+0x2a>
 8005fac:	68a3      	ldr	r3, [r4, #8]
 8005fae:	3b01      	subs	r3, #1
 8005fb0:	60a3      	str	r3, [r4, #8]
 8005fb2:	6823      	ldr	r3, [r4, #0]
 8005fb4:	1c5a      	adds	r2, r3, #1
 8005fb6:	6022      	str	r2, [r4, #0]
 8005fb8:	701e      	strb	r6, [r3, #0]
 8005fba:	6962      	ldr	r2, [r4, #20]
 8005fbc:	1c43      	adds	r3, r0, #1
 8005fbe:	429a      	cmp	r2, r3
 8005fc0:	d004      	beq.n	8005fcc <__swbuf_r+0x6e>
 8005fc2:	89a3      	ldrh	r3, [r4, #12]
 8005fc4:	07db      	lsls	r3, r3, #31
 8005fc6:	d5e1      	bpl.n	8005f8c <__swbuf_r+0x2e>
 8005fc8:	2e0a      	cmp	r6, #10
 8005fca:	d1df      	bne.n	8005f8c <__swbuf_r+0x2e>
 8005fcc:	4621      	mov	r1, r4
 8005fce:	4628      	mov	r0, r5
 8005fd0:	f001 fcfe 	bl	80079d0 <_fflush_r>
 8005fd4:	2800      	cmp	r0, #0
 8005fd6:	d0d9      	beq.n	8005f8c <__swbuf_r+0x2e>
 8005fd8:	e7d6      	b.n	8005f88 <__swbuf_r+0x2a>
	...

08005fdc <__swsetup_r>:
 8005fdc:	b538      	push	{r3, r4, r5, lr}
 8005fde:	4b29      	ldr	r3, [pc, #164]	@ (8006084 <__swsetup_r+0xa8>)
 8005fe0:	4605      	mov	r5, r0
 8005fe2:	6818      	ldr	r0, [r3, #0]
 8005fe4:	460c      	mov	r4, r1
 8005fe6:	b118      	cbz	r0, 8005ff0 <__swsetup_r+0x14>
 8005fe8:	6a03      	ldr	r3, [r0, #32]
 8005fea:	b90b      	cbnz	r3, 8005ff0 <__swsetup_r+0x14>
 8005fec:	f7ff fee0 	bl	8005db0 <__sinit>
 8005ff0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005ff4:	0719      	lsls	r1, r3, #28
 8005ff6:	d422      	bmi.n	800603e <__swsetup_r+0x62>
 8005ff8:	06da      	lsls	r2, r3, #27
 8005ffa:	d407      	bmi.n	800600c <__swsetup_r+0x30>
 8005ffc:	2209      	movs	r2, #9
 8005ffe:	602a      	str	r2, [r5, #0]
 8006000:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006004:	f04f 30ff 	mov.w	r0, #4294967295
 8006008:	81a3      	strh	r3, [r4, #12]
 800600a:	e033      	b.n	8006074 <__swsetup_r+0x98>
 800600c:	0758      	lsls	r0, r3, #29
 800600e:	d512      	bpl.n	8006036 <__swsetup_r+0x5a>
 8006010:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8006012:	b141      	cbz	r1, 8006026 <__swsetup_r+0x4a>
 8006014:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8006018:	4299      	cmp	r1, r3
 800601a:	d002      	beq.n	8006022 <__swsetup_r+0x46>
 800601c:	4628      	mov	r0, r5
 800601e:	f000 ff4f 	bl	8006ec0 <_free_r>
 8006022:	2300      	movs	r3, #0
 8006024:	6363      	str	r3, [r4, #52]	@ 0x34
 8006026:	89a3      	ldrh	r3, [r4, #12]
 8006028:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 800602c:	81a3      	strh	r3, [r4, #12]
 800602e:	2300      	movs	r3, #0
 8006030:	6063      	str	r3, [r4, #4]
 8006032:	6923      	ldr	r3, [r4, #16]
 8006034:	6023      	str	r3, [r4, #0]
 8006036:	89a3      	ldrh	r3, [r4, #12]
 8006038:	f043 0308 	orr.w	r3, r3, #8
 800603c:	81a3      	strh	r3, [r4, #12]
 800603e:	6923      	ldr	r3, [r4, #16]
 8006040:	b94b      	cbnz	r3, 8006056 <__swsetup_r+0x7a>
 8006042:	89a3      	ldrh	r3, [r4, #12]
 8006044:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8006048:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800604c:	d003      	beq.n	8006056 <__swsetup_r+0x7a>
 800604e:	4621      	mov	r1, r4
 8006050:	4628      	mov	r0, r5
 8006052:	f001 fd1c 	bl	8007a8e <__smakebuf_r>
 8006056:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800605a:	f013 0201 	ands.w	r2, r3, #1
 800605e:	d00a      	beq.n	8006076 <__swsetup_r+0x9a>
 8006060:	2200      	movs	r2, #0
 8006062:	60a2      	str	r2, [r4, #8]
 8006064:	6962      	ldr	r2, [r4, #20]
 8006066:	4252      	negs	r2, r2
 8006068:	61a2      	str	r2, [r4, #24]
 800606a:	6922      	ldr	r2, [r4, #16]
 800606c:	b942      	cbnz	r2, 8006080 <__swsetup_r+0xa4>
 800606e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8006072:	d1c5      	bne.n	8006000 <__swsetup_r+0x24>
 8006074:	bd38      	pop	{r3, r4, r5, pc}
 8006076:	0799      	lsls	r1, r3, #30
 8006078:	bf58      	it	pl
 800607a:	6962      	ldrpl	r2, [r4, #20]
 800607c:	60a2      	str	r2, [r4, #8]
 800607e:	e7f4      	b.n	800606a <__swsetup_r+0x8e>
 8006080:	2000      	movs	r0, #0
 8006082:	e7f7      	b.n	8006074 <__swsetup_r+0x98>
 8006084:	20000018 	.word	0x20000018

08006088 <memset>:
 8006088:	4603      	mov	r3, r0
 800608a:	4402      	add	r2, r0
 800608c:	4293      	cmp	r3, r2
 800608e:	d100      	bne.n	8006092 <memset+0xa>
 8006090:	4770      	bx	lr
 8006092:	f803 1b01 	strb.w	r1, [r3], #1
 8006096:	e7f9      	b.n	800608c <memset+0x4>

08006098 <_localeconv_r>:
 8006098:	4800      	ldr	r0, [pc, #0]	@ (800609c <_localeconv_r+0x4>)
 800609a:	4770      	bx	lr
 800609c:	20000158 	.word	0x20000158

080060a0 <_close_r>:
 80060a0:	b538      	push	{r3, r4, r5, lr}
 80060a2:	2300      	movs	r3, #0
 80060a4:	4d05      	ldr	r5, [pc, #20]	@ (80060bc <_close_r+0x1c>)
 80060a6:	4604      	mov	r4, r0
 80060a8:	4608      	mov	r0, r1
 80060aa:	602b      	str	r3, [r5, #0]
 80060ac:	f7fb fcc0 	bl	8001a30 <_close>
 80060b0:	1c43      	adds	r3, r0, #1
 80060b2:	d102      	bne.n	80060ba <_close_r+0x1a>
 80060b4:	682b      	ldr	r3, [r5, #0]
 80060b6:	b103      	cbz	r3, 80060ba <_close_r+0x1a>
 80060b8:	6023      	str	r3, [r4, #0]
 80060ba:	bd38      	pop	{r3, r4, r5, pc}
 80060bc:	20000784 	.word	0x20000784

080060c0 <_lseek_r>:
 80060c0:	b538      	push	{r3, r4, r5, lr}
 80060c2:	4604      	mov	r4, r0
 80060c4:	4608      	mov	r0, r1
 80060c6:	4611      	mov	r1, r2
 80060c8:	2200      	movs	r2, #0
 80060ca:	4d05      	ldr	r5, [pc, #20]	@ (80060e0 <_lseek_r+0x20>)
 80060cc:	602a      	str	r2, [r5, #0]
 80060ce:	461a      	mov	r2, r3
 80060d0:	f7fb fcb8 	bl	8001a44 <_lseek>
 80060d4:	1c43      	adds	r3, r0, #1
 80060d6:	d102      	bne.n	80060de <_lseek_r+0x1e>
 80060d8:	682b      	ldr	r3, [r5, #0]
 80060da:	b103      	cbz	r3, 80060de <_lseek_r+0x1e>
 80060dc:	6023      	str	r3, [r4, #0]
 80060de:	bd38      	pop	{r3, r4, r5, pc}
 80060e0:	20000784 	.word	0x20000784

080060e4 <_read_r>:
 80060e4:	b538      	push	{r3, r4, r5, lr}
 80060e6:	4604      	mov	r4, r0
 80060e8:	4608      	mov	r0, r1
 80060ea:	4611      	mov	r1, r2
 80060ec:	2200      	movs	r2, #0
 80060ee:	4d05      	ldr	r5, [pc, #20]	@ (8006104 <_read_r+0x20>)
 80060f0:	602a      	str	r2, [r5, #0]
 80060f2:	461a      	mov	r2, r3
 80060f4:	f7fb fc8c 	bl	8001a10 <_read>
 80060f8:	1c43      	adds	r3, r0, #1
 80060fa:	d102      	bne.n	8006102 <_read_r+0x1e>
 80060fc:	682b      	ldr	r3, [r5, #0]
 80060fe:	b103      	cbz	r3, 8006102 <_read_r+0x1e>
 8006100:	6023      	str	r3, [r4, #0]
 8006102:	bd38      	pop	{r3, r4, r5, pc}
 8006104:	20000784 	.word	0x20000784

08006108 <_sbrk_r>:
 8006108:	b538      	push	{r3, r4, r5, lr}
 800610a:	2300      	movs	r3, #0
 800610c:	4d05      	ldr	r5, [pc, #20]	@ (8006124 <_sbrk_r+0x1c>)
 800610e:	4604      	mov	r4, r0
 8006110:	4608      	mov	r0, r1
 8006112:	602b      	str	r3, [r5, #0]
 8006114:	f7fb fc98 	bl	8001a48 <_sbrk>
 8006118:	1c43      	adds	r3, r0, #1
 800611a:	d102      	bne.n	8006122 <_sbrk_r+0x1a>
 800611c:	682b      	ldr	r3, [r5, #0]
 800611e:	b103      	cbz	r3, 8006122 <_sbrk_r+0x1a>
 8006120:	6023      	str	r3, [r4, #0]
 8006122:	bd38      	pop	{r3, r4, r5, pc}
 8006124:	20000784 	.word	0x20000784

08006128 <_write_r>:
 8006128:	b538      	push	{r3, r4, r5, lr}
 800612a:	4604      	mov	r4, r0
 800612c:	4608      	mov	r0, r1
 800612e:	4611      	mov	r1, r2
 8006130:	2200      	movs	r2, #0
 8006132:	4d05      	ldr	r5, [pc, #20]	@ (8006148 <_write_r+0x20>)
 8006134:	602a      	str	r2, [r5, #0]
 8006136:	461a      	mov	r2, r3
 8006138:	f7fb f8f6 	bl	8001328 <_write>
 800613c:	1c43      	adds	r3, r0, #1
 800613e:	d102      	bne.n	8006146 <_write_r+0x1e>
 8006140:	682b      	ldr	r3, [r5, #0]
 8006142:	b103      	cbz	r3, 8006146 <_write_r+0x1e>
 8006144:	6023      	str	r3, [r4, #0]
 8006146:	bd38      	pop	{r3, r4, r5, pc}
 8006148:	20000784 	.word	0x20000784

0800614c <__errno>:
 800614c:	4b01      	ldr	r3, [pc, #4]	@ (8006154 <__errno+0x8>)
 800614e:	6818      	ldr	r0, [r3, #0]
 8006150:	4770      	bx	lr
 8006152:	bf00      	nop
 8006154:	20000018 	.word	0x20000018

08006158 <__libc_init_array>:
 8006158:	b570      	push	{r4, r5, r6, lr}
 800615a:	2600      	movs	r6, #0
 800615c:	4d0c      	ldr	r5, [pc, #48]	@ (8006190 <__libc_init_array+0x38>)
 800615e:	4c0d      	ldr	r4, [pc, #52]	@ (8006194 <__libc_init_array+0x3c>)
 8006160:	1b64      	subs	r4, r4, r5
 8006162:	10a4      	asrs	r4, r4, #2
 8006164:	42a6      	cmp	r6, r4
 8006166:	d109      	bne.n	800617c <__libc_init_array+0x24>
 8006168:	f001 fd6e 	bl	8007c48 <_init>
 800616c:	2600      	movs	r6, #0
 800616e:	4d0a      	ldr	r5, [pc, #40]	@ (8006198 <__libc_init_array+0x40>)
 8006170:	4c0a      	ldr	r4, [pc, #40]	@ (800619c <__libc_init_array+0x44>)
 8006172:	1b64      	subs	r4, r4, r5
 8006174:	10a4      	asrs	r4, r4, #2
 8006176:	42a6      	cmp	r6, r4
 8006178:	d105      	bne.n	8006186 <__libc_init_array+0x2e>
 800617a:	bd70      	pop	{r4, r5, r6, pc}
 800617c:	f855 3b04 	ldr.w	r3, [r5], #4
 8006180:	4798      	blx	r3
 8006182:	3601      	adds	r6, #1
 8006184:	e7ee      	b.n	8006164 <__libc_init_array+0xc>
 8006186:	f855 3b04 	ldr.w	r3, [r5], #4
 800618a:	4798      	blx	r3
 800618c:	3601      	adds	r6, #1
 800618e:	e7f2      	b.n	8006176 <__libc_init_array+0x1e>
 8006190:	08008254 	.word	0x08008254
 8006194:	08008254 	.word	0x08008254
 8006198:	08008254 	.word	0x08008254
 800619c:	08008258 	.word	0x08008258

080061a0 <__retarget_lock_init_recursive>:
 80061a0:	4770      	bx	lr

080061a2 <__retarget_lock_acquire_recursive>:
 80061a2:	4770      	bx	lr

080061a4 <__retarget_lock_release_recursive>:
 80061a4:	4770      	bx	lr

080061a6 <memchr>:
 80061a6:	4603      	mov	r3, r0
 80061a8:	b510      	push	{r4, lr}
 80061aa:	b2c9      	uxtb	r1, r1
 80061ac:	4402      	add	r2, r0
 80061ae:	4293      	cmp	r3, r2
 80061b0:	4618      	mov	r0, r3
 80061b2:	d101      	bne.n	80061b8 <memchr+0x12>
 80061b4:	2000      	movs	r0, #0
 80061b6:	e003      	b.n	80061c0 <memchr+0x1a>
 80061b8:	7804      	ldrb	r4, [r0, #0]
 80061ba:	3301      	adds	r3, #1
 80061bc:	428c      	cmp	r4, r1
 80061be:	d1f6      	bne.n	80061ae <memchr+0x8>
 80061c0:	bd10      	pop	{r4, pc}

080061c2 <memcpy>:
 80061c2:	440a      	add	r2, r1
 80061c4:	4291      	cmp	r1, r2
 80061c6:	f100 33ff 	add.w	r3, r0, #4294967295
 80061ca:	d100      	bne.n	80061ce <memcpy+0xc>
 80061cc:	4770      	bx	lr
 80061ce:	b510      	push	{r4, lr}
 80061d0:	f811 4b01 	ldrb.w	r4, [r1], #1
 80061d4:	4291      	cmp	r1, r2
 80061d6:	f803 4f01 	strb.w	r4, [r3, #1]!
 80061da:	d1f9      	bne.n	80061d0 <memcpy+0xe>
 80061dc:	bd10      	pop	{r4, pc}
	...

080061e0 <__assert_func>:
 80061e0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80061e2:	4614      	mov	r4, r2
 80061e4:	461a      	mov	r2, r3
 80061e6:	4b09      	ldr	r3, [pc, #36]	@ (800620c <__assert_func+0x2c>)
 80061e8:	4605      	mov	r5, r0
 80061ea:	681b      	ldr	r3, [r3, #0]
 80061ec:	68d8      	ldr	r0, [r3, #12]
 80061ee:	b954      	cbnz	r4, 8006206 <__assert_func+0x26>
 80061f0:	4b07      	ldr	r3, [pc, #28]	@ (8006210 <__assert_func+0x30>)
 80061f2:	461c      	mov	r4, r3
 80061f4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80061f8:	9100      	str	r1, [sp, #0]
 80061fa:	462b      	mov	r3, r5
 80061fc:	4905      	ldr	r1, [pc, #20]	@ (8006214 <__assert_func+0x34>)
 80061fe:	f001 fc0f 	bl	8007a20 <fiprintf>
 8006202:	f001 fca3 	bl	8007b4c <abort>
 8006206:	4b04      	ldr	r3, [pc, #16]	@ (8006218 <__assert_func+0x38>)
 8006208:	e7f4      	b.n	80061f4 <__assert_func+0x14>
 800620a:	bf00      	nop
 800620c:	20000018 	.word	0x20000018
 8006210:	08007f49 	.word	0x08007f49
 8006214:	08007f1b 	.word	0x08007f1b
 8006218:	08007f0e 	.word	0x08007f0e

0800621c <quorem>:
 800621c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006220:	6903      	ldr	r3, [r0, #16]
 8006222:	690c      	ldr	r4, [r1, #16]
 8006224:	4607      	mov	r7, r0
 8006226:	42a3      	cmp	r3, r4
 8006228:	db7e      	blt.n	8006328 <quorem+0x10c>
 800622a:	3c01      	subs	r4, #1
 800622c:	00a3      	lsls	r3, r4, #2
 800622e:	f100 0514 	add.w	r5, r0, #20
 8006232:	f101 0814 	add.w	r8, r1, #20
 8006236:	9300      	str	r3, [sp, #0]
 8006238:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800623c:	9301      	str	r3, [sp, #4]
 800623e:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8006242:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8006246:	3301      	adds	r3, #1
 8006248:	429a      	cmp	r2, r3
 800624a:	fbb2 f6f3 	udiv	r6, r2, r3
 800624e:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8006252:	d32e      	bcc.n	80062b2 <quorem+0x96>
 8006254:	f04f 0a00 	mov.w	sl, #0
 8006258:	46c4      	mov	ip, r8
 800625a:	46ae      	mov	lr, r5
 800625c:	46d3      	mov	fp, sl
 800625e:	f85c 3b04 	ldr.w	r3, [ip], #4
 8006262:	b298      	uxth	r0, r3
 8006264:	fb06 a000 	mla	r0, r6, r0, sl
 8006268:	0c1b      	lsrs	r3, r3, #16
 800626a:	0c02      	lsrs	r2, r0, #16
 800626c:	fb06 2303 	mla	r3, r6, r3, r2
 8006270:	f8de 2000 	ldr.w	r2, [lr]
 8006274:	b280      	uxth	r0, r0
 8006276:	b292      	uxth	r2, r2
 8006278:	1a12      	subs	r2, r2, r0
 800627a:	445a      	add	r2, fp
 800627c:	f8de 0000 	ldr.w	r0, [lr]
 8006280:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8006284:	b29b      	uxth	r3, r3
 8006286:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 800628a:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 800628e:	b292      	uxth	r2, r2
 8006290:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8006294:	45e1      	cmp	r9, ip
 8006296:	ea4f 4b23 	mov.w	fp, r3, asr #16
 800629a:	f84e 2b04 	str.w	r2, [lr], #4
 800629e:	d2de      	bcs.n	800625e <quorem+0x42>
 80062a0:	9b00      	ldr	r3, [sp, #0]
 80062a2:	58eb      	ldr	r3, [r5, r3]
 80062a4:	b92b      	cbnz	r3, 80062b2 <quorem+0x96>
 80062a6:	9b01      	ldr	r3, [sp, #4]
 80062a8:	3b04      	subs	r3, #4
 80062aa:	429d      	cmp	r5, r3
 80062ac:	461a      	mov	r2, r3
 80062ae:	d32f      	bcc.n	8006310 <quorem+0xf4>
 80062b0:	613c      	str	r4, [r7, #16]
 80062b2:	4638      	mov	r0, r7
 80062b4:	f001 f8c4 	bl	8007440 <__mcmp>
 80062b8:	2800      	cmp	r0, #0
 80062ba:	db25      	blt.n	8006308 <quorem+0xec>
 80062bc:	4629      	mov	r1, r5
 80062be:	2000      	movs	r0, #0
 80062c0:	f858 2b04 	ldr.w	r2, [r8], #4
 80062c4:	f8d1 c000 	ldr.w	ip, [r1]
 80062c8:	fa1f fe82 	uxth.w	lr, r2
 80062cc:	fa1f f38c 	uxth.w	r3, ip
 80062d0:	eba3 030e 	sub.w	r3, r3, lr
 80062d4:	4403      	add	r3, r0
 80062d6:	0c12      	lsrs	r2, r2, #16
 80062d8:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 80062dc:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 80062e0:	b29b      	uxth	r3, r3
 80062e2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80062e6:	45c1      	cmp	r9, r8
 80062e8:	ea4f 4022 	mov.w	r0, r2, asr #16
 80062ec:	f841 3b04 	str.w	r3, [r1], #4
 80062f0:	d2e6      	bcs.n	80062c0 <quorem+0xa4>
 80062f2:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80062f6:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80062fa:	b922      	cbnz	r2, 8006306 <quorem+0xea>
 80062fc:	3b04      	subs	r3, #4
 80062fe:	429d      	cmp	r5, r3
 8006300:	461a      	mov	r2, r3
 8006302:	d30b      	bcc.n	800631c <quorem+0x100>
 8006304:	613c      	str	r4, [r7, #16]
 8006306:	3601      	adds	r6, #1
 8006308:	4630      	mov	r0, r6
 800630a:	b003      	add	sp, #12
 800630c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006310:	6812      	ldr	r2, [r2, #0]
 8006312:	3b04      	subs	r3, #4
 8006314:	2a00      	cmp	r2, #0
 8006316:	d1cb      	bne.n	80062b0 <quorem+0x94>
 8006318:	3c01      	subs	r4, #1
 800631a:	e7c6      	b.n	80062aa <quorem+0x8e>
 800631c:	6812      	ldr	r2, [r2, #0]
 800631e:	3b04      	subs	r3, #4
 8006320:	2a00      	cmp	r2, #0
 8006322:	d1ef      	bne.n	8006304 <quorem+0xe8>
 8006324:	3c01      	subs	r4, #1
 8006326:	e7ea      	b.n	80062fe <quorem+0xe2>
 8006328:	2000      	movs	r0, #0
 800632a:	e7ee      	b.n	800630a <quorem+0xee>
 800632c:	0000      	movs	r0, r0
	...

08006330 <_dtoa_r>:
 8006330:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006334:	4614      	mov	r4, r2
 8006336:	461d      	mov	r5, r3
 8006338:	69c7      	ldr	r7, [r0, #28]
 800633a:	b097      	sub	sp, #92	@ 0x5c
 800633c:	4683      	mov	fp, r0
 800633e:	e9cd 4502 	strd	r4, r5, [sp, #8]
 8006342:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 8006344:	b97f      	cbnz	r7, 8006366 <_dtoa_r+0x36>
 8006346:	2010      	movs	r0, #16
 8006348:	f7fe ff94 	bl	8005274 <malloc>
 800634c:	4602      	mov	r2, r0
 800634e:	f8cb 001c 	str.w	r0, [fp, #28]
 8006352:	b920      	cbnz	r0, 800635e <_dtoa_r+0x2e>
 8006354:	21ef      	movs	r1, #239	@ 0xef
 8006356:	4ba8      	ldr	r3, [pc, #672]	@ (80065f8 <_dtoa_r+0x2c8>)
 8006358:	48a8      	ldr	r0, [pc, #672]	@ (80065fc <_dtoa_r+0x2cc>)
 800635a:	f7ff ff41 	bl	80061e0 <__assert_func>
 800635e:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8006362:	6007      	str	r7, [r0, #0]
 8006364:	60c7      	str	r7, [r0, #12]
 8006366:	f8db 301c 	ldr.w	r3, [fp, #28]
 800636a:	6819      	ldr	r1, [r3, #0]
 800636c:	b159      	cbz	r1, 8006386 <_dtoa_r+0x56>
 800636e:	685a      	ldr	r2, [r3, #4]
 8006370:	2301      	movs	r3, #1
 8006372:	4093      	lsls	r3, r2
 8006374:	604a      	str	r2, [r1, #4]
 8006376:	608b      	str	r3, [r1, #8]
 8006378:	4658      	mov	r0, fp
 800637a:	f000 fe29 	bl	8006fd0 <_Bfree>
 800637e:	2200      	movs	r2, #0
 8006380:	f8db 301c 	ldr.w	r3, [fp, #28]
 8006384:	601a      	str	r2, [r3, #0]
 8006386:	1e2b      	subs	r3, r5, #0
 8006388:	bfaf      	iteee	ge
 800638a:	2300      	movge	r3, #0
 800638c:	2201      	movlt	r2, #1
 800638e:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8006392:	9303      	strlt	r3, [sp, #12]
 8006394:	bfa8      	it	ge
 8006396:	6033      	strge	r3, [r6, #0]
 8006398:	f8dd 800c 	ldr.w	r8, [sp, #12]
 800639c:	4b98      	ldr	r3, [pc, #608]	@ (8006600 <_dtoa_r+0x2d0>)
 800639e:	bfb8      	it	lt
 80063a0:	6032      	strlt	r2, [r6, #0]
 80063a2:	ea33 0308 	bics.w	r3, r3, r8
 80063a6:	d112      	bne.n	80063ce <_dtoa_r+0x9e>
 80063a8:	f242 730f 	movw	r3, #9999	@ 0x270f
 80063ac:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80063ae:	6013      	str	r3, [r2, #0]
 80063b0:	f3c8 0313 	ubfx	r3, r8, #0, #20
 80063b4:	4323      	orrs	r3, r4
 80063b6:	f000 8550 	beq.w	8006e5a <_dtoa_r+0xb2a>
 80063ba:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80063bc:	f8df a244 	ldr.w	sl, [pc, #580]	@ 8006604 <_dtoa_r+0x2d4>
 80063c0:	2b00      	cmp	r3, #0
 80063c2:	f000 8552 	beq.w	8006e6a <_dtoa_r+0xb3a>
 80063c6:	f10a 0303 	add.w	r3, sl, #3
 80063ca:	f000 bd4c 	b.w	8006e66 <_dtoa_r+0xb36>
 80063ce:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80063d2:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 80063d6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80063da:	2200      	movs	r2, #0
 80063dc:	2300      	movs	r3, #0
 80063de:	f7fa fae3 	bl	80009a8 <__aeabi_dcmpeq>
 80063e2:	4607      	mov	r7, r0
 80063e4:	b158      	cbz	r0, 80063fe <_dtoa_r+0xce>
 80063e6:	2301      	movs	r3, #1
 80063e8:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80063ea:	6013      	str	r3, [r2, #0]
 80063ec:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80063ee:	b113      	cbz	r3, 80063f6 <_dtoa_r+0xc6>
 80063f0:	4b85      	ldr	r3, [pc, #532]	@ (8006608 <_dtoa_r+0x2d8>)
 80063f2:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 80063f4:	6013      	str	r3, [r2, #0]
 80063f6:	f8df a214 	ldr.w	sl, [pc, #532]	@ 800660c <_dtoa_r+0x2dc>
 80063fa:	f000 bd36 	b.w	8006e6a <_dtoa_r+0xb3a>
 80063fe:	ab14      	add	r3, sp, #80	@ 0x50
 8006400:	9301      	str	r3, [sp, #4]
 8006402:	ab15      	add	r3, sp, #84	@ 0x54
 8006404:	9300      	str	r3, [sp, #0]
 8006406:	4658      	mov	r0, fp
 8006408:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 800640c:	f001 f8c8 	bl	80075a0 <__d2b>
 8006410:	f3c8 560a 	ubfx	r6, r8, #20, #11
 8006414:	4681      	mov	r9, r0
 8006416:	2e00      	cmp	r6, #0
 8006418:	d077      	beq.n	800650a <_dtoa_r+0x1da>
 800641a:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800641e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8006420:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8006424:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006428:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 800642c:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8006430:	9712      	str	r7, [sp, #72]	@ 0x48
 8006432:	4619      	mov	r1, r3
 8006434:	2200      	movs	r2, #0
 8006436:	4b76      	ldr	r3, [pc, #472]	@ (8006610 <_dtoa_r+0x2e0>)
 8006438:	f7f9 fe96 	bl	8000168 <__aeabi_dsub>
 800643c:	a368      	add	r3, pc, #416	@ (adr r3, 80065e0 <_dtoa_r+0x2b0>)
 800643e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006442:	f7fa f849 	bl	80004d8 <__aeabi_dmul>
 8006446:	a368      	add	r3, pc, #416	@ (adr r3, 80065e8 <_dtoa_r+0x2b8>)
 8006448:	e9d3 2300 	ldrd	r2, r3, [r3]
 800644c:	f7f9 fe8e 	bl	800016c <__adddf3>
 8006450:	4604      	mov	r4, r0
 8006452:	4630      	mov	r0, r6
 8006454:	460d      	mov	r5, r1
 8006456:	f7f9 ffd5 	bl	8000404 <__aeabi_i2d>
 800645a:	a365      	add	r3, pc, #404	@ (adr r3, 80065f0 <_dtoa_r+0x2c0>)
 800645c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006460:	f7fa f83a 	bl	80004d8 <__aeabi_dmul>
 8006464:	4602      	mov	r2, r0
 8006466:	460b      	mov	r3, r1
 8006468:	4620      	mov	r0, r4
 800646a:	4629      	mov	r1, r5
 800646c:	f7f9 fe7e 	bl	800016c <__adddf3>
 8006470:	4604      	mov	r4, r0
 8006472:	460d      	mov	r5, r1
 8006474:	f7fa fae0 	bl	8000a38 <__aeabi_d2iz>
 8006478:	2200      	movs	r2, #0
 800647a:	4607      	mov	r7, r0
 800647c:	2300      	movs	r3, #0
 800647e:	4620      	mov	r0, r4
 8006480:	4629      	mov	r1, r5
 8006482:	f7fa fa9b 	bl	80009bc <__aeabi_dcmplt>
 8006486:	b140      	cbz	r0, 800649a <_dtoa_r+0x16a>
 8006488:	4638      	mov	r0, r7
 800648a:	f7f9 ffbb 	bl	8000404 <__aeabi_i2d>
 800648e:	4622      	mov	r2, r4
 8006490:	462b      	mov	r3, r5
 8006492:	f7fa fa89 	bl	80009a8 <__aeabi_dcmpeq>
 8006496:	b900      	cbnz	r0, 800649a <_dtoa_r+0x16a>
 8006498:	3f01      	subs	r7, #1
 800649a:	2f16      	cmp	r7, #22
 800649c:	d853      	bhi.n	8006546 <_dtoa_r+0x216>
 800649e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80064a2:	4b5c      	ldr	r3, [pc, #368]	@ (8006614 <_dtoa_r+0x2e4>)
 80064a4:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80064a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80064ac:	f7fa fa86 	bl	80009bc <__aeabi_dcmplt>
 80064b0:	2800      	cmp	r0, #0
 80064b2:	d04a      	beq.n	800654a <_dtoa_r+0x21a>
 80064b4:	2300      	movs	r3, #0
 80064b6:	3f01      	subs	r7, #1
 80064b8:	930f      	str	r3, [sp, #60]	@ 0x3c
 80064ba:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80064bc:	1b9b      	subs	r3, r3, r6
 80064be:	1e5a      	subs	r2, r3, #1
 80064c0:	bf46      	itte	mi
 80064c2:	f1c3 0801 	rsbmi	r8, r3, #1
 80064c6:	2300      	movmi	r3, #0
 80064c8:	f04f 0800 	movpl.w	r8, #0
 80064cc:	9209      	str	r2, [sp, #36]	@ 0x24
 80064ce:	bf48      	it	mi
 80064d0:	9309      	strmi	r3, [sp, #36]	@ 0x24
 80064d2:	2f00      	cmp	r7, #0
 80064d4:	db3b      	blt.n	800654e <_dtoa_r+0x21e>
 80064d6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80064d8:	970e      	str	r7, [sp, #56]	@ 0x38
 80064da:	443b      	add	r3, r7
 80064dc:	9309      	str	r3, [sp, #36]	@ 0x24
 80064de:	2300      	movs	r3, #0
 80064e0:	930a      	str	r3, [sp, #40]	@ 0x28
 80064e2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80064e4:	2b09      	cmp	r3, #9
 80064e6:	d866      	bhi.n	80065b6 <_dtoa_r+0x286>
 80064e8:	2b05      	cmp	r3, #5
 80064ea:	bfc4      	itt	gt
 80064ec:	3b04      	subgt	r3, #4
 80064ee:	9320      	strgt	r3, [sp, #128]	@ 0x80
 80064f0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80064f2:	bfc8      	it	gt
 80064f4:	2400      	movgt	r4, #0
 80064f6:	f1a3 0302 	sub.w	r3, r3, #2
 80064fa:	bfd8      	it	le
 80064fc:	2401      	movle	r4, #1
 80064fe:	2b03      	cmp	r3, #3
 8006500:	d864      	bhi.n	80065cc <_dtoa_r+0x29c>
 8006502:	e8df f003 	tbb	[pc, r3]
 8006506:	382b      	.short	0x382b
 8006508:	5636      	.short	0x5636
 800650a:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 800650e:	441e      	add	r6, r3
 8006510:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8006514:	2b20      	cmp	r3, #32
 8006516:	bfc1      	itttt	gt
 8006518:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 800651c:	fa08 f803 	lslgt.w	r8, r8, r3
 8006520:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8006524:	fa24 f303 	lsrgt.w	r3, r4, r3
 8006528:	bfd6      	itet	le
 800652a:	f1c3 0320 	rsble	r3, r3, #32
 800652e:	ea48 0003 	orrgt.w	r0, r8, r3
 8006532:	fa04 f003 	lslle.w	r0, r4, r3
 8006536:	f7f9 ff55 	bl	80003e4 <__aeabi_ui2d>
 800653a:	2201      	movs	r2, #1
 800653c:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8006540:	3e01      	subs	r6, #1
 8006542:	9212      	str	r2, [sp, #72]	@ 0x48
 8006544:	e775      	b.n	8006432 <_dtoa_r+0x102>
 8006546:	2301      	movs	r3, #1
 8006548:	e7b6      	b.n	80064b8 <_dtoa_r+0x188>
 800654a:	900f      	str	r0, [sp, #60]	@ 0x3c
 800654c:	e7b5      	b.n	80064ba <_dtoa_r+0x18a>
 800654e:	427b      	negs	r3, r7
 8006550:	930a      	str	r3, [sp, #40]	@ 0x28
 8006552:	2300      	movs	r3, #0
 8006554:	eba8 0807 	sub.w	r8, r8, r7
 8006558:	930e      	str	r3, [sp, #56]	@ 0x38
 800655a:	e7c2      	b.n	80064e2 <_dtoa_r+0x1b2>
 800655c:	2300      	movs	r3, #0
 800655e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8006560:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8006562:	2b00      	cmp	r3, #0
 8006564:	dc35      	bgt.n	80065d2 <_dtoa_r+0x2a2>
 8006566:	2301      	movs	r3, #1
 8006568:	461a      	mov	r2, r3
 800656a:	e9cd 3307 	strd	r3, r3, [sp, #28]
 800656e:	9221      	str	r2, [sp, #132]	@ 0x84
 8006570:	e00b      	b.n	800658a <_dtoa_r+0x25a>
 8006572:	2301      	movs	r3, #1
 8006574:	e7f3      	b.n	800655e <_dtoa_r+0x22e>
 8006576:	2300      	movs	r3, #0
 8006578:	930b      	str	r3, [sp, #44]	@ 0x2c
 800657a:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800657c:	18fb      	adds	r3, r7, r3
 800657e:	9308      	str	r3, [sp, #32]
 8006580:	3301      	adds	r3, #1
 8006582:	2b01      	cmp	r3, #1
 8006584:	9307      	str	r3, [sp, #28]
 8006586:	bfb8      	it	lt
 8006588:	2301      	movlt	r3, #1
 800658a:	2100      	movs	r1, #0
 800658c:	2204      	movs	r2, #4
 800658e:	f8db 001c 	ldr.w	r0, [fp, #28]
 8006592:	f102 0514 	add.w	r5, r2, #20
 8006596:	429d      	cmp	r5, r3
 8006598:	d91f      	bls.n	80065da <_dtoa_r+0x2aa>
 800659a:	6041      	str	r1, [r0, #4]
 800659c:	4658      	mov	r0, fp
 800659e:	f000 fcd7 	bl	8006f50 <_Balloc>
 80065a2:	4682      	mov	sl, r0
 80065a4:	2800      	cmp	r0, #0
 80065a6:	d139      	bne.n	800661c <_dtoa_r+0x2ec>
 80065a8:	4602      	mov	r2, r0
 80065aa:	f240 11af 	movw	r1, #431	@ 0x1af
 80065ae:	4b1a      	ldr	r3, [pc, #104]	@ (8006618 <_dtoa_r+0x2e8>)
 80065b0:	e6d2      	b.n	8006358 <_dtoa_r+0x28>
 80065b2:	2301      	movs	r3, #1
 80065b4:	e7e0      	b.n	8006578 <_dtoa_r+0x248>
 80065b6:	2401      	movs	r4, #1
 80065b8:	2300      	movs	r3, #0
 80065ba:	940b      	str	r4, [sp, #44]	@ 0x2c
 80065bc:	9320      	str	r3, [sp, #128]	@ 0x80
 80065be:	f04f 33ff 	mov.w	r3, #4294967295
 80065c2:	2200      	movs	r2, #0
 80065c4:	e9cd 3307 	strd	r3, r3, [sp, #28]
 80065c8:	2312      	movs	r3, #18
 80065ca:	e7d0      	b.n	800656e <_dtoa_r+0x23e>
 80065cc:	2301      	movs	r3, #1
 80065ce:	930b      	str	r3, [sp, #44]	@ 0x2c
 80065d0:	e7f5      	b.n	80065be <_dtoa_r+0x28e>
 80065d2:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80065d4:	e9cd 3307 	strd	r3, r3, [sp, #28]
 80065d8:	e7d7      	b.n	800658a <_dtoa_r+0x25a>
 80065da:	3101      	adds	r1, #1
 80065dc:	0052      	lsls	r2, r2, #1
 80065de:	e7d8      	b.n	8006592 <_dtoa_r+0x262>
 80065e0:	636f4361 	.word	0x636f4361
 80065e4:	3fd287a7 	.word	0x3fd287a7
 80065e8:	8b60c8b3 	.word	0x8b60c8b3
 80065ec:	3fc68a28 	.word	0x3fc68a28
 80065f0:	509f79fb 	.word	0x509f79fb
 80065f4:	3fd34413 	.word	0x3fd34413
 80065f8:	08007f57 	.word	0x08007f57
 80065fc:	08007f6e 	.word	0x08007f6e
 8006600:	7ff00000 	.word	0x7ff00000
 8006604:	08007f53 	.word	0x08007f53
 8006608:	08007eeb 	.word	0x08007eeb
 800660c:	08007eea 	.word	0x08007eea
 8006610:	3ff80000 	.word	0x3ff80000
 8006614:	08008068 	.word	0x08008068
 8006618:	08007fc6 	.word	0x08007fc6
 800661c:	f8db 301c 	ldr.w	r3, [fp, #28]
 8006620:	6018      	str	r0, [r3, #0]
 8006622:	9b07      	ldr	r3, [sp, #28]
 8006624:	2b0e      	cmp	r3, #14
 8006626:	f200 80a4 	bhi.w	8006772 <_dtoa_r+0x442>
 800662a:	2c00      	cmp	r4, #0
 800662c:	f000 80a1 	beq.w	8006772 <_dtoa_r+0x442>
 8006630:	2f00      	cmp	r7, #0
 8006632:	dd33      	ble.n	800669c <_dtoa_r+0x36c>
 8006634:	4b86      	ldr	r3, [pc, #536]	@ (8006850 <_dtoa_r+0x520>)
 8006636:	f007 020f 	and.w	r2, r7, #15
 800663a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800663e:	05f8      	lsls	r0, r7, #23
 8006640:	e9d3 3400 	ldrd	r3, r4, [r3]
 8006644:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8006648:	ea4f 1427 	mov.w	r4, r7, asr #4
 800664c:	d516      	bpl.n	800667c <_dtoa_r+0x34c>
 800664e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8006652:	4b80      	ldr	r3, [pc, #512]	@ (8006854 <_dtoa_r+0x524>)
 8006654:	2603      	movs	r6, #3
 8006656:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800665a:	f7fa f867 	bl	800072c <__aeabi_ddiv>
 800665e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8006662:	f004 040f 	and.w	r4, r4, #15
 8006666:	4d7b      	ldr	r5, [pc, #492]	@ (8006854 <_dtoa_r+0x524>)
 8006668:	b954      	cbnz	r4, 8006680 <_dtoa_r+0x350>
 800666a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800666e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006672:	f7fa f85b 	bl	800072c <__aeabi_ddiv>
 8006676:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800667a:	e028      	b.n	80066ce <_dtoa_r+0x39e>
 800667c:	2602      	movs	r6, #2
 800667e:	e7f2      	b.n	8006666 <_dtoa_r+0x336>
 8006680:	07e1      	lsls	r1, r4, #31
 8006682:	d508      	bpl.n	8006696 <_dtoa_r+0x366>
 8006684:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8006688:	e9d5 2300 	ldrd	r2, r3, [r5]
 800668c:	f7f9 ff24 	bl	80004d8 <__aeabi_dmul>
 8006690:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8006694:	3601      	adds	r6, #1
 8006696:	1064      	asrs	r4, r4, #1
 8006698:	3508      	adds	r5, #8
 800669a:	e7e5      	b.n	8006668 <_dtoa_r+0x338>
 800669c:	f000 80d2 	beq.w	8006844 <_dtoa_r+0x514>
 80066a0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80066a4:	427c      	negs	r4, r7
 80066a6:	4b6a      	ldr	r3, [pc, #424]	@ (8006850 <_dtoa_r+0x520>)
 80066a8:	f004 020f 	and.w	r2, r4, #15
 80066ac:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80066b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80066b4:	f7f9 ff10 	bl	80004d8 <__aeabi_dmul>
 80066b8:	2602      	movs	r6, #2
 80066ba:	2300      	movs	r3, #0
 80066bc:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80066c0:	4d64      	ldr	r5, [pc, #400]	@ (8006854 <_dtoa_r+0x524>)
 80066c2:	1124      	asrs	r4, r4, #4
 80066c4:	2c00      	cmp	r4, #0
 80066c6:	f040 80b2 	bne.w	800682e <_dtoa_r+0x4fe>
 80066ca:	2b00      	cmp	r3, #0
 80066cc:	d1d3      	bne.n	8006676 <_dtoa_r+0x346>
 80066ce:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 80066d2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80066d4:	2b00      	cmp	r3, #0
 80066d6:	f000 80b7 	beq.w	8006848 <_dtoa_r+0x518>
 80066da:	2200      	movs	r2, #0
 80066dc:	4620      	mov	r0, r4
 80066de:	4629      	mov	r1, r5
 80066e0:	4b5d      	ldr	r3, [pc, #372]	@ (8006858 <_dtoa_r+0x528>)
 80066e2:	f7fa f96b 	bl	80009bc <__aeabi_dcmplt>
 80066e6:	2800      	cmp	r0, #0
 80066e8:	f000 80ae 	beq.w	8006848 <_dtoa_r+0x518>
 80066ec:	9b07      	ldr	r3, [sp, #28]
 80066ee:	2b00      	cmp	r3, #0
 80066f0:	f000 80aa 	beq.w	8006848 <_dtoa_r+0x518>
 80066f4:	9b08      	ldr	r3, [sp, #32]
 80066f6:	2b00      	cmp	r3, #0
 80066f8:	dd37      	ble.n	800676a <_dtoa_r+0x43a>
 80066fa:	1e7b      	subs	r3, r7, #1
 80066fc:	4620      	mov	r0, r4
 80066fe:	9304      	str	r3, [sp, #16]
 8006700:	2200      	movs	r2, #0
 8006702:	4629      	mov	r1, r5
 8006704:	4b55      	ldr	r3, [pc, #340]	@ (800685c <_dtoa_r+0x52c>)
 8006706:	f7f9 fee7 	bl	80004d8 <__aeabi_dmul>
 800670a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800670e:	9c08      	ldr	r4, [sp, #32]
 8006710:	3601      	adds	r6, #1
 8006712:	4630      	mov	r0, r6
 8006714:	f7f9 fe76 	bl	8000404 <__aeabi_i2d>
 8006718:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800671c:	f7f9 fedc 	bl	80004d8 <__aeabi_dmul>
 8006720:	2200      	movs	r2, #0
 8006722:	4b4f      	ldr	r3, [pc, #316]	@ (8006860 <_dtoa_r+0x530>)
 8006724:	f7f9 fd22 	bl	800016c <__adddf3>
 8006728:	4605      	mov	r5, r0
 800672a:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 800672e:	2c00      	cmp	r4, #0
 8006730:	f040 809a 	bne.w	8006868 <_dtoa_r+0x538>
 8006734:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006738:	2200      	movs	r2, #0
 800673a:	4b4a      	ldr	r3, [pc, #296]	@ (8006864 <_dtoa_r+0x534>)
 800673c:	f7f9 fd14 	bl	8000168 <__aeabi_dsub>
 8006740:	4602      	mov	r2, r0
 8006742:	460b      	mov	r3, r1
 8006744:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8006748:	462a      	mov	r2, r5
 800674a:	4633      	mov	r3, r6
 800674c:	f7fa f954 	bl	80009f8 <__aeabi_dcmpgt>
 8006750:	2800      	cmp	r0, #0
 8006752:	f040 828e 	bne.w	8006c72 <_dtoa_r+0x942>
 8006756:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800675a:	462a      	mov	r2, r5
 800675c:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8006760:	f7fa f92c 	bl	80009bc <__aeabi_dcmplt>
 8006764:	2800      	cmp	r0, #0
 8006766:	f040 8127 	bne.w	80069b8 <_dtoa_r+0x688>
 800676a:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 800676e:	e9cd 3402 	strd	r3, r4, [sp, #8]
 8006772:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8006774:	2b00      	cmp	r3, #0
 8006776:	f2c0 8163 	blt.w	8006a40 <_dtoa_r+0x710>
 800677a:	2f0e      	cmp	r7, #14
 800677c:	f300 8160 	bgt.w	8006a40 <_dtoa_r+0x710>
 8006780:	4b33      	ldr	r3, [pc, #204]	@ (8006850 <_dtoa_r+0x520>)
 8006782:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8006786:	e9d3 3400 	ldrd	r3, r4, [r3]
 800678a:	e9cd 3404 	strd	r3, r4, [sp, #16]
 800678e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8006790:	2b00      	cmp	r3, #0
 8006792:	da03      	bge.n	800679c <_dtoa_r+0x46c>
 8006794:	9b07      	ldr	r3, [sp, #28]
 8006796:	2b00      	cmp	r3, #0
 8006798:	f340 8100 	ble.w	800699c <_dtoa_r+0x66c>
 800679c:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 80067a0:	4656      	mov	r6, sl
 80067a2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80067a6:	4620      	mov	r0, r4
 80067a8:	4629      	mov	r1, r5
 80067aa:	f7f9 ffbf 	bl	800072c <__aeabi_ddiv>
 80067ae:	f7fa f943 	bl	8000a38 <__aeabi_d2iz>
 80067b2:	4680      	mov	r8, r0
 80067b4:	f7f9 fe26 	bl	8000404 <__aeabi_i2d>
 80067b8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80067bc:	f7f9 fe8c 	bl	80004d8 <__aeabi_dmul>
 80067c0:	4602      	mov	r2, r0
 80067c2:	460b      	mov	r3, r1
 80067c4:	4620      	mov	r0, r4
 80067c6:	4629      	mov	r1, r5
 80067c8:	f7f9 fcce 	bl	8000168 <__aeabi_dsub>
 80067cc:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 80067d0:	9d07      	ldr	r5, [sp, #28]
 80067d2:	f806 4b01 	strb.w	r4, [r6], #1
 80067d6:	eba6 040a 	sub.w	r4, r6, sl
 80067da:	42a5      	cmp	r5, r4
 80067dc:	4602      	mov	r2, r0
 80067de:	460b      	mov	r3, r1
 80067e0:	f040 8116 	bne.w	8006a10 <_dtoa_r+0x6e0>
 80067e4:	f7f9 fcc2 	bl	800016c <__adddf3>
 80067e8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80067ec:	4604      	mov	r4, r0
 80067ee:	460d      	mov	r5, r1
 80067f0:	f7fa f902 	bl	80009f8 <__aeabi_dcmpgt>
 80067f4:	2800      	cmp	r0, #0
 80067f6:	f040 80f8 	bne.w	80069ea <_dtoa_r+0x6ba>
 80067fa:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80067fe:	4620      	mov	r0, r4
 8006800:	4629      	mov	r1, r5
 8006802:	f7fa f8d1 	bl	80009a8 <__aeabi_dcmpeq>
 8006806:	b118      	cbz	r0, 8006810 <_dtoa_r+0x4e0>
 8006808:	f018 0f01 	tst.w	r8, #1
 800680c:	f040 80ed 	bne.w	80069ea <_dtoa_r+0x6ba>
 8006810:	4649      	mov	r1, r9
 8006812:	4658      	mov	r0, fp
 8006814:	f000 fbdc 	bl	8006fd0 <_Bfree>
 8006818:	2300      	movs	r3, #0
 800681a:	7033      	strb	r3, [r6, #0]
 800681c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 800681e:	3701      	adds	r7, #1
 8006820:	601f      	str	r7, [r3, #0]
 8006822:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8006824:	2b00      	cmp	r3, #0
 8006826:	f000 8320 	beq.w	8006e6a <_dtoa_r+0xb3a>
 800682a:	601e      	str	r6, [r3, #0]
 800682c:	e31d      	b.n	8006e6a <_dtoa_r+0xb3a>
 800682e:	07e2      	lsls	r2, r4, #31
 8006830:	d505      	bpl.n	800683e <_dtoa_r+0x50e>
 8006832:	e9d5 2300 	ldrd	r2, r3, [r5]
 8006836:	f7f9 fe4f 	bl	80004d8 <__aeabi_dmul>
 800683a:	2301      	movs	r3, #1
 800683c:	3601      	adds	r6, #1
 800683e:	1064      	asrs	r4, r4, #1
 8006840:	3508      	adds	r5, #8
 8006842:	e73f      	b.n	80066c4 <_dtoa_r+0x394>
 8006844:	2602      	movs	r6, #2
 8006846:	e742      	b.n	80066ce <_dtoa_r+0x39e>
 8006848:	9c07      	ldr	r4, [sp, #28]
 800684a:	9704      	str	r7, [sp, #16]
 800684c:	e761      	b.n	8006712 <_dtoa_r+0x3e2>
 800684e:	bf00      	nop
 8006850:	08008068 	.word	0x08008068
 8006854:	08008040 	.word	0x08008040
 8006858:	3ff00000 	.word	0x3ff00000
 800685c:	40240000 	.word	0x40240000
 8006860:	401c0000 	.word	0x401c0000
 8006864:	40140000 	.word	0x40140000
 8006868:	4b70      	ldr	r3, [pc, #448]	@ (8006a2c <_dtoa_r+0x6fc>)
 800686a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800686c:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8006870:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8006874:	4454      	add	r4, sl
 8006876:	2900      	cmp	r1, #0
 8006878:	d045      	beq.n	8006906 <_dtoa_r+0x5d6>
 800687a:	2000      	movs	r0, #0
 800687c:	496c      	ldr	r1, [pc, #432]	@ (8006a30 <_dtoa_r+0x700>)
 800687e:	f7f9 ff55 	bl	800072c <__aeabi_ddiv>
 8006882:	4633      	mov	r3, r6
 8006884:	462a      	mov	r2, r5
 8006886:	f7f9 fc6f 	bl	8000168 <__aeabi_dsub>
 800688a:	4656      	mov	r6, sl
 800688c:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8006890:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006894:	f7fa f8d0 	bl	8000a38 <__aeabi_d2iz>
 8006898:	4605      	mov	r5, r0
 800689a:	f7f9 fdb3 	bl	8000404 <__aeabi_i2d>
 800689e:	4602      	mov	r2, r0
 80068a0:	460b      	mov	r3, r1
 80068a2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80068a6:	f7f9 fc5f 	bl	8000168 <__aeabi_dsub>
 80068aa:	4602      	mov	r2, r0
 80068ac:	460b      	mov	r3, r1
 80068ae:	3530      	adds	r5, #48	@ 0x30
 80068b0:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80068b4:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 80068b8:	f806 5b01 	strb.w	r5, [r6], #1
 80068bc:	f7fa f87e 	bl	80009bc <__aeabi_dcmplt>
 80068c0:	2800      	cmp	r0, #0
 80068c2:	d163      	bne.n	800698c <_dtoa_r+0x65c>
 80068c4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80068c8:	2000      	movs	r0, #0
 80068ca:	495a      	ldr	r1, [pc, #360]	@ (8006a34 <_dtoa_r+0x704>)
 80068cc:	f7f9 fc4c 	bl	8000168 <__aeabi_dsub>
 80068d0:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 80068d4:	f7fa f872 	bl	80009bc <__aeabi_dcmplt>
 80068d8:	2800      	cmp	r0, #0
 80068da:	f040 8087 	bne.w	80069ec <_dtoa_r+0x6bc>
 80068de:	42a6      	cmp	r6, r4
 80068e0:	f43f af43 	beq.w	800676a <_dtoa_r+0x43a>
 80068e4:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 80068e8:	2200      	movs	r2, #0
 80068ea:	4b53      	ldr	r3, [pc, #332]	@ (8006a38 <_dtoa_r+0x708>)
 80068ec:	f7f9 fdf4 	bl	80004d8 <__aeabi_dmul>
 80068f0:	2200      	movs	r2, #0
 80068f2:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 80068f6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80068fa:	4b4f      	ldr	r3, [pc, #316]	@ (8006a38 <_dtoa_r+0x708>)
 80068fc:	f7f9 fdec 	bl	80004d8 <__aeabi_dmul>
 8006900:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8006904:	e7c4      	b.n	8006890 <_dtoa_r+0x560>
 8006906:	4631      	mov	r1, r6
 8006908:	4628      	mov	r0, r5
 800690a:	f7f9 fde5 	bl	80004d8 <__aeabi_dmul>
 800690e:	4656      	mov	r6, sl
 8006910:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8006914:	9413      	str	r4, [sp, #76]	@ 0x4c
 8006916:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800691a:	f7fa f88d 	bl	8000a38 <__aeabi_d2iz>
 800691e:	4605      	mov	r5, r0
 8006920:	f7f9 fd70 	bl	8000404 <__aeabi_i2d>
 8006924:	4602      	mov	r2, r0
 8006926:	460b      	mov	r3, r1
 8006928:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800692c:	f7f9 fc1c 	bl	8000168 <__aeabi_dsub>
 8006930:	4602      	mov	r2, r0
 8006932:	460b      	mov	r3, r1
 8006934:	3530      	adds	r5, #48	@ 0x30
 8006936:	f806 5b01 	strb.w	r5, [r6], #1
 800693a:	42a6      	cmp	r6, r4
 800693c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8006940:	f04f 0200 	mov.w	r2, #0
 8006944:	d124      	bne.n	8006990 <_dtoa_r+0x660>
 8006946:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 800694a:	4b39      	ldr	r3, [pc, #228]	@ (8006a30 <_dtoa_r+0x700>)
 800694c:	f7f9 fc0e 	bl	800016c <__adddf3>
 8006950:	4602      	mov	r2, r0
 8006952:	460b      	mov	r3, r1
 8006954:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006958:	f7fa f84e 	bl	80009f8 <__aeabi_dcmpgt>
 800695c:	2800      	cmp	r0, #0
 800695e:	d145      	bne.n	80069ec <_dtoa_r+0x6bc>
 8006960:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8006964:	2000      	movs	r0, #0
 8006966:	4932      	ldr	r1, [pc, #200]	@ (8006a30 <_dtoa_r+0x700>)
 8006968:	f7f9 fbfe 	bl	8000168 <__aeabi_dsub>
 800696c:	4602      	mov	r2, r0
 800696e:	460b      	mov	r3, r1
 8006970:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006974:	f7fa f822 	bl	80009bc <__aeabi_dcmplt>
 8006978:	2800      	cmp	r0, #0
 800697a:	f43f aef6 	beq.w	800676a <_dtoa_r+0x43a>
 800697e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8006980:	1e73      	subs	r3, r6, #1
 8006982:	9313      	str	r3, [sp, #76]	@ 0x4c
 8006984:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8006988:	2b30      	cmp	r3, #48	@ 0x30
 800698a:	d0f8      	beq.n	800697e <_dtoa_r+0x64e>
 800698c:	9f04      	ldr	r7, [sp, #16]
 800698e:	e73f      	b.n	8006810 <_dtoa_r+0x4e0>
 8006990:	4b29      	ldr	r3, [pc, #164]	@ (8006a38 <_dtoa_r+0x708>)
 8006992:	f7f9 fda1 	bl	80004d8 <__aeabi_dmul>
 8006996:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800699a:	e7bc      	b.n	8006916 <_dtoa_r+0x5e6>
 800699c:	d10c      	bne.n	80069b8 <_dtoa_r+0x688>
 800699e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80069a2:	2200      	movs	r2, #0
 80069a4:	4b25      	ldr	r3, [pc, #148]	@ (8006a3c <_dtoa_r+0x70c>)
 80069a6:	f7f9 fd97 	bl	80004d8 <__aeabi_dmul>
 80069aa:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80069ae:	f7fa f819 	bl	80009e4 <__aeabi_dcmpge>
 80069b2:	2800      	cmp	r0, #0
 80069b4:	f000 815b 	beq.w	8006c6e <_dtoa_r+0x93e>
 80069b8:	2400      	movs	r4, #0
 80069ba:	4625      	mov	r5, r4
 80069bc:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80069be:	4656      	mov	r6, sl
 80069c0:	43db      	mvns	r3, r3
 80069c2:	9304      	str	r3, [sp, #16]
 80069c4:	2700      	movs	r7, #0
 80069c6:	4621      	mov	r1, r4
 80069c8:	4658      	mov	r0, fp
 80069ca:	f000 fb01 	bl	8006fd0 <_Bfree>
 80069ce:	2d00      	cmp	r5, #0
 80069d0:	d0dc      	beq.n	800698c <_dtoa_r+0x65c>
 80069d2:	b12f      	cbz	r7, 80069e0 <_dtoa_r+0x6b0>
 80069d4:	42af      	cmp	r7, r5
 80069d6:	d003      	beq.n	80069e0 <_dtoa_r+0x6b0>
 80069d8:	4639      	mov	r1, r7
 80069da:	4658      	mov	r0, fp
 80069dc:	f000 faf8 	bl	8006fd0 <_Bfree>
 80069e0:	4629      	mov	r1, r5
 80069e2:	4658      	mov	r0, fp
 80069e4:	f000 faf4 	bl	8006fd0 <_Bfree>
 80069e8:	e7d0      	b.n	800698c <_dtoa_r+0x65c>
 80069ea:	9704      	str	r7, [sp, #16]
 80069ec:	4633      	mov	r3, r6
 80069ee:	461e      	mov	r6, r3
 80069f0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80069f4:	2a39      	cmp	r2, #57	@ 0x39
 80069f6:	d107      	bne.n	8006a08 <_dtoa_r+0x6d8>
 80069f8:	459a      	cmp	sl, r3
 80069fa:	d1f8      	bne.n	80069ee <_dtoa_r+0x6be>
 80069fc:	9a04      	ldr	r2, [sp, #16]
 80069fe:	3201      	adds	r2, #1
 8006a00:	9204      	str	r2, [sp, #16]
 8006a02:	2230      	movs	r2, #48	@ 0x30
 8006a04:	f88a 2000 	strb.w	r2, [sl]
 8006a08:	781a      	ldrb	r2, [r3, #0]
 8006a0a:	3201      	adds	r2, #1
 8006a0c:	701a      	strb	r2, [r3, #0]
 8006a0e:	e7bd      	b.n	800698c <_dtoa_r+0x65c>
 8006a10:	2200      	movs	r2, #0
 8006a12:	4b09      	ldr	r3, [pc, #36]	@ (8006a38 <_dtoa_r+0x708>)
 8006a14:	f7f9 fd60 	bl	80004d8 <__aeabi_dmul>
 8006a18:	2200      	movs	r2, #0
 8006a1a:	2300      	movs	r3, #0
 8006a1c:	4604      	mov	r4, r0
 8006a1e:	460d      	mov	r5, r1
 8006a20:	f7f9 ffc2 	bl	80009a8 <__aeabi_dcmpeq>
 8006a24:	2800      	cmp	r0, #0
 8006a26:	f43f aebc 	beq.w	80067a2 <_dtoa_r+0x472>
 8006a2a:	e6f1      	b.n	8006810 <_dtoa_r+0x4e0>
 8006a2c:	08008068 	.word	0x08008068
 8006a30:	3fe00000 	.word	0x3fe00000
 8006a34:	3ff00000 	.word	0x3ff00000
 8006a38:	40240000 	.word	0x40240000
 8006a3c:	40140000 	.word	0x40140000
 8006a40:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8006a42:	2a00      	cmp	r2, #0
 8006a44:	f000 80db 	beq.w	8006bfe <_dtoa_r+0x8ce>
 8006a48:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8006a4a:	2a01      	cmp	r2, #1
 8006a4c:	f300 80bf 	bgt.w	8006bce <_dtoa_r+0x89e>
 8006a50:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8006a52:	2a00      	cmp	r2, #0
 8006a54:	f000 80b7 	beq.w	8006bc6 <_dtoa_r+0x896>
 8006a58:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8006a5c:	4646      	mov	r6, r8
 8006a5e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8006a60:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8006a62:	2101      	movs	r1, #1
 8006a64:	441a      	add	r2, r3
 8006a66:	4658      	mov	r0, fp
 8006a68:	4498      	add	r8, r3
 8006a6a:	9209      	str	r2, [sp, #36]	@ 0x24
 8006a6c:	f000 fb64 	bl	8007138 <__i2b>
 8006a70:	4605      	mov	r5, r0
 8006a72:	b15e      	cbz	r6, 8006a8c <_dtoa_r+0x75c>
 8006a74:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006a76:	2b00      	cmp	r3, #0
 8006a78:	dd08      	ble.n	8006a8c <_dtoa_r+0x75c>
 8006a7a:	42b3      	cmp	r3, r6
 8006a7c:	bfa8      	it	ge
 8006a7e:	4633      	movge	r3, r6
 8006a80:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8006a82:	eba8 0803 	sub.w	r8, r8, r3
 8006a86:	1af6      	subs	r6, r6, r3
 8006a88:	1ad3      	subs	r3, r2, r3
 8006a8a:	9309      	str	r3, [sp, #36]	@ 0x24
 8006a8c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006a8e:	b1f3      	cbz	r3, 8006ace <_dtoa_r+0x79e>
 8006a90:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8006a92:	2b00      	cmp	r3, #0
 8006a94:	f000 80b7 	beq.w	8006c06 <_dtoa_r+0x8d6>
 8006a98:	b18c      	cbz	r4, 8006abe <_dtoa_r+0x78e>
 8006a9a:	4629      	mov	r1, r5
 8006a9c:	4622      	mov	r2, r4
 8006a9e:	4658      	mov	r0, fp
 8006aa0:	f000 fc08 	bl	80072b4 <__pow5mult>
 8006aa4:	464a      	mov	r2, r9
 8006aa6:	4601      	mov	r1, r0
 8006aa8:	4605      	mov	r5, r0
 8006aaa:	4658      	mov	r0, fp
 8006aac:	f000 fb5a 	bl	8007164 <__multiply>
 8006ab0:	4649      	mov	r1, r9
 8006ab2:	9004      	str	r0, [sp, #16]
 8006ab4:	4658      	mov	r0, fp
 8006ab6:	f000 fa8b 	bl	8006fd0 <_Bfree>
 8006aba:	9b04      	ldr	r3, [sp, #16]
 8006abc:	4699      	mov	r9, r3
 8006abe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006ac0:	1b1a      	subs	r2, r3, r4
 8006ac2:	d004      	beq.n	8006ace <_dtoa_r+0x79e>
 8006ac4:	4649      	mov	r1, r9
 8006ac6:	4658      	mov	r0, fp
 8006ac8:	f000 fbf4 	bl	80072b4 <__pow5mult>
 8006acc:	4681      	mov	r9, r0
 8006ace:	2101      	movs	r1, #1
 8006ad0:	4658      	mov	r0, fp
 8006ad2:	f000 fb31 	bl	8007138 <__i2b>
 8006ad6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006ad8:	4604      	mov	r4, r0
 8006ada:	2b00      	cmp	r3, #0
 8006adc:	f000 81c9 	beq.w	8006e72 <_dtoa_r+0xb42>
 8006ae0:	461a      	mov	r2, r3
 8006ae2:	4601      	mov	r1, r0
 8006ae4:	4658      	mov	r0, fp
 8006ae6:	f000 fbe5 	bl	80072b4 <__pow5mult>
 8006aea:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8006aec:	4604      	mov	r4, r0
 8006aee:	2b01      	cmp	r3, #1
 8006af0:	f300 808f 	bgt.w	8006c12 <_dtoa_r+0x8e2>
 8006af4:	9b02      	ldr	r3, [sp, #8]
 8006af6:	2b00      	cmp	r3, #0
 8006af8:	f040 8087 	bne.w	8006c0a <_dtoa_r+0x8da>
 8006afc:	9b03      	ldr	r3, [sp, #12]
 8006afe:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006b02:	2b00      	cmp	r3, #0
 8006b04:	f040 8083 	bne.w	8006c0e <_dtoa_r+0x8de>
 8006b08:	9b03      	ldr	r3, [sp, #12]
 8006b0a:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8006b0e:	0d1b      	lsrs	r3, r3, #20
 8006b10:	051b      	lsls	r3, r3, #20
 8006b12:	b12b      	cbz	r3, 8006b20 <_dtoa_r+0x7f0>
 8006b14:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006b16:	f108 0801 	add.w	r8, r8, #1
 8006b1a:	3301      	adds	r3, #1
 8006b1c:	9309      	str	r3, [sp, #36]	@ 0x24
 8006b1e:	2301      	movs	r3, #1
 8006b20:	930a      	str	r3, [sp, #40]	@ 0x28
 8006b22:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006b24:	2b00      	cmp	r3, #0
 8006b26:	f000 81aa 	beq.w	8006e7e <_dtoa_r+0xb4e>
 8006b2a:	6923      	ldr	r3, [r4, #16]
 8006b2c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8006b30:	6918      	ldr	r0, [r3, #16]
 8006b32:	f000 fab5 	bl	80070a0 <__hi0bits>
 8006b36:	f1c0 0020 	rsb	r0, r0, #32
 8006b3a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006b3c:	4418      	add	r0, r3
 8006b3e:	f010 001f 	ands.w	r0, r0, #31
 8006b42:	d071      	beq.n	8006c28 <_dtoa_r+0x8f8>
 8006b44:	f1c0 0320 	rsb	r3, r0, #32
 8006b48:	2b04      	cmp	r3, #4
 8006b4a:	dd65      	ble.n	8006c18 <_dtoa_r+0x8e8>
 8006b4c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006b4e:	f1c0 001c 	rsb	r0, r0, #28
 8006b52:	4403      	add	r3, r0
 8006b54:	4480      	add	r8, r0
 8006b56:	4406      	add	r6, r0
 8006b58:	9309      	str	r3, [sp, #36]	@ 0x24
 8006b5a:	f1b8 0f00 	cmp.w	r8, #0
 8006b5e:	dd05      	ble.n	8006b6c <_dtoa_r+0x83c>
 8006b60:	4649      	mov	r1, r9
 8006b62:	4642      	mov	r2, r8
 8006b64:	4658      	mov	r0, fp
 8006b66:	f000 fbff 	bl	8007368 <__lshift>
 8006b6a:	4681      	mov	r9, r0
 8006b6c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006b6e:	2b00      	cmp	r3, #0
 8006b70:	dd05      	ble.n	8006b7e <_dtoa_r+0x84e>
 8006b72:	4621      	mov	r1, r4
 8006b74:	461a      	mov	r2, r3
 8006b76:	4658      	mov	r0, fp
 8006b78:	f000 fbf6 	bl	8007368 <__lshift>
 8006b7c:	4604      	mov	r4, r0
 8006b7e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8006b80:	2b00      	cmp	r3, #0
 8006b82:	d053      	beq.n	8006c2c <_dtoa_r+0x8fc>
 8006b84:	4621      	mov	r1, r4
 8006b86:	4648      	mov	r0, r9
 8006b88:	f000 fc5a 	bl	8007440 <__mcmp>
 8006b8c:	2800      	cmp	r0, #0
 8006b8e:	da4d      	bge.n	8006c2c <_dtoa_r+0x8fc>
 8006b90:	1e7b      	subs	r3, r7, #1
 8006b92:	4649      	mov	r1, r9
 8006b94:	9304      	str	r3, [sp, #16]
 8006b96:	220a      	movs	r2, #10
 8006b98:	2300      	movs	r3, #0
 8006b9a:	4658      	mov	r0, fp
 8006b9c:	f000 fa3a 	bl	8007014 <__multadd>
 8006ba0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8006ba2:	4681      	mov	r9, r0
 8006ba4:	2b00      	cmp	r3, #0
 8006ba6:	f000 816c 	beq.w	8006e82 <_dtoa_r+0xb52>
 8006baa:	2300      	movs	r3, #0
 8006bac:	4629      	mov	r1, r5
 8006bae:	220a      	movs	r2, #10
 8006bb0:	4658      	mov	r0, fp
 8006bb2:	f000 fa2f 	bl	8007014 <__multadd>
 8006bb6:	9b08      	ldr	r3, [sp, #32]
 8006bb8:	4605      	mov	r5, r0
 8006bba:	2b00      	cmp	r3, #0
 8006bbc:	dc61      	bgt.n	8006c82 <_dtoa_r+0x952>
 8006bbe:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8006bc0:	2b02      	cmp	r3, #2
 8006bc2:	dc3b      	bgt.n	8006c3c <_dtoa_r+0x90c>
 8006bc4:	e05d      	b.n	8006c82 <_dtoa_r+0x952>
 8006bc6:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8006bc8:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8006bcc:	e746      	b.n	8006a5c <_dtoa_r+0x72c>
 8006bce:	9b07      	ldr	r3, [sp, #28]
 8006bd0:	1e5c      	subs	r4, r3, #1
 8006bd2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006bd4:	42a3      	cmp	r3, r4
 8006bd6:	bfbf      	itttt	lt
 8006bd8:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8006bda:	9a0e      	ldrlt	r2, [sp, #56]	@ 0x38
 8006bdc:	1ae3      	sublt	r3, r4, r3
 8006bde:	18d2      	addlt	r2, r2, r3
 8006be0:	bfa8      	it	ge
 8006be2:	1b1c      	subge	r4, r3, r4
 8006be4:	9b07      	ldr	r3, [sp, #28]
 8006be6:	bfbe      	ittt	lt
 8006be8:	940a      	strlt	r4, [sp, #40]	@ 0x28
 8006bea:	920e      	strlt	r2, [sp, #56]	@ 0x38
 8006bec:	2400      	movlt	r4, #0
 8006bee:	2b00      	cmp	r3, #0
 8006bf0:	bfb5      	itete	lt
 8006bf2:	eba8 0603 	sublt.w	r6, r8, r3
 8006bf6:	4646      	movge	r6, r8
 8006bf8:	2300      	movlt	r3, #0
 8006bfa:	9b07      	ldrge	r3, [sp, #28]
 8006bfc:	e730      	b.n	8006a60 <_dtoa_r+0x730>
 8006bfe:	4646      	mov	r6, r8
 8006c00:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8006c02:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8006c04:	e735      	b.n	8006a72 <_dtoa_r+0x742>
 8006c06:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8006c08:	e75c      	b.n	8006ac4 <_dtoa_r+0x794>
 8006c0a:	2300      	movs	r3, #0
 8006c0c:	e788      	b.n	8006b20 <_dtoa_r+0x7f0>
 8006c0e:	9b02      	ldr	r3, [sp, #8]
 8006c10:	e786      	b.n	8006b20 <_dtoa_r+0x7f0>
 8006c12:	2300      	movs	r3, #0
 8006c14:	930a      	str	r3, [sp, #40]	@ 0x28
 8006c16:	e788      	b.n	8006b2a <_dtoa_r+0x7fa>
 8006c18:	d09f      	beq.n	8006b5a <_dtoa_r+0x82a>
 8006c1a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8006c1c:	331c      	adds	r3, #28
 8006c1e:	441a      	add	r2, r3
 8006c20:	4498      	add	r8, r3
 8006c22:	441e      	add	r6, r3
 8006c24:	9209      	str	r2, [sp, #36]	@ 0x24
 8006c26:	e798      	b.n	8006b5a <_dtoa_r+0x82a>
 8006c28:	4603      	mov	r3, r0
 8006c2a:	e7f6      	b.n	8006c1a <_dtoa_r+0x8ea>
 8006c2c:	9b07      	ldr	r3, [sp, #28]
 8006c2e:	9704      	str	r7, [sp, #16]
 8006c30:	2b00      	cmp	r3, #0
 8006c32:	dc20      	bgt.n	8006c76 <_dtoa_r+0x946>
 8006c34:	9308      	str	r3, [sp, #32]
 8006c36:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8006c38:	2b02      	cmp	r3, #2
 8006c3a:	dd1e      	ble.n	8006c7a <_dtoa_r+0x94a>
 8006c3c:	9b08      	ldr	r3, [sp, #32]
 8006c3e:	2b00      	cmp	r3, #0
 8006c40:	f47f aebc 	bne.w	80069bc <_dtoa_r+0x68c>
 8006c44:	4621      	mov	r1, r4
 8006c46:	2205      	movs	r2, #5
 8006c48:	4658      	mov	r0, fp
 8006c4a:	f000 f9e3 	bl	8007014 <__multadd>
 8006c4e:	4601      	mov	r1, r0
 8006c50:	4604      	mov	r4, r0
 8006c52:	4648      	mov	r0, r9
 8006c54:	f000 fbf4 	bl	8007440 <__mcmp>
 8006c58:	2800      	cmp	r0, #0
 8006c5a:	f77f aeaf 	ble.w	80069bc <_dtoa_r+0x68c>
 8006c5e:	2331      	movs	r3, #49	@ 0x31
 8006c60:	4656      	mov	r6, sl
 8006c62:	f806 3b01 	strb.w	r3, [r6], #1
 8006c66:	9b04      	ldr	r3, [sp, #16]
 8006c68:	3301      	adds	r3, #1
 8006c6a:	9304      	str	r3, [sp, #16]
 8006c6c:	e6aa      	b.n	80069c4 <_dtoa_r+0x694>
 8006c6e:	9c07      	ldr	r4, [sp, #28]
 8006c70:	9704      	str	r7, [sp, #16]
 8006c72:	4625      	mov	r5, r4
 8006c74:	e7f3      	b.n	8006c5e <_dtoa_r+0x92e>
 8006c76:	9b07      	ldr	r3, [sp, #28]
 8006c78:	9308      	str	r3, [sp, #32]
 8006c7a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8006c7c:	2b00      	cmp	r3, #0
 8006c7e:	f000 8104 	beq.w	8006e8a <_dtoa_r+0xb5a>
 8006c82:	2e00      	cmp	r6, #0
 8006c84:	dd05      	ble.n	8006c92 <_dtoa_r+0x962>
 8006c86:	4629      	mov	r1, r5
 8006c88:	4632      	mov	r2, r6
 8006c8a:	4658      	mov	r0, fp
 8006c8c:	f000 fb6c 	bl	8007368 <__lshift>
 8006c90:	4605      	mov	r5, r0
 8006c92:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006c94:	2b00      	cmp	r3, #0
 8006c96:	d05a      	beq.n	8006d4e <_dtoa_r+0xa1e>
 8006c98:	4658      	mov	r0, fp
 8006c9a:	6869      	ldr	r1, [r5, #4]
 8006c9c:	f000 f958 	bl	8006f50 <_Balloc>
 8006ca0:	4606      	mov	r6, r0
 8006ca2:	b928      	cbnz	r0, 8006cb0 <_dtoa_r+0x980>
 8006ca4:	4602      	mov	r2, r0
 8006ca6:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8006caa:	4b83      	ldr	r3, [pc, #524]	@ (8006eb8 <_dtoa_r+0xb88>)
 8006cac:	f7ff bb54 	b.w	8006358 <_dtoa_r+0x28>
 8006cb0:	692a      	ldr	r2, [r5, #16]
 8006cb2:	f105 010c 	add.w	r1, r5, #12
 8006cb6:	3202      	adds	r2, #2
 8006cb8:	0092      	lsls	r2, r2, #2
 8006cba:	300c      	adds	r0, #12
 8006cbc:	f7ff fa81 	bl	80061c2 <memcpy>
 8006cc0:	2201      	movs	r2, #1
 8006cc2:	4631      	mov	r1, r6
 8006cc4:	4658      	mov	r0, fp
 8006cc6:	f000 fb4f 	bl	8007368 <__lshift>
 8006cca:	462f      	mov	r7, r5
 8006ccc:	4605      	mov	r5, r0
 8006cce:	f10a 0301 	add.w	r3, sl, #1
 8006cd2:	9307      	str	r3, [sp, #28]
 8006cd4:	9b08      	ldr	r3, [sp, #32]
 8006cd6:	4453      	add	r3, sl
 8006cd8:	930b      	str	r3, [sp, #44]	@ 0x2c
 8006cda:	9b02      	ldr	r3, [sp, #8]
 8006cdc:	f003 0301 	and.w	r3, r3, #1
 8006ce0:	930a      	str	r3, [sp, #40]	@ 0x28
 8006ce2:	9b07      	ldr	r3, [sp, #28]
 8006ce4:	4621      	mov	r1, r4
 8006ce6:	3b01      	subs	r3, #1
 8006ce8:	4648      	mov	r0, r9
 8006cea:	9302      	str	r3, [sp, #8]
 8006cec:	f7ff fa96 	bl	800621c <quorem>
 8006cf0:	4639      	mov	r1, r7
 8006cf2:	9008      	str	r0, [sp, #32]
 8006cf4:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8006cf8:	4648      	mov	r0, r9
 8006cfa:	f000 fba1 	bl	8007440 <__mcmp>
 8006cfe:	462a      	mov	r2, r5
 8006d00:	9009      	str	r0, [sp, #36]	@ 0x24
 8006d02:	4621      	mov	r1, r4
 8006d04:	4658      	mov	r0, fp
 8006d06:	f000 fbb7 	bl	8007478 <__mdiff>
 8006d0a:	68c2      	ldr	r2, [r0, #12]
 8006d0c:	4606      	mov	r6, r0
 8006d0e:	bb02      	cbnz	r2, 8006d52 <_dtoa_r+0xa22>
 8006d10:	4601      	mov	r1, r0
 8006d12:	4648      	mov	r0, r9
 8006d14:	f000 fb94 	bl	8007440 <__mcmp>
 8006d18:	4602      	mov	r2, r0
 8006d1a:	4631      	mov	r1, r6
 8006d1c:	4658      	mov	r0, fp
 8006d1e:	920c      	str	r2, [sp, #48]	@ 0x30
 8006d20:	f000 f956 	bl	8006fd0 <_Bfree>
 8006d24:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8006d26:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8006d28:	9e07      	ldr	r6, [sp, #28]
 8006d2a:	ea43 0102 	orr.w	r1, r3, r2
 8006d2e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006d30:	4319      	orrs	r1, r3
 8006d32:	d110      	bne.n	8006d56 <_dtoa_r+0xa26>
 8006d34:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8006d38:	d029      	beq.n	8006d8e <_dtoa_r+0xa5e>
 8006d3a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006d3c:	2b00      	cmp	r3, #0
 8006d3e:	dd02      	ble.n	8006d46 <_dtoa_r+0xa16>
 8006d40:	9b08      	ldr	r3, [sp, #32]
 8006d42:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 8006d46:	9b02      	ldr	r3, [sp, #8]
 8006d48:	f883 8000 	strb.w	r8, [r3]
 8006d4c:	e63b      	b.n	80069c6 <_dtoa_r+0x696>
 8006d4e:	4628      	mov	r0, r5
 8006d50:	e7bb      	b.n	8006cca <_dtoa_r+0x99a>
 8006d52:	2201      	movs	r2, #1
 8006d54:	e7e1      	b.n	8006d1a <_dtoa_r+0x9ea>
 8006d56:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006d58:	2b00      	cmp	r3, #0
 8006d5a:	db04      	blt.n	8006d66 <_dtoa_r+0xa36>
 8006d5c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8006d5e:	430b      	orrs	r3, r1
 8006d60:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8006d62:	430b      	orrs	r3, r1
 8006d64:	d120      	bne.n	8006da8 <_dtoa_r+0xa78>
 8006d66:	2a00      	cmp	r2, #0
 8006d68:	dded      	ble.n	8006d46 <_dtoa_r+0xa16>
 8006d6a:	4649      	mov	r1, r9
 8006d6c:	2201      	movs	r2, #1
 8006d6e:	4658      	mov	r0, fp
 8006d70:	f000 fafa 	bl	8007368 <__lshift>
 8006d74:	4621      	mov	r1, r4
 8006d76:	4681      	mov	r9, r0
 8006d78:	f000 fb62 	bl	8007440 <__mcmp>
 8006d7c:	2800      	cmp	r0, #0
 8006d7e:	dc03      	bgt.n	8006d88 <_dtoa_r+0xa58>
 8006d80:	d1e1      	bne.n	8006d46 <_dtoa_r+0xa16>
 8006d82:	f018 0f01 	tst.w	r8, #1
 8006d86:	d0de      	beq.n	8006d46 <_dtoa_r+0xa16>
 8006d88:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8006d8c:	d1d8      	bne.n	8006d40 <_dtoa_r+0xa10>
 8006d8e:	2339      	movs	r3, #57	@ 0x39
 8006d90:	9a02      	ldr	r2, [sp, #8]
 8006d92:	7013      	strb	r3, [r2, #0]
 8006d94:	4633      	mov	r3, r6
 8006d96:	461e      	mov	r6, r3
 8006d98:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8006d9c:	3b01      	subs	r3, #1
 8006d9e:	2a39      	cmp	r2, #57	@ 0x39
 8006da0:	d052      	beq.n	8006e48 <_dtoa_r+0xb18>
 8006da2:	3201      	adds	r2, #1
 8006da4:	701a      	strb	r2, [r3, #0]
 8006da6:	e60e      	b.n	80069c6 <_dtoa_r+0x696>
 8006da8:	2a00      	cmp	r2, #0
 8006daa:	dd07      	ble.n	8006dbc <_dtoa_r+0xa8c>
 8006dac:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8006db0:	d0ed      	beq.n	8006d8e <_dtoa_r+0xa5e>
 8006db2:	9a02      	ldr	r2, [sp, #8]
 8006db4:	f108 0301 	add.w	r3, r8, #1
 8006db8:	7013      	strb	r3, [r2, #0]
 8006dba:	e604      	b.n	80069c6 <_dtoa_r+0x696>
 8006dbc:	9b07      	ldr	r3, [sp, #28]
 8006dbe:	9a07      	ldr	r2, [sp, #28]
 8006dc0:	f803 8c01 	strb.w	r8, [r3, #-1]
 8006dc4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8006dc6:	4293      	cmp	r3, r2
 8006dc8:	d028      	beq.n	8006e1c <_dtoa_r+0xaec>
 8006dca:	4649      	mov	r1, r9
 8006dcc:	2300      	movs	r3, #0
 8006dce:	220a      	movs	r2, #10
 8006dd0:	4658      	mov	r0, fp
 8006dd2:	f000 f91f 	bl	8007014 <__multadd>
 8006dd6:	42af      	cmp	r7, r5
 8006dd8:	4681      	mov	r9, r0
 8006dda:	f04f 0300 	mov.w	r3, #0
 8006dde:	f04f 020a 	mov.w	r2, #10
 8006de2:	4639      	mov	r1, r7
 8006de4:	4658      	mov	r0, fp
 8006de6:	d107      	bne.n	8006df8 <_dtoa_r+0xac8>
 8006de8:	f000 f914 	bl	8007014 <__multadd>
 8006dec:	4607      	mov	r7, r0
 8006dee:	4605      	mov	r5, r0
 8006df0:	9b07      	ldr	r3, [sp, #28]
 8006df2:	3301      	adds	r3, #1
 8006df4:	9307      	str	r3, [sp, #28]
 8006df6:	e774      	b.n	8006ce2 <_dtoa_r+0x9b2>
 8006df8:	f000 f90c 	bl	8007014 <__multadd>
 8006dfc:	4629      	mov	r1, r5
 8006dfe:	4607      	mov	r7, r0
 8006e00:	2300      	movs	r3, #0
 8006e02:	220a      	movs	r2, #10
 8006e04:	4658      	mov	r0, fp
 8006e06:	f000 f905 	bl	8007014 <__multadd>
 8006e0a:	4605      	mov	r5, r0
 8006e0c:	e7f0      	b.n	8006df0 <_dtoa_r+0xac0>
 8006e0e:	9b08      	ldr	r3, [sp, #32]
 8006e10:	2700      	movs	r7, #0
 8006e12:	2b00      	cmp	r3, #0
 8006e14:	bfcc      	ite	gt
 8006e16:	461e      	movgt	r6, r3
 8006e18:	2601      	movle	r6, #1
 8006e1a:	4456      	add	r6, sl
 8006e1c:	4649      	mov	r1, r9
 8006e1e:	2201      	movs	r2, #1
 8006e20:	4658      	mov	r0, fp
 8006e22:	f000 faa1 	bl	8007368 <__lshift>
 8006e26:	4621      	mov	r1, r4
 8006e28:	4681      	mov	r9, r0
 8006e2a:	f000 fb09 	bl	8007440 <__mcmp>
 8006e2e:	2800      	cmp	r0, #0
 8006e30:	dcb0      	bgt.n	8006d94 <_dtoa_r+0xa64>
 8006e32:	d102      	bne.n	8006e3a <_dtoa_r+0xb0a>
 8006e34:	f018 0f01 	tst.w	r8, #1
 8006e38:	d1ac      	bne.n	8006d94 <_dtoa_r+0xa64>
 8006e3a:	4633      	mov	r3, r6
 8006e3c:	461e      	mov	r6, r3
 8006e3e:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8006e42:	2a30      	cmp	r2, #48	@ 0x30
 8006e44:	d0fa      	beq.n	8006e3c <_dtoa_r+0xb0c>
 8006e46:	e5be      	b.n	80069c6 <_dtoa_r+0x696>
 8006e48:	459a      	cmp	sl, r3
 8006e4a:	d1a4      	bne.n	8006d96 <_dtoa_r+0xa66>
 8006e4c:	9b04      	ldr	r3, [sp, #16]
 8006e4e:	3301      	adds	r3, #1
 8006e50:	9304      	str	r3, [sp, #16]
 8006e52:	2331      	movs	r3, #49	@ 0x31
 8006e54:	f88a 3000 	strb.w	r3, [sl]
 8006e58:	e5b5      	b.n	80069c6 <_dtoa_r+0x696>
 8006e5a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8006e5c:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 8006ebc <_dtoa_r+0xb8c>
 8006e60:	b11b      	cbz	r3, 8006e6a <_dtoa_r+0xb3a>
 8006e62:	f10a 0308 	add.w	r3, sl, #8
 8006e66:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8006e68:	6013      	str	r3, [r2, #0]
 8006e6a:	4650      	mov	r0, sl
 8006e6c:	b017      	add	sp, #92	@ 0x5c
 8006e6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006e72:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8006e74:	2b01      	cmp	r3, #1
 8006e76:	f77f ae3d 	ble.w	8006af4 <_dtoa_r+0x7c4>
 8006e7a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006e7c:	930a      	str	r3, [sp, #40]	@ 0x28
 8006e7e:	2001      	movs	r0, #1
 8006e80:	e65b      	b.n	8006b3a <_dtoa_r+0x80a>
 8006e82:	9b08      	ldr	r3, [sp, #32]
 8006e84:	2b00      	cmp	r3, #0
 8006e86:	f77f aed6 	ble.w	8006c36 <_dtoa_r+0x906>
 8006e8a:	4656      	mov	r6, sl
 8006e8c:	4621      	mov	r1, r4
 8006e8e:	4648      	mov	r0, r9
 8006e90:	f7ff f9c4 	bl	800621c <quorem>
 8006e94:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8006e98:	9b08      	ldr	r3, [sp, #32]
 8006e9a:	f806 8b01 	strb.w	r8, [r6], #1
 8006e9e:	eba6 020a 	sub.w	r2, r6, sl
 8006ea2:	4293      	cmp	r3, r2
 8006ea4:	ddb3      	ble.n	8006e0e <_dtoa_r+0xade>
 8006ea6:	4649      	mov	r1, r9
 8006ea8:	2300      	movs	r3, #0
 8006eaa:	220a      	movs	r2, #10
 8006eac:	4658      	mov	r0, fp
 8006eae:	f000 f8b1 	bl	8007014 <__multadd>
 8006eb2:	4681      	mov	r9, r0
 8006eb4:	e7ea      	b.n	8006e8c <_dtoa_r+0xb5c>
 8006eb6:	bf00      	nop
 8006eb8:	08007fc6 	.word	0x08007fc6
 8006ebc:	08007f4a 	.word	0x08007f4a

08006ec0 <_free_r>:
 8006ec0:	b538      	push	{r3, r4, r5, lr}
 8006ec2:	4605      	mov	r5, r0
 8006ec4:	2900      	cmp	r1, #0
 8006ec6:	d040      	beq.n	8006f4a <_free_r+0x8a>
 8006ec8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006ecc:	1f0c      	subs	r4, r1, #4
 8006ece:	2b00      	cmp	r3, #0
 8006ed0:	bfb8      	it	lt
 8006ed2:	18e4      	addlt	r4, r4, r3
 8006ed4:	f7fe fa78 	bl	80053c8 <__malloc_lock>
 8006ed8:	4a1c      	ldr	r2, [pc, #112]	@ (8006f4c <_free_r+0x8c>)
 8006eda:	6813      	ldr	r3, [r2, #0]
 8006edc:	b933      	cbnz	r3, 8006eec <_free_r+0x2c>
 8006ede:	6063      	str	r3, [r4, #4]
 8006ee0:	6014      	str	r4, [r2, #0]
 8006ee2:	4628      	mov	r0, r5
 8006ee4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006ee8:	f7fe ba74 	b.w	80053d4 <__malloc_unlock>
 8006eec:	42a3      	cmp	r3, r4
 8006eee:	d908      	bls.n	8006f02 <_free_r+0x42>
 8006ef0:	6820      	ldr	r0, [r4, #0]
 8006ef2:	1821      	adds	r1, r4, r0
 8006ef4:	428b      	cmp	r3, r1
 8006ef6:	bf01      	itttt	eq
 8006ef8:	6819      	ldreq	r1, [r3, #0]
 8006efa:	685b      	ldreq	r3, [r3, #4]
 8006efc:	1809      	addeq	r1, r1, r0
 8006efe:	6021      	streq	r1, [r4, #0]
 8006f00:	e7ed      	b.n	8006ede <_free_r+0x1e>
 8006f02:	461a      	mov	r2, r3
 8006f04:	685b      	ldr	r3, [r3, #4]
 8006f06:	b10b      	cbz	r3, 8006f0c <_free_r+0x4c>
 8006f08:	42a3      	cmp	r3, r4
 8006f0a:	d9fa      	bls.n	8006f02 <_free_r+0x42>
 8006f0c:	6811      	ldr	r1, [r2, #0]
 8006f0e:	1850      	adds	r0, r2, r1
 8006f10:	42a0      	cmp	r0, r4
 8006f12:	d10b      	bne.n	8006f2c <_free_r+0x6c>
 8006f14:	6820      	ldr	r0, [r4, #0]
 8006f16:	4401      	add	r1, r0
 8006f18:	1850      	adds	r0, r2, r1
 8006f1a:	4283      	cmp	r3, r0
 8006f1c:	6011      	str	r1, [r2, #0]
 8006f1e:	d1e0      	bne.n	8006ee2 <_free_r+0x22>
 8006f20:	6818      	ldr	r0, [r3, #0]
 8006f22:	685b      	ldr	r3, [r3, #4]
 8006f24:	4408      	add	r0, r1
 8006f26:	6010      	str	r0, [r2, #0]
 8006f28:	6053      	str	r3, [r2, #4]
 8006f2a:	e7da      	b.n	8006ee2 <_free_r+0x22>
 8006f2c:	d902      	bls.n	8006f34 <_free_r+0x74>
 8006f2e:	230c      	movs	r3, #12
 8006f30:	602b      	str	r3, [r5, #0]
 8006f32:	e7d6      	b.n	8006ee2 <_free_r+0x22>
 8006f34:	6820      	ldr	r0, [r4, #0]
 8006f36:	1821      	adds	r1, r4, r0
 8006f38:	428b      	cmp	r3, r1
 8006f3a:	bf01      	itttt	eq
 8006f3c:	6819      	ldreq	r1, [r3, #0]
 8006f3e:	685b      	ldreq	r3, [r3, #4]
 8006f40:	1809      	addeq	r1, r1, r0
 8006f42:	6021      	streq	r1, [r4, #0]
 8006f44:	6063      	str	r3, [r4, #4]
 8006f46:	6054      	str	r4, [r2, #4]
 8006f48:	e7cb      	b.n	8006ee2 <_free_r+0x22>
 8006f4a:	bd38      	pop	{r3, r4, r5, pc}
 8006f4c:	20000644 	.word	0x20000644

08006f50 <_Balloc>:
 8006f50:	b570      	push	{r4, r5, r6, lr}
 8006f52:	69c6      	ldr	r6, [r0, #28]
 8006f54:	4604      	mov	r4, r0
 8006f56:	460d      	mov	r5, r1
 8006f58:	b976      	cbnz	r6, 8006f78 <_Balloc+0x28>
 8006f5a:	2010      	movs	r0, #16
 8006f5c:	f7fe f98a 	bl	8005274 <malloc>
 8006f60:	4602      	mov	r2, r0
 8006f62:	61e0      	str	r0, [r4, #28]
 8006f64:	b920      	cbnz	r0, 8006f70 <_Balloc+0x20>
 8006f66:	216b      	movs	r1, #107	@ 0x6b
 8006f68:	4b17      	ldr	r3, [pc, #92]	@ (8006fc8 <_Balloc+0x78>)
 8006f6a:	4818      	ldr	r0, [pc, #96]	@ (8006fcc <_Balloc+0x7c>)
 8006f6c:	f7ff f938 	bl	80061e0 <__assert_func>
 8006f70:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8006f74:	6006      	str	r6, [r0, #0]
 8006f76:	60c6      	str	r6, [r0, #12]
 8006f78:	69e6      	ldr	r6, [r4, #28]
 8006f7a:	68f3      	ldr	r3, [r6, #12]
 8006f7c:	b183      	cbz	r3, 8006fa0 <_Balloc+0x50>
 8006f7e:	69e3      	ldr	r3, [r4, #28]
 8006f80:	68db      	ldr	r3, [r3, #12]
 8006f82:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8006f86:	b9b8      	cbnz	r0, 8006fb8 <_Balloc+0x68>
 8006f88:	2101      	movs	r1, #1
 8006f8a:	fa01 f605 	lsl.w	r6, r1, r5
 8006f8e:	1d72      	adds	r2, r6, #5
 8006f90:	4620      	mov	r0, r4
 8006f92:	0092      	lsls	r2, r2, #2
 8006f94:	f000 fde1 	bl	8007b5a <_calloc_r>
 8006f98:	b160      	cbz	r0, 8006fb4 <_Balloc+0x64>
 8006f9a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8006f9e:	e00e      	b.n	8006fbe <_Balloc+0x6e>
 8006fa0:	2221      	movs	r2, #33	@ 0x21
 8006fa2:	2104      	movs	r1, #4
 8006fa4:	4620      	mov	r0, r4
 8006fa6:	f000 fdd8 	bl	8007b5a <_calloc_r>
 8006faa:	69e3      	ldr	r3, [r4, #28]
 8006fac:	60f0      	str	r0, [r6, #12]
 8006fae:	68db      	ldr	r3, [r3, #12]
 8006fb0:	2b00      	cmp	r3, #0
 8006fb2:	d1e4      	bne.n	8006f7e <_Balloc+0x2e>
 8006fb4:	2000      	movs	r0, #0
 8006fb6:	bd70      	pop	{r4, r5, r6, pc}
 8006fb8:	6802      	ldr	r2, [r0, #0]
 8006fba:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8006fbe:	2300      	movs	r3, #0
 8006fc0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8006fc4:	e7f7      	b.n	8006fb6 <_Balloc+0x66>
 8006fc6:	bf00      	nop
 8006fc8:	08007f57 	.word	0x08007f57
 8006fcc:	08007fd7 	.word	0x08007fd7

08006fd0 <_Bfree>:
 8006fd0:	b570      	push	{r4, r5, r6, lr}
 8006fd2:	69c6      	ldr	r6, [r0, #28]
 8006fd4:	4605      	mov	r5, r0
 8006fd6:	460c      	mov	r4, r1
 8006fd8:	b976      	cbnz	r6, 8006ff8 <_Bfree+0x28>
 8006fda:	2010      	movs	r0, #16
 8006fdc:	f7fe f94a 	bl	8005274 <malloc>
 8006fe0:	4602      	mov	r2, r0
 8006fe2:	61e8      	str	r0, [r5, #28]
 8006fe4:	b920      	cbnz	r0, 8006ff0 <_Bfree+0x20>
 8006fe6:	218f      	movs	r1, #143	@ 0x8f
 8006fe8:	4b08      	ldr	r3, [pc, #32]	@ (800700c <_Bfree+0x3c>)
 8006fea:	4809      	ldr	r0, [pc, #36]	@ (8007010 <_Bfree+0x40>)
 8006fec:	f7ff f8f8 	bl	80061e0 <__assert_func>
 8006ff0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8006ff4:	6006      	str	r6, [r0, #0]
 8006ff6:	60c6      	str	r6, [r0, #12]
 8006ff8:	b13c      	cbz	r4, 800700a <_Bfree+0x3a>
 8006ffa:	69eb      	ldr	r3, [r5, #28]
 8006ffc:	6862      	ldr	r2, [r4, #4]
 8006ffe:	68db      	ldr	r3, [r3, #12]
 8007000:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8007004:	6021      	str	r1, [r4, #0]
 8007006:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800700a:	bd70      	pop	{r4, r5, r6, pc}
 800700c:	08007f57 	.word	0x08007f57
 8007010:	08007fd7 	.word	0x08007fd7

08007014 <__multadd>:
 8007014:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007018:	4607      	mov	r7, r0
 800701a:	460c      	mov	r4, r1
 800701c:	461e      	mov	r6, r3
 800701e:	2000      	movs	r0, #0
 8007020:	690d      	ldr	r5, [r1, #16]
 8007022:	f101 0c14 	add.w	ip, r1, #20
 8007026:	f8dc 3000 	ldr.w	r3, [ip]
 800702a:	3001      	adds	r0, #1
 800702c:	b299      	uxth	r1, r3
 800702e:	fb02 6101 	mla	r1, r2, r1, r6
 8007032:	0c1e      	lsrs	r6, r3, #16
 8007034:	0c0b      	lsrs	r3, r1, #16
 8007036:	fb02 3306 	mla	r3, r2, r6, r3
 800703a:	b289      	uxth	r1, r1
 800703c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8007040:	4285      	cmp	r5, r0
 8007042:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8007046:	f84c 1b04 	str.w	r1, [ip], #4
 800704a:	dcec      	bgt.n	8007026 <__multadd+0x12>
 800704c:	b30e      	cbz	r6, 8007092 <__multadd+0x7e>
 800704e:	68a3      	ldr	r3, [r4, #8]
 8007050:	42ab      	cmp	r3, r5
 8007052:	dc19      	bgt.n	8007088 <__multadd+0x74>
 8007054:	6861      	ldr	r1, [r4, #4]
 8007056:	4638      	mov	r0, r7
 8007058:	3101      	adds	r1, #1
 800705a:	f7ff ff79 	bl	8006f50 <_Balloc>
 800705e:	4680      	mov	r8, r0
 8007060:	b928      	cbnz	r0, 800706e <__multadd+0x5a>
 8007062:	4602      	mov	r2, r0
 8007064:	21ba      	movs	r1, #186	@ 0xba
 8007066:	4b0c      	ldr	r3, [pc, #48]	@ (8007098 <__multadd+0x84>)
 8007068:	480c      	ldr	r0, [pc, #48]	@ (800709c <__multadd+0x88>)
 800706a:	f7ff f8b9 	bl	80061e0 <__assert_func>
 800706e:	6922      	ldr	r2, [r4, #16]
 8007070:	f104 010c 	add.w	r1, r4, #12
 8007074:	3202      	adds	r2, #2
 8007076:	0092      	lsls	r2, r2, #2
 8007078:	300c      	adds	r0, #12
 800707a:	f7ff f8a2 	bl	80061c2 <memcpy>
 800707e:	4621      	mov	r1, r4
 8007080:	4638      	mov	r0, r7
 8007082:	f7ff ffa5 	bl	8006fd0 <_Bfree>
 8007086:	4644      	mov	r4, r8
 8007088:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800708c:	3501      	adds	r5, #1
 800708e:	615e      	str	r6, [r3, #20]
 8007090:	6125      	str	r5, [r4, #16]
 8007092:	4620      	mov	r0, r4
 8007094:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007098:	08007fc6 	.word	0x08007fc6
 800709c:	08007fd7 	.word	0x08007fd7

080070a0 <__hi0bits>:
 80070a0:	4603      	mov	r3, r0
 80070a2:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 80070a6:	bf3a      	itte	cc
 80070a8:	0403      	lslcc	r3, r0, #16
 80070aa:	2010      	movcc	r0, #16
 80070ac:	2000      	movcs	r0, #0
 80070ae:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80070b2:	bf3c      	itt	cc
 80070b4:	021b      	lslcc	r3, r3, #8
 80070b6:	3008      	addcc	r0, #8
 80070b8:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80070bc:	bf3c      	itt	cc
 80070be:	011b      	lslcc	r3, r3, #4
 80070c0:	3004      	addcc	r0, #4
 80070c2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80070c6:	bf3c      	itt	cc
 80070c8:	009b      	lslcc	r3, r3, #2
 80070ca:	3002      	addcc	r0, #2
 80070cc:	2b00      	cmp	r3, #0
 80070ce:	db05      	blt.n	80070dc <__hi0bits+0x3c>
 80070d0:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 80070d4:	f100 0001 	add.w	r0, r0, #1
 80070d8:	bf08      	it	eq
 80070da:	2020      	moveq	r0, #32
 80070dc:	4770      	bx	lr

080070de <__lo0bits>:
 80070de:	6803      	ldr	r3, [r0, #0]
 80070e0:	4602      	mov	r2, r0
 80070e2:	f013 0007 	ands.w	r0, r3, #7
 80070e6:	d00b      	beq.n	8007100 <__lo0bits+0x22>
 80070e8:	07d9      	lsls	r1, r3, #31
 80070ea:	d421      	bmi.n	8007130 <__lo0bits+0x52>
 80070ec:	0798      	lsls	r0, r3, #30
 80070ee:	bf49      	itett	mi
 80070f0:	085b      	lsrmi	r3, r3, #1
 80070f2:	089b      	lsrpl	r3, r3, #2
 80070f4:	2001      	movmi	r0, #1
 80070f6:	6013      	strmi	r3, [r2, #0]
 80070f8:	bf5c      	itt	pl
 80070fa:	2002      	movpl	r0, #2
 80070fc:	6013      	strpl	r3, [r2, #0]
 80070fe:	4770      	bx	lr
 8007100:	b299      	uxth	r1, r3
 8007102:	b909      	cbnz	r1, 8007108 <__lo0bits+0x2a>
 8007104:	2010      	movs	r0, #16
 8007106:	0c1b      	lsrs	r3, r3, #16
 8007108:	b2d9      	uxtb	r1, r3
 800710a:	b909      	cbnz	r1, 8007110 <__lo0bits+0x32>
 800710c:	3008      	adds	r0, #8
 800710e:	0a1b      	lsrs	r3, r3, #8
 8007110:	0719      	lsls	r1, r3, #28
 8007112:	bf04      	itt	eq
 8007114:	091b      	lsreq	r3, r3, #4
 8007116:	3004      	addeq	r0, #4
 8007118:	0799      	lsls	r1, r3, #30
 800711a:	bf04      	itt	eq
 800711c:	089b      	lsreq	r3, r3, #2
 800711e:	3002      	addeq	r0, #2
 8007120:	07d9      	lsls	r1, r3, #31
 8007122:	d403      	bmi.n	800712c <__lo0bits+0x4e>
 8007124:	085b      	lsrs	r3, r3, #1
 8007126:	f100 0001 	add.w	r0, r0, #1
 800712a:	d003      	beq.n	8007134 <__lo0bits+0x56>
 800712c:	6013      	str	r3, [r2, #0]
 800712e:	4770      	bx	lr
 8007130:	2000      	movs	r0, #0
 8007132:	4770      	bx	lr
 8007134:	2020      	movs	r0, #32
 8007136:	4770      	bx	lr

08007138 <__i2b>:
 8007138:	b510      	push	{r4, lr}
 800713a:	460c      	mov	r4, r1
 800713c:	2101      	movs	r1, #1
 800713e:	f7ff ff07 	bl	8006f50 <_Balloc>
 8007142:	4602      	mov	r2, r0
 8007144:	b928      	cbnz	r0, 8007152 <__i2b+0x1a>
 8007146:	f240 1145 	movw	r1, #325	@ 0x145
 800714a:	4b04      	ldr	r3, [pc, #16]	@ (800715c <__i2b+0x24>)
 800714c:	4804      	ldr	r0, [pc, #16]	@ (8007160 <__i2b+0x28>)
 800714e:	f7ff f847 	bl	80061e0 <__assert_func>
 8007152:	2301      	movs	r3, #1
 8007154:	6144      	str	r4, [r0, #20]
 8007156:	6103      	str	r3, [r0, #16]
 8007158:	bd10      	pop	{r4, pc}
 800715a:	bf00      	nop
 800715c:	08007fc6 	.word	0x08007fc6
 8007160:	08007fd7 	.word	0x08007fd7

08007164 <__multiply>:
 8007164:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007168:	4614      	mov	r4, r2
 800716a:	690a      	ldr	r2, [r1, #16]
 800716c:	6923      	ldr	r3, [r4, #16]
 800716e:	460f      	mov	r7, r1
 8007170:	429a      	cmp	r2, r3
 8007172:	bfa2      	ittt	ge
 8007174:	4623      	movge	r3, r4
 8007176:	460c      	movge	r4, r1
 8007178:	461f      	movge	r7, r3
 800717a:	f8d4 a010 	ldr.w	sl, [r4, #16]
 800717e:	f8d7 9010 	ldr.w	r9, [r7, #16]
 8007182:	68a3      	ldr	r3, [r4, #8]
 8007184:	6861      	ldr	r1, [r4, #4]
 8007186:	eb0a 0609 	add.w	r6, sl, r9
 800718a:	42b3      	cmp	r3, r6
 800718c:	b085      	sub	sp, #20
 800718e:	bfb8      	it	lt
 8007190:	3101      	addlt	r1, #1
 8007192:	f7ff fedd 	bl	8006f50 <_Balloc>
 8007196:	b930      	cbnz	r0, 80071a6 <__multiply+0x42>
 8007198:	4602      	mov	r2, r0
 800719a:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 800719e:	4b43      	ldr	r3, [pc, #268]	@ (80072ac <__multiply+0x148>)
 80071a0:	4843      	ldr	r0, [pc, #268]	@ (80072b0 <__multiply+0x14c>)
 80071a2:	f7ff f81d 	bl	80061e0 <__assert_func>
 80071a6:	f100 0514 	add.w	r5, r0, #20
 80071aa:	462b      	mov	r3, r5
 80071ac:	2200      	movs	r2, #0
 80071ae:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 80071b2:	4543      	cmp	r3, r8
 80071b4:	d321      	bcc.n	80071fa <__multiply+0x96>
 80071b6:	f107 0114 	add.w	r1, r7, #20
 80071ba:	f104 0214 	add.w	r2, r4, #20
 80071be:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 80071c2:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 80071c6:	9302      	str	r3, [sp, #8]
 80071c8:	1b13      	subs	r3, r2, r4
 80071ca:	3b15      	subs	r3, #21
 80071cc:	f023 0303 	bic.w	r3, r3, #3
 80071d0:	3304      	adds	r3, #4
 80071d2:	f104 0715 	add.w	r7, r4, #21
 80071d6:	42ba      	cmp	r2, r7
 80071d8:	bf38      	it	cc
 80071da:	2304      	movcc	r3, #4
 80071dc:	9301      	str	r3, [sp, #4]
 80071de:	9b02      	ldr	r3, [sp, #8]
 80071e0:	9103      	str	r1, [sp, #12]
 80071e2:	428b      	cmp	r3, r1
 80071e4:	d80c      	bhi.n	8007200 <__multiply+0x9c>
 80071e6:	2e00      	cmp	r6, #0
 80071e8:	dd03      	ble.n	80071f2 <__multiply+0x8e>
 80071ea:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80071ee:	2b00      	cmp	r3, #0
 80071f0:	d05a      	beq.n	80072a8 <__multiply+0x144>
 80071f2:	6106      	str	r6, [r0, #16]
 80071f4:	b005      	add	sp, #20
 80071f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80071fa:	f843 2b04 	str.w	r2, [r3], #4
 80071fe:	e7d8      	b.n	80071b2 <__multiply+0x4e>
 8007200:	f8b1 a000 	ldrh.w	sl, [r1]
 8007204:	f1ba 0f00 	cmp.w	sl, #0
 8007208:	d023      	beq.n	8007252 <__multiply+0xee>
 800720a:	46a9      	mov	r9, r5
 800720c:	f04f 0c00 	mov.w	ip, #0
 8007210:	f104 0e14 	add.w	lr, r4, #20
 8007214:	f85e 7b04 	ldr.w	r7, [lr], #4
 8007218:	f8d9 3000 	ldr.w	r3, [r9]
 800721c:	fa1f fb87 	uxth.w	fp, r7
 8007220:	b29b      	uxth	r3, r3
 8007222:	fb0a 330b 	mla	r3, sl, fp, r3
 8007226:	4463      	add	r3, ip
 8007228:	f8d9 c000 	ldr.w	ip, [r9]
 800722c:	0c3f      	lsrs	r7, r7, #16
 800722e:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8007232:	fb0a c707 	mla	r7, sl, r7, ip
 8007236:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 800723a:	b29b      	uxth	r3, r3
 800723c:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8007240:	4572      	cmp	r2, lr
 8007242:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8007246:	f849 3b04 	str.w	r3, [r9], #4
 800724a:	d8e3      	bhi.n	8007214 <__multiply+0xb0>
 800724c:	9b01      	ldr	r3, [sp, #4]
 800724e:	f845 c003 	str.w	ip, [r5, r3]
 8007252:	9b03      	ldr	r3, [sp, #12]
 8007254:	3104      	adds	r1, #4
 8007256:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 800725a:	f1b9 0f00 	cmp.w	r9, #0
 800725e:	d021      	beq.n	80072a4 <__multiply+0x140>
 8007260:	46ae      	mov	lr, r5
 8007262:	f04f 0a00 	mov.w	sl, #0
 8007266:	682b      	ldr	r3, [r5, #0]
 8007268:	f104 0c14 	add.w	ip, r4, #20
 800726c:	f8bc b000 	ldrh.w	fp, [ip]
 8007270:	f8be 7002 	ldrh.w	r7, [lr, #2]
 8007274:	b29b      	uxth	r3, r3
 8007276:	fb09 770b 	mla	r7, r9, fp, r7
 800727a:	4457      	add	r7, sl
 800727c:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8007280:	f84e 3b04 	str.w	r3, [lr], #4
 8007284:	f85c 3b04 	ldr.w	r3, [ip], #4
 8007288:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800728c:	f8be 3000 	ldrh.w	r3, [lr]
 8007290:	4562      	cmp	r2, ip
 8007292:	fb09 330a 	mla	r3, r9, sl, r3
 8007296:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 800729a:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800729e:	d8e5      	bhi.n	800726c <__multiply+0x108>
 80072a0:	9f01      	ldr	r7, [sp, #4]
 80072a2:	51eb      	str	r3, [r5, r7]
 80072a4:	3504      	adds	r5, #4
 80072a6:	e79a      	b.n	80071de <__multiply+0x7a>
 80072a8:	3e01      	subs	r6, #1
 80072aa:	e79c      	b.n	80071e6 <__multiply+0x82>
 80072ac:	08007fc6 	.word	0x08007fc6
 80072b0:	08007fd7 	.word	0x08007fd7

080072b4 <__pow5mult>:
 80072b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80072b8:	4615      	mov	r5, r2
 80072ba:	f012 0203 	ands.w	r2, r2, #3
 80072be:	4607      	mov	r7, r0
 80072c0:	460e      	mov	r6, r1
 80072c2:	d007      	beq.n	80072d4 <__pow5mult+0x20>
 80072c4:	4c25      	ldr	r4, [pc, #148]	@ (800735c <__pow5mult+0xa8>)
 80072c6:	3a01      	subs	r2, #1
 80072c8:	2300      	movs	r3, #0
 80072ca:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80072ce:	f7ff fea1 	bl	8007014 <__multadd>
 80072d2:	4606      	mov	r6, r0
 80072d4:	10ad      	asrs	r5, r5, #2
 80072d6:	d03d      	beq.n	8007354 <__pow5mult+0xa0>
 80072d8:	69fc      	ldr	r4, [r7, #28]
 80072da:	b97c      	cbnz	r4, 80072fc <__pow5mult+0x48>
 80072dc:	2010      	movs	r0, #16
 80072de:	f7fd ffc9 	bl	8005274 <malloc>
 80072e2:	4602      	mov	r2, r0
 80072e4:	61f8      	str	r0, [r7, #28]
 80072e6:	b928      	cbnz	r0, 80072f4 <__pow5mult+0x40>
 80072e8:	f240 11b3 	movw	r1, #435	@ 0x1b3
 80072ec:	4b1c      	ldr	r3, [pc, #112]	@ (8007360 <__pow5mult+0xac>)
 80072ee:	481d      	ldr	r0, [pc, #116]	@ (8007364 <__pow5mult+0xb0>)
 80072f0:	f7fe ff76 	bl	80061e0 <__assert_func>
 80072f4:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80072f8:	6004      	str	r4, [r0, #0]
 80072fa:	60c4      	str	r4, [r0, #12]
 80072fc:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8007300:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8007304:	b94c      	cbnz	r4, 800731a <__pow5mult+0x66>
 8007306:	f240 2171 	movw	r1, #625	@ 0x271
 800730a:	4638      	mov	r0, r7
 800730c:	f7ff ff14 	bl	8007138 <__i2b>
 8007310:	2300      	movs	r3, #0
 8007312:	4604      	mov	r4, r0
 8007314:	f8c8 0008 	str.w	r0, [r8, #8]
 8007318:	6003      	str	r3, [r0, #0]
 800731a:	f04f 0900 	mov.w	r9, #0
 800731e:	07eb      	lsls	r3, r5, #31
 8007320:	d50a      	bpl.n	8007338 <__pow5mult+0x84>
 8007322:	4631      	mov	r1, r6
 8007324:	4622      	mov	r2, r4
 8007326:	4638      	mov	r0, r7
 8007328:	f7ff ff1c 	bl	8007164 <__multiply>
 800732c:	4680      	mov	r8, r0
 800732e:	4631      	mov	r1, r6
 8007330:	4638      	mov	r0, r7
 8007332:	f7ff fe4d 	bl	8006fd0 <_Bfree>
 8007336:	4646      	mov	r6, r8
 8007338:	106d      	asrs	r5, r5, #1
 800733a:	d00b      	beq.n	8007354 <__pow5mult+0xa0>
 800733c:	6820      	ldr	r0, [r4, #0]
 800733e:	b938      	cbnz	r0, 8007350 <__pow5mult+0x9c>
 8007340:	4622      	mov	r2, r4
 8007342:	4621      	mov	r1, r4
 8007344:	4638      	mov	r0, r7
 8007346:	f7ff ff0d 	bl	8007164 <__multiply>
 800734a:	6020      	str	r0, [r4, #0]
 800734c:	f8c0 9000 	str.w	r9, [r0]
 8007350:	4604      	mov	r4, r0
 8007352:	e7e4      	b.n	800731e <__pow5mult+0x6a>
 8007354:	4630      	mov	r0, r6
 8007356:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800735a:	bf00      	nop
 800735c:	08008030 	.word	0x08008030
 8007360:	08007f57 	.word	0x08007f57
 8007364:	08007fd7 	.word	0x08007fd7

08007368 <__lshift>:
 8007368:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800736c:	460c      	mov	r4, r1
 800736e:	4607      	mov	r7, r0
 8007370:	4691      	mov	r9, r2
 8007372:	6923      	ldr	r3, [r4, #16]
 8007374:	6849      	ldr	r1, [r1, #4]
 8007376:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800737a:	68a3      	ldr	r3, [r4, #8]
 800737c:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8007380:	f108 0601 	add.w	r6, r8, #1
 8007384:	42b3      	cmp	r3, r6
 8007386:	db0b      	blt.n	80073a0 <__lshift+0x38>
 8007388:	4638      	mov	r0, r7
 800738a:	f7ff fde1 	bl	8006f50 <_Balloc>
 800738e:	4605      	mov	r5, r0
 8007390:	b948      	cbnz	r0, 80073a6 <__lshift+0x3e>
 8007392:	4602      	mov	r2, r0
 8007394:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8007398:	4b27      	ldr	r3, [pc, #156]	@ (8007438 <__lshift+0xd0>)
 800739a:	4828      	ldr	r0, [pc, #160]	@ (800743c <__lshift+0xd4>)
 800739c:	f7fe ff20 	bl	80061e0 <__assert_func>
 80073a0:	3101      	adds	r1, #1
 80073a2:	005b      	lsls	r3, r3, #1
 80073a4:	e7ee      	b.n	8007384 <__lshift+0x1c>
 80073a6:	2300      	movs	r3, #0
 80073a8:	f100 0114 	add.w	r1, r0, #20
 80073ac:	f100 0210 	add.w	r2, r0, #16
 80073b0:	4618      	mov	r0, r3
 80073b2:	4553      	cmp	r3, sl
 80073b4:	db33      	blt.n	800741e <__lshift+0xb6>
 80073b6:	6920      	ldr	r0, [r4, #16]
 80073b8:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80073bc:	f104 0314 	add.w	r3, r4, #20
 80073c0:	f019 091f 	ands.w	r9, r9, #31
 80073c4:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80073c8:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 80073cc:	d02b      	beq.n	8007426 <__lshift+0xbe>
 80073ce:	468a      	mov	sl, r1
 80073d0:	2200      	movs	r2, #0
 80073d2:	f1c9 0e20 	rsb	lr, r9, #32
 80073d6:	6818      	ldr	r0, [r3, #0]
 80073d8:	fa00 f009 	lsl.w	r0, r0, r9
 80073dc:	4310      	orrs	r0, r2
 80073de:	f84a 0b04 	str.w	r0, [sl], #4
 80073e2:	f853 2b04 	ldr.w	r2, [r3], #4
 80073e6:	459c      	cmp	ip, r3
 80073e8:	fa22 f20e 	lsr.w	r2, r2, lr
 80073ec:	d8f3      	bhi.n	80073d6 <__lshift+0x6e>
 80073ee:	ebac 0304 	sub.w	r3, ip, r4
 80073f2:	3b15      	subs	r3, #21
 80073f4:	f023 0303 	bic.w	r3, r3, #3
 80073f8:	3304      	adds	r3, #4
 80073fa:	f104 0015 	add.w	r0, r4, #21
 80073fe:	4584      	cmp	ip, r0
 8007400:	bf38      	it	cc
 8007402:	2304      	movcc	r3, #4
 8007404:	50ca      	str	r2, [r1, r3]
 8007406:	b10a      	cbz	r2, 800740c <__lshift+0xa4>
 8007408:	f108 0602 	add.w	r6, r8, #2
 800740c:	3e01      	subs	r6, #1
 800740e:	4638      	mov	r0, r7
 8007410:	4621      	mov	r1, r4
 8007412:	612e      	str	r6, [r5, #16]
 8007414:	f7ff fddc 	bl	8006fd0 <_Bfree>
 8007418:	4628      	mov	r0, r5
 800741a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800741e:	f842 0f04 	str.w	r0, [r2, #4]!
 8007422:	3301      	adds	r3, #1
 8007424:	e7c5      	b.n	80073b2 <__lshift+0x4a>
 8007426:	3904      	subs	r1, #4
 8007428:	f853 2b04 	ldr.w	r2, [r3], #4
 800742c:	459c      	cmp	ip, r3
 800742e:	f841 2f04 	str.w	r2, [r1, #4]!
 8007432:	d8f9      	bhi.n	8007428 <__lshift+0xc0>
 8007434:	e7ea      	b.n	800740c <__lshift+0xa4>
 8007436:	bf00      	nop
 8007438:	08007fc6 	.word	0x08007fc6
 800743c:	08007fd7 	.word	0x08007fd7

08007440 <__mcmp>:
 8007440:	4603      	mov	r3, r0
 8007442:	690a      	ldr	r2, [r1, #16]
 8007444:	6900      	ldr	r0, [r0, #16]
 8007446:	b530      	push	{r4, r5, lr}
 8007448:	1a80      	subs	r0, r0, r2
 800744a:	d10e      	bne.n	800746a <__mcmp+0x2a>
 800744c:	3314      	adds	r3, #20
 800744e:	3114      	adds	r1, #20
 8007450:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8007454:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8007458:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 800745c:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8007460:	4295      	cmp	r5, r2
 8007462:	d003      	beq.n	800746c <__mcmp+0x2c>
 8007464:	d205      	bcs.n	8007472 <__mcmp+0x32>
 8007466:	f04f 30ff 	mov.w	r0, #4294967295
 800746a:	bd30      	pop	{r4, r5, pc}
 800746c:	42a3      	cmp	r3, r4
 800746e:	d3f3      	bcc.n	8007458 <__mcmp+0x18>
 8007470:	e7fb      	b.n	800746a <__mcmp+0x2a>
 8007472:	2001      	movs	r0, #1
 8007474:	e7f9      	b.n	800746a <__mcmp+0x2a>
	...

08007478 <__mdiff>:
 8007478:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800747c:	4689      	mov	r9, r1
 800747e:	4606      	mov	r6, r0
 8007480:	4611      	mov	r1, r2
 8007482:	4648      	mov	r0, r9
 8007484:	4614      	mov	r4, r2
 8007486:	f7ff ffdb 	bl	8007440 <__mcmp>
 800748a:	1e05      	subs	r5, r0, #0
 800748c:	d112      	bne.n	80074b4 <__mdiff+0x3c>
 800748e:	4629      	mov	r1, r5
 8007490:	4630      	mov	r0, r6
 8007492:	f7ff fd5d 	bl	8006f50 <_Balloc>
 8007496:	4602      	mov	r2, r0
 8007498:	b928      	cbnz	r0, 80074a6 <__mdiff+0x2e>
 800749a:	f240 2137 	movw	r1, #567	@ 0x237
 800749e:	4b3e      	ldr	r3, [pc, #248]	@ (8007598 <__mdiff+0x120>)
 80074a0:	483e      	ldr	r0, [pc, #248]	@ (800759c <__mdiff+0x124>)
 80074a2:	f7fe fe9d 	bl	80061e0 <__assert_func>
 80074a6:	2301      	movs	r3, #1
 80074a8:	e9c0 3504 	strd	r3, r5, [r0, #16]
 80074ac:	4610      	mov	r0, r2
 80074ae:	b003      	add	sp, #12
 80074b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80074b4:	bfbc      	itt	lt
 80074b6:	464b      	movlt	r3, r9
 80074b8:	46a1      	movlt	r9, r4
 80074ba:	4630      	mov	r0, r6
 80074bc:	f8d9 1004 	ldr.w	r1, [r9, #4]
 80074c0:	bfba      	itte	lt
 80074c2:	461c      	movlt	r4, r3
 80074c4:	2501      	movlt	r5, #1
 80074c6:	2500      	movge	r5, #0
 80074c8:	f7ff fd42 	bl	8006f50 <_Balloc>
 80074cc:	4602      	mov	r2, r0
 80074ce:	b918      	cbnz	r0, 80074d8 <__mdiff+0x60>
 80074d0:	f240 2145 	movw	r1, #581	@ 0x245
 80074d4:	4b30      	ldr	r3, [pc, #192]	@ (8007598 <__mdiff+0x120>)
 80074d6:	e7e3      	b.n	80074a0 <__mdiff+0x28>
 80074d8:	f100 0b14 	add.w	fp, r0, #20
 80074dc:	f8d9 7010 	ldr.w	r7, [r9, #16]
 80074e0:	f109 0310 	add.w	r3, r9, #16
 80074e4:	60c5      	str	r5, [r0, #12]
 80074e6:	f04f 0c00 	mov.w	ip, #0
 80074ea:	f109 0514 	add.w	r5, r9, #20
 80074ee:	46d9      	mov	r9, fp
 80074f0:	6926      	ldr	r6, [r4, #16]
 80074f2:	f104 0e14 	add.w	lr, r4, #20
 80074f6:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 80074fa:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 80074fe:	9301      	str	r3, [sp, #4]
 8007500:	9b01      	ldr	r3, [sp, #4]
 8007502:	f85e 0b04 	ldr.w	r0, [lr], #4
 8007506:	f853 af04 	ldr.w	sl, [r3, #4]!
 800750a:	b281      	uxth	r1, r0
 800750c:	9301      	str	r3, [sp, #4]
 800750e:	fa1f f38a 	uxth.w	r3, sl
 8007512:	1a5b      	subs	r3, r3, r1
 8007514:	0c00      	lsrs	r0, r0, #16
 8007516:	4463      	add	r3, ip
 8007518:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 800751c:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8007520:	b29b      	uxth	r3, r3
 8007522:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8007526:	4576      	cmp	r6, lr
 8007528:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800752c:	f849 3b04 	str.w	r3, [r9], #4
 8007530:	d8e6      	bhi.n	8007500 <__mdiff+0x88>
 8007532:	1b33      	subs	r3, r6, r4
 8007534:	3b15      	subs	r3, #21
 8007536:	f023 0303 	bic.w	r3, r3, #3
 800753a:	3415      	adds	r4, #21
 800753c:	3304      	adds	r3, #4
 800753e:	42a6      	cmp	r6, r4
 8007540:	bf38      	it	cc
 8007542:	2304      	movcc	r3, #4
 8007544:	441d      	add	r5, r3
 8007546:	445b      	add	r3, fp
 8007548:	461e      	mov	r6, r3
 800754a:	462c      	mov	r4, r5
 800754c:	4544      	cmp	r4, r8
 800754e:	d30e      	bcc.n	800756e <__mdiff+0xf6>
 8007550:	f108 0103 	add.w	r1, r8, #3
 8007554:	1b49      	subs	r1, r1, r5
 8007556:	f021 0103 	bic.w	r1, r1, #3
 800755a:	3d03      	subs	r5, #3
 800755c:	45a8      	cmp	r8, r5
 800755e:	bf38      	it	cc
 8007560:	2100      	movcc	r1, #0
 8007562:	440b      	add	r3, r1
 8007564:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8007568:	b199      	cbz	r1, 8007592 <__mdiff+0x11a>
 800756a:	6117      	str	r7, [r2, #16]
 800756c:	e79e      	b.n	80074ac <__mdiff+0x34>
 800756e:	46e6      	mov	lr, ip
 8007570:	f854 1b04 	ldr.w	r1, [r4], #4
 8007574:	fa1f fc81 	uxth.w	ip, r1
 8007578:	44f4      	add	ip, lr
 800757a:	0c08      	lsrs	r0, r1, #16
 800757c:	4471      	add	r1, lr
 800757e:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8007582:	b289      	uxth	r1, r1
 8007584:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8007588:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800758c:	f846 1b04 	str.w	r1, [r6], #4
 8007590:	e7dc      	b.n	800754c <__mdiff+0xd4>
 8007592:	3f01      	subs	r7, #1
 8007594:	e7e6      	b.n	8007564 <__mdiff+0xec>
 8007596:	bf00      	nop
 8007598:	08007fc6 	.word	0x08007fc6
 800759c:	08007fd7 	.word	0x08007fd7

080075a0 <__d2b>:
 80075a0:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
 80075a4:	2101      	movs	r1, #1
 80075a6:	4690      	mov	r8, r2
 80075a8:	4699      	mov	r9, r3
 80075aa:	9e08      	ldr	r6, [sp, #32]
 80075ac:	f7ff fcd0 	bl	8006f50 <_Balloc>
 80075b0:	4604      	mov	r4, r0
 80075b2:	b930      	cbnz	r0, 80075c2 <__d2b+0x22>
 80075b4:	4602      	mov	r2, r0
 80075b6:	f240 310f 	movw	r1, #783	@ 0x30f
 80075ba:	4b23      	ldr	r3, [pc, #140]	@ (8007648 <__d2b+0xa8>)
 80075bc:	4823      	ldr	r0, [pc, #140]	@ (800764c <__d2b+0xac>)
 80075be:	f7fe fe0f 	bl	80061e0 <__assert_func>
 80075c2:	f3c9 550a 	ubfx	r5, r9, #20, #11
 80075c6:	f3c9 0313 	ubfx	r3, r9, #0, #20
 80075ca:	b10d      	cbz	r5, 80075d0 <__d2b+0x30>
 80075cc:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80075d0:	9301      	str	r3, [sp, #4]
 80075d2:	f1b8 0300 	subs.w	r3, r8, #0
 80075d6:	d024      	beq.n	8007622 <__d2b+0x82>
 80075d8:	4668      	mov	r0, sp
 80075da:	9300      	str	r3, [sp, #0]
 80075dc:	f7ff fd7f 	bl	80070de <__lo0bits>
 80075e0:	e9dd 1200 	ldrd	r1, r2, [sp]
 80075e4:	b1d8      	cbz	r0, 800761e <__d2b+0x7e>
 80075e6:	f1c0 0320 	rsb	r3, r0, #32
 80075ea:	fa02 f303 	lsl.w	r3, r2, r3
 80075ee:	430b      	orrs	r3, r1
 80075f0:	40c2      	lsrs	r2, r0
 80075f2:	6163      	str	r3, [r4, #20]
 80075f4:	9201      	str	r2, [sp, #4]
 80075f6:	9b01      	ldr	r3, [sp, #4]
 80075f8:	2b00      	cmp	r3, #0
 80075fa:	bf0c      	ite	eq
 80075fc:	2201      	moveq	r2, #1
 80075fe:	2202      	movne	r2, #2
 8007600:	61a3      	str	r3, [r4, #24]
 8007602:	6122      	str	r2, [r4, #16]
 8007604:	b1ad      	cbz	r5, 8007632 <__d2b+0x92>
 8007606:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 800760a:	4405      	add	r5, r0
 800760c:	6035      	str	r5, [r6, #0]
 800760e:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8007612:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007614:	6018      	str	r0, [r3, #0]
 8007616:	4620      	mov	r0, r4
 8007618:	b002      	add	sp, #8
 800761a:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 800761e:	6161      	str	r1, [r4, #20]
 8007620:	e7e9      	b.n	80075f6 <__d2b+0x56>
 8007622:	a801      	add	r0, sp, #4
 8007624:	f7ff fd5b 	bl	80070de <__lo0bits>
 8007628:	9b01      	ldr	r3, [sp, #4]
 800762a:	2201      	movs	r2, #1
 800762c:	6163      	str	r3, [r4, #20]
 800762e:	3020      	adds	r0, #32
 8007630:	e7e7      	b.n	8007602 <__d2b+0x62>
 8007632:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8007636:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800763a:	6030      	str	r0, [r6, #0]
 800763c:	6918      	ldr	r0, [r3, #16]
 800763e:	f7ff fd2f 	bl	80070a0 <__hi0bits>
 8007642:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8007646:	e7e4      	b.n	8007612 <__d2b+0x72>
 8007648:	08007fc6 	.word	0x08007fc6
 800764c:	08007fd7 	.word	0x08007fd7

08007650 <__sfputc_r>:
 8007650:	6893      	ldr	r3, [r2, #8]
 8007652:	b410      	push	{r4}
 8007654:	3b01      	subs	r3, #1
 8007656:	2b00      	cmp	r3, #0
 8007658:	6093      	str	r3, [r2, #8]
 800765a:	da07      	bge.n	800766c <__sfputc_r+0x1c>
 800765c:	6994      	ldr	r4, [r2, #24]
 800765e:	42a3      	cmp	r3, r4
 8007660:	db01      	blt.n	8007666 <__sfputc_r+0x16>
 8007662:	290a      	cmp	r1, #10
 8007664:	d102      	bne.n	800766c <__sfputc_r+0x1c>
 8007666:	bc10      	pop	{r4}
 8007668:	f7fe bc79 	b.w	8005f5e <__swbuf_r>
 800766c:	6813      	ldr	r3, [r2, #0]
 800766e:	1c58      	adds	r0, r3, #1
 8007670:	6010      	str	r0, [r2, #0]
 8007672:	7019      	strb	r1, [r3, #0]
 8007674:	4608      	mov	r0, r1
 8007676:	bc10      	pop	{r4}
 8007678:	4770      	bx	lr

0800767a <__sfputs_r>:
 800767a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800767c:	4606      	mov	r6, r0
 800767e:	460f      	mov	r7, r1
 8007680:	4614      	mov	r4, r2
 8007682:	18d5      	adds	r5, r2, r3
 8007684:	42ac      	cmp	r4, r5
 8007686:	d101      	bne.n	800768c <__sfputs_r+0x12>
 8007688:	2000      	movs	r0, #0
 800768a:	e007      	b.n	800769c <__sfputs_r+0x22>
 800768c:	463a      	mov	r2, r7
 800768e:	4630      	mov	r0, r6
 8007690:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007694:	f7ff ffdc 	bl	8007650 <__sfputc_r>
 8007698:	1c43      	adds	r3, r0, #1
 800769a:	d1f3      	bne.n	8007684 <__sfputs_r+0xa>
 800769c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080076a0 <_vfiprintf_r>:
 80076a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80076a4:	460d      	mov	r5, r1
 80076a6:	4614      	mov	r4, r2
 80076a8:	4698      	mov	r8, r3
 80076aa:	4606      	mov	r6, r0
 80076ac:	b09d      	sub	sp, #116	@ 0x74
 80076ae:	b118      	cbz	r0, 80076b8 <_vfiprintf_r+0x18>
 80076b0:	6a03      	ldr	r3, [r0, #32]
 80076b2:	b90b      	cbnz	r3, 80076b8 <_vfiprintf_r+0x18>
 80076b4:	f7fe fb7c 	bl	8005db0 <__sinit>
 80076b8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80076ba:	07d9      	lsls	r1, r3, #31
 80076bc:	d405      	bmi.n	80076ca <_vfiprintf_r+0x2a>
 80076be:	89ab      	ldrh	r3, [r5, #12]
 80076c0:	059a      	lsls	r2, r3, #22
 80076c2:	d402      	bmi.n	80076ca <_vfiprintf_r+0x2a>
 80076c4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80076c6:	f7fe fd6c 	bl	80061a2 <__retarget_lock_acquire_recursive>
 80076ca:	89ab      	ldrh	r3, [r5, #12]
 80076cc:	071b      	lsls	r3, r3, #28
 80076ce:	d501      	bpl.n	80076d4 <_vfiprintf_r+0x34>
 80076d0:	692b      	ldr	r3, [r5, #16]
 80076d2:	b99b      	cbnz	r3, 80076fc <_vfiprintf_r+0x5c>
 80076d4:	4629      	mov	r1, r5
 80076d6:	4630      	mov	r0, r6
 80076d8:	f7fe fc80 	bl	8005fdc <__swsetup_r>
 80076dc:	b170      	cbz	r0, 80076fc <_vfiprintf_r+0x5c>
 80076de:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80076e0:	07dc      	lsls	r4, r3, #31
 80076e2:	d504      	bpl.n	80076ee <_vfiprintf_r+0x4e>
 80076e4:	f04f 30ff 	mov.w	r0, #4294967295
 80076e8:	b01d      	add	sp, #116	@ 0x74
 80076ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80076ee:	89ab      	ldrh	r3, [r5, #12]
 80076f0:	0598      	lsls	r0, r3, #22
 80076f2:	d4f7      	bmi.n	80076e4 <_vfiprintf_r+0x44>
 80076f4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80076f6:	f7fe fd55 	bl	80061a4 <__retarget_lock_release_recursive>
 80076fa:	e7f3      	b.n	80076e4 <_vfiprintf_r+0x44>
 80076fc:	2300      	movs	r3, #0
 80076fe:	9309      	str	r3, [sp, #36]	@ 0x24
 8007700:	2320      	movs	r3, #32
 8007702:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8007706:	2330      	movs	r3, #48	@ 0x30
 8007708:	f04f 0901 	mov.w	r9, #1
 800770c:	f8cd 800c 	str.w	r8, [sp, #12]
 8007710:	f8df 81a8 	ldr.w	r8, [pc, #424]	@ 80078bc <_vfiprintf_r+0x21c>
 8007714:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8007718:	4623      	mov	r3, r4
 800771a:	469a      	mov	sl, r3
 800771c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8007720:	b10a      	cbz	r2, 8007726 <_vfiprintf_r+0x86>
 8007722:	2a25      	cmp	r2, #37	@ 0x25
 8007724:	d1f9      	bne.n	800771a <_vfiprintf_r+0x7a>
 8007726:	ebba 0b04 	subs.w	fp, sl, r4
 800772a:	d00b      	beq.n	8007744 <_vfiprintf_r+0xa4>
 800772c:	465b      	mov	r3, fp
 800772e:	4622      	mov	r2, r4
 8007730:	4629      	mov	r1, r5
 8007732:	4630      	mov	r0, r6
 8007734:	f7ff ffa1 	bl	800767a <__sfputs_r>
 8007738:	3001      	adds	r0, #1
 800773a:	f000 80a7 	beq.w	800788c <_vfiprintf_r+0x1ec>
 800773e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8007740:	445a      	add	r2, fp
 8007742:	9209      	str	r2, [sp, #36]	@ 0x24
 8007744:	f89a 3000 	ldrb.w	r3, [sl]
 8007748:	2b00      	cmp	r3, #0
 800774a:	f000 809f 	beq.w	800788c <_vfiprintf_r+0x1ec>
 800774e:	2300      	movs	r3, #0
 8007750:	f04f 32ff 	mov.w	r2, #4294967295
 8007754:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8007758:	f10a 0a01 	add.w	sl, sl, #1
 800775c:	9304      	str	r3, [sp, #16]
 800775e:	9307      	str	r3, [sp, #28]
 8007760:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8007764:	931a      	str	r3, [sp, #104]	@ 0x68
 8007766:	4654      	mov	r4, sl
 8007768:	2205      	movs	r2, #5
 800776a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800776e:	4853      	ldr	r0, [pc, #332]	@ (80078bc <_vfiprintf_r+0x21c>)
 8007770:	f7fe fd19 	bl	80061a6 <memchr>
 8007774:	9a04      	ldr	r2, [sp, #16]
 8007776:	b9d8      	cbnz	r0, 80077b0 <_vfiprintf_r+0x110>
 8007778:	06d1      	lsls	r1, r2, #27
 800777a:	bf44      	itt	mi
 800777c:	2320      	movmi	r3, #32
 800777e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8007782:	0713      	lsls	r3, r2, #28
 8007784:	bf44      	itt	mi
 8007786:	232b      	movmi	r3, #43	@ 0x2b
 8007788:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800778c:	f89a 3000 	ldrb.w	r3, [sl]
 8007790:	2b2a      	cmp	r3, #42	@ 0x2a
 8007792:	d015      	beq.n	80077c0 <_vfiprintf_r+0x120>
 8007794:	4654      	mov	r4, sl
 8007796:	2000      	movs	r0, #0
 8007798:	f04f 0c0a 	mov.w	ip, #10
 800779c:	9a07      	ldr	r2, [sp, #28]
 800779e:	4621      	mov	r1, r4
 80077a0:	f811 3b01 	ldrb.w	r3, [r1], #1
 80077a4:	3b30      	subs	r3, #48	@ 0x30
 80077a6:	2b09      	cmp	r3, #9
 80077a8:	d94b      	bls.n	8007842 <_vfiprintf_r+0x1a2>
 80077aa:	b1b0      	cbz	r0, 80077da <_vfiprintf_r+0x13a>
 80077ac:	9207      	str	r2, [sp, #28]
 80077ae:	e014      	b.n	80077da <_vfiprintf_r+0x13a>
 80077b0:	eba0 0308 	sub.w	r3, r0, r8
 80077b4:	fa09 f303 	lsl.w	r3, r9, r3
 80077b8:	4313      	orrs	r3, r2
 80077ba:	46a2      	mov	sl, r4
 80077bc:	9304      	str	r3, [sp, #16]
 80077be:	e7d2      	b.n	8007766 <_vfiprintf_r+0xc6>
 80077c0:	9b03      	ldr	r3, [sp, #12]
 80077c2:	1d19      	adds	r1, r3, #4
 80077c4:	681b      	ldr	r3, [r3, #0]
 80077c6:	9103      	str	r1, [sp, #12]
 80077c8:	2b00      	cmp	r3, #0
 80077ca:	bfbb      	ittet	lt
 80077cc:	425b      	neglt	r3, r3
 80077ce:	f042 0202 	orrlt.w	r2, r2, #2
 80077d2:	9307      	strge	r3, [sp, #28]
 80077d4:	9307      	strlt	r3, [sp, #28]
 80077d6:	bfb8      	it	lt
 80077d8:	9204      	strlt	r2, [sp, #16]
 80077da:	7823      	ldrb	r3, [r4, #0]
 80077dc:	2b2e      	cmp	r3, #46	@ 0x2e
 80077de:	d10a      	bne.n	80077f6 <_vfiprintf_r+0x156>
 80077e0:	7863      	ldrb	r3, [r4, #1]
 80077e2:	2b2a      	cmp	r3, #42	@ 0x2a
 80077e4:	d132      	bne.n	800784c <_vfiprintf_r+0x1ac>
 80077e6:	9b03      	ldr	r3, [sp, #12]
 80077e8:	3402      	adds	r4, #2
 80077ea:	1d1a      	adds	r2, r3, #4
 80077ec:	681b      	ldr	r3, [r3, #0]
 80077ee:	9203      	str	r2, [sp, #12]
 80077f0:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80077f4:	9305      	str	r3, [sp, #20]
 80077f6:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 80078c0 <_vfiprintf_r+0x220>
 80077fa:	2203      	movs	r2, #3
 80077fc:	4650      	mov	r0, sl
 80077fe:	7821      	ldrb	r1, [r4, #0]
 8007800:	f7fe fcd1 	bl	80061a6 <memchr>
 8007804:	b138      	cbz	r0, 8007816 <_vfiprintf_r+0x176>
 8007806:	2240      	movs	r2, #64	@ 0x40
 8007808:	9b04      	ldr	r3, [sp, #16]
 800780a:	eba0 000a 	sub.w	r0, r0, sl
 800780e:	4082      	lsls	r2, r0
 8007810:	4313      	orrs	r3, r2
 8007812:	3401      	adds	r4, #1
 8007814:	9304      	str	r3, [sp, #16]
 8007816:	f814 1b01 	ldrb.w	r1, [r4], #1
 800781a:	2206      	movs	r2, #6
 800781c:	4829      	ldr	r0, [pc, #164]	@ (80078c4 <_vfiprintf_r+0x224>)
 800781e:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8007822:	f7fe fcc0 	bl	80061a6 <memchr>
 8007826:	2800      	cmp	r0, #0
 8007828:	d03f      	beq.n	80078aa <_vfiprintf_r+0x20a>
 800782a:	4b27      	ldr	r3, [pc, #156]	@ (80078c8 <_vfiprintf_r+0x228>)
 800782c:	bb1b      	cbnz	r3, 8007876 <_vfiprintf_r+0x1d6>
 800782e:	9b03      	ldr	r3, [sp, #12]
 8007830:	3307      	adds	r3, #7
 8007832:	f023 0307 	bic.w	r3, r3, #7
 8007836:	3308      	adds	r3, #8
 8007838:	9303      	str	r3, [sp, #12]
 800783a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800783c:	443b      	add	r3, r7
 800783e:	9309      	str	r3, [sp, #36]	@ 0x24
 8007840:	e76a      	b.n	8007718 <_vfiprintf_r+0x78>
 8007842:	460c      	mov	r4, r1
 8007844:	2001      	movs	r0, #1
 8007846:	fb0c 3202 	mla	r2, ip, r2, r3
 800784a:	e7a8      	b.n	800779e <_vfiprintf_r+0xfe>
 800784c:	2300      	movs	r3, #0
 800784e:	f04f 0c0a 	mov.w	ip, #10
 8007852:	4619      	mov	r1, r3
 8007854:	3401      	adds	r4, #1
 8007856:	9305      	str	r3, [sp, #20]
 8007858:	4620      	mov	r0, r4
 800785a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800785e:	3a30      	subs	r2, #48	@ 0x30
 8007860:	2a09      	cmp	r2, #9
 8007862:	d903      	bls.n	800786c <_vfiprintf_r+0x1cc>
 8007864:	2b00      	cmp	r3, #0
 8007866:	d0c6      	beq.n	80077f6 <_vfiprintf_r+0x156>
 8007868:	9105      	str	r1, [sp, #20]
 800786a:	e7c4      	b.n	80077f6 <_vfiprintf_r+0x156>
 800786c:	4604      	mov	r4, r0
 800786e:	2301      	movs	r3, #1
 8007870:	fb0c 2101 	mla	r1, ip, r1, r2
 8007874:	e7f0      	b.n	8007858 <_vfiprintf_r+0x1b8>
 8007876:	ab03      	add	r3, sp, #12
 8007878:	9300      	str	r3, [sp, #0]
 800787a:	462a      	mov	r2, r5
 800787c:	4630      	mov	r0, r6
 800787e:	4b13      	ldr	r3, [pc, #76]	@ (80078cc <_vfiprintf_r+0x22c>)
 8007880:	a904      	add	r1, sp, #16
 8007882:	f7fd fe4b 	bl	800551c <_printf_float>
 8007886:	4607      	mov	r7, r0
 8007888:	1c78      	adds	r0, r7, #1
 800788a:	d1d6      	bne.n	800783a <_vfiprintf_r+0x19a>
 800788c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800788e:	07d9      	lsls	r1, r3, #31
 8007890:	d405      	bmi.n	800789e <_vfiprintf_r+0x1fe>
 8007892:	89ab      	ldrh	r3, [r5, #12]
 8007894:	059a      	lsls	r2, r3, #22
 8007896:	d402      	bmi.n	800789e <_vfiprintf_r+0x1fe>
 8007898:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800789a:	f7fe fc83 	bl	80061a4 <__retarget_lock_release_recursive>
 800789e:	89ab      	ldrh	r3, [r5, #12]
 80078a0:	065b      	lsls	r3, r3, #25
 80078a2:	f53f af1f 	bmi.w	80076e4 <_vfiprintf_r+0x44>
 80078a6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80078a8:	e71e      	b.n	80076e8 <_vfiprintf_r+0x48>
 80078aa:	ab03      	add	r3, sp, #12
 80078ac:	9300      	str	r3, [sp, #0]
 80078ae:	462a      	mov	r2, r5
 80078b0:	4630      	mov	r0, r6
 80078b2:	4b06      	ldr	r3, [pc, #24]	@ (80078cc <_vfiprintf_r+0x22c>)
 80078b4:	a904      	add	r1, sp, #16
 80078b6:	f7fe f8cf 	bl	8005a58 <_printf_i>
 80078ba:	e7e4      	b.n	8007886 <_vfiprintf_r+0x1e6>
 80078bc:	08008130 	.word	0x08008130
 80078c0:	08008136 	.word	0x08008136
 80078c4:	0800813a 	.word	0x0800813a
 80078c8:	0800551d 	.word	0x0800551d
 80078cc:	0800767b 	.word	0x0800767b

080078d0 <__sflush_r>:
 80078d0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80078d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80078d6:	0716      	lsls	r6, r2, #28
 80078d8:	4605      	mov	r5, r0
 80078da:	460c      	mov	r4, r1
 80078dc:	d454      	bmi.n	8007988 <__sflush_r+0xb8>
 80078de:	684b      	ldr	r3, [r1, #4]
 80078e0:	2b00      	cmp	r3, #0
 80078e2:	dc02      	bgt.n	80078ea <__sflush_r+0x1a>
 80078e4:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80078e6:	2b00      	cmp	r3, #0
 80078e8:	dd48      	ble.n	800797c <__sflush_r+0xac>
 80078ea:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80078ec:	2e00      	cmp	r6, #0
 80078ee:	d045      	beq.n	800797c <__sflush_r+0xac>
 80078f0:	2300      	movs	r3, #0
 80078f2:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80078f6:	682f      	ldr	r7, [r5, #0]
 80078f8:	6a21      	ldr	r1, [r4, #32]
 80078fa:	602b      	str	r3, [r5, #0]
 80078fc:	d030      	beq.n	8007960 <__sflush_r+0x90>
 80078fe:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8007900:	89a3      	ldrh	r3, [r4, #12]
 8007902:	0759      	lsls	r1, r3, #29
 8007904:	d505      	bpl.n	8007912 <__sflush_r+0x42>
 8007906:	6863      	ldr	r3, [r4, #4]
 8007908:	1ad2      	subs	r2, r2, r3
 800790a:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800790c:	b10b      	cbz	r3, 8007912 <__sflush_r+0x42>
 800790e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8007910:	1ad2      	subs	r2, r2, r3
 8007912:	2300      	movs	r3, #0
 8007914:	4628      	mov	r0, r5
 8007916:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8007918:	6a21      	ldr	r1, [r4, #32]
 800791a:	47b0      	blx	r6
 800791c:	1c43      	adds	r3, r0, #1
 800791e:	89a3      	ldrh	r3, [r4, #12]
 8007920:	d106      	bne.n	8007930 <__sflush_r+0x60>
 8007922:	6829      	ldr	r1, [r5, #0]
 8007924:	291d      	cmp	r1, #29
 8007926:	d82b      	bhi.n	8007980 <__sflush_r+0xb0>
 8007928:	4a28      	ldr	r2, [pc, #160]	@ (80079cc <__sflush_r+0xfc>)
 800792a:	410a      	asrs	r2, r1
 800792c:	07d6      	lsls	r6, r2, #31
 800792e:	d427      	bmi.n	8007980 <__sflush_r+0xb0>
 8007930:	2200      	movs	r2, #0
 8007932:	6062      	str	r2, [r4, #4]
 8007934:	6922      	ldr	r2, [r4, #16]
 8007936:	04d9      	lsls	r1, r3, #19
 8007938:	6022      	str	r2, [r4, #0]
 800793a:	d504      	bpl.n	8007946 <__sflush_r+0x76>
 800793c:	1c42      	adds	r2, r0, #1
 800793e:	d101      	bne.n	8007944 <__sflush_r+0x74>
 8007940:	682b      	ldr	r3, [r5, #0]
 8007942:	b903      	cbnz	r3, 8007946 <__sflush_r+0x76>
 8007944:	6560      	str	r0, [r4, #84]	@ 0x54
 8007946:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8007948:	602f      	str	r7, [r5, #0]
 800794a:	b1b9      	cbz	r1, 800797c <__sflush_r+0xac>
 800794c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8007950:	4299      	cmp	r1, r3
 8007952:	d002      	beq.n	800795a <__sflush_r+0x8a>
 8007954:	4628      	mov	r0, r5
 8007956:	f7ff fab3 	bl	8006ec0 <_free_r>
 800795a:	2300      	movs	r3, #0
 800795c:	6363      	str	r3, [r4, #52]	@ 0x34
 800795e:	e00d      	b.n	800797c <__sflush_r+0xac>
 8007960:	2301      	movs	r3, #1
 8007962:	4628      	mov	r0, r5
 8007964:	47b0      	blx	r6
 8007966:	4602      	mov	r2, r0
 8007968:	1c50      	adds	r0, r2, #1
 800796a:	d1c9      	bne.n	8007900 <__sflush_r+0x30>
 800796c:	682b      	ldr	r3, [r5, #0]
 800796e:	2b00      	cmp	r3, #0
 8007970:	d0c6      	beq.n	8007900 <__sflush_r+0x30>
 8007972:	2b1d      	cmp	r3, #29
 8007974:	d001      	beq.n	800797a <__sflush_r+0xaa>
 8007976:	2b16      	cmp	r3, #22
 8007978:	d11d      	bne.n	80079b6 <__sflush_r+0xe6>
 800797a:	602f      	str	r7, [r5, #0]
 800797c:	2000      	movs	r0, #0
 800797e:	e021      	b.n	80079c4 <__sflush_r+0xf4>
 8007980:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8007984:	b21b      	sxth	r3, r3
 8007986:	e01a      	b.n	80079be <__sflush_r+0xee>
 8007988:	690f      	ldr	r7, [r1, #16]
 800798a:	2f00      	cmp	r7, #0
 800798c:	d0f6      	beq.n	800797c <__sflush_r+0xac>
 800798e:	0793      	lsls	r3, r2, #30
 8007990:	bf18      	it	ne
 8007992:	2300      	movne	r3, #0
 8007994:	680e      	ldr	r6, [r1, #0]
 8007996:	bf08      	it	eq
 8007998:	694b      	ldreq	r3, [r1, #20]
 800799a:	1bf6      	subs	r6, r6, r7
 800799c:	600f      	str	r7, [r1, #0]
 800799e:	608b      	str	r3, [r1, #8]
 80079a0:	2e00      	cmp	r6, #0
 80079a2:	ddeb      	ble.n	800797c <__sflush_r+0xac>
 80079a4:	4633      	mov	r3, r6
 80079a6:	463a      	mov	r2, r7
 80079a8:	4628      	mov	r0, r5
 80079aa:	6a21      	ldr	r1, [r4, #32]
 80079ac:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 80079b0:	47e0      	blx	ip
 80079b2:	2800      	cmp	r0, #0
 80079b4:	dc07      	bgt.n	80079c6 <__sflush_r+0xf6>
 80079b6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80079ba:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80079be:	f04f 30ff 	mov.w	r0, #4294967295
 80079c2:	81a3      	strh	r3, [r4, #12]
 80079c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80079c6:	4407      	add	r7, r0
 80079c8:	1a36      	subs	r6, r6, r0
 80079ca:	e7e9      	b.n	80079a0 <__sflush_r+0xd0>
 80079cc:	dfbffffe 	.word	0xdfbffffe

080079d0 <_fflush_r>:
 80079d0:	b538      	push	{r3, r4, r5, lr}
 80079d2:	690b      	ldr	r3, [r1, #16]
 80079d4:	4605      	mov	r5, r0
 80079d6:	460c      	mov	r4, r1
 80079d8:	b913      	cbnz	r3, 80079e0 <_fflush_r+0x10>
 80079da:	2500      	movs	r5, #0
 80079dc:	4628      	mov	r0, r5
 80079de:	bd38      	pop	{r3, r4, r5, pc}
 80079e0:	b118      	cbz	r0, 80079ea <_fflush_r+0x1a>
 80079e2:	6a03      	ldr	r3, [r0, #32]
 80079e4:	b90b      	cbnz	r3, 80079ea <_fflush_r+0x1a>
 80079e6:	f7fe f9e3 	bl	8005db0 <__sinit>
 80079ea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80079ee:	2b00      	cmp	r3, #0
 80079f0:	d0f3      	beq.n	80079da <_fflush_r+0xa>
 80079f2:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80079f4:	07d0      	lsls	r0, r2, #31
 80079f6:	d404      	bmi.n	8007a02 <_fflush_r+0x32>
 80079f8:	0599      	lsls	r1, r3, #22
 80079fa:	d402      	bmi.n	8007a02 <_fflush_r+0x32>
 80079fc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80079fe:	f7fe fbd0 	bl	80061a2 <__retarget_lock_acquire_recursive>
 8007a02:	4628      	mov	r0, r5
 8007a04:	4621      	mov	r1, r4
 8007a06:	f7ff ff63 	bl	80078d0 <__sflush_r>
 8007a0a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8007a0c:	4605      	mov	r5, r0
 8007a0e:	07da      	lsls	r2, r3, #31
 8007a10:	d4e4      	bmi.n	80079dc <_fflush_r+0xc>
 8007a12:	89a3      	ldrh	r3, [r4, #12]
 8007a14:	059b      	lsls	r3, r3, #22
 8007a16:	d4e1      	bmi.n	80079dc <_fflush_r+0xc>
 8007a18:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8007a1a:	f7fe fbc3 	bl	80061a4 <__retarget_lock_release_recursive>
 8007a1e:	e7dd      	b.n	80079dc <_fflush_r+0xc>

08007a20 <fiprintf>:
 8007a20:	b40e      	push	{r1, r2, r3}
 8007a22:	b503      	push	{r0, r1, lr}
 8007a24:	4601      	mov	r1, r0
 8007a26:	ab03      	add	r3, sp, #12
 8007a28:	4805      	ldr	r0, [pc, #20]	@ (8007a40 <fiprintf+0x20>)
 8007a2a:	f853 2b04 	ldr.w	r2, [r3], #4
 8007a2e:	6800      	ldr	r0, [r0, #0]
 8007a30:	9301      	str	r3, [sp, #4]
 8007a32:	f7ff fe35 	bl	80076a0 <_vfiprintf_r>
 8007a36:	b002      	add	sp, #8
 8007a38:	f85d eb04 	ldr.w	lr, [sp], #4
 8007a3c:	b003      	add	sp, #12
 8007a3e:	4770      	bx	lr
 8007a40:	20000018 	.word	0x20000018

08007a44 <__swhatbuf_r>:
 8007a44:	b570      	push	{r4, r5, r6, lr}
 8007a46:	460c      	mov	r4, r1
 8007a48:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007a4c:	4615      	mov	r5, r2
 8007a4e:	2900      	cmp	r1, #0
 8007a50:	461e      	mov	r6, r3
 8007a52:	b096      	sub	sp, #88	@ 0x58
 8007a54:	da0c      	bge.n	8007a70 <__swhatbuf_r+0x2c>
 8007a56:	89a3      	ldrh	r3, [r4, #12]
 8007a58:	2100      	movs	r1, #0
 8007a5a:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8007a5e:	bf14      	ite	ne
 8007a60:	2340      	movne	r3, #64	@ 0x40
 8007a62:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8007a66:	2000      	movs	r0, #0
 8007a68:	6031      	str	r1, [r6, #0]
 8007a6a:	602b      	str	r3, [r5, #0]
 8007a6c:	b016      	add	sp, #88	@ 0x58
 8007a6e:	bd70      	pop	{r4, r5, r6, pc}
 8007a70:	466a      	mov	r2, sp
 8007a72:	f000 f849 	bl	8007b08 <_fstat_r>
 8007a76:	2800      	cmp	r0, #0
 8007a78:	dbed      	blt.n	8007a56 <__swhatbuf_r+0x12>
 8007a7a:	9901      	ldr	r1, [sp, #4]
 8007a7c:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8007a80:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8007a84:	4259      	negs	r1, r3
 8007a86:	4159      	adcs	r1, r3
 8007a88:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8007a8c:	e7eb      	b.n	8007a66 <__swhatbuf_r+0x22>

08007a8e <__smakebuf_r>:
 8007a8e:	898b      	ldrh	r3, [r1, #12]
 8007a90:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007a92:	079d      	lsls	r5, r3, #30
 8007a94:	4606      	mov	r6, r0
 8007a96:	460c      	mov	r4, r1
 8007a98:	d507      	bpl.n	8007aaa <__smakebuf_r+0x1c>
 8007a9a:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8007a9e:	6023      	str	r3, [r4, #0]
 8007aa0:	6123      	str	r3, [r4, #16]
 8007aa2:	2301      	movs	r3, #1
 8007aa4:	6163      	str	r3, [r4, #20]
 8007aa6:	b003      	add	sp, #12
 8007aa8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007aaa:	466a      	mov	r2, sp
 8007aac:	ab01      	add	r3, sp, #4
 8007aae:	f7ff ffc9 	bl	8007a44 <__swhatbuf_r>
 8007ab2:	9f00      	ldr	r7, [sp, #0]
 8007ab4:	4605      	mov	r5, r0
 8007ab6:	4639      	mov	r1, r7
 8007ab8:	4630      	mov	r0, r6
 8007aba:	f7fd fc05 	bl	80052c8 <_malloc_r>
 8007abe:	b948      	cbnz	r0, 8007ad4 <__smakebuf_r+0x46>
 8007ac0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8007ac4:	059a      	lsls	r2, r3, #22
 8007ac6:	d4ee      	bmi.n	8007aa6 <__smakebuf_r+0x18>
 8007ac8:	f023 0303 	bic.w	r3, r3, #3
 8007acc:	f043 0302 	orr.w	r3, r3, #2
 8007ad0:	81a3      	strh	r3, [r4, #12]
 8007ad2:	e7e2      	b.n	8007a9a <__smakebuf_r+0xc>
 8007ad4:	89a3      	ldrh	r3, [r4, #12]
 8007ad6:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8007ada:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8007ade:	81a3      	strh	r3, [r4, #12]
 8007ae0:	9b01      	ldr	r3, [sp, #4]
 8007ae2:	6020      	str	r0, [r4, #0]
 8007ae4:	b15b      	cbz	r3, 8007afe <__smakebuf_r+0x70>
 8007ae6:	4630      	mov	r0, r6
 8007ae8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8007aec:	f000 f81e 	bl	8007b2c <_isatty_r>
 8007af0:	b128      	cbz	r0, 8007afe <__smakebuf_r+0x70>
 8007af2:	89a3      	ldrh	r3, [r4, #12]
 8007af4:	f023 0303 	bic.w	r3, r3, #3
 8007af8:	f043 0301 	orr.w	r3, r3, #1
 8007afc:	81a3      	strh	r3, [r4, #12]
 8007afe:	89a3      	ldrh	r3, [r4, #12]
 8007b00:	431d      	orrs	r5, r3
 8007b02:	81a5      	strh	r5, [r4, #12]
 8007b04:	e7cf      	b.n	8007aa6 <__smakebuf_r+0x18>
	...

08007b08 <_fstat_r>:
 8007b08:	b538      	push	{r3, r4, r5, lr}
 8007b0a:	2300      	movs	r3, #0
 8007b0c:	4d06      	ldr	r5, [pc, #24]	@ (8007b28 <_fstat_r+0x20>)
 8007b0e:	4604      	mov	r4, r0
 8007b10:	4608      	mov	r0, r1
 8007b12:	4611      	mov	r1, r2
 8007b14:	602b      	str	r3, [r5, #0]
 8007b16:	f7f9 ff8e 	bl	8001a36 <_fstat>
 8007b1a:	1c43      	adds	r3, r0, #1
 8007b1c:	d102      	bne.n	8007b24 <_fstat_r+0x1c>
 8007b1e:	682b      	ldr	r3, [r5, #0]
 8007b20:	b103      	cbz	r3, 8007b24 <_fstat_r+0x1c>
 8007b22:	6023      	str	r3, [r4, #0]
 8007b24:	bd38      	pop	{r3, r4, r5, pc}
 8007b26:	bf00      	nop
 8007b28:	20000784 	.word	0x20000784

08007b2c <_isatty_r>:
 8007b2c:	b538      	push	{r3, r4, r5, lr}
 8007b2e:	2300      	movs	r3, #0
 8007b30:	4d05      	ldr	r5, [pc, #20]	@ (8007b48 <_isatty_r+0x1c>)
 8007b32:	4604      	mov	r4, r0
 8007b34:	4608      	mov	r0, r1
 8007b36:	602b      	str	r3, [r5, #0]
 8007b38:	f7f9 ff82 	bl	8001a40 <_isatty>
 8007b3c:	1c43      	adds	r3, r0, #1
 8007b3e:	d102      	bne.n	8007b46 <_isatty_r+0x1a>
 8007b40:	682b      	ldr	r3, [r5, #0]
 8007b42:	b103      	cbz	r3, 8007b46 <_isatty_r+0x1a>
 8007b44:	6023      	str	r3, [r4, #0]
 8007b46:	bd38      	pop	{r3, r4, r5, pc}
 8007b48:	20000784 	.word	0x20000784

08007b4c <abort>:
 8007b4c:	2006      	movs	r0, #6
 8007b4e:	b508      	push	{r3, lr}
 8007b50:	f000 f85e 	bl	8007c10 <raise>
 8007b54:	2001      	movs	r0, #1
 8007b56:	f7f9 ff55 	bl	8001a04 <_exit>

08007b5a <_calloc_r>:
 8007b5a:	b570      	push	{r4, r5, r6, lr}
 8007b5c:	fba1 5402 	umull	r5, r4, r1, r2
 8007b60:	b93c      	cbnz	r4, 8007b72 <_calloc_r+0x18>
 8007b62:	4629      	mov	r1, r5
 8007b64:	f7fd fbb0 	bl	80052c8 <_malloc_r>
 8007b68:	4606      	mov	r6, r0
 8007b6a:	b928      	cbnz	r0, 8007b78 <_calloc_r+0x1e>
 8007b6c:	2600      	movs	r6, #0
 8007b6e:	4630      	mov	r0, r6
 8007b70:	bd70      	pop	{r4, r5, r6, pc}
 8007b72:	220c      	movs	r2, #12
 8007b74:	6002      	str	r2, [r0, #0]
 8007b76:	e7f9      	b.n	8007b6c <_calloc_r+0x12>
 8007b78:	462a      	mov	r2, r5
 8007b7a:	4621      	mov	r1, r4
 8007b7c:	f7fe fa84 	bl	8006088 <memset>
 8007b80:	e7f5      	b.n	8007b6e <_calloc_r+0x14>

08007b82 <__ascii_mbtowc>:
 8007b82:	b082      	sub	sp, #8
 8007b84:	b901      	cbnz	r1, 8007b88 <__ascii_mbtowc+0x6>
 8007b86:	a901      	add	r1, sp, #4
 8007b88:	b142      	cbz	r2, 8007b9c <__ascii_mbtowc+0x1a>
 8007b8a:	b14b      	cbz	r3, 8007ba0 <__ascii_mbtowc+0x1e>
 8007b8c:	7813      	ldrb	r3, [r2, #0]
 8007b8e:	600b      	str	r3, [r1, #0]
 8007b90:	7812      	ldrb	r2, [r2, #0]
 8007b92:	1e10      	subs	r0, r2, #0
 8007b94:	bf18      	it	ne
 8007b96:	2001      	movne	r0, #1
 8007b98:	b002      	add	sp, #8
 8007b9a:	4770      	bx	lr
 8007b9c:	4610      	mov	r0, r2
 8007b9e:	e7fb      	b.n	8007b98 <__ascii_mbtowc+0x16>
 8007ba0:	f06f 0001 	mvn.w	r0, #1
 8007ba4:	e7f8      	b.n	8007b98 <__ascii_mbtowc+0x16>

08007ba6 <__ascii_wctomb>:
 8007ba6:	4603      	mov	r3, r0
 8007ba8:	4608      	mov	r0, r1
 8007baa:	b141      	cbz	r1, 8007bbe <__ascii_wctomb+0x18>
 8007bac:	2aff      	cmp	r2, #255	@ 0xff
 8007bae:	d904      	bls.n	8007bba <__ascii_wctomb+0x14>
 8007bb0:	228a      	movs	r2, #138	@ 0x8a
 8007bb2:	f04f 30ff 	mov.w	r0, #4294967295
 8007bb6:	601a      	str	r2, [r3, #0]
 8007bb8:	4770      	bx	lr
 8007bba:	2001      	movs	r0, #1
 8007bbc:	700a      	strb	r2, [r1, #0]
 8007bbe:	4770      	bx	lr

08007bc0 <_raise_r>:
 8007bc0:	291f      	cmp	r1, #31
 8007bc2:	b538      	push	{r3, r4, r5, lr}
 8007bc4:	4605      	mov	r5, r0
 8007bc6:	460c      	mov	r4, r1
 8007bc8:	d904      	bls.n	8007bd4 <_raise_r+0x14>
 8007bca:	2316      	movs	r3, #22
 8007bcc:	6003      	str	r3, [r0, #0]
 8007bce:	f04f 30ff 	mov.w	r0, #4294967295
 8007bd2:	bd38      	pop	{r3, r4, r5, pc}
 8007bd4:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8007bd6:	b112      	cbz	r2, 8007bde <_raise_r+0x1e>
 8007bd8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8007bdc:	b94b      	cbnz	r3, 8007bf2 <_raise_r+0x32>
 8007bde:	4628      	mov	r0, r5
 8007be0:	f000 f830 	bl	8007c44 <_getpid_r>
 8007be4:	4622      	mov	r2, r4
 8007be6:	4601      	mov	r1, r0
 8007be8:	4628      	mov	r0, r5
 8007bea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007bee:	f000 b817 	b.w	8007c20 <_kill_r>
 8007bf2:	2b01      	cmp	r3, #1
 8007bf4:	d00a      	beq.n	8007c0c <_raise_r+0x4c>
 8007bf6:	1c59      	adds	r1, r3, #1
 8007bf8:	d103      	bne.n	8007c02 <_raise_r+0x42>
 8007bfa:	2316      	movs	r3, #22
 8007bfc:	6003      	str	r3, [r0, #0]
 8007bfe:	2001      	movs	r0, #1
 8007c00:	e7e7      	b.n	8007bd2 <_raise_r+0x12>
 8007c02:	2100      	movs	r1, #0
 8007c04:	4620      	mov	r0, r4
 8007c06:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8007c0a:	4798      	blx	r3
 8007c0c:	2000      	movs	r0, #0
 8007c0e:	e7e0      	b.n	8007bd2 <_raise_r+0x12>

08007c10 <raise>:
 8007c10:	4b02      	ldr	r3, [pc, #8]	@ (8007c1c <raise+0xc>)
 8007c12:	4601      	mov	r1, r0
 8007c14:	6818      	ldr	r0, [r3, #0]
 8007c16:	f7ff bfd3 	b.w	8007bc0 <_raise_r>
 8007c1a:	bf00      	nop
 8007c1c:	20000018 	.word	0x20000018

08007c20 <_kill_r>:
 8007c20:	b538      	push	{r3, r4, r5, lr}
 8007c22:	2300      	movs	r3, #0
 8007c24:	4d06      	ldr	r5, [pc, #24]	@ (8007c40 <_kill_r+0x20>)
 8007c26:	4604      	mov	r4, r0
 8007c28:	4608      	mov	r0, r1
 8007c2a:	4611      	mov	r1, r2
 8007c2c:	602b      	str	r3, [r5, #0]
 8007c2e:	f7f9 fee1 	bl	80019f4 <_kill>
 8007c32:	1c43      	adds	r3, r0, #1
 8007c34:	d102      	bne.n	8007c3c <_kill_r+0x1c>
 8007c36:	682b      	ldr	r3, [r5, #0]
 8007c38:	b103      	cbz	r3, 8007c3c <_kill_r+0x1c>
 8007c3a:	6023      	str	r3, [r4, #0]
 8007c3c:	bd38      	pop	{r3, r4, r5, pc}
 8007c3e:	bf00      	nop
 8007c40:	20000784 	.word	0x20000784

08007c44 <_getpid_r>:
 8007c44:	f7f9 bed4 	b.w	80019f0 <_getpid>

08007c48 <_init>:
 8007c48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007c4a:	bf00      	nop
 8007c4c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007c4e:	bc08      	pop	{r3}
 8007c50:	469e      	mov	lr, r3
 8007c52:	4770      	bx	lr

08007c54 <_fini>:
 8007c54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007c56:	bf00      	nop
 8007c58:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007c5a:	bc08      	pop	{r3}
 8007c5c:	469e      	mov	lr, r3
 8007c5e:	4770      	bx	lr
