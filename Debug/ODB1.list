
ODB1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00007ac0  08000110  08000110  00001110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000065c  08007bd0  08007bd0  00008bd0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800822c  0800822c  0000a1e8  2**0
                  CONTENTS
  4 .ARM          00000008  0800822c  0800822c  0000922c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08008234  08008234  0000a1e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08008234  08008234  00009234  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08008238  08008238  00009238  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001e8  20000000  0800823c  0000a000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000003e8  200001e8  08008424  0000a1e8  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200005d0  08008424  0000a5d0  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0000a1e8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00007ea8  00000000  00000000  0000a211  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001a09  00000000  00000000  000120b9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loclists 00000ed6  00000000  00000000  00013ac2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000003d8  00000000  00000000  00014998  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000002c5  00000000  00000000  00014d70  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00019fd7  00000000  00000000  00015035  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00009818  00000000  00000000  0002f00c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000949d3  00000000  00000000  00038824  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000cd1f7  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00001be4  00000000  00000000  000cd23c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	@ (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	@ (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200001e8 	.word	0x200001e8
 800012c:	00000000 	.word	0x00000000
 8000130:	08007bb8 	.word	0x08007bb8

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	@ (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	@ (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	@ (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200001ec 	.word	0x200001ec
 800014c:	08007bb8 	.word	0x08007bb8

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <__aeabi_drsub>:
 8000160:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000164:	e002      	b.n	800016c <__adddf3>
 8000166:	bf00      	nop

08000168 <__aeabi_dsub>:
 8000168:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800016c <__adddf3>:
 800016c:	b530      	push	{r4, r5, lr}
 800016e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000172:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000176:	ea94 0f05 	teq	r4, r5
 800017a:	bf08      	it	eq
 800017c:	ea90 0f02 	teqeq	r0, r2
 8000180:	bf1f      	itttt	ne
 8000182:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000186:	ea55 0c02 	orrsne.w	ip, r5, r2
 800018a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800018e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000192:	f000 80e2 	beq.w	800035a <__adddf3+0x1ee>
 8000196:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800019a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800019e:	bfb8      	it	lt
 80001a0:	426d      	neglt	r5, r5
 80001a2:	dd0c      	ble.n	80001be <__adddf3+0x52>
 80001a4:	442c      	add	r4, r5
 80001a6:	ea80 0202 	eor.w	r2, r0, r2
 80001aa:	ea81 0303 	eor.w	r3, r1, r3
 80001ae:	ea82 0000 	eor.w	r0, r2, r0
 80001b2:	ea83 0101 	eor.w	r1, r3, r1
 80001b6:	ea80 0202 	eor.w	r2, r0, r2
 80001ba:	ea81 0303 	eor.w	r3, r1, r3
 80001be:	2d36      	cmp	r5, #54	@ 0x36
 80001c0:	bf88      	it	hi
 80001c2:	bd30      	pophi	{r4, r5, pc}
 80001c4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80001c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001cc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80001d0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001d4:	d002      	beq.n	80001dc <__adddf3+0x70>
 80001d6:	4240      	negs	r0, r0
 80001d8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001dc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 80001e0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001e4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001e8:	d002      	beq.n	80001f0 <__adddf3+0x84>
 80001ea:	4252      	negs	r2, r2
 80001ec:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80001f0:	ea94 0f05 	teq	r4, r5
 80001f4:	f000 80a7 	beq.w	8000346 <__adddf3+0x1da>
 80001f8:	f1a4 0401 	sub.w	r4, r4, #1
 80001fc:	f1d5 0e20 	rsbs	lr, r5, #32
 8000200:	db0d      	blt.n	800021e <__adddf3+0xb2>
 8000202:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000206:	fa22 f205 	lsr.w	r2, r2, r5
 800020a:	1880      	adds	r0, r0, r2
 800020c:	f141 0100 	adc.w	r1, r1, #0
 8000210:	fa03 f20e 	lsl.w	r2, r3, lr
 8000214:	1880      	adds	r0, r0, r2
 8000216:	fa43 f305 	asr.w	r3, r3, r5
 800021a:	4159      	adcs	r1, r3
 800021c:	e00e      	b.n	800023c <__adddf3+0xd0>
 800021e:	f1a5 0520 	sub.w	r5, r5, #32
 8000222:	f10e 0e20 	add.w	lr, lr, #32
 8000226:	2a01      	cmp	r2, #1
 8000228:	fa03 fc0e 	lsl.w	ip, r3, lr
 800022c:	bf28      	it	cs
 800022e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000232:	fa43 f305 	asr.w	r3, r3, r5
 8000236:	18c0      	adds	r0, r0, r3
 8000238:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800023c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000240:	d507      	bpl.n	8000252 <__adddf3+0xe6>
 8000242:	f04f 0e00 	mov.w	lr, #0
 8000246:	f1dc 0c00 	rsbs	ip, ip, #0
 800024a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800024e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000252:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000256:	d31b      	bcc.n	8000290 <__adddf3+0x124>
 8000258:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800025c:	d30c      	bcc.n	8000278 <__adddf3+0x10c>
 800025e:	0849      	lsrs	r1, r1, #1
 8000260:	ea5f 0030 	movs.w	r0, r0, rrx
 8000264:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000268:	f104 0401 	add.w	r4, r4, #1
 800026c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000270:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000274:	f080 809a 	bcs.w	80003ac <__adddf3+0x240>
 8000278:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800027c:	bf08      	it	eq
 800027e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000282:	f150 0000 	adcs.w	r0, r0, #0
 8000286:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800028a:	ea41 0105 	orr.w	r1, r1, r5
 800028e:	bd30      	pop	{r4, r5, pc}
 8000290:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000294:	4140      	adcs	r0, r0
 8000296:	eb41 0101 	adc.w	r1, r1, r1
 800029a:	3c01      	subs	r4, #1
 800029c:	bf28      	it	cs
 800029e:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80002a2:	d2e9      	bcs.n	8000278 <__adddf3+0x10c>
 80002a4:	f091 0f00 	teq	r1, #0
 80002a8:	bf04      	itt	eq
 80002aa:	4601      	moveq	r1, r0
 80002ac:	2000      	moveq	r0, #0
 80002ae:	fab1 f381 	clz	r3, r1
 80002b2:	bf08      	it	eq
 80002b4:	3320      	addeq	r3, #32
 80002b6:	f1a3 030b 	sub.w	r3, r3, #11
 80002ba:	f1b3 0220 	subs.w	r2, r3, #32
 80002be:	da0c      	bge.n	80002da <__adddf3+0x16e>
 80002c0:	320c      	adds	r2, #12
 80002c2:	dd08      	ble.n	80002d6 <__adddf3+0x16a>
 80002c4:	f102 0c14 	add.w	ip, r2, #20
 80002c8:	f1c2 020c 	rsb	r2, r2, #12
 80002cc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002d0:	fa21 f102 	lsr.w	r1, r1, r2
 80002d4:	e00c      	b.n	80002f0 <__adddf3+0x184>
 80002d6:	f102 0214 	add.w	r2, r2, #20
 80002da:	bfd8      	it	le
 80002dc:	f1c2 0c20 	rsble	ip, r2, #32
 80002e0:	fa01 f102 	lsl.w	r1, r1, r2
 80002e4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002e8:	bfdc      	itt	le
 80002ea:	ea41 010c 	orrle.w	r1, r1, ip
 80002ee:	4090      	lslle	r0, r2
 80002f0:	1ae4      	subs	r4, r4, r3
 80002f2:	bfa2      	ittt	ge
 80002f4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80002f8:	4329      	orrge	r1, r5
 80002fa:	bd30      	popge	{r4, r5, pc}
 80002fc:	ea6f 0404 	mvn.w	r4, r4
 8000300:	3c1f      	subs	r4, #31
 8000302:	da1c      	bge.n	800033e <__adddf3+0x1d2>
 8000304:	340c      	adds	r4, #12
 8000306:	dc0e      	bgt.n	8000326 <__adddf3+0x1ba>
 8000308:	f104 0414 	add.w	r4, r4, #20
 800030c:	f1c4 0220 	rsb	r2, r4, #32
 8000310:	fa20 f004 	lsr.w	r0, r0, r4
 8000314:	fa01 f302 	lsl.w	r3, r1, r2
 8000318:	ea40 0003 	orr.w	r0, r0, r3
 800031c:	fa21 f304 	lsr.w	r3, r1, r4
 8000320:	ea45 0103 	orr.w	r1, r5, r3
 8000324:	bd30      	pop	{r4, r5, pc}
 8000326:	f1c4 040c 	rsb	r4, r4, #12
 800032a:	f1c4 0220 	rsb	r2, r4, #32
 800032e:	fa20 f002 	lsr.w	r0, r0, r2
 8000332:	fa01 f304 	lsl.w	r3, r1, r4
 8000336:	ea40 0003 	orr.w	r0, r0, r3
 800033a:	4629      	mov	r1, r5
 800033c:	bd30      	pop	{r4, r5, pc}
 800033e:	fa21 f004 	lsr.w	r0, r1, r4
 8000342:	4629      	mov	r1, r5
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f094 0f00 	teq	r4, #0
 800034a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800034e:	bf06      	itte	eq
 8000350:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000354:	3401      	addeq	r4, #1
 8000356:	3d01      	subne	r5, #1
 8000358:	e74e      	b.n	80001f8 <__adddf3+0x8c>
 800035a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800035e:	bf18      	it	ne
 8000360:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000364:	d029      	beq.n	80003ba <__adddf3+0x24e>
 8000366:	ea94 0f05 	teq	r4, r5
 800036a:	bf08      	it	eq
 800036c:	ea90 0f02 	teqeq	r0, r2
 8000370:	d005      	beq.n	800037e <__adddf3+0x212>
 8000372:	ea54 0c00 	orrs.w	ip, r4, r0
 8000376:	bf04      	itt	eq
 8000378:	4619      	moveq	r1, r3
 800037a:	4610      	moveq	r0, r2
 800037c:	bd30      	pop	{r4, r5, pc}
 800037e:	ea91 0f03 	teq	r1, r3
 8000382:	bf1e      	ittt	ne
 8000384:	2100      	movne	r1, #0
 8000386:	2000      	movne	r0, #0
 8000388:	bd30      	popne	{r4, r5, pc}
 800038a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800038e:	d105      	bne.n	800039c <__adddf3+0x230>
 8000390:	0040      	lsls	r0, r0, #1
 8000392:	4149      	adcs	r1, r1
 8000394:	bf28      	it	cs
 8000396:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 800039a:	bd30      	pop	{r4, r5, pc}
 800039c:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80003a0:	bf3c      	itt	cc
 80003a2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80003a6:	bd30      	popcc	{r4, r5, pc}
 80003a8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003ac:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80003b0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80003b4:	f04f 0000 	mov.w	r0, #0
 80003b8:	bd30      	pop	{r4, r5, pc}
 80003ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003be:	bf1a      	itte	ne
 80003c0:	4619      	movne	r1, r3
 80003c2:	4610      	movne	r0, r2
 80003c4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003c8:	bf1c      	itt	ne
 80003ca:	460b      	movne	r3, r1
 80003cc:	4602      	movne	r2, r0
 80003ce:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003d2:	bf06      	itte	eq
 80003d4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003d8:	ea91 0f03 	teqeq	r1, r3
 80003dc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 80003e0:	bd30      	pop	{r4, r5, pc}
 80003e2:	bf00      	nop

080003e4 <__aeabi_ui2d>:
 80003e4:	f090 0f00 	teq	r0, #0
 80003e8:	bf04      	itt	eq
 80003ea:	2100      	moveq	r1, #0
 80003ec:	4770      	bxeq	lr
 80003ee:	b530      	push	{r4, r5, lr}
 80003f0:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80003f4:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80003f8:	f04f 0500 	mov.w	r5, #0
 80003fc:	f04f 0100 	mov.w	r1, #0
 8000400:	e750      	b.n	80002a4 <__adddf3+0x138>
 8000402:	bf00      	nop

08000404 <__aeabi_i2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000418:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800041c:	bf48      	it	mi
 800041e:	4240      	negmi	r0, r0
 8000420:	f04f 0100 	mov.w	r1, #0
 8000424:	e73e      	b.n	80002a4 <__adddf3+0x138>
 8000426:	bf00      	nop

08000428 <__aeabi_f2d>:
 8000428:	0042      	lsls	r2, r0, #1
 800042a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800042e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000432:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000436:	bf1f      	itttt	ne
 8000438:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800043c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000440:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000444:	4770      	bxne	lr
 8000446:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800044a:	bf08      	it	eq
 800044c:	4770      	bxeq	lr
 800044e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000452:	bf04      	itt	eq
 8000454:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000458:	4770      	bxeq	lr
 800045a:	b530      	push	{r4, r5, lr}
 800045c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000460:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000464:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000468:	e71c      	b.n	80002a4 <__adddf3+0x138>
 800046a:	bf00      	nop

0800046c <__aeabi_ul2d>:
 800046c:	ea50 0201 	orrs.w	r2, r0, r1
 8000470:	bf08      	it	eq
 8000472:	4770      	bxeq	lr
 8000474:	b530      	push	{r4, r5, lr}
 8000476:	f04f 0500 	mov.w	r5, #0
 800047a:	e00a      	b.n	8000492 <__aeabi_l2d+0x16>

0800047c <__aeabi_l2d>:
 800047c:	ea50 0201 	orrs.w	r2, r0, r1
 8000480:	bf08      	it	eq
 8000482:	4770      	bxeq	lr
 8000484:	b530      	push	{r4, r5, lr}
 8000486:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 800048a:	d502      	bpl.n	8000492 <__aeabi_l2d+0x16>
 800048c:	4240      	negs	r0, r0
 800048e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000492:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000496:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800049a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800049e:	f43f aed8 	beq.w	8000252 <__adddf3+0xe6>
 80004a2:	f04f 0203 	mov.w	r2, #3
 80004a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004aa:	bf18      	it	ne
 80004ac:	3203      	addne	r2, #3
 80004ae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004b2:	bf18      	it	ne
 80004b4:	3203      	addne	r2, #3
 80004b6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004ba:	f1c2 0320 	rsb	r3, r2, #32
 80004be:	fa00 fc03 	lsl.w	ip, r0, r3
 80004c2:	fa20 f002 	lsr.w	r0, r0, r2
 80004c6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ca:	ea40 000e 	orr.w	r0, r0, lr
 80004ce:	fa21 f102 	lsr.w	r1, r1, r2
 80004d2:	4414      	add	r4, r2
 80004d4:	e6bd      	b.n	8000252 <__adddf3+0xe6>
 80004d6:	bf00      	nop

080004d8 <__aeabi_dmul>:
 80004d8:	b570      	push	{r4, r5, r6, lr}
 80004da:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80004de:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80004e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004e6:	bf1d      	ittte	ne
 80004e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004ec:	ea94 0f0c 	teqne	r4, ip
 80004f0:	ea95 0f0c 	teqne	r5, ip
 80004f4:	f000 f8de 	bleq	80006b4 <__aeabi_dmul+0x1dc>
 80004f8:	442c      	add	r4, r5
 80004fa:	ea81 0603 	eor.w	r6, r1, r3
 80004fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000502:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000506:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800050a:	bf18      	it	ne
 800050c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000510:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000514:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000518:	d038      	beq.n	800058c <__aeabi_dmul+0xb4>
 800051a:	fba0 ce02 	umull	ip, lr, r0, r2
 800051e:	f04f 0500 	mov.w	r5, #0
 8000522:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000526:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800052a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800052e:	f04f 0600 	mov.w	r6, #0
 8000532:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000536:	f09c 0f00 	teq	ip, #0
 800053a:	bf18      	it	ne
 800053c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000540:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000544:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000548:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800054c:	d204      	bcs.n	8000558 <__aeabi_dmul+0x80>
 800054e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000552:	416d      	adcs	r5, r5
 8000554:	eb46 0606 	adc.w	r6, r6, r6
 8000558:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800055c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000560:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000564:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000568:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800056c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000570:	bf88      	it	hi
 8000572:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000576:	d81e      	bhi.n	80005b6 <__aeabi_dmul+0xde>
 8000578:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800057c:	bf08      	it	eq
 800057e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000582:	f150 0000 	adcs.w	r0, r0, #0
 8000586:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800058a:	bd70      	pop	{r4, r5, r6, pc}
 800058c:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000590:	ea46 0101 	orr.w	r1, r6, r1
 8000594:	ea40 0002 	orr.w	r0, r0, r2
 8000598:	ea81 0103 	eor.w	r1, r1, r3
 800059c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005a0:	bfc2      	ittt	gt
 80005a2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005aa:	bd70      	popgt	{r4, r5, r6, pc}
 80005ac:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80005b0:	f04f 0e00 	mov.w	lr, #0
 80005b4:	3c01      	subs	r4, #1
 80005b6:	f300 80ab 	bgt.w	8000710 <__aeabi_dmul+0x238>
 80005ba:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80005be:	bfde      	ittt	le
 80005c0:	2000      	movle	r0, #0
 80005c2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80005c6:	bd70      	pople	{r4, r5, r6, pc}
 80005c8:	f1c4 0400 	rsb	r4, r4, #0
 80005cc:	3c20      	subs	r4, #32
 80005ce:	da35      	bge.n	800063c <__aeabi_dmul+0x164>
 80005d0:	340c      	adds	r4, #12
 80005d2:	dc1b      	bgt.n	800060c <__aeabi_dmul+0x134>
 80005d4:	f104 0414 	add.w	r4, r4, #20
 80005d8:	f1c4 0520 	rsb	r5, r4, #32
 80005dc:	fa00 f305 	lsl.w	r3, r0, r5
 80005e0:	fa20 f004 	lsr.w	r0, r0, r4
 80005e4:	fa01 f205 	lsl.w	r2, r1, r5
 80005e8:	ea40 0002 	orr.w	r0, r0, r2
 80005ec:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 80005f0:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80005f8:	fa21 f604 	lsr.w	r6, r1, r4
 80005fc:	eb42 0106 	adc.w	r1, r2, r6
 8000600:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000604:	bf08      	it	eq
 8000606:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800060a:	bd70      	pop	{r4, r5, r6, pc}
 800060c:	f1c4 040c 	rsb	r4, r4, #12
 8000610:	f1c4 0520 	rsb	r5, r4, #32
 8000614:	fa00 f304 	lsl.w	r3, r0, r4
 8000618:	fa20 f005 	lsr.w	r0, r0, r5
 800061c:	fa01 f204 	lsl.w	r2, r1, r4
 8000620:	ea40 0002 	orr.w	r0, r0, r2
 8000624:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000628:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800062c:	f141 0100 	adc.w	r1, r1, #0
 8000630:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000634:	bf08      	it	eq
 8000636:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800063a:	bd70      	pop	{r4, r5, r6, pc}
 800063c:	f1c4 0520 	rsb	r5, r4, #32
 8000640:	fa00 f205 	lsl.w	r2, r0, r5
 8000644:	ea4e 0e02 	orr.w	lr, lr, r2
 8000648:	fa20 f304 	lsr.w	r3, r0, r4
 800064c:	fa01 f205 	lsl.w	r2, r1, r5
 8000650:	ea43 0302 	orr.w	r3, r3, r2
 8000654:	fa21 f004 	lsr.w	r0, r1, r4
 8000658:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800065c:	fa21 f204 	lsr.w	r2, r1, r4
 8000660:	ea20 0002 	bic.w	r0, r0, r2
 8000664:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000668:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800066c:	bf08      	it	eq
 800066e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000672:	bd70      	pop	{r4, r5, r6, pc}
 8000674:	f094 0f00 	teq	r4, #0
 8000678:	d10f      	bne.n	800069a <__aeabi_dmul+0x1c2>
 800067a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800067e:	0040      	lsls	r0, r0, #1
 8000680:	eb41 0101 	adc.w	r1, r1, r1
 8000684:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000688:	bf08      	it	eq
 800068a:	3c01      	subeq	r4, #1
 800068c:	d0f7      	beq.n	800067e <__aeabi_dmul+0x1a6>
 800068e:	ea41 0106 	orr.w	r1, r1, r6
 8000692:	f095 0f00 	teq	r5, #0
 8000696:	bf18      	it	ne
 8000698:	4770      	bxne	lr
 800069a:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 800069e:	0052      	lsls	r2, r2, #1
 80006a0:	eb43 0303 	adc.w	r3, r3, r3
 80006a4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80006a8:	bf08      	it	eq
 80006aa:	3d01      	subeq	r5, #1
 80006ac:	d0f7      	beq.n	800069e <__aeabi_dmul+0x1c6>
 80006ae:	ea43 0306 	orr.w	r3, r3, r6
 80006b2:	4770      	bx	lr
 80006b4:	ea94 0f0c 	teq	r4, ip
 80006b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006bc:	bf18      	it	ne
 80006be:	ea95 0f0c 	teqne	r5, ip
 80006c2:	d00c      	beq.n	80006de <__aeabi_dmul+0x206>
 80006c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006c8:	bf18      	it	ne
 80006ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ce:	d1d1      	bne.n	8000674 <__aeabi_dmul+0x19c>
 80006d0:	ea81 0103 	eor.w	r1, r1, r3
 80006d4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80006d8:	f04f 0000 	mov.w	r0, #0
 80006dc:	bd70      	pop	{r4, r5, r6, pc}
 80006de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006e2:	bf06      	itte	eq
 80006e4:	4610      	moveq	r0, r2
 80006e6:	4619      	moveq	r1, r3
 80006e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ec:	d019      	beq.n	8000722 <__aeabi_dmul+0x24a>
 80006ee:	ea94 0f0c 	teq	r4, ip
 80006f2:	d102      	bne.n	80006fa <__aeabi_dmul+0x222>
 80006f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80006f8:	d113      	bne.n	8000722 <__aeabi_dmul+0x24a>
 80006fa:	ea95 0f0c 	teq	r5, ip
 80006fe:	d105      	bne.n	800070c <__aeabi_dmul+0x234>
 8000700:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000704:	bf1c      	itt	ne
 8000706:	4610      	movne	r0, r2
 8000708:	4619      	movne	r1, r3
 800070a:	d10a      	bne.n	8000722 <__aeabi_dmul+0x24a>
 800070c:	ea81 0103 	eor.w	r1, r1, r3
 8000710:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000714:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000718:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800071c:	f04f 0000 	mov.w	r0, #0
 8000720:	bd70      	pop	{r4, r5, r6, pc}
 8000722:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000726:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800072a:	bd70      	pop	{r4, r5, r6, pc}

0800072c <__aeabi_ddiv>:
 800072c:	b570      	push	{r4, r5, r6, lr}
 800072e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000732:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000736:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800073a:	bf1d      	ittte	ne
 800073c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000740:	ea94 0f0c 	teqne	r4, ip
 8000744:	ea95 0f0c 	teqne	r5, ip
 8000748:	f000 f8a7 	bleq	800089a <__aeabi_ddiv+0x16e>
 800074c:	eba4 0405 	sub.w	r4, r4, r5
 8000750:	ea81 0e03 	eor.w	lr, r1, r3
 8000754:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000758:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800075c:	f000 8088 	beq.w	8000870 <__aeabi_ddiv+0x144>
 8000760:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000764:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000768:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800076c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000770:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000774:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000778:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800077c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000780:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 8000784:	429d      	cmp	r5, r3
 8000786:	bf08      	it	eq
 8000788:	4296      	cmpeq	r6, r2
 800078a:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 800078e:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 8000792:	d202      	bcs.n	800079a <__aeabi_ddiv+0x6e>
 8000794:	085b      	lsrs	r3, r3, #1
 8000796:	ea4f 0232 	mov.w	r2, r2, rrx
 800079a:	1ab6      	subs	r6, r6, r2
 800079c:	eb65 0503 	sbc.w	r5, r5, r3
 80007a0:	085b      	lsrs	r3, r3, #1
 80007a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007a6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80007aa:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80007ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80007b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007b6:	bf22      	ittt	cs
 80007b8:	1ab6      	subcs	r6, r6, r2
 80007ba:	4675      	movcs	r5, lr
 80007bc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007c0:	085b      	lsrs	r3, r3, #1
 80007c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ce:	bf22      	ittt	cs
 80007d0:	1ab6      	subcs	r6, r6, r2
 80007d2:	4675      	movcs	r5, lr
 80007d4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007d8:	085b      	lsrs	r3, r3, #1
 80007da:	ea4f 0232 	mov.w	r2, r2, rrx
 80007de:	ebb6 0e02 	subs.w	lr, r6, r2
 80007e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007e6:	bf22      	ittt	cs
 80007e8:	1ab6      	subcs	r6, r6, r2
 80007ea:	4675      	movcs	r5, lr
 80007ec:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80007f0:	085b      	lsrs	r3, r3, #1
 80007f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007fe:	bf22      	ittt	cs
 8000800:	1ab6      	subcs	r6, r6, r2
 8000802:	4675      	movcs	r5, lr
 8000804:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000808:	ea55 0e06 	orrs.w	lr, r5, r6
 800080c:	d018      	beq.n	8000840 <__aeabi_ddiv+0x114>
 800080e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000812:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000816:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800081a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800081e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000822:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000826:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800082a:	d1c0      	bne.n	80007ae <__aeabi_ddiv+0x82>
 800082c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000830:	d10b      	bne.n	800084a <__aeabi_ddiv+0x11e>
 8000832:	ea41 0100 	orr.w	r1, r1, r0
 8000836:	f04f 0000 	mov.w	r0, #0
 800083a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800083e:	e7b6      	b.n	80007ae <__aeabi_ddiv+0x82>
 8000840:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000844:	bf04      	itt	eq
 8000846:	4301      	orreq	r1, r0
 8000848:	2000      	moveq	r0, #0
 800084a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800084e:	bf88      	it	hi
 8000850:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000854:	f63f aeaf 	bhi.w	80005b6 <__aeabi_dmul+0xde>
 8000858:	ebb5 0c03 	subs.w	ip, r5, r3
 800085c:	bf04      	itt	eq
 800085e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000862:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000866:	f150 0000 	adcs.w	r0, r0, #0
 800086a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800086e:	bd70      	pop	{r4, r5, r6, pc}
 8000870:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000874:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000878:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800087c:	bfc2      	ittt	gt
 800087e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000882:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000886:	bd70      	popgt	{r4, r5, r6, pc}
 8000888:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 800088c:	f04f 0e00 	mov.w	lr, #0
 8000890:	3c01      	subs	r4, #1
 8000892:	e690      	b.n	80005b6 <__aeabi_dmul+0xde>
 8000894:	ea45 0e06 	orr.w	lr, r5, r6
 8000898:	e68d      	b.n	80005b6 <__aeabi_dmul+0xde>
 800089a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800089e:	ea94 0f0c 	teq	r4, ip
 80008a2:	bf08      	it	eq
 80008a4:	ea95 0f0c 	teqeq	r5, ip
 80008a8:	f43f af3b 	beq.w	8000722 <__aeabi_dmul+0x24a>
 80008ac:	ea94 0f0c 	teq	r4, ip
 80008b0:	d10a      	bne.n	80008c8 <__aeabi_ddiv+0x19c>
 80008b2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008b6:	f47f af34 	bne.w	8000722 <__aeabi_dmul+0x24a>
 80008ba:	ea95 0f0c 	teq	r5, ip
 80008be:	f47f af25 	bne.w	800070c <__aeabi_dmul+0x234>
 80008c2:	4610      	mov	r0, r2
 80008c4:	4619      	mov	r1, r3
 80008c6:	e72c      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008c8:	ea95 0f0c 	teq	r5, ip
 80008cc:	d106      	bne.n	80008dc <__aeabi_ddiv+0x1b0>
 80008ce:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008d2:	f43f aefd 	beq.w	80006d0 <__aeabi_dmul+0x1f8>
 80008d6:	4610      	mov	r0, r2
 80008d8:	4619      	mov	r1, r3
 80008da:	e722      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008dc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008e0:	bf18      	it	ne
 80008e2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008e6:	f47f aec5 	bne.w	8000674 <__aeabi_dmul+0x19c>
 80008ea:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008ee:	f47f af0d 	bne.w	800070c <__aeabi_dmul+0x234>
 80008f2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80008f6:	f47f aeeb 	bne.w	80006d0 <__aeabi_dmul+0x1f8>
 80008fa:	e712      	b.n	8000722 <__aeabi_dmul+0x24a>

080008fc <__gedf2>:
 80008fc:	f04f 3cff 	mov.w	ip, #4294967295
 8000900:	e006      	b.n	8000910 <__cmpdf2+0x4>
 8000902:	bf00      	nop

08000904 <__ledf2>:
 8000904:	f04f 0c01 	mov.w	ip, #1
 8000908:	e002      	b.n	8000910 <__cmpdf2+0x4>
 800090a:	bf00      	nop

0800090c <__cmpdf2>:
 800090c:	f04f 0c01 	mov.w	ip, #1
 8000910:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000914:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000918:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800091c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000920:	bf18      	it	ne
 8000922:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000926:	d01b      	beq.n	8000960 <__cmpdf2+0x54>
 8000928:	b001      	add	sp, #4
 800092a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800092e:	bf0c      	ite	eq
 8000930:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000934:	ea91 0f03 	teqne	r1, r3
 8000938:	bf02      	ittt	eq
 800093a:	ea90 0f02 	teqeq	r0, r2
 800093e:	2000      	moveq	r0, #0
 8000940:	4770      	bxeq	lr
 8000942:	f110 0f00 	cmn.w	r0, #0
 8000946:	ea91 0f03 	teq	r1, r3
 800094a:	bf58      	it	pl
 800094c:	4299      	cmppl	r1, r3
 800094e:	bf08      	it	eq
 8000950:	4290      	cmpeq	r0, r2
 8000952:	bf2c      	ite	cs
 8000954:	17d8      	asrcs	r0, r3, #31
 8000956:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800095a:	f040 0001 	orr.w	r0, r0, #1
 800095e:	4770      	bx	lr
 8000960:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000964:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000968:	d102      	bne.n	8000970 <__cmpdf2+0x64>
 800096a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800096e:	d107      	bne.n	8000980 <__cmpdf2+0x74>
 8000970:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000974:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000978:	d1d6      	bne.n	8000928 <__cmpdf2+0x1c>
 800097a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800097e:	d0d3      	beq.n	8000928 <__cmpdf2+0x1c>
 8000980:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000984:	4770      	bx	lr
 8000986:	bf00      	nop

08000988 <__aeabi_cdrcmple>:
 8000988:	4684      	mov	ip, r0
 800098a:	4610      	mov	r0, r2
 800098c:	4662      	mov	r2, ip
 800098e:	468c      	mov	ip, r1
 8000990:	4619      	mov	r1, r3
 8000992:	4663      	mov	r3, ip
 8000994:	e000      	b.n	8000998 <__aeabi_cdcmpeq>
 8000996:	bf00      	nop

08000998 <__aeabi_cdcmpeq>:
 8000998:	b501      	push	{r0, lr}
 800099a:	f7ff ffb7 	bl	800090c <__cmpdf2>
 800099e:	2800      	cmp	r0, #0
 80009a0:	bf48      	it	mi
 80009a2:	f110 0f00 	cmnmi.w	r0, #0
 80009a6:	bd01      	pop	{r0, pc}

080009a8 <__aeabi_dcmpeq>:
 80009a8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009ac:	f7ff fff4 	bl	8000998 <__aeabi_cdcmpeq>
 80009b0:	bf0c      	ite	eq
 80009b2:	2001      	moveq	r0, #1
 80009b4:	2000      	movne	r0, #0
 80009b6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ba:	bf00      	nop

080009bc <__aeabi_dcmplt>:
 80009bc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009c0:	f7ff ffea 	bl	8000998 <__aeabi_cdcmpeq>
 80009c4:	bf34      	ite	cc
 80009c6:	2001      	movcc	r0, #1
 80009c8:	2000      	movcs	r0, #0
 80009ca:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ce:	bf00      	nop

080009d0 <__aeabi_dcmple>:
 80009d0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009d4:	f7ff ffe0 	bl	8000998 <__aeabi_cdcmpeq>
 80009d8:	bf94      	ite	ls
 80009da:	2001      	movls	r0, #1
 80009dc:	2000      	movhi	r0, #0
 80009de:	f85d fb08 	ldr.w	pc, [sp], #8
 80009e2:	bf00      	nop

080009e4 <__aeabi_dcmpge>:
 80009e4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e8:	f7ff ffce 	bl	8000988 <__aeabi_cdrcmple>
 80009ec:	bf94      	ite	ls
 80009ee:	2001      	movls	r0, #1
 80009f0:	2000      	movhi	r0, #0
 80009f2:	f85d fb08 	ldr.w	pc, [sp], #8
 80009f6:	bf00      	nop

080009f8 <__aeabi_dcmpgt>:
 80009f8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009fc:	f7ff ffc4 	bl	8000988 <__aeabi_cdrcmple>
 8000a00:	bf34      	ite	cc
 8000a02:	2001      	movcc	r0, #1
 8000a04:	2000      	movcs	r0, #0
 8000a06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a0a:	bf00      	nop

08000a0c <__aeabi_dcmpun>:
 8000a0c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a14:	d102      	bne.n	8000a1c <__aeabi_dcmpun+0x10>
 8000a16:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a1a:	d10a      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a24:	d102      	bne.n	8000a2c <__aeabi_dcmpun+0x20>
 8000a26:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a2a:	d102      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a2c:	f04f 0000 	mov.w	r0, #0
 8000a30:	4770      	bx	lr
 8000a32:	f04f 0001 	mov.w	r0, #1
 8000a36:	4770      	bx	lr

08000a38 <__aeabi_d2iz>:
 8000a38:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a3c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000a40:	d215      	bcs.n	8000a6e <__aeabi_d2iz+0x36>
 8000a42:	d511      	bpl.n	8000a68 <__aeabi_d2iz+0x30>
 8000a44:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000a48:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a4c:	d912      	bls.n	8000a74 <__aeabi_d2iz+0x3c>
 8000a4e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a52:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000a56:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a5a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000a5e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a62:	bf18      	it	ne
 8000a64:	4240      	negne	r0, r0
 8000a66:	4770      	bx	lr
 8000a68:	f04f 0000 	mov.w	r0, #0
 8000a6c:	4770      	bx	lr
 8000a6e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a72:	d105      	bne.n	8000a80 <__aeabi_d2iz+0x48>
 8000a74:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000a78:	bf08      	it	eq
 8000a7a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000a7e:	4770      	bx	lr
 8000a80:	f04f 0000 	mov.w	r0, #0
 8000a84:	4770      	bx	lr
 8000a86:	bf00      	nop

08000a88 <__aeabi_d2f>:
 8000a88:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a8c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000a90:	bf24      	itt	cs
 8000a92:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000a96:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000a9a:	d90d      	bls.n	8000ab8 <__aeabi_d2f+0x30>
 8000a9c:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000aa0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000aa4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000aa8:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000aac:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000ab0:	bf08      	it	eq
 8000ab2:	f020 0001 	biceq.w	r0, r0, #1
 8000ab6:	4770      	bx	lr
 8000ab8:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000abc:	d121      	bne.n	8000b02 <__aeabi_d2f+0x7a>
 8000abe:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000ac2:	bfbc      	itt	lt
 8000ac4:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000ac8:	4770      	bxlt	lr
 8000aca:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000ace:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000ad2:	f1c2 0218 	rsb	r2, r2, #24
 8000ad6:	f1c2 0c20 	rsb	ip, r2, #32
 8000ada:	fa10 f30c 	lsls.w	r3, r0, ip
 8000ade:	fa20 f002 	lsr.w	r0, r0, r2
 8000ae2:	bf18      	it	ne
 8000ae4:	f040 0001 	orrne.w	r0, r0, #1
 8000ae8:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000aec:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000af0:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000af4:	ea40 000c 	orr.w	r0, r0, ip
 8000af8:	fa23 f302 	lsr.w	r3, r3, r2
 8000afc:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b00:	e7cc      	b.n	8000a9c <__aeabi_d2f+0x14>
 8000b02:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b06:	d107      	bne.n	8000b18 <__aeabi_d2f+0x90>
 8000b08:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b0c:	bf1e      	ittt	ne
 8000b0e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000b12:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000b16:	4770      	bxne	lr
 8000b18:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000b1c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000b20:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000b24:	4770      	bx	lr
 8000b26:	bf00      	nop

08000b28 <__aeabi_frsub>:
 8000b28:	f080 4000 	eor.w	r0, r0, #2147483648	@ 0x80000000
 8000b2c:	e002      	b.n	8000b34 <__addsf3>
 8000b2e:	bf00      	nop

08000b30 <__aeabi_fsub>:
 8000b30:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000

08000b34 <__addsf3>:
 8000b34:	0042      	lsls	r2, r0, #1
 8000b36:	bf1f      	itttt	ne
 8000b38:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000b3c:	ea92 0f03 	teqne	r2, r3
 8000b40:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000b44:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000b48:	d06a      	beq.n	8000c20 <__addsf3+0xec>
 8000b4a:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000b4e:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000b52:	bfc1      	itttt	gt
 8000b54:	18d2      	addgt	r2, r2, r3
 8000b56:	4041      	eorgt	r1, r0
 8000b58:	4048      	eorgt	r0, r1
 8000b5a:	4041      	eorgt	r1, r0
 8000b5c:	bfb8      	it	lt
 8000b5e:	425b      	neglt	r3, r3
 8000b60:	2b19      	cmp	r3, #25
 8000b62:	bf88      	it	hi
 8000b64:	4770      	bxhi	lr
 8000b66:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 8000b6a:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000b6e:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
 8000b72:	bf18      	it	ne
 8000b74:	4240      	negne	r0, r0
 8000b76:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b7a:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8000b7e:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8000b82:	bf18      	it	ne
 8000b84:	4249      	negne	r1, r1
 8000b86:	ea92 0f03 	teq	r2, r3
 8000b8a:	d03f      	beq.n	8000c0c <__addsf3+0xd8>
 8000b8c:	f1a2 0201 	sub.w	r2, r2, #1
 8000b90:	fa41 fc03 	asr.w	ip, r1, r3
 8000b94:	eb10 000c 	adds.w	r0, r0, ip
 8000b98:	f1c3 0320 	rsb	r3, r3, #32
 8000b9c:	fa01 f103 	lsl.w	r1, r1, r3
 8000ba0:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000ba4:	d502      	bpl.n	8000bac <__addsf3+0x78>
 8000ba6:	4249      	negs	r1, r1
 8000ba8:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000bac:	f5b0 0f00 	cmp.w	r0, #8388608	@ 0x800000
 8000bb0:	d313      	bcc.n	8000bda <__addsf3+0xa6>
 8000bb2:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8000bb6:	d306      	bcc.n	8000bc6 <__addsf3+0x92>
 8000bb8:	0840      	lsrs	r0, r0, #1
 8000bba:	ea4f 0131 	mov.w	r1, r1, rrx
 8000bbe:	f102 0201 	add.w	r2, r2, #1
 8000bc2:	2afe      	cmp	r2, #254	@ 0xfe
 8000bc4:	d251      	bcs.n	8000c6a <__addsf3+0x136>
 8000bc6:	f1b1 4f00 	cmp.w	r1, #2147483648	@ 0x80000000
 8000bca:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000bce:	bf08      	it	eq
 8000bd0:	f020 0001 	biceq.w	r0, r0, #1
 8000bd4:	ea40 0003 	orr.w	r0, r0, r3
 8000bd8:	4770      	bx	lr
 8000bda:	0049      	lsls	r1, r1, #1
 8000bdc:	eb40 0000 	adc.w	r0, r0, r0
 8000be0:	3a01      	subs	r2, #1
 8000be2:	bf28      	it	cs
 8000be4:	f5b0 0f00 	cmpcs.w	r0, #8388608	@ 0x800000
 8000be8:	d2ed      	bcs.n	8000bc6 <__addsf3+0x92>
 8000bea:	fab0 fc80 	clz	ip, r0
 8000bee:	f1ac 0c08 	sub.w	ip, ip, #8
 8000bf2:	ebb2 020c 	subs.w	r2, r2, ip
 8000bf6:	fa00 f00c 	lsl.w	r0, r0, ip
 8000bfa:	bfaa      	itet	ge
 8000bfc:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000c00:	4252      	neglt	r2, r2
 8000c02:	4318      	orrge	r0, r3
 8000c04:	bfbc      	itt	lt
 8000c06:	40d0      	lsrlt	r0, r2
 8000c08:	4318      	orrlt	r0, r3
 8000c0a:	4770      	bx	lr
 8000c0c:	f092 0f00 	teq	r2, #0
 8000c10:	f481 0100 	eor.w	r1, r1, #8388608	@ 0x800000
 8000c14:	bf06      	itte	eq
 8000c16:	f480 0000 	eoreq.w	r0, r0, #8388608	@ 0x800000
 8000c1a:	3201      	addeq	r2, #1
 8000c1c:	3b01      	subne	r3, #1
 8000c1e:	e7b5      	b.n	8000b8c <__addsf3+0x58>
 8000c20:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000c24:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000c28:	bf18      	it	ne
 8000c2a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000c2e:	d021      	beq.n	8000c74 <__addsf3+0x140>
 8000c30:	ea92 0f03 	teq	r2, r3
 8000c34:	d004      	beq.n	8000c40 <__addsf3+0x10c>
 8000c36:	f092 0f00 	teq	r2, #0
 8000c3a:	bf08      	it	eq
 8000c3c:	4608      	moveq	r0, r1
 8000c3e:	4770      	bx	lr
 8000c40:	ea90 0f01 	teq	r0, r1
 8000c44:	bf1c      	itt	ne
 8000c46:	2000      	movne	r0, #0
 8000c48:	4770      	bxne	lr
 8000c4a:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8000c4e:	d104      	bne.n	8000c5a <__addsf3+0x126>
 8000c50:	0040      	lsls	r0, r0, #1
 8000c52:	bf28      	it	cs
 8000c54:	f040 4000 	orrcs.w	r0, r0, #2147483648	@ 0x80000000
 8000c58:	4770      	bx	lr
 8000c5a:	f112 7200 	adds.w	r2, r2, #33554432	@ 0x2000000
 8000c5e:	bf3c      	itt	cc
 8000c60:	f500 0000 	addcc.w	r0, r0, #8388608	@ 0x800000
 8000c64:	4770      	bxcc	lr
 8000c66:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000c6a:	f043 40fe 	orr.w	r0, r3, #2130706432	@ 0x7f000000
 8000c6e:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c72:	4770      	bx	lr
 8000c74:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000c78:	bf16      	itet	ne
 8000c7a:	4608      	movne	r0, r1
 8000c7c:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000c80:	4601      	movne	r1, r0
 8000c82:	0242      	lsls	r2, r0, #9
 8000c84:	bf06      	itte	eq
 8000c86:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000c8a:	ea90 0f01 	teqeq	r0, r1
 8000c8e:	f440 0080 	orrne.w	r0, r0, #4194304	@ 0x400000
 8000c92:	4770      	bx	lr

08000c94 <__aeabi_ui2f>:
 8000c94:	f04f 0300 	mov.w	r3, #0
 8000c98:	e004      	b.n	8000ca4 <__aeabi_i2f+0x8>
 8000c9a:	bf00      	nop

08000c9c <__aeabi_i2f>:
 8000c9c:	f010 4300 	ands.w	r3, r0, #2147483648	@ 0x80000000
 8000ca0:	bf48      	it	mi
 8000ca2:	4240      	negmi	r0, r0
 8000ca4:	ea5f 0c00 	movs.w	ip, r0
 8000ca8:	bf08      	it	eq
 8000caa:	4770      	bxeq	lr
 8000cac:	f043 4396 	orr.w	r3, r3, #1258291200	@ 0x4b000000
 8000cb0:	4601      	mov	r1, r0
 8000cb2:	f04f 0000 	mov.w	r0, #0
 8000cb6:	e01c      	b.n	8000cf2 <__aeabi_l2f+0x2a>

08000cb8 <__aeabi_ul2f>:
 8000cb8:	ea50 0201 	orrs.w	r2, r0, r1
 8000cbc:	bf08      	it	eq
 8000cbe:	4770      	bxeq	lr
 8000cc0:	f04f 0300 	mov.w	r3, #0
 8000cc4:	e00a      	b.n	8000cdc <__aeabi_l2f+0x14>
 8000cc6:	bf00      	nop

08000cc8 <__aeabi_l2f>:
 8000cc8:	ea50 0201 	orrs.w	r2, r0, r1
 8000ccc:	bf08      	it	eq
 8000cce:	4770      	bxeq	lr
 8000cd0:	f011 4300 	ands.w	r3, r1, #2147483648	@ 0x80000000
 8000cd4:	d502      	bpl.n	8000cdc <__aeabi_l2f+0x14>
 8000cd6:	4240      	negs	r0, r0
 8000cd8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cdc:	ea5f 0c01 	movs.w	ip, r1
 8000ce0:	bf02      	ittt	eq
 8000ce2:	4684      	moveq	ip, r0
 8000ce4:	4601      	moveq	r1, r0
 8000ce6:	2000      	moveq	r0, #0
 8000ce8:	f043 43b6 	orr.w	r3, r3, #1526726656	@ 0x5b000000
 8000cec:	bf08      	it	eq
 8000cee:	f1a3 5380 	subeq.w	r3, r3, #268435456	@ 0x10000000
 8000cf2:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 8000cf6:	fabc f28c 	clz	r2, ip
 8000cfa:	3a08      	subs	r2, #8
 8000cfc:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000d00:	db10      	blt.n	8000d24 <__aeabi_l2f+0x5c>
 8000d02:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d06:	4463      	add	r3, ip
 8000d08:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d0c:	f1c2 0220 	rsb	r2, r2, #32
 8000d10:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000d14:	fa20 f202 	lsr.w	r2, r0, r2
 8000d18:	eb43 0002 	adc.w	r0, r3, r2
 8000d1c:	bf08      	it	eq
 8000d1e:	f020 0001 	biceq.w	r0, r0, #1
 8000d22:	4770      	bx	lr
 8000d24:	f102 0220 	add.w	r2, r2, #32
 8000d28:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d2c:	f1c2 0220 	rsb	r2, r2, #32
 8000d30:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000d34:	fa21 f202 	lsr.w	r2, r1, r2
 8000d38:	eb43 0002 	adc.w	r0, r3, r2
 8000d3c:	bf08      	it	eq
 8000d3e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000d42:	4770      	bx	lr

08000d44 <__aeabi_fmul>:
 8000d44:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000d48:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000d4c:	bf1e      	ittt	ne
 8000d4e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000d52:	ea92 0f0c 	teqne	r2, ip
 8000d56:	ea93 0f0c 	teqne	r3, ip
 8000d5a:	d06f      	beq.n	8000e3c <__aeabi_fmul+0xf8>
 8000d5c:	441a      	add	r2, r3
 8000d5e:	ea80 0c01 	eor.w	ip, r0, r1
 8000d62:	0240      	lsls	r0, r0, #9
 8000d64:	bf18      	it	ne
 8000d66:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000d6a:	d01e      	beq.n	8000daa <__aeabi_fmul+0x66>
 8000d6c:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8000d70:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000d74:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000d78:	fba0 3101 	umull	r3, r1, r0, r1
 8000d7c:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000d80:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
 8000d84:	bf3e      	ittt	cc
 8000d86:	0049      	lslcc	r1, r1, #1
 8000d88:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000d8c:	005b      	lslcc	r3, r3, #1
 8000d8e:	ea40 0001 	orr.w	r0, r0, r1
 8000d92:	f162 027f 	sbc.w	r2, r2, #127	@ 0x7f
 8000d96:	2afd      	cmp	r2, #253	@ 0xfd
 8000d98:	d81d      	bhi.n	8000dd6 <__aeabi_fmul+0x92>
 8000d9a:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8000d9e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000da2:	bf08      	it	eq
 8000da4:	f020 0001 	biceq.w	r0, r0, #1
 8000da8:	4770      	bx	lr
 8000daa:	f090 0f00 	teq	r0, #0
 8000dae:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000db2:	bf08      	it	eq
 8000db4:	0249      	lsleq	r1, r1, #9
 8000db6:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000dba:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000dbe:	3a7f      	subs	r2, #127	@ 0x7f
 8000dc0:	bfc2      	ittt	gt
 8000dc2:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000dc6:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000dca:	4770      	bxgt	lr
 8000dcc:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000dd0:	f04f 0300 	mov.w	r3, #0
 8000dd4:	3a01      	subs	r2, #1
 8000dd6:	dc5d      	bgt.n	8000e94 <__aeabi_fmul+0x150>
 8000dd8:	f112 0f19 	cmn.w	r2, #25
 8000ddc:	bfdc      	itt	le
 8000dde:	f000 4000 	andle.w	r0, r0, #2147483648	@ 0x80000000
 8000de2:	4770      	bxle	lr
 8000de4:	f1c2 0200 	rsb	r2, r2, #0
 8000de8:	0041      	lsls	r1, r0, #1
 8000dea:	fa21 f102 	lsr.w	r1, r1, r2
 8000dee:	f1c2 0220 	rsb	r2, r2, #32
 8000df2:	fa00 fc02 	lsl.w	ip, r0, r2
 8000df6:	ea5f 0031 	movs.w	r0, r1, rrx
 8000dfa:	f140 0000 	adc.w	r0, r0, #0
 8000dfe:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000e02:	bf08      	it	eq
 8000e04:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e08:	4770      	bx	lr
 8000e0a:	f092 0f00 	teq	r2, #0
 8000e0e:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000e12:	bf02      	ittt	eq
 8000e14:	0040      	lsleq	r0, r0, #1
 8000e16:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000e1a:	3a01      	subeq	r2, #1
 8000e1c:	d0f9      	beq.n	8000e12 <__aeabi_fmul+0xce>
 8000e1e:	ea40 000c 	orr.w	r0, r0, ip
 8000e22:	f093 0f00 	teq	r3, #0
 8000e26:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000e2a:	bf02      	ittt	eq
 8000e2c:	0049      	lsleq	r1, r1, #1
 8000e2e:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000e32:	3b01      	subeq	r3, #1
 8000e34:	d0f9      	beq.n	8000e2a <__aeabi_fmul+0xe6>
 8000e36:	ea41 010c 	orr.w	r1, r1, ip
 8000e3a:	e78f      	b.n	8000d5c <__aeabi_fmul+0x18>
 8000e3c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000e40:	ea92 0f0c 	teq	r2, ip
 8000e44:	bf18      	it	ne
 8000e46:	ea93 0f0c 	teqne	r3, ip
 8000e4a:	d00a      	beq.n	8000e62 <__aeabi_fmul+0x11e>
 8000e4c:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8000e50:	bf18      	it	ne
 8000e52:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 8000e56:	d1d8      	bne.n	8000e0a <__aeabi_fmul+0xc6>
 8000e58:	ea80 0001 	eor.w	r0, r0, r1
 8000e5c:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000e60:	4770      	bx	lr
 8000e62:	f090 0f00 	teq	r0, #0
 8000e66:	bf17      	itett	ne
 8000e68:	f090 4f00 	teqne	r0, #2147483648	@ 0x80000000
 8000e6c:	4608      	moveq	r0, r1
 8000e6e:	f091 0f00 	teqne	r1, #0
 8000e72:	f091 4f00 	teqne	r1, #2147483648	@ 0x80000000
 8000e76:	d014      	beq.n	8000ea2 <__aeabi_fmul+0x15e>
 8000e78:	ea92 0f0c 	teq	r2, ip
 8000e7c:	d101      	bne.n	8000e82 <__aeabi_fmul+0x13e>
 8000e7e:	0242      	lsls	r2, r0, #9
 8000e80:	d10f      	bne.n	8000ea2 <__aeabi_fmul+0x15e>
 8000e82:	ea93 0f0c 	teq	r3, ip
 8000e86:	d103      	bne.n	8000e90 <__aeabi_fmul+0x14c>
 8000e88:	024b      	lsls	r3, r1, #9
 8000e8a:	bf18      	it	ne
 8000e8c:	4608      	movne	r0, r1
 8000e8e:	d108      	bne.n	8000ea2 <__aeabi_fmul+0x15e>
 8000e90:	ea80 0001 	eor.w	r0, r0, r1
 8000e94:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000e98:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000e9c:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000ea0:	4770      	bx	lr
 8000ea2:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000ea6:	f440 0040 	orr.w	r0, r0, #12582912	@ 0xc00000
 8000eaa:	4770      	bx	lr

08000eac <__aeabi_fdiv>:
 8000eac:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000eb0:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000eb4:	bf1e      	ittt	ne
 8000eb6:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000eba:	ea92 0f0c 	teqne	r2, ip
 8000ebe:	ea93 0f0c 	teqne	r3, ip
 8000ec2:	d069      	beq.n	8000f98 <__aeabi_fdiv+0xec>
 8000ec4:	eba2 0203 	sub.w	r2, r2, r3
 8000ec8:	ea80 0c01 	eor.w	ip, r0, r1
 8000ecc:	0249      	lsls	r1, r1, #9
 8000ece:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000ed2:	d037      	beq.n	8000f44 <__aeabi_fdiv+0x98>
 8000ed4:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
 8000ed8:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000edc:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000ee0:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000ee4:	428b      	cmp	r3, r1
 8000ee6:	bf38      	it	cc
 8000ee8:	005b      	lslcc	r3, r3, #1
 8000eea:	f142 027d 	adc.w	r2, r2, #125	@ 0x7d
 8000eee:	f44f 0c00 	mov.w	ip, #8388608	@ 0x800000
 8000ef2:	428b      	cmp	r3, r1
 8000ef4:	bf24      	itt	cs
 8000ef6:	1a5b      	subcs	r3, r3, r1
 8000ef8:	ea40 000c 	orrcs.w	r0, r0, ip
 8000efc:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000f00:	bf24      	itt	cs
 8000f02:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000f06:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000f0a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000f0e:	bf24      	itt	cs
 8000f10:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000f14:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000f18:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000f1c:	bf24      	itt	cs
 8000f1e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000f22:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000f26:	011b      	lsls	r3, r3, #4
 8000f28:	bf18      	it	ne
 8000f2a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000f2e:	d1e0      	bne.n	8000ef2 <__aeabi_fdiv+0x46>
 8000f30:	2afd      	cmp	r2, #253	@ 0xfd
 8000f32:	f63f af50 	bhi.w	8000dd6 <__aeabi_fmul+0x92>
 8000f36:	428b      	cmp	r3, r1
 8000f38:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000f3c:	bf08      	it	eq
 8000f3e:	f020 0001 	biceq.w	r0, r0, #1
 8000f42:	4770      	bx	lr
 8000f44:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000f48:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000f4c:	327f      	adds	r2, #127	@ 0x7f
 8000f4e:	bfc2      	ittt	gt
 8000f50:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000f54:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000f58:	4770      	bxgt	lr
 8000f5a:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000f5e:	f04f 0300 	mov.w	r3, #0
 8000f62:	3a01      	subs	r2, #1
 8000f64:	e737      	b.n	8000dd6 <__aeabi_fmul+0x92>
 8000f66:	f092 0f00 	teq	r2, #0
 8000f6a:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000f6e:	bf02      	ittt	eq
 8000f70:	0040      	lsleq	r0, r0, #1
 8000f72:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000f76:	3a01      	subeq	r2, #1
 8000f78:	d0f9      	beq.n	8000f6e <__aeabi_fdiv+0xc2>
 8000f7a:	ea40 000c 	orr.w	r0, r0, ip
 8000f7e:	f093 0f00 	teq	r3, #0
 8000f82:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000f86:	bf02      	ittt	eq
 8000f88:	0049      	lsleq	r1, r1, #1
 8000f8a:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000f8e:	3b01      	subeq	r3, #1
 8000f90:	d0f9      	beq.n	8000f86 <__aeabi_fdiv+0xda>
 8000f92:	ea41 010c 	orr.w	r1, r1, ip
 8000f96:	e795      	b.n	8000ec4 <__aeabi_fdiv+0x18>
 8000f98:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000f9c:	ea92 0f0c 	teq	r2, ip
 8000fa0:	d108      	bne.n	8000fb4 <__aeabi_fdiv+0x108>
 8000fa2:	0242      	lsls	r2, r0, #9
 8000fa4:	f47f af7d 	bne.w	8000ea2 <__aeabi_fmul+0x15e>
 8000fa8:	ea93 0f0c 	teq	r3, ip
 8000fac:	f47f af70 	bne.w	8000e90 <__aeabi_fmul+0x14c>
 8000fb0:	4608      	mov	r0, r1
 8000fb2:	e776      	b.n	8000ea2 <__aeabi_fmul+0x15e>
 8000fb4:	ea93 0f0c 	teq	r3, ip
 8000fb8:	d104      	bne.n	8000fc4 <__aeabi_fdiv+0x118>
 8000fba:	024b      	lsls	r3, r1, #9
 8000fbc:	f43f af4c 	beq.w	8000e58 <__aeabi_fmul+0x114>
 8000fc0:	4608      	mov	r0, r1
 8000fc2:	e76e      	b.n	8000ea2 <__aeabi_fmul+0x15e>
 8000fc4:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8000fc8:	bf18      	it	ne
 8000fca:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 8000fce:	d1ca      	bne.n	8000f66 <__aeabi_fdiv+0xba>
 8000fd0:	f030 4200 	bics.w	r2, r0, #2147483648	@ 0x80000000
 8000fd4:	f47f af5c 	bne.w	8000e90 <__aeabi_fmul+0x14c>
 8000fd8:	f031 4300 	bics.w	r3, r1, #2147483648	@ 0x80000000
 8000fdc:	f47f af3c 	bne.w	8000e58 <__aeabi_fmul+0x114>
 8000fe0:	e75f      	b.n	8000ea2 <__aeabi_fmul+0x15e>
 8000fe2:	bf00      	nop

08000fe4 <__aeabi_f2uiz>:
 8000fe4:	0042      	lsls	r2, r0, #1
 8000fe6:	d20e      	bcs.n	8001006 <__aeabi_f2uiz+0x22>
 8000fe8:	f1b2 4ffe 	cmp.w	r2, #2130706432	@ 0x7f000000
 8000fec:	d30b      	bcc.n	8001006 <__aeabi_f2uiz+0x22>
 8000fee:	f04f 039e 	mov.w	r3, #158	@ 0x9e
 8000ff2:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8000ff6:	d409      	bmi.n	800100c <__aeabi_f2uiz+0x28>
 8000ff8:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8000ffc:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8001000:	fa23 f002 	lsr.w	r0, r3, r2
 8001004:	4770      	bx	lr
 8001006:	f04f 0000 	mov.w	r0, #0
 800100a:	4770      	bx	lr
 800100c:	f112 0f61 	cmn.w	r2, #97	@ 0x61
 8001010:	d101      	bne.n	8001016 <__aeabi_f2uiz+0x32>
 8001012:	0242      	lsls	r2, r0, #9
 8001014:	d102      	bne.n	800101c <__aeabi_f2uiz+0x38>
 8001016:	f04f 30ff 	mov.w	r0, #4294967295
 800101a:	4770      	bx	lr
 800101c:	f04f 0000 	mov.w	r0, #0
 8001020:	4770      	bx	lr
 8001022:	bf00      	nop

08001024 <__aeabi_ldivmod>:
 8001024:	b97b      	cbnz	r3, 8001046 <__aeabi_ldivmod+0x22>
 8001026:	b972      	cbnz	r2, 8001046 <__aeabi_ldivmod+0x22>
 8001028:	2900      	cmp	r1, #0
 800102a:	bfbe      	ittt	lt
 800102c:	2000      	movlt	r0, #0
 800102e:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
 8001032:	e006      	blt.n	8001042 <__aeabi_ldivmod+0x1e>
 8001034:	bf08      	it	eq
 8001036:	2800      	cmpeq	r0, #0
 8001038:	bf1c      	itt	ne
 800103a:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
 800103e:	f04f 30ff 	movne.w	r0, #4294967295
 8001042:	f000 b99b 	b.w	800137c <__aeabi_idiv0>
 8001046:	f1ad 0c08 	sub.w	ip, sp, #8
 800104a:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 800104e:	2900      	cmp	r1, #0
 8001050:	db09      	blt.n	8001066 <__aeabi_ldivmod+0x42>
 8001052:	2b00      	cmp	r3, #0
 8001054:	db1a      	blt.n	800108c <__aeabi_ldivmod+0x68>
 8001056:	f000 f835 	bl	80010c4 <__udivmoddi4>
 800105a:	f8dd e004 	ldr.w	lr, [sp, #4]
 800105e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8001062:	b004      	add	sp, #16
 8001064:	4770      	bx	lr
 8001066:	4240      	negs	r0, r0
 8001068:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800106c:	2b00      	cmp	r3, #0
 800106e:	db1b      	blt.n	80010a8 <__aeabi_ldivmod+0x84>
 8001070:	f000 f828 	bl	80010c4 <__udivmoddi4>
 8001074:	f8dd e004 	ldr.w	lr, [sp, #4]
 8001078:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800107c:	b004      	add	sp, #16
 800107e:	4240      	negs	r0, r0
 8001080:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8001084:	4252      	negs	r2, r2
 8001086:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800108a:	4770      	bx	lr
 800108c:	4252      	negs	r2, r2
 800108e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8001092:	f000 f817 	bl	80010c4 <__udivmoddi4>
 8001096:	f8dd e004 	ldr.w	lr, [sp, #4]
 800109a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800109e:	b004      	add	sp, #16
 80010a0:	4240      	negs	r0, r0
 80010a2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80010a6:	4770      	bx	lr
 80010a8:	4252      	negs	r2, r2
 80010aa:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80010ae:	f000 f809 	bl	80010c4 <__udivmoddi4>
 80010b2:	f8dd e004 	ldr.w	lr, [sp, #4]
 80010b6:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80010ba:	b004      	add	sp, #16
 80010bc:	4252      	negs	r2, r2
 80010be:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80010c2:	4770      	bx	lr

080010c4 <__udivmoddi4>:
 80010c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80010c8:	9d08      	ldr	r5, [sp, #32]
 80010ca:	460c      	mov	r4, r1
 80010cc:	2b00      	cmp	r3, #0
 80010ce:	d14e      	bne.n	800116e <__udivmoddi4+0xaa>
 80010d0:	4694      	mov	ip, r2
 80010d2:	458c      	cmp	ip, r1
 80010d4:	4686      	mov	lr, r0
 80010d6:	fab2 f282 	clz	r2, r2
 80010da:	d962      	bls.n	80011a2 <__udivmoddi4+0xde>
 80010dc:	b14a      	cbz	r2, 80010f2 <__udivmoddi4+0x2e>
 80010de:	f1c2 0320 	rsb	r3, r2, #32
 80010e2:	4091      	lsls	r1, r2
 80010e4:	fa20 f303 	lsr.w	r3, r0, r3
 80010e8:	fa0c fc02 	lsl.w	ip, ip, r2
 80010ec:	4319      	orrs	r1, r3
 80010ee:	fa00 fe02 	lsl.w	lr, r0, r2
 80010f2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80010f6:	fbb1 f4f7 	udiv	r4, r1, r7
 80010fa:	fb07 1114 	mls	r1, r7, r4, r1
 80010fe:	fa1f f68c 	uxth.w	r6, ip
 8001102:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8001106:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800110a:	fb04 f106 	mul.w	r1, r4, r6
 800110e:	4299      	cmp	r1, r3
 8001110:	d90a      	bls.n	8001128 <__udivmoddi4+0x64>
 8001112:	eb1c 0303 	adds.w	r3, ip, r3
 8001116:	f104 30ff 	add.w	r0, r4, #4294967295
 800111a:	f080 8110 	bcs.w	800133e <__udivmoddi4+0x27a>
 800111e:	4299      	cmp	r1, r3
 8001120:	f240 810d 	bls.w	800133e <__udivmoddi4+0x27a>
 8001124:	3c02      	subs	r4, #2
 8001126:	4463      	add	r3, ip
 8001128:	1a59      	subs	r1, r3, r1
 800112a:	fbb1 f0f7 	udiv	r0, r1, r7
 800112e:	fb07 1110 	mls	r1, r7, r0, r1
 8001132:	fb00 f606 	mul.w	r6, r0, r6
 8001136:	fa1f f38e 	uxth.w	r3, lr
 800113a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800113e:	429e      	cmp	r6, r3
 8001140:	d90a      	bls.n	8001158 <__udivmoddi4+0x94>
 8001142:	eb1c 0303 	adds.w	r3, ip, r3
 8001146:	f100 31ff 	add.w	r1, r0, #4294967295
 800114a:	f080 80fa 	bcs.w	8001342 <__udivmoddi4+0x27e>
 800114e:	429e      	cmp	r6, r3
 8001150:	f240 80f7 	bls.w	8001342 <__udivmoddi4+0x27e>
 8001154:	4463      	add	r3, ip
 8001156:	3802      	subs	r0, #2
 8001158:	2100      	movs	r1, #0
 800115a:	1b9b      	subs	r3, r3, r6
 800115c:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8001160:	b11d      	cbz	r5, 800116a <__udivmoddi4+0xa6>
 8001162:	40d3      	lsrs	r3, r2
 8001164:	2200      	movs	r2, #0
 8001166:	e9c5 3200 	strd	r3, r2, [r5]
 800116a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800116e:	428b      	cmp	r3, r1
 8001170:	d905      	bls.n	800117e <__udivmoddi4+0xba>
 8001172:	b10d      	cbz	r5, 8001178 <__udivmoddi4+0xb4>
 8001174:	e9c5 0100 	strd	r0, r1, [r5]
 8001178:	2100      	movs	r1, #0
 800117a:	4608      	mov	r0, r1
 800117c:	e7f5      	b.n	800116a <__udivmoddi4+0xa6>
 800117e:	fab3 f183 	clz	r1, r3
 8001182:	2900      	cmp	r1, #0
 8001184:	d146      	bne.n	8001214 <__udivmoddi4+0x150>
 8001186:	42a3      	cmp	r3, r4
 8001188:	d302      	bcc.n	8001190 <__udivmoddi4+0xcc>
 800118a:	4290      	cmp	r0, r2
 800118c:	f0c0 80ee 	bcc.w	800136c <__udivmoddi4+0x2a8>
 8001190:	1a86      	subs	r6, r0, r2
 8001192:	eb64 0303 	sbc.w	r3, r4, r3
 8001196:	2001      	movs	r0, #1
 8001198:	2d00      	cmp	r5, #0
 800119a:	d0e6      	beq.n	800116a <__udivmoddi4+0xa6>
 800119c:	e9c5 6300 	strd	r6, r3, [r5]
 80011a0:	e7e3      	b.n	800116a <__udivmoddi4+0xa6>
 80011a2:	2a00      	cmp	r2, #0
 80011a4:	f040 808f 	bne.w	80012c6 <__udivmoddi4+0x202>
 80011a8:	eba1 040c 	sub.w	r4, r1, ip
 80011ac:	2101      	movs	r1, #1
 80011ae:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80011b2:	fa1f f78c 	uxth.w	r7, ip
 80011b6:	fbb4 f6f8 	udiv	r6, r4, r8
 80011ba:	fb08 4416 	mls	r4, r8, r6, r4
 80011be:	fb07 f006 	mul.w	r0, r7, r6
 80011c2:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80011c6:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80011ca:	4298      	cmp	r0, r3
 80011cc:	d908      	bls.n	80011e0 <__udivmoddi4+0x11c>
 80011ce:	eb1c 0303 	adds.w	r3, ip, r3
 80011d2:	f106 34ff 	add.w	r4, r6, #4294967295
 80011d6:	d202      	bcs.n	80011de <__udivmoddi4+0x11a>
 80011d8:	4298      	cmp	r0, r3
 80011da:	f200 80cb 	bhi.w	8001374 <__udivmoddi4+0x2b0>
 80011de:	4626      	mov	r6, r4
 80011e0:	1a1c      	subs	r4, r3, r0
 80011e2:	fbb4 f0f8 	udiv	r0, r4, r8
 80011e6:	fb08 4410 	mls	r4, r8, r0, r4
 80011ea:	fb00 f707 	mul.w	r7, r0, r7
 80011ee:	fa1f f38e 	uxth.w	r3, lr
 80011f2:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80011f6:	429f      	cmp	r7, r3
 80011f8:	d908      	bls.n	800120c <__udivmoddi4+0x148>
 80011fa:	eb1c 0303 	adds.w	r3, ip, r3
 80011fe:	f100 34ff 	add.w	r4, r0, #4294967295
 8001202:	d202      	bcs.n	800120a <__udivmoddi4+0x146>
 8001204:	429f      	cmp	r7, r3
 8001206:	f200 80ae 	bhi.w	8001366 <__udivmoddi4+0x2a2>
 800120a:	4620      	mov	r0, r4
 800120c:	1bdb      	subs	r3, r3, r7
 800120e:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8001212:	e7a5      	b.n	8001160 <__udivmoddi4+0x9c>
 8001214:	f1c1 0720 	rsb	r7, r1, #32
 8001218:	408b      	lsls	r3, r1
 800121a:	fa22 fc07 	lsr.w	ip, r2, r7
 800121e:	ea4c 0c03 	orr.w	ip, ip, r3
 8001222:	fa24 f607 	lsr.w	r6, r4, r7
 8001226:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800122a:	fbb6 f8f9 	udiv	r8, r6, r9
 800122e:	fa1f fe8c 	uxth.w	lr, ip
 8001232:	fb09 6618 	mls	r6, r9, r8, r6
 8001236:	fa20 f307 	lsr.w	r3, r0, r7
 800123a:	408c      	lsls	r4, r1
 800123c:	fa00 fa01 	lsl.w	sl, r0, r1
 8001240:	fb08 f00e 	mul.w	r0, r8, lr
 8001244:	431c      	orrs	r4, r3
 8001246:	0c23      	lsrs	r3, r4, #16
 8001248:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 800124c:	4298      	cmp	r0, r3
 800124e:	fa02 f201 	lsl.w	r2, r2, r1
 8001252:	d90a      	bls.n	800126a <__udivmoddi4+0x1a6>
 8001254:	eb1c 0303 	adds.w	r3, ip, r3
 8001258:	f108 36ff 	add.w	r6, r8, #4294967295
 800125c:	f080 8081 	bcs.w	8001362 <__udivmoddi4+0x29e>
 8001260:	4298      	cmp	r0, r3
 8001262:	d97e      	bls.n	8001362 <__udivmoddi4+0x29e>
 8001264:	f1a8 0802 	sub.w	r8, r8, #2
 8001268:	4463      	add	r3, ip
 800126a:	1a1e      	subs	r6, r3, r0
 800126c:	fbb6 f3f9 	udiv	r3, r6, r9
 8001270:	fb09 6613 	mls	r6, r9, r3, r6
 8001274:	fb03 fe0e 	mul.w	lr, r3, lr
 8001278:	b2a4      	uxth	r4, r4
 800127a:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 800127e:	45a6      	cmp	lr, r4
 8001280:	d908      	bls.n	8001294 <__udivmoddi4+0x1d0>
 8001282:	eb1c 0404 	adds.w	r4, ip, r4
 8001286:	f103 30ff 	add.w	r0, r3, #4294967295
 800128a:	d266      	bcs.n	800135a <__udivmoddi4+0x296>
 800128c:	45a6      	cmp	lr, r4
 800128e:	d964      	bls.n	800135a <__udivmoddi4+0x296>
 8001290:	3b02      	subs	r3, #2
 8001292:	4464      	add	r4, ip
 8001294:	ea43 4008 	orr.w	r0, r3, r8, lsl #16
 8001298:	fba0 8302 	umull	r8, r3, r0, r2
 800129c:	eba4 040e 	sub.w	r4, r4, lr
 80012a0:	429c      	cmp	r4, r3
 80012a2:	46c6      	mov	lr, r8
 80012a4:	461e      	mov	r6, r3
 80012a6:	d350      	bcc.n	800134a <__udivmoddi4+0x286>
 80012a8:	d04d      	beq.n	8001346 <__udivmoddi4+0x282>
 80012aa:	b155      	cbz	r5, 80012c2 <__udivmoddi4+0x1fe>
 80012ac:	ebba 030e 	subs.w	r3, sl, lr
 80012b0:	eb64 0406 	sbc.w	r4, r4, r6
 80012b4:	fa04 f707 	lsl.w	r7, r4, r7
 80012b8:	40cb      	lsrs	r3, r1
 80012ba:	431f      	orrs	r7, r3
 80012bc:	40cc      	lsrs	r4, r1
 80012be:	e9c5 7400 	strd	r7, r4, [r5]
 80012c2:	2100      	movs	r1, #0
 80012c4:	e751      	b.n	800116a <__udivmoddi4+0xa6>
 80012c6:	fa0c fc02 	lsl.w	ip, ip, r2
 80012ca:	f1c2 0320 	rsb	r3, r2, #32
 80012ce:	40d9      	lsrs	r1, r3
 80012d0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80012d4:	fa20 f303 	lsr.w	r3, r0, r3
 80012d8:	fa00 fe02 	lsl.w	lr, r0, r2
 80012dc:	fbb1 f0f8 	udiv	r0, r1, r8
 80012e0:	fb08 1110 	mls	r1, r8, r0, r1
 80012e4:	4094      	lsls	r4, r2
 80012e6:	431c      	orrs	r4, r3
 80012e8:	fa1f f78c 	uxth.w	r7, ip
 80012ec:	0c23      	lsrs	r3, r4, #16
 80012ee:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80012f2:	fb00 f107 	mul.w	r1, r0, r7
 80012f6:	4299      	cmp	r1, r3
 80012f8:	d908      	bls.n	800130c <__udivmoddi4+0x248>
 80012fa:	eb1c 0303 	adds.w	r3, ip, r3
 80012fe:	f100 36ff 	add.w	r6, r0, #4294967295
 8001302:	d22c      	bcs.n	800135e <__udivmoddi4+0x29a>
 8001304:	4299      	cmp	r1, r3
 8001306:	d92a      	bls.n	800135e <__udivmoddi4+0x29a>
 8001308:	3802      	subs	r0, #2
 800130a:	4463      	add	r3, ip
 800130c:	1a5b      	subs	r3, r3, r1
 800130e:	fbb3 f1f8 	udiv	r1, r3, r8
 8001312:	fb08 3311 	mls	r3, r8, r1, r3
 8001316:	b2a4      	uxth	r4, r4
 8001318:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800131c:	fb01 f307 	mul.w	r3, r1, r7
 8001320:	42a3      	cmp	r3, r4
 8001322:	d908      	bls.n	8001336 <__udivmoddi4+0x272>
 8001324:	eb1c 0404 	adds.w	r4, ip, r4
 8001328:	f101 36ff 	add.w	r6, r1, #4294967295
 800132c:	d213      	bcs.n	8001356 <__udivmoddi4+0x292>
 800132e:	42a3      	cmp	r3, r4
 8001330:	d911      	bls.n	8001356 <__udivmoddi4+0x292>
 8001332:	3902      	subs	r1, #2
 8001334:	4464      	add	r4, ip
 8001336:	1ae4      	subs	r4, r4, r3
 8001338:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800133c:	e73b      	b.n	80011b6 <__udivmoddi4+0xf2>
 800133e:	4604      	mov	r4, r0
 8001340:	e6f2      	b.n	8001128 <__udivmoddi4+0x64>
 8001342:	4608      	mov	r0, r1
 8001344:	e708      	b.n	8001158 <__udivmoddi4+0x94>
 8001346:	45c2      	cmp	sl, r8
 8001348:	d2af      	bcs.n	80012aa <__udivmoddi4+0x1e6>
 800134a:	ebb8 0e02 	subs.w	lr, r8, r2
 800134e:	eb63 060c 	sbc.w	r6, r3, ip
 8001352:	3801      	subs	r0, #1
 8001354:	e7a9      	b.n	80012aa <__udivmoddi4+0x1e6>
 8001356:	4631      	mov	r1, r6
 8001358:	e7ed      	b.n	8001336 <__udivmoddi4+0x272>
 800135a:	4603      	mov	r3, r0
 800135c:	e79a      	b.n	8001294 <__udivmoddi4+0x1d0>
 800135e:	4630      	mov	r0, r6
 8001360:	e7d4      	b.n	800130c <__udivmoddi4+0x248>
 8001362:	46b0      	mov	r8, r6
 8001364:	e781      	b.n	800126a <__udivmoddi4+0x1a6>
 8001366:	4463      	add	r3, ip
 8001368:	3802      	subs	r0, #2
 800136a:	e74f      	b.n	800120c <__udivmoddi4+0x148>
 800136c:	4606      	mov	r6, r0
 800136e:	4623      	mov	r3, r4
 8001370:	4608      	mov	r0, r1
 8001372:	e711      	b.n	8001198 <__udivmoddi4+0xd4>
 8001374:	3e02      	subs	r6, #2
 8001376:	4463      	add	r3, ip
 8001378:	e732      	b.n	80011e0 <__udivmoddi4+0x11c>
 800137a:	bf00      	nop

0800137c <__aeabi_idiv0>:
 800137c:	4770      	bx	lr
 800137e:	bf00      	nop

08001380 <BMP280_ReadRegister>:

	float altitude = (T0 / alpha) * (1 - pow((pressure / P0), (1 / beta)));
    return altitude;
}

uint8_t BMP280_ReadRegister(uint8_t reg) {
 8001380:	b500      	push	{lr}
 8001382:	b085      	sub	sp, #20
 8001384:	f88d 0007 	strb.w	r0, [sp, #7]

    uint8_t received_data;
    Write_GPIO(PA, 8, LOW); // Disable CS
 8001388:	2200      	movs	r2, #0
 800138a:	2108      	movs	r1, #8
 800138c:	2001      	movs	r0, #1
 800138e:	f000 fd29 	bl	8001de4 <Write_GPIO>
    SPI2_TX(&reg, 1);
 8001392:	2101      	movs	r1, #1
 8001394:	f10d 0007 	add.w	r0, sp, #7
 8001398:	f000 fda8 	bl	8001eec <SPI2_TX>
    SPI2_RX(&received_data, 1);
 800139c:	2101      	movs	r1, #1
 800139e:	f10d 000f 	add.w	r0, sp, #15
 80013a2:	f000 fdc1 	bl	8001f28 <SPI2_RX>
    Write_GPIO(PA, 8, HIGH); // Enable CS
 80013a6:	2201      	movs	r2, #1
 80013a8:	2108      	movs	r1, #8
 80013aa:	4610      	mov	r0, r2
 80013ac:	f000 fd1a 	bl	8001de4 <Write_GPIO>
    return received_data;
}
 80013b0:	f89d 000f 	ldrb.w	r0, [sp, #15]
 80013b4:	b005      	add	sp, #20
 80013b6:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080013bc <BMP280_ReadTemperature>:
uint8_t BMP280_ReadTemperature(BMP280 *devBMP) {
 80013bc:	b538      	push	{r3, r4, r5, lr}
 80013be:	4604      	mov	r4, r0
	while((BMP280_ReadRegister(BMP280_REG_STATUS) & 0x04) != 0 || (BMP280_ReadRegister(BMP280_REG_STATUS) & 0x01) != 0);
 80013c0:	20f3      	movs	r0, #243	@ 0xf3
 80013c2:	f7ff ffdd 	bl	8001380 <BMP280_ReadRegister>
 80013c6:	f010 0f04 	tst.w	r0, #4
 80013ca:	d1f9      	bne.n	80013c0 <BMP280_ReadTemperature+0x4>
 80013cc:	20f3      	movs	r0, #243	@ 0xf3
 80013ce:	f7ff ffd7 	bl	8001380 <BMP280_ReadRegister>
 80013d2:	f010 0f01 	tst.w	r0, #1
 80013d6:	d1f3      	bne.n	80013c0 <BMP280_ReadTemperature+0x4>
    int32_t adc_T = (BMP280_ReadRegister(BMP280_REG_TEMP_MSB) << 12) |
 80013d8:	20fa      	movs	r0, #250	@ 0xfa
 80013da:	f7ff ffd1 	bl	8001380 <BMP280_ReadRegister>
 80013de:	0305      	lsls	r5, r0, #12
                    (BMP280_ReadRegister(BMP280_REG_TEMP_LSB) << 4) |
 80013e0:	20fb      	movs	r0, #251	@ 0xfb
 80013e2:	f7ff ffcd 	bl	8001380 <BMP280_ReadRegister>
    int32_t adc_T = (BMP280_ReadRegister(BMP280_REG_TEMP_MSB) << 12) |
 80013e6:	ea45 1500 	orr.w	r5, r5, r0, lsl #4
					((BMP280_ReadRegister(BMP280_REG_TEMP_XLSB) >> 4) & 0x0F);
 80013ea:	20fc      	movs	r0, #252	@ 0xfc
 80013ec:	f7ff ffc8 	bl	8001380 <BMP280_ReadRegister>
 80013f0:	f3c0 1307 	ubfx	r3, r0, #4, #8
    int32_t adc_T = (BMP280_ReadRegister(BMP280_REG_TEMP_MSB) << 12) |
 80013f4:	ea45 0203 	orr.w	r2, r5, r3
    int32_t var1 = ((((adc_T >> 3) - ((int32_t)devBMP->calib_data.dig_T1 << 1))) * ((int32_t)devBMP->calib_data.dig_T2)) >> 11;
 80013f8:	8923      	ldrh	r3, [r4, #8]
 80013fa:	0059      	lsls	r1, r3, #1
 80013fc:	ebc1 01e2 	rsb	r1, r1, r2, asr #3
 8001400:	f9b4 000a 	ldrsh.w	r0, [r4, #10]
 8001404:	fb00 f101 	mul.w	r1, r0, r1
    int32_t var2 = (((((adc_T >> 4) - ((int32_t)devBMP->calib_data.dig_T1)) * ((adc_T >> 4) - ((int32_t)devBMP->calib_data.dig_T1))) >> 12) * ((int32_t)devBMP->calib_data.dig_T3)) >> 14;
 8001408:	ebc3 1322 	rsb	r3, r3, r2, asr #4
 800140c:	fb03 f303 	mul.w	r3, r3, r3
 8001410:	131b      	asrs	r3, r3, #12
 8001412:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001416:	fb02 f303 	mul.w	r3, r2, r3
 800141a:	139b      	asrs	r3, r3, #14
    devBMP->t_fine = var1 + var2;
 800141c:	eb03 23e1 	add.w	r3, r3, r1, asr #11
 8001420:	6223      	str	r3, [r4, #32]
    int32_t T = (devBMP->t_fine * 5 + 128) >> 8;
 8001422:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8001426:	3380      	adds	r3, #128	@ 0x80
    devBMP->temp_C = (float)(T / 100.0); // + devBMP->temperature_ref;
 8001428:	1218      	asrs	r0, r3, #8
 800142a:	f7fe ffeb 	bl	8000404 <__aeabi_i2d>
 800142e:	2200      	movs	r2, #0
 8001430:	4b03      	ldr	r3, [pc, #12]	@ (8001440 <BMP280_ReadTemperature+0x84>)
 8001432:	f7ff f97b 	bl	800072c <__aeabi_ddiv>
 8001436:	f7ff fb27 	bl	8000a88 <__aeabi_d2f>
 800143a:	6060      	str	r0, [r4, #4]
}
 800143c:	2001      	movs	r0, #1
 800143e:	bd38      	pop	{r3, r4, r5, pc}
 8001440:	40590000 	.word	0x40590000

08001444 <BMP280_ReadPressure>:
uint8_t BMP280_ReadPressure(BMP280 *devBMP) {
 8001444:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001448:	4605      	mov	r5, r0
	while((BMP280_ReadRegister(BMP280_REG_STATUS) & 0x04) != 0 || (BMP280_ReadRegister(BMP280_REG_STATUS) & 0x01) != 0);
 800144a:	20f3      	movs	r0, #243	@ 0xf3
 800144c:	f7ff ff98 	bl	8001380 <BMP280_ReadRegister>
 8001450:	f010 0f04 	tst.w	r0, #4
 8001454:	d1f9      	bne.n	800144a <BMP280_ReadPressure+0x6>
 8001456:	20f3      	movs	r0, #243	@ 0xf3
 8001458:	f7ff ff92 	bl	8001380 <BMP280_ReadRegister>
 800145c:	f010 0401 	ands.w	r4, r0, #1
 8001460:	d1f3      	bne.n	800144a <BMP280_ReadPressure+0x6>
    int32_t adc_P = (BMP280_ReadRegister(BMP280_REG_PRESS_MSB) << 12) |
 8001462:	20f7      	movs	r0, #247	@ 0xf7
 8001464:	f7ff ff8c 	bl	8001380 <BMP280_ReadRegister>
 8001468:	0306      	lsls	r6, r0, #12
                    (BMP280_ReadRegister(BMP280_REG_PRESS_LSB) << 4) |
 800146a:	20f8      	movs	r0, #248	@ 0xf8
 800146c:	f7ff ff88 	bl	8001380 <BMP280_ReadRegister>
    int32_t adc_P = (BMP280_ReadRegister(BMP280_REG_PRESS_MSB) << 12) |
 8001470:	ea46 1600 	orr.w	r6, r6, r0, lsl #4
                    ((BMP280_ReadRegister(BMP280_REG_PRESS_XLSB) >> 4) & 0x0F);
 8001474:	20f9      	movs	r0, #249	@ 0xf9
 8001476:	f7ff ff83 	bl	8001380 <BMP280_ReadRegister>
 800147a:	f3c0 1307 	ubfx	r3, r0, #4, #8
    int32_t adc_P = (BMP280_ReadRegister(BMP280_REG_PRESS_MSB) << 12) |
 800147e:	ea46 0103 	orr.w	r1, r6, r3
    int64_t var1 = ((int64_t)devBMP->t_fine) - 128000;
 8001482:	6a28      	ldr	r0, [r5, #32]
 8001484:	17c3      	asrs	r3, r0, #31
 8001486:	f5b0 30fa 	subs.w	r0, r0, #128000	@ 0x1f400
 800148a:	f143 33ff 	adc.w	r3, r3, #4294967295
    int64_t var2 = var1 * var1 * (int64_t)devBMP->calib_data.dig_P6;
 800148e:	fb00 f203 	mul.w	r2, r0, r3
 8001492:	fba0 7800 	umull	r7, r8, r0, r0
 8001496:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 800149a:	f9b5 2018 	ldrsh.w	r2, [r5, #24]
 800149e:	17d6      	asrs	r6, r2, #31
 80014a0:	fb07 f606 	mul.w	r6, r7, r6
 80014a4:	fb02 6608 	mla	r6, r2, r8, r6
 80014a8:	fba7 c202 	umull	ip, r2, r7, r2
 80014ac:	4416      	add	r6, r2
    var2 = var2 + ((var1 * (int64_t)devBMP->calib_data.dig_P5) << 17);
 80014ae:	f9b5 2016 	ldrsh.w	r2, [r5, #22]
 80014b2:	ea4f 79e2 	mov.w	r9, r2, asr #31
 80014b6:	fb02 fe03 	mul.w	lr, r2, r3
 80014ba:	fb00 ee09 	mla	lr, r0, r9, lr
 80014be:	fba2 2900 	umull	r2, r9, r2, r0
 80014c2:	44ce      	add	lr, r9
 80014c4:	ea4f 4e4e 	mov.w	lr, lr, lsl #17
 80014c8:	ea4e 3ed2 	orr.w	lr, lr, r2, lsr #15
 80014cc:	0452      	lsls	r2, r2, #17
 80014ce:	eb12 0c0c 	adds.w	ip, r2, ip
 80014d2:	eb46 060e 	adc.w	r6, r6, lr
    var2 = var2 + (((int64_t)devBMP->calib_data.dig_P4) << 35);
 80014d6:	f9b5 2014 	ldrsh.w	r2, [r5, #20]
 80014da:	eb06 0ec2 	add.w	lr, r6, r2, lsl #3
    var1 = ((var1 * var1 * (int64_t)devBMP->calib_data.dig_P3) >> 8) + ((var1 * (int64_t)devBMP->calib_data.dig_P2) << 12);
 80014de:	f9b5 2012 	ldrsh.w	r2, [r5, #18]
 80014e2:	17d6      	asrs	r6, r2, #31
 80014e4:	fb07 f606 	mul.w	r6, r7, r6
 80014e8:	fb02 6608 	mla	r6, r2, r8, r6
 80014ec:	fba7 2702 	umull	r2, r7, r7, r2
 80014f0:	443e      	add	r6, r7
 80014f2:	0a12      	lsrs	r2, r2, #8
 80014f4:	ea42 6206 	orr.w	r2, r2, r6, lsl #24
 80014f8:	f9b5 7010 	ldrsh.w	r7, [r5, #16]
 80014fc:	ea4f 78e7 	mov.w	r8, r7, asr #31
 8001500:	fb07 f303 	mul.w	r3, r7, r3
 8001504:	fb00 3308 	mla	r3, r0, r8, r3
 8001508:	fba7 7000 	umull	r7, r0, r7, r0
 800150c:	4403      	add	r3, r0
 800150e:	031b      	lsls	r3, r3, #12
 8001510:	ea43 5317 	orr.w	r3, r3, r7, lsr #20
 8001514:	0338      	lsls	r0, r7, #12
 8001516:	1812      	adds	r2, r2, r0
 8001518:	eb43 2326 	adc.w	r3, r3, r6, asr #8
    var1 = (((((int64_t)1) << 47) + var1)) * ((int64_t)devBMP->calib_data.dig_P1) >> 33;
 800151c:	f503 4300 	add.w	r3, r3, #32768	@ 0x8000
 8001520:	89ee      	ldrh	r6, [r5, #14]
 8001522:	fba2 2006 	umull	r2, r0, r2, r6
 8001526:	fb06 0003 	mla	r0, r6, r3, r0
 800152a:	1042      	asrs	r2, r0, #1
 800152c:	17c3      	asrs	r3, r0, #31
    if (var1 == 0) {
 800152e:	ea53 0060 	orrs.w	r0, r3, r0, asr #1
 8001532:	d065      	beq.n	8001600 <BMP280_ReadPressure+0x1bc>
    int64_t p = 1048576 - adc_P;
 8001534:	f5c1 1480 	rsb	r4, r1, #1048576	@ 0x100000
    p = (((p << 31) - var2) * 3125) / var1;
 8001538:	1061      	asrs	r1, r4, #1
 800153a:	07e4      	lsls	r4, r4, #31
 800153c:	ebb4 040c 	subs.w	r4, r4, ip
 8001540:	eb61 010e 	sbc.w	r1, r1, lr
 8001544:	1920      	adds	r0, r4, r4
 8001546:	eb41 0c01 	adc.w	ip, r1, r1
 800154a:	1900      	adds	r0, r0, r4
 800154c:	eb41 0c0c 	adc.w	ip, r1, ip
 8001550:	ea4f 168c 	mov.w	r6, ip, lsl #6
 8001554:	ea46 6690 	orr.w	r6, r6, r0, lsr #26
 8001558:	0187      	lsls	r7, r0, #6
 800155a:	19c0      	adds	r0, r0, r7
 800155c:	eb4c 0c06 	adc.w	ip, ip, r6
 8001560:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8001564:	ea4c 7c90 	orr.w	ip, ip, r0, lsr #30
 8001568:	0080      	lsls	r0, r0, #2
 800156a:	1900      	adds	r0, r0, r4
 800156c:	eb41 0c0c 	adc.w	ip, r1, ip
 8001570:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8001574:	ea4c 7c90 	orr.w	ip, ip, r0, lsr #30
 8001578:	0080      	lsls	r0, r0, #2
 800157a:	1900      	adds	r0, r0, r4
 800157c:	eb41 010c 	adc.w	r1, r1, ip
 8001580:	f7ff fd50 	bl	8001024 <__aeabi_ldivmod>
 8001584:	4603      	mov	r3, r0
    var1 = (((int64_t)devBMP->calib_data.dig_P9) * (p >> 13) * (p >> 13)) >> 25;
 8001586:	f9b5 401e 	ldrsh.w	r4, [r5, #30]
 800158a:	ea4f 7ce4 	mov.w	ip, r4, asr #31
 800158e:	0b42      	lsrs	r2, r0, #13
 8001590:	ea42 42c1 	orr.w	r2, r2, r1, lsl #19
 8001594:	134f      	asrs	r7, r1, #13
 8001596:	fb04 f607 	mul.w	r6, r4, r7
 800159a:	fb02 660c 	mla	r6, r2, ip, r6
 800159e:	fba4 4c02 	umull	r4, ip, r4, r2
 80015a2:	4466      	add	r6, ip
 80015a4:	fb02 f606 	mul.w	r6, r2, r6
 80015a8:	fb04 6607 	mla	r6, r4, r7, r6
 80015ac:	fba2 2404 	umull	r2, r4, r2, r4
 80015b0:	4434      	add	r4, r6
 80015b2:	0e52      	lsrs	r2, r2, #25
 80015b4:	ea42 12c4 	orr.w	r2, r2, r4, lsl #7
    var2 = (((int64_t)devBMP->calib_data.dig_P8) * p) >> 19;
 80015b8:	f9b5 601c 	ldrsh.w	r6, [r5, #28]
 80015bc:	ea4f 7ce6 	mov.w	ip, r6, asr #31
 80015c0:	fb06 f701 	mul.w	r7, r6, r1
 80015c4:	fb0c 7700 	mla	r7, ip, r0, r7
 80015c8:	fba6 6000 	umull	r6, r0, r6, r0
 80015cc:	4407      	add	r7, r0
 80015ce:	0cf0      	lsrs	r0, r6, #19
 80015d0:	ea40 3047 	orr.w	r0, r0, r7, lsl #13
    p = ((p + var1 + var2) >> 8) + (((int64_t)devBMP->calib_data.dig_P7) << 4);
 80015d4:	189b      	adds	r3, r3, r2
 80015d6:	eb41 6264 	adc.w	r2, r1, r4, asr #25
 80015da:	181b      	adds	r3, r3, r0
 80015dc:	eb42 42e7 	adc.w	r2, r2, r7, asr #19
 80015e0:	0a1b      	lsrs	r3, r3, #8
 80015e2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80015e6:	f9b5 001a 	ldrsh.w	r0, [r5, #26]
    devBMP->pressure_Pa = (float)p / (float)(1 << 8); // + devBMP->pressure_ref;
 80015ea:	eb03 1000 	add.w	r0, r3, r0, lsl #4
 80015ee:	2100      	movs	r1, #0
 80015f0:	f7ff fb6a 	bl	8000cc8 <__aeabi_l2f>
 80015f4:	f04f 516e 	mov.w	r1, #998244352	@ 0x3b800000
 80015f8:	f7ff fba4 	bl	8000d44 <__aeabi_fmul>
 80015fc:	6028      	str	r0, [r5, #0]
    return 1; // OK
 80015fe:	2401      	movs	r4, #1
}
 8001600:	4620      	mov	r0, r4
 8001602:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08001606 <BMP280_MeasureReference>:
uint8_t BMP280_MeasureReference(BMP280 *devBMP, float temp_ref, float press_ref) {
 8001606:	b570      	push	{r4, r5, r6, lr}
 8001608:	4604      	mov	r4, r0
 800160a:	460e      	mov	r6, r1
 800160c:	4615      	mov	r5, r2
    devBMP->temperature_ref = BMP280_ReadTemperature(devBMP) - temp_ref;
 800160e:	f7ff fed5 	bl	80013bc <BMP280_ReadTemperature>
 8001612:	f7ff fb43 	bl	8000c9c <__aeabi_i2f>
 8001616:	4631      	mov	r1, r6
 8001618:	f7ff fa8a 	bl	8000b30 <__aeabi_fsub>
 800161c:	6260      	str	r0, [r4, #36]	@ 0x24
    devBMP->pressure_ref = BMP280_ReadPressure(devBMP) - press_ref;
 800161e:	4620      	mov	r0, r4
 8001620:	f7ff ff10 	bl	8001444 <BMP280_ReadPressure>
 8001624:	f7ff fb3a 	bl	8000c9c <__aeabi_i2f>
 8001628:	4629      	mov	r1, r5
 800162a:	f7ff fa81 	bl	8000b30 <__aeabi_fsub>
 800162e:	62a0      	str	r0, [r4, #40]	@ 0x28
}
 8001630:	2001      	movs	r0, #1
 8001632:	bd70      	pop	{r4, r5, r6, pc}

08001634 <BMP280_ReadCalibrationData>:
void BMP280_ReadCalibrationData(BMP280 *devBMP) {
 8001634:	b530      	push	{r4, r5, lr}
 8001636:	b089      	sub	sp, #36	@ 0x24
 8001638:	4605      	mov	r5, r0
	while((BMP280_ReadRegister(BMP280_REG_STATUS) & 0x04) != 0);
 800163a:	20f3      	movs	r0, #243	@ 0xf3
 800163c:	f7ff fea0 	bl	8001380 <BMP280_ReadRegister>
 8001640:	f010 0f04 	tst.w	r0, #4
 8001644:	d1f9      	bne.n	800163a <BMP280_ReadCalibrationData+0x6>
    for (int i = 0; i < 26; i++) {
 8001646:	2400      	movs	r4, #0
 8001648:	e00a      	b.n	8001660 <BMP280_ReadCalibrationData+0x2c>
        calib[i] = BMP280_ReadRegister(BMP280_REG_CALIB_00 + i);
 800164a:	f1a4 0078 	sub.w	r0, r4, #120	@ 0x78
 800164e:	b2c0      	uxtb	r0, r0
 8001650:	f7ff fe96 	bl	8001380 <BMP280_ReadRegister>
 8001654:	f104 0320 	add.w	r3, r4, #32
 8001658:	446b      	add	r3, sp
 800165a:	f803 0c1c 	strb.w	r0, [r3, #-28]
    for (int i = 0; i < 26; i++) {
 800165e:	3401      	adds	r4, #1
 8001660:	2c19      	cmp	r4, #25
 8001662:	ddf2      	ble.n	800164a <BMP280_ReadCalibrationData+0x16>
    devBMP->calib_data.dig_T1 = (calib[1] << 8) | calib[0];
 8001664:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8001668:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800166c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001670:	812b      	strh	r3, [r5, #8]
    devBMP->calib_data.dig_T2 = (calib[3] << 8) | calib[2];
 8001672:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8001676:	f89d 3006 	ldrb.w	r3, [sp, #6]
 800167a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800167e:	816b      	strh	r3, [r5, #10]
    devBMP->calib_data.dig_T3 = (calib[5] << 8) | calib[4];
 8001680:	f89d 2009 	ldrb.w	r2, [sp, #9]
 8001684:	f89d 3008 	ldrb.w	r3, [sp, #8]
 8001688:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800168c:	81ab      	strh	r3, [r5, #12]
    devBMP->calib_data.dig_P1 = (calib[7] << 8) | calib[6];
 800168e:	f89d 200b 	ldrb.w	r2, [sp, #11]
 8001692:	f89d 300a 	ldrb.w	r3, [sp, #10]
 8001696:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800169a:	81eb      	strh	r3, [r5, #14]
    devBMP->calib_data.dig_P2 = (calib[9] << 8) | calib[8];
 800169c:	f89d 200d 	ldrb.w	r2, [sp, #13]
 80016a0:	f89d 300c 	ldrb.w	r3, [sp, #12]
 80016a4:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80016a8:	822b      	strh	r3, [r5, #16]
    devBMP->calib_data.dig_P3 = (calib[11] << 8) | calib[10];
 80016aa:	f89d 200f 	ldrb.w	r2, [sp, #15]
 80016ae:	f89d 300e 	ldrb.w	r3, [sp, #14]
 80016b2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80016b6:	826b      	strh	r3, [r5, #18]
    devBMP->calib_data.dig_P4 = (calib[13] << 8) | calib[12];
 80016b8:	f89d 2011 	ldrb.w	r2, [sp, #17]
 80016bc:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80016c0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80016c4:	82ab      	strh	r3, [r5, #20]
    devBMP->calib_data.dig_P5 = (calib[15] << 8) | calib[14];
 80016c6:	f89d 2013 	ldrb.w	r2, [sp, #19]
 80016ca:	f89d 3012 	ldrb.w	r3, [sp, #18]
 80016ce:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80016d2:	82eb      	strh	r3, [r5, #22]
    devBMP->calib_data.dig_P6 = (calib[17] << 8) | calib[16];
 80016d4:	f89d 2015 	ldrb.w	r2, [sp, #21]
 80016d8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80016dc:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80016e0:	832b      	strh	r3, [r5, #24]
    devBMP->calib_data.dig_P7 = (calib[19] << 8) | calib[18];
 80016e2:	f89d 2017 	ldrb.w	r2, [sp, #23]
 80016e6:	f89d 3016 	ldrb.w	r3, [sp, #22]
 80016ea:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80016ee:	836b      	strh	r3, [r5, #26]
    devBMP->calib_data.dig_P8 = (calib[21] << 8) | calib[20];
 80016f0:	f89d 2019 	ldrb.w	r2, [sp, #25]
 80016f4:	f89d 3018 	ldrb.w	r3, [sp, #24]
 80016f8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80016fc:	83ab      	strh	r3, [r5, #28]
    devBMP->calib_data.dig_P9 = (calib[23] << 8) | calib[22];
 80016fe:	f89d 201b 	ldrb.w	r2, [sp, #27]
 8001702:	f89d 301a 	ldrb.w	r3, [sp, #26]
 8001706:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800170a:	83eb      	strh	r3, [r5, #30]
}
 800170c:	b009      	add	sp, #36	@ 0x24
 800170e:	bd30      	pop	{r4, r5, pc}

08001710 <BMP280_WriteRegister>:

uint8_t BMP280_WriteRegister(uint8_t reg, uint8_t value) {
 8001710:	b500      	push	{lr}
 8001712:	b083      	sub	sp, #12

    uint8_t data[2] = {reg, value};
 8001714:	f88d 0004 	strb.w	r0, [sp, #4]
 8001718:	f88d 1005 	strb.w	r1, [sp, #5]
    Write_GPIO(PA, 8, LOW); // Disable CS
 800171c:	2200      	movs	r2, #0
 800171e:	2108      	movs	r1, #8
 8001720:	2001      	movs	r0, #1
 8001722:	f000 fb5f 	bl	8001de4 <Write_GPIO>
    SPI2_TX(data, 2);
 8001726:	2102      	movs	r1, #2
 8001728:	a801      	add	r0, sp, #4
 800172a:	f000 fbdf 	bl	8001eec <SPI2_TX>
    Write_GPIO(PA, 8, HIGH); // Enable CS
 800172e:	2201      	movs	r2, #1
 8001730:	2108      	movs	r1, #8
 8001732:	4610      	mov	r0, r2
 8001734:	f000 fb56 	bl	8001de4 <Write_GPIO>
    return 1; // OK
}
 8001738:	2001      	movs	r0, #1
 800173a:	b003      	add	sp, #12
 800173c:	f85d fb04 	ldr.w	pc, [sp], #4

08001740 <BMP280_Init>:
uint8_t BMP280_Init(BMP280 *devBMP, unsigned short spi_port) {
 8001740:	b510      	push	{r4, lr}
 8001742:	4604      	mov	r4, r0
	SPI_Init(spi_port);
 8001744:	4608      	mov	r0, r1
 8001746:	f000 fb6d 	bl	8001e24 <SPI_Init>
    BMP280_WriteRegister(BMP280_REG_RESET, BMP280_RESET_WORD); // Reset
 800174a:	21b6      	movs	r1, #182	@ 0xb6
 800174c:	20e0      	movs	r0, #224	@ 0xe0
 800174e:	f7ff ffdf 	bl	8001710 <BMP280_WriteRegister>
    if (BMP280_ReadRegister(BMP280_REG_ID) != BMP280_DEVICE_ID) {
 8001752:	20d0      	movs	r0, #208	@ 0xd0
 8001754:	f7ff fe14 	bl	8001380 <BMP280_ReadRegister>
 8001758:	2858      	cmp	r0, #88	@ 0x58
 800175a:	d001      	beq.n	8001760 <BMP280_Init+0x20>
        return 0; // Error
 800175c:	2000      	movs	r0, #0
}
 800175e:	bd10      	pop	{r4, pc}
    BMP280_ReadCalibrationData(devBMP);
 8001760:	4620      	mov	r0, r4
 8001762:	f7ff ff67 	bl	8001634 <BMP280_ReadCalibrationData>
    BMP280_WriteRegister(BMP280_REG_CTRL_MEAS, BMP280_SETTING_CTRL_MEAS_NORMAL);
 8001766:	2157      	movs	r1, #87	@ 0x57
 8001768:	20f4      	movs	r0, #244	@ 0xf4
 800176a:	f7ff ffd1 	bl	8001710 <BMP280_WriteRegister>
    BMP280_WriteRegister(BMP280_REG_CONFIG, BMP280_SETTING_CONFIG);
 800176e:	2108      	movs	r1, #8
 8001770:	20f5      	movs	r0, #245	@ 0xf5
 8001772:	f7ff ffcd 	bl	8001710 <BMP280_WriteRegister>
    BMP280_MeasureReference(devBMP, T0, 101325.0);
 8001776:	4a03      	ldr	r2, [pc, #12]	@ (8001784 <BMP280_Init+0x44>)
 8001778:	4903      	ldr	r1, [pc, #12]	@ (8001788 <BMP280_Init+0x48>)
 800177a:	4620      	mov	r0, r4
 800177c:	f7ff ff43 	bl	8001606 <BMP280_MeasureReference>
    return 1;
 8001780:	2001      	movs	r0, #1
 8001782:	e7ec      	b.n	800175e <BMP280_Init+0x1e>
 8001784:	47c5e680 	.word	0x47c5e680
 8001788:	43901333 	.word	0x43901333

0800178c <CD74HC4051_Init>:

uint32_t ADC_Sampling (ADC_HandleTypeDef *hadc);

uint8_t CD74HC4051_Init (ADC_HandleTypeDef *hadc) {

	if (hadc == NULL) {
 800178c:	b370      	cbz	r0, 80017ec <CD74HC4051_Init+0x60>
uint8_t CD74HC4051_Init (ADC_HandleTypeDef *hadc) {
 800178e:	b510      	push	{r4, lr}
 8001790:	4604      	mov	r4, r0
		return 0; // Error
	}
	// Read pin
	Init_GPIO(PA, 0, IN, I_AN); // MUL_AN
 8001792:	2300      	movs	r3, #0
 8001794:	461a      	mov	r2, r3
 8001796:	4619      	mov	r1, r3
 8001798:	2001      	movs	r0, #1
 800179a:	f000 fad9 	bl	8001d50 <Init_GPIO>
	// Batteries
	Init_GPIO(PC, 13, OUT2, O_GP_PP); // MUL_S0
 800179e:	2300      	movs	r3, #0
 80017a0:	2202      	movs	r2, #2
 80017a2:	210d      	movs	r1, #13
 80017a4:	2003      	movs	r0, #3
 80017a6:	f000 fad3 	bl	8001d50 <Init_GPIO>
	Init_GPIO(PC, 14, OUT2, O_GP_PP); // MUL_S1
 80017aa:	2300      	movs	r3, #0
 80017ac:	2202      	movs	r2, #2
 80017ae:	210e      	movs	r1, #14
 80017b0:	2003      	movs	r0, #3
 80017b2:	f000 facd 	bl	8001d50 <Init_GPIO>
	Init_GPIO(PC, 15, OUT2, O_GP_PP); // MUL_S2
 80017b6:	2300      	movs	r3, #0
 80017b8:	2202      	movs	r2, #2
 80017ba:	210f      	movs	r1, #15
 80017bc:	2003      	movs	r0, #3
 80017be:	f000 fac7 	bl	8001d50 <Init_GPIO>
	Init_GPIO(PB, 8, OUT2, O_GP_PP); // MUL_E~
 80017c2:	2300      	movs	r3, #0
 80017c4:	2202      	movs	r2, #2
 80017c6:	2108      	movs	r1, #8
 80017c8:	4610      	mov	r0, r2
 80017ca:	f000 fac1 	bl	8001d50 <Init_GPIO>
	// Set MUL_E~ (inverse)
	Write_GPIO(PB, 8, HIGH);
 80017ce:	2201      	movs	r2, #1
 80017d0:	2108      	movs	r1, #8
 80017d2:	2002      	movs	r0, #2
 80017d4:	f000 fb06 	bl	8001de4 <Write_GPIO>
	// Pyros
	Pyro_Init();
 80017d8:	f000 fa02 	bl	8001be0 <Pyro_Init>

	//ADC calibration
	ADC_Stop(hadc);
 80017dc:	4620      	mov	r0, r4
 80017de:	f000 fa97 	bl	8001d10 <ADC_Stop>
	ADC_Calibration(hadc);
 80017e2:	4620      	mov	r0, r4
 80017e4:	f000 fa8f 	bl	8001d06 <ADC_Calibration>

	return 1; // OK
 80017e8:	2001      	movs	r0, #1
}
 80017ea:	bd10      	pop	{r4, pc}
		return 0; // Error
 80017ec:	2000      	movs	r0, #0
}
 80017ee:	4770      	bx	lr

080017f0 <CD74HC4051_AnRead>:

uint16_t CD74HC4051_AnRead(ADC_HandleTypeDef *hadc, uint8_t channel, uint8_t pyro_channel, float vref) {

	if (hadc == NULL) {
 80017f0:	2800      	cmp	r0, #0
 80017f2:	d060      	beq.n	80018b6 <CD74HC4051_AnRead+0xc6>
uint16_t CD74HC4051_AnRead(ADC_HandleTypeDef *hadc, uint8_t channel, uint8_t pyro_channel, float vref) {
 80017f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80017f6:	460c      	mov	r4, r1
 80017f8:	4615      	mov	r5, r2
 80017fa:	461e      	mov	r6, r3
 80017fc:	4607      	mov	r7, r0
		return 0;
	}
	if(channel == CHANNEL_1 || channel == CHANNEL_7) {
 80017fe:	2901      	cmp	r1, #1
 8001800:	d05b      	beq.n	80018ba <CD74HC4051_AnRead+0xca>
		return 0;
	}

	ADC_Start(hadc);
 8001802:	f000 fa7b 	bl	8001cfc <ADC_Start>

	Write_GPIO(PB, 8, HIGH); // MUL_E~ (inverse)
 8001806:	2201      	movs	r2, #1
 8001808:	2108      	movs	r1, #8
 800180a:	2002      	movs	r0, #2
 800180c:	f000 faea 	bl	8001de4 <Write_GPIO>
	Write_GPIO(PA, 15, LOW); // Pyro_Test (inverse)
 8001810:	2200      	movs	r2, #0
 8001812:	210f      	movs	r1, #15
 8001814:	2001      	movs	r0, #1
 8001816:	f000 fae5 	bl	8001de4 <Write_GPIO>
	if(channel == CHANNEL_0) {
 800181a:	b98c      	cbnz	r4, 8001840 <CD74HC4051_AnRead+0x50>
		if(pyro_channel == PYRO_CHANNEL_0) {
 800181c:	2d01      	cmp	r5, #1
 800181e:	d003      	beq.n	8001828 <CD74HC4051_AnRead+0x38>
			Write_GPIO(PB, 4, HIGH); // Pyro_ON0
		} else if (pyro_channel == PYRO_CHANNEL_1) {
 8001820:	2d02      	cmp	r5, #2
 8001822:	d007      	beq.n	8001834 <CD74HC4051_AnRead+0x44>
			Write_GPIO(PB, 5, HIGH); // Pyro_ON1
		} else {
			return 0;
 8001824:	2000      	movs	r0, #0
 8001826:	e045      	b.n	80018b4 <CD74HC4051_AnRead+0xc4>
			Write_GPIO(PB, 4, HIGH); // Pyro_ON0
 8001828:	2201      	movs	r2, #1
 800182a:	2104      	movs	r1, #4
 800182c:	2002      	movs	r0, #2
 800182e:	f000 fad9 	bl	8001de4 <Write_GPIO>
 8001832:	e017      	b.n	8001864 <CD74HC4051_AnRead+0x74>
			Write_GPIO(PB, 5, HIGH); // Pyro_ON1
 8001834:	2201      	movs	r2, #1
 8001836:	2105      	movs	r1, #5
 8001838:	2002      	movs	r0, #2
 800183a:	f000 fad3 	bl	8001de4 <Write_GPIO>
 800183e:	e011      	b.n	8001864 <CD74HC4051_AnRead+0x74>
		}
	} else {
		// Set channel
		Write_GPIO(PC, 13, (channel & 0x01) ? HIGH : LOW);
 8001840:	f004 0201 	and.w	r2, r4, #1
 8001844:	210d      	movs	r1, #13
 8001846:	2003      	movs	r0, #3
 8001848:	f000 facc 	bl	8001de4 <Write_GPIO>
		Write_GPIO(PC, 14, (channel & 0x02) ? HIGH : LOW);
 800184c:	f3c4 0240 	ubfx	r2, r4, #1, #1
 8001850:	210e      	movs	r1, #14
 8001852:	2003      	movs	r0, #3
 8001854:	f000 fac6 	bl	8001de4 <Write_GPIO>
		Write_GPIO(PC, 15, (channel & 0x04) ? HIGH : LOW);
 8001858:	f3c4 0280 	ubfx	r2, r4, #2, #1
 800185c:	210f      	movs	r1, #15
 800185e:	2003      	movs	r0, #3
 8001860:	f000 fac0 	bl	8001de4 <Write_GPIO>
	}
	// Reactiver multiplexer pour lecture
	Write_GPIO(PB, 8, LOW); // MUL_E~ (inverse)
 8001864:	2200      	movs	r2, #0
 8001866:	2108      	movs	r1, #8
 8001868:	2002      	movs	r0, #2
 800186a:	f000 fabb 	bl	8001de4 <Write_GPIO>
	// Lecture
	uint32_t adc_value = ADC_Sampling(hadc);
 800186e:	4638      	mov	r0, r7
 8001870:	f000 fa54 	bl	8001d1c <ADC_Sampling>
 8001874:	4604      	mov	r4, r0
	// Desactiver pyros (ordre important)
	Write_GPIO(PB, 4, LOW); // Pyro_ON0
 8001876:	2200      	movs	r2, #0
 8001878:	2104      	movs	r1, #4
 800187a:	2002      	movs	r0, #2
 800187c:	f000 fab2 	bl	8001de4 <Write_GPIO>
	Write_GPIO(PB, 5, LOW); // Pyro_ON1
 8001880:	2200      	movs	r2, #0
 8001882:	2105      	movs	r1, #5
 8001884:	2002      	movs	r0, #2
 8001886:	f000 faad 	bl	8001de4 <Write_GPIO>
	Write_GPIO(PA, 15, HIGH); // Pyro_Test~
 800188a:	2201      	movs	r2, #1
 800188c:	210f      	movs	r1, #15
 800188e:	4610      	mov	r0, r2
 8001890:	f000 faa8 	bl	8001de4 <Write_GPIO>

	return (uint16_t)((adc_value * vref / 4096) * 1000);
 8001894:	4620      	mov	r0, r4
 8001896:	f7ff f9fd 	bl	8000c94 <__aeabi_ui2f>
 800189a:	4631      	mov	r1, r6
 800189c:	f7ff fa52 	bl	8000d44 <__aeabi_fmul>
 80018a0:	f04f 5166 	mov.w	r1, #964689920	@ 0x39800000
 80018a4:	f7ff fa4e 	bl	8000d44 <__aeabi_fmul>
 80018a8:	4905      	ldr	r1, [pc, #20]	@ (80018c0 <CD74HC4051_AnRead+0xd0>)
 80018aa:	f7ff fa4b 	bl	8000d44 <__aeabi_fmul>
 80018ae:	f7ff fb99 	bl	8000fe4 <__aeabi_f2uiz>
 80018b2:	b280      	uxth	r0, r0
}
 80018b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		return 0;
 80018b6:	2000      	movs	r0, #0
}
 80018b8:	4770      	bx	lr
		return 0;
 80018ba:	2000      	movs	r0, #0
 80018bc:	e7fa      	b.n	80018b4 <CD74HC4051_AnRead+0xc4>
 80018be:	bf00      	nop
 80018c0:	447a0000 	.word	0x447a0000

080018c4 <HM10BLE_Send>:

	USART_RX(usart_port, response, sizeof(response));
	return 1; // OK
}

uint8_t HM10BLE_Send(unsigned short usart_port, uint8_t *message, uint8_t size) {
 80018c4:	b508      	push	{r3, lr}

	USART_TX(usart_port, message, sizeof(message));
 80018c6:	2204      	movs	r2, #4
 80018c8:	f000 fbb4 	bl	8002034 <USART_TX>
	return 1; // OK
}
 80018cc:	2001      	movs	r0, #1
 80018ce:	bd08      	pop	{r3, pc}

080018d0 <HM10BLE_Init>:
uint8_t HM10BLE_Init(HM10BLE *devHM10, unsigned short usart_port) {
 80018d0:	b538      	push	{r3, r4, r5, lr}
 80018d2:	4604      	mov	r4, r0
 80018d4:	460d      	mov	r5, r1
	HM10BLE_Send(usart_port, (uint8_t *)"AT\n", strlen("AT\n"));							// Awake
 80018d6:	2203      	movs	r2, #3
 80018d8:	490b      	ldr	r1, [pc, #44]	@ (8001908 <HM10BLE_Init+0x38>)
 80018da:	4628      	mov	r0, r5
 80018dc:	f7ff fff2 	bl	80018c4 <HM10BLE_Send>
	HM10BLE_Send(usart_port, (uint8_t *)"AT+NAMEBulldogs\n", strlen("AT+NAMEMerope\n"));	// Name device
 80018e0:	220e      	movs	r2, #14
 80018e2:	490a      	ldr	r1, [pc, #40]	@ (800190c <HM10BLE_Init+0x3c>)
 80018e4:	4628      	mov	r0, r5
 80018e6:	f7ff ffed 	bl	80018c4 <HM10BLE_Send>
	HM10BLE_Send(usart_port, (uint8_t *)"AT+IMME1\n", strlen("AT+IMME1\n"));				// Start
 80018ea:	2209      	movs	r2, #9
 80018ec:	4908      	ldr	r1, [pc, #32]	@ (8001910 <HM10BLE_Init+0x40>)
 80018ee:	4628      	mov	r0, r5
 80018f0:	f7ff ffe8 	bl	80018c4 <HM10BLE_Send>
	devHM10->hm10_status = false;
 80018f4:	2300      	movs	r3, #0
 80018f6:	7023      	strb	r3, [r4, #0]
	devHM10->rfd_status = false;
 80018f8:	7063      	strb	r3, [r4, #1]
	devHM10->icm_status = false;
 80018fa:	70a3      	strb	r3, [r4, #2]
	devHM10->l76lm33_status = false;
 80018fc:	70e3      	strb	r3, [r4, #3]
	devHM10->bmp_status = false;
 80018fe:	7123      	strb	r3, [r4, #4]
	devHM10->bat_status = 0x00;
 8001900:	7163      	strb	r3, [r4, #5]
	devHM10->sd_status = false;
 8001902:	71a3      	strb	r3, [r4, #6]
}
 8001904:	2001      	movs	r0, #1
 8001906:	bd38      	pop	{r3, r4, r5, pc}
 8001908:	08007bd0 	.word	0x08007bd0
 800190c:	08007bd4 	.word	0x08007bd4
 8001910:	08007be8 	.word	0x08007be8

08001914 <ICM20602_Read>:
{
	return Read_GPIO(PA, 10);
}

void ICM20602_Read(uint8_t address, uint8_t rxData[], uint8_t size)
{
 8001914:	b530      	push	{r4, r5, lr}
 8001916:	b083      	sub	sp, #12
 8001918:	460c      	mov	r4, r1
 800191a:	4615      	mov	r5, r2
 800191c:	f88d 0007 	strb.w	r0, [sp, #7]
	address |= 0x80;  // read operation
 8001920:	b2c3      	uxtb	r3, r0
 8001922:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8001926:	f88d 3007 	strb.w	r3, [sp, #7]

	Write_GPIO(PB, 12, LOW);
 800192a:	2200      	movs	r2, #0
 800192c:	210c      	movs	r1, #12
 800192e:	2002      	movs	r0, #2
 8001930:	f000 fa58 	bl	8001de4 <Write_GPIO>
	SPI2_TX(&address, 1);  // send address
 8001934:	2101      	movs	r1, #1
 8001936:	f10d 0007 	add.w	r0, sp, #7
 800193a:	f000 fad7 	bl	8001eec <SPI2_TX>
	SPI2_RX(rxData, size);  // receive 6 bytes data
 800193e:	4629      	mov	r1, r5
 8001940:	4620      	mov	r0, r4
 8001942:	f000 faf1 	bl	8001f28 <SPI2_RX>
	Write_GPIO(PB, 12, HIGH);
 8001946:	2201      	movs	r2, #1
 8001948:	210c      	movs	r1, #12
 800194a:	2002      	movs	r0, #2
 800194c:	f000 fa4a 	bl	8001de4 <Write_GPIO>
}
 8001950:	b003      	add	sp, #12
 8001952:	bd30      	pop	{r4, r5, pc}

08001954 <ICM20602_Write>:

void ICM20602_Write(uint8_t address, uint8_t value)
{
 8001954:	b500      	push	{lr}
 8001956:	b083      	sub	sp, #12
 8001958:	f88d 0007 	strb.w	r0, [sp, #7]
 800195c:	f88d 1006 	strb.w	r1, [sp, #6]
	Write_GPIO(PB, 12, LOW);
 8001960:	2200      	movs	r2, #0
 8001962:	210c      	movs	r1, #12
 8001964:	2002      	movs	r0, #2
 8001966:	f000 fa3d 	bl	8001de4 <Write_GPIO>
	SPI2_TX(&address, 1);  // send address
 800196a:	2101      	movs	r1, #1
 800196c:	f10d 0007 	add.w	r0, sp, #7
 8001970:	f000 fabc 	bl	8001eec <SPI2_TX>
	SPI2_TX(&value, 1);  // send value
 8001974:	2101      	movs	r1, #1
 8001976:	f10d 0006 	add.w	r0, sp, #6
 800197a:	f000 fab7 	bl	8001eec <SPI2_TX>
	Write_GPIO(PB, 12, HIGH);
 800197e:	2201      	movs	r2, #1
 8001980:	210c      	movs	r1, #12
 8001982:	2002      	movs	r0, #2
 8001984:	f000 fa2e 	bl	8001de4 <Write_GPIO>
	HAL_Delay(20);
 8001988:	2014      	movs	r0, #20
 800198a:	f001 f843 	bl	8002a14 <HAL_Delay>
}
 800198e:	b003      	add	sp, #12
 8001990:	f85d fb04 	ldr.w	pc, [sp], #4

08001994 <ICM20602_Remove_DC_Offset>:
{
 8001994:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001998:	b084      	sub	sp, #16
 800199a:	460d      	mov	r5, r1
	int16_t offset[3] = {0,0,0};
 800199c:	2400      	movs	r4, #0
 800199e:	f8ad 4008 	strh.w	r4, [sp, #8]
 80019a2:	f8ad 400a 	strh.w	r4, [sp, #10]
 80019a6:	f8ad 400c 	strh.w	r4, [sp, #12]
	for(i = 0; i < mean; i++)
 80019aa:	e027      	b.n	80019fc <ICM20602_Remove_DC_Offset+0x68>
		ICM20602_Read(ICM20602_REG_GYRO_XOUT_H, rxData, 6);
 80019ac:	2206      	movs	r2, #6
 80019ae:	4669      	mov	r1, sp
 80019b0:	2043      	movs	r0, #67	@ 0x43
 80019b2:	f7ff ffaf 	bl	8001914 <ICM20602_Read>
		offset[0] += (rxData[0] << 8) | rxData[1];
 80019b6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80019ba:	f89d 1000 	ldrb.w	r1, [sp]
 80019be:	f89d 2001 	ldrb.w	r2, [sp, #1]
 80019c2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80019c6:	4413      	add	r3, r2
 80019c8:	f8ad 3008 	strh.w	r3, [sp, #8]
		offset[1] += (rxData[2] << 8) | rxData[3];
 80019cc:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80019d0:	f89d 1002 	ldrb.w	r1, [sp, #2]
 80019d4:	f89d 2003 	ldrb.w	r2, [sp, #3]
 80019d8:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80019dc:	4413      	add	r3, r2
 80019de:	f8ad 300a 	strh.w	r3, [sp, #10]
		offset[2] += (rxData[4] << 8) | rxData[5];
 80019e2:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80019e6:	f89d 1004 	ldrb.w	r1, [sp, #4]
 80019ea:	f89d 2005 	ldrb.w	r2, [sp, #5]
 80019ee:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80019f2:	4413      	add	r3, r2
 80019f4:	f8ad 300c 	strh.w	r3, [sp, #12]
	for(i = 0; i < mean; i++)
 80019f8:	3401      	adds	r4, #1
 80019fa:	b264      	sxtb	r4, r4
 80019fc:	42ac      	cmp	r4, r5
 80019fe:	dbd5      	blt.n	80019ac <ICM20602_Remove_DC_Offset+0x18>
	offset[0] /= mean;
 8001a00:	f9bd 7008 	ldrsh.w	r7, [sp, #8]
 8001a04:	fb97 f7f5 	sdiv	r7, r7, r5
 8001a08:	b239      	sxth	r1, r7
 8001a0a:	f8ad 1008 	strh.w	r1, [sp, #8]
	offset[1] /= mean;
 8001a0e:	f9bd 600a 	ldrsh.w	r6, [sp, #10]
 8001a12:	fb96 f6f5 	sdiv	r6, r6, r5
 8001a16:	fa0f f886 	sxth.w	r8, r6
 8001a1a:	f8ad 800a 	strh.w	r8, [sp, #10]
	offset[2] /= mean;
 8001a1e:	f9bd 400c 	ldrsh.w	r4, [sp, #12]
 8001a22:	fb94 f4f5 	sdiv	r4, r4, r5
 8001a26:	b225      	sxth	r5, r4
 8001a28:	f8ad 500c 	strh.w	r5, [sp, #12]
	ICM20602_Write(ICM20602_REG_XG_OFFS_USRH, (offset[0]*-2)>>8);
 8001a2c:	ebc1 71c1 	rsb	r1, r1, r1, lsl #31
 8001a30:	f3c1 11c7 	ubfx	r1, r1, #7, #8
 8001a34:	2013      	movs	r0, #19
 8001a36:	f7ff ff8d 	bl	8001954 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_XG_OFFS_USRL, offset[0]*-2);
 8001a3a:	ebc7 17c7 	rsb	r7, r7, r7, lsl #7
 8001a3e:	0079      	lsls	r1, r7, #1
 8001a40:	f001 01fe 	and.w	r1, r1, #254	@ 0xfe
 8001a44:	2014      	movs	r0, #20
 8001a46:	f7ff ff85 	bl	8001954 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_YG_OFFS_USRH, (offset[1]*-2)>>8);
 8001a4a:	ebc8 78c8 	rsb	r8, r8, r8, lsl #31
 8001a4e:	f3c8 11c7 	ubfx	r1, r8, #7, #8
 8001a52:	2015      	movs	r0, #21
 8001a54:	f7ff ff7e 	bl	8001954 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_YG_OFFS_USRL, offset[1]*-2);
 8001a58:	ebc6 16c6 	rsb	r6, r6, r6, lsl #7
 8001a5c:	0071      	lsls	r1, r6, #1
 8001a5e:	f001 01fe 	and.w	r1, r1, #254	@ 0xfe
 8001a62:	2016      	movs	r0, #22
 8001a64:	f7ff ff76 	bl	8001954 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_ZG_OFFS_USRH, (offset[2]*-2)>>8);
 8001a68:	ebc5 75c5 	rsb	r5, r5, r5, lsl #31
 8001a6c:	f3c5 11c7 	ubfx	r1, r5, #7, #8
 8001a70:	2017      	movs	r0, #23
 8001a72:	f7ff ff6f 	bl	8001954 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_ZG_OFFS_USRL, offset[2]*-2);
 8001a76:	ebc4 14c4 	rsb	r4, r4, r4, lsl #7
 8001a7a:	0061      	lsls	r1, r4, #1
 8001a7c:	f001 01fe 	and.w	r1, r1, #254	@ 0xfe
 8001a80:	2018      	movs	r0, #24
 8001a82:	f7ff ff67 	bl	8001954 <ICM20602_Write>
}
 8001a86:	b004      	add	sp, #16
 8001a88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08001a8c <ICM20602_Init>:
{
 8001a8c:	b530      	push	{r4, r5, lr}
 8001a8e:	b083      	sub	sp, #12
 8001a90:	4604      	mov	r4, r0
	dev->gyroXRaw = 	0.0f;
 8001a92:	2500      	movs	r5, #0
 8001a94:	8005      	strh	r5, [r0, #0]
	dev->gyroYRaw = 	0.0f;
 8001a96:	8045      	strh	r5, [r0, #2]
	dev->gyroZRaw = 	0.0f;
 8001a98:	8085      	strh	r5, [r0, #4]
	dev->accXRaw = 		0.0f;
 8001a9a:	80c5      	strh	r5, [r0, #6]
	dev->accYRaw = 		0.0f;
 8001a9c:	8105      	strh	r5, [r0, #8]
	dev->accZRaw = 		0.0f;
 8001a9e:	8145      	strh	r5, [r0, #10]
	dev->temperatureC = 0.0f;
 8001aa0:	2300      	movs	r3, #0
 8001aa2:	6243      	str	r3, [r0, #36]	@ 0x24
	Init_GPIO(PA,  10, IN, I_PP); // Init GPIO for the interrupt
 8001aa4:	2302      	movs	r3, #2
 8001aa6:	462a      	mov	r2, r5
 8001aa8:	210a      	movs	r1, #10
 8001aaa:	2001      	movs	r0, #1
 8001aac:	f000 f950 	bl	8001d50 <Init_GPIO>
	ICM20602_Write(ICM20602_REG_PWR_MGMT_1, 0x80);
 8001ab0:	2180      	movs	r1, #128	@ 0x80
 8001ab2:	206b      	movs	r0, #107	@ 0x6b
 8001ab4:	f7ff ff4e 	bl	8001954 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_I2C_IF, 0x40);
 8001ab8:	2140      	movs	r1, #64	@ 0x40
 8001aba:	2070      	movs	r0, #112	@ 0x70
 8001abc:	f7ff ff4a 	bl	8001954 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_PWR_MGMT_1, 0x01);
 8001ac0:	2101      	movs	r1, #1
 8001ac2:	206b      	movs	r0, #107	@ 0x6b
 8001ac4:	f7ff ff46 	bl	8001954 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_SMPLRT_DIV, 0x00);
 8001ac8:	4629      	mov	r1, r5
 8001aca:	2019      	movs	r0, #25
 8001acc:	f7ff ff42 	bl	8001954 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_CONFIG, 0x05);
 8001ad0:	2105      	movs	r1, #5
 8001ad2:	201a      	movs	r0, #26
 8001ad4:	f7ff ff3e 	bl	8001954 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_GYRO_CONFIG, 0x018);
 8001ad8:	2118      	movs	r1, #24
 8001ada:	201b      	movs	r0, #27
 8001adc:	f7ff ff3a 	bl	8001954 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_ACCEL_CONFIG, 0x18);
 8001ae0:	2118      	movs	r1, #24
 8001ae2:	201c      	movs	r0, #28
 8001ae4:	f7ff ff36 	bl	8001954 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_ACCEL_CONFIG2, 0x03); // Acc FCHOICE 1kHz(bit3-0), DLPF fc 44.8Hz(bit2:0-011)
 8001ae8:	2103      	movs	r1, #3
 8001aea:	201d      	movs	r0, #29
 8001aec:	f7ff ff32 	bl	8001954 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_INT_ENABLE, 0x01);
 8001af0:	2101      	movs	r1, #1
 8001af2:	2038      	movs	r0, #56	@ 0x38
 8001af4:	f7ff ff2e 	bl	8001954 <ICM20602_Write>
	ICM20602_Read(ICM20602_REG_WHO_AM_I, rxData, 1);
 8001af8:	2201      	movs	r2, #1
 8001afa:	a901      	add	r1, sp, #4
 8001afc:	2075      	movs	r0, #117	@ 0x75
 8001afe:	f7ff ff09 	bl	8001914 <ICM20602_Read>
	ICM20602_Read(ICM20602_REG_I2C_IF, rxData, 1);
 8001b02:	2201      	movs	r2, #1
 8001b04:	a901      	add	r1, sp, #4
 8001b06:	2070      	movs	r0, #112	@ 0x70
 8001b08:	f7ff ff04 	bl	8001914 <ICM20602_Read>
	ICM20602_Read(ICM20602_REG_PWR_MGMT_1, rxData, 1);
 8001b0c:	2201      	movs	r2, #1
 8001b0e:	a901      	add	r1, sp, #4
 8001b10:	206b      	movs	r0, #107	@ 0x6b
 8001b12:	f7ff feff 	bl	8001914 <ICM20602_Read>
	ICM20602_Read(ICM20602_REG_SMPLRT_DIV, rxData, 1);
 8001b16:	2201      	movs	r2, #1
 8001b18:	a901      	add	r1, sp, #4
 8001b1a:	2019      	movs	r0, #25
 8001b1c:	f7ff fefa 	bl	8001914 <ICM20602_Read>
	ICM20602_Read(ICM20602_REG_CONFIG, rxData, 1);
 8001b20:	2201      	movs	r2, #1
 8001b22:	a901      	add	r1, sp, #4
 8001b24:	201a      	movs	r0, #26
 8001b26:	f7ff fef5 	bl	8001914 <ICM20602_Read>
	ICM20602_Read(ICM20602_REG_ACCEL_CONFIG, rxData, 1);
 8001b2a:	2201      	movs	r2, #1
 8001b2c:	a901      	add	r1, sp, #4
 8001b2e:	201c      	movs	r0, #28
 8001b30:	f7ff fef0 	bl	8001914 <ICM20602_Read>
	ICM20602_Read(ICM20602_REG_ACCEL_CONFIG2, rxData, 1);
 8001b34:	2201      	movs	r2, #1
 8001b36:	a901      	add	r1, sp, #4
 8001b38:	201d      	movs	r0, #29
 8001b3a:	f7ff feeb 	bl	8001914 <ICM20602_Read>
	ICM20602_Remove_DC_Offset(dev,2);
 8001b3e:	2102      	movs	r1, #2
 8001b40:	4620      	mov	r0, r4
 8001b42:	f7ff ff27 	bl	8001994 <ICM20602_Remove_DC_Offset>
}
 8001b46:	4628      	mov	r0, r5
 8001b48:	b003      	add	sp, #12
 8001b4a:	bd30      	pop	{r4, r5, pc}

08001b4c <L76LM33_SendCommand>:
	return 1; // OK
}

uint8_t L76LM33_SendCommand(unsigned short usart_port, char *command) {

    if (command == NULL) {
 8001b4c:	b161      	cbz	r1, 8001b68 <L76LM33_SendCommand+0x1c>
uint8_t L76LM33_SendCommand(unsigned short usart_port, char *command) {
 8001b4e:	b538      	push	{r3, r4, r5, lr}
 8001b50:	4604      	mov	r4, r0
 8001b52:	460d      	mov	r5, r1
        return 0; // Error
    }
    USART_TX(usart_port, (uint8_t*)command, strlen(command));
 8001b54:	4608      	mov	r0, r1
 8001b56:	f7fe fafb 	bl	8000150 <strlen>
 8001b5a:	4602      	mov	r2, r0
 8001b5c:	4629      	mov	r1, r5
 8001b5e:	4620      	mov	r0, r4
 8001b60:	f000 fa68 	bl	8002034 <USART_TX>
    return 1; // OK
 8001b64:	2001      	movs	r0, #1
}
 8001b66:	bd38      	pop	{r3, r4, r5, pc}
        return 0; // Error
 8001b68:	2000      	movs	r0, #0
}
 8001b6a:	4770      	bx	lr

08001b6c <L76LM33_Init>:
uint8_t L76LM33_Init (unsigned short usart_port) {
 8001b6c:	b570      	push	{r4, r5, r6, lr}
 8001b6e:	b09a      	sub	sp, #104	@ 0x68
 8001b70:	4606      	mov	r6, r0
	char PROTOCOL_SETRMS[] = "$PMTK314,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0*35\r\n";
 8001b72:	f10d 0c2c 	add.w	ip, sp, #44	@ 0x2c
 8001b76:	4c17      	ldr	r4, [pc, #92]	@ (8001bd4 <L76LM33_Init+0x68>)
 8001b78:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001b7a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8001b7e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001b80:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8001b84:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001b86:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8001b8a:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8001b8e:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8001b92:	f8ac 2000 	strh.w	r2, [ip]
	char PROTOCOL_GPSSEARCHONLY[] = "$PMTK353,1,0,0,0,0*2A\r\n";
 8001b96:	ac05      	add	r4, sp, #20
 8001b98:	4d0f      	ldr	r5, [pc, #60]	@ (8001bd8 <L76LM33_Init+0x6c>)
 8001b9a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001b9c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001b9e:	e895 0003 	ldmia.w	r5, {r0, r1}
 8001ba2:	e884 0003 	stmia.w	r4, {r0, r1}
	char PROTOCOL_NAVMODE[] = "PMTK886,2*2A\r\n";
 8001ba6:	4b0d      	ldr	r3, [pc, #52]	@ (8001bdc <L76LM33_Init+0x70>)
 8001ba8:	ac01      	add	r4, sp, #4
 8001baa:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001bac:	c407      	stmia	r4!, {r0, r1, r2}
 8001bae:	f824 3b02 	strh.w	r3, [r4], #2
 8001bb2:	0c1b      	lsrs	r3, r3, #16
 8001bb4:	7023      	strb	r3, [r4, #0]
	L76LM33_SendCommand(usart_port, PROTOCOL_SETRMS);
 8001bb6:	a90b      	add	r1, sp, #44	@ 0x2c
 8001bb8:	4630      	mov	r0, r6
 8001bba:	f7ff ffc7 	bl	8001b4c <L76LM33_SendCommand>
	L76LM33_SendCommand(usart_port, PROTOCOL_GPSSEARCHONLY);
 8001bbe:	a905      	add	r1, sp, #20
 8001bc0:	4630      	mov	r0, r6
 8001bc2:	f7ff ffc3 	bl	8001b4c <L76LM33_SendCommand>
	L76LM33_SendCommand(usart_port, PROTOCOL_NAVMODE);
 8001bc6:	a901      	add	r1, sp, #4
 8001bc8:	4630      	mov	r0, r6
 8001bca:	f7ff ffbf 	bl	8001b4c <L76LM33_SendCommand>
}
 8001bce:	2001      	movs	r0, #1
 8001bd0:	b01a      	add	sp, #104	@ 0x68
 8001bd2:	bd70      	pop	{r4, r5, r6, pc}
 8001bd4:	08007bf4 	.word	0x08007bf4
 8001bd8:	08007c30 	.word	0x08007c30
 8001bdc:	08007c48 	.word	0x08007c48

08001be0 <Pyro_Init>:
 *      Author: gagno
 */

#include "GAUL_Drivers/Pyros.h"

void Pyro_Init(void) {
 8001be0:	b508      	push	{r3, lr}
	// Pyros
	Init_GPIO(PB, 4, OUT2, O_GP_PP); // PyroON0
 8001be2:	2300      	movs	r3, #0
 8001be4:	2202      	movs	r2, #2
 8001be6:	2104      	movs	r1, #4
 8001be8:	4610      	mov	r0, r2
 8001bea:	f000 f8b1 	bl	8001d50 <Init_GPIO>
	Init_GPIO(PB, 5, OUT2, O_GP_PP); // PyroON1
 8001bee:	2300      	movs	r3, #0
 8001bf0:	2202      	movs	r2, #2
 8001bf2:	2105      	movs	r1, #5
 8001bf4:	4610      	mov	r0, r2
 8001bf6:	f000 f8ab 	bl	8001d50 <Init_GPIO>
	Init_GPIO(PA, 15, OUT2, O_GP_PP); // Pyro_Test~
 8001bfa:	2300      	movs	r3, #0
 8001bfc:	2202      	movs	r2, #2
 8001bfe:	210f      	movs	r1, #15
 8001c00:	2001      	movs	r0, #1
 8001c02:	f000 f8a5 	bl	8001d50 <Init_GPIO>
	// Set Pyro_Test~ (inverse) et Pyros_ON LOW
	Write_GPIO(PA, 15, HIGH);
 8001c06:	2201      	movs	r2, #1
 8001c08:	210f      	movs	r1, #15
 8001c0a:	4610      	mov	r0, r2
 8001c0c:	f000 f8ea 	bl	8001de4 <Write_GPIO>
	Write_GPIO(PB, 4, LOW);
 8001c10:	2200      	movs	r2, #0
 8001c12:	2104      	movs	r1, #4
 8001c14:	2002      	movs	r0, #2
 8001c16:	f000 f8e5 	bl	8001de4 <Write_GPIO>
	Write_GPIO(PB, 5, LOW);
 8001c1a:	2200      	movs	r2, #0
 8001c1c:	2105      	movs	r1, #5
 8001c1e:	2002      	movs	r0, #2
 8001c20:	f000 f8e0 	bl	8001de4 <Write_GPIO>
}
 8001c24:	bd08      	pop	{r3, pc}
	...

08001c28 <ws2812_timer2_init>:
static uint16_t ws2812_gpio_set_bits = 0;
static uint16_t dma_buffer[DMA_BUFFER_SIZE];


static void ws2812_timer2_init(void)
{
 8001c28:	b570      	push	{r4, r5, r6, lr}
 8001c2a:	b08e      	sub	sp, #56	@ 0x38
    TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001c2c:	2400      	movs	r4, #0
 8001c2e:	940a      	str	r4, [sp, #40]	@ 0x28
 8001c30:	940b      	str	r4, [sp, #44]	@ 0x2c
 8001c32:	940c      	str	r4, [sp, #48]	@ 0x30
 8001c34:	940d      	str	r4, [sp, #52]	@ 0x34
    TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001c36:	9408      	str	r4, [sp, #32]
 8001c38:	9409      	str	r4, [sp, #36]	@ 0x24
    TIM_OC_InitTypeDef sConfigOC = {0};
 8001c3a:	9401      	str	r4, [sp, #4]
 8001c3c:	9402      	str	r4, [sp, #8]
 8001c3e:	9403      	str	r4, [sp, #12]
 8001c40:	9404      	str	r4, [sp, #16]
 8001c42:	9405      	str	r4, [sp, #20]
 8001c44:	9406      	str	r4, [sp, #24]
 8001c46:	9407      	str	r4, [sp, #28]

    htimer2.Instance = TIM2;
 8001c48:	4d1a      	ldr	r5, [pc, #104]	@ (8001cb4 <ws2812_timer2_init+0x8c>)
 8001c4a:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001c4e:	602b      	str	r3, [r5, #0]
    htimer2.Init.Prescaler = 0;
 8001c50:	606c      	str	r4, [r5, #4]
    htimer2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001c52:	60ac      	str	r4, [r5, #8]
    htimer2.Init.Period = WS2812_TIMER_PERIOD;
 8001c54:	235a      	movs	r3, #90	@ 0x5a
 8001c56:	60eb      	str	r3, [r5, #12]

    htimer2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001c58:	612c      	str	r4, [r5, #16]
    htimer2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001c5a:	61ac      	str	r4, [r5, #24]
    HAL_TIM_Base_Init(&htimer2);
 8001c5c:	4628      	mov	r0, r5
 8001c5e:	f002 fc05 	bl	800446c <HAL_TIM_Base_Init>

    sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001c62:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001c66:	930a      	str	r3, [sp, #40]	@ 0x28
    HAL_TIM_ConfigClockSource(&htimer2, &sClockSourceConfig);
 8001c68:	a90a      	add	r1, sp, #40	@ 0x28
 8001c6a:	4628      	mov	r0, r5
 8001c6c:	f002 fd68 	bl	8004740 <HAL_TIM_ConfigClockSource>
    HAL_TIM_PWM_Init(&htimer2);
 8001c70:	4628      	mov	r0, r5
 8001c72:	f002 fc4a 	bl	800450a <HAL_TIM_PWM_Init>
    sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001c76:	9408      	str	r4, [sp, #32]
    sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001c78:	9409      	str	r4, [sp, #36]	@ 0x24
    HAL_TIMEx_MasterConfigSynchronization(&htimer2, &sMasterConfig);
 8001c7a:	a908      	add	r1, sp, #32
 8001c7c:	4628      	mov	r0, r5
 8001c7e:	f003 f8a7 	bl	8004dd0 <HAL_TIMEx_MasterConfigSynchronization>

    sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001c82:	2660      	movs	r6, #96	@ 0x60
 8001c84:	9601      	str	r6, [sp, #4]

    sConfigOC.Pulse = WS2812_TIMER_PWM_CH1_TIME;
 8001c86:	231c      	movs	r3, #28
 8001c88:	9302      	str	r3, [sp, #8]
    sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001c8a:	9403      	str	r4, [sp, #12]
    sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001c8c:	9405      	str	r4, [sp, #20]
    HAL_TIM_PWM_ConfigChannel(&htimer2, &sConfigOC, TIM_CHANNEL_1);
 8001c8e:	4622      	mov	r2, r4
 8001c90:	a901      	add	r1, sp, #4
 8001c92:	4628      	mov	r0, r5
 8001c94:	f002 fc92 	bl	80045bc <HAL_TIM_PWM_ConfigChannel>
    sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001c98:	9601      	str	r6, [sp, #4]

    sConfigOC.Pulse = WS2812_TIMER_PWM_CH2_TIME;
 8001c9a:	2339      	movs	r3, #57	@ 0x39
 8001c9c:	9302      	str	r3, [sp, #8]
    sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001c9e:	9403      	str	r4, [sp, #12]
    sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001ca0:	9405      	str	r4, [sp, #20]
    HAL_TIM_PWM_ConfigChannel(&htimer2, &sConfigOC, TIM_CHANNEL_2);
 8001ca2:	2204      	movs	r2, #4
 8001ca4:	eb0d 0102 	add.w	r1, sp, r2
 8001ca8:	4628      	mov	r0, r5
 8001caa:	f002 fc87 	bl	80045bc <HAL_TIM_PWM_ConfigChannel>
}
 8001cae:	b00e      	add	sp, #56	@ 0x38
 8001cb0:	bd70      	pop	{r4, r5, r6, pc}
 8001cb2:	bf00      	nop
 8001cb4:	20000204 	.word	0x20000204

08001cb8 <WS2812_Init>:
	__HAL_DMA_DISABLE(&hdma_tim2_pwm_ch1);
	__HAL_DMA_DISABLE(&hdma_tim2_pwm_ch2);
}

void WS2812_Init()
{
 8001cb8:	b500      	push	{lr}
 8001cba:	b083      	sub	sp, #12
    /* DMA controller clock enable */
    __HAL_RCC_DMA1_CLK_ENABLE();
 8001cbc:	4b0e      	ldr	r3, [pc, #56]	@ (8001cf8 <WS2812_Init+0x40>)
 8001cbe:	695a      	ldr	r2, [r3, #20]
 8001cc0:	f042 0201 	orr.w	r2, r2, #1
 8001cc4:	615a      	str	r2, [r3, #20]
 8001cc6:	695b      	ldr	r3, [r3, #20]
 8001cc8:	f003 0301 	and.w	r3, r3, #1
 8001ccc:	9301      	str	r3, [sp, #4]
 8001cce:	9b01      	ldr	r3, [sp, #4]

    /* DMA interrupt init, not that we're using it... */
    HAL_NVIC_SetPriority(DMA1_Channel2_IRQn, 0, 0);
 8001cd0:	2200      	movs	r2, #0
 8001cd2:	4611      	mov	r1, r2
 8001cd4:	200c      	movs	r0, #12
 8001cd6:	f001 fc82 	bl	80035de <HAL_NVIC_SetPriority>
    HAL_NVIC_SetPriority(DMA1_Channel5_IRQn, 0, 0);
 8001cda:	2200      	movs	r2, #0
 8001cdc:	4611      	mov	r1, r2
 8001cde:	200f      	movs	r0, #15
 8001ce0:	f001 fc7d 	bl	80035de <HAL_NVIC_SetPriority>
    HAL_NVIC_SetPriority(DMA1_Channel7_IRQn, 0, 0);
 8001ce4:	2200      	movs	r2, #0
 8001ce6:	4611      	mov	r1, r2
 8001ce8:	2011      	movs	r0, #17
 8001cea:	f001 fc78 	bl	80035de <HAL_NVIC_SetPriority>

    ws2812_timer2_init();
 8001cee:	f7ff ff9b 	bl	8001c28 <ws2812_timer2_init>
}
 8001cf2:	b003      	add	sp, #12
 8001cf4:	f85d fb04 	ldr.w	pc, [sp], #4
 8001cf8:	40021000 	.word	0x40021000

08001cfc <ADC_Start>:


#include "GAUL_Drivers/Low_Level_Drivers/ADC_driver.h"


uint8_t ADC_Start(ADC_HandleTypeDef *hadc) {
 8001cfc:	b508      	push	{r3, lr}

	HAL_ADC_Start(hadc);
 8001cfe:	f000 ff85 	bl	8002c0c <HAL_ADC_Start>
	return 1; // OK
}
 8001d02:	2001      	movs	r0, #1
 8001d04:	bd08      	pop	{r3, pc}

08001d06 <ADC_Calibration>:

uint8_t ADC_Calibration(ADC_HandleTypeDef *hadc) {
 8001d06:	b508      	push	{r3, lr}

	HAL_ADCEx_Calibration_Start(hadc);
 8001d08:	f001 fb00 	bl	800330c <HAL_ADCEx_Calibration_Start>
	return 1; // OK
}
 8001d0c:	2001      	movs	r0, #1
 8001d0e:	bd08      	pop	{r3, pc}

08001d10 <ADC_Stop>:

uint8_t ADC_Stop(ADC_HandleTypeDef *hadc) {
 8001d10:	b508      	push	{r3, lr}

	HAL_ADC_Stop(hadc);
 8001d12:	f001 f829 	bl	8002d68 <HAL_ADC_Stop>
	return 1; // OK
}
 8001d16:	2001      	movs	r0, #1
 8001d18:	bd08      	pop	{r3, pc}
	...

08001d1c <ADC_Sampling>:

uint32_t ADC_Sampling (ADC_HandleTypeDef *hadc) {
 8001d1c:	b538      	push	{r3, r4, r5, lr}

	if (!(ADC1->CR2 & ADC_CR2_ADON)) {
 8001d1e:	4b0b      	ldr	r3, [pc, #44]	@ (8001d4c <ADC_Sampling+0x30>)
 8001d20:	689b      	ldr	r3, [r3, #8]
 8001d22:	f013 0f01 	tst.w	r3, #1
 8001d26:	d00d      	beq.n	8001d44 <ADC_Sampling+0x28>
 8001d28:	4604      	mov	r4, r0
		return 0xFFFF;
	}
	HAL_ADC_PollForConversion(hadc, HAL_MAX_DELAY); // Timeout peut etre ajuste
 8001d2a:	f04f 31ff 	mov.w	r1, #4294967295
 8001d2e:	f001 f847 	bl	8002dc0 <HAL_ADC_PollForConversion>
	uint32_t adc_value = HAL_ADC_GetValue(hadc);
 8001d32:	4620      	mov	r0, r4
 8001d34:	f001 f94a 	bl	8002fcc <HAL_ADC_GetValue>
 8001d38:	4605      	mov	r5, r0
	HAL_ADC_Stop(hadc);
 8001d3a:	4620      	mov	r0, r4
 8001d3c:	f001 f814 	bl	8002d68 <HAL_ADC_Stop>

	return adc_value;
}
 8001d40:	4628      	mov	r0, r5
 8001d42:	bd38      	pop	{r3, r4, r5, pc}
		return 0xFFFF;
 8001d44:	f64f 75ff 	movw	r5, #65535	@ 0xffff
 8001d48:	e7fa      	b.n	8001d40 <ADC_Sampling+0x24>
 8001d4a:	bf00      	nop
 8001d4c:	40012400 	.word	0x40012400

08001d50 <Init_GPIO>:
#include "GAUL_Drivers/Low_Level_Drivers/GPIO_driver.h"

void Init_GPIO(unsigned short port, unsigned short pin, unsigned short dir, unsigned short opt)
{
 8001d50:	b510      	push	{r4, lr}
 volatile unsigned long * CR;
 unsigned short tPIN = pin;
 unsigned short offset = 0x00;

	if(pin > 7)
 8001d52:	2907      	cmp	r1, #7
 8001d54:	d904      	bls.n	8001d60 <Init_GPIO+0x10>
		{
			tPIN -= 8;
 8001d56:	3908      	subs	r1, #8
 8001d58:	b289      	uxth	r1, r1
			offset = 0x01;
 8001d5a:	f04f 0e01 	mov.w	lr, #1
 8001d5e:	e001      	b.n	8001d64 <Init_GPIO+0x14>
 unsigned short offset = 0x00;
 8001d60:	f04f 0e00 	mov.w	lr, #0
		}

	if(port == 1)
 8001d64:	2801      	cmp	r0, #1
 8001d66:	d00f      	beq.n	8001d88 <Init_GPIO+0x38>
		{
			RCC_APB2ENR |= 4; //// Enabling PORT A
			CR = (volatile unsigned long *) (&GPIO_A + offset);
		}
	else if(port == 2)
 8001d68:	2802      	cmp	r0, #2
 8001d6a:	d02d      	beq.n	8001dc8 <Init_GPIO+0x78>
		{
			RCC_APB2ENR |= 8; //// Enabling PORT A
			CR = (volatile unsigned long *) (&GPIO_B + offset);
		}
	else if(port == 3)
 8001d6c:	2803      	cmp	r0, #3
 8001d6e:	d116      	bne.n	8001d9e <Init_GPIO+0x4e>
		{
			RCC_APB2ENR |= 0x10; //// Enabling PORT A
 8001d70:	4c1b      	ldr	r4, [pc, #108]	@ (8001de0 <Init_GPIO+0x90>)
 8001d72:	69a0      	ldr	r0, [r4, #24]
 8001d74:	f040 0010 	orr.w	r0, r0, #16
 8001d78:	61a0      	str	r0, [r4, #24]
			CR = (volatile unsigned long *) (&GPIO_C + offset);
 8001d7a:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8001d7e:	f10e 4c80 	add.w	ip, lr, #1073741824	@ 0x40000000
 8001d82:	f50c 3c88 	add.w	ip, ip, #69632	@ 0x11000
 8001d86:	e00a      	b.n	8001d9e <Init_GPIO+0x4e>
			RCC_APB2ENR |= 4; //// Enabling PORT A
 8001d88:	4c15      	ldr	r4, [pc, #84]	@ (8001de0 <Init_GPIO+0x90>)
 8001d8a:	69a0      	ldr	r0, [r4, #24]
 8001d8c:	f040 0004 	orr.w	r0, r0, #4
 8001d90:	61a0      	str	r0, [r4, #24]
			CR = (volatile unsigned long *) (&GPIO_A + offset);
 8001d92:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8001d96:	f10e 4c80 	add.w	ip, lr, #1073741824	@ 0x40000000
 8001d9a:	f50c 3c84 	add.w	ip, ip, #67584	@ 0x10800
		}

		*CR &= ~(0xf<<(tPIN)*4); ///Reset the taget pin
 8001d9e:	f8dc 0000 	ldr.w	r0, [ip]
 8001da2:	0089      	lsls	r1, r1, #2
 8001da4:	f04f 0e0f 	mov.w	lr, #15
 8001da8:	fa0e fe01 	lsl.w	lr, lr, r1
 8001dac:	ea20 000e 	bic.w	r0, r0, lr
 8001db0:	f8cc 0000 	str.w	r0, [ip]
		*CR |= ((dir <<(tPIN*4)) | (opt<<(tPIN*4+2))); //// Set up the direction and the option of the PIN
 8001db4:	f8dc 0000 	ldr.w	r0, [ip]
 8001db8:	408a      	lsls	r2, r1
 8001dba:	3102      	adds	r1, #2
 8001dbc:	408b      	lsls	r3, r1
 8001dbe:	431a      	orrs	r2, r3
 8001dc0:	4302      	orrs	r2, r0
 8001dc2:	f8cc 2000 	str.w	r2, [ip]
}
 8001dc6:	bd10      	pop	{r4, pc}
			RCC_APB2ENR |= 8; //// Enabling PORT A
 8001dc8:	4c05      	ldr	r4, [pc, #20]	@ (8001de0 <Init_GPIO+0x90>)
 8001dca:	69a0      	ldr	r0, [r4, #24]
 8001dcc:	f040 0008 	orr.w	r0, r0, #8
 8001dd0:	61a0      	str	r0, [r4, #24]
			CR = (volatile unsigned long *) (&GPIO_B + offset);
 8001dd2:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8001dd6:	f10e 4c80 	add.w	ip, lr, #1073741824	@ 0x40000000
 8001dda:	f50c 3c86 	add.w	ip, ip, #68608	@ 0x10c00
 8001dde:	e7de      	b.n	8001d9e <Init_GPIO+0x4e>
 8001de0:	40021000 	.word	0x40021000

08001de4 <Write_GPIO>:
{
		volatile unsigned long * ODR;
		unsigned long offset = 0x03;


	if(port == 1)
 8001de4:	2801      	cmp	r0, #1
 8001de6:	d005      	beq.n	8001df4 <Write_GPIO+0x10>
		{
			ODR = (volatile unsigned long *) (&GPIO_A + offset);
		}
	else if(port == 2)
 8001de8:	2802      	cmp	r0, #2
 8001dea:	d00a      	beq.n	8001e02 <Write_GPIO+0x1e>
		{
			ODR = (volatile unsigned long *) (&GPIO_B + offset);
		}
	else if(port == 3)
 8001dec:	2803      	cmp	r0, #3
 8001dee:	d102      	bne.n	8001df6 <Write_GPIO+0x12>
	{
		ODR = (volatile unsigned long *) (&GPIO_C + offset);
 8001df0:	4b09      	ldr	r3, [pc, #36]	@ (8001e18 <Write_GPIO+0x34>)
 8001df2:	e000      	b.n	8001df6 <Write_GPIO+0x12>
			ODR = (volatile unsigned long *) (&GPIO_A + offset);
 8001df4:	4b09      	ldr	r3, [pc, #36]	@ (8001e1c <Write_GPIO+0x38>)
	}
	state ? (*ODR |= (state<<pin)) : (*ODR &= ~(1<<pin));
 8001df6:	b132      	cbz	r2, 8001e06 <Write_GPIO+0x22>
 8001df8:	6818      	ldr	r0, [r3, #0]
 8001dfa:	408a      	lsls	r2, r1
 8001dfc:	4302      	orrs	r2, r0
 8001dfe:	601a      	str	r2, [r3, #0]
 8001e00:	4770      	bx	lr
			ODR = (volatile unsigned long *) (&GPIO_B + offset);
 8001e02:	4b07      	ldr	r3, [pc, #28]	@ (8001e20 <Write_GPIO+0x3c>)
 8001e04:	e7f7      	b.n	8001df6 <Write_GPIO+0x12>
	state ? (*ODR |= (state<<pin)) : (*ODR &= ~(1<<pin));
 8001e06:	681a      	ldr	r2, [r3, #0]
 8001e08:	2001      	movs	r0, #1
 8001e0a:	fa00 f101 	lsl.w	r1, r0, r1
 8001e0e:	ea22 0201 	bic.w	r2, r2, r1
 8001e12:	601a      	str	r2, [r3, #0]
}
 8001e14:	4770      	bx	lr
 8001e16:	bf00      	nop
 8001e18:	4001100c 	.word	0x4001100c
 8001e1c:	4001080c 	.word	0x4001080c
 8001e20:	40010c0c 	.word	0x40010c0c

08001e24 <SPI_Init>:

#include "main.h"
#include "GAUL_Drivers/Low_Level_Drivers/GPIO_driver.h"
#include "GAUL_Drivers/Low_Level_Drivers/SPI_driver.h"

void SPI_Init(unsigned short spi) {
 8001e24:	b508      	push	{r3, lr}
    if(spi == 1) {
 8001e26:	2801      	cmp	r0, #1
 8001e28:	d002      	beq.n	8001e30 <SPI_Init+0xc>
        Init_GPIO(PA, 7, OUT50, O_AF_PP); // MOSI SPI1

        Write_GPIO(PA, 4, HIGH);

        SPI1->CR1 = SPI_CR1_MSTR | SPI_CR1_BR_1 | SPI_CR1_BR_2 | SPI_CR1_SSM | SPI_CR1_SSI | SPI_CR1_SPE;
    } else if(spi == 2) {
 8001e2a:	2802      	cmp	r0, #2
 8001e2c:	d026      	beq.n	8001e7c <SPI_Init+0x58>
        Write_GPIO(PA, 8, HIGH);
        Write_GPIO(PB, 12, HIGH);

        SPI2->CR1 = SPI_CR1_MSTR | SPI_CR1_BR_1 | SPI_CR1_BR_2 | SPI_CR1_SSM | SPI_CR1_SSI | SPI_CR1_SPE;
    }
}
 8001e2e:	bd08      	pop	{r3, pc}
        RCC->APB2ENR |= RCC_APB2ENR_SPI1EN;
 8001e30:	4a2b      	ldr	r2, [pc, #172]	@ (8001ee0 <SPI_Init+0xbc>)
 8001e32:	6993      	ldr	r3, [r2, #24]
 8001e34:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8001e38:	6193      	str	r3, [r2, #24]
        Init_GPIO(PA, 4, OUT50, O_GP_PP); // CS
 8001e3a:	2300      	movs	r3, #0
 8001e3c:	2203      	movs	r2, #3
 8001e3e:	2104      	movs	r1, #4
 8001e40:	f7ff ff86 	bl	8001d50 <Init_GPIO>
        Init_GPIO(PA, 5, OUT50, O_AF_PP); // CLK
 8001e44:	2302      	movs	r3, #2
 8001e46:	2203      	movs	r2, #3
 8001e48:	2105      	movs	r1, #5
 8001e4a:	2001      	movs	r0, #1
 8001e4c:	f7ff ff80 	bl	8001d50 <Init_GPIO>
        Init_GPIO(PA, 6, IN, I_PP);    // MISO SPI1
 8001e50:	2302      	movs	r3, #2
 8001e52:	2200      	movs	r2, #0
 8001e54:	2106      	movs	r1, #6
 8001e56:	2001      	movs	r0, #1
 8001e58:	f7ff ff7a 	bl	8001d50 <Init_GPIO>
        Init_GPIO(PA, 7, OUT50, O_AF_PP); // MOSI SPI1
 8001e5c:	2302      	movs	r3, #2
 8001e5e:	2203      	movs	r2, #3
 8001e60:	2107      	movs	r1, #7
 8001e62:	2001      	movs	r0, #1
 8001e64:	f7ff ff74 	bl	8001d50 <Init_GPIO>
        Write_GPIO(PA, 4, HIGH);
 8001e68:	2201      	movs	r2, #1
 8001e6a:	2104      	movs	r1, #4
 8001e6c:	4610      	mov	r0, r2
 8001e6e:	f7ff ffb9 	bl	8001de4 <Write_GPIO>
        SPI1->CR1 = SPI_CR1_MSTR | SPI_CR1_BR_1 | SPI_CR1_BR_2 | SPI_CR1_SSM | SPI_CR1_SSI | SPI_CR1_SPE;
 8001e72:	4b1c      	ldr	r3, [pc, #112]	@ (8001ee4 <SPI_Init+0xc0>)
 8001e74:	f44f 725d 	mov.w	r2, #884	@ 0x374
 8001e78:	601a      	str	r2, [r3, #0]
 8001e7a:	e7d8      	b.n	8001e2e <SPI_Init+0xa>
        RCC->APB1ENR |= RCC_APB1ENR_SPI2EN;
 8001e7c:	4a18      	ldr	r2, [pc, #96]	@ (8001ee0 <SPI_Init+0xbc>)
 8001e7e:	69d3      	ldr	r3, [r2, #28]
 8001e80:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001e84:	61d3      	str	r3, [r2, #28]
        Init_GPIO(PA, 8, OUT50, O_GP_PP); // CS (optionnel)
 8001e86:	2300      	movs	r3, #0
 8001e88:	2203      	movs	r2, #3
 8001e8a:	2108      	movs	r1, #8
 8001e8c:	2001      	movs	r0, #1
 8001e8e:	f7ff ff5f 	bl	8001d50 <Init_GPIO>
        Init_GPIO(PB, 12, OUT50, O_GP_PP); // CS
 8001e92:	2300      	movs	r3, #0
 8001e94:	2203      	movs	r2, #3
 8001e96:	210c      	movs	r1, #12
 8001e98:	2002      	movs	r0, #2
 8001e9a:	f7ff ff59 	bl	8001d50 <Init_GPIO>
        Init_GPIO(PB, 13, OUT50, O_AF_PP); // CLK
 8001e9e:	2302      	movs	r3, #2
 8001ea0:	2203      	movs	r2, #3
 8001ea2:	210d      	movs	r1, #13
 8001ea4:	4618      	mov	r0, r3
 8001ea6:	f7ff ff53 	bl	8001d50 <Init_GPIO>
        Init_GPIO(PB, 14, IN, I_PP);    // MISO SPI2
 8001eaa:	2302      	movs	r3, #2
 8001eac:	2200      	movs	r2, #0
 8001eae:	210e      	movs	r1, #14
 8001eb0:	4618      	mov	r0, r3
 8001eb2:	f7ff ff4d 	bl	8001d50 <Init_GPIO>
        Init_GPIO(PB, 15, OUT50, O_AF_PP); // MOSI SPI2
 8001eb6:	2302      	movs	r3, #2
 8001eb8:	2203      	movs	r2, #3
 8001eba:	210f      	movs	r1, #15
 8001ebc:	4618      	mov	r0, r3
 8001ebe:	f7ff ff47 	bl	8001d50 <Init_GPIO>
        Write_GPIO(PA, 8, HIGH);
 8001ec2:	2201      	movs	r2, #1
 8001ec4:	2108      	movs	r1, #8
 8001ec6:	4610      	mov	r0, r2
 8001ec8:	f7ff ff8c 	bl	8001de4 <Write_GPIO>
        Write_GPIO(PB, 12, HIGH);
 8001ecc:	2201      	movs	r2, #1
 8001ece:	210c      	movs	r1, #12
 8001ed0:	2002      	movs	r0, #2
 8001ed2:	f7ff ff87 	bl	8001de4 <Write_GPIO>
        SPI2->CR1 = SPI_CR1_MSTR | SPI_CR1_BR_1 | SPI_CR1_BR_2 | SPI_CR1_SSM | SPI_CR1_SSI | SPI_CR1_SPE;
 8001ed6:	4b04      	ldr	r3, [pc, #16]	@ (8001ee8 <SPI_Init+0xc4>)
 8001ed8:	f44f 725d 	mov.w	r2, #884	@ 0x374
 8001edc:	601a      	str	r2, [r3, #0]
}
 8001ede:	e7a6      	b.n	8001e2e <SPI_Init+0xa>
 8001ee0:	40021000 	.word	0x40021000
 8001ee4:	40013000 	.word	0x40013000
 8001ee8:	40003800 	.word	0x40003800

08001eec <SPI2_TX>:

    uint8_t temp = SPI1->DR;
    temp = SPI1->SR;
}

void SPI2_TX(uint8_t *data, int size) {
 8001eec:	468c      	mov	ip, r1

    for (int i = 0; i < size; ++i) {
 8001eee:	2200      	movs	r2, #0
 8001ef0:	e008      	b.n	8001f04 <SPI2_TX+0x18>
        while (!(SPI2->SR & SPI_SR_TXE)) {}
 8001ef2:	4b0c      	ldr	r3, [pc, #48]	@ (8001f24 <SPI2_TX+0x38>)
 8001ef4:	689b      	ldr	r3, [r3, #8]
 8001ef6:	f013 0f02 	tst.w	r3, #2
 8001efa:	d0fa      	beq.n	8001ef2 <SPI2_TX+0x6>
        SPI2->DR = data[i];
 8001efc:	5c81      	ldrb	r1, [r0, r2]
 8001efe:	4b09      	ldr	r3, [pc, #36]	@ (8001f24 <SPI2_TX+0x38>)
 8001f00:	60d9      	str	r1, [r3, #12]
    for (int i = 0; i < size; ++i) {
 8001f02:	3201      	adds	r2, #1
 8001f04:	4562      	cmp	r2, ip
 8001f06:	dbf4      	blt.n	8001ef2 <SPI2_TX+0x6>
    }

    while (!(SPI2->SR & SPI_SR_TXE)) {}
 8001f08:	4b06      	ldr	r3, [pc, #24]	@ (8001f24 <SPI2_TX+0x38>)
 8001f0a:	689b      	ldr	r3, [r3, #8]
 8001f0c:	f013 0f02 	tst.w	r3, #2
 8001f10:	d0fa      	beq.n	8001f08 <SPI2_TX+0x1c>
    while (SPI2->SR & SPI_SR_BSY) {}
 8001f12:	4b04      	ldr	r3, [pc, #16]	@ (8001f24 <SPI2_TX+0x38>)
 8001f14:	689b      	ldr	r3, [r3, #8]
 8001f16:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8001f1a:	d1fa      	bne.n	8001f12 <SPI2_TX+0x26>

    uint8_t temp = SPI2->DR;
 8001f1c:	4b01      	ldr	r3, [pc, #4]	@ (8001f24 <SPI2_TX+0x38>)
 8001f1e:	68da      	ldr	r2, [r3, #12]
    temp = SPI2->SR;
 8001f20:	689b      	ldr	r3, [r3, #8]
}
 8001f22:	4770      	bx	lr
 8001f24:	40003800 	.word	0x40003800

08001f28 <SPI2_RX>:
    }
}

void SPI2_RX(uint8_t *data, int size) {

    while (size) {
 8001f28:	e011      	b.n	8001f4e <SPI2_RX+0x26>
        while (SPI2->SR & SPI_SR_BSY) {}
 8001f2a:	4b0a      	ldr	r3, [pc, #40]	@ (8001f54 <SPI2_RX+0x2c>)
 8001f2c:	689b      	ldr	r3, [r3, #8]
 8001f2e:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8001f32:	d1fa      	bne.n	8001f2a <SPI2_RX+0x2>
        SPI2->DR = 0;
 8001f34:	4b07      	ldr	r3, [pc, #28]	@ (8001f54 <SPI2_RX+0x2c>)
 8001f36:	2200      	movs	r2, #0
 8001f38:	60da      	str	r2, [r3, #12]
        while (!(SPI2->SR & SPI_SR_RXNE)) {}
 8001f3a:	4b06      	ldr	r3, [pc, #24]	@ (8001f54 <SPI2_RX+0x2c>)
 8001f3c:	689b      	ldr	r3, [r3, #8]
 8001f3e:	f013 0f01 	tst.w	r3, #1
 8001f42:	d0fa      	beq.n	8001f3a <SPI2_RX+0x12>
        *data++ = SPI2->DR;
 8001f44:	4b03      	ldr	r3, [pc, #12]	@ (8001f54 <SPI2_RX+0x2c>)
 8001f46:	68db      	ldr	r3, [r3, #12]
 8001f48:	f800 3b01 	strb.w	r3, [r0], #1
        --size;
 8001f4c:	3901      	subs	r1, #1
    while (size) {
 8001f4e:	2900      	cmp	r1, #0
 8001f50:	d1eb      	bne.n	8001f2a <SPI2_RX+0x2>
    }
}
 8001f52:	4770      	bx	lr
 8001f54:	40003800 	.word	0x40003800

08001f58 <USART_Init>:
#include "GAUL_Drivers/Low_Level_Drivers/USART_driver.h"
#include "main.h"


void USART_Init(unsigned short usart)
{
 8001f58:	b508      	push	{r3, lr}
    if(usart == 1) {
 8001f5a:	2801      	cmp	r0, #1
 8001f5c:	d004      	beq.n	8001f68 <USART_Init+0x10>

        USART1->CR1 |= USART_CR1_UE; // Activer USART (0x0C)
        USART1->CR1 |= USART_CR1_TE; // Activer la transmission
        USART1->CR1 |= USART_CR1_RE; // Activer la réception
    }
    else if(usart == 2) {
 8001f5e:	2802      	cmp	r0, #2
 8001f60:	d021      	beq.n	8001fa6 <USART_Init+0x4e>

        USART2->CR1 |= USART_CR1_UE; // Activer USART (0x10)
        USART2->CR1 |= USART_CR1_TE; // Activer la transmission
        USART2->CR1 |= USART_CR1_RE; // Activer la réception
    }
    else if(usart == 3) {
 8001f62:	2803      	cmp	r0, #3
 8001f64:	d03e      	beq.n	8001fe4 <USART_Init+0x8c>

        USART3->CR1 |= USART_CR1_UE; // Activer USART (0x14)
        USART3->CR1 |= USART_CR1_TE; // Activer la transmission
        USART3->CR1 |= USART_CR1_RE; // Activer la réception
    }
}
 8001f66:	bd08      	pop	{r3, pc}
        RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 8001f68:	4a2e      	ldr	r2, [pc, #184]	@ (8002024 <USART_Init+0xcc>)
 8001f6a:	6993      	ldr	r3, [r2, #24]
 8001f6c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001f70:	6193      	str	r3, [r2, #24]
        Init_GPIO(PB, 6, OUT50, O_AF_PP); // TX
 8001f72:	2302      	movs	r3, #2
 8001f74:	2203      	movs	r2, #3
 8001f76:	2106      	movs	r1, #6
 8001f78:	4618      	mov	r0, r3
 8001f7a:	f7ff fee9 	bl	8001d50 <Init_GPIO>
        Init_GPIO(PB, 7, IN, I_PP); // RX
 8001f7e:	2302      	movs	r3, #2
 8001f80:	2200      	movs	r2, #0
 8001f82:	2107      	movs	r1, #7
 8001f84:	4618      	mov	r0, r3
 8001f86:	f7ff fee3 	bl	8001d50 <Init_GPIO>
        USART1->CR1 |= USART_CR1_UE; // Activer USART (0x0C)
 8001f8a:	4b27      	ldr	r3, [pc, #156]	@ (8002028 <USART_Init+0xd0>)
 8001f8c:	68da      	ldr	r2, [r3, #12]
 8001f8e:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8001f92:	60da      	str	r2, [r3, #12]
        USART1->CR1 |= USART_CR1_TE; // Activer la transmission
 8001f94:	68da      	ldr	r2, [r3, #12]
 8001f96:	f042 0208 	orr.w	r2, r2, #8
 8001f9a:	60da      	str	r2, [r3, #12]
        USART1->CR1 |= USART_CR1_RE; // Activer la réception
 8001f9c:	68da      	ldr	r2, [r3, #12]
 8001f9e:	f042 0204 	orr.w	r2, r2, #4
 8001fa2:	60da      	str	r2, [r3, #12]
 8001fa4:	e7df      	b.n	8001f66 <USART_Init+0xe>
        RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 8001fa6:	4a1f      	ldr	r2, [pc, #124]	@ (8002024 <USART_Init+0xcc>)
 8001fa8:	69d3      	ldr	r3, [r2, #28]
 8001faa:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001fae:	61d3      	str	r3, [r2, #28]
        Init_GPIO(PA, 2, OUT50, O_AF_PP); // TX
 8001fb0:	2302      	movs	r3, #2
 8001fb2:	2203      	movs	r2, #3
 8001fb4:	4619      	mov	r1, r3
 8001fb6:	2001      	movs	r0, #1
 8001fb8:	f7ff feca 	bl	8001d50 <Init_GPIO>
        Init_GPIO(PA, 3, IN, I_PP); // RX
 8001fbc:	2302      	movs	r3, #2
 8001fbe:	2200      	movs	r2, #0
 8001fc0:	2103      	movs	r1, #3
 8001fc2:	2001      	movs	r0, #1
 8001fc4:	f7ff fec4 	bl	8001d50 <Init_GPIO>
        USART2->CR1 |= USART_CR1_UE; // Activer USART (0x10)
 8001fc8:	4b18      	ldr	r3, [pc, #96]	@ (800202c <USART_Init+0xd4>)
 8001fca:	68da      	ldr	r2, [r3, #12]
 8001fcc:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8001fd0:	60da      	str	r2, [r3, #12]
        USART2->CR1 |= USART_CR1_TE; // Activer la transmission
 8001fd2:	68da      	ldr	r2, [r3, #12]
 8001fd4:	f042 0208 	orr.w	r2, r2, #8
 8001fd8:	60da      	str	r2, [r3, #12]
        USART2->CR1 |= USART_CR1_RE; // Activer la réception
 8001fda:	68da      	ldr	r2, [r3, #12]
 8001fdc:	f042 0204 	orr.w	r2, r2, #4
 8001fe0:	60da      	str	r2, [r3, #12]
 8001fe2:	e7c0      	b.n	8001f66 <USART_Init+0xe>
        RCC->APB1ENR |= RCC_APB1ENR_USART3EN ;
 8001fe4:	4a0f      	ldr	r2, [pc, #60]	@ (8002024 <USART_Init+0xcc>)
 8001fe6:	69d3      	ldr	r3, [r2, #28]
 8001fe8:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001fec:	61d3      	str	r3, [r2, #28]
        Init_GPIO(PB, 10, OUT50, O_AF_PP); // TX
 8001fee:	2302      	movs	r3, #2
 8001ff0:	2203      	movs	r2, #3
 8001ff2:	210a      	movs	r1, #10
 8001ff4:	4618      	mov	r0, r3
 8001ff6:	f7ff feab 	bl	8001d50 <Init_GPIO>
        Init_GPIO(PB, 11, IN, I_PP); // RX
 8001ffa:	2302      	movs	r3, #2
 8001ffc:	2200      	movs	r2, #0
 8001ffe:	210b      	movs	r1, #11
 8002000:	4618      	mov	r0, r3
 8002002:	f7ff fea5 	bl	8001d50 <Init_GPIO>
        USART3->CR1 |= USART_CR1_UE; // Activer USART (0x14)
 8002006:	4b0a      	ldr	r3, [pc, #40]	@ (8002030 <USART_Init+0xd8>)
 8002008:	68da      	ldr	r2, [r3, #12]
 800200a:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800200e:	60da      	str	r2, [r3, #12]
        USART3->CR1 |= USART_CR1_TE; // Activer la transmission
 8002010:	68da      	ldr	r2, [r3, #12]
 8002012:	f042 0208 	orr.w	r2, r2, #8
 8002016:	60da      	str	r2, [r3, #12]
        USART3->CR1 |= USART_CR1_RE; // Activer la réception
 8002018:	68da      	ldr	r2, [r3, #12]
 800201a:	f042 0204 	orr.w	r2, r2, #4
 800201e:	60da      	str	r2, [r3, #12]
}
 8002020:	e7a1      	b.n	8001f66 <USART_Init+0xe>
 8002022:	bf00      	nop
 8002024:	40021000 	.word	0x40021000
 8002028:	40013800 	.word	0x40013800
 800202c:	40004400 	.word	0x40004400
 8002030:	40004800 	.word	0x40004800

08002034 <USART_TX>:

void USART_TX(unsigned short usart, const uint8_t *data, int size) {
 8002034:	b410      	push	{r4}

    if (usart == 1) {
 8002036:	2801      	cmp	r0, #1
 8002038:	d027      	beq.n	800208a <USART_TX+0x56>
        for (int i = 0; i < size; i++) {
            while (!(USART1->SR & USART_SR_TXE));
            USART1->DR = data[i];
            while (!(USART1->SR & USART_SR_TC));
        }
    } else if (usart == 2) {
 800203a:	2802      	cmp	r0, #2
 800203c:	d038      	beq.n	80020b0 <USART_TX+0x7c>
        for (int i = 0; i < size; i++) {
            while (!(USART2->SR & USART_SR_TXE));
            USART2->DR = data[i];
            while (!(USART2->SR & USART_SR_TC));
        }
    } else if (usart == 3) {
 800203e:	2803      	cmp	r0, #3
 8002040:	d121      	bne.n	8002086 <USART_TX+0x52>
        for (int i = 0; i < size; i++) {
 8002042:	2000      	movs	r0, #0
 8002044:	4290      	cmp	r0, r2
 8002046:	da1e      	bge.n	8002086 <USART_TX+0x52>
            while (!(USART3->SR & USART_SR_TXE));
 8002048:	4b1a      	ldr	r3, [pc, #104]	@ (80020b4 <USART_TX+0x80>)
 800204a:	681b      	ldr	r3, [r3, #0]
 800204c:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8002050:	d0fa      	beq.n	8002048 <USART_TX+0x14>
            USART3->DR = data[i];
 8002052:	5c0c      	ldrb	r4, [r1, r0]
 8002054:	4b17      	ldr	r3, [pc, #92]	@ (80020b4 <USART_TX+0x80>)
 8002056:	605c      	str	r4, [r3, #4]
            while (!(USART3->SR & USART_SR_TC));
 8002058:	4b16      	ldr	r3, [pc, #88]	@ (80020b4 <USART_TX+0x80>)
 800205a:	681b      	ldr	r3, [r3, #0]
 800205c:	f013 0f40 	tst.w	r3, #64	@ 0x40
 8002060:	d0fa      	beq.n	8002058 <USART_TX+0x24>
        for (int i = 0; i < size; i++) {
 8002062:	3001      	adds	r0, #1
 8002064:	e7ee      	b.n	8002044 <USART_TX+0x10>
            while (!(USART1->SR & USART_SR_TXE));
 8002066:	4b14      	ldr	r3, [pc, #80]	@ (80020b8 <USART_TX+0x84>)
 8002068:	681b      	ldr	r3, [r3, #0]
 800206a:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800206e:	d0fa      	beq.n	8002066 <USART_TX+0x32>
            USART1->DR = data[i];
 8002070:	5c0c      	ldrb	r4, [r1, r0]
 8002072:	4b11      	ldr	r3, [pc, #68]	@ (80020b8 <USART_TX+0x84>)
 8002074:	605c      	str	r4, [r3, #4]
            while (!(USART1->SR & USART_SR_TC));
 8002076:	4b10      	ldr	r3, [pc, #64]	@ (80020b8 <USART_TX+0x84>)
 8002078:	681b      	ldr	r3, [r3, #0]
 800207a:	f013 0f40 	tst.w	r3, #64	@ 0x40
 800207e:	d0fa      	beq.n	8002076 <USART_TX+0x42>
        for (int i = 0; i < size; i++) {
 8002080:	3001      	adds	r0, #1
 8002082:	4290      	cmp	r0, r2
 8002084:	dbef      	blt.n	8002066 <USART_TX+0x32>
        }
    }
}
 8002086:	bc10      	pop	{r4}
 8002088:	4770      	bx	lr
        for (int i = 0; i < size; i++) {
 800208a:	2000      	movs	r0, #0
 800208c:	e7f9      	b.n	8002082 <USART_TX+0x4e>
            while (!(USART2->SR & USART_SR_TXE));
 800208e:	4b0b      	ldr	r3, [pc, #44]	@ (80020bc <USART_TX+0x88>)
 8002090:	681b      	ldr	r3, [r3, #0]
 8002092:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8002096:	d0fa      	beq.n	800208e <USART_TX+0x5a>
            USART2->DR = data[i];
 8002098:	5c0c      	ldrb	r4, [r1, r0]
 800209a:	4b08      	ldr	r3, [pc, #32]	@ (80020bc <USART_TX+0x88>)
 800209c:	605c      	str	r4, [r3, #4]
            while (!(USART2->SR & USART_SR_TC));
 800209e:	4b07      	ldr	r3, [pc, #28]	@ (80020bc <USART_TX+0x88>)
 80020a0:	681b      	ldr	r3, [r3, #0]
 80020a2:	f013 0f40 	tst.w	r3, #64	@ 0x40
 80020a6:	d0fa      	beq.n	800209e <USART_TX+0x6a>
        for (int i = 0; i < size; i++) {
 80020a8:	3001      	adds	r0, #1
 80020aa:	4290      	cmp	r0, r2
 80020ac:	dbef      	blt.n	800208e <USART_TX+0x5a>
 80020ae:	e7ea      	b.n	8002086 <USART_TX+0x52>
 80020b0:	2000      	movs	r0, #0
 80020b2:	e7fa      	b.n	80020aa <USART_TX+0x76>
 80020b4:	40004800 	.word	0x40004800
 80020b8:	40013800 	.word	0x40013800
 80020bc:	40004400 	.word	0x40004400

080020c0 <ITM_SendChar>:
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80020c0:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80020c4:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	@ 0xe80
 80020c8:	f013 0f01 	tst.w	r3, #1
 80020cc:	d011      	beq.n	80020f2 <ITM_SendChar+0x32>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 80020ce:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80020d2:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	@ 0xe00
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80020d6:	f013 0f01 	tst.w	r3, #1
 80020da:	d101      	bne.n	80020e0 <ITM_SendChar+0x20>
 80020dc:	4770      	bx	lr
  {
    while (ITM->PORT[0U].u32 == 0UL)
    {
      __NOP();
 80020de:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 80020e0:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80020e4:	681b      	ldr	r3, [r3, #0]
 80020e6:	2b00      	cmp	r3, #0
 80020e8:	d0f9      	beq.n	80020de <ITM_SendChar+0x1e>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 80020ea:	b2c3      	uxtb	r3, r0
 80020ec:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 80020f0:	7013      	strb	r3, [r2, #0]
  }
  return (ch);
}
 80020f2:	4770      	bx	lr

080020f4 <STM32_SetMode>:
	packet.data[index + 3] = (uint8_t)(data & 0xFF);
}

uint8_t STM32_SetMode(uint8_t mode) {

	if(mode != MODE_PREFLIGHT && mode != MODE_INFLIGHT && mode != MODE_POSTFLIGHT) {
 80020f4:	2802      	cmp	r0, #2
 80020f6:	d803      	bhi.n	8002100 <STM32_SetMode+0xc>
		return 0;
	}
	packet.header_states.mode = mode;
 80020f8:	4b02      	ldr	r3, [pc, #8]	@ (8002104 <STM32_SetMode+0x10>)
 80020fa:	7018      	strb	r0, [r3, #0]
	return 1; // OK
 80020fc:	2001      	movs	r0, #1
 80020fe:	4770      	bx	lr
		return 0;
 8002100:	2000      	movs	r0, #0
}
 8002102:	4770      	bx	lr
 8002104:	2000024c 	.word	0x2000024c

08002108 <_write>:

}

/* USER CODE BEGIN 4 */
int _write(int le, char *ptr, int len)
{
 8002108:	b570      	push	{r4, r5, r6, lr}
 800210a:	460c      	mov	r4, r1
 800210c:	4616      	mov	r6, r2
	int DataIdx;
	for(DataIdx = 0; DataIdx < len; DataIdx++)
 800210e:	2500      	movs	r5, #0
 8002110:	e004      	b.n	800211c <_write+0x14>
	{
		ITM_SendChar(*ptr++);
 8002112:	f814 0b01 	ldrb.w	r0, [r4], #1
 8002116:	f7ff ffd3 	bl	80020c0 <ITM_SendChar>
	for(DataIdx = 0; DataIdx < len; DataIdx++)
 800211a:	3501      	adds	r5, #1
 800211c:	42b5      	cmp	r5, r6
 800211e:	dbf8      	blt.n	8002112 <_write+0xa>
	}
	return len;
}
 8002120:	4630      	mov	r0, r6
 8002122:	bd70      	pop	{r4, r5, r6, pc}

08002124 <Error_Handler>:
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002124:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002126:	e7fe      	b.n	8002126 <Error_Handler+0x2>

08002128 <MX_USART1_UART_Init>:
{
 8002128:	b508      	push	{r3, lr}
  huart1.Instance = USART1;
 800212a:	480a      	ldr	r0, [pc, #40]	@ (8002154 <MX_USART1_UART_Init+0x2c>)
 800212c:	4b0a      	ldr	r3, [pc, #40]	@ (8002158 <MX_USART1_UART_Init+0x30>)
 800212e:	6003      	str	r3, [r0, #0]
  huart1.Init.BaudRate = 9600;
 8002130:	f44f 5316 	mov.w	r3, #9600	@ 0x2580
 8002134:	6043      	str	r3, [r0, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8002136:	2300      	movs	r3, #0
 8002138:	6083      	str	r3, [r0, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 800213a:	60c3      	str	r3, [r0, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 800213c:	6103      	str	r3, [r0, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 800213e:	220c      	movs	r2, #12
 8002140:	6142      	str	r2, [r0, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002142:	6183      	str	r3, [r0, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8002144:	61c3      	str	r3, [r0, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8002146:	f002 fea1 	bl	8004e8c <HAL_UART_Init>
 800214a:	b900      	cbnz	r0, 800214e <MX_USART1_UART_Init+0x26>
}
 800214c:	bd08      	pop	{r3, pc}
    Error_Handler();
 800214e:	f7ff ffe9 	bl	8002124 <Error_Handler>
 8002152:	bf00      	nop
 8002154:	20000358 	.word	0x20000358
 8002158:	40013800 	.word	0x40013800

0800215c <MX_USART2_UART_Init>:
{
 800215c:	b508      	push	{r3, lr}
  huart2.Instance = USART2;
 800215e:	480a      	ldr	r0, [pc, #40]	@ (8002188 <MX_USART2_UART_Init+0x2c>)
 8002160:	4b0a      	ldr	r3, [pc, #40]	@ (800218c <MX_USART2_UART_Init+0x30>)
 8002162:	6003      	str	r3, [r0, #0]
  huart2.Init.BaudRate = 9600;
 8002164:	f44f 5316 	mov.w	r3, #9600	@ 0x2580
 8002168:	6043      	str	r3, [r0, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800216a:	2300      	movs	r3, #0
 800216c:	6083      	str	r3, [r0, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 800216e:	60c3      	str	r3, [r0, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8002170:	6103      	str	r3, [r0, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8002172:	220c      	movs	r2, #12
 8002174:	6142      	str	r2, [r0, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002176:	6183      	str	r3, [r0, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8002178:	61c3      	str	r3, [r0, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800217a:	f002 fe87 	bl	8004e8c <HAL_UART_Init>
 800217e:	b900      	cbnz	r0, 8002182 <MX_USART2_UART_Init+0x26>
}
 8002180:	bd08      	pop	{r3, pc}
    Error_Handler();
 8002182:	f7ff ffcf 	bl	8002124 <Error_Handler>
 8002186:	bf00      	nop
 8002188:	20000310 	.word	0x20000310
 800218c:	40004400 	.word	0x40004400

08002190 <MX_USART3_UART_Init>:
{
 8002190:	b508      	push	{r3, lr}
  huart3.Instance = USART3;
 8002192:	480a      	ldr	r0, [pc, #40]	@ (80021bc <MX_USART3_UART_Init+0x2c>)
 8002194:	4b0a      	ldr	r3, [pc, #40]	@ (80021c0 <MX_USART3_UART_Init+0x30>)
 8002196:	6003      	str	r3, [r0, #0]
  huart3.Init.BaudRate = 9600;
 8002198:	f44f 5316 	mov.w	r3, #9600	@ 0x2580
 800219c:	6043      	str	r3, [r0, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 800219e:	2300      	movs	r3, #0
 80021a0:	6083      	str	r3, [r0, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 80021a2:	60c3      	str	r3, [r0, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 80021a4:	6103      	str	r3, [r0, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 80021a6:	220c      	movs	r2, #12
 80021a8:	6142      	str	r2, [r0, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80021aa:	6183      	str	r3, [r0, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 80021ac:	61c3      	str	r3, [r0, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 80021ae:	f002 fe6d 	bl	8004e8c <HAL_UART_Init>
 80021b2:	b900      	cbnz	r0, 80021b6 <MX_USART3_UART_Init+0x26>
}
 80021b4:	bd08      	pop	{r3, pc}
    Error_Handler();
 80021b6:	f7ff ffb5 	bl	8002124 <Error_Handler>
 80021ba:	bf00      	nop
 80021bc:	200002c8 	.word	0x200002c8
 80021c0:	40004800 	.word	0x40004800

080021c4 <MX_TIM3_Init>:
{
 80021c4:	b500      	push	{lr}
 80021c6:	b08f      	sub	sp, #60	@ 0x3c
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80021c8:	2300      	movs	r3, #0
 80021ca:	930a      	str	r3, [sp, #40]	@ 0x28
 80021cc:	930b      	str	r3, [sp, #44]	@ 0x2c
 80021ce:	930c      	str	r3, [sp, #48]	@ 0x30
 80021d0:	930d      	str	r3, [sp, #52]	@ 0x34
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80021d2:	9308      	str	r3, [sp, #32]
 80021d4:	9309      	str	r3, [sp, #36]	@ 0x24
  TIM_OC_InitTypeDef sConfigOC = {0};
 80021d6:	9301      	str	r3, [sp, #4]
 80021d8:	9302      	str	r3, [sp, #8]
 80021da:	9303      	str	r3, [sp, #12]
 80021dc:	9304      	str	r3, [sp, #16]
 80021de:	9305      	str	r3, [sp, #20]
 80021e0:	9306      	str	r3, [sp, #24]
 80021e2:	9307      	str	r3, [sp, #28]
  htim3.Instance = TIM3;
 80021e4:	481e      	ldr	r0, [pc, #120]	@ (8002260 <MX_TIM3_Init+0x9c>)
 80021e6:	4a1f      	ldr	r2, [pc, #124]	@ (8002264 <MX_TIM3_Init+0xa0>)
 80021e8:	6002      	str	r2, [r0, #0]
  htim3.Init.Prescaler = 127;
 80021ea:	227f      	movs	r2, #127	@ 0x7f
 80021ec:	6042      	str	r2, [r0, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80021ee:	6083      	str	r3, [r0, #8]
  htim3.Init.Period = 20;
 80021f0:	2214      	movs	r2, #20
 80021f2:	60c2      	str	r2, [r0, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80021f4:	6103      	str	r3, [r0, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80021f6:	6183      	str	r3, [r0, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80021f8:	f002 f938 	bl	800446c <HAL_TIM_Base_Init>
 80021fc:	bb28      	cbnz	r0, 800224a <MX_TIM3_Init+0x86>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80021fe:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8002202:	930a      	str	r3, [sp, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8002204:	a90a      	add	r1, sp, #40	@ 0x28
 8002206:	4816      	ldr	r0, [pc, #88]	@ (8002260 <MX_TIM3_Init+0x9c>)
 8002208:	f002 fa9a 	bl	8004740 <HAL_TIM_ConfigClockSource>
 800220c:	b9f8      	cbnz	r0, 800224e <MX_TIM3_Init+0x8a>
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 800220e:	4814      	ldr	r0, [pc, #80]	@ (8002260 <MX_TIM3_Init+0x9c>)
 8002210:	f002 f97b 	bl	800450a <HAL_TIM_PWM_Init>
 8002214:	b9e8      	cbnz	r0, 8002252 <MX_TIM3_Init+0x8e>
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002216:	2300      	movs	r3, #0
 8002218:	9308      	str	r3, [sp, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800221a:	9309      	str	r3, [sp, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 800221c:	a908      	add	r1, sp, #32
 800221e:	4810      	ldr	r0, [pc, #64]	@ (8002260 <MX_TIM3_Init+0x9c>)
 8002220:	f002 fdd6 	bl	8004dd0 <HAL_TIMEx_MasterConfigSynchronization>
 8002224:	b9b8      	cbnz	r0, 8002256 <MX_TIM3_Init+0x92>
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8002226:	2360      	movs	r3, #96	@ 0x60
 8002228:	9301      	str	r3, [sp, #4]
  sConfigOC.Pulse = 0;
 800222a:	2300      	movs	r3, #0
 800222c:	9302      	str	r3, [sp, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800222e:	9303      	str	r3, [sp, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8002230:	9305      	str	r3, [sp, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8002232:	220c      	movs	r2, #12
 8002234:	a901      	add	r1, sp, #4
 8002236:	480a      	ldr	r0, [pc, #40]	@ (8002260 <MX_TIM3_Init+0x9c>)
 8002238:	f002 f9c0 	bl	80045bc <HAL_TIM_PWM_ConfigChannel>
 800223c:	b968      	cbnz	r0, 800225a <MX_TIM3_Init+0x96>
  HAL_TIM_MspPostInit(&htim3);
 800223e:	4808      	ldr	r0, [pc, #32]	@ (8002260 <MX_TIM3_Init+0x9c>)
 8002240:	f000 fa3a 	bl	80026b8 <HAL_TIM_MspPostInit>
}
 8002244:	b00f      	add	sp, #60	@ 0x3c
 8002246:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 800224a:	f7ff ff6b 	bl	8002124 <Error_Handler>
    Error_Handler();
 800224e:	f7ff ff69 	bl	8002124 <Error_Handler>
    Error_Handler();
 8002252:	f7ff ff67 	bl	8002124 <Error_Handler>
    Error_Handler();
 8002256:	f7ff ff65 	bl	8002124 <Error_Handler>
    Error_Handler();
 800225a:	f7ff ff63 	bl	8002124 <Error_Handler>
 800225e:	bf00      	nop
 8002260:	200003a0 	.word	0x200003a0
 8002264:	40000400 	.word	0x40000400

08002268 <MX_TIM2_Init>:
{
 8002268:	b500      	push	{lr}
 800226a:	b087      	sub	sp, #28
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800226c:	2300      	movs	r3, #0
 800226e:	9302      	str	r3, [sp, #8]
 8002270:	9303      	str	r3, [sp, #12]
 8002272:	9304      	str	r3, [sp, #16]
 8002274:	9305      	str	r3, [sp, #20]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002276:	9300      	str	r3, [sp, #0]
 8002278:	9301      	str	r3, [sp, #4]
  htim2.Instance = TIM2;
 800227a:	4814      	ldr	r0, [pc, #80]	@ (80022cc <MX_TIM2_Init+0x64>)
 800227c:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8002280:	6002      	str	r2, [r0, #0]
  htim2.Init.Prescaler = 14400;
 8002282:	f44f 5261 	mov.w	r2, #14400	@ 0x3840
 8002286:	6042      	str	r2, [r0, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002288:	6083      	str	r3, [r0, #8]
  htim2.Init.Period = 65535;
 800228a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800228e:	60c2      	str	r2, [r0, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002290:	6103      	str	r3, [r0, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002292:	6183      	str	r3, [r0, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8002294:	f002 f8ea 	bl	800446c <HAL_TIM_Base_Init>
 8002298:	b990      	cbnz	r0, 80022c0 <MX_TIM2_Init+0x58>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800229a:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800229e:	9302      	str	r3, [sp, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80022a0:	a902      	add	r1, sp, #8
 80022a2:	480a      	ldr	r0, [pc, #40]	@ (80022cc <MX_TIM2_Init+0x64>)
 80022a4:	f002 fa4c 	bl	8004740 <HAL_TIM_ConfigClockSource>
 80022a8:	b960      	cbnz	r0, 80022c4 <MX_TIM2_Init+0x5c>
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80022aa:	2300      	movs	r3, #0
 80022ac:	9300      	str	r3, [sp, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80022ae:	9301      	str	r3, [sp, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80022b0:	4669      	mov	r1, sp
 80022b2:	4806      	ldr	r0, [pc, #24]	@ (80022cc <MX_TIM2_Init+0x64>)
 80022b4:	f002 fd8c 	bl	8004dd0 <HAL_TIMEx_MasterConfigSynchronization>
 80022b8:	b930      	cbnz	r0, 80022c8 <MX_TIM2_Init+0x60>
}
 80022ba:	b007      	add	sp, #28
 80022bc:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 80022c0:	f7ff ff30 	bl	8002124 <Error_Handler>
    Error_Handler();
 80022c4:	f7ff ff2e 	bl	8002124 <Error_Handler>
    Error_Handler();
 80022c8:	f7ff ff2c 	bl	8002124 <Error_Handler>
 80022cc:	200003e8 	.word	0x200003e8

080022d0 <MX_ADC1_Init>:
{
 80022d0:	b500      	push	{lr}
 80022d2:	b085      	sub	sp, #20
  ADC_ChannelConfTypeDef sConfig = {0};
 80022d4:	2300      	movs	r3, #0
 80022d6:	9301      	str	r3, [sp, #4]
 80022d8:	9302      	str	r3, [sp, #8]
 80022da:	9303      	str	r3, [sp, #12]
  hadc1.Instance = ADC1;
 80022dc:	480f      	ldr	r0, [pc, #60]	@ (800231c <MX_ADC1_Init+0x4c>)
 80022de:	4a10      	ldr	r2, [pc, #64]	@ (8002320 <MX_ADC1_Init+0x50>)
 80022e0:	6002      	str	r2, [r0, #0]
  hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 80022e2:	6083      	str	r3, [r0, #8]
  hadc1.Init.ContinuousConvMode = DISABLE;
 80022e4:	7303      	strb	r3, [r0, #12]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 80022e6:	7503      	strb	r3, [r0, #20]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80022e8:	f44f 2260 	mov.w	r2, #917504	@ 0xe0000
 80022ec:	61c2      	str	r2, [r0, #28]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80022ee:	6043      	str	r3, [r0, #4]
  hadc1.Init.NbrOfConversion = 1;
 80022f0:	2301      	movs	r3, #1
 80022f2:	6103      	str	r3, [r0, #16]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80022f4:	f000 fbb2 	bl	8002a5c <HAL_ADC_Init>
 80022f8:	b960      	cbnz	r0, 8002314 <MX_ADC1_Init+0x44>
  sConfig.Channel = ADC_CHANNEL_0;
 80022fa:	2300      	movs	r3, #0
 80022fc:	9301      	str	r3, [sp, #4]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 80022fe:	2201      	movs	r2, #1
 8002300:	9202      	str	r2, [sp, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 8002302:	9303      	str	r3, [sp, #12]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8002304:	a901      	add	r1, sp, #4
 8002306:	4805      	ldr	r0, [pc, #20]	@ (800231c <MX_ADC1_Init+0x4c>)
 8002308:	f000 fe6c 	bl	8002fe4 <HAL_ADC_ConfigChannel>
 800230c:	b920      	cbnz	r0, 8002318 <MX_ADC1_Init+0x48>
}
 800230e:	b005      	add	sp, #20
 8002310:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 8002314:	f7ff ff06 	bl	8002124 <Error_Handler>
    Error_Handler();
 8002318:	f7ff ff04 	bl	8002124 <Error_Handler>
 800231c:	20000438 	.word	0x20000438
 8002320:	40012400 	.word	0x40012400

08002324 <MX_CRC_Init>:
{
 8002324:	b508      	push	{r3, lr}
  hcrc.Instance = CRC;
 8002326:	4804      	ldr	r0, [pc, #16]	@ (8002338 <MX_CRC_Init+0x14>)
 8002328:	4b04      	ldr	r3, [pc, #16]	@ (800233c <MX_CRC_Init+0x18>)
 800232a:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800232c:	f001 f97f 	bl	800362e <HAL_CRC_Init>
 8002330:	b900      	cbnz	r0, 8002334 <MX_CRC_Init+0x10>
}
 8002332:	bd08      	pop	{r3, pc}
    Error_Handler();
 8002334:	f7ff fef6 	bl	8002124 <Error_Handler>
 8002338:	20000430 	.word	0x20000430
 800233c:	40023000 	.word	0x40023000

08002340 <SystemClock_Config>:
{
 8002340:	b500      	push	{lr}
 8002342:	b095      	sub	sp, #84	@ 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8002344:	2228      	movs	r2, #40	@ 0x28
 8002346:	2100      	movs	r1, #0
 8002348:	eb0d 0002 	add.w	r0, sp, r2
 800234c:	f003 fe54 	bl	8005ff8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002350:	2300      	movs	r3, #0
 8002352:	9305      	str	r3, [sp, #20]
 8002354:	9306      	str	r3, [sp, #24]
 8002356:	9307      	str	r3, [sp, #28]
 8002358:	9308      	str	r3, [sp, #32]
 800235a:	9309      	str	r3, [sp, #36]	@ 0x24
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 800235c:	9301      	str	r3, [sp, #4]
 800235e:	9302      	str	r3, [sp, #8]
 8002360:	9303      	str	r3, [sp, #12]
 8002362:	9304      	str	r3, [sp, #16]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8002364:	2201      	movs	r2, #1
 8002366:	920a      	str	r2, [sp, #40]	@ 0x28
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8002368:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 800236c:	930b      	str	r3, [sp, #44]	@ 0x2c
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV2;
 800236e:	f44f 3100 	mov.w	r1, #131072	@ 0x20000
 8002372:	910c      	str	r1, [sp, #48]	@ 0x30
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8002374:	920e      	str	r2, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8002376:	2202      	movs	r2, #2
 8002378:	9211      	str	r2, [sp, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800237a:	9312      	str	r3, [sp, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 800237c:	f44f 13e0 	mov.w	r3, #1835008	@ 0x1c0000
 8002380:	9313      	str	r3, [sp, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002382:	a80a      	add	r0, sp, #40	@ 0x28
 8002384:	f001 faf4 	bl	8003970 <HAL_RCC_OscConfig>
 8002388:	b9c8      	cbnz	r0, 80023be <SystemClock_Config+0x7e>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800238a:	230f      	movs	r3, #15
 800238c:	9305      	str	r3, [sp, #20]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800238e:	2102      	movs	r1, #2
 8002390:	9106      	str	r1, [sp, #24]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002392:	2300      	movs	r3, #0
 8002394:	9307      	str	r3, [sp, #28]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8002396:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800239a:	9208      	str	r2, [sp, #32]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800239c:	9309      	str	r3, [sp, #36]	@ 0x24
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 800239e:	a805      	add	r0, sp, #20
 80023a0:	f001 fd68 	bl	8003e74 <HAL_RCC_ClockConfig>
 80023a4:	b968      	cbnz	r0, 80023c2 <SystemClock_Config+0x82>
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 80023a6:	2302      	movs	r3, #2
 80023a8:	9301      	str	r3, [sp, #4]
  PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 80023aa:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80023ae:	9303      	str	r3, [sp, #12]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80023b0:	a801      	add	r0, sp, #4
 80023b2:	f001 feef 	bl	8004194 <HAL_RCCEx_PeriphCLKConfig>
 80023b6:	b930      	cbnz	r0, 80023c6 <SystemClock_Config+0x86>
}
 80023b8:	b015      	add	sp, #84	@ 0x54
 80023ba:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 80023be:	f7ff feb1 	bl	8002124 <Error_Handler>
    Error_Handler();
 80023c2:	f7ff feaf 	bl	8002124 <Error_Handler>
    Error_Handler();
 80023c6:	f7ff fead 	bl	8002124 <Error_Handler>
	...

080023cc <STM32_InitRoutine>:
void STM32_InitRoutine(void) {
 80023cc:	b570      	push	{r4, r5, r6, lr}
	HAL_Init();
 80023ce:	f000 fabf 	bl	8002950 <HAL_Init>
	SystemClock_Config();
 80023d2:	f7ff ffb5 	bl	8002340 <SystemClock_Config>
	MX_USART1_UART_Init();
 80023d6:	f7ff fea7 	bl	8002128 <MX_USART1_UART_Init>
	MX_USART2_UART_Init();
 80023da:	f7ff febf 	bl	800215c <MX_USART2_UART_Init>
	MX_USART3_UART_Init();
 80023de:	f7ff fed7 	bl	8002190 <MX_USART3_UART_Init>
	MX_TIM3_Init();
 80023e2:	f7ff feef 	bl	80021c4 <MX_TIM3_Init>
	MX_TIM2_Init();
 80023e6:	f7ff ff3f 	bl	8002268 <MX_TIM2_Init>
	MX_ADC1_Init();
 80023ea:	f7ff ff71 	bl	80022d0 <MX_ADC1_Init>
	MX_CRC_Init();
 80023ee:	f7ff ff99 	bl	8002324 <MX_CRC_Init>
	printf("|----------Starting----------|\r\n");
 80023f2:	4845      	ldr	r0, [pc, #276]	@ (8002508 <STM32_InitRoutine+0x13c>)
 80023f4:	f003 fd20 	bl	8005e38 <puts>
	SPI_Init(1);
 80023f8:	2001      	movs	r0, #1
 80023fa:	f7ff fd13 	bl	8001e24 <SPI_Init>
	printf("(+) SPI1 succeeded...\r\n");
 80023fe:	4843      	ldr	r0, [pc, #268]	@ (800250c <STM32_InitRoutine+0x140>)
 8002400:	f003 fd1a 	bl	8005e38 <puts>
	SPI_Init(2);
 8002404:	2002      	movs	r0, #2
 8002406:	f7ff fd0d 	bl	8001e24 <SPI_Init>
	printf("(+) SPI2 succeeded...\r\n");
 800240a:	4841      	ldr	r0, [pc, #260]	@ (8002510 <STM32_InitRoutine+0x144>)
 800240c:	f003 fd14 	bl	8005e38 <puts>
	USART_Init(1);
 8002410:	2001      	movs	r0, #1
 8002412:	f7ff fda1 	bl	8001f58 <USART_Init>
	printf("(+) USART1 succeeded...\r\n");
 8002416:	483f      	ldr	r0, [pc, #252]	@ (8002514 <STM32_InitRoutine+0x148>)
 8002418:	f003 fd0e 	bl	8005e38 <puts>
	USART_Init(2);
 800241c:	2002      	movs	r0, #2
 800241e:	f7ff fd9b 	bl	8001f58 <USART_Init>
	printf("(+) USART2 succeeded...\r\n");
 8002422:	483d      	ldr	r0, [pc, #244]	@ (8002518 <STM32_InitRoutine+0x14c>)
 8002424:	f003 fd08 	bl	8005e38 <puts>
	USART_Init(3);
 8002428:	2003      	movs	r0, #3
 800242a:	f7ff fd95 	bl	8001f58 <USART_Init>
	printf("(+) USART3 succeeded...\r\n");
 800242e:	483b      	ldr	r0, [pc, #236]	@ (800251c <STM32_InitRoutine+0x150>)
 8002430:	f003 fd02 	bl	8005e38 <puts>
	printf("|----------Components initialization----------|\r\n");
 8002434:	483a      	ldr	r0, [pc, #232]	@ (8002520 <STM32_InitRoutine+0x154>)
 8002436:	f003 fcff 	bl	8005e38 <puts>
	STM32_SetMode(MODE_PREFLIGHT);
 800243a:	2000      	movs	r0, #0
 800243c:	f7ff fe5a 	bl	80020f4 <STM32_SetMode>
	printf("(+) Mode flight: %i succeeded...\r\n", packet.header_states.mode);
 8002440:	4b38      	ldr	r3, [pc, #224]	@ (8002524 <STM32_InitRoutine+0x158>)
 8002442:	7819      	ldrb	r1, [r3, #0]
 8002444:	4838      	ldr	r0, [pc, #224]	@ (8002528 <STM32_InitRoutine+0x15c>)
 8002446:	f003 fc8f 	bl	8005d68 <iprintf>
	WS2812_Init();
 800244a:	f7ff fc35 	bl	8001cb8 <WS2812_Init>
	printf("(+) WS2812 succeeded...\r\n");
 800244e:	4837      	ldr	r0, [pc, #220]	@ (800252c <STM32_InitRoutine+0x160>)
 8002450:	f003 fcf2 	bl	8005e38 <puts>
	if (CD74HC4051_Init(&hadc1) != 1) {
 8002454:	4836      	ldr	r0, [pc, #216]	@ (8002530 <STM32_InitRoutine+0x164>)
 8002456:	f7ff f999 	bl	800178c <CD74HC4051_Init>
 800245a:	2801      	cmp	r0, #1
 800245c:	d030      	beq.n	80024c0 <STM32_InitRoutine+0xf4>
	  printf("(-) CD74HC4051 failed...\r\n");
 800245e:	4835      	ldr	r0, [pc, #212]	@ (8002534 <STM32_InitRoutine+0x168>)
 8002460:	f003 fcea 	bl	8005e38 <puts>
	packet.header_states.barometer = BMP280_Init(&bmp_data, BMP_SPI_PORT) == 1 ? 0x01 : 0x00;
 8002464:	2102      	movs	r1, #2
 8002466:	4834      	ldr	r0, [pc, #208]	@ (8002538 <STM32_InitRoutine+0x16c>)
 8002468:	f7ff f96a 	bl	8001740 <BMP280_Init>
 800246c:	2801      	cmp	r0, #1
 800246e:	bf14      	ite	ne
 8002470:	2000      	movne	r0, #0
 8002472:	2001      	moveq	r0, #1
 8002474:	4b2b      	ldr	r3, [pc, #172]	@ (8002524 <STM32_InitRoutine+0x158>)
 8002476:	7118      	strb	r0, [r3, #4]
	printf(packet.header_states.barometer ? "(+) BMP280 succeeded...\r\n" : "(-) BMP280 failed...\r\n");
 8002478:	2800      	cmp	r0, #0
 800247a:	d03e      	beq.n	80024fa <STM32_InitRoutine+0x12e>
 800247c:	482f      	ldr	r0, [pc, #188]	@ (800253c <STM32_InitRoutine+0x170>)
 800247e:	f003 fc73 	bl	8005d68 <iprintf>
	packet.header_states.accelerometer = ICM20602_Init(&icm_data) == 0 ? 0x01 : 0x00;
 8002482:	482f      	ldr	r0, [pc, #188]	@ (8002540 <STM32_InitRoutine+0x174>)
 8002484:	f7ff fb02 	bl	8001a8c <ICM20602_Init>
 8002488:	fab0 f080 	clz	r0, r0
 800248c:	0940      	lsrs	r0, r0, #5
 800248e:	4b25      	ldr	r3, [pc, #148]	@ (8002524 <STM32_InitRoutine+0x158>)
 8002490:	70d8      	strb	r0, [r3, #3]
	printf(packet.header_states.accelerometer ? "(+) ICM20602 succeeded...\r\n" : "(-) ICM20602 failed...\r\n");
 8002492:	2800      	cmp	r0, #0
 8002494:	d033      	beq.n	80024fe <STM32_InitRoutine+0x132>
 8002496:	482b      	ldr	r0, [pc, #172]	@ (8002544 <STM32_InitRoutine+0x178>)
 8002498:	f003 fc66 	bl	8005d68 <iprintf>
	packet.header_states.gps = L76LM33_Init(GPS_USART_PORT) == 1 ? 0x01 : 0x00;
 800249c:	2002      	movs	r0, #2
 800249e:	f7ff fb65 	bl	8001b6c <L76LM33_Init>
 80024a2:	2801      	cmp	r0, #1
 80024a4:	bf14      	ite	ne
 80024a6:	2000      	movne	r0, #0
 80024a8:	2001      	moveq	r0, #1
 80024aa:	4b1e      	ldr	r3, [pc, #120]	@ (8002524 <STM32_InitRoutine+0x158>)
 80024ac:	7158      	strb	r0, [r3, #5]
	printf(packet.header_states.gps ? "(+) L76LM33 succeeded...\r\n" : "(-) L76LM33 failed...\r\n");
 80024ae:	b340      	cbz	r0, 8002502 <STM32_InitRoutine+0x136>
 80024b0:	4825      	ldr	r0, [pc, #148]	@ (8002548 <STM32_InitRoutine+0x17c>)
 80024b2:	f003 fc59 	bl	8005d68 <iprintf>
	HM10BLE_Init(&ble_data, BT_USART_PORT);
 80024b6:	2103      	movs	r1, #3
 80024b8:	4824      	ldr	r0, [pc, #144]	@ (800254c <STM32_InitRoutine+0x180>)
 80024ba:	f7ff fa09 	bl	80018d0 <HM10BLE_Init>
}
 80024be:	bd70      	pop	{r4, r5, r6, pc}
		packet.header_states.pyro0 = CD74HC4051_AnRead(&hadc1, CHANNEL_0, PYRO_CHANNEL_0, VREFPYRO);
 80024c0:	4e23      	ldr	r6, [pc, #140]	@ (8002550 <STM32_InitRoutine+0x184>)
 80024c2:	4d1b      	ldr	r5, [pc, #108]	@ (8002530 <STM32_InitRoutine+0x164>)
 80024c4:	4633      	mov	r3, r6
 80024c6:	2201      	movs	r2, #1
 80024c8:	2100      	movs	r1, #0
 80024ca:	4628      	mov	r0, r5
 80024cc:	f7ff f990 	bl	80017f0 <CD74HC4051_AnRead>
 80024d0:	4c14      	ldr	r4, [pc, #80]	@ (8002524 <STM32_InitRoutine+0x158>)
 80024d2:	7060      	strb	r0, [r4, #1]
		packet.header_states.pyro1 = CD74HC4051_AnRead(&hadc1, CHANNEL_0, PYRO_CHANNEL_1, VREFPYRO);
 80024d4:	4633      	mov	r3, r6
 80024d6:	2202      	movs	r2, #2
 80024d8:	2100      	movs	r1, #0
 80024da:	4628      	mov	r0, r5
 80024dc:	f7ff f988 	bl	80017f0 <CD74HC4051_AnRead>
 80024e0:	70a0      	strb	r0, [r4, #2]
		printf(" -> Pyro0 state: %i\r\n", packet.header_states.pyro0);
 80024e2:	7861      	ldrb	r1, [r4, #1]
 80024e4:	481b      	ldr	r0, [pc, #108]	@ (8002554 <STM32_InitRoutine+0x188>)
 80024e6:	f003 fc3f 	bl	8005d68 <iprintf>
		printf(" -> Pyro1 state: %i\r\n", packet.header_states.pyro1);
 80024ea:	78a1      	ldrb	r1, [r4, #2]
 80024ec:	481a      	ldr	r0, [pc, #104]	@ (8002558 <STM32_InitRoutine+0x18c>)
 80024ee:	f003 fc3b 	bl	8005d68 <iprintf>
		printf("(+) CD74HC4051 succeeded...\r\n");
 80024f2:	481a      	ldr	r0, [pc, #104]	@ (800255c <STM32_InitRoutine+0x190>)
 80024f4:	f003 fca0 	bl	8005e38 <puts>
 80024f8:	e7b4      	b.n	8002464 <STM32_InitRoutine+0x98>
	printf(packet.header_states.barometer ? "(+) BMP280 succeeded...\r\n" : "(-) BMP280 failed...\r\n");
 80024fa:	4819      	ldr	r0, [pc, #100]	@ (8002560 <STM32_InitRoutine+0x194>)
 80024fc:	e7bf      	b.n	800247e <STM32_InitRoutine+0xb2>
	printf(packet.header_states.accelerometer ? "(+) ICM20602 succeeded...\r\n" : "(-) ICM20602 failed...\r\n");
 80024fe:	4819      	ldr	r0, [pc, #100]	@ (8002564 <STM32_InitRoutine+0x198>)
 8002500:	e7ca      	b.n	8002498 <STM32_InitRoutine+0xcc>
	printf(packet.header_states.gps ? "(+) L76LM33 succeeded...\r\n" : "(-) L76LM33 failed...\r\n");
 8002502:	4819      	ldr	r0, [pc, #100]	@ (8002568 <STM32_InitRoutine+0x19c>)
 8002504:	e7d5      	b.n	80024b2 <STM32_InitRoutine+0xe6>
 8002506:	bf00      	nop
 8002508:	08007cf8 	.word	0x08007cf8
 800250c:	08007d18 	.word	0x08007d18
 8002510:	08007d30 	.word	0x08007d30
 8002514:	08007d48 	.word	0x08007d48
 8002518:	08007d64 	.word	0x08007d64
 800251c:	08007d80 	.word	0x08007d80
 8002520:	08007d9c 	.word	0x08007d9c
 8002524:	2000024c 	.word	0x2000024c
 8002528:	08007dd0 	.word	0x08007dd0
 800252c:	08007df4 	.word	0x08007df4
 8002530:	20000438 	.word	0x20000438
 8002534:	08007e10 	.word	0x08007e10
 8002538:	2000029c 	.word	0x2000029c
 800253c:	08007c58 	.word	0x08007c58
 8002540:	20000264 	.word	0x20000264
 8002544:	08007c8c 	.word	0x08007c8c
 8002548:	08007cc4 	.word	0x08007cc4
 800254c:	2000025c 	.word	0x2000025c
 8002550:	40533333 	.word	0x40533333
 8002554:	08007e2c 	.word	0x08007e2c
 8002558:	08007e44 	.word	0x08007e44
 800255c:	08007e5c 	.word	0x08007e5c
 8002560:	08007c74 	.word	0x08007c74
 8002564:	08007ca8 	.word	0x08007ca8
 8002568:	08007ce0 	.word	0x08007ce0

0800256c <main>:
{
 800256c:	b508      	push	{r3, lr}
	STM32_InitRoutine();
 800256e:	f7ff ff2d 	bl	80023cc <STM32_InitRoutine>
  HAL_Init();
 8002572:	f000 f9ed 	bl	8002950 <HAL_Init>
  SystemClock_Config();
 8002576:	f7ff fee3 	bl	8002340 <SystemClock_Config>
  MX_USART1_UART_Init();
 800257a:	f7ff fdd5 	bl	8002128 <MX_USART1_UART_Init>
  MX_USART2_UART_Init();
 800257e:	f7ff fded 	bl	800215c <MX_USART2_UART_Init>
  MX_USART3_UART_Init();
 8002582:	f7ff fe05 	bl	8002190 <MX_USART3_UART_Init>
  MX_TIM3_Init();
 8002586:	f7ff fe1d 	bl	80021c4 <MX_TIM3_Init>
  MX_TIM2_Init();
 800258a:	f7ff fe6d 	bl	8002268 <MX_TIM2_Init>
  MX_ADC1_Init();
 800258e:	f7ff fe9f 	bl	80022d0 <MX_ADC1_Init>
  MX_CRC_Init();
 8002592:	f7ff fec7 	bl	8002324 <MX_CRC_Init>
  MX_FATFS_Init();
 8002596:	f002 fd57 	bl	8005048 <MX_FATFS_Init>
	while (1)
 800259a:	e7fe      	b.n	800259a <main+0x2e>

0800259c <HAL_MspInit>:
 800259c:	b082      	sub	sp, #8
 800259e:	4b0e      	ldr	r3, [pc, #56]	@ (80025d8 <HAL_MspInit+0x3c>)
 80025a0:	699a      	ldr	r2, [r3, #24]
 80025a2:	f042 0201 	orr.w	r2, r2, #1
 80025a6:	619a      	str	r2, [r3, #24]
 80025a8:	699a      	ldr	r2, [r3, #24]
 80025aa:	f002 0201 	and.w	r2, r2, #1
 80025ae:	9200      	str	r2, [sp, #0]
 80025b0:	9a00      	ldr	r2, [sp, #0]
 80025b2:	69da      	ldr	r2, [r3, #28]
 80025b4:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80025b8:	61da      	str	r2, [r3, #28]
 80025ba:	69db      	ldr	r3, [r3, #28]
 80025bc:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80025c0:	9301      	str	r3, [sp, #4]
 80025c2:	9b01      	ldr	r3, [sp, #4]
 80025c4:	4a05      	ldr	r2, [pc, #20]	@ (80025dc <HAL_MspInit+0x40>)
 80025c6:	6853      	ldr	r3, [r2, #4]
 80025c8:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 80025cc:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 80025d0:	6053      	str	r3, [r2, #4]
 80025d2:	b002      	add	sp, #8
 80025d4:	4770      	bx	lr
 80025d6:	bf00      	nop
 80025d8:	40021000 	.word	0x40021000
 80025dc:	40010000 	.word	0x40010000

080025e0 <HAL_ADC_MspInit>:
 80025e0:	b500      	push	{lr}
 80025e2:	b087      	sub	sp, #28
 80025e4:	2300      	movs	r3, #0
 80025e6:	9302      	str	r3, [sp, #8]
 80025e8:	9303      	str	r3, [sp, #12]
 80025ea:	9304      	str	r3, [sp, #16]
 80025ec:	9305      	str	r3, [sp, #20]
 80025ee:	6802      	ldr	r2, [r0, #0]
 80025f0:	4b11      	ldr	r3, [pc, #68]	@ (8002638 <HAL_ADC_MspInit+0x58>)
 80025f2:	429a      	cmp	r2, r3
 80025f4:	d002      	beq.n	80025fc <HAL_ADC_MspInit+0x1c>
 80025f6:	b007      	add	sp, #28
 80025f8:	f85d fb04 	ldr.w	pc, [sp], #4
 80025fc:	f503 436c 	add.w	r3, r3, #60416	@ 0xec00
 8002600:	699a      	ldr	r2, [r3, #24]
 8002602:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8002606:	619a      	str	r2, [r3, #24]
 8002608:	699a      	ldr	r2, [r3, #24]
 800260a:	f402 7200 	and.w	r2, r2, #512	@ 0x200
 800260e:	9200      	str	r2, [sp, #0]
 8002610:	9a00      	ldr	r2, [sp, #0]
 8002612:	699a      	ldr	r2, [r3, #24]
 8002614:	f042 0204 	orr.w	r2, r2, #4
 8002618:	619a      	str	r2, [r3, #24]
 800261a:	699b      	ldr	r3, [r3, #24]
 800261c:	f003 0304 	and.w	r3, r3, #4
 8002620:	9301      	str	r3, [sp, #4]
 8002622:	9b01      	ldr	r3, [sp, #4]
 8002624:	2301      	movs	r3, #1
 8002626:	9302      	str	r3, [sp, #8]
 8002628:	2303      	movs	r3, #3
 800262a:	9303      	str	r3, [sp, #12]
 800262c:	a902      	add	r1, sp, #8
 800262e:	4803      	ldr	r0, [pc, #12]	@ (800263c <HAL_ADC_MspInit+0x5c>)
 8002630:	f001 f81a 	bl	8003668 <HAL_GPIO_Init>
 8002634:	e7df      	b.n	80025f6 <HAL_ADC_MspInit+0x16>
 8002636:	bf00      	nop
 8002638:	40012400 	.word	0x40012400
 800263c:	40010800 	.word	0x40010800

08002640 <HAL_CRC_MspInit>:
 8002640:	6802      	ldr	r2, [r0, #0]
 8002642:	4b09      	ldr	r3, [pc, #36]	@ (8002668 <HAL_CRC_MspInit+0x28>)
 8002644:	429a      	cmp	r2, r3
 8002646:	d000      	beq.n	800264a <HAL_CRC_MspInit+0xa>
 8002648:	4770      	bx	lr
 800264a:	b082      	sub	sp, #8
 800264c:	f5a3 5300 	sub.w	r3, r3, #8192	@ 0x2000
 8002650:	695a      	ldr	r2, [r3, #20]
 8002652:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8002656:	615a      	str	r2, [r3, #20]
 8002658:	695b      	ldr	r3, [r3, #20]
 800265a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800265e:	9301      	str	r3, [sp, #4]
 8002660:	9b01      	ldr	r3, [sp, #4]
 8002662:	b002      	add	sp, #8
 8002664:	4770      	bx	lr
 8002666:	bf00      	nop
 8002668:	40023000 	.word	0x40023000

0800266c <HAL_TIM_Base_MspInit>:
 800266c:	b082      	sub	sp, #8
 800266e:	6803      	ldr	r3, [r0, #0]
 8002670:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002674:	d004      	beq.n	8002680 <HAL_TIM_Base_MspInit+0x14>
 8002676:	4a0e      	ldr	r2, [pc, #56]	@ (80026b0 <HAL_TIM_Base_MspInit+0x44>)
 8002678:	4293      	cmp	r3, r2
 800267a:	d00d      	beq.n	8002698 <HAL_TIM_Base_MspInit+0x2c>
 800267c:	b002      	add	sp, #8
 800267e:	4770      	bx	lr
 8002680:	f503 3304 	add.w	r3, r3, #135168	@ 0x21000
 8002684:	69da      	ldr	r2, [r3, #28]
 8002686:	f042 0201 	orr.w	r2, r2, #1
 800268a:	61da      	str	r2, [r3, #28]
 800268c:	69db      	ldr	r3, [r3, #28]
 800268e:	f003 0301 	and.w	r3, r3, #1
 8002692:	9300      	str	r3, [sp, #0]
 8002694:	9b00      	ldr	r3, [sp, #0]
 8002696:	e7f1      	b.n	800267c <HAL_TIM_Base_MspInit+0x10>
 8002698:	4b06      	ldr	r3, [pc, #24]	@ (80026b4 <HAL_TIM_Base_MspInit+0x48>)
 800269a:	69da      	ldr	r2, [r3, #28]
 800269c:	f042 0202 	orr.w	r2, r2, #2
 80026a0:	61da      	str	r2, [r3, #28]
 80026a2:	69db      	ldr	r3, [r3, #28]
 80026a4:	f003 0302 	and.w	r3, r3, #2
 80026a8:	9301      	str	r3, [sp, #4]
 80026aa:	9b01      	ldr	r3, [sp, #4]
 80026ac:	e7e6      	b.n	800267c <HAL_TIM_Base_MspInit+0x10>
 80026ae:	bf00      	nop
 80026b0:	40000400 	.word	0x40000400
 80026b4:	40021000 	.word	0x40021000

080026b8 <HAL_TIM_MspPostInit>:
 80026b8:	b500      	push	{lr}
 80026ba:	b087      	sub	sp, #28
 80026bc:	2300      	movs	r3, #0
 80026be:	9302      	str	r3, [sp, #8]
 80026c0:	9303      	str	r3, [sp, #12]
 80026c2:	9304      	str	r3, [sp, #16]
 80026c4:	9305      	str	r3, [sp, #20]
 80026c6:	6802      	ldr	r2, [r0, #0]
 80026c8:	4b0c      	ldr	r3, [pc, #48]	@ (80026fc <HAL_TIM_MspPostInit+0x44>)
 80026ca:	429a      	cmp	r2, r3
 80026cc:	d002      	beq.n	80026d4 <HAL_TIM_MspPostInit+0x1c>
 80026ce:	b007      	add	sp, #28
 80026d0:	f85d fb04 	ldr.w	pc, [sp], #4
 80026d4:	f503 3303 	add.w	r3, r3, #134144	@ 0x20c00
 80026d8:	699a      	ldr	r2, [r3, #24]
 80026da:	f042 0208 	orr.w	r2, r2, #8
 80026de:	619a      	str	r2, [r3, #24]
 80026e0:	699b      	ldr	r3, [r3, #24]
 80026e2:	f003 0308 	and.w	r3, r3, #8
 80026e6:	9301      	str	r3, [sp, #4]
 80026e8:	9b01      	ldr	r3, [sp, #4]
 80026ea:	2302      	movs	r3, #2
 80026ec:	9302      	str	r3, [sp, #8]
 80026ee:	9303      	str	r3, [sp, #12]
 80026f0:	9305      	str	r3, [sp, #20]
 80026f2:	a902      	add	r1, sp, #8
 80026f4:	4802      	ldr	r0, [pc, #8]	@ (8002700 <HAL_TIM_MspPostInit+0x48>)
 80026f6:	f000 ffb7 	bl	8003668 <HAL_GPIO_Init>
 80026fa:	e7e8      	b.n	80026ce <HAL_TIM_MspPostInit+0x16>
 80026fc:	40000400 	.word	0x40000400
 8002700:	40010c00 	.word	0x40010c00

08002704 <HAL_UART_MspInit>:
 8002704:	b510      	push	{r4, lr}
 8002706:	b08a      	sub	sp, #40	@ 0x28
 8002708:	2300      	movs	r3, #0
 800270a:	9306      	str	r3, [sp, #24]
 800270c:	9307      	str	r3, [sp, #28]
 800270e:	9308      	str	r3, [sp, #32]
 8002710:	9309      	str	r3, [sp, #36]	@ 0x24
 8002712:	6803      	ldr	r3, [r0, #0]
 8002714:	4a45      	ldr	r2, [pc, #276]	@ (800282c <HAL_UART_MspInit+0x128>)
 8002716:	4293      	cmp	r3, r2
 8002718:	d007      	beq.n	800272a <HAL_UART_MspInit+0x26>
 800271a:	4a45      	ldr	r2, [pc, #276]	@ (8002830 <HAL_UART_MspInit+0x12c>)
 800271c:	4293      	cmp	r3, r2
 800271e:	d033      	beq.n	8002788 <HAL_UART_MspInit+0x84>
 8002720:	4a44      	ldr	r2, [pc, #272]	@ (8002834 <HAL_UART_MspInit+0x130>)
 8002722:	4293      	cmp	r3, r2
 8002724:	d058      	beq.n	80027d8 <HAL_UART_MspInit+0xd4>
 8002726:	b00a      	add	sp, #40	@ 0x28
 8002728:	bd10      	pop	{r4, pc}
 800272a:	4b43      	ldr	r3, [pc, #268]	@ (8002838 <HAL_UART_MspInit+0x134>)
 800272c:	699a      	ldr	r2, [r3, #24]
 800272e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8002732:	619a      	str	r2, [r3, #24]
 8002734:	699a      	ldr	r2, [r3, #24]
 8002736:	f402 4280 	and.w	r2, r2, #16384	@ 0x4000
 800273a:	9200      	str	r2, [sp, #0]
 800273c:	9a00      	ldr	r2, [sp, #0]
 800273e:	699a      	ldr	r2, [r3, #24]
 8002740:	f042 0208 	orr.w	r2, r2, #8
 8002744:	619a      	str	r2, [r3, #24]
 8002746:	699b      	ldr	r3, [r3, #24]
 8002748:	f003 0308 	and.w	r3, r3, #8
 800274c:	9301      	str	r3, [sp, #4]
 800274e:	9b01      	ldr	r3, [sp, #4]
 8002750:	2340      	movs	r3, #64	@ 0x40
 8002752:	9306      	str	r3, [sp, #24]
 8002754:	2302      	movs	r3, #2
 8002756:	9307      	str	r3, [sp, #28]
 8002758:	2303      	movs	r3, #3
 800275a:	9309      	str	r3, [sp, #36]	@ 0x24
 800275c:	4c37      	ldr	r4, [pc, #220]	@ (800283c <HAL_UART_MspInit+0x138>)
 800275e:	a906      	add	r1, sp, #24
 8002760:	4620      	mov	r0, r4
 8002762:	f000 ff81 	bl	8003668 <HAL_GPIO_Init>
 8002766:	2380      	movs	r3, #128	@ 0x80
 8002768:	9306      	str	r3, [sp, #24]
 800276a:	2300      	movs	r3, #0
 800276c:	9307      	str	r3, [sp, #28]
 800276e:	9308      	str	r3, [sp, #32]
 8002770:	a906      	add	r1, sp, #24
 8002772:	4620      	mov	r0, r4
 8002774:	f000 ff78 	bl	8003668 <HAL_GPIO_Init>
 8002778:	4a31      	ldr	r2, [pc, #196]	@ (8002840 <HAL_UART_MspInit+0x13c>)
 800277a:	6853      	ldr	r3, [r2, #4]
 800277c:	f043 63e0 	orr.w	r3, r3, #117440512	@ 0x7000000
 8002780:	f043 0304 	orr.w	r3, r3, #4
 8002784:	6053      	str	r3, [r2, #4]
 8002786:	e7ce      	b.n	8002726 <HAL_UART_MspInit+0x22>
 8002788:	4b2b      	ldr	r3, [pc, #172]	@ (8002838 <HAL_UART_MspInit+0x134>)
 800278a:	69da      	ldr	r2, [r3, #28]
 800278c:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8002790:	61da      	str	r2, [r3, #28]
 8002792:	69da      	ldr	r2, [r3, #28]
 8002794:	f402 3200 	and.w	r2, r2, #131072	@ 0x20000
 8002798:	9202      	str	r2, [sp, #8]
 800279a:	9a02      	ldr	r2, [sp, #8]
 800279c:	699a      	ldr	r2, [r3, #24]
 800279e:	f042 0204 	orr.w	r2, r2, #4
 80027a2:	619a      	str	r2, [r3, #24]
 80027a4:	699b      	ldr	r3, [r3, #24]
 80027a6:	f003 0304 	and.w	r3, r3, #4
 80027aa:	9303      	str	r3, [sp, #12]
 80027ac:	9b03      	ldr	r3, [sp, #12]
 80027ae:	2304      	movs	r3, #4
 80027b0:	9306      	str	r3, [sp, #24]
 80027b2:	2302      	movs	r3, #2
 80027b4:	9307      	str	r3, [sp, #28]
 80027b6:	2303      	movs	r3, #3
 80027b8:	9309      	str	r3, [sp, #36]	@ 0x24
 80027ba:	4c22      	ldr	r4, [pc, #136]	@ (8002844 <HAL_UART_MspInit+0x140>)
 80027bc:	a906      	add	r1, sp, #24
 80027be:	4620      	mov	r0, r4
 80027c0:	f000 ff52 	bl	8003668 <HAL_GPIO_Init>
 80027c4:	2308      	movs	r3, #8
 80027c6:	9306      	str	r3, [sp, #24]
 80027c8:	2300      	movs	r3, #0
 80027ca:	9307      	str	r3, [sp, #28]
 80027cc:	9308      	str	r3, [sp, #32]
 80027ce:	a906      	add	r1, sp, #24
 80027d0:	4620      	mov	r0, r4
 80027d2:	f000 ff49 	bl	8003668 <HAL_GPIO_Init>
 80027d6:	e7a6      	b.n	8002726 <HAL_UART_MspInit+0x22>
 80027d8:	4b17      	ldr	r3, [pc, #92]	@ (8002838 <HAL_UART_MspInit+0x134>)
 80027da:	69da      	ldr	r2, [r3, #28]
 80027dc:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 80027e0:	61da      	str	r2, [r3, #28]
 80027e2:	69da      	ldr	r2, [r3, #28]
 80027e4:	f402 2280 	and.w	r2, r2, #262144	@ 0x40000
 80027e8:	9204      	str	r2, [sp, #16]
 80027ea:	9a04      	ldr	r2, [sp, #16]
 80027ec:	699a      	ldr	r2, [r3, #24]
 80027ee:	f042 0208 	orr.w	r2, r2, #8
 80027f2:	619a      	str	r2, [r3, #24]
 80027f4:	699b      	ldr	r3, [r3, #24]
 80027f6:	f003 0308 	and.w	r3, r3, #8
 80027fa:	9305      	str	r3, [sp, #20]
 80027fc:	9b05      	ldr	r3, [sp, #20]
 80027fe:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8002802:	9306      	str	r3, [sp, #24]
 8002804:	2302      	movs	r3, #2
 8002806:	9307      	str	r3, [sp, #28]
 8002808:	2303      	movs	r3, #3
 800280a:	9309      	str	r3, [sp, #36]	@ 0x24
 800280c:	4c0b      	ldr	r4, [pc, #44]	@ (800283c <HAL_UART_MspInit+0x138>)
 800280e:	a906      	add	r1, sp, #24
 8002810:	4620      	mov	r0, r4
 8002812:	f000 ff29 	bl	8003668 <HAL_GPIO_Init>
 8002816:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800281a:	9306      	str	r3, [sp, #24]
 800281c:	2300      	movs	r3, #0
 800281e:	9307      	str	r3, [sp, #28]
 8002820:	9308      	str	r3, [sp, #32]
 8002822:	a906      	add	r1, sp, #24
 8002824:	4620      	mov	r0, r4
 8002826:	f000 ff1f 	bl	8003668 <HAL_GPIO_Init>
 800282a:	e77c      	b.n	8002726 <HAL_UART_MspInit+0x22>
 800282c:	40013800 	.word	0x40013800
 8002830:	40004400 	.word	0x40004400
 8002834:	40004800 	.word	0x40004800
 8002838:	40021000 	.word	0x40021000
 800283c:	40010c00 	.word	0x40010c00
 8002840:	40010000 	.word	0x40010000
 8002844:	40010800 	.word	0x40010800

08002848 <NMI_Handler>:
 8002848:	e7fe      	b.n	8002848 <NMI_Handler>

0800284a <HardFault_Handler>:
 800284a:	e7fe      	b.n	800284a <HardFault_Handler>

0800284c <MemManage_Handler>:
 800284c:	e7fe      	b.n	800284c <MemManage_Handler>

0800284e <BusFault_Handler>:
 800284e:	e7fe      	b.n	800284e <BusFault_Handler>

08002850 <UsageFault_Handler>:
 8002850:	e7fe      	b.n	8002850 <UsageFault_Handler>

08002852 <SVC_Handler>:
 8002852:	4770      	bx	lr

08002854 <DebugMon_Handler>:
 8002854:	4770      	bx	lr

08002856 <PendSV_Handler>:
 8002856:	4770      	bx	lr

08002858 <SysTick_Handler>:
 8002858:	b508      	push	{r3, lr}
 800285a:	f000 f8bf 	bl	80029dc <HAL_IncTick>
 800285e:	bd08      	pop	{r3, pc}

08002860 <_getpid>:
 8002860:	2001      	movs	r0, #1
 8002862:	4770      	bx	lr

08002864 <_kill>:
 8002864:	b508      	push	{r3, lr}
 8002866:	f003 fc29 	bl	80060bc <__errno>
 800286a:	2316      	movs	r3, #22
 800286c:	6003      	str	r3, [r0, #0]
 800286e:	f04f 30ff 	mov.w	r0, #4294967295
 8002872:	bd08      	pop	{r3, pc}

08002874 <_exit>:
 8002874:	b508      	push	{r3, lr}
 8002876:	f04f 31ff 	mov.w	r1, #4294967295
 800287a:	f7ff fff3 	bl	8002864 <_kill>
 800287e:	e7fe      	b.n	800287e <_exit+0xa>

08002880 <_read>:
 8002880:	b570      	push	{r4, r5, r6, lr}
 8002882:	460c      	mov	r4, r1
 8002884:	4616      	mov	r6, r2
 8002886:	2500      	movs	r5, #0
 8002888:	e006      	b.n	8002898 <_read+0x18>
 800288a:	f3af 8000 	nop.w
 800288e:	4621      	mov	r1, r4
 8002890:	f801 0b01 	strb.w	r0, [r1], #1
 8002894:	3501      	adds	r5, #1
 8002896:	460c      	mov	r4, r1
 8002898:	42b5      	cmp	r5, r6
 800289a:	dbf6      	blt.n	800288a <_read+0xa>
 800289c:	4630      	mov	r0, r6
 800289e:	bd70      	pop	{r4, r5, r6, pc}

080028a0 <_close>:
 80028a0:	f04f 30ff 	mov.w	r0, #4294967295
 80028a4:	4770      	bx	lr

080028a6 <_fstat>:
 80028a6:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80028aa:	604b      	str	r3, [r1, #4]
 80028ac:	2000      	movs	r0, #0
 80028ae:	4770      	bx	lr

080028b0 <_isatty>:
 80028b0:	2001      	movs	r0, #1
 80028b2:	4770      	bx	lr

080028b4 <_lseek>:
 80028b4:	2000      	movs	r0, #0
 80028b6:	4770      	bx	lr

080028b8 <_sbrk>:
 80028b8:	b510      	push	{r4, lr}
 80028ba:	4603      	mov	r3, r0
 80028bc:	4a0c      	ldr	r2, [pc, #48]	@ (80028f0 <_sbrk+0x38>)
 80028be:	490d      	ldr	r1, [pc, #52]	@ (80028f4 <_sbrk+0x3c>)
 80028c0:	480d      	ldr	r0, [pc, #52]	@ (80028f8 <_sbrk+0x40>)
 80028c2:	6800      	ldr	r0, [r0, #0]
 80028c4:	b140      	cbz	r0, 80028d8 <_sbrk+0x20>
 80028c6:	480c      	ldr	r0, [pc, #48]	@ (80028f8 <_sbrk+0x40>)
 80028c8:	6800      	ldr	r0, [r0, #0]
 80028ca:	4403      	add	r3, r0
 80028cc:	1a52      	subs	r2, r2, r1
 80028ce:	4293      	cmp	r3, r2
 80028d0:	d806      	bhi.n	80028e0 <_sbrk+0x28>
 80028d2:	4a09      	ldr	r2, [pc, #36]	@ (80028f8 <_sbrk+0x40>)
 80028d4:	6013      	str	r3, [r2, #0]
 80028d6:	bd10      	pop	{r4, pc}
 80028d8:	4807      	ldr	r0, [pc, #28]	@ (80028f8 <_sbrk+0x40>)
 80028da:	4c08      	ldr	r4, [pc, #32]	@ (80028fc <_sbrk+0x44>)
 80028dc:	6004      	str	r4, [r0, #0]
 80028de:	e7f2      	b.n	80028c6 <_sbrk+0xe>
 80028e0:	f003 fbec 	bl	80060bc <__errno>
 80028e4:	230c      	movs	r3, #12
 80028e6:	6003      	str	r3, [r0, #0]
 80028e8:	f04f 30ff 	mov.w	r0, #4294967295
 80028ec:	e7f3      	b.n	80028d6 <_sbrk+0x1e>
 80028ee:	bf00      	nop
 80028f0:	20005000 	.word	0x20005000
 80028f4:	00000400 	.word	0x00000400
 80028f8:	20000468 	.word	0x20000468
 80028fc:	200005d0 	.word	0x200005d0

08002900 <SystemInit>:
 8002900:	4770      	bx	lr
	...

08002904 <Reset_Handler>:
 8002904:	f7ff fffc 	bl	8002900 <SystemInit>
 8002908:	480b      	ldr	r0, [pc, #44]	@ (8002938 <LoopFillZerobss+0xe>)
 800290a:	490c      	ldr	r1, [pc, #48]	@ (800293c <LoopFillZerobss+0x12>)
 800290c:	4a0c      	ldr	r2, [pc, #48]	@ (8002940 <LoopFillZerobss+0x16>)
 800290e:	2300      	movs	r3, #0
 8002910:	e002      	b.n	8002918 <LoopCopyDataInit>

08002912 <CopyDataInit>:
 8002912:	58d4      	ldr	r4, [r2, r3]
 8002914:	50c4      	str	r4, [r0, r3]
 8002916:	3304      	adds	r3, #4

08002918 <LoopCopyDataInit>:
 8002918:	18c4      	adds	r4, r0, r3
 800291a:	428c      	cmp	r4, r1
 800291c:	d3f9      	bcc.n	8002912 <CopyDataInit>
 800291e:	4a09      	ldr	r2, [pc, #36]	@ (8002944 <LoopFillZerobss+0x1a>)
 8002920:	4c09      	ldr	r4, [pc, #36]	@ (8002948 <LoopFillZerobss+0x1e>)
 8002922:	2300      	movs	r3, #0
 8002924:	e001      	b.n	800292a <LoopFillZerobss>

08002926 <FillZerobss>:
 8002926:	6013      	str	r3, [r2, #0]
 8002928:	3204      	adds	r2, #4

0800292a <LoopFillZerobss>:
 800292a:	42a2      	cmp	r2, r4
 800292c:	d3fb      	bcc.n	8002926 <FillZerobss>
 800292e:	f003 fbcb 	bl	80060c8 <__libc_init_array>
 8002932:	f7ff fe1b 	bl	800256c <main>
 8002936:	4770      	bx	lr
 8002938:	20000000 	.word	0x20000000
 800293c:	200001e8 	.word	0x200001e8
 8002940:	0800823c 	.word	0x0800823c
 8002944:	200001e8 	.word	0x200001e8
 8002948:	200005d0 	.word	0x200005d0

0800294c <ADC1_2_IRQHandler>:
 800294c:	e7fe      	b.n	800294c <ADC1_2_IRQHandler>
	...

08002950 <HAL_Init>:
 8002950:	b580      	push	{r7, lr}
 8002952:	af00      	add	r7, sp, #0
 8002954:	4b08      	ldr	r3, [pc, #32]	@ (8002978 <HAL_Init+0x28>)
 8002956:	681b      	ldr	r3, [r3, #0]
 8002958:	4a07      	ldr	r2, [pc, #28]	@ (8002978 <HAL_Init+0x28>)
 800295a:	f043 0310 	orr.w	r3, r3, #16
 800295e:	6013      	str	r3, [r2, #0]
 8002960:	2003      	movs	r0, #3
 8002962:	f000 fe31 	bl	80035c8 <HAL_NVIC_SetPriorityGrouping>
 8002966:	200f      	movs	r0, #15
 8002968:	f000 f808 	bl	800297c <HAL_InitTick>
 800296c:	f7ff fe16 	bl	800259c <HAL_MspInit>
 8002970:	2300      	movs	r3, #0
 8002972:	4618      	mov	r0, r3
 8002974:	bd80      	pop	{r7, pc}
 8002976:	bf00      	nop
 8002978:	40022000 	.word	0x40022000

0800297c <HAL_InitTick>:
 800297c:	b580      	push	{r7, lr}
 800297e:	b082      	sub	sp, #8
 8002980:	af00      	add	r7, sp, #0
 8002982:	6078      	str	r0, [r7, #4]
 8002984:	4b12      	ldr	r3, [pc, #72]	@ (80029d0 <HAL_InitTick+0x54>)
 8002986:	681a      	ldr	r2, [r3, #0]
 8002988:	4b12      	ldr	r3, [pc, #72]	@ (80029d4 <HAL_InitTick+0x58>)
 800298a:	781b      	ldrb	r3, [r3, #0]
 800298c:	4619      	mov	r1, r3
 800298e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8002992:	fbb3 f3f1 	udiv	r3, r3, r1
 8002996:	fbb2 f3f3 	udiv	r3, r2, r3
 800299a:	4618      	mov	r0, r3
 800299c:	f000 fe3b 	bl	8003616 <HAL_SYSTICK_Config>
 80029a0:	4603      	mov	r3, r0
 80029a2:	2b00      	cmp	r3, #0
 80029a4:	d001      	beq.n	80029aa <HAL_InitTick+0x2e>
 80029a6:	2301      	movs	r3, #1
 80029a8:	e00e      	b.n	80029c8 <HAL_InitTick+0x4c>
 80029aa:	687b      	ldr	r3, [r7, #4]
 80029ac:	2b0f      	cmp	r3, #15
 80029ae:	d80a      	bhi.n	80029c6 <HAL_InitTick+0x4a>
 80029b0:	2200      	movs	r2, #0
 80029b2:	6879      	ldr	r1, [r7, #4]
 80029b4:	f04f 30ff 	mov.w	r0, #4294967295
 80029b8:	f000 fe11 	bl	80035de <HAL_NVIC_SetPriority>
 80029bc:	4a06      	ldr	r2, [pc, #24]	@ (80029d8 <HAL_InitTick+0x5c>)
 80029be:	687b      	ldr	r3, [r7, #4]
 80029c0:	6013      	str	r3, [r2, #0]
 80029c2:	2300      	movs	r3, #0
 80029c4:	e000      	b.n	80029c8 <HAL_InitTick+0x4c>
 80029c6:	2301      	movs	r3, #1
 80029c8:	4618      	mov	r0, r3
 80029ca:	3708      	adds	r7, #8
 80029cc:	46bd      	mov	sp, r7
 80029ce:	bd80      	pop	{r7, pc}
 80029d0:	20000000 	.word	0x20000000
 80029d4:	20000008 	.word	0x20000008
 80029d8:	20000004 	.word	0x20000004

080029dc <HAL_IncTick>:
 80029dc:	b480      	push	{r7}
 80029de:	af00      	add	r7, sp, #0
 80029e0:	4b05      	ldr	r3, [pc, #20]	@ (80029f8 <HAL_IncTick+0x1c>)
 80029e2:	781b      	ldrb	r3, [r3, #0]
 80029e4:	461a      	mov	r2, r3
 80029e6:	4b05      	ldr	r3, [pc, #20]	@ (80029fc <HAL_IncTick+0x20>)
 80029e8:	681b      	ldr	r3, [r3, #0]
 80029ea:	4413      	add	r3, r2
 80029ec:	4a03      	ldr	r2, [pc, #12]	@ (80029fc <HAL_IncTick+0x20>)
 80029ee:	6013      	str	r3, [r2, #0]
 80029f0:	bf00      	nop
 80029f2:	46bd      	mov	sp, r7
 80029f4:	bc80      	pop	{r7}
 80029f6:	4770      	bx	lr
 80029f8:	20000008 	.word	0x20000008
 80029fc:	2000046c 	.word	0x2000046c

08002a00 <HAL_GetTick>:
 8002a00:	b480      	push	{r7}
 8002a02:	af00      	add	r7, sp, #0
 8002a04:	4b02      	ldr	r3, [pc, #8]	@ (8002a10 <HAL_GetTick+0x10>)
 8002a06:	681b      	ldr	r3, [r3, #0]
 8002a08:	4618      	mov	r0, r3
 8002a0a:	46bd      	mov	sp, r7
 8002a0c:	bc80      	pop	{r7}
 8002a0e:	4770      	bx	lr
 8002a10:	2000046c 	.word	0x2000046c

08002a14 <HAL_Delay>:
 8002a14:	b580      	push	{r7, lr}
 8002a16:	b084      	sub	sp, #16
 8002a18:	af00      	add	r7, sp, #0
 8002a1a:	6078      	str	r0, [r7, #4]
 8002a1c:	f7ff fff0 	bl	8002a00 <HAL_GetTick>
 8002a20:	60b8      	str	r0, [r7, #8]
 8002a22:	687b      	ldr	r3, [r7, #4]
 8002a24:	60fb      	str	r3, [r7, #12]
 8002a26:	68fb      	ldr	r3, [r7, #12]
 8002a28:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002a2c:	d005      	beq.n	8002a3a <HAL_Delay+0x26>
 8002a2e:	4b0a      	ldr	r3, [pc, #40]	@ (8002a58 <HAL_Delay+0x44>)
 8002a30:	781b      	ldrb	r3, [r3, #0]
 8002a32:	461a      	mov	r2, r3
 8002a34:	68fb      	ldr	r3, [r7, #12]
 8002a36:	4413      	add	r3, r2
 8002a38:	60fb      	str	r3, [r7, #12]
 8002a3a:	bf00      	nop
 8002a3c:	f7ff ffe0 	bl	8002a00 <HAL_GetTick>
 8002a40:	4602      	mov	r2, r0
 8002a42:	68bb      	ldr	r3, [r7, #8]
 8002a44:	1ad3      	subs	r3, r2, r3
 8002a46:	68fa      	ldr	r2, [r7, #12]
 8002a48:	429a      	cmp	r2, r3
 8002a4a:	d8f7      	bhi.n	8002a3c <HAL_Delay+0x28>
 8002a4c:	bf00      	nop
 8002a4e:	bf00      	nop
 8002a50:	3710      	adds	r7, #16
 8002a52:	46bd      	mov	sp, r7
 8002a54:	bd80      	pop	{r7, pc}
 8002a56:	bf00      	nop
 8002a58:	20000008 	.word	0x20000008

08002a5c <HAL_ADC_Init>:
 8002a5c:	b580      	push	{r7, lr}
 8002a5e:	b086      	sub	sp, #24
 8002a60:	af00      	add	r7, sp, #0
 8002a62:	6078      	str	r0, [r7, #4]
 8002a64:	2300      	movs	r3, #0
 8002a66:	75fb      	strb	r3, [r7, #23]
 8002a68:	2300      	movs	r3, #0
 8002a6a:	613b      	str	r3, [r7, #16]
 8002a6c:	2300      	movs	r3, #0
 8002a6e:	60bb      	str	r3, [r7, #8]
 8002a70:	2300      	movs	r3, #0
 8002a72:	60fb      	str	r3, [r7, #12]
 8002a74:	687b      	ldr	r3, [r7, #4]
 8002a76:	2b00      	cmp	r3, #0
 8002a78:	d101      	bne.n	8002a7e <HAL_ADC_Init+0x22>
 8002a7a:	2301      	movs	r3, #1
 8002a7c:	e0be      	b.n	8002bfc <HAL_ADC_Init+0x1a0>
 8002a7e:	687b      	ldr	r3, [r7, #4]
 8002a80:	689b      	ldr	r3, [r3, #8]
 8002a82:	2b00      	cmp	r3, #0
 8002a84:	687b      	ldr	r3, [r7, #4]
 8002a86:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002a88:	2b00      	cmp	r3, #0
 8002a8a:	d109      	bne.n	8002aa0 <HAL_ADC_Init+0x44>
 8002a8c:	687b      	ldr	r3, [r7, #4]
 8002a8e:	2200      	movs	r2, #0
 8002a90:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002a92:	687b      	ldr	r3, [r7, #4]
 8002a94:	2200      	movs	r2, #0
 8002a96:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002a9a:	6878      	ldr	r0, [r7, #4]
 8002a9c:	f7ff fda0 	bl	80025e0 <HAL_ADC_MspInit>
 8002aa0:	6878      	ldr	r0, [r7, #4]
 8002aa2:	f000 fbf1 	bl	8003288 <ADC_ConversionStop_Disable>
 8002aa6:	4603      	mov	r3, r0
 8002aa8:	75fb      	strb	r3, [r7, #23]
 8002aaa:	687b      	ldr	r3, [r7, #4]
 8002aac:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002aae:	f003 0310 	and.w	r3, r3, #16
 8002ab2:	2b00      	cmp	r3, #0
 8002ab4:	f040 8099 	bne.w	8002bea <HAL_ADC_Init+0x18e>
 8002ab8:	7dfb      	ldrb	r3, [r7, #23]
 8002aba:	2b00      	cmp	r3, #0
 8002abc:	f040 8095 	bne.w	8002bea <HAL_ADC_Init+0x18e>
 8002ac0:	687b      	ldr	r3, [r7, #4]
 8002ac2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002ac4:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8002ac8:	f023 0302 	bic.w	r3, r3, #2
 8002acc:	f043 0202 	orr.w	r2, r3, #2
 8002ad0:	687b      	ldr	r3, [r7, #4]
 8002ad2:	629a      	str	r2, [r3, #40]	@ 0x28
 8002ad4:	687b      	ldr	r3, [r7, #4]
 8002ad6:	685a      	ldr	r2, [r3, #4]
 8002ad8:	687b      	ldr	r3, [r7, #4]
 8002ada:	69db      	ldr	r3, [r3, #28]
 8002adc:	431a      	orrs	r2, r3
 8002ade:	687b      	ldr	r3, [r7, #4]
 8002ae0:	7b1b      	ldrb	r3, [r3, #12]
 8002ae2:	005b      	lsls	r3, r3, #1
 8002ae4:	4313      	orrs	r3, r2
 8002ae6:	68ba      	ldr	r2, [r7, #8]
 8002ae8:	4313      	orrs	r3, r2
 8002aea:	60bb      	str	r3, [r7, #8]
 8002aec:	687b      	ldr	r3, [r7, #4]
 8002aee:	689b      	ldr	r3, [r3, #8]
 8002af0:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002af4:	d003      	beq.n	8002afe <HAL_ADC_Init+0xa2>
 8002af6:	687b      	ldr	r3, [r7, #4]
 8002af8:	689b      	ldr	r3, [r3, #8]
 8002afa:	2b01      	cmp	r3, #1
 8002afc:	d102      	bne.n	8002b04 <HAL_ADC_Init+0xa8>
 8002afe:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8002b02:	e000      	b.n	8002b06 <HAL_ADC_Init+0xaa>
 8002b04:	2300      	movs	r3, #0
 8002b06:	693a      	ldr	r2, [r7, #16]
 8002b08:	4313      	orrs	r3, r2
 8002b0a:	613b      	str	r3, [r7, #16]
 8002b0c:	687b      	ldr	r3, [r7, #4]
 8002b0e:	7d1b      	ldrb	r3, [r3, #20]
 8002b10:	2b01      	cmp	r3, #1
 8002b12:	d119      	bne.n	8002b48 <HAL_ADC_Init+0xec>
 8002b14:	687b      	ldr	r3, [r7, #4]
 8002b16:	7b1b      	ldrb	r3, [r3, #12]
 8002b18:	2b00      	cmp	r3, #0
 8002b1a:	d109      	bne.n	8002b30 <HAL_ADC_Init+0xd4>
 8002b1c:	687b      	ldr	r3, [r7, #4]
 8002b1e:	699b      	ldr	r3, [r3, #24]
 8002b20:	3b01      	subs	r3, #1
 8002b22:	035a      	lsls	r2, r3, #13
 8002b24:	693b      	ldr	r3, [r7, #16]
 8002b26:	4313      	orrs	r3, r2
 8002b28:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8002b2c:	613b      	str	r3, [r7, #16]
 8002b2e:	e00b      	b.n	8002b48 <HAL_ADC_Init+0xec>
 8002b30:	687b      	ldr	r3, [r7, #4]
 8002b32:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002b34:	f043 0220 	orr.w	r2, r3, #32
 8002b38:	687b      	ldr	r3, [r7, #4]
 8002b3a:	629a      	str	r2, [r3, #40]	@ 0x28
 8002b3c:	687b      	ldr	r3, [r7, #4]
 8002b3e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002b40:	f043 0201 	orr.w	r2, r3, #1
 8002b44:	687b      	ldr	r3, [r7, #4]
 8002b46:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002b48:	687b      	ldr	r3, [r7, #4]
 8002b4a:	681b      	ldr	r3, [r3, #0]
 8002b4c:	685b      	ldr	r3, [r3, #4]
 8002b4e:	f423 4169 	bic.w	r1, r3, #59648	@ 0xe900
 8002b52:	687b      	ldr	r3, [r7, #4]
 8002b54:	681b      	ldr	r3, [r3, #0]
 8002b56:	693a      	ldr	r2, [r7, #16]
 8002b58:	430a      	orrs	r2, r1
 8002b5a:	605a      	str	r2, [r3, #4]
 8002b5c:	687b      	ldr	r3, [r7, #4]
 8002b5e:	681b      	ldr	r3, [r3, #0]
 8002b60:	689a      	ldr	r2, [r3, #8]
 8002b62:	4b28      	ldr	r3, [pc, #160]	@ (8002c04 <HAL_ADC_Init+0x1a8>)
 8002b64:	4013      	ands	r3, r2
 8002b66:	687a      	ldr	r2, [r7, #4]
 8002b68:	6812      	ldr	r2, [r2, #0]
 8002b6a:	68b9      	ldr	r1, [r7, #8]
 8002b6c:	430b      	orrs	r3, r1
 8002b6e:	6093      	str	r3, [r2, #8]
 8002b70:	687b      	ldr	r3, [r7, #4]
 8002b72:	689b      	ldr	r3, [r3, #8]
 8002b74:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002b78:	d003      	beq.n	8002b82 <HAL_ADC_Init+0x126>
 8002b7a:	687b      	ldr	r3, [r7, #4]
 8002b7c:	689b      	ldr	r3, [r3, #8]
 8002b7e:	2b01      	cmp	r3, #1
 8002b80:	d104      	bne.n	8002b8c <HAL_ADC_Init+0x130>
 8002b82:	687b      	ldr	r3, [r7, #4]
 8002b84:	691b      	ldr	r3, [r3, #16]
 8002b86:	3b01      	subs	r3, #1
 8002b88:	051b      	lsls	r3, r3, #20
 8002b8a:	60fb      	str	r3, [r7, #12]
 8002b8c:	687b      	ldr	r3, [r7, #4]
 8002b8e:	681b      	ldr	r3, [r3, #0]
 8002b90:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002b92:	f423 0170 	bic.w	r1, r3, #15728640	@ 0xf00000
 8002b96:	687b      	ldr	r3, [r7, #4]
 8002b98:	681b      	ldr	r3, [r3, #0]
 8002b9a:	68fa      	ldr	r2, [r7, #12]
 8002b9c:	430a      	orrs	r2, r1
 8002b9e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002ba0:	687b      	ldr	r3, [r7, #4]
 8002ba2:	681b      	ldr	r3, [r3, #0]
 8002ba4:	689a      	ldr	r2, [r3, #8]
 8002ba6:	4b18      	ldr	r3, [pc, #96]	@ (8002c08 <HAL_ADC_Init+0x1ac>)
 8002ba8:	4013      	ands	r3, r2
 8002baa:	68ba      	ldr	r2, [r7, #8]
 8002bac:	429a      	cmp	r2, r3
 8002bae:	d10b      	bne.n	8002bc8 <HAL_ADC_Init+0x16c>
 8002bb0:	687b      	ldr	r3, [r7, #4]
 8002bb2:	2200      	movs	r2, #0
 8002bb4:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002bb6:	687b      	ldr	r3, [r7, #4]
 8002bb8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002bba:	f023 0303 	bic.w	r3, r3, #3
 8002bbe:	f043 0201 	orr.w	r2, r3, #1
 8002bc2:	687b      	ldr	r3, [r7, #4]
 8002bc4:	629a      	str	r2, [r3, #40]	@ 0x28
 8002bc6:	e018      	b.n	8002bfa <HAL_ADC_Init+0x19e>
 8002bc8:	687b      	ldr	r3, [r7, #4]
 8002bca:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002bcc:	f023 0312 	bic.w	r3, r3, #18
 8002bd0:	f043 0210 	orr.w	r2, r3, #16
 8002bd4:	687b      	ldr	r3, [r7, #4]
 8002bd6:	629a      	str	r2, [r3, #40]	@ 0x28
 8002bd8:	687b      	ldr	r3, [r7, #4]
 8002bda:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002bdc:	f043 0201 	orr.w	r2, r3, #1
 8002be0:	687b      	ldr	r3, [r7, #4]
 8002be2:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002be4:	2301      	movs	r3, #1
 8002be6:	75fb      	strb	r3, [r7, #23]
 8002be8:	e007      	b.n	8002bfa <HAL_ADC_Init+0x19e>
 8002bea:	687b      	ldr	r3, [r7, #4]
 8002bec:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002bee:	f043 0210 	orr.w	r2, r3, #16
 8002bf2:	687b      	ldr	r3, [r7, #4]
 8002bf4:	629a      	str	r2, [r3, #40]	@ 0x28
 8002bf6:	2301      	movs	r3, #1
 8002bf8:	75fb      	strb	r3, [r7, #23]
 8002bfa:	7dfb      	ldrb	r3, [r7, #23]
 8002bfc:	4618      	mov	r0, r3
 8002bfe:	3718      	adds	r7, #24
 8002c00:	46bd      	mov	sp, r7
 8002c02:	bd80      	pop	{r7, pc}
 8002c04:	ffe1f7fd 	.word	0xffe1f7fd
 8002c08:	ff1f0efe 	.word	0xff1f0efe

08002c0c <HAL_ADC_Start>:
 8002c0c:	b580      	push	{r7, lr}
 8002c0e:	b084      	sub	sp, #16
 8002c10:	af00      	add	r7, sp, #0
 8002c12:	6078      	str	r0, [r7, #4]
 8002c14:	2300      	movs	r3, #0
 8002c16:	73fb      	strb	r3, [r7, #15]
 8002c18:	687b      	ldr	r3, [r7, #4]
 8002c1a:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8002c1e:	2b01      	cmp	r3, #1
 8002c20:	d101      	bne.n	8002c26 <HAL_ADC_Start+0x1a>
 8002c22:	2302      	movs	r3, #2
 8002c24:	e098      	b.n	8002d58 <HAL_ADC_Start+0x14c>
 8002c26:	687b      	ldr	r3, [r7, #4]
 8002c28:	2201      	movs	r2, #1
 8002c2a:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002c2e:	6878      	ldr	r0, [r7, #4]
 8002c30:	f000 fad0 	bl	80031d4 <ADC_Enable>
 8002c34:	4603      	mov	r3, r0
 8002c36:	73fb      	strb	r3, [r7, #15]
 8002c38:	7bfb      	ldrb	r3, [r7, #15]
 8002c3a:	2b00      	cmp	r3, #0
 8002c3c:	f040 8087 	bne.w	8002d4e <HAL_ADC_Start+0x142>
 8002c40:	687b      	ldr	r3, [r7, #4]
 8002c42:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002c44:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8002c48:	f023 0301 	bic.w	r3, r3, #1
 8002c4c:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8002c50:	687b      	ldr	r3, [r7, #4]
 8002c52:	629a      	str	r2, [r3, #40]	@ 0x28
 8002c54:	687b      	ldr	r3, [r7, #4]
 8002c56:	681b      	ldr	r3, [r3, #0]
 8002c58:	4a41      	ldr	r2, [pc, #260]	@ (8002d60 <HAL_ADC_Start+0x154>)
 8002c5a:	4293      	cmp	r3, r2
 8002c5c:	d105      	bne.n	8002c6a <HAL_ADC_Start+0x5e>
 8002c5e:	4b41      	ldr	r3, [pc, #260]	@ (8002d64 <HAL_ADC_Start+0x158>)
 8002c60:	685b      	ldr	r3, [r3, #4]
 8002c62:	f403 2370 	and.w	r3, r3, #983040	@ 0xf0000
 8002c66:	2b00      	cmp	r3, #0
 8002c68:	d115      	bne.n	8002c96 <HAL_ADC_Start+0x8a>
 8002c6a:	687b      	ldr	r3, [r7, #4]
 8002c6c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002c6e:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 8002c72:	687b      	ldr	r3, [r7, #4]
 8002c74:	629a      	str	r2, [r3, #40]	@ 0x28
 8002c76:	687b      	ldr	r3, [r7, #4]
 8002c78:	681b      	ldr	r3, [r3, #0]
 8002c7a:	685b      	ldr	r3, [r3, #4]
 8002c7c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002c80:	2b00      	cmp	r3, #0
 8002c82:	d026      	beq.n	8002cd2 <HAL_ADC_Start+0xc6>
 8002c84:	687b      	ldr	r3, [r7, #4]
 8002c86:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002c88:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8002c8c:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8002c90:	687b      	ldr	r3, [r7, #4]
 8002c92:	629a      	str	r2, [r3, #40]	@ 0x28
 8002c94:	e01d      	b.n	8002cd2 <HAL_ADC_Start+0xc6>
 8002c96:	687b      	ldr	r3, [r7, #4]
 8002c98:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002c9a:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 8002c9e:	687b      	ldr	r3, [r7, #4]
 8002ca0:	629a      	str	r2, [r3, #40]	@ 0x28
 8002ca2:	687b      	ldr	r3, [r7, #4]
 8002ca4:	681b      	ldr	r3, [r3, #0]
 8002ca6:	4a2f      	ldr	r2, [pc, #188]	@ (8002d64 <HAL_ADC_Start+0x158>)
 8002ca8:	4293      	cmp	r3, r2
 8002caa:	d004      	beq.n	8002cb6 <HAL_ADC_Start+0xaa>
 8002cac:	687b      	ldr	r3, [r7, #4]
 8002cae:	681b      	ldr	r3, [r3, #0]
 8002cb0:	4a2b      	ldr	r2, [pc, #172]	@ (8002d60 <HAL_ADC_Start+0x154>)
 8002cb2:	4293      	cmp	r3, r2
 8002cb4:	d10d      	bne.n	8002cd2 <HAL_ADC_Start+0xc6>
 8002cb6:	4b2b      	ldr	r3, [pc, #172]	@ (8002d64 <HAL_ADC_Start+0x158>)
 8002cb8:	685b      	ldr	r3, [r3, #4]
 8002cba:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002cbe:	2b00      	cmp	r3, #0
 8002cc0:	d007      	beq.n	8002cd2 <HAL_ADC_Start+0xc6>
 8002cc2:	687b      	ldr	r3, [r7, #4]
 8002cc4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002cc6:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8002cca:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8002cce:	687b      	ldr	r3, [r7, #4]
 8002cd0:	629a      	str	r2, [r3, #40]	@ 0x28
 8002cd2:	687b      	ldr	r3, [r7, #4]
 8002cd4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002cd6:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002cda:	2b00      	cmp	r3, #0
 8002cdc:	d006      	beq.n	8002cec <HAL_ADC_Start+0xe0>
 8002cde:	687b      	ldr	r3, [r7, #4]
 8002ce0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002ce2:	f023 0206 	bic.w	r2, r3, #6
 8002ce6:	687b      	ldr	r3, [r7, #4]
 8002ce8:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002cea:	e002      	b.n	8002cf2 <HAL_ADC_Start+0xe6>
 8002cec:	687b      	ldr	r3, [r7, #4]
 8002cee:	2200      	movs	r2, #0
 8002cf0:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002cf2:	687b      	ldr	r3, [r7, #4]
 8002cf4:	2200      	movs	r2, #0
 8002cf6:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002cfa:	687b      	ldr	r3, [r7, #4]
 8002cfc:	681b      	ldr	r3, [r3, #0]
 8002cfe:	f06f 0202 	mvn.w	r2, #2
 8002d02:	601a      	str	r2, [r3, #0]
 8002d04:	687b      	ldr	r3, [r7, #4]
 8002d06:	681b      	ldr	r3, [r3, #0]
 8002d08:	689b      	ldr	r3, [r3, #8]
 8002d0a:	f403 2360 	and.w	r3, r3, #917504	@ 0xe0000
 8002d0e:	f5b3 2f60 	cmp.w	r3, #917504	@ 0xe0000
 8002d12:	d113      	bne.n	8002d3c <HAL_ADC_Start+0x130>
 8002d14:	687b      	ldr	r3, [r7, #4]
 8002d16:	681b      	ldr	r3, [r3, #0]
 8002d18:	4a11      	ldr	r2, [pc, #68]	@ (8002d60 <HAL_ADC_Start+0x154>)
 8002d1a:	4293      	cmp	r3, r2
 8002d1c:	d105      	bne.n	8002d2a <HAL_ADC_Start+0x11e>
 8002d1e:	4b11      	ldr	r3, [pc, #68]	@ (8002d64 <HAL_ADC_Start+0x158>)
 8002d20:	685b      	ldr	r3, [r3, #4]
 8002d22:	f403 2370 	and.w	r3, r3, #983040	@ 0xf0000
 8002d26:	2b00      	cmp	r3, #0
 8002d28:	d108      	bne.n	8002d3c <HAL_ADC_Start+0x130>
 8002d2a:	687b      	ldr	r3, [r7, #4]
 8002d2c:	681b      	ldr	r3, [r3, #0]
 8002d2e:	689a      	ldr	r2, [r3, #8]
 8002d30:	687b      	ldr	r3, [r7, #4]
 8002d32:	681b      	ldr	r3, [r3, #0]
 8002d34:	f442 02a0 	orr.w	r2, r2, #5242880	@ 0x500000
 8002d38:	609a      	str	r2, [r3, #8]
 8002d3a:	e00c      	b.n	8002d56 <HAL_ADC_Start+0x14a>
 8002d3c:	687b      	ldr	r3, [r7, #4]
 8002d3e:	681b      	ldr	r3, [r3, #0]
 8002d40:	689a      	ldr	r2, [r3, #8]
 8002d42:	687b      	ldr	r3, [r7, #4]
 8002d44:	681b      	ldr	r3, [r3, #0]
 8002d46:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 8002d4a:	609a      	str	r2, [r3, #8]
 8002d4c:	e003      	b.n	8002d56 <HAL_ADC_Start+0x14a>
 8002d4e:	687b      	ldr	r3, [r7, #4]
 8002d50:	2200      	movs	r2, #0
 8002d52:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002d56:	7bfb      	ldrb	r3, [r7, #15]
 8002d58:	4618      	mov	r0, r3
 8002d5a:	3710      	adds	r7, #16
 8002d5c:	46bd      	mov	sp, r7
 8002d5e:	bd80      	pop	{r7, pc}
 8002d60:	40012800 	.word	0x40012800
 8002d64:	40012400 	.word	0x40012400

08002d68 <HAL_ADC_Stop>:
 8002d68:	b580      	push	{r7, lr}
 8002d6a:	b084      	sub	sp, #16
 8002d6c:	af00      	add	r7, sp, #0
 8002d6e:	6078      	str	r0, [r7, #4]
 8002d70:	2300      	movs	r3, #0
 8002d72:	73fb      	strb	r3, [r7, #15]
 8002d74:	687b      	ldr	r3, [r7, #4]
 8002d76:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8002d7a:	2b01      	cmp	r3, #1
 8002d7c:	d101      	bne.n	8002d82 <HAL_ADC_Stop+0x1a>
 8002d7e:	2302      	movs	r3, #2
 8002d80:	e01a      	b.n	8002db8 <HAL_ADC_Stop+0x50>
 8002d82:	687b      	ldr	r3, [r7, #4]
 8002d84:	2201      	movs	r2, #1
 8002d86:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002d8a:	6878      	ldr	r0, [r7, #4]
 8002d8c:	f000 fa7c 	bl	8003288 <ADC_ConversionStop_Disable>
 8002d90:	4603      	mov	r3, r0
 8002d92:	73fb      	strb	r3, [r7, #15]
 8002d94:	7bfb      	ldrb	r3, [r7, #15]
 8002d96:	2b00      	cmp	r3, #0
 8002d98:	d109      	bne.n	8002dae <HAL_ADC_Stop+0x46>
 8002d9a:	687b      	ldr	r3, [r7, #4]
 8002d9c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002d9e:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8002da2:	f023 0301 	bic.w	r3, r3, #1
 8002da6:	f043 0201 	orr.w	r2, r3, #1
 8002daa:	687b      	ldr	r3, [r7, #4]
 8002dac:	629a      	str	r2, [r3, #40]	@ 0x28
 8002dae:	687b      	ldr	r3, [r7, #4]
 8002db0:	2200      	movs	r2, #0
 8002db2:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002db6:	7bfb      	ldrb	r3, [r7, #15]
 8002db8:	4618      	mov	r0, r3
 8002dba:	3710      	adds	r7, #16
 8002dbc:	46bd      	mov	sp, r7
 8002dbe:	bd80      	pop	{r7, pc}

08002dc0 <HAL_ADC_PollForConversion>:
 8002dc0:	b590      	push	{r4, r7, lr}
 8002dc2:	b087      	sub	sp, #28
 8002dc4:	af00      	add	r7, sp, #0
 8002dc6:	6078      	str	r0, [r7, #4]
 8002dc8:	6039      	str	r1, [r7, #0]
 8002dca:	2300      	movs	r3, #0
 8002dcc:	617b      	str	r3, [r7, #20]
 8002dce:	2300      	movs	r3, #0
 8002dd0:	60fb      	str	r3, [r7, #12]
 8002dd2:	2300      	movs	r3, #0
 8002dd4:	613b      	str	r3, [r7, #16]
 8002dd6:	f7ff fe13 	bl	8002a00 <HAL_GetTick>
 8002dda:	6178      	str	r0, [r7, #20]
 8002ddc:	687b      	ldr	r3, [r7, #4]
 8002dde:	681b      	ldr	r3, [r3, #0]
 8002de0:	689b      	ldr	r3, [r3, #8]
 8002de2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002de6:	2b00      	cmp	r3, #0
 8002de8:	d00b      	beq.n	8002e02 <HAL_ADC_PollForConversion+0x42>
 8002dea:	687b      	ldr	r3, [r7, #4]
 8002dec:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002dee:	f043 0220 	orr.w	r2, r3, #32
 8002df2:	687b      	ldr	r3, [r7, #4]
 8002df4:	629a      	str	r2, [r3, #40]	@ 0x28
 8002df6:	687b      	ldr	r3, [r7, #4]
 8002df8:	2200      	movs	r2, #0
 8002dfa:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002dfe:	2301      	movs	r3, #1
 8002e00:	e0d3      	b.n	8002faa <HAL_ADC_PollForConversion+0x1ea>
 8002e02:	687b      	ldr	r3, [r7, #4]
 8002e04:	681b      	ldr	r3, [r3, #0]
 8002e06:	685b      	ldr	r3, [r3, #4]
 8002e08:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002e0c:	2b00      	cmp	r3, #0
 8002e0e:	d131      	bne.n	8002e74 <HAL_ADC_PollForConversion+0xb4>
 8002e10:	687b      	ldr	r3, [r7, #4]
 8002e12:	681b      	ldr	r3, [r3, #0]
 8002e14:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002e16:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
 8002e1a:	2b00      	cmp	r3, #0
 8002e1c:	d12a      	bne.n	8002e74 <HAL_ADC_PollForConversion+0xb4>
 8002e1e:	e021      	b.n	8002e64 <HAL_ADC_PollForConversion+0xa4>
 8002e20:	683b      	ldr	r3, [r7, #0]
 8002e22:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002e26:	d01d      	beq.n	8002e64 <HAL_ADC_PollForConversion+0xa4>
 8002e28:	683b      	ldr	r3, [r7, #0]
 8002e2a:	2b00      	cmp	r3, #0
 8002e2c:	d007      	beq.n	8002e3e <HAL_ADC_PollForConversion+0x7e>
 8002e2e:	f7ff fde7 	bl	8002a00 <HAL_GetTick>
 8002e32:	4602      	mov	r2, r0
 8002e34:	697b      	ldr	r3, [r7, #20]
 8002e36:	1ad3      	subs	r3, r2, r3
 8002e38:	683a      	ldr	r2, [r7, #0]
 8002e3a:	429a      	cmp	r2, r3
 8002e3c:	d212      	bcs.n	8002e64 <HAL_ADC_PollForConversion+0xa4>
 8002e3e:	687b      	ldr	r3, [r7, #4]
 8002e40:	681b      	ldr	r3, [r3, #0]
 8002e42:	681b      	ldr	r3, [r3, #0]
 8002e44:	f003 0302 	and.w	r3, r3, #2
 8002e48:	2b00      	cmp	r3, #0
 8002e4a:	d10b      	bne.n	8002e64 <HAL_ADC_PollForConversion+0xa4>
 8002e4c:	687b      	ldr	r3, [r7, #4]
 8002e4e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002e50:	f043 0204 	orr.w	r2, r3, #4
 8002e54:	687b      	ldr	r3, [r7, #4]
 8002e56:	629a      	str	r2, [r3, #40]	@ 0x28
 8002e58:	687b      	ldr	r3, [r7, #4]
 8002e5a:	2200      	movs	r2, #0
 8002e5c:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002e60:	2303      	movs	r3, #3
 8002e62:	e0a2      	b.n	8002faa <HAL_ADC_PollForConversion+0x1ea>
 8002e64:	687b      	ldr	r3, [r7, #4]
 8002e66:	681b      	ldr	r3, [r3, #0]
 8002e68:	681b      	ldr	r3, [r3, #0]
 8002e6a:	f003 0302 	and.w	r3, r3, #2
 8002e6e:	2b00      	cmp	r3, #0
 8002e70:	d0d6      	beq.n	8002e20 <HAL_ADC_PollForConversion+0x60>
 8002e72:	e070      	b.n	8002f56 <HAL_ADC_PollForConversion+0x196>
 8002e74:	4b4f      	ldr	r3, [pc, #316]	@ (8002fb4 <HAL_ADC_PollForConversion+0x1f4>)
 8002e76:	681c      	ldr	r4, [r3, #0]
 8002e78:	2002      	movs	r0, #2
 8002e7a:	f001 fa41 	bl	8004300 <HAL_RCCEx_GetPeriphCLKFreq>
 8002e7e:	4603      	mov	r3, r0
 8002e80:	fbb4 f2f3 	udiv	r2, r4, r3
 8002e84:	687b      	ldr	r3, [r7, #4]
 8002e86:	681b      	ldr	r3, [r3, #0]
 8002e88:	6919      	ldr	r1, [r3, #16]
 8002e8a:	4b4b      	ldr	r3, [pc, #300]	@ (8002fb8 <HAL_ADC_PollForConversion+0x1f8>)
 8002e8c:	400b      	ands	r3, r1
 8002e8e:	2b00      	cmp	r3, #0
 8002e90:	d118      	bne.n	8002ec4 <HAL_ADC_PollForConversion+0x104>
 8002e92:	687b      	ldr	r3, [r7, #4]
 8002e94:	681b      	ldr	r3, [r3, #0]
 8002e96:	68d9      	ldr	r1, [r3, #12]
 8002e98:	4b48      	ldr	r3, [pc, #288]	@ (8002fbc <HAL_ADC_PollForConversion+0x1fc>)
 8002e9a:	400b      	ands	r3, r1
 8002e9c:	2b00      	cmp	r3, #0
 8002e9e:	d111      	bne.n	8002ec4 <HAL_ADC_PollForConversion+0x104>
 8002ea0:	687b      	ldr	r3, [r7, #4]
 8002ea2:	681b      	ldr	r3, [r3, #0]
 8002ea4:	6919      	ldr	r1, [r3, #16]
 8002ea6:	4b46      	ldr	r3, [pc, #280]	@ (8002fc0 <HAL_ADC_PollForConversion+0x200>)
 8002ea8:	400b      	ands	r3, r1
 8002eaa:	2b00      	cmp	r3, #0
 8002eac:	d108      	bne.n	8002ec0 <HAL_ADC_PollForConversion+0x100>
 8002eae:	687b      	ldr	r3, [r7, #4]
 8002eb0:	681b      	ldr	r3, [r3, #0]
 8002eb2:	68d9      	ldr	r1, [r3, #12]
 8002eb4:	4b43      	ldr	r3, [pc, #268]	@ (8002fc4 <HAL_ADC_PollForConversion+0x204>)
 8002eb6:	400b      	ands	r3, r1
 8002eb8:	2b00      	cmp	r3, #0
 8002eba:	d101      	bne.n	8002ec0 <HAL_ADC_PollForConversion+0x100>
 8002ebc:	2314      	movs	r3, #20
 8002ebe:	e020      	b.n	8002f02 <HAL_ADC_PollForConversion+0x142>
 8002ec0:	2329      	movs	r3, #41	@ 0x29
 8002ec2:	e01e      	b.n	8002f02 <HAL_ADC_PollForConversion+0x142>
 8002ec4:	687b      	ldr	r3, [r7, #4]
 8002ec6:	681b      	ldr	r3, [r3, #0]
 8002ec8:	6919      	ldr	r1, [r3, #16]
 8002eca:	4b3d      	ldr	r3, [pc, #244]	@ (8002fc0 <HAL_ADC_PollForConversion+0x200>)
 8002ecc:	400b      	ands	r3, r1
 8002ece:	2b00      	cmp	r3, #0
 8002ed0:	d106      	bne.n	8002ee0 <HAL_ADC_PollForConversion+0x120>
 8002ed2:	687b      	ldr	r3, [r7, #4]
 8002ed4:	681b      	ldr	r3, [r3, #0]
 8002ed6:	68d9      	ldr	r1, [r3, #12]
 8002ed8:	4b3a      	ldr	r3, [pc, #232]	@ (8002fc4 <HAL_ADC_PollForConversion+0x204>)
 8002eda:	400b      	ands	r3, r1
 8002edc:	2b00      	cmp	r3, #0
 8002ede:	d00d      	beq.n	8002efc <HAL_ADC_PollForConversion+0x13c>
 8002ee0:	687b      	ldr	r3, [r7, #4]
 8002ee2:	681b      	ldr	r3, [r3, #0]
 8002ee4:	6919      	ldr	r1, [r3, #16]
 8002ee6:	4b38      	ldr	r3, [pc, #224]	@ (8002fc8 <HAL_ADC_PollForConversion+0x208>)
 8002ee8:	400b      	ands	r3, r1
 8002eea:	2b00      	cmp	r3, #0
 8002eec:	d108      	bne.n	8002f00 <HAL_ADC_PollForConversion+0x140>
 8002eee:	687b      	ldr	r3, [r7, #4]
 8002ef0:	681b      	ldr	r3, [r3, #0]
 8002ef2:	68d9      	ldr	r1, [r3, #12]
 8002ef4:	4b34      	ldr	r3, [pc, #208]	@ (8002fc8 <HAL_ADC_PollForConversion+0x208>)
 8002ef6:	400b      	ands	r3, r1
 8002ef8:	2b00      	cmp	r3, #0
 8002efa:	d101      	bne.n	8002f00 <HAL_ADC_PollForConversion+0x140>
 8002efc:	2354      	movs	r3, #84	@ 0x54
 8002efe:	e000      	b.n	8002f02 <HAL_ADC_PollForConversion+0x142>
 8002f00:	23fc      	movs	r3, #252	@ 0xfc
 8002f02:	fb02 f303 	mul.w	r3, r2, r3
 8002f06:	613b      	str	r3, [r7, #16]
 8002f08:	e021      	b.n	8002f4e <HAL_ADC_PollForConversion+0x18e>
 8002f0a:	683b      	ldr	r3, [r7, #0]
 8002f0c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002f10:	d01a      	beq.n	8002f48 <HAL_ADC_PollForConversion+0x188>
 8002f12:	683b      	ldr	r3, [r7, #0]
 8002f14:	2b00      	cmp	r3, #0
 8002f16:	d007      	beq.n	8002f28 <HAL_ADC_PollForConversion+0x168>
 8002f18:	f7ff fd72 	bl	8002a00 <HAL_GetTick>
 8002f1c:	4602      	mov	r2, r0
 8002f1e:	697b      	ldr	r3, [r7, #20]
 8002f20:	1ad3      	subs	r3, r2, r3
 8002f22:	683a      	ldr	r2, [r7, #0]
 8002f24:	429a      	cmp	r2, r3
 8002f26:	d20f      	bcs.n	8002f48 <HAL_ADC_PollForConversion+0x188>
 8002f28:	68fb      	ldr	r3, [r7, #12]
 8002f2a:	693a      	ldr	r2, [r7, #16]
 8002f2c:	429a      	cmp	r2, r3
 8002f2e:	d90b      	bls.n	8002f48 <HAL_ADC_PollForConversion+0x188>
 8002f30:	687b      	ldr	r3, [r7, #4]
 8002f32:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002f34:	f043 0204 	orr.w	r2, r3, #4
 8002f38:	687b      	ldr	r3, [r7, #4]
 8002f3a:	629a      	str	r2, [r3, #40]	@ 0x28
 8002f3c:	687b      	ldr	r3, [r7, #4]
 8002f3e:	2200      	movs	r2, #0
 8002f40:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002f44:	2303      	movs	r3, #3
 8002f46:	e030      	b.n	8002faa <HAL_ADC_PollForConversion+0x1ea>
 8002f48:	68fb      	ldr	r3, [r7, #12]
 8002f4a:	3301      	adds	r3, #1
 8002f4c:	60fb      	str	r3, [r7, #12]
 8002f4e:	68fb      	ldr	r3, [r7, #12]
 8002f50:	693a      	ldr	r2, [r7, #16]
 8002f52:	429a      	cmp	r2, r3
 8002f54:	d8d9      	bhi.n	8002f0a <HAL_ADC_PollForConversion+0x14a>
 8002f56:	687b      	ldr	r3, [r7, #4]
 8002f58:	681b      	ldr	r3, [r3, #0]
 8002f5a:	f06f 0212 	mvn.w	r2, #18
 8002f5e:	601a      	str	r2, [r3, #0]
 8002f60:	687b      	ldr	r3, [r7, #4]
 8002f62:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002f64:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8002f68:	687b      	ldr	r3, [r7, #4]
 8002f6a:	629a      	str	r2, [r3, #40]	@ 0x28
 8002f6c:	687b      	ldr	r3, [r7, #4]
 8002f6e:	681b      	ldr	r3, [r3, #0]
 8002f70:	689b      	ldr	r3, [r3, #8]
 8002f72:	f403 2360 	and.w	r3, r3, #917504	@ 0xe0000
 8002f76:	f5b3 2f60 	cmp.w	r3, #917504	@ 0xe0000
 8002f7a:	d115      	bne.n	8002fa8 <HAL_ADC_PollForConversion+0x1e8>
 8002f7c:	687b      	ldr	r3, [r7, #4]
 8002f7e:	7b1b      	ldrb	r3, [r3, #12]
 8002f80:	2b00      	cmp	r3, #0
 8002f82:	d111      	bne.n	8002fa8 <HAL_ADC_PollForConversion+0x1e8>
 8002f84:	687b      	ldr	r3, [r7, #4]
 8002f86:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002f88:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8002f8c:	687b      	ldr	r3, [r7, #4]
 8002f8e:	629a      	str	r2, [r3, #40]	@ 0x28
 8002f90:	687b      	ldr	r3, [r7, #4]
 8002f92:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002f94:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002f98:	2b00      	cmp	r3, #0
 8002f9a:	d105      	bne.n	8002fa8 <HAL_ADC_PollForConversion+0x1e8>
 8002f9c:	687b      	ldr	r3, [r7, #4]
 8002f9e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002fa0:	f043 0201 	orr.w	r2, r3, #1
 8002fa4:	687b      	ldr	r3, [r7, #4]
 8002fa6:	629a      	str	r2, [r3, #40]	@ 0x28
 8002fa8:	2300      	movs	r3, #0
 8002faa:	4618      	mov	r0, r3
 8002fac:	371c      	adds	r7, #28
 8002fae:	46bd      	mov	sp, r7
 8002fb0:	bd90      	pop	{r4, r7, pc}
 8002fb2:	bf00      	nop
 8002fb4:	20000000 	.word	0x20000000
 8002fb8:	24924924 	.word	0x24924924
 8002fbc:	00924924 	.word	0x00924924
 8002fc0:	12492492 	.word	0x12492492
 8002fc4:	00492492 	.word	0x00492492
 8002fc8:	00249249 	.word	0x00249249

08002fcc <HAL_ADC_GetValue>:
 8002fcc:	b480      	push	{r7}
 8002fce:	b083      	sub	sp, #12
 8002fd0:	af00      	add	r7, sp, #0
 8002fd2:	6078      	str	r0, [r7, #4]
 8002fd4:	687b      	ldr	r3, [r7, #4]
 8002fd6:	681b      	ldr	r3, [r3, #0]
 8002fd8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002fda:	4618      	mov	r0, r3
 8002fdc:	370c      	adds	r7, #12
 8002fde:	46bd      	mov	sp, r7
 8002fe0:	bc80      	pop	{r7}
 8002fe2:	4770      	bx	lr

08002fe4 <HAL_ADC_ConfigChannel>:
 8002fe4:	b480      	push	{r7}
 8002fe6:	b085      	sub	sp, #20
 8002fe8:	af00      	add	r7, sp, #0
 8002fea:	6078      	str	r0, [r7, #4]
 8002fec:	6039      	str	r1, [r7, #0]
 8002fee:	2300      	movs	r3, #0
 8002ff0:	73fb      	strb	r3, [r7, #15]
 8002ff2:	2300      	movs	r3, #0
 8002ff4:	60bb      	str	r3, [r7, #8]
 8002ff6:	687b      	ldr	r3, [r7, #4]
 8002ff8:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8002ffc:	2b01      	cmp	r3, #1
 8002ffe:	d101      	bne.n	8003004 <HAL_ADC_ConfigChannel+0x20>
 8003000:	2302      	movs	r3, #2
 8003002:	e0dc      	b.n	80031be <HAL_ADC_ConfigChannel+0x1da>
 8003004:	687b      	ldr	r3, [r7, #4]
 8003006:	2201      	movs	r2, #1
 8003008:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 800300c:	683b      	ldr	r3, [r7, #0]
 800300e:	685b      	ldr	r3, [r3, #4]
 8003010:	2b06      	cmp	r3, #6
 8003012:	d81c      	bhi.n	800304e <HAL_ADC_ConfigChannel+0x6a>
 8003014:	687b      	ldr	r3, [r7, #4]
 8003016:	681b      	ldr	r3, [r3, #0]
 8003018:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 800301a:	683b      	ldr	r3, [r7, #0]
 800301c:	685a      	ldr	r2, [r3, #4]
 800301e:	4613      	mov	r3, r2
 8003020:	009b      	lsls	r3, r3, #2
 8003022:	4413      	add	r3, r2
 8003024:	3b05      	subs	r3, #5
 8003026:	221f      	movs	r2, #31
 8003028:	fa02 f303 	lsl.w	r3, r2, r3
 800302c:	43db      	mvns	r3, r3
 800302e:	4019      	ands	r1, r3
 8003030:	683b      	ldr	r3, [r7, #0]
 8003032:	6818      	ldr	r0, [r3, #0]
 8003034:	683b      	ldr	r3, [r7, #0]
 8003036:	685a      	ldr	r2, [r3, #4]
 8003038:	4613      	mov	r3, r2
 800303a:	009b      	lsls	r3, r3, #2
 800303c:	4413      	add	r3, r2
 800303e:	3b05      	subs	r3, #5
 8003040:	fa00 f203 	lsl.w	r2, r0, r3
 8003044:	687b      	ldr	r3, [r7, #4]
 8003046:	681b      	ldr	r3, [r3, #0]
 8003048:	430a      	orrs	r2, r1
 800304a:	635a      	str	r2, [r3, #52]	@ 0x34
 800304c:	e03c      	b.n	80030c8 <HAL_ADC_ConfigChannel+0xe4>
 800304e:	683b      	ldr	r3, [r7, #0]
 8003050:	685b      	ldr	r3, [r3, #4]
 8003052:	2b0c      	cmp	r3, #12
 8003054:	d81c      	bhi.n	8003090 <HAL_ADC_ConfigChannel+0xac>
 8003056:	687b      	ldr	r3, [r7, #4]
 8003058:	681b      	ldr	r3, [r3, #0]
 800305a:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 800305c:	683b      	ldr	r3, [r7, #0]
 800305e:	685a      	ldr	r2, [r3, #4]
 8003060:	4613      	mov	r3, r2
 8003062:	009b      	lsls	r3, r3, #2
 8003064:	4413      	add	r3, r2
 8003066:	3b23      	subs	r3, #35	@ 0x23
 8003068:	221f      	movs	r2, #31
 800306a:	fa02 f303 	lsl.w	r3, r2, r3
 800306e:	43db      	mvns	r3, r3
 8003070:	4019      	ands	r1, r3
 8003072:	683b      	ldr	r3, [r7, #0]
 8003074:	6818      	ldr	r0, [r3, #0]
 8003076:	683b      	ldr	r3, [r7, #0]
 8003078:	685a      	ldr	r2, [r3, #4]
 800307a:	4613      	mov	r3, r2
 800307c:	009b      	lsls	r3, r3, #2
 800307e:	4413      	add	r3, r2
 8003080:	3b23      	subs	r3, #35	@ 0x23
 8003082:	fa00 f203 	lsl.w	r2, r0, r3
 8003086:	687b      	ldr	r3, [r7, #4]
 8003088:	681b      	ldr	r3, [r3, #0]
 800308a:	430a      	orrs	r2, r1
 800308c:	631a      	str	r2, [r3, #48]	@ 0x30
 800308e:	e01b      	b.n	80030c8 <HAL_ADC_ConfigChannel+0xe4>
 8003090:	687b      	ldr	r3, [r7, #4]
 8003092:	681b      	ldr	r3, [r3, #0]
 8003094:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8003096:	683b      	ldr	r3, [r7, #0]
 8003098:	685a      	ldr	r2, [r3, #4]
 800309a:	4613      	mov	r3, r2
 800309c:	009b      	lsls	r3, r3, #2
 800309e:	4413      	add	r3, r2
 80030a0:	3b41      	subs	r3, #65	@ 0x41
 80030a2:	221f      	movs	r2, #31
 80030a4:	fa02 f303 	lsl.w	r3, r2, r3
 80030a8:	43db      	mvns	r3, r3
 80030aa:	4019      	ands	r1, r3
 80030ac:	683b      	ldr	r3, [r7, #0]
 80030ae:	6818      	ldr	r0, [r3, #0]
 80030b0:	683b      	ldr	r3, [r7, #0]
 80030b2:	685a      	ldr	r2, [r3, #4]
 80030b4:	4613      	mov	r3, r2
 80030b6:	009b      	lsls	r3, r3, #2
 80030b8:	4413      	add	r3, r2
 80030ba:	3b41      	subs	r3, #65	@ 0x41
 80030bc:	fa00 f203 	lsl.w	r2, r0, r3
 80030c0:	687b      	ldr	r3, [r7, #4]
 80030c2:	681b      	ldr	r3, [r3, #0]
 80030c4:	430a      	orrs	r2, r1
 80030c6:	62da      	str	r2, [r3, #44]	@ 0x2c
 80030c8:	683b      	ldr	r3, [r7, #0]
 80030ca:	681b      	ldr	r3, [r3, #0]
 80030cc:	2b09      	cmp	r3, #9
 80030ce:	d91c      	bls.n	800310a <HAL_ADC_ConfigChannel+0x126>
 80030d0:	687b      	ldr	r3, [r7, #4]
 80030d2:	681b      	ldr	r3, [r3, #0]
 80030d4:	68d9      	ldr	r1, [r3, #12]
 80030d6:	683b      	ldr	r3, [r7, #0]
 80030d8:	681a      	ldr	r2, [r3, #0]
 80030da:	4613      	mov	r3, r2
 80030dc:	005b      	lsls	r3, r3, #1
 80030de:	4413      	add	r3, r2
 80030e0:	3b1e      	subs	r3, #30
 80030e2:	2207      	movs	r2, #7
 80030e4:	fa02 f303 	lsl.w	r3, r2, r3
 80030e8:	43db      	mvns	r3, r3
 80030ea:	4019      	ands	r1, r3
 80030ec:	683b      	ldr	r3, [r7, #0]
 80030ee:	6898      	ldr	r0, [r3, #8]
 80030f0:	683b      	ldr	r3, [r7, #0]
 80030f2:	681a      	ldr	r2, [r3, #0]
 80030f4:	4613      	mov	r3, r2
 80030f6:	005b      	lsls	r3, r3, #1
 80030f8:	4413      	add	r3, r2
 80030fa:	3b1e      	subs	r3, #30
 80030fc:	fa00 f203 	lsl.w	r2, r0, r3
 8003100:	687b      	ldr	r3, [r7, #4]
 8003102:	681b      	ldr	r3, [r3, #0]
 8003104:	430a      	orrs	r2, r1
 8003106:	60da      	str	r2, [r3, #12]
 8003108:	e019      	b.n	800313e <HAL_ADC_ConfigChannel+0x15a>
 800310a:	687b      	ldr	r3, [r7, #4]
 800310c:	681b      	ldr	r3, [r3, #0]
 800310e:	6919      	ldr	r1, [r3, #16]
 8003110:	683b      	ldr	r3, [r7, #0]
 8003112:	681a      	ldr	r2, [r3, #0]
 8003114:	4613      	mov	r3, r2
 8003116:	005b      	lsls	r3, r3, #1
 8003118:	4413      	add	r3, r2
 800311a:	2207      	movs	r2, #7
 800311c:	fa02 f303 	lsl.w	r3, r2, r3
 8003120:	43db      	mvns	r3, r3
 8003122:	4019      	ands	r1, r3
 8003124:	683b      	ldr	r3, [r7, #0]
 8003126:	6898      	ldr	r0, [r3, #8]
 8003128:	683b      	ldr	r3, [r7, #0]
 800312a:	681a      	ldr	r2, [r3, #0]
 800312c:	4613      	mov	r3, r2
 800312e:	005b      	lsls	r3, r3, #1
 8003130:	4413      	add	r3, r2
 8003132:	fa00 f203 	lsl.w	r2, r0, r3
 8003136:	687b      	ldr	r3, [r7, #4]
 8003138:	681b      	ldr	r3, [r3, #0]
 800313a:	430a      	orrs	r2, r1
 800313c:	611a      	str	r2, [r3, #16]
 800313e:	683b      	ldr	r3, [r7, #0]
 8003140:	681b      	ldr	r3, [r3, #0]
 8003142:	2b10      	cmp	r3, #16
 8003144:	d003      	beq.n	800314e <HAL_ADC_ConfigChannel+0x16a>
 8003146:	683b      	ldr	r3, [r7, #0]
 8003148:	681b      	ldr	r3, [r3, #0]
 800314a:	2b11      	cmp	r3, #17
 800314c:	d132      	bne.n	80031b4 <HAL_ADC_ConfigChannel+0x1d0>
 800314e:	687b      	ldr	r3, [r7, #4]
 8003150:	681b      	ldr	r3, [r3, #0]
 8003152:	4a1d      	ldr	r2, [pc, #116]	@ (80031c8 <HAL_ADC_ConfigChannel+0x1e4>)
 8003154:	4293      	cmp	r3, r2
 8003156:	d125      	bne.n	80031a4 <HAL_ADC_ConfigChannel+0x1c0>
 8003158:	687b      	ldr	r3, [r7, #4]
 800315a:	681b      	ldr	r3, [r3, #0]
 800315c:	689b      	ldr	r3, [r3, #8]
 800315e:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8003162:	2b00      	cmp	r3, #0
 8003164:	d126      	bne.n	80031b4 <HAL_ADC_ConfigChannel+0x1d0>
 8003166:	687b      	ldr	r3, [r7, #4]
 8003168:	681b      	ldr	r3, [r3, #0]
 800316a:	689a      	ldr	r2, [r3, #8]
 800316c:	687b      	ldr	r3, [r7, #4]
 800316e:	681b      	ldr	r3, [r3, #0]
 8003170:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8003174:	609a      	str	r2, [r3, #8]
 8003176:	683b      	ldr	r3, [r7, #0]
 8003178:	681b      	ldr	r3, [r3, #0]
 800317a:	2b10      	cmp	r3, #16
 800317c:	d11a      	bne.n	80031b4 <HAL_ADC_ConfigChannel+0x1d0>
 800317e:	4b13      	ldr	r3, [pc, #76]	@ (80031cc <HAL_ADC_ConfigChannel+0x1e8>)
 8003180:	681b      	ldr	r3, [r3, #0]
 8003182:	4a13      	ldr	r2, [pc, #76]	@ (80031d0 <HAL_ADC_ConfigChannel+0x1ec>)
 8003184:	fba2 2303 	umull	r2, r3, r2, r3
 8003188:	0c9a      	lsrs	r2, r3, #18
 800318a:	4613      	mov	r3, r2
 800318c:	009b      	lsls	r3, r3, #2
 800318e:	4413      	add	r3, r2
 8003190:	005b      	lsls	r3, r3, #1
 8003192:	60bb      	str	r3, [r7, #8]
 8003194:	e002      	b.n	800319c <HAL_ADC_ConfigChannel+0x1b8>
 8003196:	68bb      	ldr	r3, [r7, #8]
 8003198:	3b01      	subs	r3, #1
 800319a:	60bb      	str	r3, [r7, #8]
 800319c:	68bb      	ldr	r3, [r7, #8]
 800319e:	2b00      	cmp	r3, #0
 80031a0:	d1f9      	bne.n	8003196 <HAL_ADC_ConfigChannel+0x1b2>
 80031a2:	e007      	b.n	80031b4 <HAL_ADC_ConfigChannel+0x1d0>
 80031a4:	687b      	ldr	r3, [r7, #4]
 80031a6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80031a8:	f043 0220 	orr.w	r2, r3, #32
 80031ac:	687b      	ldr	r3, [r7, #4]
 80031ae:	629a      	str	r2, [r3, #40]	@ 0x28
 80031b0:	2301      	movs	r3, #1
 80031b2:	73fb      	strb	r3, [r7, #15]
 80031b4:	687b      	ldr	r3, [r7, #4]
 80031b6:	2200      	movs	r2, #0
 80031b8:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80031bc:	7bfb      	ldrb	r3, [r7, #15]
 80031be:	4618      	mov	r0, r3
 80031c0:	3714      	adds	r7, #20
 80031c2:	46bd      	mov	sp, r7
 80031c4:	bc80      	pop	{r7}
 80031c6:	4770      	bx	lr
 80031c8:	40012400 	.word	0x40012400
 80031cc:	20000000 	.word	0x20000000
 80031d0:	431bde83 	.word	0x431bde83

080031d4 <ADC_Enable>:
 80031d4:	b580      	push	{r7, lr}
 80031d6:	b084      	sub	sp, #16
 80031d8:	af00      	add	r7, sp, #0
 80031da:	6078      	str	r0, [r7, #4]
 80031dc:	2300      	movs	r3, #0
 80031de:	60fb      	str	r3, [r7, #12]
 80031e0:	2300      	movs	r3, #0
 80031e2:	60bb      	str	r3, [r7, #8]
 80031e4:	687b      	ldr	r3, [r7, #4]
 80031e6:	681b      	ldr	r3, [r3, #0]
 80031e8:	689b      	ldr	r3, [r3, #8]
 80031ea:	f003 0301 	and.w	r3, r3, #1
 80031ee:	2b01      	cmp	r3, #1
 80031f0:	d040      	beq.n	8003274 <ADC_Enable+0xa0>
 80031f2:	687b      	ldr	r3, [r7, #4]
 80031f4:	681b      	ldr	r3, [r3, #0]
 80031f6:	689a      	ldr	r2, [r3, #8]
 80031f8:	687b      	ldr	r3, [r7, #4]
 80031fa:	681b      	ldr	r3, [r3, #0]
 80031fc:	f042 0201 	orr.w	r2, r2, #1
 8003200:	609a      	str	r2, [r3, #8]
 8003202:	4b1f      	ldr	r3, [pc, #124]	@ (8003280 <ADC_Enable+0xac>)
 8003204:	681b      	ldr	r3, [r3, #0]
 8003206:	4a1f      	ldr	r2, [pc, #124]	@ (8003284 <ADC_Enable+0xb0>)
 8003208:	fba2 2303 	umull	r2, r3, r2, r3
 800320c:	0c9b      	lsrs	r3, r3, #18
 800320e:	60bb      	str	r3, [r7, #8]
 8003210:	e002      	b.n	8003218 <ADC_Enable+0x44>
 8003212:	68bb      	ldr	r3, [r7, #8]
 8003214:	3b01      	subs	r3, #1
 8003216:	60bb      	str	r3, [r7, #8]
 8003218:	68bb      	ldr	r3, [r7, #8]
 800321a:	2b00      	cmp	r3, #0
 800321c:	d1f9      	bne.n	8003212 <ADC_Enable+0x3e>
 800321e:	f7ff fbef 	bl	8002a00 <HAL_GetTick>
 8003222:	60f8      	str	r0, [r7, #12]
 8003224:	e01f      	b.n	8003266 <ADC_Enable+0x92>
 8003226:	f7ff fbeb 	bl	8002a00 <HAL_GetTick>
 800322a:	4602      	mov	r2, r0
 800322c:	68fb      	ldr	r3, [r7, #12]
 800322e:	1ad3      	subs	r3, r2, r3
 8003230:	2b02      	cmp	r3, #2
 8003232:	d918      	bls.n	8003266 <ADC_Enable+0x92>
 8003234:	687b      	ldr	r3, [r7, #4]
 8003236:	681b      	ldr	r3, [r3, #0]
 8003238:	689b      	ldr	r3, [r3, #8]
 800323a:	f003 0301 	and.w	r3, r3, #1
 800323e:	2b01      	cmp	r3, #1
 8003240:	d011      	beq.n	8003266 <ADC_Enable+0x92>
 8003242:	687b      	ldr	r3, [r7, #4]
 8003244:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003246:	f043 0210 	orr.w	r2, r3, #16
 800324a:	687b      	ldr	r3, [r7, #4]
 800324c:	629a      	str	r2, [r3, #40]	@ 0x28
 800324e:	687b      	ldr	r3, [r7, #4]
 8003250:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003252:	f043 0201 	orr.w	r2, r3, #1
 8003256:	687b      	ldr	r3, [r7, #4]
 8003258:	62da      	str	r2, [r3, #44]	@ 0x2c
 800325a:	687b      	ldr	r3, [r7, #4]
 800325c:	2200      	movs	r2, #0
 800325e:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8003262:	2301      	movs	r3, #1
 8003264:	e007      	b.n	8003276 <ADC_Enable+0xa2>
 8003266:	687b      	ldr	r3, [r7, #4]
 8003268:	681b      	ldr	r3, [r3, #0]
 800326a:	689b      	ldr	r3, [r3, #8]
 800326c:	f003 0301 	and.w	r3, r3, #1
 8003270:	2b01      	cmp	r3, #1
 8003272:	d1d8      	bne.n	8003226 <ADC_Enable+0x52>
 8003274:	2300      	movs	r3, #0
 8003276:	4618      	mov	r0, r3
 8003278:	3710      	adds	r7, #16
 800327a:	46bd      	mov	sp, r7
 800327c:	bd80      	pop	{r7, pc}
 800327e:	bf00      	nop
 8003280:	20000000 	.word	0x20000000
 8003284:	431bde83 	.word	0x431bde83

08003288 <ADC_ConversionStop_Disable>:
 8003288:	b580      	push	{r7, lr}
 800328a:	b084      	sub	sp, #16
 800328c:	af00      	add	r7, sp, #0
 800328e:	6078      	str	r0, [r7, #4]
 8003290:	2300      	movs	r3, #0
 8003292:	60fb      	str	r3, [r7, #12]
 8003294:	687b      	ldr	r3, [r7, #4]
 8003296:	681b      	ldr	r3, [r3, #0]
 8003298:	689b      	ldr	r3, [r3, #8]
 800329a:	f003 0301 	and.w	r3, r3, #1
 800329e:	2b01      	cmp	r3, #1
 80032a0:	d12e      	bne.n	8003300 <ADC_ConversionStop_Disable+0x78>
 80032a2:	687b      	ldr	r3, [r7, #4]
 80032a4:	681b      	ldr	r3, [r3, #0]
 80032a6:	689a      	ldr	r2, [r3, #8]
 80032a8:	687b      	ldr	r3, [r7, #4]
 80032aa:	681b      	ldr	r3, [r3, #0]
 80032ac:	f022 0201 	bic.w	r2, r2, #1
 80032b0:	609a      	str	r2, [r3, #8]
 80032b2:	f7ff fba5 	bl	8002a00 <HAL_GetTick>
 80032b6:	60f8      	str	r0, [r7, #12]
 80032b8:	e01b      	b.n	80032f2 <ADC_ConversionStop_Disable+0x6a>
 80032ba:	f7ff fba1 	bl	8002a00 <HAL_GetTick>
 80032be:	4602      	mov	r2, r0
 80032c0:	68fb      	ldr	r3, [r7, #12]
 80032c2:	1ad3      	subs	r3, r2, r3
 80032c4:	2b02      	cmp	r3, #2
 80032c6:	d914      	bls.n	80032f2 <ADC_ConversionStop_Disable+0x6a>
 80032c8:	687b      	ldr	r3, [r7, #4]
 80032ca:	681b      	ldr	r3, [r3, #0]
 80032cc:	689b      	ldr	r3, [r3, #8]
 80032ce:	f003 0301 	and.w	r3, r3, #1
 80032d2:	2b01      	cmp	r3, #1
 80032d4:	d10d      	bne.n	80032f2 <ADC_ConversionStop_Disable+0x6a>
 80032d6:	687b      	ldr	r3, [r7, #4]
 80032d8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80032da:	f043 0210 	orr.w	r2, r3, #16
 80032de:	687b      	ldr	r3, [r7, #4]
 80032e0:	629a      	str	r2, [r3, #40]	@ 0x28
 80032e2:	687b      	ldr	r3, [r7, #4]
 80032e4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80032e6:	f043 0201 	orr.w	r2, r3, #1
 80032ea:	687b      	ldr	r3, [r7, #4]
 80032ec:	62da      	str	r2, [r3, #44]	@ 0x2c
 80032ee:	2301      	movs	r3, #1
 80032f0:	e007      	b.n	8003302 <ADC_ConversionStop_Disable+0x7a>
 80032f2:	687b      	ldr	r3, [r7, #4]
 80032f4:	681b      	ldr	r3, [r3, #0]
 80032f6:	689b      	ldr	r3, [r3, #8]
 80032f8:	f003 0301 	and.w	r3, r3, #1
 80032fc:	2b01      	cmp	r3, #1
 80032fe:	d0dc      	beq.n	80032ba <ADC_ConversionStop_Disable+0x32>
 8003300:	2300      	movs	r3, #0
 8003302:	4618      	mov	r0, r3
 8003304:	3710      	adds	r7, #16
 8003306:	46bd      	mov	sp, r7
 8003308:	bd80      	pop	{r7, pc}
	...

0800330c <HAL_ADCEx_Calibration_Start>:
 800330c:	b590      	push	{r4, r7, lr}
 800330e:	b087      	sub	sp, #28
 8003310:	af00      	add	r7, sp, #0
 8003312:	6078      	str	r0, [r7, #4]
 8003314:	2300      	movs	r3, #0
 8003316:	75fb      	strb	r3, [r7, #23]
 8003318:	2300      	movs	r3, #0
 800331a:	60fb      	str	r3, [r7, #12]
 800331c:	687b      	ldr	r3, [r7, #4]
 800331e:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8003322:	2b01      	cmp	r3, #1
 8003324:	d101      	bne.n	800332a <HAL_ADCEx_Calibration_Start+0x1e>
 8003326:	2302      	movs	r3, #2
 8003328:	e097      	b.n	800345a <HAL_ADCEx_Calibration_Start+0x14e>
 800332a:	687b      	ldr	r3, [r7, #4]
 800332c:	2201      	movs	r2, #1
 800332e:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8003332:	6878      	ldr	r0, [r7, #4]
 8003334:	f7ff ffa8 	bl	8003288 <ADC_ConversionStop_Disable>
 8003338:	4603      	mov	r3, r0
 800333a:	75fb      	strb	r3, [r7, #23]
 800333c:	6878      	ldr	r0, [r7, #4]
 800333e:	f7ff ff49 	bl	80031d4 <ADC_Enable>
 8003342:	4603      	mov	r3, r0
 8003344:	75fb      	strb	r3, [r7, #23]
 8003346:	7dfb      	ldrb	r3, [r7, #23]
 8003348:	2b00      	cmp	r3, #0
 800334a:	f040 8081 	bne.w	8003450 <HAL_ADCEx_Calibration_Start+0x144>
 800334e:	687b      	ldr	r3, [r7, #4]
 8003350:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003352:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8003356:	f023 0302 	bic.w	r3, r3, #2
 800335a:	f043 0202 	orr.w	r2, r3, #2
 800335e:	687b      	ldr	r3, [r7, #4]
 8003360:	629a      	str	r2, [r3, #40]	@ 0x28
 8003362:	4b40      	ldr	r3, [pc, #256]	@ (8003464 <HAL_ADCEx_Calibration_Start+0x158>)
 8003364:	681c      	ldr	r4, [r3, #0]
 8003366:	2002      	movs	r0, #2
 8003368:	f000 ffca 	bl	8004300 <HAL_RCCEx_GetPeriphCLKFreq>
 800336c:	4603      	mov	r3, r0
 800336e:	fbb4 f3f3 	udiv	r3, r4, r3
 8003372:	005b      	lsls	r3, r3, #1
 8003374:	60fb      	str	r3, [r7, #12]
 8003376:	e002      	b.n	800337e <HAL_ADCEx_Calibration_Start+0x72>
 8003378:	68fb      	ldr	r3, [r7, #12]
 800337a:	3b01      	subs	r3, #1
 800337c:	60fb      	str	r3, [r7, #12]
 800337e:	68fb      	ldr	r3, [r7, #12]
 8003380:	2b00      	cmp	r3, #0
 8003382:	d1f9      	bne.n	8003378 <HAL_ADCEx_Calibration_Start+0x6c>
 8003384:	687b      	ldr	r3, [r7, #4]
 8003386:	681b      	ldr	r3, [r3, #0]
 8003388:	689a      	ldr	r2, [r3, #8]
 800338a:	687b      	ldr	r3, [r7, #4]
 800338c:	681b      	ldr	r3, [r3, #0]
 800338e:	f042 0208 	orr.w	r2, r2, #8
 8003392:	609a      	str	r2, [r3, #8]
 8003394:	f7ff fb34 	bl	8002a00 <HAL_GetTick>
 8003398:	6138      	str	r0, [r7, #16]
 800339a:	e01b      	b.n	80033d4 <HAL_ADCEx_Calibration_Start+0xc8>
 800339c:	f7ff fb30 	bl	8002a00 <HAL_GetTick>
 80033a0:	4602      	mov	r2, r0
 80033a2:	693b      	ldr	r3, [r7, #16]
 80033a4:	1ad3      	subs	r3, r2, r3
 80033a6:	2b0a      	cmp	r3, #10
 80033a8:	d914      	bls.n	80033d4 <HAL_ADCEx_Calibration_Start+0xc8>
 80033aa:	687b      	ldr	r3, [r7, #4]
 80033ac:	681b      	ldr	r3, [r3, #0]
 80033ae:	689b      	ldr	r3, [r3, #8]
 80033b0:	f003 0308 	and.w	r3, r3, #8
 80033b4:	2b00      	cmp	r3, #0
 80033b6:	d00d      	beq.n	80033d4 <HAL_ADCEx_Calibration_Start+0xc8>
 80033b8:	687b      	ldr	r3, [r7, #4]
 80033ba:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80033bc:	f023 0312 	bic.w	r3, r3, #18
 80033c0:	f043 0210 	orr.w	r2, r3, #16
 80033c4:	687b      	ldr	r3, [r7, #4]
 80033c6:	629a      	str	r2, [r3, #40]	@ 0x28
 80033c8:	687b      	ldr	r3, [r7, #4]
 80033ca:	2200      	movs	r2, #0
 80033cc:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80033d0:	2301      	movs	r3, #1
 80033d2:	e042      	b.n	800345a <HAL_ADCEx_Calibration_Start+0x14e>
 80033d4:	687b      	ldr	r3, [r7, #4]
 80033d6:	681b      	ldr	r3, [r3, #0]
 80033d8:	689b      	ldr	r3, [r3, #8]
 80033da:	f003 0308 	and.w	r3, r3, #8
 80033de:	2b00      	cmp	r3, #0
 80033e0:	d1dc      	bne.n	800339c <HAL_ADCEx_Calibration_Start+0x90>
 80033e2:	687b      	ldr	r3, [r7, #4]
 80033e4:	681b      	ldr	r3, [r3, #0]
 80033e6:	689a      	ldr	r2, [r3, #8]
 80033e8:	687b      	ldr	r3, [r7, #4]
 80033ea:	681b      	ldr	r3, [r3, #0]
 80033ec:	f042 0204 	orr.w	r2, r2, #4
 80033f0:	609a      	str	r2, [r3, #8]
 80033f2:	f7ff fb05 	bl	8002a00 <HAL_GetTick>
 80033f6:	6138      	str	r0, [r7, #16]
 80033f8:	e01b      	b.n	8003432 <HAL_ADCEx_Calibration_Start+0x126>
 80033fa:	f7ff fb01 	bl	8002a00 <HAL_GetTick>
 80033fe:	4602      	mov	r2, r0
 8003400:	693b      	ldr	r3, [r7, #16]
 8003402:	1ad3      	subs	r3, r2, r3
 8003404:	2b0a      	cmp	r3, #10
 8003406:	d914      	bls.n	8003432 <HAL_ADCEx_Calibration_Start+0x126>
 8003408:	687b      	ldr	r3, [r7, #4]
 800340a:	681b      	ldr	r3, [r3, #0]
 800340c:	689b      	ldr	r3, [r3, #8]
 800340e:	f003 0304 	and.w	r3, r3, #4
 8003412:	2b00      	cmp	r3, #0
 8003414:	d00d      	beq.n	8003432 <HAL_ADCEx_Calibration_Start+0x126>
 8003416:	687b      	ldr	r3, [r7, #4]
 8003418:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800341a:	f023 0312 	bic.w	r3, r3, #18
 800341e:	f043 0210 	orr.w	r2, r3, #16
 8003422:	687b      	ldr	r3, [r7, #4]
 8003424:	629a      	str	r2, [r3, #40]	@ 0x28
 8003426:	687b      	ldr	r3, [r7, #4]
 8003428:	2200      	movs	r2, #0
 800342a:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 800342e:	2301      	movs	r3, #1
 8003430:	e013      	b.n	800345a <HAL_ADCEx_Calibration_Start+0x14e>
 8003432:	687b      	ldr	r3, [r7, #4]
 8003434:	681b      	ldr	r3, [r3, #0]
 8003436:	689b      	ldr	r3, [r3, #8]
 8003438:	f003 0304 	and.w	r3, r3, #4
 800343c:	2b00      	cmp	r3, #0
 800343e:	d1dc      	bne.n	80033fa <HAL_ADCEx_Calibration_Start+0xee>
 8003440:	687b      	ldr	r3, [r7, #4]
 8003442:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003444:	f023 0303 	bic.w	r3, r3, #3
 8003448:	f043 0201 	orr.w	r2, r3, #1
 800344c:	687b      	ldr	r3, [r7, #4]
 800344e:	629a      	str	r2, [r3, #40]	@ 0x28
 8003450:	687b      	ldr	r3, [r7, #4]
 8003452:	2200      	movs	r2, #0
 8003454:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8003458:	7dfb      	ldrb	r3, [r7, #23]
 800345a:	4618      	mov	r0, r3
 800345c:	371c      	adds	r7, #28
 800345e:	46bd      	mov	sp, r7
 8003460:	bd90      	pop	{r4, r7, pc}
 8003462:	bf00      	nop
 8003464:	20000000 	.word	0x20000000

08003468 <__NVIC_SetPriorityGrouping>:
 8003468:	b480      	push	{r7}
 800346a:	b085      	sub	sp, #20
 800346c:	af00      	add	r7, sp, #0
 800346e:	6078      	str	r0, [r7, #4]
 8003470:	687b      	ldr	r3, [r7, #4]
 8003472:	f003 0307 	and.w	r3, r3, #7
 8003476:	60fb      	str	r3, [r7, #12]
 8003478:	4b0c      	ldr	r3, [pc, #48]	@ (80034ac <__NVIC_SetPriorityGrouping+0x44>)
 800347a:	68db      	ldr	r3, [r3, #12]
 800347c:	60bb      	str	r3, [r7, #8]
 800347e:	68ba      	ldr	r2, [r7, #8]
 8003480:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8003484:	4013      	ands	r3, r2
 8003486:	60bb      	str	r3, [r7, #8]
 8003488:	68fb      	ldr	r3, [r7, #12]
 800348a:	021a      	lsls	r2, r3, #8
 800348c:	68bb      	ldr	r3, [r7, #8]
 800348e:	4313      	orrs	r3, r2
 8003490:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8003494:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8003498:	60bb      	str	r3, [r7, #8]
 800349a:	4a04      	ldr	r2, [pc, #16]	@ (80034ac <__NVIC_SetPriorityGrouping+0x44>)
 800349c:	68bb      	ldr	r3, [r7, #8]
 800349e:	60d3      	str	r3, [r2, #12]
 80034a0:	bf00      	nop
 80034a2:	3714      	adds	r7, #20
 80034a4:	46bd      	mov	sp, r7
 80034a6:	bc80      	pop	{r7}
 80034a8:	4770      	bx	lr
 80034aa:	bf00      	nop
 80034ac:	e000ed00 	.word	0xe000ed00

080034b0 <__NVIC_GetPriorityGrouping>:
 80034b0:	b480      	push	{r7}
 80034b2:	af00      	add	r7, sp, #0
 80034b4:	4b04      	ldr	r3, [pc, #16]	@ (80034c8 <__NVIC_GetPriorityGrouping+0x18>)
 80034b6:	68db      	ldr	r3, [r3, #12]
 80034b8:	0a1b      	lsrs	r3, r3, #8
 80034ba:	f003 0307 	and.w	r3, r3, #7
 80034be:	4618      	mov	r0, r3
 80034c0:	46bd      	mov	sp, r7
 80034c2:	bc80      	pop	{r7}
 80034c4:	4770      	bx	lr
 80034c6:	bf00      	nop
 80034c8:	e000ed00 	.word	0xe000ed00

080034cc <__NVIC_SetPriority>:
 80034cc:	b480      	push	{r7}
 80034ce:	b083      	sub	sp, #12
 80034d0:	af00      	add	r7, sp, #0
 80034d2:	4603      	mov	r3, r0
 80034d4:	6039      	str	r1, [r7, #0]
 80034d6:	71fb      	strb	r3, [r7, #7]
 80034d8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80034dc:	2b00      	cmp	r3, #0
 80034de:	db0a      	blt.n	80034f6 <__NVIC_SetPriority+0x2a>
 80034e0:	683b      	ldr	r3, [r7, #0]
 80034e2:	b2da      	uxtb	r2, r3
 80034e4:	490c      	ldr	r1, [pc, #48]	@ (8003518 <__NVIC_SetPriority+0x4c>)
 80034e6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80034ea:	0112      	lsls	r2, r2, #4
 80034ec:	b2d2      	uxtb	r2, r2
 80034ee:	440b      	add	r3, r1
 80034f0:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80034f4:	e00a      	b.n	800350c <__NVIC_SetPriority+0x40>
 80034f6:	683b      	ldr	r3, [r7, #0]
 80034f8:	b2da      	uxtb	r2, r3
 80034fa:	4908      	ldr	r1, [pc, #32]	@ (800351c <__NVIC_SetPriority+0x50>)
 80034fc:	79fb      	ldrb	r3, [r7, #7]
 80034fe:	f003 030f 	and.w	r3, r3, #15
 8003502:	3b04      	subs	r3, #4
 8003504:	0112      	lsls	r2, r2, #4
 8003506:	b2d2      	uxtb	r2, r2
 8003508:	440b      	add	r3, r1
 800350a:	761a      	strb	r2, [r3, #24]
 800350c:	bf00      	nop
 800350e:	370c      	adds	r7, #12
 8003510:	46bd      	mov	sp, r7
 8003512:	bc80      	pop	{r7}
 8003514:	4770      	bx	lr
 8003516:	bf00      	nop
 8003518:	e000e100 	.word	0xe000e100
 800351c:	e000ed00 	.word	0xe000ed00

08003520 <NVIC_EncodePriority>:
 8003520:	b480      	push	{r7}
 8003522:	b089      	sub	sp, #36	@ 0x24
 8003524:	af00      	add	r7, sp, #0
 8003526:	60f8      	str	r0, [r7, #12]
 8003528:	60b9      	str	r1, [r7, #8]
 800352a:	607a      	str	r2, [r7, #4]
 800352c:	68fb      	ldr	r3, [r7, #12]
 800352e:	f003 0307 	and.w	r3, r3, #7
 8003532:	61fb      	str	r3, [r7, #28]
 8003534:	69fb      	ldr	r3, [r7, #28]
 8003536:	f1c3 0307 	rsb	r3, r3, #7
 800353a:	2b04      	cmp	r3, #4
 800353c:	bf28      	it	cs
 800353e:	2304      	movcs	r3, #4
 8003540:	61bb      	str	r3, [r7, #24]
 8003542:	69fb      	ldr	r3, [r7, #28]
 8003544:	3304      	adds	r3, #4
 8003546:	2b06      	cmp	r3, #6
 8003548:	d902      	bls.n	8003550 <NVIC_EncodePriority+0x30>
 800354a:	69fb      	ldr	r3, [r7, #28]
 800354c:	3b03      	subs	r3, #3
 800354e:	e000      	b.n	8003552 <NVIC_EncodePriority+0x32>
 8003550:	2300      	movs	r3, #0
 8003552:	617b      	str	r3, [r7, #20]
 8003554:	f04f 32ff 	mov.w	r2, #4294967295
 8003558:	69bb      	ldr	r3, [r7, #24]
 800355a:	fa02 f303 	lsl.w	r3, r2, r3
 800355e:	43da      	mvns	r2, r3
 8003560:	68bb      	ldr	r3, [r7, #8]
 8003562:	401a      	ands	r2, r3
 8003564:	697b      	ldr	r3, [r7, #20]
 8003566:	409a      	lsls	r2, r3
 8003568:	f04f 31ff 	mov.w	r1, #4294967295
 800356c:	697b      	ldr	r3, [r7, #20]
 800356e:	fa01 f303 	lsl.w	r3, r1, r3
 8003572:	43d9      	mvns	r1, r3
 8003574:	687b      	ldr	r3, [r7, #4]
 8003576:	400b      	ands	r3, r1
 8003578:	4313      	orrs	r3, r2
 800357a:	4618      	mov	r0, r3
 800357c:	3724      	adds	r7, #36	@ 0x24
 800357e:	46bd      	mov	sp, r7
 8003580:	bc80      	pop	{r7}
 8003582:	4770      	bx	lr

08003584 <SysTick_Config>:
 8003584:	b580      	push	{r7, lr}
 8003586:	b082      	sub	sp, #8
 8003588:	af00      	add	r7, sp, #0
 800358a:	6078      	str	r0, [r7, #4]
 800358c:	687b      	ldr	r3, [r7, #4]
 800358e:	3b01      	subs	r3, #1
 8003590:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003594:	d301      	bcc.n	800359a <SysTick_Config+0x16>
 8003596:	2301      	movs	r3, #1
 8003598:	e00f      	b.n	80035ba <SysTick_Config+0x36>
 800359a:	4a0a      	ldr	r2, [pc, #40]	@ (80035c4 <SysTick_Config+0x40>)
 800359c:	687b      	ldr	r3, [r7, #4]
 800359e:	3b01      	subs	r3, #1
 80035a0:	6053      	str	r3, [r2, #4]
 80035a2:	210f      	movs	r1, #15
 80035a4:	f04f 30ff 	mov.w	r0, #4294967295
 80035a8:	f7ff ff90 	bl	80034cc <__NVIC_SetPriority>
 80035ac:	4b05      	ldr	r3, [pc, #20]	@ (80035c4 <SysTick_Config+0x40>)
 80035ae:	2200      	movs	r2, #0
 80035b0:	609a      	str	r2, [r3, #8]
 80035b2:	4b04      	ldr	r3, [pc, #16]	@ (80035c4 <SysTick_Config+0x40>)
 80035b4:	2207      	movs	r2, #7
 80035b6:	601a      	str	r2, [r3, #0]
 80035b8:	2300      	movs	r3, #0
 80035ba:	4618      	mov	r0, r3
 80035bc:	3708      	adds	r7, #8
 80035be:	46bd      	mov	sp, r7
 80035c0:	bd80      	pop	{r7, pc}
 80035c2:	bf00      	nop
 80035c4:	e000e010 	.word	0xe000e010

080035c8 <HAL_NVIC_SetPriorityGrouping>:
 80035c8:	b580      	push	{r7, lr}
 80035ca:	b082      	sub	sp, #8
 80035cc:	af00      	add	r7, sp, #0
 80035ce:	6078      	str	r0, [r7, #4]
 80035d0:	6878      	ldr	r0, [r7, #4]
 80035d2:	f7ff ff49 	bl	8003468 <__NVIC_SetPriorityGrouping>
 80035d6:	bf00      	nop
 80035d8:	3708      	adds	r7, #8
 80035da:	46bd      	mov	sp, r7
 80035dc:	bd80      	pop	{r7, pc}

080035de <HAL_NVIC_SetPriority>:
 80035de:	b580      	push	{r7, lr}
 80035e0:	b086      	sub	sp, #24
 80035e2:	af00      	add	r7, sp, #0
 80035e4:	4603      	mov	r3, r0
 80035e6:	60b9      	str	r1, [r7, #8]
 80035e8:	607a      	str	r2, [r7, #4]
 80035ea:	73fb      	strb	r3, [r7, #15]
 80035ec:	2300      	movs	r3, #0
 80035ee:	617b      	str	r3, [r7, #20]
 80035f0:	f7ff ff5e 	bl	80034b0 <__NVIC_GetPriorityGrouping>
 80035f4:	6178      	str	r0, [r7, #20]
 80035f6:	687a      	ldr	r2, [r7, #4]
 80035f8:	68b9      	ldr	r1, [r7, #8]
 80035fa:	6978      	ldr	r0, [r7, #20]
 80035fc:	f7ff ff90 	bl	8003520 <NVIC_EncodePriority>
 8003600:	4602      	mov	r2, r0
 8003602:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003606:	4611      	mov	r1, r2
 8003608:	4618      	mov	r0, r3
 800360a:	f7ff ff5f 	bl	80034cc <__NVIC_SetPriority>
 800360e:	bf00      	nop
 8003610:	3718      	adds	r7, #24
 8003612:	46bd      	mov	sp, r7
 8003614:	bd80      	pop	{r7, pc}

08003616 <HAL_SYSTICK_Config>:
 8003616:	b580      	push	{r7, lr}
 8003618:	b082      	sub	sp, #8
 800361a:	af00      	add	r7, sp, #0
 800361c:	6078      	str	r0, [r7, #4]
 800361e:	6878      	ldr	r0, [r7, #4]
 8003620:	f7ff ffb0 	bl	8003584 <SysTick_Config>
 8003624:	4603      	mov	r3, r0
 8003626:	4618      	mov	r0, r3
 8003628:	3708      	adds	r7, #8
 800362a:	46bd      	mov	sp, r7
 800362c:	bd80      	pop	{r7, pc}

0800362e <HAL_CRC_Init>:
 800362e:	b580      	push	{r7, lr}
 8003630:	b082      	sub	sp, #8
 8003632:	af00      	add	r7, sp, #0
 8003634:	6078      	str	r0, [r7, #4]
 8003636:	687b      	ldr	r3, [r7, #4]
 8003638:	2b00      	cmp	r3, #0
 800363a:	d101      	bne.n	8003640 <HAL_CRC_Init+0x12>
 800363c:	2301      	movs	r3, #1
 800363e:	e00e      	b.n	800365e <HAL_CRC_Init+0x30>
 8003640:	687b      	ldr	r3, [r7, #4]
 8003642:	795b      	ldrb	r3, [r3, #5]
 8003644:	b2db      	uxtb	r3, r3
 8003646:	2b00      	cmp	r3, #0
 8003648:	d105      	bne.n	8003656 <HAL_CRC_Init+0x28>
 800364a:	687b      	ldr	r3, [r7, #4]
 800364c:	2200      	movs	r2, #0
 800364e:	711a      	strb	r2, [r3, #4]
 8003650:	6878      	ldr	r0, [r7, #4]
 8003652:	f7fe fff5 	bl	8002640 <HAL_CRC_MspInit>
 8003656:	687b      	ldr	r3, [r7, #4]
 8003658:	2201      	movs	r2, #1
 800365a:	715a      	strb	r2, [r3, #5]
 800365c:	2300      	movs	r3, #0
 800365e:	4618      	mov	r0, r3
 8003660:	3708      	adds	r7, #8
 8003662:	46bd      	mov	sp, r7
 8003664:	bd80      	pop	{r7, pc}
	...

08003668 <HAL_GPIO_Init>:
 8003668:	b480      	push	{r7}
 800366a:	b08b      	sub	sp, #44	@ 0x2c
 800366c:	af00      	add	r7, sp, #0
 800366e:	6078      	str	r0, [r7, #4]
 8003670:	6039      	str	r1, [r7, #0]
 8003672:	2300      	movs	r3, #0
 8003674:	627b      	str	r3, [r7, #36]	@ 0x24
 8003676:	2300      	movs	r3, #0
 8003678:	623b      	str	r3, [r7, #32]
 800367a:	e169      	b.n	8003950 <HAL_GPIO_Init+0x2e8>
 800367c:	2201      	movs	r2, #1
 800367e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003680:	fa02 f303 	lsl.w	r3, r2, r3
 8003684:	61fb      	str	r3, [r7, #28]
 8003686:	683b      	ldr	r3, [r7, #0]
 8003688:	681b      	ldr	r3, [r3, #0]
 800368a:	69fa      	ldr	r2, [r7, #28]
 800368c:	4013      	ands	r3, r2
 800368e:	61bb      	str	r3, [r7, #24]
 8003690:	69ba      	ldr	r2, [r7, #24]
 8003692:	69fb      	ldr	r3, [r7, #28]
 8003694:	429a      	cmp	r2, r3
 8003696:	f040 8158 	bne.w	800394a <HAL_GPIO_Init+0x2e2>
 800369a:	683b      	ldr	r3, [r7, #0]
 800369c:	685b      	ldr	r3, [r3, #4]
 800369e:	4a9a      	ldr	r2, [pc, #616]	@ (8003908 <HAL_GPIO_Init+0x2a0>)
 80036a0:	4293      	cmp	r3, r2
 80036a2:	d05e      	beq.n	8003762 <HAL_GPIO_Init+0xfa>
 80036a4:	4a98      	ldr	r2, [pc, #608]	@ (8003908 <HAL_GPIO_Init+0x2a0>)
 80036a6:	4293      	cmp	r3, r2
 80036a8:	d875      	bhi.n	8003796 <HAL_GPIO_Init+0x12e>
 80036aa:	4a98      	ldr	r2, [pc, #608]	@ (800390c <HAL_GPIO_Init+0x2a4>)
 80036ac:	4293      	cmp	r3, r2
 80036ae:	d058      	beq.n	8003762 <HAL_GPIO_Init+0xfa>
 80036b0:	4a96      	ldr	r2, [pc, #600]	@ (800390c <HAL_GPIO_Init+0x2a4>)
 80036b2:	4293      	cmp	r3, r2
 80036b4:	d86f      	bhi.n	8003796 <HAL_GPIO_Init+0x12e>
 80036b6:	4a96      	ldr	r2, [pc, #600]	@ (8003910 <HAL_GPIO_Init+0x2a8>)
 80036b8:	4293      	cmp	r3, r2
 80036ba:	d052      	beq.n	8003762 <HAL_GPIO_Init+0xfa>
 80036bc:	4a94      	ldr	r2, [pc, #592]	@ (8003910 <HAL_GPIO_Init+0x2a8>)
 80036be:	4293      	cmp	r3, r2
 80036c0:	d869      	bhi.n	8003796 <HAL_GPIO_Init+0x12e>
 80036c2:	4a94      	ldr	r2, [pc, #592]	@ (8003914 <HAL_GPIO_Init+0x2ac>)
 80036c4:	4293      	cmp	r3, r2
 80036c6:	d04c      	beq.n	8003762 <HAL_GPIO_Init+0xfa>
 80036c8:	4a92      	ldr	r2, [pc, #584]	@ (8003914 <HAL_GPIO_Init+0x2ac>)
 80036ca:	4293      	cmp	r3, r2
 80036cc:	d863      	bhi.n	8003796 <HAL_GPIO_Init+0x12e>
 80036ce:	4a92      	ldr	r2, [pc, #584]	@ (8003918 <HAL_GPIO_Init+0x2b0>)
 80036d0:	4293      	cmp	r3, r2
 80036d2:	d046      	beq.n	8003762 <HAL_GPIO_Init+0xfa>
 80036d4:	4a90      	ldr	r2, [pc, #576]	@ (8003918 <HAL_GPIO_Init+0x2b0>)
 80036d6:	4293      	cmp	r3, r2
 80036d8:	d85d      	bhi.n	8003796 <HAL_GPIO_Init+0x12e>
 80036da:	2b12      	cmp	r3, #18
 80036dc:	d82a      	bhi.n	8003734 <HAL_GPIO_Init+0xcc>
 80036de:	2b12      	cmp	r3, #18
 80036e0:	d859      	bhi.n	8003796 <HAL_GPIO_Init+0x12e>
 80036e2:	a201      	add	r2, pc, #4	@ (adr r2, 80036e8 <HAL_GPIO_Init+0x80>)
 80036e4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80036e8:	08003763 	.word	0x08003763
 80036ec:	0800373d 	.word	0x0800373d
 80036f0:	0800374f 	.word	0x0800374f
 80036f4:	08003791 	.word	0x08003791
 80036f8:	08003797 	.word	0x08003797
 80036fc:	08003797 	.word	0x08003797
 8003700:	08003797 	.word	0x08003797
 8003704:	08003797 	.word	0x08003797
 8003708:	08003797 	.word	0x08003797
 800370c:	08003797 	.word	0x08003797
 8003710:	08003797 	.word	0x08003797
 8003714:	08003797 	.word	0x08003797
 8003718:	08003797 	.word	0x08003797
 800371c:	08003797 	.word	0x08003797
 8003720:	08003797 	.word	0x08003797
 8003724:	08003797 	.word	0x08003797
 8003728:	08003797 	.word	0x08003797
 800372c:	08003745 	.word	0x08003745
 8003730:	08003759 	.word	0x08003759
 8003734:	4a79      	ldr	r2, [pc, #484]	@ (800391c <HAL_GPIO_Init+0x2b4>)
 8003736:	4293      	cmp	r3, r2
 8003738:	d013      	beq.n	8003762 <HAL_GPIO_Init+0xfa>
 800373a:	e02c      	b.n	8003796 <HAL_GPIO_Init+0x12e>
 800373c:	683b      	ldr	r3, [r7, #0]
 800373e:	68db      	ldr	r3, [r3, #12]
 8003740:	623b      	str	r3, [r7, #32]
 8003742:	e029      	b.n	8003798 <HAL_GPIO_Init+0x130>
 8003744:	683b      	ldr	r3, [r7, #0]
 8003746:	68db      	ldr	r3, [r3, #12]
 8003748:	3304      	adds	r3, #4
 800374a:	623b      	str	r3, [r7, #32]
 800374c:	e024      	b.n	8003798 <HAL_GPIO_Init+0x130>
 800374e:	683b      	ldr	r3, [r7, #0]
 8003750:	68db      	ldr	r3, [r3, #12]
 8003752:	3308      	adds	r3, #8
 8003754:	623b      	str	r3, [r7, #32]
 8003756:	e01f      	b.n	8003798 <HAL_GPIO_Init+0x130>
 8003758:	683b      	ldr	r3, [r7, #0]
 800375a:	68db      	ldr	r3, [r3, #12]
 800375c:	330c      	adds	r3, #12
 800375e:	623b      	str	r3, [r7, #32]
 8003760:	e01a      	b.n	8003798 <HAL_GPIO_Init+0x130>
 8003762:	683b      	ldr	r3, [r7, #0]
 8003764:	689b      	ldr	r3, [r3, #8]
 8003766:	2b00      	cmp	r3, #0
 8003768:	d102      	bne.n	8003770 <HAL_GPIO_Init+0x108>
 800376a:	2304      	movs	r3, #4
 800376c:	623b      	str	r3, [r7, #32]
 800376e:	e013      	b.n	8003798 <HAL_GPIO_Init+0x130>
 8003770:	683b      	ldr	r3, [r7, #0]
 8003772:	689b      	ldr	r3, [r3, #8]
 8003774:	2b01      	cmp	r3, #1
 8003776:	d105      	bne.n	8003784 <HAL_GPIO_Init+0x11c>
 8003778:	2308      	movs	r3, #8
 800377a:	623b      	str	r3, [r7, #32]
 800377c:	687b      	ldr	r3, [r7, #4]
 800377e:	69fa      	ldr	r2, [r7, #28]
 8003780:	611a      	str	r2, [r3, #16]
 8003782:	e009      	b.n	8003798 <HAL_GPIO_Init+0x130>
 8003784:	2308      	movs	r3, #8
 8003786:	623b      	str	r3, [r7, #32]
 8003788:	687b      	ldr	r3, [r7, #4]
 800378a:	69fa      	ldr	r2, [r7, #28]
 800378c:	615a      	str	r2, [r3, #20]
 800378e:	e003      	b.n	8003798 <HAL_GPIO_Init+0x130>
 8003790:	2300      	movs	r3, #0
 8003792:	623b      	str	r3, [r7, #32]
 8003794:	e000      	b.n	8003798 <HAL_GPIO_Init+0x130>
 8003796:	bf00      	nop
 8003798:	69bb      	ldr	r3, [r7, #24]
 800379a:	2bff      	cmp	r3, #255	@ 0xff
 800379c:	d801      	bhi.n	80037a2 <HAL_GPIO_Init+0x13a>
 800379e:	687b      	ldr	r3, [r7, #4]
 80037a0:	e001      	b.n	80037a6 <HAL_GPIO_Init+0x13e>
 80037a2:	687b      	ldr	r3, [r7, #4]
 80037a4:	3304      	adds	r3, #4
 80037a6:	617b      	str	r3, [r7, #20]
 80037a8:	69bb      	ldr	r3, [r7, #24]
 80037aa:	2bff      	cmp	r3, #255	@ 0xff
 80037ac:	d802      	bhi.n	80037b4 <HAL_GPIO_Init+0x14c>
 80037ae:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80037b0:	009b      	lsls	r3, r3, #2
 80037b2:	e002      	b.n	80037ba <HAL_GPIO_Init+0x152>
 80037b4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80037b6:	3b08      	subs	r3, #8
 80037b8:	009b      	lsls	r3, r3, #2
 80037ba:	613b      	str	r3, [r7, #16]
 80037bc:	697b      	ldr	r3, [r7, #20]
 80037be:	681a      	ldr	r2, [r3, #0]
 80037c0:	210f      	movs	r1, #15
 80037c2:	693b      	ldr	r3, [r7, #16]
 80037c4:	fa01 f303 	lsl.w	r3, r1, r3
 80037c8:	43db      	mvns	r3, r3
 80037ca:	401a      	ands	r2, r3
 80037cc:	6a39      	ldr	r1, [r7, #32]
 80037ce:	693b      	ldr	r3, [r7, #16]
 80037d0:	fa01 f303 	lsl.w	r3, r1, r3
 80037d4:	431a      	orrs	r2, r3
 80037d6:	697b      	ldr	r3, [r7, #20]
 80037d8:	601a      	str	r2, [r3, #0]
 80037da:	683b      	ldr	r3, [r7, #0]
 80037dc:	685b      	ldr	r3, [r3, #4]
 80037de:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80037e2:	2b00      	cmp	r3, #0
 80037e4:	f000 80b1 	beq.w	800394a <HAL_GPIO_Init+0x2e2>
 80037e8:	4b4d      	ldr	r3, [pc, #308]	@ (8003920 <HAL_GPIO_Init+0x2b8>)
 80037ea:	699b      	ldr	r3, [r3, #24]
 80037ec:	4a4c      	ldr	r2, [pc, #304]	@ (8003920 <HAL_GPIO_Init+0x2b8>)
 80037ee:	f043 0301 	orr.w	r3, r3, #1
 80037f2:	6193      	str	r3, [r2, #24]
 80037f4:	4b4a      	ldr	r3, [pc, #296]	@ (8003920 <HAL_GPIO_Init+0x2b8>)
 80037f6:	699b      	ldr	r3, [r3, #24]
 80037f8:	f003 0301 	and.w	r3, r3, #1
 80037fc:	60bb      	str	r3, [r7, #8]
 80037fe:	68bb      	ldr	r3, [r7, #8]
 8003800:	4a48      	ldr	r2, [pc, #288]	@ (8003924 <HAL_GPIO_Init+0x2bc>)
 8003802:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003804:	089b      	lsrs	r3, r3, #2
 8003806:	3302      	adds	r3, #2
 8003808:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800380c:	60fb      	str	r3, [r7, #12]
 800380e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003810:	f003 0303 	and.w	r3, r3, #3
 8003814:	009b      	lsls	r3, r3, #2
 8003816:	220f      	movs	r2, #15
 8003818:	fa02 f303 	lsl.w	r3, r2, r3
 800381c:	43db      	mvns	r3, r3
 800381e:	68fa      	ldr	r2, [r7, #12]
 8003820:	4013      	ands	r3, r2
 8003822:	60fb      	str	r3, [r7, #12]
 8003824:	687b      	ldr	r3, [r7, #4]
 8003826:	4a40      	ldr	r2, [pc, #256]	@ (8003928 <HAL_GPIO_Init+0x2c0>)
 8003828:	4293      	cmp	r3, r2
 800382a:	d013      	beq.n	8003854 <HAL_GPIO_Init+0x1ec>
 800382c:	687b      	ldr	r3, [r7, #4]
 800382e:	4a3f      	ldr	r2, [pc, #252]	@ (800392c <HAL_GPIO_Init+0x2c4>)
 8003830:	4293      	cmp	r3, r2
 8003832:	d00d      	beq.n	8003850 <HAL_GPIO_Init+0x1e8>
 8003834:	687b      	ldr	r3, [r7, #4]
 8003836:	4a3e      	ldr	r2, [pc, #248]	@ (8003930 <HAL_GPIO_Init+0x2c8>)
 8003838:	4293      	cmp	r3, r2
 800383a:	d007      	beq.n	800384c <HAL_GPIO_Init+0x1e4>
 800383c:	687b      	ldr	r3, [r7, #4]
 800383e:	4a3d      	ldr	r2, [pc, #244]	@ (8003934 <HAL_GPIO_Init+0x2cc>)
 8003840:	4293      	cmp	r3, r2
 8003842:	d101      	bne.n	8003848 <HAL_GPIO_Init+0x1e0>
 8003844:	2303      	movs	r3, #3
 8003846:	e006      	b.n	8003856 <HAL_GPIO_Init+0x1ee>
 8003848:	2304      	movs	r3, #4
 800384a:	e004      	b.n	8003856 <HAL_GPIO_Init+0x1ee>
 800384c:	2302      	movs	r3, #2
 800384e:	e002      	b.n	8003856 <HAL_GPIO_Init+0x1ee>
 8003850:	2301      	movs	r3, #1
 8003852:	e000      	b.n	8003856 <HAL_GPIO_Init+0x1ee>
 8003854:	2300      	movs	r3, #0
 8003856:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003858:	f002 0203 	and.w	r2, r2, #3
 800385c:	0092      	lsls	r2, r2, #2
 800385e:	4093      	lsls	r3, r2
 8003860:	68fa      	ldr	r2, [r7, #12]
 8003862:	4313      	orrs	r3, r2
 8003864:	60fb      	str	r3, [r7, #12]
 8003866:	492f      	ldr	r1, [pc, #188]	@ (8003924 <HAL_GPIO_Init+0x2bc>)
 8003868:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800386a:	089b      	lsrs	r3, r3, #2
 800386c:	3302      	adds	r3, #2
 800386e:	68fa      	ldr	r2, [r7, #12]
 8003870:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003874:	683b      	ldr	r3, [r7, #0]
 8003876:	685b      	ldr	r3, [r3, #4]
 8003878:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800387c:	2b00      	cmp	r3, #0
 800387e:	d006      	beq.n	800388e <HAL_GPIO_Init+0x226>
 8003880:	4b2d      	ldr	r3, [pc, #180]	@ (8003938 <HAL_GPIO_Init+0x2d0>)
 8003882:	689a      	ldr	r2, [r3, #8]
 8003884:	492c      	ldr	r1, [pc, #176]	@ (8003938 <HAL_GPIO_Init+0x2d0>)
 8003886:	69bb      	ldr	r3, [r7, #24]
 8003888:	4313      	orrs	r3, r2
 800388a:	608b      	str	r3, [r1, #8]
 800388c:	e006      	b.n	800389c <HAL_GPIO_Init+0x234>
 800388e:	4b2a      	ldr	r3, [pc, #168]	@ (8003938 <HAL_GPIO_Init+0x2d0>)
 8003890:	689a      	ldr	r2, [r3, #8]
 8003892:	69bb      	ldr	r3, [r7, #24]
 8003894:	43db      	mvns	r3, r3
 8003896:	4928      	ldr	r1, [pc, #160]	@ (8003938 <HAL_GPIO_Init+0x2d0>)
 8003898:	4013      	ands	r3, r2
 800389a:	608b      	str	r3, [r1, #8]
 800389c:	683b      	ldr	r3, [r7, #0]
 800389e:	685b      	ldr	r3, [r3, #4]
 80038a0:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80038a4:	2b00      	cmp	r3, #0
 80038a6:	d006      	beq.n	80038b6 <HAL_GPIO_Init+0x24e>
 80038a8:	4b23      	ldr	r3, [pc, #140]	@ (8003938 <HAL_GPIO_Init+0x2d0>)
 80038aa:	68da      	ldr	r2, [r3, #12]
 80038ac:	4922      	ldr	r1, [pc, #136]	@ (8003938 <HAL_GPIO_Init+0x2d0>)
 80038ae:	69bb      	ldr	r3, [r7, #24]
 80038b0:	4313      	orrs	r3, r2
 80038b2:	60cb      	str	r3, [r1, #12]
 80038b4:	e006      	b.n	80038c4 <HAL_GPIO_Init+0x25c>
 80038b6:	4b20      	ldr	r3, [pc, #128]	@ (8003938 <HAL_GPIO_Init+0x2d0>)
 80038b8:	68da      	ldr	r2, [r3, #12]
 80038ba:	69bb      	ldr	r3, [r7, #24]
 80038bc:	43db      	mvns	r3, r3
 80038be:	491e      	ldr	r1, [pc, #120]	@ (8003938 <HAL_GPIO_Init+0x2d0>)
 80038c0:	4013      	ands	r3, r2
 80038c2:	60cb      	str	r3, [r1, #12]
 80038c4:	683b      	ldr	r3, [r7, #0]
 80038c6:	685b      	ldr	r3, [r3, #4]
 80038c8:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80038cc:	2b00      	cmp	r3, #0
 80038ce:	d006      	beq.n	80038de <HAL_GPIO_Init+0x276>
 80038d0:	4b19      	ldr	r3, [pc, #100]	@ (8003938 <HAL_GPIO_Init+0x2d0>)
 80038d2:	685a      	ldr	r2, [r3, #4]
 80038d4:	4918      	ldr	r1, [pc, #96]	@ (8003938 <HAL_GPIO_Init+0x2d0>)
 80038d6:	69bb      	ldr	r3, [r7, #24]
 80038d8:	4313      	orrs	r3, r2
 80038da:	604b      	str	r3, [r1, #4]
 80038dc:	e006      	b.n	80038ec <HAL_GPIO_Init+0x284>
 80038de:	4b16      	ldr	r3, [pc, #88]	@ (8003938 <HAL_GPIO_Init+0x2d0>)
 80038e0:	685a      	ldr	r2, [r3, #4]
 80038e2:	69bb      	ldr	r3, [r7, #24]
 80038e4:	43db      	mvns	r3, r3
 80038e6:	4914      	ldr	r1, [pc, #80]	@ (8003938 <HAL_GPIO_Init+0x2d0>)
 80038e8:	4013      	ands	r3, r2
 80038ea:	604b      	str	r3, [r1, #4]
 80038ec:	683b      	ldr	r3, [r7, #0]
 80038ee:	685b      	ldr	r3, [r3, #4]
 80038f0:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80038f4:	2b00      	cmp	r3, #0
 80038f6:	d021      	beq.n	800393c <HAL_GPIO_Init+0x2d4>
 80038f8:	4b0f      	ldr	r3, [pc, #60]	@ (8003938 <HAL_GPIO_Init+0x2d0>)
 80038fa:	681a      	ldr	r2, [r3, #0]
 80038fc:	490e      	ldr	r1, [pc, #56]	@ (8003938 <HAL_GPIO_Init+0x2d0>)
 80038fe:	69bb      	ldr	r3, [r7, #24]
 8003900:	4313      	orrs	r3, r2
 8003902:	600b      	str	r3, [r1, #0]
 8003904:	e021      	b.n	800394a <HAL_GPIO_Init+0x2e2>
 8003906:	bf00      	nop
 8003908:	10320000 	.word	0x10320000
 800390c:	10310000 	.word	0x10310000
 8003910:	10220000 	.word	0x10220000
 8003914:	10210000 	.word	0x10210000
 8003918:	10120000 	.word	0x10120000
 800391c:	10110000 	.word	0x10110000
 8003920:	40021000 	.word	0x40021000
 8003924:	40010000 	.word	0x40010000
 8003928:	40010800 	.word	0x40010800
 800392c:	40010c00 	.word	0x40010c00
 8003930:	40011000 	.word	0x40011000
 8003934:	40011400 	.word	0x40011400
 8003938:	40010400 	.word	0x40010400
 800393c:	4b0b      	ldr	r3, [pc, #44]	@ (800396c <HAL_GPIO_Init+0x304>)
 800393e:	681a      	ldr	r2, [r3, #0]
 8003940:	69bb      	ldr	r3, [r7, #24]
 8003942:	43db      	mvns	r3, r3
 8003944:	4909      	ldr	r1, [pc, #36]	@ (800396c <HAL_GPIO_Init+0x304>)
 8003946:	4013      	ands	r3, r2
 8003948:	600b      	str	r3, [r1, #0]
 800394a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800394c:	3301      	adds	r3, #1
 800394e:	627b      	str	r3, [r7, #36]	@ 0x24
 8003950:	683b      	ldr	r3, [r7, #0]
 8003952:	681a      	ldr	r2, [r3, #0]
 8003954:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003956:	fa22 f303 	lsr.w	r3, r2, r3
 800395a:	2b00      	cmp	r3, #0
 800395c:	f47f ae8e 	bne.w	800367c <HAL_GPIO_Init+0x14>
 8003960:	bf00      	nop
 8003962:	bf00      	nop
 8003964:	372c      	adds	r7, #44	@ 0x2c
 8003966:	46bd      	mov	sp, r7
 8003968:	bc80      	pop	{r7}
 800396a:	4770      	bx	lr
 800396c:	40010400 	.word	0x40010400

08003970 <HAL_RCC_OscConfig>:
 8003970:	b580      	push	{r7, lr}
 8003972:	b086      	sub	sp, #24
 8003974:	af00      	add	r7, sp, #0
 8003976:	6078      	str	r0, [r7, #4]
 8003978:	687b      	ldr	r3, [r7, #4]
 800397a:	2b00      	cmp	r3, #0
 800397c:	d101      	bne.n	8003982 <HAL_RCC_OscConfig+0x12>
 800397e:	2301      	movs	r3, #1
 8003980:	e272      	b.n	8003e68 <HAL_RCC_OscConfig+0x4f8>
 8003982:	687b      	ldr	r3, [r7, #4]
 8003984:	681b      	ldr	r3, [r3, #0]
 8003986:	f003 0301 	and.w	r3, r3, #1
 800398a:	2b00      	cmp	r3, #0
 800398c:	f000 8087 	beq.w	8003a9e <HAL_RCC_OscConfig+0x12e>
 8003990:	4b92      	ldr	r3, [pc, #584]	@ (8003bdc <HAL_RCC_OscConfig+0x26c>)
 8003992:	685b      	ldr	r3, [r3, #4]
 8003994:	f003 030c 	and.w	r3, r3, #12
 8003998:	2b04      	cmp	r3, #4
 800399a:	d00c      	beq.n	80039b6 <HAL_RCC_OscConfig+0x46>
 800399c:	4b8f      	ldr	r3, [pc, #572]	@ (8003bdc <HAL_RCC_OscConfig+0x26c>)
 800399e:	685b      	ldr	r3, [r3, #4]
 80039a0:	f003 030c 	and.w	r3, r3, #12
 80039a4:	2b08      	cmp	r3, #8
 80039a6:	d112      	bne.n	80039ce <HAL_RCC_OscConfig+0x5e>
 80039a8:	4b8c      	ldr	r3, [pc, #560]	@ (8003bdc <HAL_RCC_OscConfig+0x26c>)
 80039aa:	685b      	ldr	r3, [r3, #4]
 80039ac:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80039b0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80039b4:	d10b      	bne.n	80039ce <HAL_RCC_OscConfig+0x5e>
 80039b6:	4b89      	ldr	r3, [pc, #548]	@ (8003bdc <HAL_RCC_OscConfig+0x26c>)
 80039b8:	681b      	ldr	r3, [r3, #0]
 80039ba:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80039be:	2b00      	cmp	r3, #0
 80039c0:	d06c      	beq.n	8003a9c <HAL_RCC_OscConfig+0x12c>
 80039c2:	687b      	ldr	r3, [r7, #4]
 80039c4:	685b      	ldr	r3, [r3, #4]
 80039c6:	2b00      	cmp	r3, #0
 80039c8:	d168      	bne.n	8003a9c <HAL_RCC_OscConfig+0x12c>
 80039ca:	2301      	movs	r3, #1
 80039cc:	e24c      	b.n	8003e68 <HAL_RCC_OscConfig+0x4f8>
 80039ce:	687b      	ldr	r3, [r7, #4]
 80039d0:	685b      	ldr	r3, [r3, #4]
 80039d2:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80039d6:	d106      	bne.n	80039e6 <HAL_RCC_OscConfig+0x76>
 80039d8:	4b80      	ldr	r3, [pc, #512]	@ (8003bdc <HAL_RCC_OscConfig+0x26c>)
 80039da:	681b      	ldr	r3, [r3, #0]
 80039dc:	4a7f      	ldr	r2, [pc, #508]	@ (8003bdc <HAL_RCC_OscConfig+0x26c>)
 80039de:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80039e2:	6013      	str	r3, [r2, #0]
 80039e4:	e02e      	b.n	8003a44 <HAL_RCC_OscConfig+0xd4>
 80039e6:	687b      	ldr	r3, [r7, #4]
 80039e8:	685b      	ldr	r3, [r3, #4]
 80039ea:	2b00      	cmp	r3, #0
 80039ec:	d10c      	bne.n	8003a08 <HAL_RCC_OscConfig+0x98>
 80039ee:	4b7b      	ldr	r3, [pc, #492]	@ (8003bdc <HAL_RCC_OscConfig+0x26c>)
 80039f0:	681b      	ldr	r3, [r3, #0]
 80039f2:	4a7a      	ldr	r2, [pc, #488]	@ (8003bdc <HAL_RCC_OscConfig+0x26c>)
 80039f4:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80039f8:	6013      	str	r3, [r2, #0]
 80039fa:	4b78      	ldr	r3, [pc, #480]	@ (8003bdc <HAL_RCC_OscConfig+0x26c>)
 80039fc:	681b      	ldr	r3, [r3, #0]
 80039fe:	4a77      	ldr	r2, [pc, #476]	@ (8003bdc <HAL_RCC_OscConfig+0x26c>)
 8003a00:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8003a04:	6013      	str	r3, [r2, #0]
 8003a06:	e01d      	b.n	8003a44 <HAL_RCC_OscConfig+0xd4>
 8003a08:	687b      	ldr	r3, [r7, #4]
 8003a0a:	685b      	ldr	r3, [r3, #4]
 8003a0c:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8003a10:	d10c      	bne.n	8003a2c <HAL_RCC_OscConfig+0xbc>
 8003a12:	4b72      	ldr	r3, [pc, #456]	@ (8003bdc <HAL_RCC_OscConfig+0x26c>)
 8003a14:	681b      	ldr	r3, [r3, #0]
 8003a16:	4a71      	ldr	r2, [pc, #452]	@ (8003bdc <HAL_RCC_OscConfig+0x26c>)
 8003a18:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8003a1c:	6013      	str	r3, [r2, #0]
 8003a1e:	4b6f      	ldr	r3, [pc, #444]	@ (8003bdc <HAL_RCC_OscConfig+0x26c>)
 8003a20:	681b      	ldr	r3, [r3, #0]
 8003a22:	4a6e      	ldr	r2, [pc, #440]	@ (8003bdc <HAL_RCC_OscConfig+0x26c>)
 8003a24:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003a28:	6013      	str	r3, [r2, #0]
 8003a2a:	e00b      	b.n	8003a44 <HAL_RCC_OscConfig+0xd4>
 8003a2c:	4b6b      	ldr	r3, [pc, #428]	@ (8003bdc <HAL_RCC_OscConfig+0x26c>)
 8003a2e:	681b      	ldr	r3, [r3, #0]
 8003a30:	4a6a      	ldr	r2, [pc, #424]	@ (8003bdc <HAL_RCC_OscConfig+0x26c>)
 8003a32:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8003a36:	6013      	str	r3, [r2, #0]
 8003a38:	4b68      	ldr	r3, [pc, #416]	@ (8003bdc <HAL_RCC_OscConfig+0x26c>)
 8003a3a:	681b      	ldr	r3, [r3, #0]
 8003a3c:	4a67      	ldr	r2, [pc, #412]	@ (8003bdc <HAL_RCC_OscConfig+0x26c>)
 8003a3e:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8003a42:	6013      	str	r3, [r2, #0]
 8003a44:	687b      	ldr	r3, [r7, #4]
 8003a46:	685b      	ldr	r3, [r3, #4]
 8003a48:	2b00      	cmp	r3, #0
 8003a4a:	d013      	beq.n	8003a74 <HAL_RCC_OscConfig+0x104>
 8003a4c:	f7fe ffd8 	bl	8002a00 <HAL_GetTick>
 8003a50:	6138      	str	r0, [r7, #16]
 8003a52:	e008      	b.n	8003a66 <HAL_RCC_OscConfig+0xf6>
 8003a54:	f7fe ffd4 	bl	8002a00 <HAL_GetTick>
 8003a58:	4602      	mov	r2, r0
 8003a5a:	693b      	ldr	r3, [r7, #16]
 8003a5c:	1ad3      	subs	r3, r2, r3
 8003a5e:	2b64      	cmp	r3, #100	@ 0x64
 8003a60:	d901      	bls.n	8003a66 <HAL_RCC_OscConfig+0xf6>
 8003a62:	2303      	movs	r3, #3
 8003a64:	e200      	b.n	8003e68 <HAL_RCC_OscConfig+0x4f8>
 8003a66:	4b5d      	ldr	r3, [pc, #372]	@ (8003bdc <HAL_RCC_OscConfig+0x26c>)
 8003a68:	681b      	ldr	r3, [r3, #0]
 8003a6a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003a6e:	2b00      	cmp	r3, #0
 8003a70:	d0f0      	beq.n	8003a54 <HAL_RCC_OscConfig+0xe4>
 8003a72:	e014      	b.n	8003a9e <HAL_RCC_OscConfig+0x12e>
 8003a74:	f7fe ffc4 	bl	8002a00 <HAL_GetTick>
 8003a78:	6138      	str	r0, [r7, #16]
 8003a7a:	e008      	b.n	8003a8e <HAL_RCC_OscConfig+0x11e>
 8003a7c:	f7fe ffc0 	bl	8002a00 <HAL_GetTick>
 8003a80:	4602      	mov	r2, r0
 8003a82:	693b      	ldr	r3, [r7, #16]
 8003a84:	1ad3      	subs	r3, r2, r3
 8003a86:	2b64      	cmp	r3, #100	@ 0x64
 8003a88:	d901      	bls.n	8003a8e <HAL_RCC_OscConfig+0x11e>
 8003a8a:	2303      	movs	r3, #3
 8003a8c:	e1ec      	b.n	8003e68 <HAL_RCC_OscConfig+0x4f8>
 8003a8e:	4b53      	ldr	r3, [pc, #332]	@ (8003bdc <HAL_RCC_OscConfig+0x26c>)
 8003a90:	681b      	ldr	r3, [r3, #0]
 8003a92:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003a96:	2b00      	cmp	r3, #0
 8003a98:	d1f0      	bne.n	8003a7c <HAL_RCC_OscConfig+0x10c>
 8003a9a:	e000      	b.n	8003a9e <HAL_RCC_OscConfig+0x12e>
 8003a9c:	bf00      	nop
 8003a9e:	687b      	ldr	r3, [r7, #4]
 8003aa0:	681b      	ldr	r3, [r3, #0]
 8003aa2:	f003 0302 	and.w	r3, r3, #2
 8003aa6:	2b00      	cmp	r3, #0
 8003aa8:	d063      	beq.n	8003b72 <HAL_RCC_OscConfig+0x202>
 8003aaa:	4b4c      	ldr	r3, [pc, #304]	@ (8003bdc <HAL_RCC_OscConfig+0x26c>)
 8003aac:	685b      	ldr	r3, [r3, #4]
 8003aae:	f003 030c 	and.w	r3, r3, #12
 8003ab2:	2b00      	cmp	r3, #0
 8003ab4:	d00b      	beq.n	8003ace <HAL_RCC_OscConfig+0x15e>
 8003ab6:	4b49      	ldr	r3, [pc, #292]	@ (8003bdc <HAL_RCC_OscConfig+0x26c>)
 8003ab8:	685b      	ldr	r3, [r3, #4]
 8003aba:	f003 030c 	and.w	r3, r3, #12
 8003abe:	2b08      	cmp	r3, #8
 8003ac0:	d11c      	bne.n	8003afc <HAL_RCC_OscConfig+0x18c>
 8003ac2:	4b46      	ldr	r3, [pc, #280]	@ (8003bdc <HAL_RCC_OscConfig+0x26c>)
 8003ac4:	685b      	ldr	r3, [r3, #4]
 8003ac6:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003aca:	2b00      	cmp	r3, #0
 8003acc:	d116      	bne.n	8003afc <HAL_RCC_OscConfig+0x18c>
 8003ace:	4b43      	ldr	r3, [pc, #268]	@ (8003bdc <HAL_RCC_OscConfig+0x26c>)
 8003ad0:	681b      	ldr	r3, [r3, #0]
 8003ad2:	f003 0302 	and.w	r3, r3, #2
 8003ad6:	2b00      	cmp	r3, #0
 8003ad8:	d005      	beq.n	8003ae6 <HAL_RCC_OscConfig+0x176>
 8003ada:	687b      	ldr	r3, [r7, #4]
 8003adc:	691b      	ldr	r3, [r3, #16]
 8003ade:	2b01      	cmp	r3, #1
 8003ae0:	d001      	beq.n	8003ae6 <HAL_RCC_OscConfig+0x176>
 8003ae2:	2301      	movs	r3, #1
 8003ae4:	e1c0      	b.n	8003e68 <HAL_RCC_OscConfig+0x4f8>
 8003ae6:	4b3d      	ldr	r3, [pc, #244]	@ (8003bdc <HAL_RCC_OscConfig+0x26c>)
 8003ae8:	681b      	ldr	r3, [r3, #0]
 8003aea:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8003aee:	687b      	ldr	r3, [r7, #4]
 8003af0:	695b      	ldr	r3, [r3, #20]
 8003af2:	00db      	lsls	r3, r3, #3
 8003af4:	4939      	ldr	r1, [pc, #228]	@ (8003bdc <HAL_RCC_OscConfig+0x26c>)
 8003af6:	4313      	orrs	r3, r2
 8003af8:	600b      	str	r3, [r1, #0]
 8003afa:	e03a      	b.n	8003b72 <HAL_RCC_OscConfig+0x202>
 8003afc:	687b      	ldr	r3, [r7, #4]
 8003afe:	691b      	ldr	r3, [r3, #16]
 8003b00:	2b00      	cmp	r3, #0
 8003b02:	d020      	beq.n	8003b46 <HAL_RCC_OscConfig+0x1d6>
 8003b04:	4b36      	ldr	r3, [pc, #216]	@ (8003be0 <HAL_RCC_OscConfig+0x270>)
 8003b06:	2201      	movs	r2, #1
 8003b08:	601a      	str	r2, [r3, #0]
 8003b0a:	f7fe ff79 	bl	8002a00 <HAL_GetTick>
 8003b0e:	6138      	str	r0, [r7, #16]
 8003b10:	e008      	b.n	8003b24 <HAL_RCC_OscConfig+0x1b4>
 8003b12:	f7fe ff75 	bl	8002a00 <HAL_GetTick>
 8003b16:	4602      	mov	r2, r0
 8003b18:	693b      	ldr	r3, [r7, #16]
 8003b1a:	1ad3      	subs	r3, r2, r3
 8003b1c:	2b02      	cmp	r3, #2
 8003b1e:	d901      	bls.n	8003b24 <HAL_RCC_OscConfig+0x1b4>
 8003b20:	2303      	movs	r3, #3
 8003b22:	e1a1      	b.n	8003e68 <HAL_RCC_OscConfig+0x4f8>
 8003b24:	4b2d      	ldr	r3, [pc, #180]	@ (8003bdc <HAL_RCC_OscConfig+0x26c>)
 8003b26:	681b      	ldr	r3, [r3, #0]
 8003b28:	f003 0302 	and.w	r3, r3, #2
 8003b2c:	2b00      	cmp	r3, #0
 8003b2e:	d0f0      	beq.n	8003b12 <HAL_RCC_OscConfig+0x1a2>
 8003b30:	4b2a      	ldr	r3, [pc, #168]	@ (8003bdc <HAL_RCC_OscConfig+0x26c>)
 8003b32:	681b      	ldr	r3, [r3, #0]
 8003b34:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8003b38:	687b      	ldr	r3, [r7, #4]
 8003b3a:	695b      	ldr	r3, [r3, #20]
 8003b3c:	00db      	lsls	r3, r3, #3
 8003b3e:	4927      	ldr	r1, [pc, #156]	@ (8003bdc <HAL_RCC_OscConfig+0x26c>)
 8003b40:	4313      	orrs	r3, r2
 8003b42:	600b      	str	r3, [r1, #0]
 8003b44:	e015      	b.n	8003b72 <HAL_RCC_OscConfig+0x202>
 8003b46:	4b26      	ldr	r3, [pc, #152]	@ (8003be0 <HAL_RCC_OscConfig+0x270>)
 8003b48:	2200      	movs	r2, #0
 8003b4a:	601a      	str	r2, [r3, #0]
 8003b4c:	f7fe ff58 	bl	8002a00 <HAL_GetTick>
 8003b50:	6138      	str	r0, [r7, #16]
 8003b52:	e008      	b.n	8003b66 <HAL_RCC_OscConfig+0x1f6>
 8003b54:	f7fe ff54 	bl	8002a00 <HAL_GetTick>
 8003b58:	4602      	mov	r2, r0
 8003b5a:	693b      	ldr	r3, [r7, #16]
 8003b5c:	1ad3      	subs	r3, r2, r3
 8003b5e:	2b02      	cmp	r3, #2
 8003b60:	d901      	bls.n	8003b66 <HAL_RCC_OscConfig+0x1f6>
 8003b62:	2303      	movs	r3, #3
 8003b64:	e180      	b.n	8003e68 <HAL_RCC_OscConfig+0x4f8>
 8003b66:	4b1d      	ldr	r3, [pc, #116]	@ (8003bdc <HAL_RCC_OscConfig+0x26c>)
 8003b68:	681b      	ldr	r3, [r3, #0]
 8003b6a:	f003 0302 	and.w	r3, r3, #2
 8003b6e:	2b00      	cmp	r3, #0
 8003b70:	d1f0      	bne.n	8003b54 <HAL_RCC_OscConfig+0x1e4>
 8003b72:	687b      	ldr	r3, [r7, #4]
 8003b74:	681b      	ldr	r3, [r3, #0]
 8003b76:	f003 0308 	and.w	r3, r3, #8
 8003b7a:	2b00      	cmp	r3, #0
 8003b7c:	d03a      	beq.n	8003bf4 <HAL_RCC_OscConfig+0x284>
 8003b7e:	687b      	ldr	r3, [r7, #4]
 8003b80:	699b      	ldr	r3, [r3, #24]
 8003b82:	2b00      	cmp	r3, #0
 8003b84:	d019      	beq.n	8003bba <HAL_RCC_OscConfig+0x24a>
 8003b86:	4b17      	ldr	r3, [pc, #92]	@ (8003be4 <HAL_RCC_OscConfig+0x274>)
 8003b88:	2201      	movs	r2, #1
 8003b8a:	601a      	str	r2, [r3, #0]
 8003b8c:	f7fe ff38 	bl	8002a00 <HAL_GetTick>
 8003b90:	6138      	str	r0, [r7, #16]
 8003b92:	e008      	b.n	8003ba6 <HAL_RCC_OscConfig+0x236>
 8003b94:	f7fe ff34 	bl	8002a00 <HAL_GetTick>
 8003b98:	4602      	mov	r2, r0
 8003b9a:	693b      	ldr	r3, [r7, #16]
 8003b9c:	1ad3      	subs	r3, r2, r3
 8003b9e:	2b02      	cmp	r3, #2
 8003ba0:	d901      	bls.n	8003ba6 <HAL_RCC_OscConfig+0x236>
 8003ba2:	2303      	movs	r3, #3
 8003ba4:	e160      	b.n	8003e68 <HAL_RCC_OscConfig+0x4f8>
 8003ba6:	4b0d      	ldr	r3, [pc, #52]	@ (8003bdc <HAL_RCC_OscConfig+0x26c>)
 8003ba8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003baa:	f003 0302 	and.w	r3, r3, #2
 8003bae:	2b00      	cmp	r3, #0
 8003bb0:	d0f0      	beq.n	8003b94 <HAL_RCC_OscConfig+0x224>
 8003bb2:	2001      	movs	r0, #1
 8003bb4:	f000 fad0 	bl	8004158 <RCC_Delay>
 8003bb8:	e01c      	b.n	8003bf4 <HAL_RCC_OscConfig+0x284>
 8003bba:	4b0a      	ldr	r3, [pc, #40]	@ (8003be4 <HAL_RCC_OscConfig+0x274>)
 8003bbc:	2200      	movs	r2, #0
 8003bbe:	601a      	str	r2, [r3, #0]
 8003bc0:	f7fe ff1e 	bl	8002a00 <HAL_GetTick>
 8003bc4:	6138      	str	r0, [r7, #16]
 8003bc6:	e00f      	b.n	8003be8 <HAL_RCC_OscConfig+0x278>
 8003bc8:	f7fe ff1a 	bl	8002a00 <HAL_GetTick>
 8003bcc:	4602      	mov	r2, r0
 8003bce:	693b      	ldr	r3, [r7, #16]
 8003bd0:	1ad3      	subs	r3, r2, r3
 8003bd2:	2b02      	cmp	r3, #2
 8003bd4:	d908      	bls.n	8003be8 <HAL_RCC_OscConfig+0x278>
 8003bd6:	2303      	movs	r3, #3
 8003bd8:	e146      	b.n	8003e68 <HAL_RCC_OscConfig+0x4f8>
 8003bda:	bf00      	nop
 8003bdc:	40021000 	.word	0x40021000
 8003be0:	42420000 	.word	0x42420000
 8003be4:	42420480 	.word	0x42420480
 8003be8:	4b92      	ldr	r3, [pc, #584]	@ (8003e34 <HAL_RCC_OscConfig+0x4c4>)
 8003bea:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003bec:	f003 0302 	and.w	r3, r3, #2
 8003bf0:	2b00      	cmp	r3, #0
 8003bf2:	d1e9      	bne.n	8003bc8 <HAL_RCC_OscConfig+0x258>
 8003bf4:	687b      	ldr	r3, [r7, #4]
 8003bf6:	681b      	ldr	r3, [r3, #0]
 8003bf8:	f003 0304 	and.w	r3, r3, #4
 8003bfc:	2b00      	cmp	r3, #0
 8003bfe:	f000 80a6 	beq.w	8003d4e <HAL_RCC_OscConfig+0x3de>
 8003c02:	2300      	movs	r3, #0
 8003c04:	75fb      	strb	r3, [r7, #23]
 8003c06:	4b8b      	ldr	r3, [pc, #556]	@ (8003e34 <HAL_RCC_OscConfig+0x4c4>)
 8003c08:	69db      	ldr	r3, [r3, #28]
 8003c0a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003c0e:	2b00      	cmp	r3, #0
 8003c10:	d10d      	bne.n	8003c2e <HAL_RCC_OscConfig+0x2be>
 8003c12:	4b88      	ldr	r3, [pc, #544]	@ (8003e34 <HAL_RCC_OscConfig+0x4c4>)
 8003c14:	69db      	ldr	r3, [r3, #28]
 8003c16:	4a87      	ldr	r2, [pc, #540]	@ (8003e34 <HAL_RCC_OscConfig+0x4c4>)
 8003c18:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003c1c:	61d3      	str	r3, [r2, #28]
 8003c1e:	4b85      	ldr	r3, [pc, #532]	@ (8003e34 <HAL_RCC_OscConfig+0x4c4>)
 8003c20:	69db      	ldr	r3, [r3, #28]
 8003c22:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003c26:	60bb      	str	r3, [r7, #8]
 8003c28:	68bb      	ldr	r3, [r7, #8]
 8003c2a:	2301      	movs	r3, #1
 8003c2c:	75fb      	strb	r3, [r7, #23]
 8003c2e:	4b82      	ldr	r3, [pc, #520]	@ (8003e38 <HAL_RCC_OscConfig+0x4c8>)
 8003c30:	681b      	ldr	r3, [r3, #0]
 8003c32:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003c36:	2b00      	cmp	r3, #0
 8003c38:	d118      	bne.n	8003c6c <HAL_RCC_OscConfig+0x2fc>
 8003c3a:	4b7f      	ldr	r3, [pc, #508]	@ (8003e38 <HAL_RCC_OscConfig+0x4c8>)
 8003c3c:	681b      	ldr	r3, [r3, #0]
 8003c3e:	4a7e      	ldr	r2, [pc, #504]	@ (8003e38 <HAL_RCC_OscConfig+0x4c8>)
 8003c40:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003c44:	6013      	str	r3, [r2, #0]
 8003c46:	f7fe fedb 	bl	8002a00 <HAL_GetTick>
 8003c4a:	6138      	str	r0, [r7, #16]
 8003c4c:	e008      	b.n	8003c60 <HAL_RCC_OscConfig+0x2f0>
 8003c4e:	f7fe fed7 	bl	8002a00 <HAL_GetTick>
 8003c52:	4602      	mov	r2, r0
 8003c54:	693b      	ldr	r3, [r7, #16]
 8003c56:	1ad3      	subs	r3, r2, r3
 8003c58:	2b64      	cmp	r3, #100	@ 0x64
 8003c5a:	d901      	bls.n	8003c60 <HAL_RCC_OscConfig+0x2f0>
 8003c5c:	2303      	movs	r3, #3
 8003c5e:	e103      	b.n	8003e68 <HAL_RCC_OscConfig+0x4f8>
 8003c60:	4b75      	ldr	r3, [pc, #468]	@ (8003e38 <HAL_RCC_OscConfig+0x4c8>)
 8003c62:	681b      	ldr	r3, [r3, #0]
 8003c64:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003c68:	2b00      	cmp	r3, #0
 8003c6a:	d0f0      	beq.n	8003c4e <HAL_RCC_OscConfig+0x2de>
 8003c6c:	687b      	ldr	r3, [r7, #4]
 8003c6e:	68db      	ldr	r3, [r3, #12]
 8003c70:	2b01      	cmp	r3, #1
 8003c72:	d106      	bne.n	8003c82 <HAL_RCC_OscConfig+0x312>
 8003c74:	4b6f      	ldr	r3, [pc, #444]	@ (8003e34 <HAL_RCC_OscConfig+0x4c4>)
 8003c76:	6a1b      	ldr	r3, [r3, #32]
 8003c78:	4a6e      	ldr	r2, [pc, #440]	@ (8003e34 <HAL_RCC_OscConfig+0x4c4>)
 8003c7a:	f043 0301 	orr.w	r3, r3, #1
 8003c7e:	6213      	str	r3, [r2, #32]
 8003c80:	e02d      	b.n	8003cde <HAL_RCC_OscConfig+0x36e>
 8003c82:	687b      	ldr	r3, [r7, #4]
 8003c84:	68db      	ldr	r3, [r3, #12]
 8003c86:	2b00      	cmp	r3, #0
 8003c88:	d10c      	bne.n	8003ca4 <HAL_RCC_OscConfig+0x334>
 8003c8a:	4b6a      	ldr	r3, [pc, #424]	@ (8003e34 <HAL_RCC_OscConfig+0x4c4>)
 8003c8c:	6a1b      	ldr	r3, [r3, #32]
 8003c8e:	4a69      	ldr	r2, [pc, #420]	@ (8003e34 <HAL_RCC_OscConfig+0x4c4>)
 8003c90:	f023 0301 	bic.w	r3, r3, #1
 8003c94:	6213      	str	r3, [r2, #32]
 8003c96:	4b67      	ldr	r3, [pc, #412]	@ (8003e34 <HAL_RCC_OscConfig+0x4c4>)
 8003c98:	6a1b      	ldr	r3, [r3, #32]
 8003c9a:	4a66      	ldr	r2, [pc, #408]	@ (8003e34 <HAL_RCC_OscConfig+0x4c4>)
 8003c9c:	f023 0304 	bic.w	r3, r3, #4
 8003ca0:	6213      	str	r3, [r2, #32]
 8003ca2:	e01c      	b.n	8003cde <HAL_RCC_OscConfig+0x36e>
 8003ca4:	687b      	ldr	r3, [r7, #4]
 8003ca6:	68db      	ldr	r3, [r3, #12]
 8003ca8:	2b05      	cmp	r3, #5
 8003caa:	d10c      	bne.n	8003cc6 <HAL_RCC_OscConfig+0x356>
 8003cac:	4b61      	ldr	r3, [pc, #388]	@ (8003e34 <HAL_RCC_OscConfig+0x4c4>)
 8003cae:	6a1b      	ldr	r3, [r3, #32]
 8003cb0:	4a60      	ldr	r2, [pc, #384]	@ (8003e34 <HAL_RCC_OscConfig+0x4c4>)
 8003cb2:	f043 0304 	orr.w	r3, r3, #4
 8003cb6:	6213      	str	r3, [r2, #32]
 8003cb8:	4b5e      	ldr	r3, [pc, #376]	@ (8003e34 <HAL_RCC_OscConfig+0x4c4>)
 8003cba:	6a1b      	ldr	r3, [r3, #32]
 8003cbc:	4a5d      	ldr	r2, [pc, #372]	@ (8003e34 <HAL_RCC_OscConfig+0x4c4>)
 8003cbe:	f043 0301 	orr.w	r3, r3, #1
 8003cc2:	6213      	str	r3, [r2, #32]
 8003cc4:	e00b      	b.n	8003cde <HAL_RCC_OscConfig+0x36e>
 8003cc6:	4b5b      	ldr	r3, [pc, #364]	@ (8003e34 <HAL_RCC_OscConfig+0x4c4>)
 8003cc8:	6a1b      	ldr	r3, [r3, #32]
 8003cca:	4a5a      	ldr	r2, [pc, #360]	@ (8003e34 <HAL_RCC_OscConfig+0x4c4>)
 8003ccc:	f023 0301 	bic.w	r3, r3, #1
 8003cd0:	6213      	str	r3, [r2, #32]
 8003cd2:	4b58      	ldr	r3, [pc, #352]	@ (8003e34 <HAL_RCC_OscConfig+0x4c4>)
 8003cd4:	6a1b      	ldr	r3, [r3, #32]
 8003cd6:	4a57      	ldr	r2, [pc, #348]	@ (8003e34 <HAL_RCC_OscConfig+0x4c4>)
 8003cd8:	f023 0304 	bic.w	r3, r3, #4
 8003cdc:	6213      	str	r3, [r2, #32]
 8003cde:	687b      	ldr	r3, [r7, #4]
 8003ce0:	68db      	ldr	r3, [r3, #12]
 8003ce2:	2b00      	cmp	r3, #0
 8003ce4:	d015      	beq.n	8003d12 <HAL_RCC_OscConfig+0x3a2>
 8003ce6:	f7fe fe8b 	bl	8002a00 <HAL_GetTick>
 8003cea:	6138      	str	r0, [r7, #16]
 8003cec:	e00a      	b.n	8003d04 <HAL_RCC_OscConfig+0x394>
 8003cee:	f7fe fe87 	bl	8002a00 <HAL_GetTick>
 8003cf2:	4602      	mov	r2, r0
 8003cf4:	693b      	ldr	r3, [r7, #16]
 8003cf6:	1ad3      	subs	r3, r2, r3
 8003cf8:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003cfc:	4293      	cmp	r3, r2
 8003cfe:	d901      	bls.n	8003d04 <HAL_RCC_OscConfig+0x394>
 8003d00:	2303      	movs	r3, #3
 8003d02:	e0b1      	b.n	8003e68 <HAL_RCC_OscConfig+0x4f8>
 8003d04:	4b4b      	ldr	r3, [pc, #300]	@ (8003e34 <HAL_RCC_OscConfig+0x4c4>)
 8003d06:	6a1b      	ldr	r3, [r3, #32]
 8003d08:	f003 0302 	and.w	r3, r3, #2
 8003d0c:	2b00      	cmp	r3, #0
 8003d0e:	d0ee      	beq.n	8003cee <HAL_RCC_OscConfig+0x37e>
 8003d10:	e014      	b.n	8003d3c <HAL_RCC_OscConfig+0x3cc>
 8003d12:	f7fe fe75 	bl	8002a00 <HAL_GetTick>
 8003d16:	6138      	str	r0, [r7, #16]
 8003d18:	e00a      	b.n	8003d30 <HAL_RCC_OscConfig+0x3c0>
 8003d1a:	f7fe fe71 	bl	8002a00 <HAL_GetTick>
 8003d1e:	4602      	mov	r2, r0
 8003d20:	693b      	ldr	r3, [r7, #16]
 8003d22:	1ad3      	subs	r3, r2, r3
 8003d24:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003d28:	4293      	cmp	r3, r2
 8003d2a:	d901      	bls.n	8003d30 <HAL_RCC_OscConfig+0x3c0>
 8003d2c:	2303      	movs	r3, #3
 8003d2e:	e09b      	b.n	8003e68 <HAL_RCC_OscConfig+0x4f8>
 8003d30:	4b40      	ldr	r3, [pc, #256]	@ (8003e34 <HAL_RCC_OscConfig+0x4c4>)
 8003d32:	6a1b      	ldr	r3, [r3, #32]
 8003d34:	f003 0302 	and.w	r3, r3, #2
 8003d38:	2b00      	cmp	r3, #0
 8003d3a:	d1ee      	bne.n	8003d1a <HAL_RCC_OscConfig+0x3aa>
 8003d3c:	7dfb      	ldrb	r3, [r7, #23]
 8003d3e:	2b01      	cmp	r3, #1
 8003d40:	d105      	bne.n	8003d4e <HAL_RCC_OscConfig+0x3de>
 8003d42:	4b3c      	ldr	r3, [pc, #240]	@ (8003e34 <HAL_RCC_OscConfig+0x4c4>)
 8003d44:	69db      	ldr	r3, [r3, #28]
 8003d46:	4a3b      	ldr	r2, [pc, #236]	@ (8003e34 <HAL_RCC_OscConfig+0x4c4>)
 8003d48:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8003d4c:	61d3      	str	r3, [r2, #28]
 8003d4e:	687b      	ldr	r3, [r7, #4]
 8003d50:	69db      	ldr	r3, [r3, #28]
 8003d52:	2b00      	cmp	r3, #0
 8003d54:	f000 8087 	beq.w	8003e66 <HAL_RCC_OscConfig+0x4f6>
 8003d58:	4b36      	ldr	r3, [pc, #216]	@ (8003e34 <HAL_RCC_OscConfig+0x4c4>)
 8003d5a:	685b      	ldr	r3, [r3, #4]
 8003d5c:	f003 030c 	and.w	r3, r3, #12
 8003d60:	2b08      	cmp	r3, #8
 8003d62:	d061      	beq.n	8003e28 <HAL_RCC_OscConfig+0x4b8>
 8003d64:	687b      	ldr	r3, [r7, #4]
 8003d66:	69db      	ldr	r3, [r3, #28]
 8003d68:	2b02      	cmp	r3, #2
 8003d6a:	d146      	bne.n	8003dfa <HAL_RCC_OscConfig+0x48a>
 8003d6c:	4b33      	ldr	r3, [pc, #204]	@ (8003e3c <HAL_RCC_OscConfig+0x4cc>)
 8003d6e:	2200      	movs	r2, #0
 8003d70:	601a      	str	r2, [r3, #0]
 8003d72:	f7fe fe45 	bl	8002a00 <HAL_GetTick>
 8003d76:	6138      	str	r0, [r7, #16]
 8003d78:	e008      	b.n	8003d8c <HAL_RCC_OscConfig+0x41c>
 8003d7a:	f7fe fe41 	bl	8002a00 <HAL_GetTick>
 8003d7e:	4602      	mov	r2, r0
 8003d80:	693b      	ldr	r3, [r7, #16]
 8003d82:	1ad3      	subs	r3, r2, r3
 8003d84:	2b02      	cmp	r3, #2
 8003d86:	d901      	bls.n	8003d8c <HAL_RCC_OscConfig+0x41c>
 8003d88:	2303      	movs	r3, #3
 8003d8a:	e06d      	b.n	8003e68 <HAL_RCC_OscConfig+0x4f8>
 8003d8c:	4b29      	ldr	r3, [pc, #164]	@ (8003e34 <HAL_RCC_OscConfig+0x4c4>)
 8003d8e:	681b      	ldr	r3, [r3, #0]
 8003d90:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003d94:	2b00      	cmp	r3, #0
 8003d96:	d1f0      	bne.n	8003d7a <HAL_RCC_OscConfig+0x40a>
 8003d98:	687b      	ldr	r3, [r7, #4]
 8003d9a:	6a1b      	ldr	r3, [r3, #32]
 8003d9c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003da0:	d108      	bne.n	8003db4 <HAL_RCC_OscConfig+0x444>
 8003da2:	4b24      	ldr	r3, [pc, #144]	@ (8003e34 <HAL_RCC_OscConfig+0x4c4>)
 8003da4:	685b      	ldr	r3, [r3, #4]
 8003da6:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 8003daa:	687b      	ldr	r3, [r7, #4]
 8003dac:	689b      	ldr	r3, [r3, #8]
 8003dae:	4921      	ldr	r1, [pc, #132]	@ (8003e34 <HAL_RCC_OscConfig+0x4c4>)
 8003db0:	4313      	orrs	r3, r2
 8003db2:	604b      	str	r3, [r1, #4]
 8003db4:	4b1f      	ldr	r3, [pc, #124]	@ (8003e34 <HAL_RCC_OscConfig+0x4c4>)
 8003db6:	685b      	ldr	r3, [r3, #4]
 8003db8:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 8003dbc:	687b      	ldr	r3, [r7, #4]
 8003dbe:	6a19      	ldr	r1, [r3, #32]
 8003dc0:	687b      	ldr	r3, [r7, #4]
 8003dc2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003dc4:	430b      	orrs	r3, r1
 8003dc6:	491b      	ldr	r1, [pc, #108]	@ (8003e34 <HAL_RCC_OscConfig+0x4c4>)
 8003dc8:	4313      	orrs	r3, r2
 8003dca:	604b      	str	r3, [r1, #4]
 8003dcc:	4b1b      	ldr	r3, [pc, #108]	@ (8003e3c <HAL_RCC_OscConfig+0x4cc>)
 8003dce:	2201      	movs	r2, #1
 8003dd0:	601a      	str	r2, [r3, #0]
 8003dd2:	f7fe fe15 	bl	8002a00 <HAL_GetTick>
 8003dd6:	6138      	str	r0, [r7, #16]
 8003dd8:	e008      	b.n	8003dec <HAL_RCC_OscConfig+0x47c>
 8003dda:	f7fe fe11 	bl	8002a00 <HAL_GetTick>
 8003dde:	4602      	mov	r2, r0
 8003de0:	693b      	ldr	r3, [r7, #16]
 8003de2:	1ad3      	subs	r3, r2, r3
 8003de4:	2b02      	cmp	r3, #2
 8003de6:	d901      	bls.n	8003dec <HAL_RCC_OscConfig+0x47c>
 8003de8:	2303      	movs	r3, #3
 8003dea:	e03d      	b.n	8003e68 <HAL_RCC_OscConfig+0x4f8>
 8003dec:	4b11      	ldr	r3, [pc, #68]	@ (8003e34 <HAL_RCC_OscConfig+0x4c4>)
 8003dee:	681b      	ldr	r3, [r3, #0]
 8003df0:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003df4:	2b00      	cmp	r3, #0
 8003df6:	d0f0      	beq.n	8003dda <HAL_RCC_OscConfig+0x46a>
 8003df8:	e035      	b.n	8003e66 <HAL_RCC_OscConfig+0x4f6>
 8003dfa:	4b10      	ldr	r3, [pc, #64]	@ (8003e3c <HAL_RCC_OscConfig+0x4cc>)
 8003dfc:	2200      	movs	r2, #0
 8003dfe:	601a      	str	r2, [r3, #0]
 8003e00:	f7fe fdfe 	bl	8002a00 <HAL_GetTick>
 8003e04:	6138      	str	r0, [r7, #16]
 8003e06:	e008      	b.n	8003e1a <HAL_RCC_OscConfig+0x4aa>
 8003e08:	f7fe fdfa 	bl	8002a00 <HAL_GetTick>
 8003e0c:	4602      	mov	r2, r0
 8003e0e:	693b      	ldr	r3, [r7, #16]
 8003e10:	1ad3      	subs	r3, r2, r3
 8003e12:	2b02      	cmp	r3, #2
 8003e14:	d901      	bls.n	8003e1a <HAL_RCC_OscConfig+0x4aa>
 8003e16:	2303      	movs	r3, #3
 8003e18:	e026      	b.n	8003e68 <HAL_RCC_OscConfig+0x4f8>
 8003e1a:	4b06      	ldr	r3, [pc, #24]	@ (8003e34 <HAL_RCC_OscConfig+0x4c4>)
 8003e1c:	681b      	ldr	r3, [r3, #0]
 8003e1e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003e22:	2b00      	cmp	r3, #0
 8003e24:	d1f0      	bne.n	8003e08 <HAL_RCC_OscConfig+0x498>
 8003e26:	e01e      	b.n	8003e66 <HAL_RCC_OscConfig+0x4f6>
 8003e28:	687b      	ldr	r3, [r7, #4]
 8003e2a:	69db      	ldr	r3, [r3, #28]
 8003e2c:	2b01      	cmp	r3, #1
 8003e2e:	d107      	bne.n	8003e40 <HAL_RCC_OscConfig+0x4d0>
 8003e30:	2301      	movs	r3, #1
 8003e32:	e019      	b.n	8003e68 <HAL_RCC_OscConfig+0x4f8>
 8003e34:	40021000 	.word	0x40021000
 8003e38:	40007000 	.word	0x40007000
 8003e3c:	42420060 	.word	0x42420060
 8003e40:	4b0b      	ldr	r3, [pc, #44]	@ (8003e70 <HAL_RCC_OscConfig+0x500>)
 8003e42:	685b      	ldr	r3, [r3, #4]
 8003e44:	60fb      	str	r3, [r7, #12]
 8003e46:	68fb      	ldr	r3, [r7, #12]
 8003e48:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 8003e4c:	687b      	ldr	r3, [r7, #4]
 8003e4e:	6a1b      	ldr	r3, [r3, #32]
 8003e50:	429a      	cmp	r2, r3
 8003e52:	d106      	bne.n	8003e62 <HAL_RCC_OscConfig+0x4f2>
 8003e54:	68fb      	ldr	r3, [r7, #12]
 8003e56:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 8003e5a:	687b      	ldr	r3, [r7, #4]
 8003e5c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003e5e:	429a      	cmp	r2, r3
 8003e60:	d001      	beq.n	8003e66 <HAL_RCC_OscConfig+0x4f6>
 8003e62:	2301      	movs	r3, #1
 8003e64:	e000      	b.n	8003e68 <HAL_RCC_OscConfig+0x4f8>
 8003e66:	2300      	movs	r3, #0
 8003e68:	4618      	mov	r0, r3
 8003e6a:	3718      	adds	r7, #24
 8003e6c:	46bd      	mov	sp, r7
 8003e6e:	bd80      	pop	{r7, pc}
 8003e70:	40021000 	.word	0x40021000

08003e74 <HAL_RCC_ClockConfig>:
 8003e74:	b580      	push	{r7, lr}
 8003e76:	b084      	sub	sp, #16
 8003e78:	af00      	add	r7, sp, #0
 8003e7a:	6078      	str	r0, [r7, #4]
 8003e7c:	6039      	str	r1, [r7, #0]
 8003e7e:	687b      	ldr	r3, [r7, #4]
 8003e80:	2b00      	cmp	r3, #0
 8003e82:	d101      	bne.n	8003e88 <HAL_RCC_ClockConfig+0x14>
 8003e84:	2301      	movs	r3, #1
 8003e86:	e0d0      	b.n	800402a <HAL_RCC_ClockConfig+0x1b6>
 8003e88:	4b6a      	ldr	r3, [pc, #424]	@ (8004034 <HAL_RCC_ClockConfig+0x1c0>)
 8003e8a:	681b      	ldr	r3, [r3, #0]
 8003e8c:	f003 0307 	and.w	r3, r3, #7
 8003e90:	683a      	ldr	r2, [r7, #0]
 8003e92:	429a      	cmp	r2, r3
 8003e94:	d910      	bls.n	8003eb8 <HAL_RCC_ClockConfig+0x44>
 8003e96:	4b67      	ldr	r3, [pc, #412]	@ (8004034 <HAL_RCC_ClockConfig+0x1c0>)
 8003e98:	681b      	ldr	r3, [r3, #0]
 8003e9a:	f023 0207 	bic.w	r2, r3, #7
 8003e9e:	4965      	ldr	r1, [pc, #404]	@ (8004034 <HAL_RCC_ClockConfig+0x1c0>)
 8003ea0:	683b      	ldr	r3, [r7, #0]
 8003ea2:	4313      	orrs	r3, r2
 8003ea4:	600b      	str	r3, [r1, #0]
 8003ea6:	4b63      	ldr	r3, [pc, #396]	@ (8004034 <HAL_RCC_ClockConfig+0x1c0>)
 8003ea8:	681b      	ldr	r3, [r3, #0]
 8003eaa:	f003 0307 	and.w	r3, r3, #7
 8003eae:	683a      	ldr	r2, [r7, #0]
 8003eb0:	429a      	cmp	r2, r3
 8003eb2:	d001      	beq.n	8003eb8 <HAL_RCC_ClockConfig+0x44>
 8003eb4:	2301      	movs	r3, #1
 8003eb6:	e0b8      	b.n	800402a <HAL_RCC_ClockConfig+0x1b6>
 8003eb8:	687b      	ldr	r3, [r7, #4]
 8003eba:	681b      	ldr	r3, [r3, #0]
 8003ebc:	f003 0302 	and.w	r3, r3, #2
 8003ec0:	2b00      	cmp	r3, #0
 8003ec2:	d020      	beq.n	8003f06 <HAL_RCC_ClockConfig+0x92>
 8003ec4:	687b      	ldr	r3, [r7, #4]
 8003ec6:	681b      	ldr	r3, [r3, #0]
 8003ec8:	f003 0304 	and.w	r3, r3, #4
 8003ecc:	2b00      	cmp	r3, #0
 8003ece:	d005      	beq.n	8003edc <HAL_RCC_ClockConfig+0x68>
 8003ed0:	4b59      	ldr	r3, [pc, #356]	@ (8004038 <HAL_RCC_ClockConfig+0x1c4>)
 8003ed2:	685b      	ldr	r3, [r3, #4]
 8003ed4:	4a58      	ldr	r2, [pc, #352]	@ (8004038 <HAL_RCC_ClockConfig+0x1c4>)
 8003ed6:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8003eda:	6053      	str	r3, [r2, #4]
 8003edc:	687b      	ldr	r3, [r7, #4]
 8003ede:	681b      	ldr	r3, [r3, #0]
 8003ee0:	f003 0308 	and.w	r3, r3, #8
 8003ee4:	2b00      	cmp	r3, #0
 8003ee6:	d005      	beq.n	8003ef4 <HAL_RCC_ClockConfig+0x80>
 8003ee8:	4b53      	ldr	r3, [pc, #332]	@ (8004038 <HAL_RCC_ClockConfig+0x1c4>)
 8003eea:	685b      	ldr	r3, [r3, #4]
 8003eec:	4a52      	ldr	r2, [pc, #328]	@ (8004038 <HAL_RCC_ClockConfig+0x1c4>)
 8003eee:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 8003ef2:	6053      	str	r3, [r2, #4]
 8003ef4:	4b50      	ldr	r3, [pc, #320]	@ (8004038 <HAL_RCC_ClockConfig+0x1c4>)
 8003ef6:	685b      	ldr	r3, [r3, #4]
 8003ef8:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8003efc:	687b      	ldr	r3, [r7, #4]
 8003efe:	689b      	ldr	r3, [r3, #8]
 8003f00:	494d      	ldr	r1, [pc, #308]	@ (8004038 <HAL_RCC_ClockConfig+0x1c4>)
 8003f02:	4313      	orrs	r3, r2
 8003f04:	604b      	str	r3, [r1, #4]
 8003f06:	687b      	ldr	r3, [r7, #4]
 8003f08:	681b      	ldr	r3, [r3, #0]
 8003f0a:	f003 0301 	and.w	r3, r3, #1
 8003f0e:	2b00      	cmp	r3, #0
 8003f10:	d040      	beq.n	8003f94 <HAL_RCC_ClockConfig+0x120>
 8003f12:	687b      	ldr	r3, [r7, #4]
 8003f14:	685b      	ldr	r3, [r3, #4]
 8003f16:	2b01      	cmp	r3, #1
 8003f18:	d107      	bne.n	8003f2a <HAL_RCC_ClockConfig+0xb6>
 8003f1a:	4b47      	ldr	r3, [pc, #284]	@ (8004038 <HAL_RCC_ClockConfig+0x1c4>)
 8003f1c:	681b      	ldr	r3, [r3, #0]
 8003f1e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003f22:	2b00      	cmp	r3, #0
 8003f24:	d115      	bne.n	8003f52 <HAL_RCC_ClockConfig+0xde>
 8003f26:	2301      	movs	r3, #1
 8003f28:	e07f      	b.n	800402a <HAL_RCC_ClockConfig+0x1b6>
 8003f2a:	687b      	ldr	r3, [r7, #4]
 8003f2c:	685b      	ldr	r3, [r3, #4]
 8003f2e:	2b02      	cmp	r3, #2
 8003f30:	d107      	bne.n	8003f42 <HAL_RCC_ClockConfig+0xce>
 8003f32:	4b41      	ldr	r3, [pc, #260]	@ (8004038 <HAL_RCC_ClockConfig+0x1c4>)
 8003f34:	681b      	ldr	r3, [r3, #0]
 8003f36:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003f3a:	2b00      	cmp	r3, #0
 8003f3c:	d109      	bne.n	8003f52 <HAL_RCC_ClockConfig+0xde>
 8003f3e:	2301      	movs	r3, #1
 8003f40:	e073      	b.n	800402a <HAL_RCC_ClockConfig+0x1b6>
 8003f42:	4b3d      	ldr	r3, [pc, #244]	@ (8004038 <HAL_RCC_ClockConfig+0x1c4>)
 8003f44:	681b      	ldr	r3, [r3, #0]
 8003f46:	f003 0302 	and.w	r3, r3, #2
 8003f4a:	2b00      	cmp	r3, #0
 8003f4c:	d101      	bne.n	8003f52 <HAL_RCC_ClockConfig+0xde>
 8003f4e:	2301      	movs	r3, #1
 8003f50:	e06b      	b.n	800402a <HAL_RCC_ClockConfig+0x1b6>
 8003f52:	4b39      	ldr	r3, [pc, #228]	@ (8004038 <HAL_RCC_ClockConfig+0x1c4>)
 8003f54:	685b      	ldr	r3, [r3, #4]
 8003f56:	f023 0203 	bic.w	r2, r3, #3
 8003f5a:	687b      	ldr	r3, [r7, #4]
 8003f5c:	685b      	ldr	r3, [r3, #4]
 8003f5e:	4936      	ldr	r1, [pc, #216]	@ (8004038 <HAL_RCC_ClockConfig+0x1c4>)
 8003f60:	4313      	orrs	r3, r2
 8003f62:	604b      	str	r3, [r1, #4]
 8003f64:	f7fe fd4c 	bl	8002a00 <HAL_GetTick>
 8003f68:	60f8      	str	r0, [r7, #12]
 8003f6a:	e00a      	b.n	8003f82 <HAL_RCC_ClockConfig+0x10e>
 8003f6c:	f7fe fd48 	bl	8002a00 <HAL_GetTick>
 8003f70:	4602      	mov	r2, r0
 8003f72:	68fb      	ldr	r3, [r7, #12]
 8003f74:	1ad3      	subs	r3, r2, r3
 8003f76:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003f7a:	4293      	cmp	r3, r2
 8003f7c:	d901      	bls.n	8003f82 <HAL_RCC_ClockConfig+0x10e>
 8003f7e:	2303      	movs	r3, #3
 8003f80:	e053      	b.n	800402a <HAL_RCC_ClockConfig+0x1b6>
 8003f82:	4b2d      	ldr	r3, [pc, #180]	@ (8004038 <HAL_RCC_ClockConfig+0x1c4>)
 8003f84:	685b      	ldr	r3, [r3, #4]
 8003f86:	f003 020c 	and.w	r2, r3, #12
 8003f8a:	687b      	ldr	r3, [r7, #4]
 8003f8c:	685b      	ldr	r3, [r3, #4]
 8003f8e:	009b      	lsls	r3, r3, #2
 8003f90:	429a      	cmp	r2, r3
 8003f92:	d1eb      	bne.n	8003f6c <HAL_RCC_ClockConfig+0xf8>
 8003f94:	4b27      	ldr	r3, [pc, #156]	@ (8004034 <HAL_RCC_ClockConfig+0x1c0>)
 8003f96:	681b      	ldr	r3, [r3, #0]
 8003f98:	f003 0307 	and.w	r3, r3, #7
 8003f9c:	683a      	ldr	r2, [r7, #0]
 8003f9e:	429a      	cmp	r2, r3
 8003fa0:	d210      	bcs.n	8003fc4 <HAL_RCC_ClockConfig+0x150>
 8003fa2:	4b24      	ldr	r3, [pc, #144]	@ (8004034 <HAL_RCC_ClockConfig+0x1c0>)
 8003fa4:	681b      	ldr	r3, [r3, #0]
 8003fa6:	f023 0207 	bic.w	r2, r3, #7
 8003faa:	4922      	ldr	r1, [pc, #136]	@ (8004034 <HAL_RCC_ClockConfig+0x1c0>)
 8003fac:	683b      	ldr	r3, [r7, #0]
 8003fae:	4313      	orrs	r3, r2
 8003fb0:	600b      	str	r3, [r1, #0]
 8003fb2:	4b20      	ldr	r3, [pc, #128]	@ (8004034 <HAL_RCC_ClockConfig+0x1c0>)
 8003fb4:	681b      	ldr	r3, [r3, #0]
 8003fb6:	f003 0307 	and.w	r3, r3, #7
 8003fba:	683a      	ldr	r2, [r7, #0]
 8003fbc:	429a      	cmp	r2, r3
 8003fbe:	d001      	beq.n	8003fc4 <HAL_RCC_ClockConfig+0x150>
 8003fc0:	2301      	movs	r3, #1
 8003fc2:	e032      	b.n	800402a <HAL_RCC_ClockConfig+0x1b6>
 8003fc4:	687b      	ldr	r3, [r7, #4]
 8003fc6:	681b      	ldr	r3, [r3, #0]
 8003fc8:	f003 0304 	and.w	r3, r3, #4
 8003fcc:	2b00      	cmp	r3, #0
 8003fce:	d008      	beq.n	8003fe2 <HAL_RCC_ClockConfig+0x16e>
 8003fd0:	4b19      	ldr	r3, [pc, #100]	@ (8004038 <HAL_RCC_ClockConfig+0x1c4>)
 8003fd2:	685b      	ldr	r3, [r3, #4]
 8003fd4:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8003fd8:	687b      	ldr	r3, [r7, #4]
 8003fda:	68db      	ldr	r3, [r3, #12]
 8003fdc:	4916      	ldr	r1, [pc, #88]	@ (8004038 <HAL_RCC_ClockConfig+0x1c4>)
 8003fde:	4313      	orrs	r3, r2
 8003fe0:	604b      	str	r3, [r1, #4]
 8003fe2:	687b      	ldr	r3, [r7, #4]
 8003fe4:	681b      	ldr	r3, [r3, #0]
 8003fe6:	f003 0308 	and.w	r3, r3, #8
 8003fea:	2b00      	cmp	r3, #0
 8003fec:	d009      	beq.n	8004002 <HAL_RCC_ClockConfig+0x18e>
 8003fee:	4b12      	ldr	r3, [pc, #72]	@ (8004038 <HAL_RCC_ClockConfig+0x1c4>)
 8003ff0:	685b      	ldr	r3, [r3, #4]
 8003ff2:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8003ff6:	687b      	ldr	r3, [r7, #4]
 8003ff8:	691b      	ldr	r3, [r3, #16]
 8003ffa:	00db      	lsls	r3, r3, #3
 8003ffc:	490e      	ldr	r1, [pc, #56]	@ (8004038 <HAL_RCC_ClockConfig+0x1c4>)
 8003ffe:	4313      	orrs	r3, r2
 8004000:	604b      	str	r3, [r1, #4]
 8004002:	f000 f821 	bl	8004048 <HAL_RCC_GetSysClockFreq>
 8004006:	4602      	mov	r2, r0
 8004008:	4b0b      	ldr	r3, [pc, #44]	@ (8004038 <HAL_RCC_ClockConfig+0x1c4>)
 800400a:	685b      	ldr	r3, [r3, #4]
 800400c:	091b      	lsrs	r3, r3, #4
 800400e:	f003 030f 	and.w	r3, r3, #15
 8004012:	490a      	ldr	r1, [pc, #40]	@ (800403c <HAL_RCC_ClockConfig+0x1c8>)
 8004014:	5ccb      	ldrb	r3, [r1, r3]
 8004016:	fa22 f303 	lsr.w	r3, r2, r3
 800401a:	4a09      	ldr	r2, [pc, #36]	@ (8004040 <HAL_RCC_ClockConfig+0x1cc>)
 800401c:	6013      	str	r3, [r2, #0]
 800401e:	4b09      	ldr	r3, [pc, #36]	@ (8004044 <HAL_RCC_ClockConfig+0x1d0>)
 8004020:	681b      	ldr	r3, [r3, #0]
 8004022:	4618      	mov	r0, r3
 8004024:	f7fe fcaa 	bl	800297c <HAL_InitTick>
 8004028:	2300      	movs	r3, #0
 800402a:	4618      	mov	r0, r3
 800402c:	3710      	adds	r7, #16
 800402e:	46bd      	mov	sp, r7
 8004030:	bd80      	pop	{r7, pc}
 8004032:	bf00      	nop
 8004034:	40022000 	.word	0x40022000
 8004038:	40021000 	.word	0x40021000
 800403c:	08007e84 	.word	0x08007e84
 8004040:	20000000 	.word	0x20000000
 8004044:	20000004 	.word	0x20000004

08004048 <HAL_RCC_GetSysClockFreq>:
 8004048:	b480      	push	{r7}
 800404a:	b087      	sub	sp, #28
 800404c:	af00      	add	r7, sp, #0
 800404e:	2300      	movs	r3, #0
 8004050:	60fb      	str	r3, [r7, #12]
 8004052:	2300      	movs	r3, #0
 8004054:	60bb      	str	r3, [r7, #8]
 8004056:	2300      	movs	r3, #0
 8004058:	617b      	str	r3, [r7, #20]
 800405a:	2300      	movs	r3, #0
 800405c:	607b      	str	r3, [r7, #4]
 800405e:	2300      	movs	r3, #0
 8004060:	613b      	str	r3, [r7, #16]
 8004062:	4b1e      	ldr	r3, [pc, #120]	@ (80040dc <HAL_RCC_GetSysClockFreq+0x94>)
 8004064:	685b      	ldr	r3, [r3, #4]
 8004066:	60fb      	str	r3, [r7, #12]
 8004068:	68fb      	ldr	r3, [r7, #12]
 800406a:	f003 030c 	and.w	r3, r3, #12
 800406e:	2b04      	cmp	r3, #4
 8004070:	d002      	beq.n	8004078 <HAL_RCC_GetSysClockFreq+0x30>
 8004072:	2b08      	cmp	r3, #8
 8004074:	d003      	beq.n	800407e <HAL_RCC_GetSysClockFreq+0x36>
 8004076:	e027      	b.n	80040c8 <HAL_RCC_GetSysClockFreq+0x80>
 8004078:	4b19      	ldr	r3, [pc, #100]	@ (80040e0 <HAL_RCC_GetSysClockFreq+0x98>)
 800407a:	613b      	str	r3, [r7, #16]
 800407c:	e027      	b.n	80040ce <HAL_RCC_GetSysClockFreq+0x86>
 800407e:	68fb      	ldr	r3, [r7, #12]
 8004080:	0c9b      	lsrs	r3, r3, #18
 8004082:	f003 030f 	and.w	r3, r3, #15
 8004086:	4a17      	ldr	r2, [pc, #92]	@ (80040e4 <HAL_RCC_GetSysClockFreq+0x9c>)
 8004088:	5cd3      	ldrb	r3, [r2, r3]
 800408a:	607b      	str	r3, [r7, #4]
 800408c:	68fb      	ldr	r3, [r7, #12]
 800408e:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004092:	2b00      	cmp	r3, #0
 8004094:	d010      	beq.n	80040b8 <HAL_RCC_GetSysClockFreq+0x70>
 8004096:	4b11      	ldr	r3, [pc, #68]	@ (80040dc <HAL_RCC_GetSysClockFreq+0x94>)
 8004098:	685b      	ldr	r3, [r3, #4]
 800409a:	0c5b      	lsrs	r3, r3, #17
 800409c:	f003 0301 	and.w	r3, r3, #1
 80040a0:	4a11      	ldr	r2, [pc, #68]	@ (80040e8 <HAL_RCC_GetSysClockFreq+0xa0>)
 80040a2:	5cd3      	ldrb	r3, [r2, r3]
 80040a4:	60bb      	str	r3, [r7, #8]
 80040a6:	687b      	ldr	r3, [r7, #4]
 80040a8:	4a0d      	ldr	r2, [pc, #52]	@ (80040e0 <HAL_RCC_GetSysClockFreq+0x98>)
 80040aa:	fb03 f202 	mul.w	r2, r3, r2
 80040ae:	68bb      	ldr	r3, [r7, #8]
 80040b0:	fbb2 f3f3 	udiv	r3, r2, r3
 80040b4:	617b      	str	r3, [r7, #20]
 80040b6:	e004      	b.n	80040c2 <HAL_RCC_GetSysClockFreq+0x7a>
 80040b8:	687b      	ldr	r3, [r7, #4]
 80040ba:	4a0c      	ldr	r2, [pc, #48]	@ (80040ec <HAL_RCC_GetSysClockFreq+0xa4>)
 80040bc:	fb02 f303 	mul.w	r3, r2, r3
 80040c0:	617b      	str	r3, [r7, #20]
 80040c2:	697b      	ldr	r3, [r7, #20]
 80040c4:	613b      	str	r3, [r7, #16]
 80040c6:	e002      	b.n	80040ce <HAL_RCC_GetSysClockFreq+0x86>
 80040c8:	4b09      	ldr	r3, [pc, #36]	@ (80040f0 <HAL_RCC_GetSysClockFreq+0xa8>)
 80040ca:	613b      	str	r3, [r7, #16]
 80040cc:	bf00      	nop
 80040ce:	693b      	ldr	r3, [r7, #16]
 80040d0:	4618      	mov	r0, r3
 80040d2:	371c      	adds	r7, #28
 80040d4:	46bd      	mov	sp, r7
 80040d6:	bc80      	pop	{r7}
 80040d8:	4770      	bx	lr
 80040da:	bf00      	nop
 80040dc:	40021000 	.word	0x40021000
 80040e0:	00f42400 	.word	0x00f42400
 80040e4:	08007e94 	.word	0x08007e94
 80040e8:	08007ea4 	.word	0x08007ea4
 80040ec:	003d0900 	.word	0x003d0900
 80040f0:	007a1200 	.word	0x007a1200

080040f4 <HAL_RCC_GetHCLKFreq>:
 80040f4:	b480      	push	{r7}
 80040f6:	af00      	add	r7, sp, #0
 80040f8:	4b02      	ldr	r3, [pc, #8]	@ (8004104 <HAL_RCC_GetHCLKFreq+0x10>)
 80040fa:	681b      	ldr	r3, [r3, #0]
 80040fc:	4618      	mov	r0, r3
 80040fe:	46bd      	mov	sp, r7
 8004100:	bc80      	pop	{r7}
 8004102:	4770      	bx	lr
 8004104:	20000000 	.word	0x20000000

08004108 <HAL_RCC_GetPCLK1Freq>:
 8004108:	b580      	push	{r7, lr}
 800410a:	af00      	add	r7, sp, #0
 800410c:	f7ff fff2 	bl	80040f4 <HAL_RCC_GetHCLKFreq>
 8004110:	4602      	mov	r2, r0
 8004112:	4b05      	ldr	r3, [pc, #20]	@ (8004128 <HAL_RCC_GetPCLK1Freq+0x20>)
 8004114:	685b      	ldr	r3, [r3, #4]
 8004116:	0a1b      	lsrs	r3, r3, #8
 8004118:	f003 0307 	and.w	r3, r3, #7
 800411c:	4903      	ldr	r1, [pc, #12]	@ (800412c <HAL_RCC_GetPCLK1Freq+0x24>)
 800411e:	5ccb      	ldrb	r3, [r1, r3]
 8004120:	fa22 f303 	lsr.w	r3, r2, r3
 8004124:	4618      	mov	r0, r3
 8004126:	bd80      	pop	{r7, pc}
 8004128:	40021000 	.word	0x40021000
 800412c:	08007e7c 	.word	0x08007e7c

08004130 <HAL_RCC_GetPCLK2Freq>:
 8004130:	b580      	push	{r7, lr}
 8004132:	af00      	add	r7, sp, #0
 8004134:	f7ff ffde 	bl	80040f4 <HAL_RCC_GetHCLKFreq>
 8004138:	4602      	mov	r2, r0
 800413a:	4b05      	ldr	r3, [pc, #20]	@ (8004150 <HAL_RCC_GetPCLK2Freq+0x20>)
 800413c:	685b      	ldr	r3, [r3, #4]
 800413e:	0adb      	lsrs	r3, r3, #11
 8004140:	f003 0307 	and.w	r3, r3, #7
 8004144:	4903      	ldr	r1, [pc, #12]	@ (8004154 <HAL_RCC_GetPCLK2Freq+0x24>)
 8004146:	5ccb      	ldrb	r3, [r1, r3]
 8004148:	fa22 f303 	lsr.w	r3, r2, r3
 800414c:	4618      	mov	r0, r3
 800414e:	bd80      	pop	{r7, pc}
 8004150:	40021000 	.word	0x40021000
 8004154:	08007e7c 	.word	0x08007e7c

08004158 <RCC_Delay>:
 8004158:	b480      	push	{r7}
 800415a:	b085      	sub	sp, #20
 800415c:	af00      	add	r7, sp, #0
 800415e:	6078      	str	r0, [r7, #4]
 8004160:	4b0a      	ldr	r3, [pc, #40]	@ (800418c <RCC_Delay+0x34>)
 8004162:	681b      	ldr	r3, [r3, #0]
 8004164:	4a0a      	ldr	r2, [pc, #40]	@ (8004190 <RCC_Delay+0x38>)
 8004166:	fba2 2303 	umull	r2, r3, r2, r3
 800416a:	0a5b      	lsrs	r3, r3, #9
 800416c:	687a      	ldr	r2, [r7, #4]
 800416e:	fb02 f303 	mul.w	r3, r2, r3
 8004172:	60fb      	str	r3, [r7, #12]
 8004174:	bf00      	nop
 8004176:	68fb      	ldr	r3, [r7, #12]
 8004178:	1e5a      	subs	r2, r3, #1
 800417a:	60fa      	str	r2, [r7, #12]
 800417c:	2b00      	cmp	r3, #0
 800417e:	d1f9      	bne.n	8004174 <RCC_Delay+0x1c>
 8004180:	bf00      	nop
 8004182:	bf00      	nop
 8004184:	3714      	adds	r7, #20
 8004186:	46bd      	mov	sp, r7
 8004188:	bc80      	pop	{r7}
 800418a:	4770      	bx	lr
 800418c:	20000000 	.word	0x20000000
 8004190:	10624dd3 	.word	0x10624dd3

08004194 <HAL_RCCEx_PeriphCLKConfig>:
 8004194:	b580      	push	{r7, lr}
 8004196:	b086      	sub	sp, #24
 8004198:	af00      	add	r7, sp, #0
 800419a:	6078      	str	r0, [r7, #4]
 800419c:	2300      	movs	r3, #0
 800419e:	613b      	str	r3, [r7, #16]
 80041a0:	2300      	movs	r3, #0
 80041a2:	60fb      	str	r3, [r7, #12]
 80041a4:	687b      	ldr	r3, [r7, #4]
 80041a6:	681b      	ldr	r3, [r3, #0]
 80041a8:	f003 0301 	and.w	r3, r3, #1
 80041ac:	2b00      	cmp	r3, #0
 80041ae:	d07d      	beq.n	80042ac <HAL_RCCEx_PeriphCLKConfig+0x118>
 80041b0:	2300      	movs	r3, #0
 80041b2:	75fb      	strb	r3, [r7, #23]
 80041b4:	4b4f      	ldr	r3, [pc, #316]	@ (80042f4 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80041b6:	69db      	ldr	r3, [r3, #28]
 80041b8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80041bc:	2b00      	cmp	r3, #0
 80041be:	d10d      	bne.n	80041dc <HAL_RCCEx_PeriphCLKConfig+0x48>
 80041c0:	4b4c      	ldr	r3, [pc, #304]	@ (80042f4 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80041c2:	69db      	ldr	r3, [r3, #28]
 80041c4:	4a4b      	ldr	r2, [pc, #300]	@ (80042f4 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80041c6:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80041ca:	61d3      	str	r3, [r2, #28]
 80041cc:	4b49      	ldr	r3, [pc, #292]	@ (80042f4 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80041ce:	69db      	ldr	r3, [r3, #28]
 80041d0:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80041d4:	60bb      	str	r3, [r7, #8]
 80041d6:	68bb      	ldr	r3, [r7, #8]
 80041d8:	2301      	movs	r3, #1
 80041da:	75fb      	strb	r3, [r7, #23]
 80041dc:	4b46      	ldr	r3, [pc, #280]	@ (80042f8 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 80041de:	681b      	ldr	r3, [r3, #0]
 80041e0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80041e4:	2b00      	cmp	r3, #0
 80041e6:	d118      	bne.n	800421a <HAL_RCCEx_PeriphCLKConfig+0x86>
 80041e8:	4b43      	ldr	r3, [pc, #268]	@ (80042f8 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 80041ea:	681b      	ldr	r3, [r3, #0]
 80041ec:	4a42      	ldr	r2, [pc, #264]	@ (80042f8 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 80041ee:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80041f2:	6013      	str	r3, [r2, #0]
 80041f4:	f7fe fc04 	bl	8002a00 <HAL_GetTick>
 80041f8:	6138      	str	r0, [r7, #16]
 80041fa:	e008      	b.n	800420e <HAL_RCCEx_PeriphCLKConfig+0x7a>
 80041fc:	f7fe fc00 	bl	8002a00 <HAL_GetTick>
 8004200:	4602      	mov	r2, r0
 8004202:	693b      	ldr	r3, [r7, #16]
 8004204:	1ad3      	subs	r3, r2, r3
 8004206:	2b64      	cmp	r3, #100	@ 0x64
 8004208:	d901      	bls.n	800420e <HAL_RCCEx_PeriphCLKConfig+0x7a>
 800420a:	2303      	movs	r3, #3
 800420c:	e06d      	b.n	80042ea <HAL_RCCEx_PeriphCLKConfig+0x156>
 800420e:	4b3a      	ldr	r3, [pc, #232]	@ (80042f8 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8004210:	681b      	ldr	r3, [r3, #0]
 8004212:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004216:	2b00      	cmp	r3, #0
 8004218:	d0f0      	beq.n	80041fc <HAL_RCCEx_PeriphCLKConfig+0x68>
 800421a:	4b36      	ldr	r3, [pc, #216]	@ (80042f4 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800421c:	6a1b      	ldr	r3, [r3, #32]
 800421e:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8004222:	60fb      	str	r3, [r7, #12]
 8004224:	68fb      	ldr	r3, [r7, #12]
 8004226:	2b00      	cmp	r3, #0
 8004228:	d02e      	beq.n	8004288 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 800422a:	687b      	ldr	r3, [r7, #4]
 800422c:	685b      	ldr	r3, [r3, #4]
 800422e:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8004232:	68fa      	ldr	r2, [r7, #12]
 8004234:	429a      	cmp	r2, r3
 8004236:	d027      	beq.n	8004288 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8004238:	4b2e      	ldr	r3, [pc, #184]	@ (80042f4 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800423a:	6a1b      	ldr	r3, [r3, #32]
 800423c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004240:	60fb      	str	r3, [r7, #12]
 8004242:	4b2e      	ldr	r3, [pc, #184]	@ (80042fc <HAL_RCCEx_PeriphCLKConfig+0x168>)
 8004244:	2201      	movs	r2, #1
 8004246:	601a      	str	r2, [r3, #0]
 8004248:	4b2c      	ldr	r3, [pc, #176]	@ (80042fc <HAL_RCCEx_PeriphCLKConfig+0x168>)
 800424a:	2200      	movs	r2, #0
 800424c:	601a      	str	r2, [r3, #0]
 800424e:	4a29      	ldr	r2, [pc, #164]	@ (80042f4 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004250:	68fb      	ldr	r3, [r7, #12]
 8004252:	6213      	str	r3, [r2, #32]
 8004254:	68fb      	ldr	r3, [r7, #12]
 8004256:	f003 0301 	and.w	r3, r3, #1
 800425a:	2b00      	cmp	r3, #0
 800425c:	d014      	beq.n	8004288 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 800425e:	f7fe fbcf 	bl	8002a00 <HAL_GetTick>
 8004262:	6138      	str	r0, [r7, #16]
 8004264:	e00a      	b.n	800427c <HAL_RCCEx_PeriphCLKConfig+0xe8>
 8004266:	f7fe fbcb 	bl	8002a00 <HAL_GetTick>
 800426a:	4602      	mov	r2, r0
 800426c:	693b      	ldr	r3, [r7, #16]
 800426e:	1ad3      	subs	r3, r2, r3
 8004270:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004274:	4293      	cmp	r3, r2
 8004276:	d901      	bls.n	800427c <HAL_RCCEx_PeriphCLKConfig+0xe8>
 8004278:	2303      	movs	r3, #3
 800427a:	e036      	b.n	80042ea <HAL_RCCEx_PeriphCLKConfig+0x156>
 800427c:	4b1d      	ldr	r3, [pc, #116]	@ (80042f4 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800427e:	6a1b      	ldr	r3, [r3, #32]
 8004280:	f003 0302 	and.w	r3, r3, #2
 8004284:	2b00      	cmp	r3, #0
 8004286:	d0ee      	beq.n	8004266 <HAL_RCCEx_PeriphCLKConfig+0xd2>
 8004288:	4b1a      	ldr	r3, [pc, #104]	@ (80042f4 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800428a:	6a1b      	ldr	r3, [r3, #32]
 800428c:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8004290:	687b      	ldr	r3, [r7, #4]
 8004292:	685b      	ldr	r3, [r3, #4]
 8004294:	4917      	ldr	r1, [pc, #92]	@ (80042f4 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004296:	4313      	orrs	r3, r2
 8004298:	620b      	str	r3, [r1, #32]
 800429a:	7dfb      	ldrb	r3, [r7, #23]
 800429c:	2b01      	cmp	r3, #1
 800429e:	d105      	bne.n	80042ac <HAL_RCCEx_PeriphCLKConfig+0x118>
 80042a0:	4b14      	ldr	r3, [pc, #80]	@ (80042f4 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80042a2:	69db      	ldr	r3, [r3, #28]
 80042a4:	4a13      	ldr	r2, [pc, #76]	@ (80042f4 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80042a6:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80042aa:	61d3      	str	r3, [r2, #28]
 80042ac:	687b      	ldr	r3, [r7, #4]
 80042ae:	681b      	ldr	r3, [r3, #0]
 80042b0:	f003 0302 	and.w	r3, r3, #2
 80042b4:	2b00      	cmp	r3, #0
 80042b6:	d008      	beq.n	80042ca <HAL_RCCEx_PeriphCLKConfig+0x136>
 80042b8:	4b0e      	ldr	r3, [pc, #56]	@ (80042f4 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80042ba:	685b      	ldr	r3, [r3, #4]
 80042bc:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 80042c0:	687b      	ldr	r3, [r7, #4]
 80042c2:	689b      	ldr	r3, [r3, #8]
 80042c4:	490b      	ldr	r1, [pc, #44]	@ (80042f4 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80042c6:	4313      	orrs	r3, r2
 80042c8:	604b      	str	r3, [r1, #4]
 80042ca:	687b      	ldr	r3, [r7, #4]
 80042cc:	681b      	ldr	r3, [r3, #0]
 80042ce:	f003 0310 	and.w	r3, r3, #16
 80042d2:	2b00      	cmp	r3, #0
 80042d4:	d008      	beq.n	80042e8 <HAL_RCCEx_PeriphCLKConfig+0x154>
 80042d6:	4b07      	ldr	r3, [pc, #28]	@ (80042f4 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80042d8:	685b      	ldr	r3, [r3, #4]
 80042da:	f423 0280 	bic.w	r2, r3, #4194304	@ 0x400000
 80042de:	687b      	ldr	r3, [r7, #4]
 80042e0:	68db      	ldr	r3, [r3, #12]
 80042e2:	4904      	ldr	r1, [pc, #16]	@ (80042f4 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80042e4:	4313      	orrs	r3, r2
 80042e6:	604b      	str	r3, [r1, #4]
 80042e8:	2300      	movs	r3, #0
 80042ea:	4618      	mov	r0, r3
 80042ec:	3718      	adds	r7, #24
 80042ee:	46bd      	mov	sp, r7
 80042f0:	bd80      	pop	{r7, pc}
 80042f2:	bf00      	nop
 80042f4:	40021000 	.word	0x40021000
 80042f8:	40007000 	.word	0x40007000
 80042fc:	42420440 	.word	0x42420440

08004300 <HAL_RCCEx_GetPeriphCLKFreq>:
 8004300:	b580      	push	{r7, lr}
 8004302:	b088      	sub	sp, #32
 8004304:	af00      	add	r7, sp, #0
 8004306:	6078      	str	r0, [r7, #4]
 8004308:	2300      	movs	r3, #0
 800430a:	617b      	str	r3, [r7, #20]
 800430c:	2300      	movs	r3, #0
 800430e:	61fb      	str	r3, [r7, #28]
 8004310:	2300      	movs	r3, #0
 8004312:	613b      	str	r3, [r7, #16]
 8004314:	2300      	movs	r3, #0
 8004316:	60fb      	str	r3, [r7, #12]
 8004318:	2300      	movs	r3, #0
 800431a:	61bb      	str	r3, [r7, #24]
 800431c:	687b      	ldr	r3, [r7, #4]
 800431e:	2b10      	cmp	r3, #16
 8004320:	d00a      	beq.n	8004338 <HAL_RCCEx_GetPeriphCLKFreq+0x38>
 8004322:	687b      	ldr	r3, [r7, #4]
 8004324:	2b10      	cmp	r3, #16
 8004326:	f200 8089 	bhi.w	800443c <HAL_RCCEx_GetPeriphCLKFreq+0x13c>
 800432a:	687b      	ldr	r3, [r7, #4]
 800432c:	2b01      	cmp	r3, #1
 800432e:	d045      	beq.n	80043bc <HAL_RCCEx_GetPeriphCLKFreq+0xbc>
 8004330:	687b      	ldr	r3, [r7, #4]
 8004332:	2b02      	cmp	r3, #2
 8004334:	d074      	beq.n	8004420 <HAL_RCCEx_GetPeriphCLKFreq+0x120>
 8004336:	e081      	b.n	800443c <HAL_RCCEx_GetPeriphCLKFreq+0x13c>
 8004338:	4b45      	ldr	r3, [pc, #276]	@ (8004450 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 800433a:	685b      	ldr	r3, [r3, #4]
 800433c:	60fb      	str	r3, [r7, #12]
 800433e:	4b44      	ldr	r3, [pc, #272]	@ (8004450 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 8004340:	681b      	ldr	r3, [r3, #0]
 8004342:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8004346:	2b00      	cmp	r3, #0
 8004348:	d07a      	beq.n	8004440 <HAL_RCCEx_GetPeriphCLKFreq+0x140>
 800434a:	68fb      	ldr	r3, [r7, #12]
 800434c:	0c9b      	lsrs	r3, r3, #18
 800434e:	f003 030f 	and.w	r3, r3, #15
 8004352:	4a40      	ldr	r2, [pc, #256]	@ (8004454 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8004354:	5cd3      	ldrb	r3, [r2, r3]
 8004356:	613b      	str	r3, [r7, #16]
 8004358:	68fb      	ldr	r3, [r7, #12]
 800435a:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800435e:	2b00      	cmp	r3, #0
 8004360:	d015      	beq.n	800438e <HAL_RCCEx_GetPeriphCLKFreq+0x8e>
 8004362:	4b3b      	ldr	r3, [pc, #236]	@ (8004450 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 8004364:	685b      	ldr	r3, [r3, #4]
 8004366:	0c5b      	lsrs	r3, r3, #17
 8004368:	f003 0301 	and.w	r3, r3, #1
 800436c:	4a3a      	ldr	r2, [pc, #232]	@ (8004458 <HAL_RCCEx_GetPeriphCLKFreq+0x158>)
 800436e:	5cd3      	ldrb	r3, [r2, r3]
 8004370:	617b      	str	r3, [r7, #20]
 8004372:	68fb      	ldr	r3, [r7, #12]
 8004374:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004378:	2b00      	cmp	r3, #0
 800437a:	d00d      	beq.n	8004398 <HAL_RCCEx_GetPeriphCLKFreq+0x98>
 800437c:	4a37      	ldr	r2, [pc, #220]	@ (800445c <HAL_RCCEx_GetPeriphCLKFreq+0x15c>)
 800437e:	697b      	ldr	r3, [r7, #20]
 8004380:	fbb2 f2f3 	udiv	r2, r2, r3
 8004384:	693b      	ldr	r3, [r7, #16]
 8004386:	fb02 f303 	mul.w	r3, r2, r3
 800438a:	61fb      	str	r3, [r7, #28]
 800438c:	e004      	b.n	8004398 <HAL_RCCEx_GetPeriphCLKFreq+0x98>
 800438e:	693b      	ldr	r3, [r7, #16]
 8004390:	4a33      	ldr	r2, [pc, #204]	@ (8004460 <HAL_RCCEx_GetPeriphCLKFreq+0x160>)
 8004392:	fb02 f303 	mul.w	r3, r2, r3
 8004396:	61fb      	str	r3, [r7, #28]
 8004398:	4b2d      	ldr	r3, [pc, #180]	@ (8004450 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 800439a:	685b      	ldr	r3, [r3, #4]
 800439c:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80043a0:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80043a4:	d102      	bne.n	80043ac <HAL_RCCEx_GetPeriphCLKFreq+0xac>
 80043a6:	69fb      	ldr	r3, [r7, #28]
 80043a8:	61bb      	str	r3, [r7, #24]
 80043aa:	e049      	b.n	8004440 <HAL_RCCEx_GetPeriphCLKFreq+0x140>
 80043ac:	69fb      	ldr	r3, [r7, #28]
 80043ae:	005b      	lsls	r3, r3, #1
 80043b0:	4a2c      	ldr	r2, [pc, #176]	@ (8004464 <HAL_RCCEx_GetPeriphCLKFreq+0x164>)
 80043b2:	fba2 2303 	umull	r2, r3, r2, r3
 80043b6:	085b      	lsrs	r3, r3, #1
 80043b8:	61bb      	str	r3, [r7, #24]
 80043ba:	e041      	b.n	8004440 <HAL_RCCEx_GetPeriphCLKFreq+0x140>
 80043bc:	4b24      	ldr	r3, [pc, #144]	@ (8004450 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 80043be:	6a1b      	ldr	r3, [r3, #32]
 80043c0:	60fb      	str	r3, [r7, #12]
 80043c2:	68fb      	ldr	r3, [r7, #12]
 80043c4:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80043c8:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80043cc:	d108      	bne.n	80043e0 <HAL_RCCEx_GetPeriphCLKFreq+0xe0>
 80043ce:	68fb      	ldr	r3, [r7, #12]
 80043d0:	f003 0302 	and.w	r3, r3, #2
 80043d4:	2b00      	cmp	r3, #0
 80043d6:	d003      	beq.n	80043e0 <HAL_RCCEx_GetPeriphCLKFreq+0xe0>
 80043d8:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80043dc:	61bb      	str	r3, [r7, #24]
 80043de:	e01e      	b.n	800441e <HAL_RCCEx_GetPeriphCLKFreq+0x11e>
 80043e0:	68fb      	ldr	r3, [r7, #12]
 80043e2:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80043e6:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80043ea:	d109      	bne.n	8004400 <HAL_RCCEx_GetPeriphCLKFreq+0x100>
 80043ec:	4b18      	ldr	r3, [pc, #96]	@ (8004450 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 80043ee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80043f0:	f003 0302 	and.w	r3, r3, #2
 80043f4:	2b00      	cmp	r3, #0
 80043f6:	d003      	beq.n	8004400 <HAL_RCCEx_GetPeriphCLKFreq+0x100>
 80043f8:	f649 4340 	movw	r3, #40000	@ 0x9c40
 80043fc:	61bb      	str	r3, [r7, #24]
 80043fe:	e00e      	b.n	800441e <HAL_RCCEx_GetPeriphCLKFreq+0x11e>
 8004400:	68fb      	ldr	r3, [r7, #12]
 8004402:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8004406:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800440a:	d11b      	bne.n	8004444 <HAL_RCCEx_GetPeriphCLKFreq+0x144>
 800440c:	4b10      	ldr	r3, [pc, #64]	@ (8004450 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 800440e:	681b      	ldr	r3, [r3, #0]
 8004410:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004414:	2b00      	cmp	r3, #0
 8004416:	d015      	beq.n	8004444 <HAL_RCCEx_GetPeriphCLKFreq+0x144>
 8004418:	4b13      	ldr	r3, [pc, #76]	@ (8004468 <HAL_RCCEx_GetPeriphCLKFreq+0x168>)
 800441a:	61bb      	str	r3, [r7, #24]
 800441c:	e012      	b.n	8004444 <HAL_RCCEx_GetPeriphCLKFreq+0x144>
 800441e:	e011      	b.n	8004444 <HAL_RCCEx_GetPeriphCLKFreq+0x144>
 8004420:	f7ff fe86 	bl	8004130 <HAL_RCC_GetPCLK2Freq>
 8004424:	4602      	mov	r2, r0
 8004426:	4b0a      	ldr	r3, [pc, #40]	@ (8004450 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 8004428:	685b      	ldr	r3, [r3, #4]
 800442a:	0b9b      	lsrs	r3, r3, #14
 800442c:	f003 0303 	and.w	r3, r3, #3
 8004430:	3301      	adds	r3, #1
 8004432:	005b      	lsls	r3, r3, #1
 8004434:	fbb2 f3f3 	udiv	r3, r2, r3
 8004438:	61bb      	str	r3, [r7, #24]
 800443a:	e004      	b.n	8004446 <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 800443c:	bf00      	nop
 800443e:	e002      	b.n	8004446 <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 8004440:	bf00      	nop
 8004442:	e000      	b.n	8004446 <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 8004444:	bf00      	nop
 8004446:	69bb      	ldr	r3, [r7, #24]
 8004448:	4618      	mov	r0, r3
 800444a:	3720      	adds	r7, #32
 800444c:	46bd      	mov	sp, r7
 800444e:	bd80      	pop	{r7, pc}
 8004450:	40021000 	.word	0x40021000
 8004454:	08007ea8 	.word	0x08007ea8
 8004458:	08007eb8 	.word	0x08007eb8
 800445c:	00f42400 	.word	0x00f42400
 8004460:	003d0900 	.word	0x003d0900
 8004464:	aaaaaaab 	.word	0xaaaaaaab
 8004468:	0001e848 	.word	0x0001e848

0800446c <HAL_TIM_Base_Init>:
 800446c:	b580      	push	{r7, lr}
 800446e:	b082      	sub	sp, #8
 8004470:	af00      	add	r7, sp, #0
 8004472:	6078      	str	r0, [r7, #4]
 8004474:	687b      	ldr	r3, [r7, #4]
 8004476:	2b00      	cmp	r3, #0
 8004478:	d101      	bne.n	800447e <HAL_TIM_Base_Init+0x12>
 800447a:	2301      	movs	r3, #1
 800447c:	e041      	b.n	8004502 <HAL_TIM_Base_Init+0x96>
 800447e:	687b      	ldr	r3, [r7, #4]
 8004480:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004484:	b2db      	uxtb	r3, r3
 8004486:	2b00      	cmp	r3, #0
 8004488:	d106      	bne.n	8004498 <HAL_TIM_Base_Init+0x2c>
 800448a:	687b      	ldr	r3, [r7, #4]
 800448c:	2200      	movs	r2, #0
 800448e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004492:	6878      	ldr	r0, [r7, #4]
 8004494:	f7fe f8ea 	bl	800266c <HAL_TIM_Base_MspInit>
 8004498:	687b      	ldr	r3, [r7, #4]
 800449a:	2202      	movs	r2, #2
 800449c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80044a0:	687b      	ldr	r3, [r7, #4]
 80044a2:	681a      	ldr	r2, [r3, #0]
 80044a4:	687b      	ldr	r3, [r7, #4]
 80044a6:	3304      	adds	r3, #4
 80044a8:	4619      	mov	r1, r3
 80044aa:	4610      	mov	r0, r2
 80044ac:	f000 fa10 	bl	80048d0 <TIM_Base_SetConfig>
 80044b0:	687b      	ldr	r3, [r7, #4]
 80044b2:	2201      	movs	r2, #1
 80044b4:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80044b8:	687b      	ldr	r3, [r7, #4]
 80044ba:	2201      	movs	r2, #1
 80044bc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80044c0:	687b      	ldr	r3, [r7, #4]
 80044c2:	2201      	movs	r2, #1
 80044c4:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80044c8:	687b      	ldr	r3, [r7, #4]
 80044ca:	2201      	movs	r2, #1
 80044cc:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80044d0:	687b      	ldr	r3, [r7, #4]
 80044d2:	2201      	movs	r2, #1
 80044d4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80044d8:	687b      	ldr	r3, [r7, #4]
 80044da:	2201      	movs	r2, #1
 80044dc:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80044e0:	687b      	ldr	r3, [r7, #4]
 80044e2:	2201      	movs	r2, #1
 80044e4:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80044e8:	687b      	ldr	r3, [r7, #4]
 80044ea:	2201      	movs	r2, #1
 80044ec:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80044f0:	687b      	ldr	r3, [r7, #4]
 80044f2:	2201      	movs	r2, #1
 80044f4:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80044f8:	687b      	ldr	r3, [r7, #4]
 80044fa:	2201      	movs	r2, #1
 80044fc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004500:	2300      	movs	r3, #0
 8004502:	4618      	mov	r0, r3
 8004504:	3708      	adds	r7, #8
 8004506:	46bd      	mov	sp, r7
 8004508:	bd80      	pop	{r7, pc}

0800450a <HAL_TIM_PWM_Init>:
 800450a:	b580      	push	{r7, lr}
 800450c:	b082      	sub	sp, #8
 800450e:	af00      	add	r7, sp, #0
 8004510:	6078      	str	r0, [r7, #4]
 8004512:	687b      	ldr	r3, [r7, #4]
 8004514:	2b00      	cmp	r3, #0
 8004516:	d101      	bne.n	800451c <HAL_TIM_PWM_Init+0x12>
 8004518:	2301      	movs	r3, #1
 800451a:	e041      	b.n	80045a0 <HAL_TIM_PWM_Init+0x96>
 800451c:	687b      	ldr	r3, [r7, #4]
 800451e:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004522:	b2db      	uxtb	r3, r3
 8004524:	2b00      	cmp	r3, #0
 8004526:	d106      	bne.n	8004536 <HAL_TIM_PWM_Init+0x2c>
 8004528:	687b      	ldr	r3, [r7, #4]
 800452a:	2200      	movs	r2, #0
 800452c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004530:	6878      	ldr	r0, [r7, #4]
 8004532:	f000 f839 	bl	80045a8 <HAL_TIM_PWM_MspInit>
 8004536:	687b      	ldr	r3, [r7, #4]
 8004538:	2202      	movs	r2, #2
 800453a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800453e:	687b      	ldr	r3, [r7, #4]
 8004540:	681a      	ldr	r2, [r3, #0]
 8004542:	687b      	ldr	r3, [r7, #4]
 8004544:	3304      	adds	r3, #4
 8004546:	4619      	mov	r1, r3
 8004548:	4610      	mov	r0, r2
 800454a:	f000 f9c1 	bl	80048d0 <TIM_Base_SetConfig>
 800454e:	687b      	ldr	r3, [r7, #4]
 8004550:	2201      	movs	r2, #1
 8004552:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8004556:	687b      	ldr	r3, [r7, #4]
 8004558:	2201      	movs	r2, #1
 800455a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800455e:	687b      	ldr	r3, [r7, #4]
 8004560:	2201      	movs	r2, #1
 8004562:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004566:	687b      	ldr	r3, [r7, #4]
 8004568:	2201      	movs	r2, #1
 800456a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800456e:	687b      	ldr	r3, [r7, #4]
 8004570:	2201      	movs	r2, #1
 8004572:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004576:	687b      	ldr	r3, [r7, #4]
 8004578:	2201      	movs	r2, #1
 800457a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800457e:	687b      	ldr	r3, [r7, #4]
 8004580:	2201      	movs	r2, #1
 8004582:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8004586:	687b      	ldr	r3, [r7, #4]
 8004588:	2201      	movs	r2, #1
 800458a:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800458e:	687b      	ldr	r3, [r7, #4]
 8004590:	2201      	movs	r2, #1
 8004592:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8004596:	687b      	ldr	r3, [r7, #4]
 8004598:	2201      	movs	r2, #1
 800459a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800459e:	2300      	movs	r3, #0
 80045a0:	4618      	mov	r0, r3
 80045a2:	3708      	adds	r7, #8
 80045a4:	46bd      	mov	sp, r7
 80045a6:	bd80      	pop	{r7, pc}

080045a8 <HAL_TIM_PWM_MspInit>:
 80045a8:	b480      	push	{r7}
 80045aa:	b083      	sub	sp, #12
 80045ac:	af00      	add	r7, sp, #0
 80045ae:	6078      	str	r0, [r7, #4]
 80045b0:	bf00      	nop
 80045b2:	370c      	adds	r7, #12
 80045b4:	46bd      	mov	sp, r7
 80045b6:	bc80      	pop	{r7}
 80045b8:	4770      	bx	lr
	...

080045bc <HAL_TIM_PWM_ConfigChannel>:
 80045bc:	b580      	push	{r7, lr}
 80045be:	b086      	sub	sp, #24
 80045c0:	af00      	add	r7, sp, #0
 80045c2:	60f8      	str	r0, [r7, #12]
 80045c4:	60b9      	str	r1, [r7, #8]
 80045c6:	607a      	str	r2, [r7, #4]
 80045c8:	2300      	movs	r3, #0
 80045ca:	75fb      	strb	r3, [r7, #23]
 80045cc:	68fb      	ldr	r3, [r7, #12]
 80045ce:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80045d2:	2b01      	cmp	r3, #1
 80045d4:	d101      	bne.n	80045da <HAL_TIM_PWM_ConfigChannel+0x1e>
 80045d6:	2302      	movs	r3, #2
 80045d8:	e0ae      	b.n	8004738 <HAL_TIM_PWM_ConfigChannel+0x17c>
 80045da:	68fb      	ldr	r3, [r7, #12]
 80045dc:	2201      	movs	r2, #1
 80045de:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80045e2:	687b      	ldr	r3, [r7, #4]
 80045e4:	2b0c      	cmp	r3, #12
 80045e6:	f200 809f 	bhi.w	8004728 <HAL_TIM_PWM_ConfigChannel+0x16c>
 80045ea:	a201      	add	r2, pc, #4	@ (adr r2, 80045f0 <HAL_TIM_PWM_ConfigChannel+0x34>)
 80045ec:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80045f0:	08004625 	.word	0x08004625
 80045f4:	08004729 	.word	0x08004729
 80045f8:	08004729 	.word	0x08004729
 80045fc:	08004729 	.word	0x08004729
 8004600:	08004665 	.word	0x08004665
 8004604:	08004729 	.word	0x08004729
 8004608:	08004729 	.word	0x08004729
 800460c:	08004729 	.word	0x08004729
 8004610:	080046a7 	.word	0x080046a7
 8004614:	08004729 	.word	0x08004729
 8004618:	08004729 	.word	0x08004729
 800461c:	08004729 	.word	0x08004729
 8004620:	080046e7 	.word	0x080046e7
 8004624:	68fb      	ldr	r3, [r7, #12]
 8004626:	681b      	ldr	r3, [r3, #0]
 8004628:	68b9      	ldr	r1, [r7, #8]
 800462a:	4618      	mov	r0, r3
 800462c:	f000 f9b2 	bl	8004994 <TIM_OC1_SetConfig>
 8004630:	68fb      	ldr	r3, [r7, #12]
 8004632:	681b      	ldr	r3, [r3, #0]
 8004634:	699a      	ldr	r2, [r3, #24]
 8004636:	68fb      	ldr	r3, [r7, #12]
 8004638:	681b      	ldr	r3, [r3, #0]
 800463a:	f042 0208 	orr.w	r2, r2, #8
 800463e:	619a      	str	r2, [r3, #24]
 8004640:	68fb      	ldr	r3, [r7, #12]
 8004642:	681b      	ldr	r3, [r3, #0]
 8004644:	699a      	ldr	r2, [r3, #24]
 8004646:	68fb      	ldr	r3, [r7, #12]
 8004648:	681b      	ldr	r3, [r3, #0]
 800464a:	f022 0204 	bic.w	r2, r2, #4
 800464e:	619a      	str	r2, [r3, #24]
 8004650:	68fb      	ldr	r3, [r7, #12]
 8004652:	681b      	ldr	r3, [r3, #0]
 8004654:	6999      	ldr	r1, [r3, #24]
 8004656:	68bb      	ldr	r3, [r7, #8]
 8004658:	691a      	ldr	r2, [r3, #16]
 800465a:	68fb      	ldr	r3, [r7, #12]
 800465c:	681b      	ldr	r3, [r3, #0]
 800465e:	430a      	orrs	r2, r1
 8004660:	619a      	str	r2, [r3, #24]
 8004662:	e064      	b.n	800472e <HAL_TIM_PWM_ConfigChannel+0x172>
 8004664:	68fb      	ldr	r3, [r7, #12]
 8004666:	681b      	ldr	r3, [r3, #0]
 8004668:	68b9      	ldr	r1, [r7, #8]
 800466a:	4618      	mov	r0, r3
 800466c:	f000 f9f8 	bl	8004a60 <TIM_OC2_SetConfig>
 8004670:	68fb      	ldr	r3, [r7, #12]
 8004672:	681b      	ldr	r3, [r3, #0]
 8004674:	699a      	ldr	r2, [r3, #24]
 8004676:	68fb      	ldr	r3, [r7, #12]
 8004678:	681b      	ldr	r3, [r3, #0]
 800467a:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800467e:	619a      	str	r2, [r3, #24]
 8004680:	68fb      	ldr	r3, [r7, #12]
 8004682:	681b      	ldr	r3, [r3, #0]
 8004684:	699a      	ldr	r2, [r3, #24]
 8004686:	68fb      	ldr	r3, [r7, #12]
 8004688:	681b      	ldr	r3, [r3, #0]
 800468a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800468e:	619a      	str	r2, [r3, #24]
 8004690:	68fb      	ldr	r3, [r7, #12]
 8004692:	681b      	ldr	r3, [r3, #0]
 8004694:	6999      	ldr	r1, [r3, #24]
 8004696:	68bb      	ldr	r3, [r7, #8]
 8004698:	691b      	ldr	r3, [r3, #16]
 800469a:	021a      	lsls	r2, r3, #8
 800469c:	68fb      	ldr	r3, [r7, #12]
 800469e:	681b      	ldr	r3, [r3, #0]
 80046a0:	430a      	orrs	r2, r1
 80046a2:	619a      	str	r2, [r3, #24]
 80046a4:	e043      	b.n	800472e <HAL_TIM_PWM_ConfigChannel+0x172>
 80046a6:	68fb      	ldr	r3, [r7, #12]
 80046a8:	681b      	ldr	r3, [r3, #0]
 80046aa:	68b9      	ldr	r1, [r7, #8]
 80046ac:	4618      	mov	r0, r3
 80046ae:	f000 fa41 	bl	8004b34 <TIM_OC3_SetConfig>
 80046b2:	68fb      	ldr	r3, [r7, #12]
 80046b4:	681b      	ldr	r3, [r3, #0]
 80046b6:	69da      	ldr	r2, [r3, #28]
 80046b8:	68fb      	ldr	r3, [r7, #12]
 80046ba:	681b      	ldr	r3, [r3, #0]
 80046bc:	f042 0208 	orr.w	r2, r2, #8
 80046c0:	61da      	str	r2, [r3, #28]
 80046c2:	68fb      	ldr	r3, [r7, #12]
 80046c4:	681b      	ldr	r3, [r3, #0]
 80046c6:	69da      	ldr	r2, [r3, #28]
 80046c8:	68fb      	ldr	r3, [r7, #12]
 80046ca:	681b      	ldr	r3, [r3, #0]
 80046cc:	f022 0204 	bic.w	r2, r2, #4
 80046d0:	61da      	str	r2, [r3, #28]
 80046d2:	68fb      	ldr	r3, [r7, #12]
 80046d4:	681b      	ldr	r3, [r3, #0]
 80046d6:	69d9      	ldr	r1, [r3, #28]
 80046d8:	68bb      	ldr	r3, [r7, #8]
 80046da:	691a      	ldr	r2, [r3, #16]
 80046dc:	68fb      	ldr	r3, [r7, #12]
 80046de:	681b      	ldr	r3, [r3, #0]
 80046e0:	430a      	orrs	r2, r1
 80046e2:	61da      	str	r2, [r3, #28]
 80046e4:	e023      	b.n	800472e <HAL_TIM_PWM_ConfigChannel+0x172>
 80046e6:	68fb      	ldr	r3, [r7, #12]
 80046e8:	681b      	ldr	r3, [r3, #0]
 80046ea:	68b9      	ldr	r1, [r7, #8]
 80046ec:	4618      	mov	r0, r3
 80046ee:	f000 fa8b 	bl	8004c08 <TIM_OC4_SetConfig>
 80046f2:	68fb      	ldr	r3, [r7, #12]
 80046f4:	681b      	ldr	r3, [r3, #0]
 80046f6:	69da      	ldr	r2, [r3, #28]
 80046f8:	68fb      	ldr	r3, [r7, #12]
 80046fa:	681b      	ldr	r3, [r3, #0]
 80046fc:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004700:	61da      	str	r2, [r3, #28]
 8004702:	68fb      	ldr	r3, [r7, #12]
 8004704:	681b      	ldr	r3, [r3, #0]
 8004706:	69da      	ldr	r2, [r3, #28]
 8004708:	68fb      	ldr	r3, [r7, #12]
 800470a:	681b      	ldr	r3, [r3, #0]
 800470c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004710:	61da      	str	r2, [r3, #28]
 8004712:	68fb      	ldr	r3, [r7, #12]
 8004714:	681b      	ldr	r3, [r3, #0]
 8004716:	69d9      	ldr	r1, [r3, #28]
 8004718:	68bb      	ldr	r3, [r7, #8]
 800471a:	691b      	ldr	r3, [r3, #16]
 800471c:	021a      	lsls	r2, r3, #8
 800471e:	68fb      	ldr	r3, [r7, #12]
 8004720:	681b      	ldr	r3, [r3, #0]
 8004722:	430a      	orrs	r2, r1
 8004724:	61da      	str	r2, [r3, #28]
 8004726:	e002      	b.n	800472e <HAL_TIM_PWM_ConfigChannel+0x172>
 8004728:	2301      	movs	r3, #1
 800472a:	75fb      	strb	r3, [r7, #23]
 800472c:	bf00      	nop
 800472e:	68fb      	ldr	r3, [r7, #12]
 8004730:	2200      	movs	r2, #0
 8004732:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004736:	7dfb      	ldrb	r3, [r7, #23]
 8004738:	4618      	mov	r0, r3
 800473a:	3718      	adds	r7, #24
 800473c:	46bd      	mov	sp, r7
 800473e:	bd80      	pop	{r7, pc}

08004740 <HAL_TIM_ConfigClockSource>:
 8004740:	b580      	push	{r7, lr}
 8004742:	b084      	sub	sp, #16
 8004744:	af00      	add	r7, sp, #0
 8004746:	6078      	str	r0, [r7, #4]
 8004748:	6039      	str	r1, [r7, #0]
 800474a:	2300      	movs	r3, #0
 800474c:	73fb      	strb	r3, [r7, #15]
 800474e:	687b      	ldr	r3, [r7, #4]
 8004750:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004754:	2b01      	cmp	r3, #1
 8004756:	d101      	bne.n	800475c <HAL_TIM_ConfigClockSource+0x1c>
 8004758:	2302      	movs	r3, #2
 800475a:	e0b4      	b.n	80048c6 <HAL_TIM_ConfigClockSource+0x186>
 800475c:	687b      	ldr	r3, [r7, #4]
 800475e:	2201      	movs	r2, #1
 8004760:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004764:	687b      	ldr	r3, [r7, #4]
 8004766:	2202      	movs	r2, #2
 8004768:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800476c:	687b      	ldr	r3, [r7, #4]
 800476e:	681b      	ldr	r3, [r3, #0]
 8004770:	689b      	ldr	r3, [r3, #8]
 8004772:	60bb      	str	r3, [r7, #8]
 8004774:	68bb      	ldr	r3, [r7, #8]
 8004776:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 800477a:	60bb      	str	r3, [r7, #8]
 800477c:	68bb      	ldr	r3, [r7, #8]
 800477e:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8004782:	60bb      	str	r3, [r7, #8]
 8004784:	687b      	ldr	r3, [r7, #4]
 8004786:	681b      	ldr	r3, [r3, #0]
 8004788:	68ba      	ldr	r2, [r7, #8]
 800478a:	609a      	str	r2, [r3, #8]
 800478c:	683b      	ldr	r3, [r7, #0]
 800478e:	681b      	ldr	r3, [r3, #0]
 8004790:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8004794:	d03e      	beq.n	8004814 <HAL_TIM_ConfigClockSource+0xd4>
 8004796:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800479a:	f200 8087 	bhi.w	80048ac <HAL_TIM_ConfigClockSource+0x16c>
 800479e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80047a2:	f000 8086 	beq.w	80048b2 <HAL_TIM_ConfigClockSource+0x172>
 80047a6:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80047aa:	d87f      	bhi.n	80048ac <HAL_TIM_ConfigClockSource+0x16c>
 80047ac:	2b70      	cmp	r3, #112	@ 0x70
 80047ae:	d01a      	beq.n	80047e6 <HAL_TIM_ConfigClockSource+0xa6>
 80047b0:	2b70      	cmp	r3, #112	@ 0x70
 80047b2:	d87b      	bhi.n	80048ac <HAL_TIM_ConfigClockSource+0x16c>
 80047b4:	2b60      	cmp	r3, #96	@ 0x60
 80047b6:	d050      	beq.n	800485a <HAL_TIM_ConfigClockSource+0x11a>
 80047b8:	2b60      	cmp	r3, #96	@ 0x60
 80047ba:	d877      	bhi.n	80048ac <HAL_TIM_ConfigClockSource+0x16c>
 80047bc:	2b50      	cmp	r3, #80	@ 0x50
 80047be:	d03c      	beq.n	800483a <HAL_TIM_ConfigClockSource+0xfa>
 80047c0:	2b50      	cmp	r3, #80	@ 0x50
 80047c2:	d873      	bhi.n	80048ac <HAL_TIM_ConfigClockSource+0x16c>
 80047c4:	2b40      	cmp	r3, #64	@ 0x40
 80047c6:	d058      	beq.n	800487a <HAL_TIM_ConfigClockSource+0x13a>
 80047c8:	2b40      	cmp	r3, #64	@ 0x40
 80047ca:	d86f      	bhi.n	80048ac <HAL_TIM_ConfigClockSource+0x16c>
 80047cc:	2b30      	cmp	r3, #48	@ 0x30
 80047ce:	d064      	beq.n	800489a <HAL_TIM_ConfigClockSource+0x15a>
 80047d0:	2b30      	cmp	r3, #48	@ 0x30
 80047d2:	d86b      	bhi.n	80048ac <HAL_TIM_ConfigClockSource+0x16c>
 80047d4:	2b20      	cmp	r3, #32
 80047d6:	d060      	beq.n	800489a <HAL_TIM_ConfigClockSource+0x15a>
 80047d8:	2b20      	cmp	r3, #32
 80047da:	d867      	bhi.n	80048ac <HAL_TIM_ConfigClockSource+0x16c>
 80047dc:	2b00      	cmp	r3, #0
 80047de:	d05c      	beq.n	800489a <HAL_TIM_ConfigClockSource+0x15a>
 80047e0:	2b10      	cmp	r3, #16
 80047e2:	d05a      	beq.n	800489a <HAL_TIM_ConfigClockSource+0x15a>
 80047e4:	e062      	b.n	80048ac <HAL_TIM_ConfigClockSource+0x16c>
 80047e6:	687b      	ldr	r3, [r7, #4]
 80047e8:	6818      	ldr	r0, [r3, #0]
 80047ea:	683b      	ldr	r3, [r7, #0]
 80047ec:	6899      	ldr	r1, [r3, #8]
 80047ee:	683b      	ldr	r3, [r7, #0]
 80047f0:	685a      	ldr	r2, [r3, #4]
 80047f2:	683b      	ldr	r3, [r7, #0]
 80047f4:	68db      	ldr	r3, [r3, #12]
 80047f6:	f000 facc 	bl	8004d92 <TIM_ETR_SetConfig>
 80047fa:	687b      	ldr	r3, [r7, #4]
 80047fc:	681b      	ldr	r3, [r3, #0]
 80047fe:	689b      	ldr	r3, [r3, #8]
 8004800:	60bb      	str	r3, [r7, #8]
 8004802:	68bb      	ldr	r3, [r7, #8]
 8004804:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8004808:	60bb      	str	r3, [r7, #8]
 800480a:	687b      	ldr	r3, [r7, #4]
 800480c:	681b      	ldr	r3, [r3, #0]
 800480e:	68ba      	ldr	r2, [r7, #8]
 8004810:	609a      	str	r2, [r3, #8]
 8004812:	e04f      	b.n	80048b4 <HAL_TIM_ConfigClockSource+0x174>
 8004814:	687b      	ldr	r3, [r7, #4]
 8004816:	6818      	ldr	r0, [r3, #0]
 8004818:	683b      	ldr	r3, [r7, #0]
 800481a:	6899      	ldr	r1, [r3, #8]
 800481c:	683b      	ldr	r3, [r7, #0]
 800481e:	685a      	ldr	r2, [r3, #4]
 8004820:	683b      	ldr	r3, [r7, #0]
 8004822:	68db      	ldr	r3, [r3, #12]
 8004824:	f000 fab5 	bl	8004d92 <TIM_ETR_SetConfig>
 8004828:	687b      	ldr	r3, [r7, #4]
 800482a:	681b      	ldr	r3, [r3, #0]
 800482c:	689a      	ldr	r2, [r3, #8]
 800482e:	687b      	ldr	r3, [r7, #4]
 8004830:	681b      	ldr	r3, [r3, #0]
 8004832:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8004836:	609a      	str	r2, [r3, #8]
 8004838:	e03c      	b.n	80048b4 <HAL_TIM_ConfigClockSource+0x174>
 800483a:	687b      	ldr	r3, [r7, #4]
 800483c:	6818      	ldr	r0, [r3, #0]
 800483e:	683b      	ldr	r3, [r7, #0]
 8004840:	6859      	ldr	r1, [r3, #4]
 8004842:	683b      	ldr	r3, [r7, #0]
 8004844:	68db      	ldr	r3, [r3, #12]
 8004846:	461a      	mov	r2, r3
 8004848:	f000 fa2c 	bl	8004ca4 <TIM_TI1_ConfigInputStage>
 800484c:	687b      	ldr	r3, [r7, #4]
 800484e:	681b      	ldr	r3, [r3, #0]
 8004850:	2150      	movs	r1, #80	@ 0x50
 8004852:	4618      	mov	r0, r3
 8004854:	f000 fa83 	bl	8004d5e <TIM_ITRx_SetConfig>
 8004858:	e02c      	b.n	80048b4 <HAL_TIM_ConfigClockSource+0x174>
 800485a:	687b      	ldr	r3, [r7, #4]
 800485c:	6818      	ldr	r0, [r3, #0]
 800485e:	683b      	ldr	r3, [r7, #0]
 8004860:	6859      	ldr	r1, [r3, #4]
 8004862:	683b      	ldr	r3, [r7, #0]
 8004864:	68db      	ldr	r3, [r3, #12]
 8004866:	461a      	mov	r2, r3
 8004868:	f000 fa4a 	bl	8004d00 <TIM_TI2_ConfigInputStage>
 800486c:	687b      	ldr	r3, [r7, #4]
 800486e:	681b      	ldr	r3, [r3, #0]
 8004870:	2160      	movs	r1, #96	@ 0x60
 8004872:	4618      	mov	r0, r3
 8004874:	f000 fa73 	bl	8004d5e <TIM_ITRx_SetConfig>
 8004878:	e01c      	b.n	80048b4 <HAL_TIM_ConfigClockSource+0x174>
 800487a:	687b      	ldr	r3, [r7, #4]
 800487c:	6818      	ldr	r0, [r3, #0]
 800487e:	683b      	ldr	r3, [r7, #0]
 8004880:	6859      	ldr	r1, [r3, #4]
 8004882:	683b      	ldr	r3, [r7, #0]
 8004884:	68db      	ldr	r3, [r3, #12]
 8004886:	461a      	mov	r2, r3
 8004888:	f000 fa0c 	bl	8004ca4 <TIM_TI1_ConfigInputStage>
 800488c:	687b      	ldr	r3, [r7, #4]
 800488e:	681b      	ldr	r3, [r3, #0]
 8004890:	2140      	movs	r1, #64	@ 0x40
 8004892:	4618      	mov	r0, r3
 8004894:	f000 fa63 	bl	8004d5e <TIM_ITRx_SetConfig>
 8004898:	e00c      	b.n	80048b4 <HAL_TIM_ConfigClockSource+0x174>
 800489a:	687b      	ldr	r3, [r7, #4]
 800489c:	681a      	ldr	r2, [r3, #0]
 800489e:	683b      	ldr	r3, [r7, #0]
 80048a0:	681b      	ldr	r3, [r3, #0]
 80048a2:	4619      	mov	r1, r3
 80048a4:	4610      	mov	r0, r2
 80048a6:	f000 fa5a 	bl	8004d5e <TIM_ITRx_SetConfig>
 80048aa:	e003      	b.n	80048b4 <HAL_TIM_ConfigClockSource+0x174>
 80048ac:	2301      	movs	r3, #1
 80048ae:	73fb      	strb	r3, [r7, #15]
 80048b0:	e000      	b.n	80048b4 <HAL_TIM_ConfigClockSource+0x174>
 80048b2:	bf00      	nop
 80048b4:	687b      	ldr	r3, [r7, #4]
 80048b6:	2201      	movs	r2, #1
 80048b8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80048bc:	687b      	ldr	r3, [r7, #4]
 80048be:	2200      	movs	r2, #0
 80048c0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80048c4:	7bfb      	ldrb	r3, [r7, #15]
 80048c6:	4618      	mov	r0, r3
 80048c8:	3710      	adds	r7, #16
 80048ca:	46bd      	mov	sp, r7
 80048cc:	bd80      	pop	{r7, pc}
	...

080048d0 <TIM_Base_SetConfig>:
 80048d0:	b480      	push	{r7}
 80048d2:	b085      	sub	sp, #20
 80048d4:	af00      	add	r7, sp, #0
 80048d6:	6078      	str	r0, [r7, #4]
 80048d8:	6039      	str	r1, [r7, #0]
 80048da:	687b      	ldr	r3, [r7, #4]
 80048dc:	681b      	ldr	r3, [r3, #0]
 80048de:	60fb      	str	r3, [r7, #12]
 80048e0:	687b      	ldr	r3, [r7, #4]
 80048e2:	4a29      	ldr	r2, [pc, #164]	@ (8004988 <TIM_Base_SetConfig+0xb8>)
 80048e4:	4293      	cmp	r3, r2
 80048e6:	d00b      	beq.n	8004900 <TIM_Base_SetConfig+0x30>
 80048e8:	687b      	ldr	r3, [r7, #4]
 80048ea:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80048ee:	d007      	beq.n	8004900 <TIM_Base_SetConfig+0x30>
 80048f0:	687b      	ldr	r3, [r7, #4]
 80048f2:	4a26      	ldr	r2, [pc, #152]	@ (800498c <TIM_Base_SetConfig+0xbc>)
 80048f4:	4293      	cmp	r3, r2
 80048f6:	d003      	beq.n	8004900 <TIM_Base_SetConfig+0x30>
 80048f8:	687b      	ldr	r3, [r7, #4]
 80048fa:	4a25      	ldr	r2, [pc, #148]	@ (8004990 <TIM_Base_SetConfig+0xc0>)
 80048fc:	4293      	cmp	r3, r2
 80048fe:	d108      	bne.n	8004912 <TIM_Base_SetConfig+0x42>
 8004900:	68fb      	ldr	r3, [r7, #12]
 8004902:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004906:	60fb      	str	r3, [r7, #12]
 8004908:	683b      	ldr	r3, [r7, #0]
 800490a:	685b      	ldr	r3, [r3, #4]
 800490c:	68fa      	ldr	r2, [r7, #12]
 800490e:	4313      	orrs	r3, r2
 8004910:	60fb      	str	r3, [r7, #12]
 8004912:	687b      	ldr	r3, [r7, #4]
 8004914:	4a1c      	ldr	r2, [pc, #112]	@ (8004988 <TIM_Base_SetConfig+0xb8>)
 8004916:	4293      	cmp	r3, r2
 8004918:	d00b      	beq.n	8004932 <TIM_Base_SetConfig+0x62>
 800491a:	687b      	ldr	r3, [r7, #4]
 800491c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004920:	d007      	beq.n	8004932 <TIM_Base_SetConfig+0x62>
 8004922:	687b      	ldr	r3, [r7, #4]
 8004924:	4a19      	ldr	r2, [pc, #100]	@ (800498c <TIM_Base_SetConfig+0xbc>)
 8004926:	4293      	cmp	r3, r2
 8004928:	d003      	beq.n	8004932 <TIM_Base_SetConfig+0x62>
 800492a:	687b      	ldr	r3, [r7, #4]
 800492c:	4a18      	ldr	r2, [pc, #96]	@ (8004990 <TIM_Base_SetConfig+0xc0>)
 800492e:	4293      	cmp	r3, r2
 8004930:	d108      	bne.n	8004944 <TIM_Base_SetConfig+0x74>
 8004932:	68fb      	ldr	r3, [r7, #12]
 8004934:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004938:	60fb      	str	r3, [r7, #12]
 800493a:	683b      	ldr	r3, [r7, #0]
 800493c:	68db      	ldr	r3, [r3, #12]
 800493e:	68fa      	ldr	r2, [r7, #12]
 8004940:	4313      	orrs	r3, r2
 8004942:	60fb      	str	r3, [r7, #12]
 8004944:	68fb      	ldr	r3, [r7, #12]
 8004946:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800494a:	683b      	ldr	r3, [r7, #0]
 800494c:	695b      	ldr	r3, [r3, #20]
 800494e:	4313      	orrs	r3, r2
 8004950:	60fb      	str	r3, [r7, #12]
 8004952:	687b      	ldr	r3, [r7, #4]
 8004954:	68fa      	ldr	r2, [r7, #12]
 8004956:	601a      	str	r2, [r3, #0]
 8004958:	683b      	ldr	r3, [r7, #0]
 800495a:	689a      	ldr	r2, [r3, #8]
 800495c:	687b      	ldr	r3, [r7, #4]
 800495e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8004960:	683b      	ldr	r3, [r7, #0]
 8004962:	681a      	ldr	r2, [r3, #0]
 8004964:	687b      	ldr	r3, [r7, #4]
 8004966:	629a      	str	r2, [r3, #40]	@ 0x28
 8004968:	687b      	ldr	r3, [r7, #4]
 800496a:	4a07      	ldr	r2, [pc, #28]	@ (8004988 <TIM_Base_SetConfig+0xb8>)
 800496c:	4293      	cmp	r3, r2
 800496e:	d103      	bne.n	8004978 <TIM_Base_SetConfig+0xa8>
 8004970:	683b      	ldr	r3, [r7, #0]
 8004972:	691a      	ldr	r2, [r3, #16]
 8004974:	687b      	ldr	r3, [r7, #4]
 8004976:	631a      	str	r2, [r3, #48]	@ 0x30
 8004978:	687b      	ldr	r3, [r7, #4]
 800497a:	2201      	movs	r2, #1
 800497c:	615a      	str	r2, [r3, #20]
 800497e:	bf00      	nop
 8004980:	3714      	adds	r7, #20
 8004982:	46bd      	mov	sp, r7
 8004984:	bc80      	pop	{r7}
 8004986:	4770      	bx	lr
 8004988:	40012c00 	.word	0x40012c00
 800498c:	40000400 	.word	0x40000400
 8004990:	40000800 	.word	0x40000800

08004994 <TIM_OC1_SetConfig>:
 8004994:	b480      	push	{r7}
 8004996:	b087      	sub	sp, #28
 8004998:	af00      	add	r7, sp, #0
 800499a:	6078      	str	r0, [r7, #4]
 800499c:	6039      	str	r1, [r7, #0]
 800499e:	687b      	ldr	r3, [r7, #4]
 80049a0:	6a1b      	ldr	r3, [r3, #32]
 80049a2:	617b      	str	r3, [r7, #20]
 80049a4:	687b      	ldr	r3, [r7, #4]
 80049a6:	6a1b      	ldr	r3, [r3, #32]
 80049a8:	f023 0201 	bic.w	r2, r3, #1
 80049ac:	687b      	ldr	r3, [r7, #4]
 80049ae:	621a      	str	r2, [r3, #32]
 80049b0:	687b      	ldr	r3, [r7, #4]
 80049b2:	685b      	ldr	r3, [r3, #4]
 80049b4:	613b      	str	r3, [r7, #16]
 80049b6:	687b      	ldr	r3, [r7, #4]
 80049b8:	699b      	ldr	r3, [r3, #24]
 80049ba:	60fb      	str	r3, [r7, #12]
 80049bc:	68fb      	ldr	r3, [r7, #12]
 80049be:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80049c2:	60fb      	str	r3, [r7, #12]
 80049c4:	68fb      	ldr	r3, [r7, #12]
 80049c6:	f023 0303 	bic.w	r3, r3, #3
 80049ca:	60fb      	str	r3, [r7, #12]
 80049cc:	683b      	ldr	r3, [r7, #0]
 80049ce:	681b      	ldr	r3, [r3, #0]
 80049d0:	68fa      	ldr	r2, [r7, #12]
 80049d2:	4313      	orrs	r3, r2
 80049d4:	60fb      	str	r3, [r7, #12]
 80049d6:	697b      	ldr	r3, [r7, #20]
 80049d8:	f023 0302 	bic.w	r3, r3, #2
 80049dc:	617b      	str	r3, [r7, #20]
 80049de:	683b      	ldr	r3, [r7, #0]
 80049e0:	689b      	ldr	r3, [r3, #8]
 80049e2:	697a      	ldr	r2, [r7, #20]
 80049e4:	4313      	orrs	r3, r2
 80049e6:	617b      	str	r3, [r7, #20]
 80049e8:	687b      	ldr	r3, [r7, #4]
 80049ea:	4a1c      	ldr	r2, [pc, #112]	@ (8004a5c <TIM_OC1_SetConfig+0xc8>)
 80049ec:	4293      	cmp	r3, r2
 80049ee:	d10c      	bne.n	8004a0a <TIM_OC1_SetConfig+0x76>
 80049f0:	697b      	ldr	r3, [r7, #20]
 80049f2:	f023 0308 	bic.w	r3, r3, #8
 80049f6:	617b      	str	r3, [r7, #20]
 80049f8:	683b      	ldr	r3, [r7, #0]
 80049fa:	68db      	ldr	r3, [r3, #12]
 80049fc:	697a      	ldr	r2, [r7, #20]
 80049fe:	4313      	orrs	r3, r2
 8004a00:	617b      	str	r3, [r7, #20]
 8004a02:	697b      	ldr	r3, [r7, #20]
 8004a04:	f023 0304 	bic.w	r3, r3, #4
 8004a08:	617b      	str	r3, [r7, #20]
 8004a0a:	687b      	ldr	r3, [r7, #4]
 8004a0c:	4a13      	ldr	r2, [pc, #76]	@ (8004a5c <TIM_OC1_SetConfig+0xc8>)
 8004a0e:	4293      	cmp	r3, r2
 8004a10:	d111      	bne.n	8004a36 <TIM_OC1_SetConfig+0xa2>
 8004a12:	693b      	ldr	r3, [r7, #16]
 8004a14:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8004a18:	613b      	str	r3, [r7, #16]
 8004a1a:	693b      	ldr	r3, [r7, #16]
 8004a1c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8004a20:	613b      	str	r3, [r7, #16]
 8004a22:	683b      	ldr	r3, [r7, #0]
 8004a24:	695b      	ldr	r3, [r3, #20]
 8004a26:	693a      	ldr	r2, [r7, #16]
 8004a28:	4313      	orrs	r3, r2
 8004a2a:	613b      	str	r3, [r7, #16]
 8004a2c:	683b      	ldr	r3, [r7, #0]
 8004a2e:	699b      	ldr	r3, [r3, #24]
 8004a30:	693a      	ldr	r2, [r7, #16]
 8004a32:	4313      	orrs	r3, r2
 8004a34:	613b      	str	r3, [r7, #16]
 8004a36:	687b      	ldr	r3, [r7, #4]
 8004a38:	693a      	ldr	r2, [r7, #16]
 8004a3a:	605a      	str	r2, [r3, #4]
 8004a3c:	687b      	ldr	r3, [r7, #4]
 8004a3e:	68fa      	ldr	r2, [r7, #12]
 8004a40:	619a      	str	r2, [r3, #24]
 8004a42:	683b      	ldr	r3, [r7, #0]
 8004a44:	685a      	ldr	r2, [r3, #4]
 8004a46:	687b      	ldr	r3, [r7, #4]
 8004a48:	635a      	str	r2, [r3, #52]	@ 0x34
 8004a4a:	687b      	ldr	r3, [r7, #4]
 8004a4c:	697a      	ldr	r2, [r7, #20]
 8004a4e:	621a      	str	r2, [r3, #32]
 8004a50:	bf00      	nop
 8004a52:	371c      	adds	r7, #28
 8004a54:	46bd      	mov	sp, r7
 8004a56:	bc80      	pop	{r7}
 8004a58:	4770      	bx	lr
 8004a5a:	bf00      	nop
 8004a5c:	40012c00 	.word	0x40012c00

08004a60 <TIM_OC2_SetConfig>:
 8004a60:	b480      	push	{r7}
 8004a62:	b087      	sub	sp, #28
 8004a64:	af00      	add	r7, sp, #0
 8004a66:	6078      	str	r0, [r7, #4]
 8004a68:	6039      	str	r1, [r7, #0]
 8004a6a:	687b      	ldr	r3, [r7, #4]
 8004a6c:	6a1b      	ldr	r3, [r3, #32]
 8004a6e:	617b      	str	r3, [r7, #20]
 8004a70:	687b      	ldr	r3, [r7, #4]
 8004a72:	6a1b      	ldr	r3, [r3, #32]
 8004a74:	f023 0210 	bic.w	r2, r3, #16
 8004a78:	687b      	ldr	r3, [r7, #4]
 8004a7a:	621a      	str	r2, [r3, #32]
 8004a7c:	687b      	ldr	r3, [r7, #4]
 8004a7e:	685b      	ldr	r3, [r3, #4]
 8004a80:	613b      	str	r3, [r7, #16]
 8004a82:	687b      	ldr	r3, [r7, #4]
 8004a84:	699b      	ldr	r3, [r3, #24]
 8004a86:	60fb      	str	r3, [r7, #12]
 8004a88:	68fb      	ldr	r3, [r7, #12]
 8004a8a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004a8e:	60fb      	str	r3, [r7, #12]
 8004a90:	68fb      	ldr	r3, [r7, #12]
 8004a92:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004a96:	60fb      	str	r3, [r7, #12]
 8004a98:	683b      	ldr	r3, [r7, #0]
 8004a9a:	681b      	ldr	r3, [r3, #0]
 8004a9c:	021b      	lsls	r3, r3, #8
 8004a9e:	68fa      	ldr	r2, [r7, #12]
 8004aa0:	4313      	orrs	r3, r2
 8004aa2:	60fb      	str	r3, [r7, #12]
 8004aa4:	697b      	ldr	r3, [r7, #20]
 8004aa6:	f023 0320 	bic.w	r3, r3, #32
 8004aaa:	617b      	str	r3, [r7, #20]
 8004aac:	683b      	ldr	r3, [r7, #0]
 8004aae:	689b      	ldr	r3, [r3, #8]
 8004ab0:	011b      	lsls	r3, r3, #4
 8004ab2:	697a      	ldr	r2, [r7, #20]
 8004ab4:	4313      	orrs	r3, r2
 8004ab6:	617b      	str	r3, [r7, #20]
 8004ab8:	687b      	ldr	r3, [r7, #4]
 8004aba:	4a1d      	ldr	r2, [pc, #116]	@ (8004b30 <TIM_OC2_SetConfig+0xd0>)
 8004abc:	4293      	cmp	r3, r2
 8004abe:	d10d      	bne.n	8004adc <TIM_OC2_SetConfig+0x7c>
 8004ac0:	697b      	ldr	r3, [r7, #20]
 8004ac2:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8004ac6:	617b      	str	r3, [r7, #20]
 8004ac8:	683b      	ldr	r3, [r7, #0]
 8004aca:	68db      	ldr	r3, [r3, #12]
 8004acc:	011b      	lsls	r3, r3, #4
 8004ace:	697a      	ldr	r2, [r7, #20]
 8004ad0:	4313      	orrs	r3, r2
 8004ad2:	617b      	str	r3, [r7, #20]
 8004ad4:	697b      	ldr	r3, [r7, #20]
 8004ad6:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8004ada:	617b      	str	r3, [r7, #20]
 8004adc:	687b      	ldr	r3, [r7, #4]
 8004ade:	4a14      	ldr	r2, [pc, #80]	@ (8004b30 <TIM_OC2_SetConfig+0xd0>)
 8004ae0:	4293      	cmp	r3, r2
 8004ae2:	d113      	bne.n	8004b0c <TIM_OC2_SetConfig+0xac>
 8004ae4:	693b      	ldr	r3, [r7, #16]
 8004ae6:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8004aea:	613b      	str	r3, [r7, #16]
 8004aec:	693b      	ldr	r3, [r7, #16]
 8004aee:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8004af2:	613b      	str	r3, [r7, #16]
 8004af4:	683b      	ldr	r3, [r7, #0]
 8004af6:	695b      	ldr	r3, [r3, #20]
 8004af8:	009b      	lsls	r3, r3, #2
 8004afa:	693a      	ldr	r2, [r7, #16]
 8004afc:	4313      	orrs	r3, r2
 8004afe:	613b      	str	r3, [r7, #16]
 8004b00:	683b      	ldr	r3, [r7, #0]
 8004b02:	699b      	ldr	r3, [r3, #24]
 8004b04:	009b      	lsls	r3, r3, #2
 8004b06:	693a      	ldr	r2, [r7, #16]
 8004b08:	4313      	orrs	r3, r2
 8004b0a:	613b      	str	r3, [r7, #16]
 8004b0c:	687b      	ldr	r3, [r7, #4]
 8004b0e:	693a      	ldr	r2, [r7, #16]
 8004b10:	605a      	str	r2, [r3, #4]
 8004b12:	687b      	ldr	r3, [r7, #4]
 8004b14:	68fa      	ldr	r2, [r7, #12]
 8004b16:	619a      	str	r2, [r3, #24]
 8004b18:	683b      	ldr	r3, [r7, #0]
 8004b1a:	685a      	ldr	r2, [r3, #4]
 8004b1c:	687b      	ldr	r3, [r7, #4]
 8004b1e:	639a      	str	r2, [r3, #56]	@ 0x38
 8004b20:	687b      	ldr	r3, [r7, #4]
 8004b22:	697a      	ldr	r2, [r7, #20]
 8004b24:	621a      	str	r2, [r3, #32]
 8004b26:	bf00      	nop
 8004b28:	371c      	adds	r7, #28
 8004b2a:	46bd      	mov	sp, r7
 8004b2c:	bc80      	pop	{r7}
 8004b2e:	4770      	bx	lr
 8004b30:	40012c00 	.word	0x40012c00

08004b34 <TIM_OC3_SetConfig>:
 8004b34:	b480      	push	{r7}
 8004b36:	b087      	sub	sp, #28
 8004b38:	af00      	add	r7, sp, #0
 8004b3a:	6078      	str	r0, [r7, #4]
 8004b3c:	6039      	str	r1, [r7, #0]
 8004b3e:	687b      	ldr	r3, [r7, #4]
 8004b40:	6a1b      	ldr	r3, [r3, #32]
 8004b42:	617b      	str	r3, [r7, #20]
 8004b44:	687b      	ldr	r3, [r7, #4]
 8004b46:	6a1b      	ldr	r3, [r3, #32]
 8004b48:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8004b4c:	687b      	ldr	r3, [r7, #4]
 8004b4e:	621a      	str	r2, [r3, #32]
 8004b50:	687b      	ldr	r3, [r7, #4]
 8004b52:	685b      	ldr	r3, [r3, #4]
 8004b54:	613b      	str	r3, [r7, #16]
 8004b56:	687b      	ldr	r3, [r7, #4]
 8004b58:	69db      	ldr	r3, [r3, #28]
 8004b5a:	60fb      	str	r3, [r7, #12]
 8004b5c:	68fb      	ldr	r3, [r7, #12]
 8004b5e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004b62:	60fb      	str	r3, [r7, #12]
 8004b64:	68fb      	ldr	r3, [r7, #12]
 8004b66:	f023 0303 	bic.w	r3, r3, #3
 8004b6a:	60fb      	str	r3, [r7, #12]
 8004b6c:	683b      	ldr	r3, [r7, #0]
 8004b6e:	681b      	ldr	r3, [r3, #0]
 8004b70:	68fa      	ldr	r2, [r7, #12]
 8004b72:	4313      	orrs	r3, r2
 8004b74:	60fb      	str	r3, [r7, #12]
 8004b76:	697b      	ldr	r3, [r7, #20]
 8004b78:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8004b7c:	617b      	str	r3, [r7, #20]
 8004b7e:	683b      	ldr	r3, [r7, #0]
 8004b80:	689b      	ldr	r3, [r3, #8]
 8004b82:	021b      	lsls	r3, r3, #8
 8004b84:	697a      	ldr	r2, [r7, #20]
 8004b86:	4313      	orrs	r3, r2
 8004b88:	617b      	str	r3, [r7, #20]
 8004b8a:	687b      	ldr	r3, [r7, #4]
 8004b8c:	4a1d      	ldr	r2, [pc, #116]	@ (8004c04 <TIM_OC3_SetConfig+0xd0>)
 8004b8e:	4293      	cmp	r3, r2
 8004b90:	d10d      	bne.n	8004bae <TIM_OC3_SetConfig+0x7a>
 8004b92:	697b      	ldr	r3, [r7, #20]
 8004b94:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8004b98:	617b      	str	r3, [r7, #20]
 8004b9a:	683b      	ldr	r3, [r7, #0]
 8004b9c:	68db      	ldr	r3, [r3, #12]
 8004b9e:	021b      	lsls	r3, r3, #8
 8004ba0:	697a      	ldr	r2, [r7, #20]
 8004ba2:	4313      	orrs	r3, r2
 8004ba4:	617b      	str	r3, [r7, #20]
 8004ba6:	697b      	ldr	r3, [r7, #20]
 8004ba8:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8004bac:	617b      	str	r3, [r7, #20]
 8004bae:	687b      	ldr	r3, [r7, #4]
 8004bb0:	4a14      	ldr	r2, [pc, #80]	@ (8004c04 <TIM_OC3_SetConfig+0xd0>)
 8004bb2:	4293      	cmp	r3, r2
 8004bb4:	d113      	bne.n	8004bde <TIM_OC3_SetConfig+0xaa>
 8004bb6:	693b      	ldr	r3, [r7, #16]
 8004bb8:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8004bbc:	613b      	str	r3, [r7, #16]
 8004bbe:	693b      	ldr	r3, [r7, #16]
 8004bc0:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8004bc4:	613b      	str	r3, [r7, #16]
 8004bc6:	683b      	ldr	r3, [r7, #0]
 8004bc8:	695b      	ldr	r3, [r3, #20]
 8004bca:	011b      	lsls	r3, r3, #4
 8004bcc:	693a      	ldr	r2, [r7, #16]
 8004bce:	4313      	orrs	r3, r2
 8004bd0:	613b      	str	r3, [r7, #16]
 8004bd2:	683b      	ldr	r3, [r7, #0]
 8004bd4:	699b      	ldr	r3, [r3, #24]
 8004bd6:	011b      	lsls	r3, r3, #4
 8004bd8:	693a      	ldr	r2, [r7, #16]
 8004bda:	4313      	orrs	r3, r2
 8004bdc:	613b      	str	r3, [r7, #16]
 8004bde:	687b      	ldr	r3, [r7, #4]
 8004be0:	693a      	ldr	r2, [r7, #16]
 8004be2:	605a      	str	r2, [r3, #4]
 8004be4:	687b      	ldr	r3, [r7, #4]
 8004be6:	68fa      	ldr	r2, [r7, #12]
 8004be8:	61da      	str	r2, [r3, #28]
 8004bea:	683b      	ldr	r3, [r7, #0]
 8004bec:	685a      	ldr	r2, [r3, #4]
 8004bee:	687b      	ldr	r3, [r7, #4]
 8004bf0:	63da      	str	r2, [r3, #60]	@ 0x3c
 8004bf2:	687b      	ldr	r3, [r7, #4]
 8004bf4:	697a      	ldr	r2, [r7, #20]
 8004bf6:	621a      	str	r2, [r3, #32]
 8004bf8:	bf00      	nop
 8004bfa:	371c      	adds	r7, #28
 8004bfc:	46bd      	mov	sp, r7
 8004bfe:	bc80      	pop	{r7}
 8004c00:	4770      	bx	lr
 8004c02:	bf00      	nop
 8004c04:	40012c00 	.word	0x40012c00

08004c08 <TIM_OC4_SetConfig>:
 8004c08:	b480      	push	{r7}
 8004c0a:	b087      	sub	sp, #28
 8004c0c:	af00      	add	r7, sp, #0
 8004c0e:	6078      	str	r0, [r7, #4]
 8004c10:	6039      	str	r1, [r7, #0]
 8004c12:	687b      	ldr	r3, [r7, #4]
 8004c14:	6a1b      	ldr	r3, [r3, #32]
 8004c16:	613b      	str	r3, [r7, #16]
 8004c18:	687b      	ldr	r3, [r7, #4]
 8004c1a:	6a1b      	ldr	r3, [r3, #32]
 8004c1c:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8004c20:	687b      	ldr	r3, [r7, #4]
 8004c22:	621a      	str	r2, [r3, #32]
 8004c24:	687b      	ldr	r3, [r7, #4]
 8004c26:	685b      	ldr	r3, [r3, #4]
 8004c28:	617b      	str	r3, [r7, #20]
 8004c2a:	687b      	ldr	r3, [r7, #4]
 8004c2c:	69db      	ldr	r3, [r3, #28]
 8004c2e:	60fb      	str	r3, [r7, #12]
 8004c30:	68fb      	ldr	r3, [r7, #12]
 8004c32:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004c36:	60fb      	str	r3, [r7, #12]
 8004c38:	68fb      	ldr	r3, [r7, #12]
 8004c3a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004c3e:	60fb      	str	r3, [r7, #12]
 8004c40:	683b      	ldr	r3, [r7, #0]
 8004c42:	681b      	ldr	r3, [r3, #0]
 8004c44:	021b      	lsls	r3, r3, #8
 8004c46:	68fa      	ldr	r2, [r7, #12]
 8004c48:	4313      	orrs	r3, r2
 8004c4a:	60fb      	str	r3, [r7, #12]
 8004c4c:	693b      	ldr	r3, [r7, #16]
 8004c4e:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8004c52:	613b      	str	r3, [r7, #16]
 8004c54:	683b      	ldr	r3, [r7, #0]
 8004c56:	689b      	ldr	r3, [r3, #8]
 8004c58:	031b      	lsls	r3, r3, #12
 8004c5a:	693a      	ldr	r2, [r7, #16]
 8004c5c:	4313      	orrs	r3, r2
 8004c5e:	613b      	str	r3, [r7, #16]
 8004c60:	687b      	ldr	r3, [r7, #4]
 8004c62:	4a0f      	ldr	r2, [pc, #60]	@ (8004ca0 <TIM_OC4_SetConfig+0x98>)
 8004c64:	4293      	cmp	r3, r2
 8004c66:	d109      	bne.n	8004c7c <TIM_OC4_SetConfig+0x74>
 8004c68:	697b      	ldr	r3, [r7, #20]
 8004c6a:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8004c6e:	617b      	str	r3, [r7, #20]
 8004c70:	683b      	ldr	r3, [r7, #0]
 8004c72:	695b      	ldr	r3, [r3, #20]
 8004c74:	019b      	lsls	r3, r3, #6
 8004c76:	697a      	ldr	r2, [r7, #20]
 8004c78:	4313      	orrs	r3, r2
 8004c7a:	617b      	str	r3, [r7, #20]
 8004c7c:	687b      	ldr	r3, [r7, #4]
 8004c7e:	697a      	ldr	r2, [r7, #20]
 8004c80:	605a      	str	r2, [r3, #4]
 8004c82:	687b      	ldr	r3, [r7, #4]
 8004c84:	68fa      	ldr	r2, [r7, #12]
 8004c86:	61da      	str	r2, [r3, #28]
 8004c88:	683b      	ldr	r3, [r7, #0]
 8004c8a:	685a      	ldr	r2, [r3, #4]
 8004c8c:	687b      	ldr	r3, [r7, #4]
 8004c8e:	641a      	str	r2, [r3, #64]	@ 0x40
 8004c90:	687b      	ldr	r3, [r7, #4]
 8004c92:	693a      	ldr	r2, [r7, #16]
 8004c94:	621a      	str	r2, [r3, #32]
 8004c96:	bf00      	nop
 8004c98:	371c      	adds	r7, #28
 8004c9a:	46bd      	mov	sp, r7
 8004c9c:	bc80      	pop	{r7}
 8004c9e:	4770      	bx	lr
 8004ca0:	40012c00 	.word	0x40012c00

08004ca4 <TIM_TI1_ConfigInputStage>:
 8004ca4:	b480      	push	{r7}
 8004ca6:	b087      	sub	sp, #28
 8004ca8:	af00      	add	r7, sp, #0
 8004caa:	60f8      	str	r0, [r7, #12]
 8004cac:	60b9      	str	r1, [r7, #8]
 8004cae:	607a      	str	r2, [r7, #4]
 8004cb0:	68fb      	ldr	r3, [r7, #12]
 8004cb2:	6a1b      	ldr	r3, [r3, #32]
 8004cb4:	617b      	str	r3, [r7, #20]
 8004cb6:	68fb      	ldr	r3, [r7, #12]
 8004cb8:	6a1b      	ldr	r3, [r3, #32]
 8004cba:	f023 0201 	bic.w	r2, r3, #1
 8004cbe:	68fb      	ldr	r3, [r7, #12]
 8004cc0:	621a      	str	r2, [r3, #32]
 8004cc2:	68fb      	ldr	r3, [r7, #12]
 8004cc4:	699b      	ldr	r3, [r3, #24]
 8004cc6:	613b      	str	r3, [r7, #16]
 8004cc8:	693b      	ldr	r3, [r7, #16]
 8004cca:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8004cce:	613b      	str	r3, [r7, #16]
 8004cd0:	687b      	ldr	r3, [r7, #4]
 8004cd2:	011b      	lsls	r3, r3, #4
 8004cd4:	693a      	ldr	r2, [r7, #16]
 8004cd6:	4313      	orrs	r3, r2
 8004cd8:	613b      	str	r3, [r7, #16]
 8004cda:	697b      	ldr	r3, [r7, #20]
 8004cdc:	f023 030a 	bic.w	r3, r3, #10
 8004ce0:	617b      	str	r3, [r7, #20]
 8004ce2:	697a      	ldr	r2, [r7, #20]
 8004ce4:	68bb      	ldr	r3, [r7, #8]
 8004ce6:	4313      	orrs	r3, r2
 8004ce8:	617b      	str	r3, [r7, #20]
 8004cea:	68fb      	ldr	r3, [r7, #12]
 8004cec:	693a      	ldr	r2, [r7, #16]
 8004cee:	619a      	str	r2, [r3, #24]
 8004cf0:	68fb      	ldr	r3, [r7, #12]
 8004cf2:	697a      	ldr	r2, [r7, #20]
 8004cf4:	621a      	str	r2, [r3, #32]
 8004cf6:	bf00      	nop
 8004cf8:	371c      	adds	r7, #28
 8004cfa:	46bd      	mov	sp, r7
 8004cfc:	bc80      	pop	{r7}
 8004cfe:	4770      	bx	lr

08004d00 <TIM_TI2_ConfigInputStage>:
 8004d00:	b480      	push	{r7}
 8004d02:	b087      	sub	sp, #28
 8004d04:	af00      	add	r7, sp, #0
 8004d06:	60f8      	str	r0, [r7, #12]
 8004d08:	60b9      	str	r1, [r7, #8]
 8004d0a:	607a      	str	r2, [r7, #4]
 8004d0c:	68fb      	ldr	r3, [r7, #12]
 8004d0e:	6a1b      	ldr	r3, [r3, #32]
 8004d10:	617b      	str	r3, [r7, #20]
 8004d12:	68fb      	ldr	r3, [r7, #12]
 8004d14:	6a1b      	ldr	r3, [r3, #32]
 8004d16:	f023 0210 	bic.w	r2, r3, #16
 8004d1a:	68fb      	ldr	r3, [r7, #12]
 8004d1c:	621a      	str	r2, [r3, #32]
 8004d1e:	68fb      	ldr	r3, [r7, #12]
 8004d20:	699b      	ldr	r3, [r3, #24]
 8004d22:	613b      	str	r3, [r7, #16]
 8004d24:	693b      	ldr	r3, [r7, #16]
 8004d26:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8004d2a:	613b      	str	r3, [r7, #16]
 8004d2c:	687b      	ldr	r3, [r7, #4]
 8004d2e:	031b      	lsls	r3, r3, #12
 8004d30:	693a      	ldr	r2, [r7, #16]
 8004d32:	4313      	orrs	r3, r2
 8004d34:	613b      	str	r3, [r7, #16]
 8004d36:	697b      	ldr	r3, [r7, #20]
 8004d38:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8004d3c:	617b      	str	r3, [r7, #20]
 8004d3e:	68bb      	ldr	r3, [r7, #8]
 8004d40:	011b      	lsls	r3, r3, #4
 8004d42:	697a      	ldr	r2, [r7, #20]
 8004d44:	4313      	orrs	r3, r2
 8004d46:	617b      	str	r3, [r7, #20]
 8004d48:	68fb      	ldr	r3, [r7, #12]
 8004d4a:	693a      	ldr	r2, [r7, #16]
 8004d4c:	619a      	str	r2, [r3, #24]
 8004d4e:	68fb      	ldr	r3, [r7, #12]
 8004d50:	697a      	ldr	r2, [r7, #20]
 8004d52:	621a      	str	r2, [r3, #32]
 8004d54:	bf00      	nop
 8004d56:	371c      	adds	r7, #28
 8004d58:	46bd      	mov	sp, r7
 8004d5a:	bc80      	pop	{r7}
 8004d5c:	4770      	bx	lr

08004d5e <TIM_ITRx_SetConfig>:
 8004d5e:	b480      	push	{r7}
 8004d60:	b085      	sub	sp, #20
 8004d62:	af00      	add	r7, sp, #0
 8004d64:	6078      	str	r0, [r7, #4]
 8004d66:	6039      	str	r1, [r7, #0]
 8004d68:	687b      	ldr	r3, [r7, #4]
 8004d6a:	689b      	ldr	r3, [r3, #8]
 8004d6c:	60fb      	str	r3, [r7, #12]
 8004d6e:	68fb      	ldr	r3, [r7, #12]
 8004d70:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004d74:	60fb      	str	r3, [r7, #12]
 8004d76:	683a      	ldr	r2, [r7, #0]
 8004d78:	68fb      	ldr	r3, [r7, #12]
 8004d7a:	4313      	orrs	r3, r2
 8004d7c:	f043 0307 	orr.w	r3, r3, #7
 8004d80:	60fb      	str	r3, [r7, #12]
 8004d82:	687b      	ldr	r3, [r7, #4]
 8004d84:	68fa      	ldr	r2, [r7, #12]
 8004d86:	609a      	str	r2, [r3, #8]
 8004d88:	bf00      	nop
 8004d8a:	3714      	adds	r7, #20
 8004d8c:	46bd      	mov	sp, r7
 8004d8e:	bc80      	pop	{r7}
 8004d90:	4770      	bx	lr

08004d92 <TIM_ETR_SetConfig>:
 8004d92:	b480      	push	{r7}
 8004d94:	b087      	sub	sp, #28
 8004d96:	af00      	add	r7, sp, #0
 8004d98:	60f8      	str	r0, [r7, #12]
 8004d9a:	60b9      	str	r1, [r7, #8]
 8004d9c:	607a      	str	r2, [r7, #4]
 8004d9e:	603b      	str	r3, [r7, #0]
 8004da0:	68fb      	ldr	r3, [r7, #12]
 8004da2:	689b      	ldr	r3, [r3, #8]
 8004da4:	617b      	str	r3, [r7, #20]
 8004da6:	697b      	ldr	r3, [r7, #20]
 8004da8:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8004dac:	617b      	str	r3, [r7, #20]
 8004dae:	683b      	ldr	r3, [r7, #0]
 8004db0:	021a      	lsls	r2, r3, #8
 8004db2:	687b      	ldr	r3, [r7, #4]
 8004db4:	431a      	orrs	r2, r3
 8004db6:	68bb      	ldr	r3, [r7, #8]
 8004db8:	4313      	orrs	r3, r2
 8004dba:	697a      	ldr	r2, [r7, #20]
 8004dbc:	4313      	orrs	r3, r2
 8004dbe:	617b      	str	r3, [r7, #20]
 8004dc0:	68fb      	ldr	r3, [r7, #12]
 8004dc2:	697a      	ldr	r2, [r7, #20]
 8004dc4:	609a      	str	r2, [r3, #8]
 8004dc6:	bf00      	nop
 8004dc8:	371c      	adds	r7, #28
 8004dca:	46bd      	mov	sp, r7
 8004dcc:	bc80      	pop	{r7}
 8004dce:	4770      	bx	lr

08004dd0 <HAL_TIMEx_MasterConfigSynchronization>:
 8004dd0:	b480      	push	{r7}
 8004dd2:	b085      	sub	sp, #20
 8004dd4:	af00      	add	r7, sp, #0
 8004dd6:	6078      	str	r0, [r7, #4]
 8004dd8:	6039      	str	r1, [r7, #0]
 8004dda:	687b      	ldr	r3, [r7, #4]
 8004ddc:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004de0:	2b01      	cmp	r3, #1
 8004de2:	d101      	bne.n	8004de8 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8004de4:	2302      	movs	r3, #2
 8004de6:	e046      	b.n	8004e76 <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8004de8:	687b      	ldr	r3, [r7, #4]
 8004dea:	2201      	movs	r2, #1
 8004dec:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004df0:	687b      	ldr	r3, [r7, #4]
 8004df2:	2202      	movs	r2, #2
 8004df4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004df8:	687b      	ldr	r3, [r7, #4]
 8004dfa:	681b      	ldr	r3, [r3, #0]
 8004dfc:	685b      	ldr	r3, [r3, #4]
 8004dfe:	60fb      	str	r3, [r7, #12]
 8004e00:	687b      	ldr	r3, [r7, #4]
 8004e02:	681b      	ldr	r3, [r3, #0]
 8004e04:	689b      	ldr	r3, [r3, #8]
 8004e06:	60bb      	str	r3, [r7, #8]
 8004e08:	68fb      	ldr	r3, [r7, #12]
 8004e0a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004e0e:	60fb      	str	r3, [r7, #12]
 8004e10:	683b      	ldr	r3, [r7, #0]
 8004e12:	681b      	ldr	r3, [r3, #0]
 8004e14:	68fa      	ldr	r2, [r7, #12]
 8004e16:	4313      	orrs	r3, r2
 8004e18:	60fb      	str	r3, [r7, #12]
 8004e1a:	687b      	ldr	r3, [r7, #4]
 8004e1c:	681b      	ldr	r3, [r3, #0]
 8004e1e:	68fa      	ldr	r2, [r7, #12]
 8004e20:	605a      	str	r2, [r3, #4]
 8004e22:	687b      	ldr	r3, [r7, #4]
 8004e24:	681b      	ldr	r3, [r3, #0]
 8004e26:	4a16      	ldr	r2, [pc, #88]	@ (8004e80 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8004e28:	4293      	cmp	r3, r2
 8004e2a:	d00e      	beq.n	8004e4a <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8004e2c:	687b      	ldr	r3, [r7, #4]
 8004e2e:	681b      	ldr	r3, [r3, #0]
 8004e30:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004e34:	d009      	beq.n	8004e4a <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8004e36:	687b      	ldr	r3, [r7, #4]
 8004e38:	681b      	ldr	r3, [r3, #0]
 8004e3a:	4a12      	ldr	r2, [pc, #72]	@ (8004e84 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8004e3c:	4293      	cmp	r3, r2
 8004e3e:	d004      	beq.n	8004e4a <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8004e40:	687b      	ldr	r3, [r7, #4]
 8004e42:	681b      	ldr	r3, [r3, #0]
 8004e44:	4a10      	ldr	r2, [pc, #64]	@ (8004e88 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 8004e46:	4293      	cmp	r3, r2
 8004e48:	d10c      	bne.n	8004e64 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8004e4a:	68bb      	ldr	r3, [r7, #8]
 8004e4c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8004e50:	60bb      	str	r3, [r7, #8]
 8004e52:	683b      	ldr	r3, [r7, #0]
 8004e54:	685b      	ldr	r3, [r3, #4]
 8004e56:	68ba      	ldr	r2, [r7, #8]
 8004e58:	4313      	orrs	r3, r2
 8004e5a:	60bb      	str	r3, [r7, #8]
 8004e5c:	687b      	ldr	r3, [r7, #4]
 8004e5e:	681b      	ldr	r3, [r3, #0]
 8004e60:	68ba      	ldr	r2, [r7, #8]
 8004e62:	609a      	str	r2, [r3, #8]
 8004e64:	687b      	ldr	r3, [r7, #4]
 8004e66:	2201      	movs	r2, #1
 8004e68:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004e6c:	687b      	ldr	r3, [r7, #4]
 8004e6e:	2200      	movs	r2, #0
 8004e70:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004e74:	2300      	movs	r3, #0
 8004e76:	4618      	mov	r0, r3
 8004e78:	3714      	adds	r7, #20
 8004e7a:	46bd      	mov	sp, r7
 8004e7c:	bc80      	pop	{r7}
 8004e7e:	4770      	bx	lr
 8004e80:	40012c00 	.word	0x40012c00
 8004e84:	40000400 	.word	0x40000400
 8004e88:	40000800 	.word	0x40000800

08004e8c <HAL_UART_Init>:
 8004e8c:	b580      	push	{r7, lr}
 8004e8e:	b082      	sub	sp, #8
 8004e90:	af00      	add	r7, sp, #0
 8004e92:	6078      	str	r0, [r7, #4]
 8004e94:	687b      	ldr	r3, [r7, #4]
 8004e96:	2b00      	cmp	r3, #0
 8004e98:	d101      	bne.n	8004e9e <HAL_UART_Init+0x12>
 8004e9a:	2301      	movs	r3, #1
 8004e9c:	e042      	b.n	8004f24 <HAL_UART_Init+0x98>
 8004e9e:	687b      	ldr	r3, [r7, #4]
 8004ea0:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8004ea4:	b2db      	uxtb	r3, r3
 8004ea6:	2b00      	cmp	r3, #0
 8004ea8:	d106      	bne.n	8004eb8 <HAL_UART_Init+0x2c>
 8004eaa:	687b      	ldr	r3, [r7, #4]
 8004eac:	2200      	movs	r2, #0
 8004eae:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004eb2:	6878      	ldr	r0, [r7, #4]
 8004eb4:	f7fd fc26 	bl	8002704 <HAL_UART_MspInit>
 8004eb8:	687b      	ldr	r3, [r7, #4]
 8004eba:	2224      	movs	r2, #36	@ 0x24
 8004ebc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004ec0:	687b      	ldr	r3, [r7, #4]
 8004ec2:	681b      	ldr	r3, [r3, #0]
 8004ec4:	68da      	ldr	r2, [r3, #12]
 8004ec6:	687b      	ldr	r3, [r7, #4]
 8004ec8:	681b      	ldr	r3, [r3, #0]
 8004eca:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8004ece:	60da      	str	r2, [r3, #12]
 8004ed0:	6878      	ldr	r0, [r7, #4]
 8004ed2:	f000 f82b 	bl	8004f2c <UART_SetConfig>
 8004ed6:	687b      	ldr	r3, [r7, #4]
 8004ed8:	681b      	ldr	r3, [r3, #0]
 8004eda:	691a      	ldr	r2, [r3, #16]
 8004edc:	687b      	ldr	r3, [r7, #4]
 8004ede:	681b      	ldr	r3, [r3, #0]
 8004ee0:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8004ee4:	611a      	str	r2, [r3, #16]
 8004ee6:	687b      	ldr	r3, [r7, #4]
 8004ee8:	681b      	ldr	r3, [r3, #0]
 8004eea:	695a      	ldr	r2, [r3, #20]
 8004eec:	687b      	ldr	r3, [r7, #4]
 8004eee:	681b      	ldr	r3, [r3, #0]
 8004ef0:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8004ef4:	615a      	str	r2, [r3, #20]
 8004ef6:	687b      	ldr	r3, [r7, #4]
 8004ef8:	681b      	ldr	r3, [r3, #0]
 8004efa:	68da      	ldr	r2, [r3, #12]
 8004efc:	687b      	ldr	r3, [r7, #4]
 8004efe:	681b      	ldr	r3, [r3, #0]
 8004f00:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8004f04:	60da      	str	r2, [r3, #12]
 8004f06:	687b      	ldr	r3, [r7, #4]
 8004f08:	2200      	movs	r2, #0
 8004f0a:	645a      	str	r2, [r3, #68]	@ 0x44
 8004f0c:	687b      	ldr	r3, [r7, #4]
 8004f0e:	2220      	movs	r2, #32
 8004f10:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004f14:	687b      	ldr	r3, [r7, #4]
 8004f16:	2220      	movs	r2, #32
 8004f18:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004f1c:	687b      	ldr	r3, [r7, #4]
 8004f1e:	2200      	movs	r2, #0
 8004f20:	635a      	str	r2, [r3, #52]	@ 0x34
 8004f22:	2300      	movs	r3, #0
 8004f24:	4618      	mov	r0, r3
 8004f26:	3708      	adds	r7, #8
 8004f28:	46bd      	mov	sp, r7
 8004f2a:	bd80      	pop	{r7, pc}

08004f2c <UART_SetConfig>:
 8004f2c:	b580      	push	{r7, lr}
 8004f2e:	b084      	sub	sp, #16
 8004f30:	af00      	add	r7, sp, #0
 8004f32:	6078      	str	r0, [r7, #4]
 8004f34:	687b      	ldr	r3, [r7, #4]
 8004f36:	681b      	ldr	r3, [r3, #0]
 8004f38:	691b      	ldr	r3, [r3, #16]
 8004f3a:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 8004f3e:	687b      	ldr	r3, [r7, #4]
 8004f40:	68da      	ldr	r2, [r3, #12]
 8004f42:	687b      	ldr	r3, [r7, #4]
 8004f44:	681b      	ldr	r3, [r3, #0]
 8004f46:	430a      	orrs	r2, r1
 8004f48:	611a      	str	r2, [r3, #16]
 8004f4a:	687b      	ldr	r3, [r7, #4]
 8004f4c:	689a      	ldr	r2, [r3, #8]
 8004f4e:	687b      	ldr	r3, [r7, #4]
 8004f50:	691b      	ldr	r3, [r3, #16]
 8004f52:	431a      	orrs	r2, r3
 8004f54:	687b      	ldr	r3, [r7, #4]
 8004f56:	695b      	ldr	r3, [r3, #20]
 8004f58:	4313      	orrs	r3, r2
 8004f5a:	60bb      	str	r3, [r7, #8]
 8004f5c:	687b      	ldr	r3, [r7, #4]
 8004f5e:	681b      	ldr	r3, [r3, #0]
 8004f60:	68db      	ldr	r3, [r3, #12]
 8004f62:	f423 53b0 	bic.w	r3, r3, #5632	@ 0x1600
 8004f66:	f023 030c 	bic.w	r3, r3, #12
 8004f6a:	687a      	ldr	r2, [r7, #4]
 8004f6c:	6812      	ldr	r2, [r2, #0]
 8004f6e:	68b9      	ldr	r1, [r7, #8]
 8004f70:	430b      	orrs	r3, r1
 8004f72:	60d3      	str	r3, [r2, #12]
 8004f74:	687b      	ldr	r3, [r7, #4]
 8004f76:	681b      	ldr	r3, [r3, #0]
 8004f78:	695b      	ldr	r3, [r3, #20]
 8004f7a:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 8004f7e:	687b      	ldr	r3, [r7, #4]
 8004f80:	699a      	ldr	r2, [r3, #24]
 8004f82:	687b      	ldr	r3, [r7, #4]
 8004f84:	681b      	ldr	r3, [r3, #0]
 8004f86:	430a      	orrs	r2, r1
 8004f88:	615a      	str	r2, [r3, #20]
 8004f8a:	687b      	ldr	r3, [r7, #4]
 8004f8c:	681b      	ldr	r3, [r3, #0]
 8004f8e:	4a2c      	ldr	r2, [pc, #176]	@ (8005040 <UART_SetConfig+0x114>)
 8004f90:	4293      	cmp	r3, r2
 8004f92:	d103      	bne.n	8004f9c <UART_SetConfig+0x70>
 8004f94:	f7ff f8cc 	bl	8004130 <HAL_RCC_GetPCLK2Freq>
 8004f98:	60f8      	str	r0, [r7, #12]
 8004f9a:	e002      	b.n	8004fa2 <UART_SetConfig+0x76>
 8004f9c:	f7ff f8b4 	bl	8004108 <HAL_RCC_GetPCLK1Freq>
 8004fa0:	60f8      	str	r0, [r7, #12]
 8004fa2:	68fa      	ldr	r2, [r7, #12]
 8004fa4:	4613      	mov	r3, r2
 8004fa6:	009b      	lsls	r3, r3, #2
 8004fa8:	4413      	add	r3, r2
 8004faa:	009a      	lsls	r2, r3, #2
 8004fac:	441a      	add	r2, r3
 8004fae:	687b      	ldr	r3, [r7, #4]
 8004fb0:	685b      	ldr	r3, [r3, #4]
 8004fb2:	009b      	lsls	r3, r3, #2
 8004fb4:	fbb2 f3f3 	udiv	r3, r2, r3
 8004fb8:	4a22      	ldr	r2, [pc, #136]	@ (8005044 <UART_SetConfig+0x118>)
 8004fba:	fba2 2303 	umull	r2, r3, r2, r3
 8004fbe:	095b      	lsrs	r3, r3, #5
 8004fc0:	0119      	lsls	r1, r3, #4
 8004fc2:	68fa      	ldr	r2, [r7, #12]
 8004fc4:	4613      	mov	r3, r2
 8004fc6:	009b      	lsls	r3, r3, #2
 8004fc8:	4413      	add	r3, r2
 8004fca:	009a      	lsls	r2, r3, #2
 8004fcc:	441a      	add	r2, r3
 8004fce:	687b      	ldr	r3, [r7, #4]
 8004fd0:	685b      	ldr	r3, [r3, #4]
 8004fd2:	009b      	lsls	r3, r3, #2
 8004fd4:	fbb2 f2f3 	udiv	r2, r2, r3
 8004fd8:	4b1a      	ldr	r3, [pc, #104]	@ (8005044 <UART_SetConfig+0x118>)
 8004fda:	fba3 0302 	umull	r0, r3, r3, r2
 8004fde:	095b      	lsrs	r3, r3, #5
 8004fe0:	2064      	movs	r0, #100	@ 0x64
 8004fe2:	fb00 f303 	mul.w	r3, r0, r3
 8004fe6:	1ad3      	subs	r3, r2, r3
 8004fe8:	011b      	lsls	r3, r3, #4
 8004fea:	3332      	adds	r3, #50	@ 0x32
 8004fec:	4a15      	ldr	r2, [pc, #84]	@ (8005044 <UART_SetConfig+0x118>)
 8004fee:	fba2 2303 	umull	r2, r3, r2, r3
 8004ff2:	095b      	lsrs	r3, r3, #5
 8004ff4:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8004ff8:	4419      	add	r1, r3
 8004ffa:	68fa      	ldr	r2, [r7, #12]
 8004ffc:	4613      	mov	r3, r2
 8004ffe:	009b      	lsls	r3, r3, #2
 8005000:	4413      	add	r3, r2
 8005002:	009a      	lsls	r2, r3, #2
 8005004:	441a      	add	r2, r3
 8005006:	687b      	ldr	r3, [r7, #4]
 8005008:	685b      	ldr	r3, [r3, #4]
 800500a:	009b      	lsls	r3, r3, #2
 800500c:	fbb2 f2f3 	udiv	r2, r2, r3
 8005010:	4b0c      	ldr	r3, [pc, #48]	@ (8005044 <UART_SetConfig+0x118>)
 8005012:	fba3 0302 	umull	r0, r3, r3, r2
 8005016:	095b      	lsrs	r3, r3, #5
 8005018:	2064      	movs	r0, #100	@ 0x64
 800501a:	fb00 f303 	mul.w	r3, r0, r3
 800501e:	1ad3      	subs	r3, r2, r3
 8005020:	011b      	lsls	r3, r3, #4
 8005022:	3332      	adds	r3, #50	@ 0x32
 8005024:	4a07      	ldr	r2, [pc, #28]	@ (8005044 <UART_SetConfig+0x118>)
 8005026:	fba2 2303 	umull	r2, r3, r2, r3
 800502a:	095b      	lsrs	r3, r3, #5
 800502c:	f003 020f 	and.w	r2, r3, #15
 8005030:	687b      	ldr	r3, [r7, #4]
 8005032:	681b      	ldr	r3, [r3, #0]
 8005034:	440a      	add	r2, r1
 8005036:	609a      	str	r2, [r3, #8]
 8005038:	bf00      	nop
 800503a:	3710      	adds	r7, #16
 800503c:	46bd      	mov	sp, r7
 800503e:	bd80      	pop	{r7, pc}
 8005040:	40013800 	.word	0x40013800
 8005044:	51eb851f 	.word	0x51eb851f

08005048 <MX_FATFS_Init>:
/* USER CODE BEGIN Variables */

/* USER CODE END Variables */

void MX_FATFS_Init(void)
{
 8005048:	b580      	push	{r7, lr}
 800504a:	af00      	add	r7, sp, #0
  /*## FatFS: Link the USER driver ###########################*/
  retUSER = FATFS_LinkDriver(&USER_Driver, USERPath);
 800504c:	4904      	ldr	r1, [pc, #16]	@ (8005060 <MX_FATFS_Init+0x18>)
 800504e:	4805      	ldr	r0, [pc, #20]	@ (8005064 <MX_FATFS_Init+0x1c>)
 8005050:	f000 f8a6 	bl	80051a0 <FATFS_LinkDriver>
 8005054:	4603      	mov	r3, r0
 8005056:	461a      	mov	r2, r3
 8005058:	4b03      	ldr	r3, [pc, #12]	@ (8005068 <MX_FATFS_Init+0x20>)
 800505a:	701a      	strb	r2, [r3, #0]

  /* USER CODE BEGIN Init */
  /* additional user code for init */
  /* USER CODE END Init */
}
 800505c:	bf00      	nop
 800505e:	bd80      	pop	{r7, pc}
 8005060:	20000474 	.word	0x20000474
 8005064:	2000000c 	.word	0x2000000c
 8005068:	20000470 	.word	0x20000470

0800506c <USER_initialize>:
  * @retval DSTATUS: Operation status
  */
DSTATUS USER_initialize (
	BYTE pdrv           /* Physical drive nmuber to identify the drive */
)
{
 800506c:	b480      	push	{r7}
 800506e:	b083      	sub	sp, #12
 8005070:	af00      	add	r7, sp, #0
 8005072:	4603      	mov	r3, r0
 8005074:	71fb      	strb	r3, [r7, #7]
  /* USER CODE BEGIN INIT */
    Stat = STA_NOINIT;
 8005076:	4b05      	ldr	r3, [pc, #20]	@ (800508c <USER_initialize+0x20>)
 8005078:	2201      	movs	r2, #1
 800507a:	701a      	strb	r2, [r3, #0]
    return Stat;
 800507c:	4b03      	ldr	r3, [pc, #12]	@ (800508c <USER_initialize+0x20>)
 800507e:	781b      	ldrb	r3, [r3, #0]
 8005080:	b2db      	uxtb	r3, r3
  /* USER CODE END INIT */
}
 8005082:	4618      	mov	r0, r3
 8005084:	370c      	adds	r7, #12
 8005086:	46bd      	mov	sp, r7
 8005088:	bc80      	pop	{r7}
 800508a:	4770      	bx	lr
 800508c:	20000009 	.word	0x20000009

08005090 <USER_status>:
  * @retval DSTATUS: Operation status
  */
DSTATUS USER_status (
	BYTE pdrv       /* Physical drive number to identify the drive */
)
{
 8005090:	b480      	push	{r7}
 8005092:	b083      	sub	sp, #12
 8005094:	af00      	add	r7, sp, #0
 8005096:	4603      	mov	r3, r0
 8005098:	71fb      	strb	r3, [r7, #7]
  /* USER CODE BEGIN STATUS */
    Stat = STA_NOINIT;
 800509a:	4b05      	ldr	r3, [pc, #20]	@ (80050b0 <USER_status+0x20>)
 800509c:	2201      	movs	r2, #1
 800509e:	701a      	strb	r2, [r3, #0]
    return Stat;
 80050a0:	4b03      	ldr	r3, [pc, #12]	@ (80050b0 <USER_status+0x20>)
 80050a2:	781b      	ldrb	r3, [r3, #0]
 80050a4:	b2db      	uxtb	r3, r3
  /* USER CODE END STATUS */
}
 80050a6:	4618      	mov	r0, r3
 80050a8:	370c      	adds	r7, #12
 80050aa:	46bd      	mov	sp, r7
 80050ac:	bc80      	pop	{r7}
 80050ae:	4770      	bx	lr
 80050b0:	20000009 	.word	0x20000009

080050b4 <USER_read>:
	BYTE pdrv,      /* Physical drive nmuber to identify the drive */
	BYTE *buff,     /* Data buffer to store read data */
	DWORD sector,   /* Sector address in LBA */
	UINT count      /* Number of sectors to read */
)
{
 80050b4:	b480      	push	{r7}
 80050b6:	b085      	sub	sp, #20
 80050b8:	af00      	add	r7, sp, #0
 80050ba:	60b9      	str	r1, [r7, #8]
 80050bc:	607a      	str	r2, [r7, #4]
 80050be:	603b      	str	r3, [r7, #0]
 80050c0:	4603      	mov	r3, r0
 80050c2:	73fb      	strb	r3, [r7, #15]
  /* USER CODE BEGIN READ */
    return RES_OK;
 80050c4:	2300      	movs	r3, #0
  /* USER CODE END READ */
}
 80050c6:	4618      	mov	r0, r3
 80050c8:	3714      	adds	r7, #20
 80050ca:	46bd      	mov	sp, r7
 80050cc:	bc80      	pop	{r7}
 80050ce:	4770      	bx	lr

080050d0 <USER_write>:
	BYTE pdrv,          /* Physical drive nmuber to identify the drive */
	const BYTE *buff,   /* Data to be written */
	DWORD sector,       /* Sector address in LBA */
	UINT count          /* Number of sectors to write */
)
{
 80050d0:	b480      	push	{r7}
 80050d2:	b085      	sub	sp, #20
 80050d4:	af00      	add	r7, sp, #0
 80050d6:	60b9      	str	r1, [r7, #8]
 80050d8:	607a      	str	r2, [r7, #4]
 80050da:	603b      	str	r3, [r7, #0]
 80050dc:	4603      	mov	r3, r0
 80050de:	73fb      	strb	r3, [r7, #15]
  /* USER CODE BEGIN WRITE */
  /* USER CODE HERE */
    return RES_OK;
 80050e0:	2300      	movs	r3, #0
  /* USER CODE END WRITE */
}
 80050e2:	4618      	mov	r0, r3
 80050e4:	3714      	adds	r7, #20
 80050e6:	46bd      	mov	sp, r7
 80050e8:	bc80      	pop	{r7}
 80050ea:	4770      	bx	lr

080050ec <USER_ioctl>:
DRESULT USER_ioctl (
	BYTE pdrv,      /* Physical drive nmuber (0..) */
	BYTE cmd,       /* Control code */
	void *buff      /* Buffer to send/receive control data */
)
{
 80050ec:	b480      	push	{r7}
 80050ee:	b085      	sub	sp, #20
 80050f0:	af00      	add	r7, sp, #0
 80050f2:	4603      	mov	r3, r0
 80050f4:	603a      	str	r2, [r7, #0]
 80050f6:	71fb      	strb	r3, [r7, #7]
 80050f8:	460b      	mov	r3, r1
 80050fa:	71bb      	strb	r3, [r7, #6]
  /* USER CODE BEGIN IOCTL */
    DRESULT res = RES_ERROR;
 80050fc:	2301      	movs	r3, #1
 80050fe:	73fb      	strb	r3, [r7, #15]
    return res;
 8005100:	7bfb      	ldrb	r3, [r7, #15]
  /* USER CODE END IOCTL */
}
 8005102:	4618      	mov	r0, r3
 8005104:	3714      	adds	r7, #20
 8005106:	46bd      	mov	sp, r7
 8005108:	bc80      	pop	{r7}
 800510a:	4770      	bx	lr

0800510c <FATFS_LinkDriverEx>:
  * @param  lun : only used for USB Key Disk to add multi-lun management
            else the paramter must be equal to 0
  * @retval Returns 0 in case of success, otherwise 1.
  */
uint8_t FATFS_LinkDriverEx(Diskio_drvTypeDef *drv, char *path, uint8_t lun)
{
 800510c:	b480      	push	{r7}
 800510e:	b087      	sub	sp, #28
 8005110:	af00      	add	r7, sp, #0
 8005112:	60f8      	str	r0, [r7, #12]
 8005114:	60b9      	str	r1, [r7, #8]
 8005116:	4613      	mov	r3, r2
 8005118:	71fb      	strb	r3, [r7, #7]
  uint8_t ret = 1;
 800511a:	2301      	movs	r3, #1
 800511c:	75fb      	strb	r3, [r7, #23]
  uint8_t DiskNum = 0;
 800511e:	2300      	movs	r3, #0
 8005120:	75bb      	strb	r3, [r7, #22]
  
  if(disk.nbr <= _VOLUMES)
 8005122:	4b1e      	ldr	r3, [pc, #120]	@ (800519c <FATFS_LinkDriverEx+0x90>)
 8005124:	7a5b      	ldrb	r3, [r3, #9]
 8005126:	b2db      	uxtb	r3, r3
 8005128:	2b01      	cmp	r3, #1
 800512a:	d831      	bhi.n	8005190 <FATFS_LinkDriverEx+0x84>
  {
    disk.is_initialized[disk.nbr] = 0;
 800512c:	4b1b      	ldr	r3, [pc, #108]	@ (800519c <FATFS_LinkDriverEx+0x90>)
 800512e:	7a5b      	ldrb	r3, [r3, #9]
 8005130:	b2db      	uxtb	r3, r3
 8005132:	461a      	mov	r2, r3
 8005134:	4b19      	ldr	r3, [pc, #100]	@ (800519c <FATFS_LinkDriverEx+0x90>)
 8005136:	2100      	movs	r1, #0
 8005138:	5499      	strb	r1, [r3, r2]
    disk.drv[disk.nbr] = drv;  
 800513a:	4b18      	ldr	r3, [pc, #96]	@ (800519c <FATFS_LinkDriverEx+0x90>)
 800513c:	7a5b      	ldrb	r3, [r3, #9]
 800513e:	b2db      	uxtb	r3, r3
 8005140:	4a16      	ldr	r2, [pc, #88]	@ (800519c <FATFS_LinkDriverEx+0x90>)
 8005142:	009b      	lsls	r3, r3, #2
 8005144:	4413      	add	r3, r2
 8005146:	68fa      	ldr	r2, [r7, #12]
 8005148:	605a      	str	r2, [r3, #4]
    disk.lun[disk.nbr] = lun;  
 800514a:	4b14      	ldr	r3, [pc, #80]	@ (800519c <FATFS_LinkDriverEx+0x90>)
 800514c:	7a5b      	ldrb	r3, [r3, #9]
 800514e:	b2db      	uxtb	r3, r3
 8005150:	461a      	mov	r2, r3
 8005152:	4b12      	ldr	r3, [pc, #72]	@ (800519c <FATFS_LinkDriverEx+0x90>)
 8005154:	4413      	add	r3, r2
 8005156:	79fa      	ldrb	r2, [r7, #7]
 8005158:	721a      	strb	r2, [r3, #8]
    DiskNum = disk.nbr++;
 800515a:	4b10      	ldr	r3, [pc, #64]	@ (800519c <FATFS_LinkDriverEx+0x90>)
 800515c:	7a5b      	ldrb	r3, [r3, #9]
 800515e:	b2db      	uxtb	r3, r3
 8005160:	1c5a      	adds	r2, r3, #1
 8005162:	b2d1      	uxtb	r1, r2
 8005164:	4a0d      	ldr	r2, [pc, #52]	@ (800519c <FATFS_LinkDriverEx+0x90>)
 8005166:	7251      	strb	r1, [r2, #9]
 8005168:	75bb      	strb	r3, [r7, #22]
    path[0] = DiskNum + '0';
 800516a:	7dbb      	ldrb	r3, [r7, #22]
 800516c:	3330      	adds	r3, #48	@ 0x30
 800516e:	b2da      	uxtb	r2, r3
 8005170:	68bb      	ldr	r3, [r7, #8]
 8005172:	701a      	strb	r2, [r3, #0]
    path[1] = ':';
 8005174:	68bb      	ldr	r3, [r7, #8]
 8005176:	3301      	adds	r3, #1
 8005178:	223a      	movs	r2, #58	@ 0x3a
 800517a:	701a      	strb	r2, [r3, #0]
    path[2] = '/';
 800517c:	68bb      	ldr	r3, [r7, #8]
 800517e:	3302      	adds	r3, #2
 8005180:	222f      	movs	r2, #47	@ 0x2f
 8005182:	701a      	strb	r2, [r3, #0]
    path[3] = 0;
 8005184:	68bb      	ldr	r3, [r7, #8]
 8005186:	3303      	adds	r3, #3
 8005188:	2200      	movs	r2, #0
 800518a:	701a      	strb	r2, [r3, #0]
    ret = 0;
 800518c:	2300      	movs	r3, #0
 800518e:	75fb      	strb	r3, [r7, #23]
  }
  
  return ret;
 8005190:	7dfb      	ldrb	r3, [r7, #23]
}
 8005192:	4618      	mov	r0, r3
 8005194:	371c      	adds	r7, #28
 8005196:	46bd      	mov	sp, r7
 8005198:	bc80      	pop	{r7}
 800519a:	4770      	bx	lr
 800519c:	20000478 	.word	0x20000478

080051a0 <FATFS_LinkDriver>:
  * @param  drv: pointer to the disk IO Driver structure
  * @param  path: pointer to the logical drive path 
  * @retval Returns 0 in case of success, otherwise 1.
  */
uint8_t FATFS_LinkDriver(Diskio_drvTypeDef *drv, char *path)
{
 80051a0:	b580      	push	{r7, lr}
 80051a2:	b082      	sub	sp, #8
 80051a4:	af00      	add	r7, sp, #0
 80051a6:	6078      	str	r0, [r7, #4]
 80051a8:	6039      	str	r1, [r7, #0]
  return FATFS_LinkDriverEx(drv, path, 0);
 80051aa:	2200      	movs	r2, #0
 80051ac:	6839      	ldr	r1, [r7, #0]
 80051ae:	6878      	ldr	r0, [r7, #4]
 80051b0:	f7ff ffac 	bl	800510c <FATFS_LinkDriverEx>
 80051b4:	4603      	mov	r3, r0
}
 80051b6:	4618      	mov	r0, r3
 80051b8:	3708      	adds	r7, #8
 80051ba:	46bd      	mov	sp, r7
 80051bc:	bd80      	pop	{r7, pc}
	...

080051c0 <malloc>:
 80051c0:	4b02      	ldr	r3, [pc, #8]	@ (80051cc <malloc+0xc>)
 80051c2:	4601      	mov	r1, r0
 80051c4:	6818      	ldr	r0, [r3, #0]
 80051c6:	f000 b825 	b.w	8005214 <_malloc_r>
 80051ca:	bf00      	nop
 80051cc:	20000198 	.word	0x20000198

080051d0 <sbrk_aligned>:
 80051d0:	b570      	push	{r4, r5, r6, lr}
 80051d2:	4e0f      	ldr	r6, [pc, #60]	@ (8005210 <sbrk_aligned+0x40>)
 80051d4:	460c      	mov	r4, r1
 80051d6:	6831      	ldr	r1, [r6, #0]
 80051d8:	4605      	mov	r5, r0
 80051da:	b911      	cbnz	r1, 80051e2 <sbrk_aligned+0x12>
 80051dc:	f000 ff4c 	bl	8006078 <_sbrk_r>
 80051e0:	6030      	str	r0, [r6, #0]
 80051e2:	4621      	mov	r1, r4
 80051e4:	4628      	mov	r0, r5
 80051e6:	f000 ff47 	bl	8006078 <_sbrk_r>
 80051ea:	1c43      	adds	r3, r0, #1
 80051ec:	d103      	bne.n	80051f6 <sbrk_aligned+0x26>
 80051ee:	f04f 34ff 	mov.w	r4, #4294967295
 80051f2:	4620      	mov	r0, r4
 80051f4:	bd70      	pop	{r4, r5, r6, pc}
 80051f6:	1cc4      	adds	r4, r0, #3
 80051f8:	f024 0403 	bic.w	r4, r4, #3
 80051fc:	42a0      	cmp	r0, r4
 80051fe:	d0f8      	beq.n	80051f2 <sbrk_aligned+0x22>
 8005200:	1a21      	subs	r1, r4, r0
 8005202:	4628      	mov	r0, r5
 8005204:	f000 ff38 	bl	8006078 <_sbrk_r>
 8005208:	3001      	adds	r0, #1
 800520a:	d1f2      	bne.n	80051f2 <sbrk_aligned+0x22>
 800520c:	e7ef      	b.n	80051ee <sbrk_aligned+0x1e>
 800520e:	bf00      	nop
 8005210:	20000484 	.word	0x20000484

08005214 <_malloc_r>:
 8005214:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005218:	1ccd      	adds	r5, r1, #3
 800521a:	f025 0503 	bic.w	r5, r5, #3
 800521e:	3508      	adds	r5, #8
 8005220:	2d0c      	cmp	r5, #12
 8005222:	bf38      	it	cc
 8005224:	250c      	movcc	r5, #12
 8005226:	2d00      	cmp	r5, #0
 8005228:	4606      	mov	r6, r0
 800522a:	db01      	blt.n	8005230 <_malloc_r+0x1c>
 800522c:	42a9      	cmp	r1, r5
 800522e:	d904      	bls.n	800523a <_malloc_r+0x26>
 8005230:	230c      	movs	r3, #12
 8005232:	6033      	str	r3, [r6, #0]
 8005234:	2000      	movs	r0, #0
 8005236:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800523a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8005310 <_malloc_r+0xfc>
 800523e:	f000 f869 	bl	8005314 <__malloc_lock>
 8005242:	f8d8 3000 	ldr.w	r3, [r8]
 8005246:	461c      	mov	r4, r3
 8005248:	bb44      	cbnz	r4, 800529c <_malloc_r+0x88>
 800524a:	4629      	mov	r1, r5
 800524c:	4630      	mov	r0, r6
 800524e:	f7ff ffbf 	bl	80051d0 <sbrk_aligned>
 8005252:	1c43      	adds	r3, r0, #1
 8005254:	4604      	mov	r4, r0
 8005256:	d158      	bne.n	800530a <_malloc_r+0xf6>
 8005258:	f8d8 4000 	ldr.w	r4, [r8]
 800525c:	4627      	mov	r7, r4
 800525e:	2f00      	cmp	r7, #0
 8005260:	d143      	bne.n	80052ea <_malloc_r+0xd6>
 8005262:	2c00      	cmp	r4, #0
 8005264:	d04b      	beq.n	80052fe <_malloc_r+0xea>
 8005266:	6823      	ldr	r3, [r4, #0]
 8005268:	4639      	mov	r1, r7
 800526a:	4630      	mov	r0, r6
 800526c:	eb04 0903 	add.w	r9, r4, r3
 8005270:	f000 ff02 	bl	8006078 <_sbrk_r>
 8005274:	4581      	cmp	r9, r0
 8005276:	d142      	bne.n	80052fe <_malloc_r+0xea>
 8005278:	6821      	ldr	r1, [r4, #0]
 800527a:	4630      	mov	r0, r6
 800527c:	1a6d      	subs	r5, r5, r1
 800527e:	4629      	mov	r1, r5
 8005280:	f7ff ffa6 	bl	80051d0 <sbrk_aligned>
 8005284:	3001      	adds	r0, #1
 8005286:	d03a      	beq.n	80052fe <_malloc_r+0xea>
 8005288:	6823      	ldr	r3, [r4, #0]
 800528a:	442b      	add	r3, r5
 800528c:	6023      	str	r3, [r4, #0]
 800528e:	f8d8 3000 	ldr.w	r3, [r8]
 8005292:	685a      	ldr	r2, [r3, #4]
 8005294:	bb62      	cbnz	r2, 80052f0 <_malloc_r+0xdc>
 8005296:	f8c8 7000 	str.w	r7, [r8]
 800529a:	e00f      	b.n	80052bc <_malloc_r+0xa8>
 800529c:	6822      	ldr	r2, [r4, #0]
 800529e:	1b52      	subs	r2, r2, r5
 80052a0:	d420      	bmi.n	80052e4 <_malloc_r+0xd0>
 80052a2:	2a0b      	cmp	r2, #11
 80052a4:	d917      	bls.n	80052d6 <_malloc_r+0xc2>
 80052a6:	1961      	adds	r1, r4, r5
 80052a8:	42a3      	cmp	r3, r4
 80052aa:	6025      	str	r5, [r4, #0]
 80052ac:	bf18      	it	ne
 80052ae:	6059      	strne	r1, [r3, #4]
 80052b0:	6863      	ldr	r3, [r4, #4]
 80052b2:	bf08      	it	eq
 80052b4:	f8c8 1000 	streq.w	r1, [r8]
 80052b8:	5162      	str	r2, [r4, r5]
 80052ba:	604b      	str	r3, [r1, #4]
 80052bc:	4630      	mov	r0, r6
 80052be:	f000 f82f 	bl	8005320 <__malloc_unlock>
 80052c2:	f104 000b 	add.w	r0, r4, #11
 80052c6:	1d23      	adds	r3, r4, #4
 80052c8:	f020 0007 	bic.w	r0, r0, #7
 80052cc:	1ac2      	subs	r2, r0, r3
 80052ce:	bf1c      	itt	ne
 80052d0:	1a1b      	subne	r3, r3, r0
 80052d2:	50a3      	strne	r3, [r4, r2]
 80052d4:	e7af      	b.n	8005236 <_malloc_r+0x22>
 80052d6:	6862      	ldr	r2, [r4, #4]
 80052d8:	42a3      	cmp	r3, r4
 80052da:	bf0c      	ite	eq
 80052dc:	f8c8 2000 	streq.w	r2, [r8]
 80052e0:	605a      	strne	r2, [r3, #4]
 80052e2:	e7eb      	b.n	80052bc <_malloc_r+0xa8>
 80052e4:	4623      	mov	r3, r4
 80052e6:	6864      	ldr	r4, [r4, #4]
 80052e8:	e7ae      	b.n	8005248 <_malloc_r+0x34>
 80052ea:	463c      	mov	r4, r7
 80052ec:	687f      	ldr	r7, [r7, #4]
 80052ee:	e7b6      	b.n	800525e <_malloc_r+0x4a>
 80052f0:	461a      	mov	r2, r3
 80052f2:	685b      	ldr	r3, [r3, #4]
 80052f4:	42a3      	cmp	r3, r4
 80052f6:	d1fb      	bne.n	80052f0 <_malloc_r+0xdc>
 80052f8:	2300      	movs	r3, #0
 80052fa:	6053      	str	r3, [r2, #4]
 80052fc:	e7de      	b.n	80052bc <_malloc_r+0xa8>
 80052fe:	230c      	movs	r3, #12
 8005300:	4630      	mov	r0, r6
 8005302:	6033      	str	r3, [r6, #0]
 8005304:	f000 f80c 	bl	8005320 <__malloc_unlock>
 8005308:	e794      	b.n	8005234 <_malloc_r+0x20>
 800530a:	6005      	str	r5, [r0, #0]
 800530c:	e7d6      	b.n	80052bc <_malloc_r+0xa8>
 800530e:	bf00      	nop
 8005310:	20000488 	.word	0x20000488

08005314 <__malloc_lock>:
 8005314:	4801      	ldr	r0, [pc, #4]	@ (800531c <__malloc_lock+0x8>)
 8005316:	f000 befc 	b.w	8006112 <__retarget_lock_acquire_recursive>
 800531a:	bf00      	nop
 800531c:	200005cc 	.word	0x200005cc

08005320 <__malloc_unlock>:
 8005320:	4801      	ldr	r0, [pc, #4]	@ (8005328 <__malloc_unlock+0x8>)
 8005322:	f000 bef7 	b.w	8006114 <__retarget_lock_release_recursive>
 8005326:	bf00      	nop
 8005328:	200005cc 	.word	0x200005cc

0800532c <__cvt>:
 800532c:	2b00      	cmp	r3, #0
 800532e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005332:	461d      	mov	r5, r3
 8005334:	bfbb      	ittet	lt
 8005336:	f103 4300 	addlt.w	r3, r3, #2147483648	@ 0x80000000
 800533a:	461d      	movlt	r5, r3
 800533c:	2300      	movge	r3, #0
 800533e:	232d      	movlt	r3, #45	@ 0x2d
 8005340:	b088      	sub	sp, #32
 8005342:	4614      	mov	r4, r2
 8005344:	bfb8      	it	lt
 8005346:	4614      	movlt	r4, r2
 8005348:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800534a:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 800534c:	7013      	strb	r3, [r2, #0]
 800534e:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8005350:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 8005354:	f023 0820 	bic.w	r8, r3, #32
 8005358:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 800535c:	d005      	beq.n	800536a <__cvt+0x3e>
 800535e:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8005362:	d100      	bne.n	8005366 <__cvt+0x3a>
 8005364:	3601      	adds	r6, #1
 8005366:	2302      	movs	r3, #2
 8005368:	e000      	b.n	800536c <__cvt+0x40>
 800536a:	2303      	movs	r3, #3
 800536c:	aa07      	add	r2, sp, #28
 800536e:	9204      	str	r2, [sp, #16]
 8005370:	aa06      	add	r2, sp, #24
 8005372:	e9cd a202 	strd	sl, r2, [sp, #8]
 8005376:	e9cd 3600 	strd	r3, r6, [sp]
 800537a:	4622      	mov	r2, r4
 800537c:	462b      	mov	r3, r5
 800537e:	f000 ff8f 	bl	80062a0 <_dtoa_r>
 8005382:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8005386:	4607      	mov	r7, r0
 8005388:	d119      	bne.n	80053be <__cvt+0x92>
 800538a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800538c:	07db      	lsls	r3, r3, #31
 800538e:	d50e      	bpl.n	80053ae <__cvt+0x82>
 8005390:	eb00 0906 	add.w	r9, r0, r6
 8005394:	2200      	movs	r2, #0
 8005396:	2300      	movs	r3, #0
 8005398:	4620      	mov	r0, r4
 800539a:	4629      	mov	r1, r5
 800539c:	f7fb fb04 	bl	80009a8 <__aeabi_dcmpeq>
 80053a0:	b108      	cbz	r0, 80053a6 <__cvt+0x7a>
 80053a2:	f8cd 901c 	str.w	r9, [sp, #28]
 80053a6:	2230      	movs	r2, #48	@ 0x30
 80053a8:	9b07      	ldr	r3, [sp, #28]
 80053aa:	454b      	cmp	r3, r9
 80053ac:	d31e      	bcc.n	80053ec <__cvt+0xc0>
 80053ae:	4638      	mov	r0, r7
 80053b0:	9b07      	ldr	r3, [sp, #28]
 80053b2:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 80053b4:	1bdb      	subs	r3, r3, r7
 80053b6:	6013      	str	r3, [r2, #0]
 80053b8:	b008      	add	sp, #32
 80053ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80053be:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 80053c2:	eb00 0906 	add.w	r9, r0, r6
 80053c6:	d1e5      	bne.n	8005394 <__cvt+0x68>
 80053c8:	7803      	ldrb	r3, [r0, #0]
 80053ca:	2b30      	cmp	r3, #48	@ 0x30
 80053cc:	d10a      	bne.n	80053e4 <__cvt+0xb8>
 80053ce:	2200      	movs	r2, #0
 80053d0:	2300      	movs	r3, #0
 80053d2:	4620      	mov	r0, r4
 80053d4:	4629      	mov	r1, r5
 80053d6:	f7fb fae7 	bl	80009a8 <__aeabi_dcmpeq>
 80053da:	b918      	cbnz	r0, 80053e4 <__cvt+0xb8>
 80053dc:	f1c6 0601 	rsb	r6, r6, #1
 80053e0:	f8ca 6000 	str.w	r6, [sl]
 80053e4:	f8da 3000 	ldr.w	r3, [sl]
 80053e8:	4499      	add	r9, r3
 80053ea:	e7d3      	b.n	8005394 <__cvt+0x68>
 80053ec:	1c59      	adds	r1, r3, #1
 80053ee:	9107      	str	r1, [sp, #28]
 80053f0:	701a      	strb	r2, [r3, #0]
 80053f2:	e7d9      	b.n	80053a8 <__cvt+0x7c>

080053f4 <__exponent>:
 80053f4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80053f6:	2900      	cmp	r1, #0
 80053f8:	bfb6      	itet	lt
 80053fa:	232d      	movlt	r3, #45	@ 0x2d
 80053fc:	232b      	movge	r3, #43	@ 0x2b
 80053fe:	4249      	neglt	r1, r1
 8005400:	2909      	cmp	r1, #9
 8005402:	7002      	strb	r2, [r0, #0]
 8005404:	7043      	strb	r3, [r0, #1]
 8005406:	dd29      	ble.n	800545c <__exponent+0x68>
 8005408:	f10d 0307 	add.w	r3, sp, #7
 800540c:	461d      	mov	r5, r3
 800540e:	270a      	movs	r7, #10
 8005410:	fbb1 f6f7 	udiv	r6, r1, r7
 8005414:	461a      	mov	r2, r3
 8005416:	fb07 1416 	mls	r4, r7, r6, r1
 800541a:	3430      	adds	r4, #48	@ 0x30
 800541c:	f802 4c01 	strb.w	r4, [r2, #-1]
 8005420:	460c      	mov	r4, r1
 8005422:	2c63      	cmp	r4, #99	@ 0x63
 8005424:	4631      	mov	r1, r6
 8005426:	f103 33ff 	add.w	r3, r3, #4294967295
 800542a:	dcf1      	bgt.n	8005410 <__exponent+0x1c>
 800542c:	3130      	adds	r1, #48	@ 0x30
 800542e:	1e94      	subs	r4, r2, #2
 8005430:	f803 1c01 	strb.w	r1, [r3, #-1]
 8005434:	4623      	mov	r3, r4
 8005436:	1c41      	adds	r1, r0, #1
 8005438:	42ab      	cmp	r3, r5
 800543a:	d30a      	bcc.n	8005452 <__exponent+0x5e>
 800543c:	f10d 0309 	add.w	r3, sp, #9
 8005440:	1a9b      	subs	r3, r3, r2
 8005442:	42ac      	cmp	r4, r5
 8005444:	bf88      	it	hi
 8005446:	2300      	movhi	r3, #0
 8005448:	3302      	adds	r3, #2
 800544a:	4403      	add	r3, r0
 800544c:	1a18      	subs	r0, r3, r0
 800544e:	b003      	add	sp, #12
 8005450:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005452:	f813 6b01 	ldrb.w	r6, [r3], #1
 8005456:	f801 6f01 	strb.w	r6, [r1, #1]!
 800545a:	e7ed      	b.n	8005438 <__exponent+0x44>
 800545c:	2330      	movs	r3, #48	@ 0x30
 800545e:	3130      	adds	r1, #48	@ 0x30
 8005460:	7083      	strb	r3, [r0, #2]
 8005462:	70c1      	strb	r1, [r0, #3]
 8005464:	1d03      	adds	r3, r0, #4
 8005466:	e7f1      	b.n	800544c <__exponent+0x58>

08005468 <_printf_float>:
 8005468:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800546c:	b091      	sub	sp, #68	@ 0x44
 800546e:	460c      	mov	r4, r1
 8005470:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
 8005474:	4616      	mov	r6, r2
 8005476:	461f      	mov	r7, r3
 8005478:	4605      	mov	r5, r0
 800547a:	f000 fdc5 	bl	8006008 <_localeconv_r>
 800547e:	6803      	ldr	r3, [r0, #0]
 8005480:	4618      	mov	r0, r3
 8005482:	9308      	str	r3, [sp, #32]
 8005484:	f7fa fe64 	bl	8000150 <strlen>
 8005488:	2300      	movs	r3, #0
 800548a:	930e      	str	r3, [sp, #56]	@ 0x38
 800548c:	f8d8 3000 	ldr.w	r3, [r8]
 8005490:	9009      	str	r0, [sp, #36]	@ 0x24
 8005492:	3307      	adds	r3, #7
 8005494:	f023 0307 	bic.w	r3, r3, #7
 8005498:	f103 0208 	add.w	r2, r3, #8
 800549c:	f894 a018 	ldrb.w	sl, [r4, #24]
 80054a0:	f8d4 b000 	ldr.w	fp, [r4]
 80054a4:	f8c8 2000 	str.w	r2, [r8]
 80054a8:	e9d3 8900 	ldrd	r8, r9, [r3]
 80054ac:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 80054b0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80054b2:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 80054b6:	f04f 32ff 	mov.w	r2, #4294967295
 80054ba:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80054be:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 80054c2:	4b9c      	ldr	r3, [pc, #624]	@ (8005734 <_printf_float+0x2cc>)
 80054c4:	f7fb faa2 	bl	8000a0c <__aeabi_dcmpun>
 80054c8:	bb70      	cbnz	r0, 8005528 <_printf_float+0xc0>
 80054ca:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80054ce:	f04f 32ff 	mov.w	r2, #4294967295
 80054d2:	4b98      	ldr	r3, [pc, #608]	@ (8005734 <_printf_float+0x2cc>)
 80054d4:	f7fb fa7c 	bl	80009d0 <__aeabi_dcmple>
 80054d8:	bb30      	cbnz	r0, 8005528 <_printf_float+0xc0>
 80054da:	2200      	movs	r2, #0
 80054dc:	2300      	movs	r3, #0
 80054de:	4640      	mov	r0, r8
 80054e0:	4649      	mov	r1, r9
 80054e2:	f7fb fa6b 	bl	80009bc <__aeabi_dcmplt>
 80054e6:	b110      	cbz	r0, 80054ee <_printf_float+0x86>
 80054e8:	232d      	movs	r3, #45	@ 0x2d
 80054ea:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80054ee:	4a92      	ldr	r2, [pc, #584]	@ (8005738 <_printf_float+0x2d0>)
 80054f0:	4b92      	ldr	r3, [pc, #584]	@ (800573c <_printf_float+0x2d4>)
 80054f2:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 80054f6:	bf94      	ite	ls
 80054f8:	4690      	movls	r8, r2
 80054fa:	4698      	movhi	r8, r3
 80054fc:	2303      	movs	r3, #3
 80054fe:	f04f 0900 	mov.w	r9, #0
 8005502:	6123      	str	r3, [r4, #16]
 8005504:	f02b 0304 	bic.w	r3, fp, #4
 8005508:	6023      	str	r3, [r4, #0]
 800550a:	4633      	mov	r3, r6
 800550c:	4621      	mov	r1, r4
 800550e:	4628      	mov	r0, r5
 8005510:	9700      	str	r7, [sp, #0]
 8005512:	aa0f      	add	r2, sp, #60	@ 0x3c
 8005514:	f000 f9d4 	bl	80058c0 <_printf_common>
 8005518:	3001      	adds	r0, #1
 800551a:	f040 8090 	bne.w	800563e <_printf_float+0x1d6>
 800551e:	f04f 30ff 	mov.w	r0, #4294967295
 8005522:	b011      	add	sp, #68	@ 0x44
 8005524:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005528:	4642      	mov	r2, r8
 800552a:	464b      	mov	r3, r9
 800552c:	4640      	mov	r0, r8
 800552e:	4649      	mov	r1, r9
 8005530:	f7fb fa6c 	bl	8000a0c <__aeabi_dcmpun>
 8005534:	b148      	cbz	r0, 800554a <_printf_float+0xe2>
 8005536:	464b      	mov	r3, r9
 8005538:	2b00      	cmp	r3, #0
 800553a:	bfb8      	it	lt
 800553c:	232d      	movlt	r3, #45	@ 0x2d
 800553e:	4a80      	ldr	r2, [pc, #512]	@ (8005740 <_printf_float+0x2d8>)
 8005540:	bfb8      	it	lt
 8005542:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8005546:	4b7f      	ldr	r3, [pc, #508]	@ (8005744 <_printf_float+0x2dc>)
 8005548:	e7d3      	b.n	80054f2 <_printf_float+0x8a>
 800554a:	6863      	ldr	r3, [r4, #4]
 800554c:	f00a 01df 	and.w	r1, sl, #223	@ 0xdf
 8005550:	1c5a      	adds	r2, r3, #1
 8005552:	d13f      	bne.n	80055d4 <_printf_float+0x16c>
 8005554:	2306      	movs	r3, #6
 8005556:	6063      	str	r3, [r4, #4]
 8005558:	2200      	movs	r2, #0
 800555a:	f44b 6380 	orr.w	r3, fp, #1024	@ 0x400
 800555e:	6023      	str	r3, [r4, #0]
 8005560:	9206      	str	r2, [sp, #24]
 8005562:	aa0e      	add	r2, sp, #56	@ 0x38
 8005564:	e9cd a204 	strd	sl, r2, [sp, #16]
 8005568:	aa0d      	add	r2, sp, #52	@ 0x34
 800556a:	9203      	str	r2, [sp, #12]
 800556c:	f10d 0233 	add.w	r2, sp, #51	@ 0x33
 8005570:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8005574:	6863      	ldr	r3, [r4, #4]
 8005576:	4642      	mov	r2, r8
 8005578:	9300      	str	r3, [sp, #0]
 800557a:	4628      	mov	r0, r5
 800557c:	464b      	mov	r3, r9
 800557e:	910a      	str	r1, [sp, #40]	@ 0x28
 8005580:	f7ff fed4 	bl	800532c <__cvt>
 8005584:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005586:	4680      	mov	r8, r0
 8005588:	2947      	cmp	r1, #71	@ 0x47
 800558a:	990d      	ldr	r1, [sp, #52]	@ 0x34
 800558c:	d128      	bne.n	80055e0 <_printf_float+0x178>
 800558e:	1cc8      	adds	r0, r1, #3
 8005590:	db02      	blt.n	8005598 <_printf_float+0x130>
 8005592:	6863      	ldr	r3, [r4, #4]
 8005594:	4299      	cmp	r1, r3
 8005596:	dd40      	ble.n	800561a <_printf_float+0x1b2>
 8005598:	f1aa 0a02 	sub.w	sl, sl, #2
 800559c:	fa5f fa8a 	uxtb.w	sl, sl
 80055a0:	4652      	mov	r2, sl
 80055a2:	3901      	subs	r1, #1
 80055a4:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 80055a8:	910d      	str	r1, [sp, #52]	@ 0x34
 80055aa:	f7ff ff23 	bl	80053f4 <__exponent>
 80055ae:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80055b0:	4681      	mov	r9, r0
 80055b2:	1813      	adds	r3, r2, r0
 80055b4:	2a01      	cmp	r2, #1
 80055b6:	6123      	str	r3, [r4, #16]
 80055b8:	dc02      	bgt.n	80055c0 <_printf_float+0x158>
 80055ba:	6822      	ldr	r2, [r4, #0]
 80055bc:	07d2      	lsls	r2, r2, #31
 80055be:	d501      	bpl.n	80055c4 <_printf_float+0x15c>
 80055c0:	3301      	adds	r3, #1
 80055c2:	6123      	str	r3, [r4, #16]
 80055c4:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 80055c8:	2b00      	cmp	r3, #0
 80055ca:	d09e      	beq.n	800550a <_printf_float+0xa2>
 80055cc:	232d      	movs	r3, #45	@ 0x2d
 80055ce:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80055d2:	e79a      	b.n	800550a <_printf_float+0xa2>
 80055d4:	2947      	cmp	r1, #71	@ 0x47
 80055d6:	d1bf      	bne.n	8005558 <_printf_float+0xf0>
 80055d8:	2b00      	cmp	r3, #0
 80055da:	d1bd      	bne.n	8005558 <_printf_float+0xf0>
 80055dc:	2301      	movs	r3, #1
 80055de:	e7ba      	b.n	8005556 <_printf_float+0xee>
 80055e0:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 80055e4:	d9dc      	bls.n	80055a0 <_printf_float+0x138>
 80055e6:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 80055ea:	d118      	bne.n	800561e <_printf_float+0x1b6>
 80055ec:	2900      	cmp	r1, #0
 80055ee:	6863      	ldr	r3, [r4, #4]
 80055f0:	dd0b      	ble.n	800560a <_printf_float+0x1a2>
 80055f2:	6121      	str	r1, [r4, #16]
 80055f4:	b913      	cbnz	r3, 80055fc <_printf_float+0x194>
 80055f6:	6822      	ldr	r2, [r4, #0]
 80055f8:	07d0      	lsls	r0, r2, #31
 80055fa:	d502      	bpl.n	8005602 <_printf_float+0x19a>
 80055fc:	3301      	adds	r3, #1
 80055fe:	440b      	add	r3, r1
 8005600:	6123      	str	r3, [r4, #16]
 8005602:	f04f 0900 	mov.w	r9, #0
 8005606:	65a1      	str	r1, [r4, #88]	@ 0x58
 8005608:	e7dc      	b.n	80055c4 <_printf_float+0x15c>
 800560a:	b913      	cbnz	r3, 8005612 <_printf_float+0x1aa>
 800560c:	6822      	ldr	r2, [r4, #0]
 800560e:	07d2      	lsls	r2, r2, #31
 8005610:	d501      	bpl.n	8005616 <_printf_float+0x1ae>
 8005612:	3302      	adds	r3, #2
 8005614:	e7f4      	b.n	8005600 <_printf_float+0x198>
 8005616:	2301      	movs	r3, #1
 8005618:	e7f2      	b.n	8005600 <_printf_float+0x198>
 800561a:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 800561e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005620:	4299      	cmp	r1, r3
 8005622:	db05      	blt.n	8005630 <_printf_float+0x1c8>
 8005624:	6823      	ldr	r3, [r4, #0]
 8005626:	6121      	str	r1, [r4, #16]
 8005628:	07d8      	lsls	r0, r3, #31
 800562a:	d5ea      	bpl.n	8005602 <_printf_float+0x19a>
 800562c:	1c4b      	adds	r3, r1, #1
 800562e:	e7e7      	b.n	8005600 <_printf_float+0x198>
 8005630:	2900      	cmp	r1, #0
 8005632:	bfcc      	ite	gt
 8005634:	2201      	movgt	r2, #1
 8005636:	f1c1 0202 	rsble	r2, r1, #2
 800563a:	4413      	add	r3, r2
 800563c:	e7e0      	b.n	8005600 <_printf_float+0x198>
 800563e:	6823      	ldr	r3, [r4, #0]
 8005640:	055a      	lsls	r2, r3, #21
 8005642:	d407      	bmi.n	8005654 <_printf_float+0x1ec>
 8005644:	6923      	ldr	r3, [r4, #16]
 8005646:	4642      	mov	r2, r8
 8005648:	4631      	mov	r1, r6
 800564a:	4628      	mov	r0, r5
 800564c:	47b8      	blx	r7
 800564e:	3001      	adds	r0, #1
 8005650:	d12b      	bne.n	80056aa <_printf_float+0x242>
 8005652:	e764      	b.n	800551e <_printf_float+0xb6>
 8005654:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8005658:	f240 80dc 	bls.w	8005814 <_printf_float+0x3ac>
 800565c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8005660:	2200      	movs	r2, #0
 8005662:	2300      	movs	r3, #0
 8005664:	f7fb f9a0 	bl	80009a8 <__aeabi_dcmpeq>
 8005668:	2800      	cmp	r0, #0
 800566a:	d033      	beq.n	80056d4 <_printf_float+0x26c>
 800566c:	2301      	movs	r3, #1
 800566e:	4631      	mov	r1, r6
 8005670:	4628      	mov	r0, r5
 8005672:	4a35      	ldr	r2, [pc, #212]	@ (8005748 <_printf_float+0x2e0>)
 8005674:	47b8      	blx	r7
 8005676:	3001      	adds	r0, #1
 8005678:	f43f af51 	beq.w	800551e <_printf_float+0xb6>
 800567c:	e9dd 380d 	ldrd	r3, r8, [sp, #52]	@ 0x34
 8005680:	4543      	cmp	r3, r8
 8005682:	db02      	blt.n	800568a <_printf_float+0x222>
 8005684:	6823      	ldr	r3, [r4, #0]
 8005686:	07d8      	lsls	r0, r3, #31
 8005688:	d50f      	bpl.n	80056aa <_printf_float+0x242>
 800568a:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800568e:	4631      	mov	r1, r6
 8005690:	4628      	mov	r0, r5
 8005692:	47b8      	blx	r7
 8005694:	3001      	adds	r0, #1
 8005696:	f43f af42 	beq.w	800551e <_printf_float+0xb6>
 800569a:	f04f 0900 	mov.w	r9, #0
 800569e:	f108 38ff 	add.w	r8, r8, #4294967295
 80056a2:	f104 0a1a 	add.w	sl, r4, #26
 80056a6:	45c8      	cmp	r8, r9
 80056a8:	dc09      	bgt.n	80056be <_printf_float+0x256>
 80056aa:	6823      	ldr	r3, [r4, #0]
 80056ac:	079b      	lsls	r3, r3, #30
 80056ae:	f100 8102 	bmi.w	80058b6 <_printf_float+0x44e>
 80056b2:	68e0      	ldr	r0, [r4, #12]
 80056b4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80056b6:	4298      	cmp	r0, r3
 80056b8:	bfb8      	it	lt
 80056ba:	4618      	movlt	r0, r3
 80056bc:	e731      	b.n	8005522 <_printf_float+0xba>
 80056be:	2301      	movs	r3, #1
 80056c0:	4652      	mov	r2, sl
 80056c2:	4631      	mov	r1, r6
 80056c4:	4628      	mov	r0, r5
 80056c6:	47b8      	blx	r7
 80056c8:	3001      	adds	r0, #1
 80056ca:	f43f af28 	beq.w	800551e <_printf_float+0xb6>
 80056ce:	f109 0901 	add.w	r9, r9, #1
 80056d2:	e7e8      	b.n	80056a6 <_printf_float+0x23e>
 80056d4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80056d6:	2b00      	cmp	r3, #0
 80056d8:	dc38      	bgt.n	800574c <_printf_float+0x2e4>
 80056da:	2301      	movs	r3, #1
 80056dc:	4631      	mov	r1, r6
 80056de:	4628      	mov	r0, r5
 80056e0:	4a19      	ldr	r2, [pc, #100]	@ (8005748 <_printf_float+0x2e0>)
 80056e2:	47b8      	blx	r7
 80056e4:	3001      	adds	r0, #1
 80056e6:	f43f af1a 	beq.w	800551e <_printf_float+0xb6>
 80056ea:	e9dd 390d 	ldrd	r3, r9, [sp, #52]	@ 0x34
 80056ee:	ea59 0303 	orrs.w	r3, r9, r3
 80056f2:	d102      	bne.n	80056fa <_printf_float+0x292>
 80056f4:	6823      	ldr	r3, [r4, #0]
 80056f6:	07d9      	lsls	r1, r3, #31
 80056f8:	d5d7      	bpl.n	80056aa <_printf_float+0x242>
 80056fa:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80056fe:	4631      	mov	r1, r6
 8005700:	4628      	mov	r0, r5
 8005702:	47b8      	blx	r7
 8005704:	3001      	adds	r0, #1
 8005706:	f43f af0a 	beq.w	800551e <_printf_float+0xb6>
 800570a:	f04f 0a00 	mov.w	sl, #0
 800570e:	f104 0b1a 	add.w	fp, r4, #26
 8005712:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8005714:	425b      	negs	r3, r3
 8005716:	4553      	cmp	r3, sl
 8005718:	dc01      	bgt.n	800571e <_printf_float+0x2b6>
 800571a:	464b      	mov	r3, r9
 800571c:	e793      	b.n	8005646 <_printf_float+0x1de>
 800571e:	2301      	movs	r3, #1
 8005720:	465a      	mov	r2, fp
 8005722:	4631      	mov	r1, r6
 8005724:	4628      	mov	r0, r5
 8005726:	47b8      	blx	r7
 8005728:	3001      	adds	r0, #1
 800572a:	f43f aef8 	beq.w	800551e <_printf_float+0xb6>
 800572e:	f10a 0a01 	add.w	sl, sl, #1
 8005732:	e7ee      	b.n	8005712 <_printf_float+0x2aa>
 8005734:	7fefffff 	.word	0x7fefffff
 8005738:	08007eba 	.word	0x08007eba
 800573c:	08007ebe 	.word	0x08007ebe
 8005740:	08007ec2 	.word	0x08007ec2
 8005744:	08007ec6 	.word	0x08007ec6
 8005748:	08007eca 	.word	0x08007eca
 800574c:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800574e:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8005752:	4553      	cmp	r3, sl
 8005754:	bfa8      	it	ge
 8005756:	4653      	movge	r3, sl
 8005758:	2b00      	cmp	r3, #0
 800575a:	4699      	mov	r9, r3
 800575c:	dc36      	bgt.n	80057cc <_printf_float+0x364>
 800575e:	f04f 0b00 	mov.w	fp, #0
 8005762:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8005766:	f104 021a 	add.w	r2, r4, #26
 800576a:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800576c:	930a      	str	r3, [sp, #40]	@ 0x28
 800576e:	eba3 0309 	sub.w	r3, r3, r9
 8005772:	455b      	cmp	r3, fp
 8005774:	dc31      	bgt.n	80057da <_printf_float+0x372>
 8005776:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8005778:	459a      	cmp	sl, r3
 800577a:	dc3a      	bgt.n	80057f2 <_printf_float+0x38a>
 800577c:	6823      	ldr	r3, [r4, #0]
 800577e:	07da      	lsls	r2, r3, #31
 8005780:	d437      	bmi.n	80057f2 <_printf_float+0x38a>
 8005782:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8005784:	ebaa 0903 	sub.w	r9, sl, r3
 8005788:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800578a:	ebaa 0303 	sub.w	r3, sl, r3
 800578e:	4599      	cmp	r9, r3
 8005790:	bfa8      	it	ge
 8005792:	4699      	movge	r9, r3
 8005794:	f1b9 0f00 	cmp.w	r9, #0
 8005798:	dc33      	bgt.n	8005802 <_printf_float+0x39a>
 800579a:	f04f 0800 	mov.w	r8, #0
 800579e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80057a2:	f104 0b1a 	add.w	fp, r4, #26
 80057a6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80057a8:	ebaa 0303 	sub.w	r3, sl, r3
 80057ac:	eba3 0309 	sub.w	r3, r3, r9
 80057b0:	4543      	cmp	r3, r8
 80057b2:	f77f af7a 	ble.w	80056aa <_printf_float+0x242>
 80057b6:	2301      	movs	r3, #1
 80057b8:	465a      	mov	r2, fp
 80057ba:	4631      	mov	r1, r6
 80057bc:	4628      	mov	r0, r5
 80057be:	47b8      	blx	r7
 80057c0:	3001      	adds	r0, #1
 80057c2:	f43f aeac 	beq.w	800551e <_printf_float+0xb6>
 80057c6:	f108 0801 	add.w	r8, r8, #1
 80057ca:	e7ec      	b.n	80057a6 <_printf_float+0x33e>
 80057cc:	4642      	mov	r2, r8
 80057ce:	4631      	mov	r1, r6
 80057d0:	4628      	mov	r0, r5
 80057d2:	47b8      	blx	r7
 80057d4:	3001      	adds	r0, #1
 80057d6:	d1c2      	bne.n	800575e <_printf_float+0x2f6>
 80057d8:	e6a1      	b.n	800551e <_printf_float+0xb6>
 80057da:	2301      	movs	r3, #1
 80057dc:	4631      	mov	r1, r6
 80057de:	4628      	mov	r0, r5
 80057e0:	920a      	str	r2, [sp, #40]	@ 0x28
 80057e2:	47b8      	blx	r7
 80057e4:	3001      	adds	r0, #1
 80057e6:	f43f ae9a 	beq.w	800551e <_printf_float+0xb6>
 80057ea:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80057ec:	f10b 0b01 	add.w	fp, fp, #1
 80057f0:	e7bb      	b.n	800576a <_printf_float+0x302>
 80057f2:	4631      	mov	r1, r6
 80057f4:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80057f8:	4628      	mov	r0, r5
 80057fa:	47b8      	blx	r7
 80057fc:	3001      	adds	r0, #1
 80057fe:	d1c0      	bne.n	8005782 <_printf_float+0x31a>
 8005800:	e68d      	b.n	800551e <_printf_float+0xb6>
 8005802:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8005804:	464b      	mov	r3, r9
 8005806:	4631      	mov	r1, r6
 8005808:	4628      	mov	r0, r5
 800580a:	4442      	add	r2, r8
 800580c:	47b8      	blx	r7
 800580e:	3001      	adds	r0, #1
 8005810:	d1c3      	bne.n	800579a <_printf_float+0x332>
 8005812:	e684      	b.n	800551e <_printf_float+0xb6>
 8005814:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8005818:	f1ba 0f01 	cmp.w	sl, #1
 800581c:	dc01      	bgt.n	8005822 <_printf_float+0x3ba>
 800581e:	07db      	lsls	r3, r3, #31
 8005820:	d536      	bpl.n	8005890 <_printf_float+0x428>
 8005822:	2301      	movs	r3, #1
 8005824:	4642      	mov	r2, r8
 8005826:	4631      	mov	r1, r6
 8005828:	4628      	mov	r0, r5
 800582a:	47b8      	blx	r7
 800582c:	3001      	adds	r0, #1
 800582e:	f43f ae76 	beq.w	800551e <_printf_float+0xb6>
 8005832:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8005836:	4631      	mov	r1, r6
 8005838:	4628      	mov	r0, r5
 800583a:	47b8      	blx	r7
 800583c:	3001      	adds	r0, #1
 800583e:	f43f ae6e 	beq.w	800551e <_printf_float+0xb6>
 8005842:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8005846:	2200      	movs	r2, #0
 8005848:	2300      	movs	r3, #0
 800584a:	f10a 3aff 	add.w	sl, sl, #4294967295
 800584e:	f7fb f8ab 	bl	80009a8 <__aeabi_dcmpeq>
 8005852:	b9c0      	cbnz	r0, 8005886 <_printf_float+0x41e>
 8005854:	4653      	mov	r3, sl
 8005856:	f108 0201 	add.w	r2, r8, #1
 800585a:	4631      	mov	r1, r6
 800585c:	4628      	mov	r0, r5
 800585e:	47b8      	blx	r7
 8005860:	3001      	adds	r0, #1
 8005862:	d10c      	bne.n	800587e <_printf_float+0x416>
 8005864:	e65b      	b.n	800551e <_printf_float+0xb6>
 8005866:	2301      	movs	r3, #1
 8005868:	465a      	mov	r2, fp
 800586a:	4631      	mov	r1, r6
 800586c:	4628      	mov	r0, r5
 800586e:	47b8      	blx	r7
 8005870:	3001      	adds	r0, #1
 8005872:	f43f ae54 	beq.w	800551e <_printf_float+0xb6>
 8005876:	f108 0801 	add.w	r8, r8, #1
 800587a:	45d0      	cmp	r8, sl
 800587c:	dbf3      	blt.n	8005866 <_printf_float+0x3fe>
 800587e:	464b      	mov	r3, r9
 8005880:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8005884:	e6e0      	b.n	8005648 <_printf_float+0x1e0>
 8005886:	f04f 0800 	mov.w	r8, #0
 800588a:	f104 0b1a 	add.w	fp, r4, #26
 800588e:	e7f4      	b.n	800587a <_printf_float+0x412>
 8005890:	2301      	movs	r3, #1
 8005892:	4642      	mov	r2, r8
 8005894:	e7e1      	b.n	800585a <_printf_float+0x3f2>
 8005896:	2301      	movs	r3, #1
 8005898:	464a      	mov	r2, r9
 800589a:	4631      	mov	r1, r6
 800589c:	4628      	mov	r0, r5
 800589e:	47b8      	blx	r7
 80058a0:	3001      	adds	r0, #1
 80058a2:	f43f ae3c 	beq.w	800551e <_printf_float+0xb6>
 80058a6:	f108 0801 	add.w	r8, r8, #1
 80058aa:	68e3      	ldr	r3, [r4, #12]
 80058ac:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80058ae:	1a5b      	subs	r3, r3, r1
 80058b0:	4543      	cmp	r3, r8
 80058b2:	dcf0      	bgt.n	8005896 <_printf_float+0x42e>
 80058b4:	e6fd      	b.n	80056b2 <_printf_float+0x24a>
 80058b6:	f04f 0800 	mov.w	r8, #0
 80058ba:	f104 0919 	add.w	r9, r4, #25
 80058be:	e7f4      	b.n	80058aa <_printf_float+0x442>

080058c0 <_printf_common>:
 80058c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80058c4:	4616      	mov	r6, r2
 80058c6:	4698      	mov	r8, r3
 80058c8:	688a      	ldr	r2, [r1, #8]
 80058ca:	690b      	ldr	r3, [r1, #16]
 80058cc:	4607      	mov	r7, r0
 80058ce:	4293      	cmp	r3, r2
 80058d0:	bfb8      	it	lt
 80058d2:	4613      	movlt	r3, r2
 80058d4:	6033      	str	r3, [r6, #0]
 80058d6:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80058da:	460c      	mov	r4, r1
 80058dc:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80058e0:	b10a      	cbz	r2, 80058e6 <_printf_common+0x26>
 80058e2:	3301      	adds	r3, #1
 80058e4:	6033      	str	r3, [r6, #0]
 80058e6:	6823      	ldr	r3, [r4, #0]
 80058e8:	0699      	lsls	r1, r3, #26
 80058ea:	bf42      	ittt	mi
 80058ec:	6833      	ldrmi	r3, [r6, #0]
 80058ee:	3302      	addmi	r3, #2
 80058f0:	6033      	strmi	r3, [r6, #0]
 80058f2:	6825      	ldr	r5, [r4, #0]
 80058f4:	f015 0506 	ands.w	r5, r5, #6
 80058f8:	d106      	bne.n	8005908 <_printf_common+0x48>
 80058fa:	f104 0a19 	add.w	sl, r4, #25
 80058fe:	68e3      	ldr	r3, [r4, #12]
 8005900:	6832      	ldr	r2, [r6, #0]
 8005902:	1a9b      	subs	r3, r3, r2
 8005904:	42ab      	cmp	r3, r5
 8005906:	dc2b      	bgt.n	8005960 <_printf_common+0xa0>
 8005908:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 800590c:	6822      	ldr	r2, [r4, #0]
 800590e:	3b00      	subs	r3, #0
 8005910:	bf18      	it	ne
 8005912:	2301      	movne	r3, #1
 8005914:	0692      	lsls	r2, r2, #26
 8005916:	d430      	bmi.n	800597a <_printf_common+0xba>
 8005918:	4641      	mov	r1, r8
 800591a:	4638      	mov	r0, r7
 800591c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8005920:	47c8      	blx	r9
 8005922:	3001      	adds	r0, #1
 8005924:	d023      	beq.n	800596e <_printf_common+0xae>
 8005926:	6823      	ldr	r3, [r4, #0]
 8005928:	6922      	ldr	r2, [r4, #16]
 800592a:	f003 0306 	and.w	r3, r3, #6
 800592e:	2b04      	cmp	r3, #4
 8005930:	bf14      	ite	ne
 8005932:	2500      	movne	r5, #0
 8005934:	6833      	ldreq	r3, [r6, #0]
 8005936:	f04f 0600 	mov.w	r6, #0
 800593a:	bf08      	it	eq
 800593c:	68e5      	ldreq	r5, [r4, #12]
 800593e:	f104 041a 	add.w	r4, r4, #26
 8005942:	bf08      	it	eq
 8005944:	1aed      	subeq	r5, r5, r3
 8005946:	f854 3c12 	ldr.w	r3, [r4, #-18]
 800594a:	bf08      	it	eq
 800594c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8005950:	4293      	cmp	r3, r2
 8005952:	bfc4      	itt	gt
 8005954:	1a9b      	subgt	r3, r3, r2
 8005956:	18ed      	addgt	r5, r5, r3
 8005958:	42b5      	cmp	r5, r6
 800595a:	d11a      	bne.n	8005992 <_printf_common+0xd2>
 800595c:	2000      	movs	r0, #0
 800595e:	e008      	b.n	8005972 <_printf_common+0xb2>
 8005960:	2301      	movs	r3, #1
 8005962:	4652      	mov	r2, sl
 8005964:	4641      	mov	r1, r8
 8005966:	4638      	mov	r0, r7
 8005968:	47c8      	blx	r9
 800596a:	3001      	adds	r0, #1
 800596c:	d103      	bne.n	8005976 <_printf_common+0xb6>
 800596e:	f04f 30ff 	mov.w	r0, #4294967295
 8005972:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005976:	3501      	adds	r5, #1
 8005978:	e7c1      	b.n	80058fe <_printf_common+0x3e>
 800597a:	2030      	movs	r0, #48	@ 0x30
 800597c:	18e1      	adds	r1, r4, r3
 800597e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8005982:	1c5a      	adds	r2, r3, #1
 8005984:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8005988:	4422      	add	r2, r4
 800598a:	3302      	adds	r3, #2
 800598c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8005990:	e7c2      	b.n	8005918 <_printf_common+0x58>
 8005992:	2301      	movs	r3, #1
 8005994:	4622      	mov	r2, r4
 8005996:	4641      	mov	r1, r8
 8005998:	4638      	mov	r0, r7
 800599a:	47c8      	blx	r9
 800599c:	3001      	adds	r0, #1
 800599e:	d0e6      	beq.n	800596e <_printf_common+0xae>
 80059a0:	3601      	adds	r6, #1
 80059a2:	e7d9      	b.n	8005958 <_printf_common+0x98>

080059a4 <_printf_i>:
 80059a4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80059a8:	7e0f      	ldrb	r7, [r1, #24]
 80059aa:	4691      	mov	r9, r2
 80059ac:	2f78      	cmp	r7, #120	@ 0x78
 80059ae:	4680      	mov	r8, r0
 80059b0:	460c      	mov	r4, r1
 80059b2:	469a      	mov	sl, r3
 80059b4:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80059b6:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80059ba:	d807      	bhi.n	80059cc <_printf_i+0x28>
 80059bc:	2f62      	cmp	r7, #98	@ 0x62
 80059be:	d80a      	bhi.n	80059d6 <_printf_i+0x32>
 80059c0:	2f00      	cmp	r7, #0
 80059c2:	f000 80d3 	beq.w	8005b6c <_printf_i+0x1c8>
 80059c6:	2f58      	cmp	r7, #88	@ 0x58
 80059c8:	f000 80ba 	beq.w	8005b40 <_printf_i+0x19c>
 80059cc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80059d0:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80059d4:	e03a      	b.n	8005a4c <_printf_i+0xa8>
 80059d6:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80059da:	2b15      	cmp	r3, #21
 80059dc:	d8f6      	bhi.n	80059cc <_printf_i+0x28>
 80059de:	a101      	add	r1, pc, #4	@ (adr r1, 80059e4 <_printf_i+0x40>)
 80059e0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80059e4:	08005a3d 	.word	0x08005a3d
 80059e8:	08005a51 	.word	0x08005a51
 80059ec:	080059cd 	.word	0x080059cd
 80059f0:	080059cd 	.word	0x080059cd
 80059f4:	080059cd 	.word	0x080059cd
 80059f8:	080059cd 	.word	0x080059cd
 80059fc:	08005a51 	.word	0x08005a51
 8005a00:	080059cd 	.word	0x080059cd
 8005a04:	080059cd 	.word	0x080059cd
 8005a08:	080059cd 	.word	0x080059cd
 8005a0c:	080059cd 	.word	0x080059cd
 8005a10:	08005b53 	.word	0x08005b53
 8005a14:	08005a7b 	.word	0x08005a7b
 8005a18:	08005b0d 	.word	0x08005b0d
 8005a1c:	080059cd 	.word	0x080059cd
 8005a20:	080059cd 	.word	0x080059cd
 8005a24:	08005b75 	.word	0x08005b75
 8005a28:	080059cd 	.word	0x080059cd
 8005a2c:	08005a7b 	.word	0x08005a7b
 8005a30:	080059cd 	.word	0x080059cd
 8005a34:	080059cd 	.word	0x080059cd
 8005a38:	08005b15 	.word	0x08005b15
 8005a3c:	6833      	ldr	r3, [r6, #0]
 8005a3e:	1d1a      	adds	r2, r3, #4
 8005a40:	681b      	ldr	r3, [r3, #0]
 8005a42:	6032      	str	r2, [r6, #0]
 8005a44:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8005a48:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8005a4c:	2301      	movs	r3, #1
 8005a4e:	e09e      	b.n	8005b8e <_printf_i+0x1ea>
 8005a50:	6833      	ldr	r3, [r6, #0]
 8005a52:	6820      	ldr	r0, [r4, #0]
 8005a54:	1d19      	adds	r1, r3, #4
 8005a56:	6031      	str	r1, [r6, #0]
 8005a58:	0606      	lsls	r6, r0, #24
 8005a5a:	d501      	bpl.n	8005a60 <_printf_i+0xbc>
 8005a5c:	681d      	ldr	r5, [r3, #0]
 8005a5e:	e003      	b.n	8005a68 <_printf_i+0xc4>
 8005a60:	0645      	lsls	r5, r0, #25
 8005a62:	d5fb      	bpl.n	8005a5c <_printf_i+0xb8>
 8005a64:	f9b3 5000 	ldrsh.w	r5, [r3]
 8005a68:	2d00      	cmp	r5, #0
 8005a6a:	da03      	bge.n	8005a74 <_printf_i+0xd0>
 8005a6c:	232d      	movs	r3, #45	@ 0x2d
 8005a6e:	426d      	negs	r5, r5
 8005a70:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8005a74:	230a      	movs	r3, #10
 8005a76:	4859      	ldr	r0, [pc, #356]	@ (8005bdc <_printf_i+0x238>)
 8005a78:	e011      	b.n	8005a9e <_printf_i+0xfa>
 8005a7a:	6821      	ldr	r1, [r4, #0]
 8005a7c:	6833      	ldr	r3, [r6, #0]
 8005a7e:	0608      	lsls	r0, r1, #24
 8005a80:	f853 5b04 	ldr.w	r5, [r3], #4
 8005a84:	d402      	bmi.n	8005a8c <_printf_i+0xe8>
 8005a86:	0649      	lsls	r1, r1, #25
 8005a88:	bf48      	it	mi
 8005a8a:	b2ad      	uxthmi	r5, r5
 8005a8c:	2f6f      	cmp	r7, #111	@ 0x6f
 8005a8e:	6033      	str	r3, [r6, #0]
 8005a90:	bf14      	ite	ne
 8005a92:	230a      	movne	r3, #10
 8005a94:	2308      	moveq	r3, #8
 8005a96:	4851      	ldr	r0, [pc, #324]	@ (8005bdc <_printf_i+0x238>)
 8005a98:	2100      	movs	r1, #0
 8005a9a:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8005a9e:	6866      	ldr	r6, [r4, #4]
 8005aa0:	2e00      	cmp	r6, #0
 8005aa2:	bfa8      	it	ge
 8005aa4:	6821      	ldrge	r1, [r4, #0]
 8005aa6:	60a6      	str	r6, [r4, #8]
 8005aa8:	bfa4      	itt	ge
 8005aaa:	f021 0104 	bicge.w	r1, r1, #4
 8005aae:	6021      	strge	r1, [r4, #0]
 8005ab0:	b90d      	cbnz	r5, 8005ab6 <_printf_i+0x112>
 8005ab2:	2e00      	cmp	r6, #0
 8005ab4:	d04b      	beq.n	8005b4e <_printf_i+0x1aa>
 8005ab6:	4616      	mov	r6, r2
 8005ab8:	fbb5 f1f3 	udiv	r1, r5, r3
 8005abc:	fb03 5711 	mls	r7, r3, r1, r5
 8005ac0:	5dc7      	ldrb	r7, [r0, r7]
 8005ac2:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8005ac6:	462f      	mov	r7, r5
 8005ac8:	42bb      	cmp	r3, r7
 8005aca:	460d      	mov	r5, r1
 8005acc:	d9f4      	bls.n	8005ab8 <_printf_i+0x114>
 8005ace:	2b08      	cmp	r3, #8
 8005ad0:	d10b      	bne.n	8005aea <_printf_i+0x146>
 8005ad2:	6823      	ldr	r3, [r4, #0]
 8005ad4:	07df      	lsls	r7, r3, #31
 8005ad6:	d508      	bpl.n	8005aea <_printf_i+0x146>
 8005ad8:	6923      	ldr	r3, [r4, #16]
 8005ada:	6861      	ldr	r1, [r4, #4]
 8005adc:	4299      	cmp	r1, r3
 8005ade:	bfde      	ittt	le
 8005ae0:	2330      	movle	r3, #48	@ 0x30
 8005ae2:	f806 3c01 	strble.w	r3, [r6, #-1]
 8005ae6:	f106 36ff 	addle.w	r6, r6, #4294967295
 8005aea:	1b92      	subs	r2, r2, r6
 8005aec:	6122      	str	r2, [r4, #16]
 8005aee:	464b      	mov	r3, r9
 8005af0:	4621      	mov	r1, r4
 8005af2:	4640      	mov	r0, r8
 8005af4:	f8cd a000 	str.w	sl, [sp]
 8005af8:	aa03      	add	r2, sp, #12
 8005afa:	f7ff fee1 	bl	80058c0 <_printf_common>
 8005afe:	3001      	adds	r0, #1
 8005b00:	d14a      	bne.n	8005b98 <_printf_i+0x1f4>
 8005b02:	f04f 30ff 	mov.w	r0, #4294967295
 8005b06:	b004      	add	sp, #16
 8005b08:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005b0c:	6823      	ldr	r3, [r4, #0]
 8005b0e:	f043 0320 	orr.w	r3, r3, #32
 8005b12:	6023      	str	r3, [r4, #0]
 8005b14:	2778      	movs	r7, #120	@ 0x78
 8005b16:	4832      	ldr	r0, [pc, #200]	@ (8005be0 <_printf_i+0x23c>)
 8005b18:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8005b1c:	6823      	ldr	r3, [r4, #0]
 8005b1e:	6831      	ldr	r1, [r6, #0]
 8005b20:	061f      	lsls	r7, r3, #24
 8005b22:	f851 5b04 	ldr.w	r5, [r1], #4
 8005b26:	d402      	bmi.n	8005b2e <_printf_i+0x18a>
 8005b28:	065f      	lsls	r7, r3, #25
 8005b2a:	bf48      	it	mi
 8005b2c:	b2ad      	uxthmi	r5, r5
 8005b2e:	6031      	str	r1, [r6, #0]
 8005b30:	07d9      	lsls	r1, r3, #31
 8005b32:	bf44      	itt	mi
 8005b34:	f043 0320 	orrmi.w	r3, r3, #32
 8005b38:	6023      	strmi	r3, [r4, #0]
 8005b3a:	b11d      	cbz	r5, 8005b44 <_printf_i+0x1a0>
 8005b3c:	2310      	movs	r3, #16
 8005b3e:	e7ab      	b.n	8005a98 <_printf_i+0xf4>
 8005b40:	4826      	ldr	r0, [pc, #152]	@ (8005bdc <_printf_i+0x238>)
 8005b42:	e7e9      	b.n	8005b18 <_printf_i+0x174>
 8005b44:	6823      	ldr	r3, [r4, #0]
 8005b46:	f023 0320 	bic.w	r3, r3, #32
 8005b4a:	6023      	str	r3, [r4, #0]
 8005b4c:	e7f6      	b.n	8005b3c <_printf_i+0x198>
 8005b4e:	4616      	mov	r6, r2
 8005b50:	e7bd      	b.n	8005ace <_printf_i+0x12a>
 8005b52:	6833      	ldr	r3, [r6, #0]
 8005b54:	6825      	ldr	r5, [r4, #0]
 8005b56:	1d18      	adds	r0, r3, #4
 8005b58:	6961      	ldr	r1, [r4, #20]
 8005b5a:	6030      	str	r0, [r6, #0]
 8005b5c:	062e      	lsls	r6, r5, #24
 8005b5e:	681b      	ldr	r3, [r3, #0]
 8005b60:	d501      	bpl.n	8005b66 <_printf_i+0x1c2>
 8005b62:	6019      	str	r1, [r3, #0]
 8005b64:	e002      	b.n	8005b6c <_printf_i+0x1c8>
 8005b66:	0668      	lsls	r0, r5, #25
 8005b68:	d5fb      	bpl.n	8005b62 <_printf_i+0x1be>
 8005b6a:	8019      	strh	r1, [r3, #0]
 8005b6c:	2300      	movs	r3, #0
 8005b6e:	4616      	mov	r6, r2
 8005b70:	6123      	str	r3, [r4, #16]
 8005b72:	e7bc      	b.n	8005aee <_printf_i+0x14a>
 8005b74:	6833      	ldr	r3, [r6, #0]
 8005b76:	2100      	movs	r1, #0
 8005b78:	1d1a      	adds	r2, r3, #4
 8005b7a:	6032      	str	r2, [r6, #0]
 8005b7c:	681e      	ldr	r6, [r3, #0]
 8005b7e:	6862      	ldr	r2, [r4, #4]
 8005b80:	4630      	mov	r0, r6
 8005b82:	f000 fac8 	bl	8006116 <memchr>
 8005b86:	b108      	cbz	r0, 8005b8c <_printf_i+0x1e8>
 8005b88:	1b80      	subs	r0, r0, r6
 8005b8a:	6060      	str	r0, [r4, #4]
 8005b8c:	6863      	ldr	r3, [r4, #4]
 8005b8e:	6123      	str	r3, [r4, #16]
 8005b90:	2300      	movs	r3, #0
 8005b92:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8005b96:	e7aa      	b.n	8005aee <_printf_i+0x14a>
 8005b98:	4632      	mov	r2, r6
 8005b9a:	4649      	mov	r1, r9
 8005b9c:	4640      	mov	r0, r8
 8005b9e:	6923      	ldr	r3, [r4, #16]
 8005ba0:	47d0      	blx	sl
 8005ba2:	3001      	adds	r0, #1
 8005ba4:	d0ad      	beq.n	8005b02 <_printf_i+0x15e>
 8005ba6:	6823      	ldr	r3, [r4, #0]
 8005ba8:	079b      	lsls	r3, r3, #30
 8005baa:	d413      	bmi.n	8005bd4 <_printf_i+0x230>
 8005bac:	68e0      	ldr	r0, [r4, #12]
 8005bae:	9b03      	ldr	r3, [sp, #12]
 8005bb0:	4298      	cmp	r0, r3
 8005bb2:	bfb8      	it	lt
 8005bb4:	4618      	movlt	r0, r3
 8005bb6:	e7a6      	b.n	8005b06 <_printf_i+0x162>
 8005bb8:	2301      	movs	r3, #1
 8005bba:	4632      	mov	r2, r6
 8005bbc:	4649      	mov	r1, r9
 8005bbe:	4640      	mov	r0, r8
 8005bc0:	47d0      	blx	sl
 8005bc2:	3001      	adds	r0, #1
 8005bc4:	d09d      	beq.n	8005b02 <_printf_i+0x15e>
 8005bc6:	3501      	adds	r5, #1
 8005bc8:	68e3      	ldr	r3, [r4, #12]
 8005bca:	9903      	ldr	r1, [sp, #12]
 8005bcc:	1a5b      	subs	r3, r3, r1
 8005bce:	42ab      	cmp	r3, r5
 8005bd0:	dcf2      	bgt.n	8005bb8 <_printf_i+0x214>
 8005bd2:	e7eb      	b.n	8005bac <_printf_i+0x208>
 8005bd4:	2500      	movs	r5, #0
 8005bd6:	f104 0619 	add.w	r6, r4, #25
 8005bda:	e7f5      	b.n	8005bc8 <_printf_i+0x224>
 8005bdc:	08007ecc 	.word	0x08007ecc
 8005be0:	08007edd 	.word	0x08007edd

08005be4 <std>:
 8005be4:	2300      	movs	r3, #0
 8005be6:	b510      	push	{r4, lr}
 8005be8:	4604      	mov	r4, r0
 8005bea:	e9c0 3300 	strd	r3, r3, [r0]
 8005bee:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8005bf2:	6083      	str	r3, [r0, #8]
 8005bf4:	8181      	strh	r1, [r0, #12]
 8005bf6:	6643      	str	r3, [r0, #100]	@ 0x64
 8005bf8:	81c2      	strh	r2, [r0, #14]
 8005bfa:	6183      	str	r3, [r0, #24]
 8005bfc:	4619      	mov	r1, r3
 8005bfe:	2208      	movs	r2, #8
 8005c00:	305c      	adds	r0, #92	@ 0x5c
 8005c02:	f000 f9f9 	bl	8005ff8 <memset>
 8005c06:	4b0d      	ldr	r3, [pc, #52]	@ (8005c3c <std+0x58>)
 8005c08:	6224      	str	r4, [r4, #32]
 8005c0a:	6263      	str	r3, [r4, #36]	@ 0x24
 8005c0c:	4b0c      	ldr	r3, [pc, #48]	@ (8005c40 <std+0x5c>)
 8005c0e:	62a3      	str	r3, [r4, #40]	@ 0x28
 8005c10:	4b0c      	ldr	r3, [pc, #48]	@ (8005c44 <std+0x60>)
 8005c12:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8005c14:	4b0c      	ldr	r3, [pc, #48]	@ (8005c48 <std+0x64>)
 8005c16:	6323      	str	r3, [r4, #48]	@ 0x30
 8005c18:	4b0c      	ldr	r3, [pc, #48]	@ (8005c4c <std+0x68>)
 8005c1a:	429c      	cmp	r4, r3
 8005c1c:	d006      	beq.n	8005c2c <std+0x48>
 8005c1e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8005c22:	4294      	cmp	r4, r2
 8005c24:	d002      	beq.n	8005c2c <std+0x48>
 8005c26:	33d0      	adds	r3, #208	@ 0xd0
 8005c28:	429c      	cmp	r4, r3
 8005c2a:	d105      	bne.n	8005c38 <std+0x54>
 8005c2c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8005c30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005c34:	f000 ba6c 	b.w	8006110 <__retarget_lock_init_recursive>
 8005c38:	bd10      	pop	{r4, pc}
 8005c3a:	bf00      	nop
 8005c3c:	08005e49 	.word	0x08005e49
 8005c40:	08005e6b 	.word	0x08005e6b
 8005c44:	08005ea3 	.word	0x08005ea3
 8005c48:	08005ec7 	.word	0x08005ec7
 8005c4c:	2000048c 	.word	0x2000048c

08005c50 <stdio_exit_handler>:
 8005c50:	4a02      	ldr	r2, [pc, #8]	@ (8005c5c <stdio_exit_handler+0xc>)
 8005c52:	4903      	ldr	r1, [pc, #12]	@ (8005c60 <stdio_exit_handler+0x10>)
 8005c54:	4803      	ldr	r0, [pc, #12]	@ (8005c64 <stdio_exit_handler+0x14>)
 8005c56:	f000 b869 	b.w	8005d2c <_fwalk_sglue>
 8005c5a:	bf00      	nop
 8005c5c:	20000020 	.word	0x20000020
 8005c60:	0800797d 	.word	0x0800797d
 8005c64:	2000019c 	.word	0x2000019c

08005c68 <cleanup_stdio>:
 8005c68:	6841      	ldr	r1, [r0, #4]
 8005c6a:	4b0c      	ldr	r3, [pc, #48]	@ (8005c9c <cleanup_stdio+0x34>)
 8005c6c:	b510      	push	{r4, lr}
 8005c6e:	4299      	cmp	r1, r3
 8005c70:	4604      	mov	r4, r0
 8005c72:	d001      	beq.n	8005c78 <cleanup_stdio+0x10>
 8005c74:	f001 fe82 	bl	800797c <_fflush_r>
 8005c78:	68a1      	ldr	r1, [r4, #8]
 8005c7a:	4b09      	ldr	r3, [pc, #36]	@ (8005ca0 <cleanup_stdio+0x38>)
 8005c7c:	4299      	cmp	r1, r3
 8005c7e:	d002      	beq.n	8005c86 <cleanup_stdio+0x1e>
 8005c80:	4620      	mov	r0, r4
 8005c82:	f001 fe7b 	bl	800797c <_fflush_r>
 8005c86:	68e1      	ldr	r1, [r4, #12]
 8005c88:	4b06      	ldr	r3, [pc, #24]	@ (8005ca4 <cleanup_stdio+0x3c>)
 8005c8a:	4299      	cmp	r1, r3
 8005c8c:	d004      	beq.n	8005c98 <cleanup_stdio+0x30>
 8005c8e:	4620      	mov	r0, r4
 8005c90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005c94:	f001 be72 	b.w	800797c <_fflush_r>
 8005c98:	bd10      	pop	{r4, pc}
 8005c9a:	bf00      	nop
 8005c9c:	2000048c 	.word	0x2000048c
 8005ca0:	200004f4 	.word	0x200004f4
 8005ca4:	2000055c 	.word	0x2000055c

08005ca8 <global_stdio_init.part.0>:
 8005ca8:	b510      	push	{r4, lr}
 8005caa:	4b0b      	ldr	r3, [pc, #44]	@ (8005cd8 <global_stdio_init.part.0+0x30>)
 8005cac:	4c0b      	ldr	r4, [pc, #44]	@ (8005cdc <global_stdio_init.part.0+0x34>)
 8005cae:	4a0c      	ldr	r2, [pc, #48]	@ (8005ce0 <global_stdio_init.part.0+0x38>)
 8005cb0:	4620      	mov	r0, r4
 8005cb2:	601a      	str	r2, [r3, #0]
 8005cb4:	2104      	movs	r1, #4
 8005cb6:	2200      	movs	r2, #0
 8005cb8:	f7ff ff94 	bl	8005be4 <std>
 8005cbc:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8005cc0:	2201      	movs	r2, #1
 8005cc2:	2109      	movs	r1, #9
 8005cc4:	f7ff ff8e 	bl	8005be4 <std>
 8005cc8:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8005ccc:	2202      	movs	r2, #2
 8005cce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005cd2:	2112      	movs	r1, #18
 8005cd4:	f7ff bf86 	b.w	8005be4 <std>
 8005cd8:	200005c4 	.word	0x200005c4
 8005cdc:	2000048c 	.word	0x2000048c
 8005ce0:	08005c51 	.word	0x08005c51

08005ce4 <__sfp_lock_acquire>:
 8005ce4:	4801      	ldr	r0, [pc, #4]	@ (8005cec <__sfp_lock_acquire+0x8>)
 8005ce6:	f000 ba14 	b.w	8006112 <__retarget_lock_acquire_recursive>
 8005cea:	bf00      	nop
 8005cec:	200005cd 	.word	0x200005cd

08005cf0 <__sfp_lock_release>:
 8005cf0:	4801      	ldr	r0, [pc, #4]	@ (8005cf8 <__sfp_lock_release+0x8>)
 8005cf2:	f000 ba0f 	b.w	8006114 <__retarget_lock_release_recursive>
 8005cf6:	bf00      	nop
 8005cf8:	200005cd 	.word	0x200005cd

08005cfc <__sinit>:
 8005cfc:	b510      	push	{r4, lr}
 8005cfe:	4604      	mov	r4, r0
 8005d00:	f7ff fff0 	bl	8005ce4 <__sfp_lock_acquire>
 8005d04:	6a23      	ldr	r3, [r4, #32]
 8005d06:	b11b      	cbz	r3, 8005d10 <__sinit+0x14>
 8005d08:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005d0c:	f7ff bff0 	b.w	8005cf0 <__sfp_lock_release>
 8005d10:	4b04      	ldr	r3, [pc, #16]	@ (8005d24 <__sinit+0x28>)
 8005d12:	6223      	str	r3, [r4, #32]
 8005d14:	4b04      	ldr	r3, [pc, #16]	@ (8005d28 <__sinit+0x2c>)
 8005d16:	681b      	ldr	r3, [r3, #0]
 8005d18:	2b00      	cmp	r3, #0
 8005d1a:	d1f5      	bne.n	8005d08 <__sinit+0xc>
 8005d1c:	f7ff ffc4 	bl	8005ca8 <global_stdio_init.part.0>
 8005d20:	e7f2      	b.n	8005d08 <__sinit+0xc>
 8005d22:	bf00      	nop
 8005d24:	08005c69 	.word	0x08005c69
 8005d28:	200005c4 	.word	0x200005c4

08005d2c <_fwalk_sglue>:
 8005d2c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005d30:	4607      	mov	r7, r0
 8005d32:	4688      	mov	r8, r1
 8005d34:	4614      	mov	r4, r2
 8005d36:	2600      	movs	r6, #0
 8005d38:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8005d3c:	f1b9 0901 	subs.w	r9, r9, #1
 8005d40:	d505      	bpl.n	8005d4e <_fwalk_sglue+0x22>
 8005d42:	6824      	ldr	r4, [r4, #0]
 8005d44:	2c00      	cmp	r4, #0
 8005d46:	d1f7      	bne.n	8005d38 <_fwalk_sglue+0xc>
 8005d48:	4630      	mov	r0, r6
 8005d4a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005d4e:	89ab      	ldrh	r3, [r5, #12]
 8005d50:	2b01      	cmp	r3, #1
 8005d52:	d907      	bls.n	8005d64 <_fwalk_sglue+0x38>
 8005d54:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8005d58:	3301      	adds	r3, #1
 8005d5a:	d003      	beq.n	8005d64 <_fwalk_sglue+0x38>
 8005d5c:	4629      	mov	r1, r5
 8005d5e:	4638      	mov	r0, r7
 8005d60:	47c0      	blx	r8
 8005d62:	4306      	orrs	r6, r0
 8005d64:	3568      	adds	r5, #104	@ 0x68
 8005d66:	e7e9      	b.n	8005d3c <_fwalk_sglue+0x10>

08005d68 <iprintf>:
 8005d68:	b40f      	push	{r0, r1, r2, r3}
 8005d6a:	b507      	push	{r0, r1, r2, lr}
 8005d6c:	4906      	ldr	r1, [pc, #24]	@ (8005d88 <iprintf+0x20>)
 8005d6e:	ab04      	add	r3, sp, #16
 8005d70:	6808      	ldr	r0, [r1, #0]
 8005d72:	f853 2b04 	ldr.w	r2, [r3], #4
 8005d76:	6881      	ldr	r1, [r0, #8]
 8005d78:	9301      	str	r3, [sp, #4]
 8005d7a:	f001 fc67 	bl	800764c <_vfiprintf_r>
 8005d7e:	b003      	add	sp, #12
 8005d80:	f85d eb04 	ldr.w	lr, [sp], #4
 8005d84:	b004      	add	sp, #16
 8005d86:	4770      	bx	lr
 8005d88:	20000198 	.word	0x20000198

08005d8c <_puts_r>:
 8005d8c:	6a03      	ldr	r3, [r0, #32]
 8005d8e:	b570      	push	{r4, r5, r6, lr}
 8005d90:	4605      	mov	r5, r0
 8005d92:	460e      	mov	r6, r1
 8005d94:	6884      	ldr	r4, [r0, #8]
 8005d96:	b90b      	cbnz	r3, 8005d9c <_puts_r+0x10>
 8005d98:	f7ff ffb0 	bl	8005cfc <__sinit>
 8005d9c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8005d9e:	07db      	lsls	r3, r3, #31
 8005da0:	d405      	bmi.n	8005dae <_puts_r+0x22>
 8005da2:	89a3      	ldrh	r3, [r4, #12]
 8005da4:	0598      	lsls	r0, r3, #22
 8005da6:	d402      	bmi.n	8005dae <_puts_r+0x22>
 8005da8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8005daa:	f000 f9b2 	bl	8006112 <__retarget_lock_acquire_recursive>
 8005dae:	89a3      	ldrh	r3, [r4, #12]
 8005db0:	0719      	lsls	r1, r3, #28
 8005db2:	d502      	bpl.n	8005dba <_puts_r+0x2e>
 8005db4:	6923      	ldr	r3, [r4, #16]
 8005db6:	2b00      	cmp	r3, #0
 8005db8:	d135      	bne.n	8005e26 <_puts_r+0x9a>
 8005dba:	4621      	mov	r1, r4
 8005dbc:	4628      	mov	r0, r5
 8005dbe:	f000 f8c5 	bl	8005f4c <__swsetup_r>
 8005dc2:	b380      	cbz	r0, 8005e26 <_puts_r+0x9a>
 8005dc4:	f04f 35ff 	mov.w	r5, #4294967295
 8005dc8:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8005dca:	07da      	lsls	r2, r3, #31
 8005dcc:	d405      	bmi.n	8005dda <_puts_r+0x4e>
 8005dce:	89a3      	ldrh	r3, [r4, #12]
 8005dd0:	059b      	lsls	r3, r3, #22
 8005dd2:	d402      	bmi.n	8005dda <_puts_r+0x4e>
 8005dd4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8005dd6:	f000 f99d 	bl	8006114 <__retarget_lock_release_recursive>
 8005dda:	4628      	mov	r0, r5
 8005ddc:	bd70      	pop	{r4, r5, r6, pc}
 8005dde:	2b00      	cmp	r3, #0
 8005de0:	da04      	bge.n	8005dec <_puts_r+0x60>
 8005de2:	69a2      	ldr	r2, [r4, #24]
 8005de4:	429a      	cmp	r2, r3
 8005de6:	dc17      	bgt.n	8005e18 <_puts_r+0x8c>
 8005de8:	290a      	cmp	r1, #10
 8005dea:	d015      	beq.n	8005e18 <_puts_r+0x8c>
 8005dec:	6823      	ldr	r3, [r4, #0]
 8005dee:	1c5a      	adds	r2, r3, #1
 8005df0:	6022      	str	r2, [r4, #0]
 8005df2:	7019      	strb	r1, [r3, #0]
 8005df4:	68a3      	ldr	r3, [r4, #8]
 8005df6:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8005dfa:	3b01      	subs	r3, #1
 8005dfc:	60a3      	str	r3, [r4, #8]
 8005dfe:	2900      	cmp	r1, #0
 8005e00:	d1ed      	bne.n	8005dde <_puts_r+0x52>
 8005e02:	2b00      	cmp	r3, #0
 8005e04:	da11      	bge.n	8005e2a <_puts_r+0x9e>
 8005e06:	4622      	mov	r2, r4
 8005e08:	210a      	movs	r1, #10
 8005e0a:	4628      	mov	r0, r5
 8005e0c:	f000 f85f 	bl	8005ece <__swbuf_r>
 8005e10:	3001      	adds	r0, #1
 8005e12:	d0d7      	beq.n	8005dc4 <_puts_r+0x38>
 8005e14:	250a      	movs	r5, #10
 8005e16:	e7d7      	b.n	8005dc8 <_puts_r+0x3c>
 8005e18:	4622      	mov	r2, r4
 8005e1a:	4628      	mov	r0, r5
 8005e1c:	f000 f857 	bl	8005ece <__swbuf_r>
 8005e20:	3001      	adds	r0, #1
 8005e22:	d1e7      	bne.n	8005df4 <_puts_r+0x68>
 8005e24:	e7ce      	b.n	8005dc4 <_puts_r+0x38>
 8005e26:	3e01      	subs	r6, #1
 8005e28:	e7e4      	b.n	8005df4 <_puts_r+0x68>
 8005e2a:	6823      	ldr	r3, [r4, #0]
 8005e2c:	1c5a      	adds	r2, r3, #1
 8005e2e:	6022      	str	r2, [r4, #0]
 8005e30:	220a      	movs	r2, #10
 8005e32:	701a      	strb	r2, [r3, #0]
 8005e34:	e7ee      	b.n	8005e14 <_puts_r+0x88>
	...

08005e38 <puts>:
 8005e38:	4b02      	ldr	r3, [pc, #8]	@ (8005e44 <puts+0xc>)
 8005e3a:	4601      	mov	r1, r0
 8005e3c:	6818      	ldr	r0, [r3, #0]
 8005e3e:	f7ff bfa5 	b.w	8005d8c <_puts_r>
 8005e42:	bf00      	nop
 8005e44:	20000198 	.word	0x20000198

08005e48 <__sread>:
 8005e48:	b510      	push	{r4, lr}
 8005e4a:	460c      	mov	r4, r1
 8005e4c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005e50:	f000 f900 	bl	8006054 <_read_r>
 8005e54:	2800      	cmp	r0, #0
 8005e56:	bfab      	itete	ge
 8005e58:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8005e5a:	89a3      	ldrhlt	r3, [r4, #12]
 8005e5c:	181b      	addge	r3, r3, r0
 8005e5e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8005e62:	bfac      	ite	ge
 8005e64:	6563      	strge	r3, [r4, #84]	@ 0x54
 8005e66:	81a3      	strhlt	r3, [r4, #12]
 8005e68:	bd10      	pop	{r4, pc}

08005e6a <__swrite>:
 8005e6a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005e6e:	461f      	mov	r7, r3
 8005e70:	898b      	ldrh	r3, [r1, #12]
 8005e72:	4605      	mov	r5, r0
 8005e74:	05db      	lsls	r3, r3, #23
 8005e76:	460c      	mov	r4, r1
 8005e78:	4616      	mov	r6, r2
 8005e7a:	d505      	bpl.n	8005e88 <__swrite+0x1e>
 8005e7c:	2302      	movs	r3, #2
 8005e7e:	2200      	movs	r2, #0
 8005e80:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005e84:	f000 f8d4 	bl	8006030 <_lseek_r>
 8005e88:	89a3      	ldrh	r3, [r4, #12]
 8005e8a:	4632      	mov	r2, r6
 8005e8c:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8005e90:	81a3      	strh	r3, [r4, #12]
 8005e92:	4628      	mov	r0, r5
 8005e94:	463b      	mov	r3, r7
 8005e96:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005e9a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005e9e:	f000 b8fb 	b.w	8006098 <_write_r>

08005ea2 <__sseek>:
 8005ea2:	b510      	push	{r4, lr}
 8005ea4:	460c      	mov	r4, r1
 8005ea6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005eaa:	f000 f8c1 	bl	8006030 <_lseek_r>
 8005eae:	1c43      	adds	r3, r0, #1
 8005eb0:	89a3      	ldrh	r3, [r4, #12]
 8005eb2:	bf15      	itete	ne
 8005eb4:	6560      	strne	r0, [r4, #84]	@ 0x54
 8005eb6:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8005eba:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8005ebe:	81a3      	strheq	r3, [r4, #12]
 8005ec0:	bf18      	it	ne
 8005ec2:	81a3      	strhne	r3, [r4, #12]
 8005ec4:	bd10      	pop	{r4, pc}

08005ec6 <__sclose>:
 8005ec6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005eca:	f000 b8a1 	b.w	8006010 <_close_r>

08005ece <__swbuf_r>:
 8005ece:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005ed0:	460e      	mov	r6, r1
 8005ed2:	4614      	mov	r4, r2
 8005ed4:	4605      	mov	r5, r0
 8005ed6:	b118      	cbz	r0, 8005ee0 <__swbuf_r+0x12>
 8005ed8:	6a03      	ldr	r3, [r0, #32]
 8005eda:	b90b      	cbnz	r3, 8005ee0 <__swbuf_r+0x12>
 8005edc:	f7ff ff0e 	bl	8005cfc <__sinit>
 8005ee0:	69a3      	ldr	r3, [r4, #24]
 8005ee2:	60a3      	str	r3, [r4, #8]
 8005ee4:	89a3      	ldrh	r3, [r4, #12]
 8005ee6:	071a      	lsls	r2, r3, #28
 8005ee8:	d501      	bpl.n	8005eee <__swbuf_r+0x20>
 8005eea:	6923      	ldr	r3, [r4, #16]
 8005eec:	b943      	cbnz	r3, 8005f00 <__swbuf_r+0x32>
 8005eee:	4621      	mov	r1, r4
 8005ef0:	4628      	mov	r0, r5
 8005ef2:	f000 f82b 	bl	8005f4c <__swsetup_r>
 8005ef6:	b118      	cbz	r0, 8005f00 <__swbuf_r+0x32>
 8005ef8:	f04f 37ff 	mov.w	r7, #4294967295
 8005efc:	4638      	mov	r0, r7
 8005efe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005f00:	6823      	ldr	r3, [r4, #0]
 8005f02:	6922      	ldr	r2, [r4, #16]
 8005f04:	b2f6      	uxtb	r6, r6
 8005f06:	1a98      	subs	r0, r3, r2
 8005f08:	6963      	ldr	r3, [r4, #20]
 8005f0a:	4637      	mov	r7, r6
 8005f0c:	4283      	cmp	r3, r0
 8005f0e:	dc05      	bgt.n	8005f1c <__swbuf_r+0x4e>
 8005f10:	4621      	mov	r1, r4
 8005f12:	4628      	mov	r0, r5
 8005f14:	f001 fd32 	bl	800797c <_fflush_r>
 8005f18:	2800      	cmp	r0, #0
 8005f1a:	d1ed      	bne.n	8005ef8 <__swbuf_r+0x2a>
 8005f1c:	68a3      	ldr	r3, [r4, #8]
 8005f1e:	3b01      	subs	r3, #1
 8005f20:	60a3      	str	r3, [r4, #8]
 8005f22:	6823      	ldr	r3, [r4, #0]
 8005f24:	1c5a      	adds	r2, r3, #1
 8005f26:	6022      	str	r2, [r4, #0]
 8005f28:	701e      	strb	r6, [r3, #0]
 8005f2a:	6962      	ldr	r2, [r4, #20]
 8005f2c:	1c43      	adds	r3, r0, #1
 8005f2e:	429a      	cmp	r2, r3
 8005f30:	d004      	beq.n	8005f3c <__swbuf_r+0x6e>
 8005f32:	89a3      	ldrh	r3, [r4, #12]
 8005f34:	07db      	lsls	r3, r3, #31
 8005f36:	d5e1      	bpl.n	8005efc <__swbuf_r+0x2e>
 8005f38:	2e0a      	cmp	r6, #10
 8005f3a:	d1df      	bne.n	8005efc <__swbuf_r+0x2e>
 8005f3c:	4621      	mov	r1, r4
 8005f3e:	4628      	mov	r0, r5
 8005f40:	f001 fd1c 	bl	800797c <_fflush_r>
 8005f44:	2800      	cmp	r0, #0
 8005f46:	d0d9      	beq.n	8005efc <__swbuf_r+0x2e>
 8005f48:	e7d6      	b.n	8005ef8 <__swbuf_r+0x2a>
	...

08005f4c <__swsetup_r>:
 8005f4c:	b538      	push	{r3, r4, r5, lr}
 8005f4e:	4b29      	ldr	r3, [pc, #164]	@ (8005ff4 <__swsetup_r+0xa8>)
 8005f50:	4605      	mov	r5, r0
 8005f52:	6818      	ldr	r0, [r3, #0]
 8005f54:	460c      	mov	r4, r1
 8005f56:	b118      	cbz	r0, 8005f60 <__swsetup_r+0x14>
 8005f58:	6a03      	ldr	r3, [r0, #32]
 8005f5a:	b90b      	cbnz	r3, 8005f60 <__swsetup_r+0x14>
 8005f5c:	f7ff fece 	bl	8005cfc <__sinit>
 8005f60:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005f64:	0719      	lsls	r1, r3, #28
 8005f66:	d422      	bmi.n	8005fae <__swsetup_r+0x62>
 8005f68:	06da      	lsls	r2, r3, #27
 8005f6a:	d407      	bmi.n	8005f7c <__swsetup_r+0x30>
 8005f6c:	2209      	movs	r2, #9
 8005f6e:	602a      	str	r2, [r5, #0]
 8005f70:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005f74:	f04f 30ff 	mov.w	r0, #4294967295
 8005f78:	81a3      	strh	r3, [r4, #12]
 8005f7a:	e033      	b.n	8005fe4 <__swsetup_r+0x98>
 8005f7c:	0758      	lsls	r0, r3, #29
 8005f7e:	d512      	bpl.n	8005fa6 <__swsetup_r+0x5a>
 8005f80:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8005f82:	b141      	cbz	r1, 8005f96 <__swsetup_r+0x4a>
 8005f84:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8005f88:	4299      	cmp	r1, r3
 8005f8a:	d002      	beq.n	8005f92 <__swsetup_r+0x46>
 8005f8c:	4628      	mov	r0, r5
 8005f8e:	f000 ff4f 	bl	8006e30 <_free_r>
 8005f92:	2300      	movs	r3, #0
 8005f94:	6363      	str	r3, [r4, #52]	@ 0x34
 8005f96:	89a3      	ldrh	r3, [r4, #12]
 8005f98:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8005f9c:	81a3      	strh	r3, [r4, #12]
 8005f9e:	2300      	movs	r3, #0
 8005fa0:	6063      	str	r3, [r4, #4]
 8005fa2:	6923      	ldr	r3, [r4, #16]
 8005fa4:	6023      	str	r3, [r4, #0]
 8005fa6:	89a3      	ldrh	r3, [r4, #12]
 8005fa8:	f043 0308 	orr.w	r3, r3, #8
 8005fac:	81a3      	strh	r3, [r4, #12]
 8005fae:	6923      	ldr	r3, [r4, #16]
 8005fb0:	b94b      	cbnz	r3, 8005fc6 <__swsetup_r+0x7a>
 8005fb2:	89a3      	ldrh	r3, [r4, #12]
 8005fb4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8005fb8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8005fbc:	d003      	beq.n	8005fc6 <__swsetup_r+0x7a>
 8005fbe:	4621      	mov	r1, r4
 8005fc0:	4628      	mov	r0, r5
 8005fc2:	f001 fd3a 	bl	8007a3a <__smakebuf_r>
 8005fc6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005fca:	f013 0201 	ands.w	r2, r3, #1
 8005fce:	d00a      	beq.n	8005fe6 <__swsetup_r+0x9a>
 8005fd0:	2200      	movs	r2, #0
 8005fd2:	60a2      	str	r2, [r4, #8]
 8005fd4:	6962      	ldr	r2, [r4, #20]
 8005fd6:	4252      	negs	r2, r2
 8005fd8:	61a2      	str	r2, [r4, #24]
 8005fda:	6922      	ldr	r2, [r4, #16]
 8005fdc:	b942      	cbnz	r2, 8005ff0 <__swsetup_r+0xa4>
 8005fde:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8005fe2:	d1c5      	bne.n	8005f70 <__swsetup_r+0x24>
 8005fe4:	bd38      	pop	{r3, r4, r5, pc}
 8005fe6:	0799      	lsls	r1, r3, #30
 8005fe8:	bf58      	it	pl
 8005fea:	6962      	ldrpl	r2, [r4, #20]
 8005fec:	60a2      	str	r2, [r4, #8]
 8005fee:	e7f4      	b.n	8005fda <__swsetup_r+0x8e>
 8005ff0:	2000      	movs	r0, #0
 8005ff2:	e7f7      	b.n	8005fe4 <__swsetup_r+0x98>
 8005ff4:	20000198 	.word	0x20000198

08005ff8 <memset>:
 8005ff8:	4603      	mov	r3, r0
 8005ffa:	4402      	add	r2, r0
 8005ffc:	4293      	cmp	r3, r2
 8005ffe:	d100      	bne.n	8006002 <memset+0xa>
 8006000:	4770      	bx	lr
 8006002:	f803 1b01 	strb.w	r1, [r3], #1
 8006006:	e7f9      	b.n	8005ffc <memset+0x4>

08006008 <_localeconv_r>:
 8006008:	4800      	ldr	r0, [pc, #0]	@ (800600c <_localeconv_r+0x4>)
 800600a:	4770      	bx	lr
 800600c:	2000011c 	.word	0x2000011c

08006010 <_close_r>:
 8006010:	b538      	push	{r3, r4, r5, lr}
 8006012:	2300      	movs	r3, #0
 8006014:	4d05      	ldr	r5, [pc, #20]	@ (800602c <_close_r+0x1c>)
 8006016:	4604      	mov	r4, r0
 8006018:	4608      	mov	r0, r1
 800601a:	602b      	str	r3, [r5, #0]
 800601c:	f7fc fc40 	bl	80028a0 <_close>
 8006020:	1c43      	adds	r3, r0, #1
 8006022:	d102      	bne.n	800602a <_close_r+0x1a>
 8006024:	682b      	ldr	r3, [r5, #0]
 8006026:	b103      	cbz	r3, 800602a <_close_r+0x1a>
 8006028:	6023      	str	r3, [r4, #0]
 800602a:	bd38      	pop	{r3, r4, r5, pc}
 800602c:	200005c8 	.word	0x200005c8

08006030 <_lseek_r>:
 8006030:	b538      	push	{r3, r4, r5, lr}
 8006032:	4604      	mov	r4, r0
 8006034:	4608      	mov	r0, r1
 8006036:	4611      	mov	r1, r2
 8006038:	2200      	movs	r2, #0
 800603a:	4d05      	ldr	r5, [pc, #20]	@ (8006050 <_lseek_r+0x20>)
 800603c:	602a      	str	r2, [r5, #0]
 800603e:	461a      	mov	r2, r3
 8006040:	f7fc fc38 	bl	80028b4 <_lseek>
 8006044:	1c43      	adds	r3, r0, #1
 8006046:	d102      	bne.n	800604e <_lseek_r+0x1e>
 8006048:	682b      	ldr	r3, [r5, #0]
 800604a:	b103      	cbz	r3, 800604e <_lseek_r+0x1e>
 800604c:	6023      	str	r3, [r4, #0]
 800604e:	bd38      	pop	{r3, r4, r5, pc}
 8006050:	200005c8 	.word	0x200005c8

08006054 <_read_r>:
 8006054:	b538      	push	{r3, r4, r5, lr}
 8006056:	4604      	mov	r4, r0
 8006058:	4608      	mov	r0, r1
 800605a:	4611      	mov	r1, r2
 800605c:	2200      	movs	r2, #0
 800605e:	4d05      	ldr	r5, [pc, #20]	@ (8006074 <_read_r+0x20>)
 8006060:	602a      	str	r2, [r5, #0]
 8006062:	461a      	mov	r2, r3
 8006064:	f7fc fc0c 	bl	8002880 <_read>
 8006068:	1c43      	adds	r3, r0, #1
 800606a:	d102      	bne.n	8006072 <_read_r+0x1e>
 800606c:	682b      	ldr	r3, [r5, #0]
 800606e:	b103      	cbz	r3, 8006072 <_read_r+0x1e>
 8006070:	6023      	str	r3, [r4, #0]
 8006072:	bd38      	pop	{r3, r4, r5, pc}
 8006074:	200005c8 	.word	0x200005c8

08006078 <_sbrk_r>:
 8006078:	b538      	push	{r3, r4, r5, lr}
 800607a:	2300      	movs	r3, #0
 800607c:	4d05      	ldr	r5, [pc, #20]	@ (8006094 <_sbrk_r+0x1c>)
 800607e:	4604      	mov	r4, r0
 8006080:	4608      	mov	r0, r1
 8006082:	602b      	str	r3, [r5, #0]
 8006084:	f7fc fc18 	bl	80028b8 <_sbrk>
 8006088:	1c43      	adds	r3, r0, #1
 800608a:	d102      	bne.n	8006092 <_sbrk_r+0x1a>
 800608c:	682b      	ldr	r3, [r5, #0]
 800608e:	b103      	cbz	r3, 8006092 <_sbrk_r+0x1a>
 8006090:	6023      	str	r3, [r4, #0]
 8006092:	bd38      	pop	{r3, r4, r5, pc}
 8006094:	200005c8 	.word	0x200005c8

08006098 <_write_r>:
 8006098:	b538      	push	{r3, r4, r5, lr}
 800609a:	4604      	mov	r4, r0
 800609c:	4608      	mov	r0, r1
 800609e:	4611      	mov	r1, r2
 80060a0:	2200      	movs	r2, #0
 80060a2:	4d05      	ldr	r5, [pc, #20]	@ (80060b8 <_write_r+0x20>)
 80060a4:	602a      	str	r2, [r5, #0]
 80060a6:	461a      	mov	r2, r3
 80060a8:	f7fc f82e 	bl	8002108 <_write>
 80060ac:	1c43      	adds	r3, r0, #1
 80060ae:	d102      	bne.n	80060b6 <_write_r+0x1e>
 80060b0:	682b      	ldr	r3, [r5, #0]
 80060b2:	b103      	cbz	r3, 80060b6 <_write_r+0x1e>
 80060b4:	6023      	str	r3, [r4, #0]
 80060b6:	bd38      	pop	{r3, r4, r5, pc}
 80060b8:	200005c8 	.word	0x200005c8

080060bc <__errno>:
 80060bc:	4b01      	ldr	r3, [pc, #4]	@ (80060c4 <__errno+0x8>)
 80060be:	6818      	ldr	r0, [r3, #0]
 80060c0:	4770      	bx	lr
 80060c2:	bf00      	nop
 80060c4:	20000198 	.word	0x20000198

080060c8 <__libc_init_array>:
 80060c8:	b570      	push	{r4, r5, r6, lr}
 80060ca:	2600      	movs	r6, #0
 80060cc:	4d0c      	ldr	r5, [pc, #48]	@ (8006100 <__libc_init_array+0x38>)
 80060ce:	4c0d      	ldr	r4, [pc, #52]	@ (8006104 <__libc_init_array+0x3c>)
 80060d0:	1b64      	subs	r4, r4, r5
 80060d2:	10a4      	asrs	r4, r4, #2
 80060d4:	42a6      	cmp	r6, r4
 80060d6:	d109      	bne.n	80060ec <__libc_init_array+0x24>
 80060d8:	f001 fd6e 	bl	8007bb8 <_init>
 80060dc:	2600      	movs	r6, #0
 80060de:	4d0a      	ldr	r5, [pc, #40]	@ (8006108 <__libc_init_array+0x40>)
 80060e0:	4c0a      	ldr	r4, [pc, #40]	@ (800610c <__libc_init_array+0x44>)
 80060e2:	1b64      	subs	r4, r4, r5
 80060e4:	10a4      	asrs	r4, r4, #2
 80060e6:	42a6      	cmp	r6, r4
 80060e8:	d105      	bne.n	80060f6 <__libc_init_array+0x2e>
 80060ea:	bd70      	pop	{r4, r5, r6, pc}
 80060ec:	f855 3b04 	ldr.w	r3, [r5], #4
 80060f0:	4798      	blx	r3
 80060f2:	3601      	adds	r6, #1
 80060f4:	e7ee      	b.n	80060d4 <__libc_init_array+0xc>
 80060f6:	f855 3b04 	ldr.w	r3, [r5], #4
 80060fa:	4798      	blx	r3
 80060fc:	3601      	adds	r6, #1
 80060fe:	e7f2      	b.n	80060e6 <__libc_init_array+0x1e>
 8006100:	08008234 	.word	0x08008234
 8006104:	08008234 	.word	0x08008234
 8006108:	08008234 	.word	0x08008234
 800610c:	08008238 	.word	0x08008238

08006110 <__retarget_lock_init_recursive>:
 8006110:	4770      	bx	lr

08006112 <__retarget_lock_acquire_recursive>:
 8006112:	4770      	bx	lr

08006114 <__retarget_lock_release_recursive>:
 8006114:	4770      	bx	lr

08006116 <memchr>:
 8006116:	4603      	mov	r3, r0
 8006118:	b510      	push	{r4, lr}
 800611a:	b2c9      	uxtb	r1, r1
 800611c:	4402      	add	r2, r0
 800611e:	4293      	cmp	r3, r2
 8006120:	4618      	mov	r0, r3
 8006122:	d101      	bne.n	8006128 <memchr+0x12>
 8006124:	2000      	movs	r0, #0
 8006126:	e003      	b.n	8006130 <memchr+0x1a>
 8006128:	7804      	ldrb	r4, [r0, #0]
 800612a:	3301      	adds	r3, #1
 800612c:	428c      	cmp	r4, r1
 800612e:	d1f6      	bne.n	800611e <memchr+0x8>
 8006130:	bd10      	pop	{r4, pc}

08006132 <memcpy>:
 8006132:	440a      	add	r2, r1
 8006134:	4291      	cmp	r1, r2
 8006136:	f100 33ff 	add.w	r3, r0, #4294967295
 800613a:	d100      	bne.n	800613e <memcpy+0xc>
 800613c:	4770      	bx	lr
 800613e:	b510      	push	{r4, lr}
 8006140:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006144:	4291      	cmp	r1, r2
 8006146:	f803 4f01 	strb.w	r4, [r3, #1]!
 800614a:	d1f9      	bne.n	8006140 <memcpy+0xe>
 800614c:	bd10      	pop	{r4, pc}
	...

08006150 <__assert_func>:
 8006150:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8006152:	4614      	mov	r4, r2
 8006154:	461a      	mov	r2, r3
 8006156:	4b09      	ldr	r3, [pc, #36]	@ (800617c <__assert_func+0x2c>)
 8006158:	4605      	mov	r5, r0
 800615a:	681b      	ldr	r3, [r3, #0]
 800615c:	68d8      	ldr	r0, [r3, #12]
 800615e:	b954      	cbnz	r4, 8006176 <__assert_func+0x26>
 8006160:	4b07      	ldr	r3, [pc, #28]	@ (8006180 <__assert_func+0x30>)
 8006162:	461c      	mov	r4, r3
 8006164:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8006168:	9100      	str	r1, [sp, #0]
 800616a:	462b      	mov	r3, r5
 800616c:	4905      	ldr	r1, [pc, #20]	@ (8006184 <__assert_func+0x34>)
 800616e:	f001 fc2d 	bl	80079cc <fiprintf>
 8006172:	f001 fcc1 	bl	8007af8 <abort>
 8006176:	4b04      	ldr	r3, [pc, #16]	@ (8006188 <__assert_func+0x38>)
 8006178:	e7f4      	b.n	8006164 <__assert_func+0x14>
 800617a:	bf00      	nop
 800617c:	20000198 	.word	0x20000198
 8006180:	08007f33 	.word	0x08007f33
 8006184:	08007f05 	.word	0x08007f05
 8006188:	08007ef8 	.word	0x08007ef8

0800618c <quorem>:
 800618c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006190:	6903      	ldr	r3, [r0, #16]
 8006192:	690c      	ldr	r4, [r1, #16]
 8006194:	4607      	mov	r7, r0
 8006196:	42a3      	cmp	r3, r4
 8006198:	db7e      	blt.n	8006298 <quorem+0x10c>
 800619a:	3c01      	subs	r4, #1
 800619c:	00a3      	lsls	r3, r4, #2
 800619e:	f100 0514 	add.w	r5, r0, #20
 80061a2:	f101 0814 	add.w	r8, r1, #20
 80061a6:	9300      	str	r3, [sp, #0]
 80061a8:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80061ac:	9301      	str	r3, [sp, #4]
 80061ae:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80061b2:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80061b6:	3301      	adds	r3, #1
 80061b8:	429a      	cmp	r2, r3
 80061ba:	fbb2 f6f3 	udiv	r6, r2, r3
 80061be:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80061c2:	d32e      	bcc.n	8006222 <quorem+0x96>
 80061c4:	f04f 0a00 	mov.w	sl, #0
 80061c8:	46c4      	mov	ip, r8
 80061ca:	46ae      	mov	lr, r5
 80061cc:	46d3      	mov	fp, sl
 80061ce:	f85c 3b04 	ldr.w	r3, [ip], #4
 80061d2:	b298      	uxth	r0, r3
 80061d4:	fb06 a000 	mla	r0, r6, r0, sl
 80061d8:	0c1b      	lsrs	r3, r3, #16
 80061da:	0c02      	lsrs	r2, r0, #16
 80061dc:	fb06 2303 	mla	r3, r6, r3, r2
 80061e0:	f8de 2000 	ldr.w	r2, [lr]
 80061e4:	b280      	uxth	r0, r0
 80061e6:	b292      	uxth	r2, r2
 80061e8:	1a12      	subs	r2, r2, r0
 80061ea:	445a      	add	r2, fp
 80061ec:	f8de 0000 	ldr.w	r0, [lr]
 80061f0:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80061f4:	b29b      	uxth	r3, r3
 80061f6:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 80061fa:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 80061fe:	b292      	uxth	r2, r2
 8006200:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8006204:	45e1      	cmp	r9, ip
 8006206:	ea4f 4b23 	mov.w	fp, r3, asr #16
 800620a:	f84e 2b04 	str.w	r2, [lr], #4
 800620e:	d2de      	bcs.n	80061ce <quorem+0x42>
 8006210:	9b00      	ldr	r3, [sp, #0]
 8006212:	58eb      	ldr	r3, [r5, r3]
 8006214:	b92b      	cbnz	r3, 8006222 <quorem+0x96>
 8006216:	9b01      	ldr	r3, [sp, #4]
 8006218:	3b04      	subs	r3, #4
 800621a:	429d      	cmp	r5, r3
 800621c:	461a      	mov	r2, r3
 800621e:	d32f      	bcc.n	8006280 <quorem+0xf4>
 8006220:	613c      	str	r4, [r7, #16]
 8006222:	4638      	mov	r0, r7
 8006224:	f001 f8d6 	bl	80073d4 <__mcmp>
 8006228:	2800      	cmp	r0, #0
 800622a:	db25      	blt.n	8006278 <quorem+0xec>
 800622c:	4629      	mov	r1, r5
 800622e:	2000      	movs	r0, #0
 8006230:	f858 2b04 	ldr.w	r2, [r8], #4
 8006234:	f8d1 c000 	ldr.w	ip, [r1]
 8006238:	fa1f fe82 	uxth.w	lr, r2
 800623c:	fa1f f38c 	uxth.w	r3, ip
 8006240:	eba3 030e 	sub.w	r3, r3, lr
 8006244:	4403      	add	r3, r0
 8006246:	0c12      	lsrs	r2, r2, #16
 8006248:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 800624c:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8006250:	b29b      	uxth	r3, r3
 8006252:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8006256:	45c1      	cmp	r9, r8
 8006258:	ea4f 4022 	mov.w	r0, r2, asr #16
 800625c:	f841 3b04 	str.w	r3, [r1], #4
 8006260:	d2e6      	bcs.n	8006230 <quorem+0xa4>
 8006262:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8006266:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800626a:	b922      	cbnz	r2, 8006276 <quorem+0xea>
 800626c:	3b04      	subs	r3, #4
 800626e:	429d      	cmp	r5, r3
 8006270:	461a      	mov	r2, r3
 8006272:	d30b      	bcc.n	800628c <quorem+0x100>
 8006274:	613c      	str	r4, [r7, #16]
 8006276:	3601      	adds	r6, #1
 8006278:	4630      	mov	r0, r6
 800627a:	b003      	add	sp, #12
 800627c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006280:	6812      	ldr	r2, [r2, #0]
 8006282:	3b04      	subs	r3, #4
 8006284:	2a00      	cmp	r2, #0
 8006286:	d1cb      	bne.n	8006220 <quorem+0x94>
 8006288:	3c01      	subs	r4, #1
 800628a:	e7c6      	b.n	800621a <quorem+0x8e>
 800628c:	6812      	ldr	r2, [r2, #0]
 800628e:	3b04      	subs	r3, #4
 8006290:	2a00      	cmp	r2, #0
 8006292:	d1ef      	bne.n	8006274 <quorem+0xe8>
 8006294:	3c01      	subs	r4, #1
 8006296:	e7ea      	b.n	800626e <quorem+0xe2>
 8006298:	2000      	movs	r0, #0
 800629a:	e7ee      	b.n	800627a <quorem+0xee>
 800629c:	0000      	movs	r0, r0
	...

080062a0 <_dtoa_r>:
 80062a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80062a4:	4614      	mov	r4, r2
 80062a6:	461d      	mov	r5, r3
 80062a8:	69c7      	ldr	r7, [r0, #28]
 80062aa:	b097      	sub	sp, #92	@ 0x5c
 80062ac:	4683      	mov	fp, r0
 80062ae:	e9cd 4502 	strd	r4, r5, [sp, #8]
 80062b2:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 80062b4:	b97f      	cbnz	r7, 80062d6 <_dtoa_r+0x36>
 80062b6:	2010      	movs	r0, #16
 80062b8:	f7fe ff82 	bl	80051c0 <malloc>
 80062bc:	4602      	mov	r2, r0
 80062be:	f8cb 001c 	str.w	r0, [fp, #28]
 80062c2:	b920      	cbnz	r0, 80062ce <_dtoa_r+0x2e>
 80062c4:	21ef      	movs	r1, #239	@ 0xef
 80062c6:	4ba8      	ldr	r3, [pc, #672]	@ (8006568 <_dtoa_r+0x2c8>)
 80062c8:	48a8      	ldr	r0, [pc, #672]	@ (800656c <_dtoa_r+0x2cc>)
 80062ca:	f7ff ff41 	bl	8006150 <__assert_func>
 80062ce:	e9c0 7701 	strd	r7, r7, [r0, #4]
 80062d2:	6007      	str	r7, [r0, #0]
 80062d4:	60c7      	str	r7, [r0, #12]
 80062d6:	f8db 301c 	ldr.w	r3, [fp, #28]
 80062da:	6819      	ldr	r1, [r3, #0]
 80062dc:	b159      	cbz	r1, 80062f6 <_dtoa_r+0x56>
 80062de:	685a      	ldr	r2, [r3, #4]
 80062e0:	2301      	movs	r3, #1
 80062e2:	4093      	lsls	r3, r2
 80062e4:	604a      	str	r2, [r1, #4]
 80062e6:	608b      	str	r3, [r1, #8]
 80062e8:	4658      	mov	r0, fp
 80062ea:	f000 fe3b 	bl	8006f64 <_Bfree>
 80062ee:	2200      	movs	r2, #0
 80062f0:	f8db 301c 	ldr.w	r3, [fp, #28]
 80062f4:	601a      	str	r2, [r3, #0]
 80062f6:	1e2b      	subs	r3, r5, #0
 80062f8:	bfaf      	iteee	ge
 80062fa:	2300      	movge	r3, #0
 80062fc:	2201      	movlt	r2, #1
 80062fe:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8006302:	9303      	strlt	r3, [sp, #12]
 8006304:	bfa8      	it	ge
 8006306:	6033      	strge	r3, [r6, #0]
 8006308:	f8dd 800c 	ldr.w	r8, [sp, #12]
 800630c:	4b98      	ldr	r3, [pc, #608]	@ (8006570 <_dtoa_r+0x2d0>)
 800630e:	bfb8      	it	lt
 8006310:	6032      	strlt	r2, [r6, #0]
 8006312:	ea33 0308 	bics.w	r3, r3, r8
 8006316:	d112      	bne.n	800633e <_dtoa_r+0x9e>
 8006318:	f242 730f 	movw	r3, #9999	@ 0x270f
 800631c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 800631e:	6013      	str	r3, [r2, #0]
 8006320:	f3c8 0313 	ubfx	r3, r8, #0, #20
 8006324:	4323      	orrs	r3, r4
 8006326:	f000 8550 	beq.w	8006dca <_dtoa_r+0xb2a>
 800632a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 800632c:	f8df a244 	ldr.w	sl, [pc, #580]	@ 8006574 <_dtoa_r+0x2d4>
 8006330:	2b00      	cmp	r3, #0
 8006332:	f000 8552 	beq.w	8006dda <_dtoa_r+0xb3a>
 8006336:	f10a 0303 	add.w	r3, sl, #3
 800633a:	f000 bd4c 	b.w	8006dd6 <_dtoa_r+0xb36>
 800633e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8006342:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 8006346:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800634a:	2200      	movs	r2, #0
 800634c:	2300      	movs	r3, #0
 800634e:	f7fa fb2b 	bl	80009a8 <__aeabi_dcmpeq>
 8006352:	4607      	mov	r7, r0
 8006354:	b158      	cbz	r0, 800636e <_dtoa_r+0xce>
 8006356:	2301      	movs	r3, #1
 8006358:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 800635a:	6013      	str	r3, [r2, #0]
 800635c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 800635e:	b113      	cbz	r3, 8006366 <_dtoa_r+0xc6>
 8006360:	4b85      	ldr	r3, [pc, #532]	@ (8006578 <_dtoa_r+0x2d8>)
 8006362:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8006364:	6013      	str	r3, [r2, #0]
 8006366:	f8df a214 	ldr.w	sl, [pc, #532]	@ 800657c <_dtoa_r+0x2dc>
 800636a:	f000 bd36 	b.w	8006dda <_dtoa_r+0xb3a>
 800636e:	ab14      	add	r3, sp, #80	@ 0x50
 8006370:	9301      	str	r3, [sp, #4]
 8006372:	ab15      	add	r3, sp, #84	@ 0x54
 8006374:	9300      	str	r3, [sp, #0]
 8006376:	4658      	mov	r0, fp
 8006378:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 800637c:	f001 f8da 	bl	8007534 <__d2b>
 8006380:	f3c8 560a 	ubfx	r6, r8, #20, #11
 8006384:	4681      	mov	r9, r0
 8006386:	2e00      	cmp	r6, #0
 8006388:	d077      	beq.n	800647a <_dtoa_r+0x1da>
 800638a:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800638e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8006390:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8006394:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006398:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 800639c:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 80063a0:	9712      	str	r7, [sp, #72]	@ 0x48
 80063a2:	4619      	mov	r1, r3
 80063a4:	2200      	movs	r2, #0
 80063a6:	4b76      	ldr	r3, [pc, #472]	@ (8006580 <_dtoa_r+0x2e0>)
 80063a8:	f7f9 fede 	bl	8000168 <__aeabi_dsub>
 80063ac:	a368      	add	r3, pc, #416	@ (adr r3, 8006550 <_dtoa_r+0x2b0>)
 80063ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80063b2:	f7fa f891 	bl	80004d8 <__aeabi_dmul>
 80063b6:	a368      	add	r3, pc, #416	@ (adr r3, 8006558 <_dtoa_r+0x2b8>)
 80063b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80063bc:	f7f9 fed6 	bl	800016c <__adddf3>
 80063c0:	4604      	mov	r4, r0
 80063c2:	4630      	mov	r0, r6
 80063c4:	460d      	mov	r5, r1
 80063c6:	f7fa f81d 	bl	8000404 <__aeabi_i2d>
 80063ca:	a365      	add	r3, pc, #404	@ (adr r3, 8006560 <_dtoa_r+0x2c0>)
 80063cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80063d0:	f7fa f882 	bl	80004d8 <__aeabi_dmul>
 80063d4:	4602      	mov	r2, r0
 80063d6:	460b      	mov	r3, r1
 80063d8:	4620      	mov	r0, r4
 80063da:	4629      	mov	r1, r5
 80063dc:	f7f9 fec6 	bl	800016c <__adddf3>
 80063e0:	4604      	mov	r4, r0
 80063e2:	460d      	mov	r5, r1
 80063e4:	f7fa fb28 	bl	8000a38 <__aeabi_d2iz>
 80063e8:	2200      	movs	r2, #0
 80063ea:	4607      	mov	r7, r0
 80063ec:	2300      	movs	r3, #0
 80063ee:	4620      	mov	r0, r4
 80063f0:	4629      	mov	r1, r5
 80063f2:	f7fa fae3 	bl	80009bc <__aeabi_dcmplt>
 80063f6:	b140      	cbz	r0, 800640a <_dtoa_r+0x16a>
 80063f8:	4638      	mov	r0, r7
 80063fa:	f7fa f803 	bl	8000404 <__aeabi_i2d>
 80063fe:	4622      	mov	r2, r4
 8006400:	462b      	mov	r3, r5
 8006402:	f7fa fad1 	bl	80009a8 <__aeabi_dcmpeq>
 8006406:	b900      	cbnz	r0, 800640a <_dtoa_r+0x16a>
 8006408:	3f01      	subs	r7, #1
 800640a:	2f16      	cmp	r7, #22
 800640c:	d853      	bhi.n	80064b6 <_dtoa_r+0x216>
 800640e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8006412:	4b5c      	ldr	r3, [pc, #368]	@ (8006584 <_dtoa_r+0x2e4>)
 8006414:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8006418:	e9d3 2300 	ldrd	r2, r3, [r3]
 800641c:	f7fa face 	bl	80009bc <__aeabi_dcmplt>
 8006420:	2800      	cmp	r0, #0
 8006422:	d04a      	beq.n	80064ba <_dtoa_r+0x21a>
 8006424:	2300      	movs	r3, #0
 8006426:	3f01      	subs	r7, #1
 8006428:	930f      	str	r3, [sp, #60]	@ 0x3c
 800642a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800642c:	1b9b      	subs	r3, r3, r6
 800642e:	1e5a      	subs	r2, r3, #1
 8006430:	bf46      	itte	mi
 8006432:	f1c3 0801 	rsbmi	r8, r3, #1
 8006436:	2300      	movmi	r3, #0
 8006438:	f04f 0800 	movpl.w	r8, #0
 800643c:	9209      	str	r2, [sp, #36]	@ 0x24
 800643e:	bf48      	it	mi
 8006440:	9309      	strmi	r3, [sp, #36]	@ 0x24
 8006442:	2f00      	cmp	r7, #0
 8006444:	db3b      	blt.n	80064be <_dtoa_r+0x21e>
 8006446:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006448:	970e      	str	r7, [sp, #56]	@ 0x38
 800644a:	443b      	add	r3, r7
 800644c:	9309      	str	r3, [sp, #36]	@ 0x24
 800644e:	2300      	movs	r3, #0
 8006450:	930a      	str	r3, [sp, #40]	@ 0x28
 8006452:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8006454:	2b09      	cmp	r3, #9
 8006456:	d866      	bhi.n	8006526 <_dtoa_r+0x286>
 8006458:	2b05      	cmp	r3, #5
 800645a:	bfc4      	itt	gt
 800645c:	3b04      	subgt	r3, #4
 800645e:	9320      	strgt	r3, [sp, #128]	@ 0x80
 8006460:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8006462:	bfc8      	it	gt
 8006464:	2400      	movgt	r4, #0
 8006466:	f1a3 0302 	sub.w	r3, r3, #2
 800646a:	bfd8      	it	le
 800646c:	2401      	movle	r4, #1
 800646e:	2b03      	cmp	r3, #3
 8006470:	d864      	bhi.n	800653c <_dtoa_r+0x29c>
 8006472:	e8df f003 	tbb	[pc, r3]
 8006476:	382b      	.short	0x382b
 8006478:	5636      	.short	0x5636
 800647a:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 800647e:	441e      	add	r6, r3
 8006480:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8006484:	2b20      	cmp	r3, #32
 8006486:	bfc1      	itttt	gt
 8006488:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 800648c:	fa08 f803 	lslgt.w	r8, r8, r3
 8006490:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8006494:	fa24 f303 	lsrgt.w	r3, r4, r3
 8006498:	bfd6      	itet	le
 800649a:	f1c3 0320 	rsble	r3, r3, #32
 800649e:	ea48 0003 	orrgt.w	r0, r8, r3
 80064a2:	fa04 f003 	lslle.w	r0, r4, r3
 80064a6:	f7f9 ff9d 	bl	80003e4 <__aeabi_ui2d>
 80064aa:	2201      	movs	r2, #1
 80064ac:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 80064b0:	3e01      	subs	r6, #1
 80064b2:	9212      	str	r2, [sp, #72]	@ 0x48
 80064b4:	e775      	b.n	80063a2 <_dtoa_r+0x102>
 80064b6:	2301      	movs	r3, #1
 80064b8:	e7b6      	b.n	8006428 <_dtoa_r+0x188>
 80064ba:	900f      	str	r0, [sp, #60]	@ 0x3c
 80064bc:	e7b5      	b.n	800642a <_dtoa_r+0x18a>
 80064be:	427b      	negs	r3, r7
 80064c0:	930a      	str	r3, [sp, #40]	@ 0x28
 80064c2:	2300      	movs	r3, #0
 80064c4:	eba8 0807 	sub.w	r8, r8, r7
 80064c8:	930e      	str	r3, [sp, #56]	@ 0x38
 80064ca:	e7c2      	b.n	8006452 <_dtoa_r+0x1b2>
 80064cc:	2300      	movs	r3, #0
 80064ce:	930b      	str	r3, [sp, #44]	@ 0x2c
 80064d0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80064d2:	2b00      	cmp	r3, #0
 80064d4:	dc35      	bgt.n	8006542 <_dtoa_r+0x2a2>
 80064d6:	2301      	movs	r3, #1
 80064d8:	461a      	mov	r2, r3
 80064da:	e9cd 3307 	strd	r3, r3, [sp, #28]
 80064de:	9221      	str	r2, [sp, #132]	@ 0x84
 80064e0:	e00b      	b.n	80064fa <_dtoa_r+0x25a>
 80064e2:	2301      	movs	r3, #1
 80064e4:	e7f3      	b.n	80064ce <_dtoa_r+0x22e>
 80064e6:	2300      	movs	r3, #0
 80064e8:	930b      	str	r3, [sp, #44]	@ 0x2c
 80064ea:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80064ec:	18fb      	adds	r3, r7, r3
 80064ee:	9308      	str	r3, [sp, #32]
 80064f0:	3301      	adds	r3, #1
 80064f2:	2b01      	cmp	r3, #1
 80064f4:	9307      	str	r3, [sp, #28]
 80064f6:	bfb8      	it	lt
 80064f8:	2301      	movlt	r3, #1
 80064fa:	2100      	movs	r1, #0
 80064fc:	2204      	movs	r2, #4
 80064fe:	f8db 001c 	ldr.w	r0, [fp, #28]
 8006502:	f102 0514 	add.w	r5, r2, #20
 8006506:	429d      	cmp	r5, r3
 8006508:	d91f      	bls.n	800654a <_dtoa_r+0x2aa>
 800650a:	6041      	str	r1, [r0, #4]
 800650c:	4658      	mov	r0, fp
 800650e:	f000 fce9 	bl	8006ee4 <_Balloc>
 8006512:	4682      	mov	sl, r0
 8006514:	2800      	cmp	r0, #0
 8006516:	d139      	bne.n	800658c <_dtoa_r+0x2ec>
 8006518:	4602      	mov	r2, r0
 800651a:	f240 11af 	movw	r1, #431	@ 0x1af
 800651e:	4b1a      	ldr	r3, [pc, #104]	@ (8006588 <_dtoa_r+0x2e8>)
 8006520:	e6d2      	b.n	80062c8 <_dtoa_r+0x28>
 8006522:	2301      	movs	r3, #1
 8006524:	e7e0      	b.n	80064e8 <_dtoa_r+0x248>
 8006526:	2401      	movs	r4, #1
 8006528:	2300      	movs	r3, #0
 800652a:	940b      	str	r4, [sp, #44]	@ 0x2c
 800652c:	9320      	str	r3, [sp, #128]	@ 0x80
 800652e:	f04f 33ff 	mov.w	r3, #4294967295
 8006532:	2200      	movs	r2, #0
 8006534:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8006538:	2312      	movs	r3, #18
 800653a:	e7d0      	b.n	80064de <_dtoa_r+0x23e>
 800653c:	2301      	movs	r3, #1
 800653e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8006540:	e7f5      	b.n	800652e <_dtoa_r+0x28e>
 8006542:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8006544:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8006548:	e7d7      	b.n	80064fa <_dtoa_r+0x25a>
 800654a:	3101      	adds	r1, #1
 800654c:	0052      	lsls	r2, r2, #1
 800654e:	e7d8      	b.n	8006502 <_dtoa_r+0x262>
 8006550:	636f4361 	.word	0x636f4361
 8006554:	3fd287a7 	.word	0x3fd287a7
 8006558:	8b60c8b3 	.word	0x8b60c8b3
 800655c:	3fc68a28 	.word	0x3fc68a28
 8006560:	509f79fb 	.word	0x509f79fb
 8006564:	3fd34413 	.word	0x3fd34413
 8006568:	08007f41 	.word	0x08007f41
 800656c:	08007f58 	.word	0x08007f58
 8006570:	7ff00000 	.word	0x7ff00000
 8006574:	08007f3d 	.word	0x08007f3d
 8006578:	08007ecb 	.word	0x08007ecb
 800657c:	08007eca 	.word	0x08007eca
 8006580:	3ff80000 	.word	0x3ff80000
 8006584:	08008050 	.word	0x08008050
 8006588:	08007fb0 	.word	0x08007fb0
 800658c:	f8db 301c 	ldr.w	r3, [fp, #28]
 8006590:	6018      	str	r0, [r3, #0]
 8006592:	9b07      	ldr	r3, [sp, #28]
 8006594:	2b0e      	cmp	r3, #14
 8006596:	f200 80a4 	bhi.w	80066e2 <_dtoa_r+0x442>
 800659a:	2c00      	cmp	r4, #0
 800659c:	f000 80a1 	beq.w	80066e2 <_dtoa_r+0x442>
 80065a0:	2f00      	cmp	r7, #0
 80065a2:	dd33      	ble.n	800660c <_dtoa_r+0x36c>
 80065a4:	4b86      	ldr	r3, [pc, #536]	@ (80067c0 <_dtoa_r+0x520>)
 80065a6:	f007 020f 	and.w	r2, r7, #15
 80065aa:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80065ae:	05f8      	lsls	r0, r7, #23
 80065b0:	e9d3 3400 	ldrd	r3, r4, [r3]
 80065b4:	e9cd 3404 	strd	r3, r4, [sp, #16]
 80065b8:	ea4f 1427 	mov.w	r4, r7, asr #4
 80065bc:	d516      	bpl.n	80065ec <_dtoa_r+0x34c>
 80065be:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80065c2:	4b80      	ldr	r3, [pc, #512]	@ (80067c4 <_dtoa_r+0x524>)
 80065c4:	2603      	movs	r6, #3
 80065c6:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80065ca:	f7fa f8af 	bl	800072c <__aeabi_ddiv>
 80065ce:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80065d2:	f004 040f 	and.w	r4, r4, #15
 80065d6:	4d7b      	ldr	r5, [pc, #492]	@ (80067c4 <_dtoa_r+0x524>)
 80065d8:	b954      	cbnz	r4, 80065f0 <_dtoa_r+0x350>
 80065da:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80065de:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80065e2:	f7fa f8a3 	bl	800072c <__aeabi_ddiv>
 80065e6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80065ea:	e028      	b.n	800663e <_dtoa_r+0x39e>
 80065ec:	2602      	movs	r6, #2
 80065ee:	e7f2      	b.n	80065d6 <_dtoa_r+0x336>
 80065f0:	07e1      	lsls	r1, r4, #31
 80065f2:	d508      	bpl.n	8006606 <_dtoa_r+0x366>
 80065f4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80065f8:	e9d5 2300 	ldrd	r2, r3, [r5]
 80065fc:	f7f9 ff6c 	bl	80004d8 <__aeabi_dmul>
 8006600:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8006604:	3601      	adds	r6, #1
 8006606:	1064      	asrs	r4, r4, #1
 8006608:	3508      	adds	r5, #8
 800660a:	e7e5      	b.n	80065d8 <_dtoa_r+0x338>
 800660c:	f000 80d2 	beq.w	80067b4 <_dtoa_r+0x514>
 8006610:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8006614:	427c      	negs	r4, r7
 8006616:	4b6a      	ldr	r3, [pc, #424]	@ (80067c0 <_dtoa_r+0x520>)
 8006618:	f004 020f 	and.w	r2, r4, #15
 800661c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8006620:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006624:	f7f9 ff58 	bl	80004d8 <__aeabi_dmul>
 8006628:	2602      	movs	r6, #2
 800662a:	2300      	movs	r3, #0
 800662c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8006630:	4d64      	ldr	r5, [pc, #400]	@ (80067c4 <_dtoa_r+0x524>)
 8006632:	1124      	asrs	r4, r4, #4
 8006634:	2c00      	cmp	r4, #0
 8006636:	f040 80b2 	bne.w	800679e <_dtoa_r+0x4fe>
 800663a:	2b00      	cmp	r3, #0
 800663c:	d1d3      	bne.n	80065e6 <_dtoa_r+0x346>
 800663e:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8006642:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8006644:	2b00      	cmp	r3, #0
 8006646:	f000 80b7 	beq.w	80067b8 <_dtoa_r+0x518>
 800664a:	2200      	movs	r2, #0
 800664c:	4620      	mov	r0, r4
 800664e:	4629      	mov	r1, r5
 8006650:	4b5d      	ldr	r3, [pc, #372]	@ (80067c8 <_dtoa_r+0x528>)
 8006652:	f7fa f9b3 	bl	80009bc <__aeabi_dcmplt>
 8006656:	2800      	cmp	r0, #0
 8006658:	f000 80ae 	beq.w	80067b8 <_dtoa_r+0x518>
 800665c:	9b07      	ldr	r3, [sp, #28]
 800665e:	2b00      	cmp	r3, #0
 8006660:	f000 80aa 	beq.w	80067b8 <_dtoa_r+0x518>
 8006664:	9b08      	ldr	r3, [sp, #32]
 8006666:	2b00      	cmp	r3, #0
 8006668:	dd37      	ble.n	80066da <_dtoa_r+0x43a>
 800666a:	1e7b      	subs	r3, r7, #1
 800666c:	4620      	mov	r0, r4
 800666e:	9304      	str	r3, [sp, #16]
 8006670:	2200      	movs	r2, #0
 8006672:	4629      	mov	r1, r5
 8006674:	4b55      	ldr	r3, [pc, #340]	@ (80067cc <_dtoa_r+0x52c>)
 8006676:	f7f9 ff2f 	bl	80004d8 <__aeabi_dmul>
 800667a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800667e:	9c08      	ldr	r4, [sp, #32]
 8006680:	3601      	adds	r6, #1
 8006682:	4630      	mov	r0, r6
 8006684:	f7f9 febe 	bl	8000404 <__aeabi_i2d>
 8006688:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800668c:	f7f9 ff24 	bl	80004d8 <__aeabi_dmul>
 8006690:	2200      	movs	r2, #0
 8006692:	4b4f      	ldr	r3, [pc, #316]	@ (80067d0 <_dtoa_r+0x530>)
 8006694:	f7f9 fd6a 	bl	800016c <__adddf3>
 8006698:	4605      	mov	r5, r0
 800669a:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 800669e:	2c00      	cmp	r4, #0
 80066a0:	f040 809a 	bne.w	80067d8 <_dtoa_r+0x538>
 80066a4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80066a8:	2200      	movs	r2, #0
 80066aa:	4b4a      	ldr	r3, [pc, #296]	@ (80067d4 <_dtoa_r+0x534>)
 80066ac:	f7f9 fd5c 	bl	8000168 <__aeabi_dsub>
 80066b0:	4602      	mov	r2, r0
 80066b2:	460b      	mov	r3, r1
 80066b4:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80066b8:	462a      	mov	r2, r5
 80066ba:	4633      	mov	r3, r6
 80066bc:	f7fa f99c 	bl	80009f8 <__aeabi_dcmpgt>
 80066c0:	2800      	cmp	r0, #0
 80066c2:	f040 828e 	bne.w	8006be2 <_dtoa_r+0x942>
 80066c6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80066ca:	462a      	mov	r2, r5
 80066cc:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 80066d0:	f7fa f974 	bl	80009bc <__aeabi_dcmplt>
 80066d4:	2800      	cmp	r0, #0
 80066d6:	f040 8127 	bne.w	8006928 <_dtoa_r+0x688>
 80066da:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 80066de:	e9cd 3402 	strd	r3, r4, [sp, #8]
 80066e2:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80066e4:	2b00      	cmp	r3, #0
 80066e6:	f2c0 8163 	blt.w	80069b0 <_dtoa_r+0x710>
 80066ea:	2f0e      	cmp	r7, #14
 80066ec:	f300 8160 	bgt.w	80069b0 <_dtoa_r+0x710>
 80066f0:	4b33      	ldr	r3, [pc, #204]	@ (80067c0 <_dtoa_r+0x520>)
 80066f2:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80066f6:	e9d3 3400 	ldrd	r3, r4, [r3]
 80066fa:	e9cd 3404 	strd	r3, r4, [sp, #16]
 80066fe:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8006700:	2b00      	cmp	r3, #0
 8006702:	da03      	bge.n	800670c <_dtoa_r+0x46c>
 8006704:	9b07      	ldr	r3, [sp, #28]
 8006706:	2b00      	cmp	r3, #0
 8006708:	f340 8100 	ble.w	800690c <_dtoa_r+0x66c>
 800670c:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8006710:	4656      	mov	r6, sl
 8006712:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8006716:	4620      	mov	r0, r4
 8006718:	4629      	mov	r1, r5
 800671a:	f7fa f807 	bl	800072c <__aeabi_ddiv>
 800671e:	f7fa f98b 	bl	8000a38 <__aeabi_d2iz>
 8006722:	4680      	mov	r8, r0
 8006724:	f7f9 fe6e 	bl	8000404 <__aeabi_i2d>
 8006728:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800672c:	f7f9 fed4 	bl	80004d8 <__aeabi_dmul>
 8006730:	4602      	mov	r2, r0
 8006732:	460b      	mov	r3, r1
 8006734:	4620      	mov	r0, r4
 8006736:	4629      	mov	r1, r5
 8006738:	f7f9 fd16 	bl	8000168 <__aeabi_dsub>
 800673c:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8006740:	9d07      	ldr	r5, [sp, #28]
 8006742:	f806 4b01 	strb.w	r4, [r6], #1
 8006746:	eba6 040a 	sub.w	r4, r6, sl
 800674a:	42a5      	cmp	r5, r4
 800674c:	4602      	mov	r2, r0
 800674e:	460b      	mov	r3, r1
 8006750:	f040 8116 	bne.w	8006980 <_dtoa_r+0x6e0>
 8006754:	f7f9 fd0a 	bl	800016c <__adddf3>
 8006758:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800675c:	4604      	mov	r4, r0
 800675e:	460d      	mov	r5, r1
 8006760:	f7fa f94a 	bl	80009f8 <__aeabi_dcmpgt>
 8006764:	2800      	cmp	r0, #0
 8006766:	f040 80f8 	bne.w	800695a <_dtoa_r+0x6ba>
 800676a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800676e:	4620      	mov	r0, r4
 8006770:	4629      	mov	r1, r5
 8006772:	f7fa f919 	bl	80009a8 <__aeabi_dcmpeq>
 8006776:	b118      	cbz	r0, 8006780 <_dtoa_r+0x4e0>
 8006778:	f018 0f01 	tst.w	r8, #1
 800677c:	f040 80ed 	bne.w	800695a <_dtoa_r+0x6ba>
 8006780:	4649      	mov	r1, r9
 8006782:	4658      	mov	r0, fp
 8006784:	f000 fbee 	bl	8006f64 <_Bfree>
 8006788:	2300      	movs	r3, #0
 800678a:	7033      	strb	r3, [r6, #0]
 800678c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 800678e:	3701      	adds	r7, #1
 8006790:	601f      	str	r7, [r3, #0]
 8006792:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8006794:	2b00      	cmp	r3, #0
 8006796:	f000 8320 	beq.w	8006dda <_dtoa_r+0xb3a>
 800679a:	601e      	str	r6, [r3, #0]
 800679c:	e31d      	b.n	8006dda <_dtoa_r+0xb3a>
 800679e:	07e2      	lsls	r2, r4, #31
 80067a0:	d505      	bpl.n	80067ae <_dtoa_r+0x50e>
 80067a2:	e9d5 2300 	ldrd	r2, r3, [r5]
 80067a6:	f7f9 fe97 	bl	80004d8 <__aeabi_dmul>
 80067aa:	2301      	movs	r3, #1
 80067ac:	3601      	adds	r6, #1
 80067ae:	1064      	asrs	r4, r4, #1
 80067b0:	3508      	adds	r5, #8
 80067b2:	e73f      	b.n	8006634 <_dtoa_r+0x394>
 80067b4:	2602      	movs	r6, #2
 80067b6:	e742      	b.n	800663e <_dtoa_r+0x39e>
 80067b8:	9c07      	ldr	r4, [sp, #28]
 80067ba:	9704      	str	r7, [sp, #16]
 80067bc:	e761      	b.n	8006682 <_dtoa_r+0x3e2>
 80067be:	bf00      	nop
 80067c0:	08008050 	.word	0x08008050
 80067c4:	08008028 	.word	0x08008028
 80067c8:	3ff00000 	.word	0x3ff00000
 80067cc:	40240000 	.word	0x40240000
 80067d0:	401c0000 	.word	0x401c0000
 80067d4:	40140000 	.word	0x40140000
 80067d8:	4b70      	ldr	r3, [pc, #448]	@ (800699c <_dtoa_r+0x6fc>)
 80067da:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80067dc:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80067e0:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 80067e4:	4454      	add	r4, sl
 80067e6:	2900      	cmp	r1, #0
 80067e8:	d045      	beq.n	8006876 <_dtoa_r+0x5d6>
 80067ea:	2000      	movs	r0, #0
 80067ec:	496c      	ldr	r1, [pc, #432]	@ (80069a0 <_dtoa_r+0x700>)
 80067ee:	f7f9 ff9d 	bl	800072c <__aeabi_ddiv>
 80067f2:	4633      	mov	r3, r6
 80067f4:	462a      	mov	r2, r5
 80067f6:	f7f9 fcb7 	bl	8000168 <__aeabi_dsub>
 80067fa:	4656      	mov	r6, sl
 80067fc:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8006800:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006804:	f7fa f918 	bl	8000a38 <__aeabi_d2iz>
 8006808:	4605      	mov	r5, r0
 800680a:	f7f9 fdfb 	bl	8000404 <__aeabi_i2d>
 800680e:	4602      	mov	r2, r0
 8006810:	460b      	mov	r3, r1
 8006812:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006816:	f7f9 fca7 	bl	8000168 <__aeabi_dsub>
 800681a:	4602      	mov	r2, r0
 800681c:	460b      	mov	r3, r1
 800681e:	3530      	adds	r5, #48	@ 0x30
 8006820:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8006824:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8006828:	f806 5b01 	strb.w	r5, [r6], #1
 800682c:	f7fa f8c6 	bl	80009bc <__aeabi_dcmplt>
 8006830:	2800      	cmp	r0, #0
 8006832:	d163      	bne.n	80068fc <_dtoa_r+0x65c>
 8006834:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8006838:	2000      	movs	r0, #0
 800683a:	495a      	ldr	r1, [pc, #360]	@ (80069a4 <_dtoa_r+0x704>)
 800683c:	f7f9 fc94 	bl	8000168 <__aeabi_dsub>
 8006840:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8006844:	f7fa f8ba 	bl	80009bc <__aeabi_dcmplt>
 8006848:	2800      	cmp	r0, #0
 800684a:	f040 8087 	bne.w	800695c <_dtoa_r+0x6bc>
 800684e:	42a6      	cmp	r6, r4
 8006850:	f43f af43 	beq.w	80066da <_dtoa_r+0x43a>
 8006854:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8006858:	2200      	movs	r2, #0
 800685a:	4b53      	ldr	r3, [pc, #332]	@ (80069a8 <_dtoa_r+0x708>)
 800685c:	f7f9 fe3c 	bl	80004d8 <__aeabi_dmul>
 8006860:	2200      	movs	r2, #0
 8006862:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8006866:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800686a:	4b4f      	ldr	r3, [pc, #316]	@ (80069a8 <_dtoa_r+0x708>)
 800686c:	f7f9 fe34 	bl	80004d8 <__aeabi_dmul>
 8006870:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8006874:	e7c4      	b.n	8006800 <_dtoa_r+0x560>
 8006876:	4631      	mov	r1, r6
 8006878:	4628      	mov	r0, r5
 800687a:	f7f9 fe2d 	bl	80004d8 <__aeabi_dmul>
 800687e:	4656      	mov	r6, sl
 8006880:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8006884:	9413      	str	r4, [sp, #76]	@ 0x4c
 8006886:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800688a:	f7fa f8d5 	bl	8000a38 <__aeabi_d2iz>
 800688e:	4605      	mov	r5, r0
 8006890:	f7f9 fdb8 	bl	8000404 <__aeabi_i2d>
 8006894:	4602      	mov	r2, r0
 8006896:	460b      	mov	r3, r1
 8006898:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800689c:	f7f9 fc64 	bl	8000168 <__aeabi_dsub>
 80068a0:	4602      	mov	r2, r0
 80068a2:	460b      	mov	r3, r1
 80068a4:	3530      	adds	r5, #48	@ 0x30
 80068a6:	f806 5b01 	strb.w	r5, [r6], #1
 80068aa:	42a6      	cmp	r6, r4
 80068ac:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80068b0:	f04f 0200 	mov.w	r2, #0
 80068b4:	d124      	bne.n	8006900 <_dtoa_r+0x660>
 80068b6:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 80068ba:	4b39      	ldr	r3, [pc, #228]	@ (80069a0 <_dtoa_r+0x700>)
 80068bc:	f7f9 fc56 	bl	800016c <__adddf3>
 80068c0:	4602      	mov	r2, r0
 80068c2:	460b      	mov	r3, r1
 80068c4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80068c8:	f7fa f896 	bl	80009f8 <__aeabi_dcmpgt>
 80068cc:	2800      	cmp	r0, #0
 80068ce:	d145      	bne.n	800695c <_dtoa_r+0x6bc>
 80068d0:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 80068d4:	2000      	movs	r0, #0
 80068d6:	4932      	ldr	r1, [pc, #200]	@ (80069a0 <_dtoa_r+0x700>)
 80068d8:	f7f9 fc46 	bl	8000168 <__aeabi_dsub>
 80068dc:	4602      	mov	r2, r0
 80068de:	460b      	mov	r3, r1
 80068e0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80068e4:	f7fa f86a 	bl	80009bc <__aeabi_dcmplt>
 80068e8:	2800      	cmp	r0, #0
 80068ea:	f43f aef6 	beq.w	80066da <_dtoa_r+0x43a>
 80068ee:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80068f0:	1e73      	subs	r3, r6, #1
 80068f2:	9313      	str	r3, [sp, #76]	@ 0x4c
 80068f4:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 80068f8:	2b30      	cmp	r3, #48	@ 0x30
 80068fa:	d0f8      	beq.n	80068ee <_dtoa_r+0x64e>
 80068fc:	9f04      	ldr	r7, [sp, #16]
 80068fe:	e73f      	b.n	8006780 <_dtoa_r+0x4e0>
 8006900:	4b29      	ldr	r3, [pc, #164]	@ (80069a8 <_dtoa_r+0x708>)
 8006902:	f7f9 fde9 	bl	80004d8 <__aeabi_dmul>
 8006906:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800690a:	e7bc      	b.n	8006886 <_dtoa_r+0x5e6>
 800690c:	d10c      	bne.n	8006928 <_dtoa_r+0x688>
 800690e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8006912:	2200      	movs	r2, #0
 8006914:	4b25      	ldr	r3, [pc, #148]	@ (80069ac <_dtoa_r+0x70c>)
 8006916:	f7f9 fddf 	bl	80004d8 <__aeabi_dmul>
 800691a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800691e:	f7fa f861 	bl	80009e4 <__aeabi_dcmpge>
 8006922:	2800      	cmp	r0, #0
 8006924:	f000 815b 	beq.w	8006bde <_dtoa_r+0x93e>
 8006928:	2400      	movs	r4, #0
 800692a:	4625      	mov	r5, r4
 800692c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800692e:	4656      	mov	r6, sl
 8006930:	43db      	mvns	r3, r3
 8006932:	9304      	str	r3, [sp, #16]
 8006934:	2700      	movs	r7, #0
 8006936:	4621      	mov	r1, r4
 8006938:	4658      	mov	r0, fp
 800693a:	f000 fb13 	bl	8006f64 <_Bfree>
 800693e:	2d00      	cmp	r5, #0
 8006940:	d0dc      	beq.n	80068fc <_dtoa_r+0x65c>
 8006942:	b12f      	cbz	r7, 8006950 <_dtoa_r+0x6b0>
 8006944:	42af      	cmp	r7, r5
 8006946:	d003      	beq.n	8006950 <_dtoa_r+0x6b0>
 8006948:	4639      	mov	r1, r7
 800694a:	4658      	mov	r0, fp
 800694c:	f000 fb0a 	bl	8006f64 <_Bfree>
 8006950:	4629      	mov	r1, r5
 8006952:	4658      	mov	r0, fp
 8006954:	f000 fb06 	bl	8006f64 <_Bfree>
 8006958:	e7d0      	b.n	80068fc <_dtoa_r+0x65c>
 800695a:	9704      	str	r7, [sp, #16]
 800695c:	4633      	mov	r3, r6
 800695e:	461e      	mov	r6, r3
 8006960:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8006964:	2a39      	cmp	r2, #57	@ 0x39
 8006966:	d107      	bne.n	8006978 <_dtoa_r+0x6d8>
 8006968:	459a      	cmp	sl, r3
 800696a:	d1f8      	bne.n	800695e <_dtoa_r+0x6be>
 800696c:	9a04      	ldr	r2, [sp, #16]
 800696e:	3201      	adds	r2, #1
 8006970:	9204      	str	r2, [sp, #16]
 8006972:	2230      	movs	r2, #48	@ 0x30
 8006974:	f88a 2000 	strb.w	r2, [sl]
 8006978:	781a      	ldrb	r2, [r3, #0]
 800697a:	3201      	adds	r2, #1
 800697c:	701a      	strb	r2, [r3, #0]
 800697e:	e7bd      	b.n	80068fc <_dtoa_r+0x65c>
 8006980:	2200      	movs	r2, #0
 8006982:	4b09      	ldr	r3, [pc, #36]	@ (80069a8 <_dtoa_r+0x708>)
 8006984:	f7f9 fda8 	bl	80004d8 <__aeabi_dmul>
 8006988:	2200      	movs	r2, #0
 800698a:	2300      	movs	r3, #0
 800698c:	4604      	mov	r4, r0
 800698e:	460d      	mov	r5, r1
 8006990:	f7fa f80a 	bl	80009a8 <__aeabi_dcmpeq>
 8006994:	2800      	cmp	r0, #0
 8006996:	f43f aebc 	beq.w	8006712 <_dtoa_r+0x472>
 800699a:	e6f1      	b.n	8006780 <_dtoa_r+0x4e0>
 800699c:	08008050 	.word	0x08008050
 80069a0:	3fe00000 	.word	0x3fe00000
 80069a4:	3ff00000 	.word	0x3ff00000
 80069a8:	40240000 	.word	0x40240000
 80069ac:	40140000 	.word	0x40140000
 80069b0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80069b2:	2a00      	cmp	r2, #0
 80069b4:	f000 80db 	beq.w	8006b6e <_dtoa_r+0x8ce>
 80069b8:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80069ba:	2a01      	cmp	r2, #1
 80069bc:	f300 80bf 	bgt.w	8006b3e <_dtoa_r+0x89e>
 80069c0:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80069c2:	2a00      	cmp	r2, #0
 80069c4:	f000 80b7 	beq.w	8006b36 <_dtoa_r+0x896>
 80069c8:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 80069cc:	4646      	mov	r6, r8
 80069ce:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80069d0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80069d2:	2101      	movs	r1, #1
 80069d4:	441a      	add	r2, r3
 80069d6:	4658      	mov	r0, fp
 80069d8:	4498      	add	r8, r3
 80069da:	9209      	str	r2, [sp, #36]	@ 0x24
 80069dc:	f000 fb76 	bl	80070cc <__i2b>
 80069e0:	4605      	mov	r5, r0
 80069e2:	b15e      	cbz	r6, 80069fc <_dtoa_r+0x75c>
 80069e4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80069e6:	2b00      	cmp	r3, #0
 80069e8:	dd08      	ble.n	80069fc <_dtoa_r+0x75c>
 80069ea:	42b3      	cmp	r3, r6
 80069ec:	bfa8      	it	ge
 80069ee:	4633      	movge	r3, r6
 80069f0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80069f2:	eba8 0803 	sub.w	r8, r8, r3
 80069f6:	1af6      	subs	r6, r6, r3
 80069f8:	1ad3      	subs	r3, r2, r3
 80069fa:	9309      	str	r3, [sp, #36]	@ 0x24
 80069fc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80069fe:	b1f3      	cbz	r3, 8006a3e <_dtoa_r+0x79e>
 8006a00:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8006a02:	2b00      	cmp	r3, #0
 8006a04:	f000 80b7 	beq.w	8006b76 <_dtoa_r+0x8d6>
 8006a08:	b18c      	cbz	r4, 8006a2e <_dtoa_r+0x78e>
 8006a0a:	4629      	mov	r1, r5
 8006a0c:	4622      	mov	r2, r4
 8006a0e:	4658      	mov	r0, fp
 8006a10:	f000 fc1a 	bl	8007248 <__pow5mult>
 8006a14:	464a      	mov	r2, r9
 8006a16:	4601      	mov	r1, r0
 8006a18:	4605      	mov	r5, r0
 8006a1a:	4658      	mov	r0, fp
 8006a1c:	f000 fb6c 	bl	80070f8 <__multiply>
 8006a20:	4649      	mov	r1, r9
 8006a22:	9004      	str	r0, [sp, #16]
 8006a24:	4658      	mov	r0, fp
 8006a26:	f000 fa9d 	bl	8006f64 <_Bfree>
 8006a2a:	9b04      	ldr	r3, [sp, #16]
 8006a2c:	4699      	mov	r9, r3
 8006a2e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006a30:	1b1a      	subs	r2, r3, r4
 8006a32:	d004      	beq.n	8006a3e <_dtoa_r+0x79e>
 8006a34:	4649      	mov	r1, r9
 8006a36:	4658      	mov	r0, fp
 8006a38:	f000 fc06 	bl	8007248 <__pow5mult>
 8006a3c:	4681      	mov	r9, r0
 8006a3e:	2101      	movs	r1, #1
 8006a40:	4658      	mov	r0, fp
 8006a42:	f000 fb43 	bl	80070cc <__i2b>
 8006a46:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006a48:	4604      	mov	r4, r0
 8006a4a:	2b00      	cmp	r3, #0
 8006a4c:	f000 81c9 	beq.w	8006de2 <_dtoa_r+0xb42>
 8006a50:	461a      	mov	r2, r3
 8006a52:	4601      	mov	r1, r0
 8006a54:	4658      	mov	r0, fp
 8006a56:	f000 fbf7 	bl	8007248 <__pow5mult>
 8006a5a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8006a5c:	4604      	mov	r4, r0
 8006a5e:	2b01      	cmp	r3, #1
 8006a60:	f300 808f 	bgt.w	8006b82 <_dtoa_r+0x8e2>
 8006a64:	9b02      	ldr	r3, [sp, #8]
 8006a66:	2b00      	cmp	r3, #0
 8006a68:	f040 8087 	bne.w	8006b7a <_dtoa_r+0x8da>
 8006a6c:	9b03      	ldr	r3, [sp, #12]
 8006a6e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006a72:	2b00      	cmp	r3, #0
 8006a74:	f040 8083 	bne.w	8006b7e <_dtoa_r+0x8de>
 8006a78:	9b03      	ldr	r3, [sp, #12]
 8006a7a:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8006a7e:	0d1b      	lsrs	r3, r3, #20
 8006a80:	051b      	lsls	r3, r3, #20
 8006a82:	b12b      	cbz	r3, 8006a90 <_dtoa_r+0x7f0>
 8006a84:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006a86:	f108 0801 	add.w	r8, r8, #1
 8006a8a:	3301      	adds	r3, #1
 8006a8c:	9309      	str	r3, [sp, #36]	@ 0x24
 8006a8e:	2301      	movs	r3, #1
 8006a90:	930a      	str	r3, [sp, #40]	@ 0x28
 8006a92:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006a94:	2b00      	cmp	r3, #0
 8006a96:	f000 81aa 	beq.w	8006dee <_dtoa_r+0xb4e>
 8006a9a:	6923      	ldr	r3, [r4, #16]
 8006a9c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8006aa0:	6918      	ldr	r0, [r3, #16]
 8006aa2:	f000 fac7 	bl	8007034 <__hi0bits>
 8006aa6:	f1c0 0020 	rsb	r0, r0, #32
 8006aaa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006aac:	4418      	add	r0, r3
 8006aae:	f010 001f 	ands.w	r0, r0, #31
 8006ab2:	d071      	beq.n	8006b98 <_dtoa_r+0x8f8>
 8006ab4:	f1c0 0320 	rsb	r3, r0, #32
 8006ab8:	2b04      	cmp	r3, #4
 8006aba:	dd65      	ble.n	8006b88 <_dtoa_r+0x8e8>
 8006abc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006abe:	f1c0 001c 	rsb	r0, r0, #28
 8006ac2:	4403      	add	r3, r0
 8006ac4:	4480      	add	r8, r0
 8006ac6:	4406      	add	r6, r0
 8006ac8:	9309      	str	r3, [sp, #36]	@ 0x24
 8006aca:	f1b8 0f00 	cmp.w	r8, #0
 8006ace:	dd05      	ble.n	8006adc <_dtoa_r+0x83c>
 8006ad0:	4649      	mov	r1, r9
 8006ad2:	4642      	mov	r2, r8
 8006ad4:	4658      	mov	r0, fp
 8006ad6:	f000 fc11 	bl	80072fc <__lshift>
 8006ada:	4681      	mov	r9, r0
 8006adc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006ade:	2b00      	cmp	r3, #0
 8006ae0:	dd05      	ble.n	8006aee <_dtoa_r+0x84e>
 8006ae2:	4621      	mov	r1, r4
 8006ae4:	461a      	mov	r2, r3
 8006ae6:	4658      	mov	r0, fp
 8006ae8:	f000 fc08 	bl	80072fc <__lshift>
 8006aec:	4604      	mov	r4, r0
 8006aee:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8006af0:	2b00      	cmp	r3, #0
 8006af2:	d053      	beq.n	8006b9c <_dtoa_r+0x8fc>
 8006af4:	4621      	mov	r1, r4
 8006af6:	4648      	mov	r0, r9
 8006af8:	f000 fc6c 	bl	80073d4 <__mcmp>
 8006afc:	2800      	cmp	r0, #0
 8006afe:	da4d      	bge.n	8006b9c <_dtoa_r+0x8fc>
 8006b00:	1e7b      	subs	r3, r7, #1
 8006b02:	4649      	mov	r1, r9
 8006b04:	9304      	str	r3, [sp, #16]
 8006b06:	220a      	movs	r2, #10
 8006b08:	2300      	movs	r3, #0
 8006b0a:	4658      	mov	r0, fp
 8006b0c:	f000 fa4c 	bl	8006fa8 <__multadd>
 8006b10:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8006b12:	4681      	mov	r9, r0
 8006b14:	2b00      	cmp	r3, #0
 8006b16:	f000 816c 	beq.w	8006df2 <_dtoa_r+0xb52>
 8006b1a:	2300      	movs	r3, #0
 8006b1c:	4629      	mov	r1, r5
 8006b1e:	220a      	movs	r2, #10
 8006b20:	4658      	mov	r0, fp
 8006b22:	f000 fa41 	bl	8006fa8 <__multadd>
 8006b26:	9b08      	ldr	r3, [sp, #32]
 8006b28:	4605      	mov	r5, r0
 8006b2a:	2b00      	cmp	r3, #0
 8006b2c:	dc61      	bgt.n	8006bf2 <_dtoa_r+0x952>
 8006b2e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8006b30:	2b02      	cmp	r3, #2
 8006b32:	dc3b      	bgt.n	8006bac <_dtoa_r+0x90c>
 8006b34:	e05d      	b.n	8006bf2 <_dtoa_r+0x952>
 8006b36:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8006b38:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8006b3c:	e746      	b.n	80069cc <_dtoa_r+0x72c>
 8006b3e:	9b07      	ldr	r3, [sp, #28]
 8006b40:	1e5c      	subs	r4, r3, #1
 8006b42:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006b44:	42a3      	cmp	r3, r4
 8006b46:	bfbf      	itttt	lt
 8006b48:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8006b4a:	9a0e      	ldrlt	r2, [sp, #56]	@ 0x38
 8006b4c:	1ae3      	sublt	r3, r4, r3
 8006b4e:	18d2      	addlt	r2, r2, r3
 8006b50:	bfa8      	it	ge
 8006b52:	1b1c      	subge	r4, r3, r4
 8006b54:	9b07      	ldr	r3, [sp, #28]
 8006b56:	bfbe      	ittt	lt
 8006b58:	940a      	strlt	r4, [sp, #40]	@ 0x28
 8006b5a:	920e      	strlt	r2, [sp, #56]	@ 0x38
 8006b5c:	2400      	movlt	r4, #0
 8006b5e:	2b00      	cmp	r3, #0
 8006b60:	bfb5      	itete	lt
 8006b62:	eba8 0603 	sublt.w	r6, r8, r3
 8006b66:	4646      	movge	r6, r8
 8006b68:	2300      	movlt	r3, #0
 8006b6a:	9b07      	ldrge	r3, [sp, #28]
 8006b6c:	e730      	b.n	80069d0 <_dtoa_r+0x730>
 8006b6e:	4646      	mov	r6, r8
 8006b70:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8006b72:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8006b74:	e735      	b.n	80069e2 <_dtoa_r+0x742>
 8006b76:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8006b78:	e75c      	b.n	8006a34 <_dtoa_r+0x794>
 8006b7a:	2300      	movs	r3, #0
 8006b7c:	e788      	b.n	8006a90 <_dtoa_r+0x7f0>
 8006b7e:	9b02      	ldr	r3, [sp, #8]
 8006b80:	e786      	b.n	8006a90 <_dtoa_r+0x7f0>
 8006b82:	2300      	movs	r3, #0
 8006b84:	930a      	str	r3, [sp, #40]	@ 0x28
 8006b86:	e788      	b.n	8006a9a <_dtoa_r+0x7fa>
 8006b88:	d09f      	beq.n	8006aca <_dtoa_r+0x82a>
 8006b8a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8006b8c:	331c      	adds	r3, #28
 8006b8e:	441a      	add	r2, r3
 8006b90:	4498      	add	r8, r3
 8006b92:	441e      	add	r6, r3
 8006b94:	9209      	str	r2, [sp, #36]	@ 0x24
 8006b96:	e798      	b.n	8006aca <_dtoa_r+0x82a>
 8006b98:	4603      	mov	r3, r0
 8006b9a:	e7f6      	b.n	8006b8a <_dtoa_r+0x8ea>
 8006b9c:	9b07      	ldr	r3, [sp, #28]
 8006b9e:	9704      	str	r7, [sp, #16]
 8006ba0:	2b00      	cmp	r3, #0
 8006ba2:	dc20      	bgt.n	8006be6 <_dtoa_r+0x946>
 8006ba4:	9308      	str	r3, [sp, #32]
 8006ba6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8006ba8:	2b02      	cmp	r3, #2
 8006baa:	dd1e      	ble.n	8006bea <_dtoa_r+0x94a>
 8006bac:	9b08      	ldr	r3, [sp, #32]
 8006bae:	2b00      	cmp	r3, #0
 8006bb0:	f47f aebc 	bne.w	800692c <_dtoa_r+0x68c>
 8006bb4:	4621      	mov	r1, r4
 8006bb6:	2205      	movs	r2, #5
 8006bb8:	4658      	mov	r0, fp
 8006bba:	f000 f9f5 	bl	8006fa8 <__multadd>
 8006bbe:	4601      	mov	r1, r0
 8006bc0:	4604      	mov	r4, r0
 8006bc2:	4648      	mov	r0, r9
 8006bc4:	f000 fc06 	bl	80073d4 <__mcmp>
 8006bc8:	2800      	cmp	r0, #0
 8006bca:	f77f aeaf 	ble.w	800692c <_dtoa_r+0x68c>
 8006bce:	2331      	movs	r3, #49	@ 0x31
 8006bd0:	4656      	mov	r6, sl
 8006bd2:	f806 3b01 	strb.w	r3, [r6], #1
 8006bd6:	9b04      	ldr	r3, [sp, #16]
 8006bd8:	3301      	adds	r3, #1
 8006bda:	9304      	str	r3, [sp, #16]
 8006bdc:	e6aa      	b.n	8006934 <_dtoa_r+0x694>
 8006bde:	9c07      	ldr	r4, [sp, #28]
 8006be0:	9704      	str	r7, [sp, #16]
 8006be2:	4625      	mov	r5, r4
 8006be4:	e7f3      	b.n	8006bce <_dtoa_r+0x92e>
 8006be6:	9b07      	ldr	r3, [sp, #28]
 8006be8:	9308      	str	r3, [sp, #32]
 8006bea:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8006bec:	2b00      	cmp	r3, #0
 8006bee:	f000 8104 	beq.w	8006dfa <_dtoa_r+0xb5a>
 8006bf2:	2e00      	cmp	r6, #0
 8006bf4:	dd05      	ble.n	8006c02 <_dtoa_r+0x962>
 8006bf6:	4629      	mov	r1, r5
 8006bf8:	4632      	mov	r2, r6
 8006bfa:	4658      	mov	r0, fp
 8006bfc:	f000 fb7e 	bl	80072fc <__lshift>
 8006c00:	4605      	mov	r5, r0
 8006c02:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006c04:	2b00      	cmp	r3, #0
 8006c06:	d05a      	beq.n	8006cbe <_dtoa_r+0xa1e>
 8006c08:	4658      	mov	r0, fp
 8006c0a:	6869      	ldr	r1, [r5, #4]
 8006c0c:	f000 f96a 	bl	8006ee4 <_Balloc>
 8006c10:	4606      	mov	r6, r0
 8006c12:	b928      	cbnz	r0, 8006c20 <_dtoa_r+0x980>
 8006c14:	4602      	mov	r2, r0
 8006c16:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8006c1a:	4b83      	ldr	r3, [pc, #524]	@ (8006e28 <_dtoa_r+0xb88>)
 8006c1c:	f7ff bb54 	b.w	80062c8 <_dtoa_r+0x28>
 8006c20:	692a      	ldr	r2, [r5, #16]
 8006c22:	f105 010c 	add.w	r1, r5, #12
 8006c26:	3202      	adds	r2, #2
 8006c28:	0092      	lsls	r2, r2, #2
 8006c2a:	300c      	adds	r0, #12
 8006c2c:	f7ff fa81 	bl	8006132 <memcpy>
 8006c30:	2201      	movs	r2, #1
 8006c32:	4631      	mov	r1, r6
 8006c34:	4658      	mov	r0, fp
 8006c36:	f000 fb61 	bl	80072fc <__lshift>
 8006c3a:	462f      	mov	r7, r5
 8006c3c:	4605      	mov	r5, r0
 8006c3e:	f10a 0301 	add.w	r3, sl, #1
 8006c42:	9307      	str	r3, [sp, #28]
 8006c44:	9b08      	ldr	r3, [sp, #32]
 8006c46:	4453      	add	r3, sl
 8006c48:	930b      	str	r3, [sp, #44]	@ 0x2c
 8006c4a:	9b02      	ldr	r3, [sp, #8]
 8006c4c:	f003 0301 	and.w	r3, r3, #1
 8006c50:	930a      	str	r3, [sp, #40]	@ 0x28
 8006c52:	9b07      	ldr	r3, [sp, #28]
 8006c54:	4621      	mov	r1, r4
 8006c56:	3b01      	subs	r3, #1
 8006c58:	4648      	mov	r0, r9
 8006c5a:	9302      	str	r3, [sp, #8]
 8006c5c:	f7ff fa96 	bl	800618c <quorem>
 8006c60:	4639      	mov	r1, r7
 8006c62:	9008      	str	r0, [sp, #32]
 8006c64:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8006c68:	4648      	mov	r0, r9
 8006c6a:	f000 fbb3 	bl	80073d4 <__mcmp>
 8006c6e:	462a      	mov	r2, r5
 8006c70:	9009      	str	r0, [sp, #36]	@ 0x24
 8006c72:	4621      	mov	r1, r4
 8006c74:	4658      	mov	r0, fp
 8006c76:	f000 fbc9 	bl	800740c <__mdiff>
 8006c7a:	68c2      	ldr	r2, [r0, #12]
 8006c7c:	4606      	mov	r6, r0
 8006c7e:	bb02      	cbnz	r2, 8006cc2 <_dtoa_r+0xa22>
 8006c80:	4601      	mov	r1, r0
 8006c82:	4648      	mov	r0, r9
 8006c84:	f000 fba6 	bl	80073d4 <__mcmp>
 8006c88:	4602      	mov	r2, r0
 8006c8a:	4631      	mov	r1, r6
 8006c8c:	4658      	mov	r0, fp
 8006c8e:	920c      	str	r2, [sp, #48]	@ 0x30
 8006c90:	f000 f968 	bl	8006f64 <_Bfree>
 8006c94:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8006c96:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8006c98:	9e07      	ldr	r6, [sp, #28]
 8006c9a:	ea43 0102 	orr.w	r1, r3, r2
 8006c9e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006ca0:	4319      	orrs	r1, r3
 8006ca2:	d110      	bne.n	8006cc6 <_dtoa_r+0xa26>
 8006ca4:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8006ca8:	d029      	beq.n	8006cfe <_dtoa_r+0xa5e>
 8006caa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006cac:	2b00      	cmp	r3, #0
 8006cae:	dd02      	ble.n	8006cb6 <_dtoa_r+0xa16>
 8006cb0:	9b08      	ldr	r3, [sp, #32]
 8006cb2:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 8006cb6:	9b02      	ldr	r3, [sp, #8]
 8006cb8:	f883 8000 	strb.w	r8, [r3]
 8006cbc:	e63b      	b.n	8006936 <_dtoa_r+0x696>
 8006cbe:	4628      	mov	r0, r5
 8006cc0:	e7bb      	b.n	8006c3a <_dtoa_r+0x99a>
 8006cc2:	2201      	movs	r2, #1
 8006cc4:	e7e1      	b.n	8006c8a <_dtoa_r+0x9ea>
 8006cc6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006cc8:	2b00      	cmp	r3, #0
 8006cca:	db04      	blt.n	8006cd6 <_dtoa_r+0xa36>
 8006ccc:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8006cce:	430b      	orrs	r3, r1
 8006cd0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8006cd2:	430b      	orrs	r3, r1
 8006cd4:	d120      	bne.n	8006d18 <_dtoa_r+0xa78>
 8006cd6:	2a00      	cmp	r2, #0
 8006cd8:	dded      	ble.n	8006cb6 <_dtoa_r+0xa16>
 8006cda:	4649      	mov	r1, r9
 8006cdc:	2201      	movs	r2, #1
 8006cde:	4658      	mov	r0, fp
 8006ce0:	f000 fb0c 	bl	80072fc <__lshift>
 8006ce4:	4621      	mov	r1, r4
 8006ce6:	4681      	mov	r9, r0
 8006ce8:	f000 fb74 	bl	80073d4 <__mcmp>
 8006cec:	2800      	cmp	r0, #0
 8006cee:	dc03      	bgt.n	8006cf8 <_dtoa_r+0xa58>
 8006cf0:	d1e1      	bne.n	8006cb6 <_dtoa_r+0xa16>
 8006cf2:	f018 0f01 	tst.w	r8, #1
 8006cf6:	d0de      	beq.n	8006cb6 <_dtoa_r+0xa16>
 8006cf8:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8006cfc:	d1d8      	bne.n	8006cb0 <_dtoa_r+0xa10>
 8006cfe:	2339      	movs	r3, #57	@ 0x39
 8006d00:	9a02      	ldr	r2, [sp, #8]
 8006d02:	7013      	strb	r3, [r2, #0]
 8006d04:	4633      	mov	r3, r6
 8006d06:	461e      	mov	r6, r3
 8006d08:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8006d0c:	3b01      	subs	r3, #1
 8006d0e:	2a39      	cmp	r2, #57	@ 0x39
 8006d10:	d052      	beq.n	8006db8 <_dtoa_r+0xb18>
 8006d12:	3201      	adds	r2, #1
 8006d14:	701a      	strb	r2, [r3, #0]
 8006d16:	e60e      	b.n	8006936 <_dtoa_r+0x696>
 8006d18:	2a00      	cmp	r2, #0
 8006d1a:	dd07      	ble.n	8006d2c <_dtoa_r+0xa8c>
 8006d1c:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8006d20:	d0ed      	beq.n	8006cfe <_dtoa_r+0xa5e>
 8006d22:	9a02      	ldr	r2, [sp, #8]
 8006d24:	f108 0301 	add.w	r3, r8, #1
 8006d28:	7013      	strb	r3, [r2, #0]
 8006d2a:	e604      	b.n	8006936 <_dtoa_r+0x696>
 8006d2c:	9b07      	ldr	r3, [sp, #28]
 8006d2e:	9a07      	ldr	r2, [sp, #28]
 8006d30:	f803 8c01 	strb.w	r8, [r3, #-1]
 8006d34:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8006d36:	4293      	cmp	r3, r2
 8006d38:	d028      	beq.n	8006d8c <_dtoa_r+0xaec>
 8006d3a:	4649      	mov	r1, r9
 8006d3c:	2300      	movs	r3, #0
 8006d3e:	220a      	movs	r2, #10
 8006d40:	4658      	mov	r0, fp
 8006d42:	f000 f931 	bl	8006fa8 <__multadd>
 8006d46:	42af      	cmp	r7, r5
 8006d48:	4681      	mov	r9, r0
 8006d4a:	f04f 0300 	mov.w	r3, #0
 8006d4e:	f04f 020a 	mov.w	r2, #10
 8006d52:	4639      	mov	r1, r7
 8006d54:	4658      	mov	r0, fp
 8006d56:	d107      	bne.n	8006d68 <_dtoa_r+0xac8>
 8006d58:	f000 f926 	bl	8006fa8 <__multadd>
 8006d5c:	4607      	mov	r7, r0
 8006d5e:	4605      	mov	r5, r0
 8006d60:	9b07      	ldr	r3, [sp, #28]
 8006d62:	3301      	adds	r3, #1
 8006d64:	9307      	str	r3, [sp, #28]
 8006d66:	e774      	b.n	8006c52 <_dtoa_r+0x9b2>
 8006d68:	f000 f91e 	bl	8006fa8 <__multadd>
 8006d6c:	4629      	mov	r1, r5
 8006d6e:	4607      	mov	r7, r0
 8006d70:	2300      	movs	r3, #0
 8006d72:	220a      	movs	r2, #10
 8006d74:	4658      	mov	r0, fp
 8006d76:	f000 f917 	bl	8006fa8 <__multadd>
 8006d7a:	4605      	mov	r5, r0
 8006d7c:	e7f0      	b.n	8006d60 <_dtoa_r+0xac0>
 8006d7e:	9b08      	ldr	r3, [sp, #32]
 8006d80:	2700      	movs	r7, #0
 8006d82:	2b00      	cmp	r3, #0
 8006d84:	bfcc      	ite	gt
 8006d86:	461e      	movgt	r6, r3
 8006d88:	2601      	movle	r6, #1
 8006d8a:	4456      	add	r6, sl
 8006d8c:	4649      	mov	r1, r9
 8006d8e:	2201      	movs	r2, #1
 8006d90:	4658      	mov	r0, fp
 8006d92:	f000 fab3 	bl	80072fc <__lshift>
 8006d96:	4621      	mov	r1, r4
 8006d98:	4681      	mov	r9, r0
 8006d9a:	f000 fb1b 	bl	80073d4 <__mcmp>
 8006d9e:	2800      	cmp	r0, #0
 8006da0:	dcb0      	bgt.n	8006d04 <_dtoa_r+0xa64>
 8006da2:	d102      	bne.n	8006daa <_dtoa_r+0xb0a>
 8006da4:	f018 0f01 	tst.w	r8, #1
 8006da8:	d1ac      	bne.n	8006d04 <_dtoa_r+0xa64>
 8006daa:	4633      	mov	r3, r6
 8006dac:	461e      	mov	r6, r3
 8006dae:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8006db2:	2a30      	cmp	r2, #48	@ 0x30
 8006db4:	d0fa      	beq.n	8006dac <_dtoa_r+0xb0c>
 8006db6:	e5be      	b.n	8006936 <_dtoa_r+0x696>
 8006db8:	459a      	cmp	sl, r3
 8006dba:	d1a4      	bne.n	8006d06 <_dtoa_r+0xa66>
 8006dbc:	9b04      	ldr	r3, [sp, #16]
 8006dbe:	3301      	adds	r3, #1
 8006dc0:	9304      	str	r3, [sp, #16]
 8006dc2:	2331      	movs	r3, #49	@ 0x31
 8006dc4:	f88a 3000 	strb.w	r3, [sl]
 8006dc8:	e5b5      	b.n	8006936 <_dtoa_r+0x696>
 8006dca:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8006dcc:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 8006e2c <_dtoa_r+0xb8c>
 8006dd0:	b11b      	cbz	r3, 8006dda <_dtoa_r+0xb3a>
 8006dd2:	f10a 0308 	add.w	r3, sl, #8
 8006dd6:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8006dd8:	6013      	str	r3, [r2, #0]
 8006dda:	4650      	mov	r0, sl
 8006ddc:	b017      	add	sp, #92	@ 0x5c
 8006dde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006de2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8006de4:	2b01      	cmp	r3, #1
 8006de6:	f77f ae3d 	ble.w	8006a64 <_dtoa_r+0x7c4>
 8006dea:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006dec:	930a      	str	r3, [sp, #40]	@ 0x28
 8006dee:	2001      	movs	r0, #1
 8006df0:	e65b      	b.n	8006aaa <_dtoa_r+0x80a>
 8006df2:	9b08      	ldr	r3, [sp, #32]
 8006df4:	2b00      	cmp	r3, #0
 8006df6:	f77f aed6 	ble.w	8006ba6 <_dtoa_r+0x906>
 8006dfa:	4656      	mov	r6, sl
 8006dfc:	4621      	mov	r1, r4
 8006dfe:	4648      	mov	r0, r9
 8006e00:	f7ff f9c4 	bl	800618c <quorem>
 8006e04:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8006e08:	9b08      	ldr	r3, [sp, #32]
 8006e0a:	f806 8b01 	strb.w	r8, [r6], #1
 8006e0e:	eba6 020a 	sub.w	r2, r6, sl
 8006e12:	4293      	cmp	r3, r2
 8006e14:	ddb3      	ble.n	8006d7e <_dtoa_r+0xade>
 8006e16:	4649      	mov	r1, r9
 8006e18:	2300      	movs	r3, #0
 8006e1a:	220a      	movs	r2, #10
 8006e1c:	4658      	mov	r0, fp
 8006e1e:	f000 f8c3 	bl	8006fa8 <__multadd>
 8006e22:	4681      	mov	r9, r0
 8006e24:	e7ea      	b.n	8006dfc <_dtoa_r+0xb5c>
 8006e26:	bf00      	nop
 8006e28:	08007fb0 	.word	0x08007fb0
 8006e2c:	08007f34 	.word	0x08007f34

08006e30 <_free_r>:
 8006e30:	b538      	push	{r3, r4, r5, lr}
 8006e32:	4605      	mov	r5, r0
 8006e34:	2900      	cmp	r1, #0
 8006e36:	d040      	beq.n	8006eba <_free_r+0x8a>
 8006e38:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006e3c:	1f0c      	subs	r4, r1, #4
 8006e3e:	2b00      	cmp	r3, #0
 8006e40:	bfb8      	it	lt
 8006e42:	18e4      	addlt	r4, r4, r3
 8006e44:	f7fe fa66 	bl	8005314 <__malloc_lock>
 8006e48:	4a1c      	ldr	r2, [pc, #112]	@ (8006ebc <_free_r+0x8c>)
 8006e4a:	6813      	ldr	r3, [r2, #0]
 8006e4c:	b933      	cbnz	r3, 8006e5c <_free_r+0x2c>
 8006e4e:	6063      	str	r3, [r4, #4]
 8006e50:	6014      	str	r4, [r2, #0]
 8006e52:	4628      	mov	r0, r5
 8006e54:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006e58:	f7fe ba62 	b.w	8005320 <__malloc_unlock>
 8006e5c:	42a3      	cmp	r3, r4
 8006e5e:	d908      	bls.n	8006e72 <_free_r+0x42>
 8006e60:	6820      	ldr	r0, [r4, #0]
 8006e62:	1821      	adds	r1, r4, r0
 8006e64:	428b      	cmp	r3, r1
 8006e66:	bf01      	itttt	eq
 8006e68:	6819      	ldreq	r1, [r3, #0]
 8006e6a:	685b      	ldreq	r3, [r3, #4]
 8006e6c:	1809      	addeq	r1, r1, r0
 8006e6e:	6021      	streq	r1, [r4, #0]
 8006e70:	e7ed      	b.n	8006e4e <_free_r+0x1e>
 8006e72:	461a      	mov	r2, r3
 8006e74:	685b      	ldr	r3, [r3, #4]
 8006e76:	b10b      	cbz	r3, 8006e7c <_free_r+0x4c>
 8006e78:	42a3      	cmp	r3, r4
 8006e7a:	d9fa      	bls.n	8006e72 <_free_r+0x42>
 8006e7c:	6811      	ldr	r1, [r2, #0]
 8006e7e:	1850      	adds	r0, r2, r1
 8006e80:	42a0      	cmp	r0, r4
 8006e82:	d10b      	bne.n	8006e9c <_free_r+0x6c>
 8006e84:	6820      	ldr	r0, [r4, #0]
 8006e86:	4401      	add	r1, r0
 8006e88:	1850      	adds	r0, r2, r1
 8006e8a:	4283      	cmp	r3, r0
 8006e8c:	6011      	str	r1, [r2, #0]
 8006e8e:	d1e0      	bne.n	8006e52 <_free_r+0x22>
 8006e90:	6818      	ldr	r0, [r3, #0]
 8006e92:	685b      	ldr	r3, [r3, #4]
 8006e94:	4408      	add	r0, r1
 8006e96:	6010      	str	r0, [r2, #0]
 8006e98:	6053      	str	r3, [r2, #4]
 8006e9a:	e7da      	b.n	8006e52 <_free_r+0x22>
 8006e9c:	d902      	bls.n	8006ea4 <_free_r+0x74>
 8006e9e:	230c      	movs	r3, #12
 8006ea0:	602b      	str	r3, [r5, #0]
 8006ea2:	e7d6      	b.n	8006e52 <_free_r+0x22>
 8006ea4:	6820      	ldr	r0, [r4, #0]
 8006ea6:	1821      	adds	r1, r4, r0
 8006ea8:	428b      	cmp	r3, r1
 8006eaa:	bf01      	itttt	eq
 8006eac:	6819      	ldreq	r1, [r3, #0]
 8006eae:	685b      	ldreq	r3, [r3, #4]
 8006eb0:	1809      	addeq	r1, r1, r0
 8006eb2:	6021      	streq	r1, [r4, #0]
 8006eb4:	6063      	str	r3, [r4, #4]
 8006eb6:	6054      	str	r4, [r2, #4]
 8006eb8:	e7cb      	b.n	8006e52 <_free_r+0x22>
 8006eba:	bd38      	pop	{r3, r4, r5, pc}
 8006ebc:	20000488 	.word	0x20000488

08006ec0 <__ascii_mbtowc>:
 8006ec0:	b082      	sub	sp, #8
 8006ec2:	b901      	cbnz	r1, 8006ec6 <__ascii_mbtowc+0x6>
 8006ec4:	a901      	add	r1, sp, #4
 8006ec6:	b142      	cbz	r2, 8006eda <__ascii_mbtowc+0x1a>
 8006ec8:	b14b      	cbz	r3, 8006ede <__ascii_mbtowc+0x1e>
 8006eca:	7813      	ldrb	r3, [r2, #0]
 8006ecc:	600b      	str	r3, [r1, #0]
 8006ece:	7812      	ldrb	r2, [r2, #0]
 8006ed0:	1e10      	subs	r0, r2, #0
 8006ed2:	bf18      	it	ne
 8006ed4:	2001      	movne	r0, #1
 8006ed6:	b002      	add	sp, #8
 8006ed8:	4770      	bx	lr
 8006eda:	4610      	mov	r0, r2
 8006edc:	e7fb      	b.n	8006ed6 <__ascii_mbtowc+0x16>
 8006ede:	f06f 0001 	mvn.w	r0, #1
 8006ee2:	e7f8      	b.n	8006ed6 <__ascii_mbtowc+0x16>

08006ee4 <_Balloc>:
 8006ee4:	b570      	push	{r4, r5, r6, lr}
 8006ee6:	69c6      	ldr	r6, [r0, #28]
 8006ee8:	4604      	mov	r4, r0
 8006eea:	460d      	mov	r5, r1
 8006eec:	b976      	cbnz	r6, 8006f0c <_Balloc+0x28>
 8006eee:	2010      	movs	r0, #16
 8006ef0:	f7fe f966 	bl	80051c0 <malloc>
 8006ef4:	4602      	mov	r2, r0
 8006ef6:	61e0      	str	r0, [r4, #28]
 8006ef8:	b920      	cbnz	r0, 8006f04 <_Balloc+0x20>
 8006efa:	216b      	movs	r1, #107	@ 0x6b
 8006efc:	4b17      	ldr	r3, [pc, #92]	@ (8006f5c <_Balloc+0x78>)
 8006efe:	4818      	ldr	r0, [pc, #96]	@ (8006f60 <_Balloc+0x7c>)
 8006f00:	f7ff f926 	bl	8006150 <__assert_func>
 8006f04:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8006f08:	6006      	str	r6, [r0, #0]
 8006f0a:	60c6      	str	r6, [r0, #12]
 8006f0c:	69e6      	ldr	r6, [r4, #28]
 8006f0e:	68f3      	ldr	r3, [r6, #12]
 8006f10:	b183      	cbz	r3, 8006f34 <_Balloc+0x50>
 8006f12:	69e3      	ldr	r3, [r4, #28]
 8006f14:	68db      	ldr	r3, [r3, #12]
 8006f16:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8006f1a:	b9b8      	cbnz	r0, 8006f4c <_Balloc+0x68>
 8006f1c:	2101      	movs	r1, #1
 8006f1e:	fa01 f605 	lsl.w	r6, r1, r5
 8006f22:	1d72      	adds	r2, r6, #5
 8006f24:	4620      	mov	r0, r4
 8006f26:	0092      	lsls	r2, r2, #2
 8006f28:	f000 fded 	bl	8007b06 <_calloc_r>
 8006f2c:	b160      	cbz	r0, 8006f48 <_Balloc+0x64>
 8006f2e:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8006f32:	e00e      	b.n	8006f52 <_Balloc+0x6e>
 8006f34:	2221      	movs	r2, #33	@ 0x21
 8006f36:	2104      	movs	r1, #4
 8006f38:	4620      	mov	r0, r4
 8006f3a:	f000 fde4 	bl	8007b06 <_calloc_r>
 8006f3e:	69e3      	ldr	r3, [r4, #28]
 8006f40:	60f0      	str	r0, [r6, #12]
 8006f42:	68db      	ldr	r3, [r3, #12]
 8006f44:	2b00      	cmp	r3, #0
 8006f46:	d1e4      	bne.n	8006f12 <_Balloc+0x2e>
 8006f48:	2000      	movs	r0, #0
 8006f4a:	bd70      	pop	{r4, r5, r6, pc}
 8006f4c:	6802      	ldr	r2, [r0, #0]
 8006f4e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8006f52:	2300      	movs	r3, #0
 8006f54:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8006f58:	e7f7      	b.n	8006f4a <_Balloc+0x66>
 8006f5a:	bf00      	nop
 8006f5c:	08007f41 	.word	0x08007f41
 8006f60:	08007fc1 	.word	0x08007fc1

08006f64 <_Bfree>:
 8006f64:	b570      	push	{r4, r5, r6, lr}
 8006f66:	69c6      	ldr	r6, [r0, #28]
 8006f68:	4605      	mov	r5, r0
 8006f6a:	460c      	mov	r4, r1
 8006f6c:	b976      	cbnz	r6, 8006f8c <_Bfree+0x28>
 8006f6e:	2010      	movs	r0, #16
 8006f70:	f7fe f926 	bl	80051c0 <malloc>
 8006f74:	4602      	mov	r2, r0
 8006f76:	61e8      	str	r0, [r5, #28]
 8006f78:	b920      	cbnz	r0, 8006f84 <_Bfree+0x20>
 8006f7a:	218f      	movs	r1, #143	@ 0x8f
 8006f7c:	4b08      	ldr	r3, [pc, #32]	@ (8006fa0 <_Bfree+0x3c>)
 8006f7e:	4809      	ldr	r0, [pc, #36]	@ (8006fa4 <_Bfree+0x40>)
 8006f80:	f7ff f8e6 	bl	8006150 <__assert_func>
 8006f84:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8006f88:	6006      	str	r6, [r0, #0]
 8006f8a:	60c6      	str	r6, [r0, #12]
 8006f8c:	b13c      	cbz	r4, 8006f9e <_Bfree+0x3a>
 8006f8e:	69eb      	ldr	r3, [r5, #28]
 8006f90:	6862      	ldr	r2, [r4, #4]
 8006f92:	68db      	ldr	r3, [r3, #12]
 8006f94:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8006f98:	6021      	str	r1, [r4, #0]
 8006f9a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8006f9e:	bd70      	pop	{r4, r5, r6, pc}
 8006fa0:	08007f41 	.word	0x08007f41
 8006fa4:	08007fc1 	.word	0x08007fc1

08006fa8 <__multadd>:
 8006fa8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006fac:	4607      	mov	r7, r0
 8006fae:	460c      	mov	r4, r1
 8006fb0:	461e      	mov	r6, r3
 8006fb2:	2000      	movs	r0, #0
 8006fb4:	690d      	ldr	r5, [r1, #16]
 8006fb6:	f101 0c14 	add.w	ip, r1, #20
 8006fba:	f8dc 3000 	ldr.w	r3, [ip]
 8006fbe:	3001      	adds	r0, #1
 8006fc0:	b299      	uxth	r1, r3
 8006fc2:	fb02 6101 	mla	r1, r2, r1, r6
 8006fc6:	0c1e      	lsrs	r6, r3, #16
 8006fc8:	0c0b      	lsrs	r3, r1, #16
 8006fca:	fb02 3306 	mla	r3, r2, r6, r3
 8006fce:	b289      	uxth	r1, r1
 8006fd0:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8006fd4:	4285      	cmp	r5, r0
 8006fd6:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8006fda:	f84c 1b04 	str.w	r1, [ip], #4
 8006fde:	dcec      	bgt.n	8006fba <__multadd+0x12>
 8006fe0:	b30e      	cbz	r6, 8007026 <__multadd+0x7e>
 8006fe2:	68a3      	ldr	r3, [r4, #8]
 8006fe4:	42ab      	cmp	r3, r5
 8006fe6:	dc19      	bgt.n	800701c <__multadd+0x74>
 8006fe8:	6861      	ldr	r1, [r4, #4]
 8006fea:	4638      	mov	r0, r7
 8006fec:	3101      	adds	r1, #1
 8006fee:	f7ff ff79 	bl	8006ee4 <_Balloc>
 8006ff2:	4680      	mov	r8, r0
 8006ff4:	b928      	cbnz	r0, 8007002 <__multadd+0x5a>
 8006ff6:	4602      	mov	r2, r0
 8006ff8:	21ba      	movs	r1, #186	@ 0xba
 8006ffa:	4b0c      	ldr	r3, [pc, #48]	@ (800702c <__multadd+0x84>)
 8006ffc:	480c      	ldr	r0, [pc, #48]	@ (8007030 <__multadd+0x88>)
 8006ffe:	f7ff f8a7 	bl	8006150 <__assert_func>
 8007002:	6922      	ldr	r2, [r4, #16]
 8007004:	f104 010c 	add.w	r1, r4, #12
 8007008:	3202      	adds	r2, #2
 800700a:	0092      	lsls	r2, r2, #2
 800700c:	300c      	adds	r0, #12
 800700e:	f7ff f890 	bl	8006132 <memcpy>
 8007012:	4621      	mov	r1, r4
 8007014:	4638      	mov	r0, r7
 8007016:	f7ff ffa5 	bl	8006f64 <_Bfree>
 800701a:	4644      	mov	r4, r8
 800701c:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8007020:	3501      	adds	r5, #1
 8007022:	615e      	str	r6, [r3, #20]
 8007024:	6125      	str	r5, [r4, #16]
 8007026:	4620      	mov	r0, r4
 8007028:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800702c:	08007fb0 	.word	0x08007fb0
 8007030:	08007fc1 	.word	0x08007fc1

08007034 <__hi0bits>:
 8007034:	4603      	mov	r3, r0
 8007036:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 800703a:	bf3a      	itte	cc
 800703c:	0403      	lslcc	r3, r0, #16
 800703e:	2010      	movcc	r0, #16
 8007040:	2000      	movcs	r0, #0
 8007042:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8007046:	bf3c      	itt	cc
 8007048:	021b      	lslcc	r3, r3, #8
 800704a:	3008      	addcc	r0, #8
 800704c:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8007050:	bf3c      	itt	cc
 8007052:	011b      	lslcc	r3, r3, #4
 8007054:	3004      	addcc	r0, #4
 8007056:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800705a:	bf3c      	itt	cc
 800705c:	009b      	lslcc	r3, r3, #2
 800705e:	3002      	addcc	r0, #2
 8007060:	2b00      	cmp	r3, #0
 8007062:	db05      	blt.n	8007070 <__hi0bits+0x3c>
 8007064:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8007068:	f100 0001 	add.w	r0, r0, #1
 800706c:	bf08      	it	eq
 800706e:	2020      	moveq	r0, #32
 8007070:	4770      	bx	lr

08007072 <__lo0bits>:
 8007072:	6803      	ldr	r3, [r0, #0]
 8007074:	4602      	mov	r2, r0
 8007076:	f013 0007 	ands.w	r0, r3, #7
 800707a:	d00b      	beq.n	8007094 <__lo0bits+0x22>
 800707c:	07d9      	lsls	r1, r3, #31
 800707e:	d421      	bmi.n	80070c4 <__lo0bits+0x52>
 8007080:	0798      	lsls	r0, r3, #30
 8007082:	bf49      	itett	mi
 8007084:	085b      	lsrmi	r3, r3, #1
 8007086:	089b      	lsrpl	r3, r3, #2
 8007088:	2001      	movmi	r0, #1
 800708a:	6013      	strmi	r3, [r2, #0]
 800708c:	bf5c      	itt	pl
 800708e:	2002      	movpl	r0, #2
 8007090:	6013      	strpl	r3, [r2, #0]
 8007092:	4770      	bx	lr
 8007094:	b299      	uxth	r1, r3
 8007096:	b909      	cbnz	r1, 800709c <__lo0bits+0x2a>
 8007098:	2010      	movs	r0, #16
 800709a:	0c1b      	lsrs	r3, r3, #16
 800709c:	b2d9      	uxtb	r1, r3
 800709e:	b909      	cbnz	r1, 80070a4 <__lo0bits+0x32>
 80070a0:	3008      	adds	r0, #8
 80070a2:	0a1b      	lsrs	r3, r3, #8
 80070a4:	0719      	lsls	r1, r3, #28
 80070a6:	bf04      	itt	eq
 80070a8:	091b      	lsreq	r3, r3, #4
 80070aa:	3004      	addeq	r0, #4
 80070ac:	0799      	lsls	r1, r3, #30
 80070ae:	bf04      	itt	eq
 80070b0:	089b      	lsreq	r3, r3, #2
 80070b2:	3002      	addeq	r0, #2
 80070b4:	07d9      	lsls	r1, r3, #31
 80070b6:	d403      	bmi.n	80070c0 <__lo0bits+0x4e>
 80070b8:	085b      	lsrs	r3, r3, #1
 80070ba:	f100 0001 	add.w	r0, r0, #1
 80070be:	d003      	beq.n	80070c8 <__lo0bits+0x56>
 80070c0:	6013      	str	r3, [r2, #0]
 80070c2:	4770      	bx	lr
 80070c4:	2000      	movs	r0, #0
 80070c6:	4770      	bx	lr
 80070c8:	2020      	movs	r0, #32
 80070ca:	4770      	bx	lr

080070cc <__i2b>:
 80070cc:	b510      	push	{r4, lr}
 80070ce:	460c      	mov	r4, r1
 80070d0:	2101      	movs	r1, #1
 80070d2:	f7ff ff07 	bl	8006ee4 <_Balloc>
 80070d6:	4602      	mov	r2, r0
 80070d8:	b928      	cbnz	r0, 80070e6 <__i2b+0x1a>
 80070da:	f240 1145 	movw	r1, #325	@ 0x145
 80070de:	4b04      	ldr	r3, [pc, #16]	@ (80070f0 <__i2b+0x24>)
 80070e0:	4804      	ldr	r0, [pc, #16]	@ (80070f4 <__i2b+0x28>)
 80070e2:	f7ff f835 	bl	8006150 <__assert_func>
 80070e6:	2301      	movs	r3, #1
 80070e8:	6144      	str	r4, [r0, #20]
 80070ea:	6103      	str	r3, [r0, #16]
 80070ec:	bd10      	pop	{r4, pc}
 80070ee:	bf00      	nop
 80070f0:	08007fb0 	.word	0x08007fb0
 80070f4:	08007fc1 	.word	0x08007fc1

080070f8 <__multiply>:
 80070f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80070fc:	4614      	mov	r4, r2
 80070fe:	690a      	ldr	r2, [r1, #16]
 8007100:	6923      	ldr	r3, [r4, #16]
 8007102:	460f      	mov	r7, r1
 8007104:	429a      	cmp	r2, r3
 8007106:	bfa2      	ittt	ge
 8007108:	4623      	movge	r3, r4
 800710a:	460c      	movge	r4, r1
 800710c:	461f      	movge	r7, r3
 800710e:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8007112:	f8d7 9010 	ldr.w	r9, [r7, #16]
 8007116:	68a3      	ldr	r3, [r4, #8]
 8007118:	6861      	ldr	r1, [r4, #4]
 800711a:	eb0a 0609 	add.w	r6, sl, r9
 800711e:	42b3      	cmp	r3, r6
 8007120:	b085      	sub	sp, #20
 8007122:	bfb8      	it	lt
 8007124:	3101      	addlt	r1, #1
 8007126:	f7ff fedd 	bl	8006ee4 <_Balloc>
 800712a:	b930      	cbnz	r0, 800713a <__multiply+0x42>
 800712c:	4602      	mov	r2, r0
 800712e:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8007132:	4b43      	ldr	r3, [pc, #268]	@ (8007240 <__multiply+0x148>)
 8007134:	4843      	ldr	r0, [pc, #268]	@ (8007244 <__multiply+0x14c>)
 8007136:	f7ff f80b 	bl	8006150 <__assert_func>
 800713a:	f100 0514 	add.w	r5, r0, #20
 800713e:	462b      	mov	r3, r5
 8007140:	2200      	movs	r2, #0
 8007142:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8007146:	4543      	cmp	r3, r8
 8007148:	d321      	bcc.n	800718e <__multiply+0x96>
 800714a:	f107 0114 	add.w	r1, r7, #20
 800714e:	f104 0214 	add.w	r2, r4, #20
 8007152:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 8007156:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 800715a:	9302      	str	r3, [sp, #8]
 800715c:	1b13      	subs	r3, r2, r4
 800715e:	3b15      	subs	r3, #21
 8007160:	f023 0303 	bic.w	r3, r3, #3
 8007164:	3304      	adds	r3, #4
 8007166:	f104 0715 	add.w	r7, r4, #21
 800716a:	42ba      	cmp	r2, r7
 800716c:	bf38      	it	cc
 800716e:	2304      	movcc	r3, #4
 8007170:	9301      	str	r3, [sp, #4]
 8007172:	9b02      	ldr	r3, [sp, #8]
 8007174:	9103      	str	r1, [sp, #12]
 8007176:	428b      	cmp	r3, r1
 8007178:	d80c      	bhi.n	8007194 <__multiply+0x9c>
 800717a:	2e00      	cmp	r6, #0
 800717c:	dd03      	ble.n	8007186 <__multiply+0x8e>
 800717e:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8007182:	2b00      	cmp	r3, #0
 8007184:	d05a      	beq.n	800723c <__multiply+0x144>
 8007186:	6106      	str	r6, [r0, #16]
 8007188:	b005      	add	sp, #20
 800718a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800718e:	f843 2b04 	str.w	r2, [r3], #4
 8007192:	e7d8      	b.n	8007146 <__multiply+0x4e>
 8007194:	f8b1 a000 	ldrh.w	sl, [r1]
 8007198:	f1ba 0f00 	cmp.w	sl, #0
 800719c:	d023      	beq.n	80071e6 <__multiply+0xee>
 800719e:	46a9      	mov	r9, r5
 80071a0:	f04f 0c00 	mov.w	ip, #0
 80071a4:	f104 0e14 	add.w	lr, r4, #20
 80071a8:	f85e 7b04 	ldr.w	r7, [lr], #4
 80071ac:	f8d9 3000 	ldr.w	r3, [r9]
 80071b0:	fa1f fb87 	uxth.w	fp, r7
 80071b4:	b29b      	uxth	r3, r3
 80071b6:	fb0a 330b 	mla	r3, sl, fp, r3
 80071ba:	4463      	add	r3, ip
 80071bc:	f8d9 c000 	ldr.w	ip, [r9]
 80071c0:	0c3f      	lsrs	r7, r7, #16
 80071c2:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 80071c6:	fb0a c707 	mla	r7, sl, r7, ip
 80071ca:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 80071ce:	b29b      	uxth	r3, r3
 80071d0:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 80071d4:	4572      	cmp	r2, lr
 80071d6:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 80071da:	f849 3b04 	str.w	r3, [r9], #4
 80071de:	d8e3      	bhi.n	80071a8 <__multiply+0xb0>
 80071e0:	9b01      	ldr	r3, [sp, #4]
 80071e2:	f845 c003 	str.w	ip, [r5, r3]
 80071e6:	9b03      	ldr	r3, [sp, #12]
 80071e8:	3104      	adds	r1, #4
 80071ea:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 80071ee:	f1b9 0f00 	cmp.w	r9, #0
 80071f2:	d021      	beq.n	8007238 <__multiply+0x140>
 80071f4:	46ae      	mov	lr, r5
 80071f6:	f04f 0a00 	mov.w	sl, #0
 80071fa:	682b      	ldr	r3, [r5, #0]
 80071fc:	f104 0c14 	add.w	ip, r4, #20
 8007200:	f8bc b000 	ldrh.w	fp, [ip]
 8007204:	f8be 7002 	ldrh.w	r7, [lr, #2]
 8007208:	b29b      	uxth	r3, r3
 800720a:	fb09 770b 	mla	r7, r9, fp, r7
 800720e:	4457      	add	r7, sl
 8007210:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8007214:	f84e 3b04 	str.w	r3, [lr], #4
 8007218:	f85c 3b04 	ldr.w	r3, [ip], #4
 800721c:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8007220:	f8be 3000 	ldrh.w	r3, [lr]
 8007224:	4562      	cmp	r2, ip
 8007226:	fb09 330a 	mla	r3, r9, sl, r3
 800722a:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 800722e:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8007232:	d8e5      	bhi.n	8007200 <__multiply+0x108>
 8007234:	9f01      	ldr	r7, [sp, #4]
 8007236:	51eb      	str	r3, [r5, r7]
 8007238:	3504      	adds	r5, #4
 800723a:	e79a      	b.n	8007172 <__multiply+0x7a>
 800723c:	3e01      	subs	r6, #1
 800723e:	e79c      	b.n	800717a <__multiply+0x82>
 8007240:	08007fb0 	.word	0x08007fb0
 8007244:	08007fc1 	.word	0x08007fc1

08007248 <__pow5mult>:
 8007248:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800724c:	4615      	mov	r5, r2
 800724e:	f012 0203 	ands.w	r2, r2, #3
 8007252:	4607      	mov	r7, r0
 8007254:	460e      	mov	r6, r1
 8007256:	d007      	beq.n	8007268 <__pow5mult+0x20>
 8007258:	4c25      	ldr	r4, [pc, #148]	@ (80072f0 <__pow5mult+0xa8>)
 800725a:	3a01      	subs	r2, #1
 800725c:	2300      	movs	r3, #0
 800725e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8007262:	f7ff fea1 	bl	8006fa8 <__multadd>
 8007266:	4606      	mov	r6, r0
 8007268:	10ad      	asrs	r5, r5, #2
 800726a:	d03d      	beq.n	80072e8 <__pow5mult+0xa0>
 800726c:	69fc      	ldr	r4, [r7, #28]
 800726e:	b97c      	cbnz	r4, 8007290 <__pow5mult+0x48>
 8007270:	2010      	movs	r0, #16
 8007272:	f7fd ffa5 	bl	80051c0 <malloc>
 8007276:	4602      	mov	r2, r0
 8007278:	61f8      	str	r0, [r7, #28]
 800727a:	b928      	cbnz	r0, 8007288 <__pow5mult+0x40>
 800727c:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8007280:	4b1c      	ldr	r3, [pc, #112]	@ (80072f4 <__pow5mult+0xac>)
 8007282:	481d      	ldr	r0, [pc, #116]	@ (80072f8 <__pow5mult+0xb0>)
 8007284:	f7fe ff64 	bl	8006150 <__assert_func>
 8007288:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800728c:	6004      	str	r4, [r0, #0]
 800728e:	60c4      	str	r4, [r0, #12]
 8007290:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8007294:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8007298:	b94c      	cbnz	r4, 80072ae <__pow5mult+0x66>
 800729a:	f240 2171 	movw	r1, #625	@ 0x271
 800729e:	4638      	mov	r0, r7
 80072a0:	f7ff ff14 	bl	80070cc <__i2b>
 80072a4:	2300      	movs	r3, #0
 80072a6:	4604      	mov	r4, r0
 80072a8:	f8c8 0008 	str.w	r0, [r8, #8]
 80072ac:	6003      	str	r3, [r0, #0]
 80072ae:	f04f 0900 	mov.w	r9, #0
 80072b2:	07eb      	lsls	r3, r5, #31
 80072b4:	d50a      	bpl.n	80072cc <__pow5mult+0x84>
 80072b6:	4631      	mov	r1, r6
 80072b8:	4622      	mov	r2, r4
 80072ba:	4638      	mov	r0, r7
 80072bc:	f7ff ff1c 	bl	80070f8 <__multiply>
 80072c0:	4680      	mov	r8, r0
 80072c2:	4631      	mov	r1, r6
 80072c4:	4638      	mov	r0, r7
 80072c6:	f7ff fe4d 	bl	8006f64 <_Bfree>
 80072ca:	4646      	mov	r6, r8
 80072cc:	106d      	asrs	r5, r5, #1
 80072ce:	d00b      	beq.n	80072e8 <__pow5mult+0xa0>
 80072d0:	6820      	ldr	r0, [r4, #0]
 80072d2:	b938      	cbnz	r0, 80072e4 <__pow5mult+0x9c>
 80072d4:	4622      	mov	r2, r4
 80072d6:	4621      	mov	r1, r4
 80072d8:	4638      	mov	r0, r7
 80072da:	f7ff ff0d 	bl	80070f8 <__multiply>
 80072de:	6020      	str	r0, [r4, #0]
 80072e0:	f8c0 9000 	str.w	r9, [r0]
 80072e4:	4604      	mov	r4, r0
 80072e6:	e7e4      	b.n	80072b2 <__pow5mult+0x6a>
 80072e8:	4630      	mov	r0, r6
 80072ea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80072ee:	bf00      	nop
 80072f0:	0800801c 	.word	0x0800801c
 80072f4:	08007f41 	.word	0x08007f41
 80072f8:	08007fc1 	.word	0x08007fc1

080072fc <__lshift>:
 80072fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007300:	460c      	mov	r4, r1
 8007302:	4607      	mov	r7, r0
 8007304:	4691      	mov	r9, r2
 8007306:	6923      	ldr	r3, [r4, #16]
 8007308:	6849      	ldr	r1, [r1, #4]
 800730a:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800730e:	68a3      	ldr	r3, [r4, #8]
 8007310:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8007314:	f108 0601 	add.w	r6, r8, #1
 8007318:	42b3      	cmp	r3, r6
 800731a:	db0b      	blt.n	8007334 <__lshift+0x38>
 800731c:	4638      	mov	r0, r7
 800731e:	f7ff fde1 	bl	8006ee4 <_Balloc>
 8007322:	4605      	mov	r5, r0
 8007324:	b948      	cbnz	r0, 800733a <__lshift+0x3e>
 8007326:	4602      	mov	r2, r0
 8007328:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 800732c:	4b27      	ldr	r3, [pc, #156]	@ (80073cc <__lshift+0xd0>)
 800732e:	4828      	ldr	r0, [pc, #160]	@ (80073d0 <__lshift+0xd4>)
 8007330:	f7fe ff0e 	bl	8006150 <__assert_func>
 8007334:	3101      	adds	r1, #1
 8007336:	005b      	lsls	r3, r3, #1
 8007338:	e7ee      	b.n	8007318 <__lshift+0x1c>
 800733a:	2300      	movs	r3, #0
 800733c:	f100 0114 	add.w	r1, r0, #20
 8007340:	f100 0210 	add.w	r2, r0, #16
 8007344:	4618      	mov	r0, r3
 8007346:	4553      	cmp	r3, sl
 8007348:	db33      	blt.n	80073b2 <__lshift+0xb6>
 800734a:	6920      	ldr	r0, [r4, #16]
 800734c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8007350:	f104 0314 	add.w	r3, r4, #20
 8007354:	f019 091f 	ands.w	r9, r9, #31
 8007358:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800735c:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8007360:	d02b      	beq.n	80073ba <__lshift+0xbe>
 8007362:	468a      	mov	sl, r1
 8007364:	2200      	movs	r2, #0
 8007366:	f1c9 0e20 	rsb	lr, r9, #32
 800736a:	6818      	ldr	r0, [r3, #0]
 800736c:	fa00 f009 	lsl.w	r0, r0, r9
 8007370:	4310      	orrs	r0, r2
 8007372:	f84a 0b04 	str.w	r0, [sl], #4
 8007376:	f853 2b04 	ldr.w	r2, [r3], #4
 800737a:	459c      	cmp	ip, r3
 800737c:	fa22 f20e 	lsr.w	r2, r2, lr
 8007380:	d8f3      	bhi.n	800736a <__lshift+0x6e>
 8007382:	ebac 0304 	sub.w	r3, ip, r4
 8007386:	3b15      	subs	r3, #21
 8007388:	f023 0303 	bic.w	r3, r3, #3
 800738c:	3304      	adds	r3, #4
 800738e:	f104 0015 	add.w	r0, r4, #21
 8007392:	4584      	cmp	ip, r0
 8007394:	bf38      	it	cc
 8007396:	2304      	movcc	r3, #4
 8007398:	50ca      	str	r2, [r1, r3]
 800739a:	b10a      	cbz	r2, 80073a0 <__lshift+0xa4>
 800739c:	f108 0602 	add.w	r6, r8, #2
 80073a0:	3e01      	subs	r6, #1
 80073a2:	4638      	mov	r0, r7
 80073a4:	4621      	mov	r1, r4
 80073a6:	612e      	str	r6, [r5, #16]
 80073a8:	f7ff fddc 	bl	8006f64 <_Bfree>
 80073ac:	4628      	mov	r0, r5
 80073ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80073b2:	f842 0f04 	str.w	r0, [r2, #4]!
 80073b6:	3301      	adds	r3, #1
 80073b8:	e7c5      	b.n	8007346 <__lshift+0x4a>
 80073ba:	3904      	subs	r1, #4
 80073bc:	f853 2b04 	ldr.w	r2, [r3], #4
 80073c0:	459c      	cmp	ip, r3
 80073c2:	f841 2f04 	str.w	r2, [r1, #4]!
 80073c6:	d8f9      	bhi.n	80073bc <__lshift+0xc0>
 80073c8:	e7ea      	b.n	80073a0 <__lshift+0xa4>
 80073ca:	bf00      	nop
 80073cc:	08007fb0 	.word	0x08007fb0
 80073d0:	08007fc1 	.word	0x08007fc1

080073d4 <__mcmp>:
 80073d4:	4603      	mov	r3, r0
 80073d6:	690a      	ldr	r2, [r1, #16]
 80073d8:	6900      	ldr	r0, [r0, #16]
 80073da:	b530      	push	{r4, r5, lr}
 80073dc:	1a80      	subs	r0, r0, r2
 80073de:	d10e      	bne.n	80073fe <__mcmp+0x2a>
 80073e0:	3314      	adds	r3, #20
 80073e2:	3114      	adds	r1, #20
 80073e4:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 80073e8:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 80073ec:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 80073f0:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 80073f4:	4295      	cmp	r5, r2
 80073f6:	d003      	beq.n	8007400 <__mcmp+0x2c>
 80073f8:	d205      	bcs.n	8007406 <__mcmp+0x32>
 80073fa:	f04f 30ff 	mov.w	r0, #4294967295
 80073fe:	bd30      	pop	{r4, r5, pc}
 8007400:	42a3      	cmp	r3, r4
 8007402:	d3f3      	bcc.n	80073ec <__mcmp+0x18>
 8007404:	e7fb      	b.n	80073fe <__mcmp+0x2a>
 8007406:	2001      	movs	r0, #1
 8007408:	e7f9      	b.n	80073fe <__mcmp+0x2a>
	...

0800740c <__mdiff>:
 800740c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007410:	4689      	mov	r9, r1
 8007412:	4606      	mov	r6, r0
 8007414:	4611      	mov	r1, r2
 8007416:	4648      	mov	r0, r9
 8007418:	4614      	mov	r4, r2
 800741a:	f7ff ffdb 	bl	80073d4 <__mcmp>
 800741e:	1e05      	subs	r5, r0, #0
 8007420:	d112      	bne.n	8007448 <__mdiff+0x3c>
 8007422:	4629      	mov	r1, r5
 8007424:	4630      	mov	r0, r6
 8007426:	f7ff fd5d 	bl	8006ee4 <_Balloc>
 800742a:	4602      	mov	r2, r0
 800742c:	b928      	cbnz	r0, 800743a <__mdiff+0x2e>
 800742e:	f240 2137 	movw	r1, #567	@ 0x237
 8007432:	4b3e      	ldr	r3, [pc, #248]	@ (800752c <__mdiff+0x120>)
 8007434:	483e      	ldr	r0, [pc, #248]	@ (8007530 <__mdiff+0x124>)
 8007436:	f7fe fe8b 	bl	8006150 <__assert_func>
 800743a:	2301      	movs	r3, #1
 800743c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8007440:	4610      	mov	r0, r2
 8007442:	b003      	add	sp, #12
 8007444:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007448:	bfbc      	itt	lt
 800744a:	464b      	movlt	r3, r9
 800744c:	46a1      	movlt	r9, r4
 800744e:	4630      	mov	r0, r6
 8007450:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8007454:	bfba      	itte	lt
 8007456:	461c      	movlt	r4, r3
 8007458:	2501      	movlt	r5, #1
 800745a:	2500      	movge	r5, #0
 800745c:	f7ff fd42 	bl	8006ee4 <_Balloc>
 8007460:	4602      	mov	r2, r0
 8007462:	b918      	cbnz	r0, 800746c <__mdiff+0x60>
 8007464:	f240 2145 	movw	r1, #581	@ 0x245
 8007468:	4b30      	ldr	r3, [pc, #192]	@ (800752c <__mdiff+0x120>)
 800746a:	e7e3      	b.n	8007434 <__mdiff+0x28>
 800746c:	f100 0b14 	add.w	fp, r0, #20
 8007470:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8007474:	f109 0310 	add.w	r3, r9, #16
 8007478:	60c5      	str	r5, [r0, #12]
 800747a:	f04f 0c00 	mov.w	ip, #0
 800747e:	f109 0514 	add.w	r5, r9, #20
 8007482:	46d9      	mov	r9, fp
 8007484:	6926      	ldr	r6, [r4, #16]
 8007486:	f104 0e14 	add.w	lr, r4, #20
 800748a:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 800748e:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8007492:	9301      	str	r3, [sp, #4]
 8007494:	9b01      	ldr	r3, [sp, #4]
 8007496:	f85e 0b04 	ldr.w	r0, [lr], #4
 800749a:	f853 af04 	ldr.w	sl, [r3, #4]!
 800749e:	b281      	uxth	r1, r0
 80074a0:	9301      	str	r3, [sp, #4]
 80074a2:	fa1f f38a 	uxth.w	r3, sl
 80074a6:	1a5b      	subs	r3, r3, r1
 80074a8:	0c00      	lsrs	r0, r0, #16
 80074aa:	4463      	add	r3, ip
 80074ac:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 80074b0:	eb00 4023 	add.w	r0, r0, r3, asr #16
 80074b4:	b29b      	uxth	r3, r3
 80074b6:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 80074ba:	4576      	cmp	r6, lr
 80074bc:	ea4f 4c20 	mov.w	ip, r0, asr #16
 80074c0:	f849 3b04 	str.w	r3, [r9], #4
 80074c4:	d8e6      	bhi.n	8007494 <__mdiff+0x88>
 80074c6:	1b33      	subs	r3, r6, r4
 80074c8:	3b15      	subs	r3, #21
 80074ca:	f023 0303 	bic.w	r3, r3, #3
 80074ce:	3415      	adds	r4, #21
 80074d0:	3304      	adds	r3, #4
 80074d2:	42a6      	cmp	r6, r4
 80074d4:	bf38      	it	cc
 80074d6:	2304      	movcc	r3, #4
 80074d8:	441d      	add	r5, r3
 80074da:	445b      	add	r3, fp
 80074dc:	461e      	mov	r6, r3
 80074de:	462c      	mov	r4, r5
 80074e0:	4544      	cmp	r4, r8
 80074e2:	d30e      	bcc.n	8007502 <__mdiff+0xf6>
 80074e4:	f108 0103 	add.w	r1, r8, #3
 80074e8:	1b49      	subs	r1, r1, r5
 80074ea:	f021 0103 	bic.w	r1, r1, #3
 80074ee:	3d03      	subs	r5, #3
 80074f0:	45a8      	cmp	r8, r5
 80074f2:	bf38      	it	cc
 80074f4:	2100      	movcc	r1, #0
 80074f6:	440b      	add	r3, r1
 80074f8:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80074fc:	b199      	cbz	r1, 8007526 <__mdiff+0x11a>
 80074fe:	6117      	str	r7, [r2, #16]
 8007500:	e79e      	b.n	8007440 <__mdiff+0x34>
 8007502:	46e6      	mov	lr, ip
 8007504:	f854 1b04 	ldr.w	r1, [r4], #4
 8007508:	fa1f fc81 	uxth.w	ip, r1
 800750c:	44f4      	add	ip, lr
 800750e:	0c08      	lsrs	r0, r1, #16
 8007510:	4471      	add	r1, lr
 8007512:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8007516:	b289      	uxth	r1, r1
 8007518:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800751c:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8007520:	f846 1b04 	str.w	r1, [r6], #4
 8007524:	e7dc      	b.n	80074e0 <__mdiff+0xd4>
 8007526:	3f01      	subs	r7, #1
 8007528:	e7e6      	b.n	80074f8 <__mdiff+0xec>
 800752a:	bf00      	nop
 800752c:	08007fb0 	.word	0x08007fb0
 8007530:	08007fc1 	.word	0x08007fc1

08007534 <__d2b>:
 8007534:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
 8007538:	2101      	movs	r1, #1
 800753a:	4690      	mov	r8, r2
 800753c:	4699      	mov	r9, r3
 800753e:	9e08      	ldr	r6, [sp, #32]
 8007540:	f7ff fcd0 	bl	8006ee4 <_Balloc>
 8007544:	4604      	mov	r4, r0
 8007546:	b930      	cbnz	r0, 8007556 <__d2b+0x22>
 8007548:	4602      	mov	r2, r0
 800754a:	f240 310f 	movw	r1, #783	@ 0x30f
 800754e:	4b23      	ldr	r3, [pc, #140]	@ (80075dc <__d2b+0xa8>)
 8007550:	4823      	ldr	r0, [pc, #140]	@ (80075e0 <__d2b+0xac>)
 8007552:	f7fe fdfd 	bl	8006150 <__assert_func>
 8007556:	f3c9 550a 	ubfx	r5, r9, #20, #11
 800755a:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800755e:	b10d      	cbz	r5, 8007564 <__d2b+0x30>
 8007560:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8007564:	9301      	str	r3, [sp, #4]
 8007566:	f1b8 0300 	subs.w	r3, r8, #0
 800756a:	d024      	beq.n	80075b6 <__d2b+0x82>
 800756c:	4668      	mov	r0, sp
 800756e:	9300      	str	r3, [sp, #0]
 8007570:	f7ff fd7f 	bl	8007072 <__lo0bits>
 8007574:	e9dd 1200 	ldrd	r1, r2, [sp]
 8007578:	b1d8      	cbz	r0, 80075b2 <__d2b+0x7e>
 800757a:	f1c0 0320 	rsb	r3, r0, #32
 800757e:	fa02 f303 	lsl.w	r3, r2, r3
 8007582:	430b      	orrs	r3, r1
 8007584:	40c2      	lsrs	r2, r0
 8007586:	6163      	str	r3, [r4, #20]
 8007588:	9201      	str	r2, [sp, #4]
 800758a:	9b01      	ldr	r3, [sp, #4]
 800758c:	2b00      	cmp	r3, #0
 800758e:	bf0c      	ite	eq
 8007590:	2201      	moveq	r2, #1
 8007592:	2202      	movne	r2, #2
 8007594:	61a3      	str	r3, [r4, #24]
 8007596:	6122      	str	r2, [r4, #16]
 8007598:	b1ad      	cbz	r5, 80075c6 <__d2b+0x92>
 800759a:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 800759e:	4405      	add	r5, r0
 80075a0:	6035      	str	r5, [r6, #0]
 80075a2:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 80075a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80075a8:	6018      	str	r0, [r3, #0]
 80075aa:	4620      	mov	r0, r4
 80075ac:	b002      	add	sp, #8
 80075ae:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 80075b2:	6161      	str	r1, [r4, #20]
 80075b4:	e7e9      	b.n	800758a <__d2b+0x56>
 80075b6:	a801      	add	r0, sp, #4
 80075b8:	f7ff fd5b 	bl	8007072 <__lo0bits>
 80075bc:	9b01      	ldr	r3, [sp, #4]
 80075be:	2201      	movs	r2, #1
 80075c0:	6163      	str	r3, [r4, #20]
 80075c2:	3020      	adds	r0, #32
 80075c4:	e7e7      	b.n	8007596 <__d2b+0x62>
 80075c6:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 80075ca:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80075ce:	6030      	str	r0, [r6, #0]
 80075d0:	6918      	ldr	r0, [r3, #16]
 80075d2:	f7ff fd2f 	bl	8007034 <__hi0bits>
 80075d6:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 80075da:	e7e4      	b.n	80075a6 <__d2b+0x72>
 80075dc:	08007fb0 	.word	0x08007fb0
 80075e0:	08007fc1 	.word	0x08007fc1

080075e4 <__ascii_wctomb>:
 80075e4:	4603      	mov	r3, r0
 80075e6:	4608      	mov	r0, r1
 80075e8:	b141      	cbz	r1, 80075fc <__ascii_wctomb+0x18>
 80075ea:	2aff      	cmp	r2, #255	@ 0xff
 80075ec:	d904      	bls.n	80075f8 <__ascii_wctomb+0x14>
 80075ee:	228a      	movs	r2, #138	@ 0x8a
 80075f0:	f04f 30ff 	mov.w	r0, #4294967295
 80075f4:	601a      	str	r2, [r3, #0]
 80075f6:	4770      	bx	lr
 80075f8:	2001      	movs	r0, #1
 80075fa:	700a      	strb	r2, [r1, #0]
 80075fc:	4770      	bx	lr

080075fe <__sfputc_r>:
 80075fe:	6893      	ldr	r3, [r2, #8]
 8007600:	b410      	push	{r4}
 8007602:	3b01      	subs	r3, #1
 8007604:	2b00      	cmp	r3, #0
 8007606:	6093      	str	r3, [r2, #8]
 8007608:	da07      	bge.n	800761a <__sfputc_r+0x1c>
 800760a:	6994      	ldr	r4, [r2, #24]
 800760c:	42a3      	cmp	r3, r4
 800760e:	db01      	blt.n	8007614 <__sfputc_r+0x16>
 8007610:	290a      	cmp	r1, #10
 8007612:	d102      	bne.n	800761a <__sfputc_r+0x1c>
 8007614:	bc10      	pop	{r4}
 8007616:	f7fe bc5a 	b.w	8005ece <__swbuf_r>
 800761a:	6813      	ldr	r3, [r2, #0]
 800761c:	1c58      	adds	r0, r3, #1
 800761e:	6010      	str	r0, [r2, #0]
 8007620:	7019      	strb	r1, [r3, #0]
 8007622:	4608      	mov	r0, r1
 8007624:	bc10      	pop	{r4}
 8007626:	4770      	bx	lr

08007628 <__sfputs_r>:
 8007628:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800762a:	4606      	mov	r6, r0
 800762c:	460f      	mov	r7, r1
 800762e:	4614      	mov	r4, r2
 8007630:	18d5      	adds	r5, r2, r3
 8007632:	42ac      	cmp	r4, r5
 8007634:	d101      	bne.n	800763a <__sfputs_r+0x12>
 8007636:	2000      	movs	r0, #0
 8007638:	e007      	b.n	800764a <__sfputs_r+0x22>
 800763a:	463a      	mov	r2, r7
 800763c:	4630      	mov	r0, r6
 800763e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007642:	f7ff ffdc 	bl	80075fe <__sfputc_r>
 8007646:	1c43      	adds	r3, r0, #1
 8007648:	d1f3      	bne.n	8007632 <__sfputs_r+0xa>
 800764a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800764c <_vfiprintf_r>:
 800764c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007650:	460d      	mov	r5, r1
 8007652:	4614      	mov	r4, r2
 8007654:	4698      	mov	r8, r3
 8007656:	4606      	mov	r6, r0
 8007658:	b09d      	sub	sp, #116	@ 0x74
 800765a:	b118      	cbz	r0, 8007664 <_vfiprintf_r+0x18>
 800765c:	6a03      	ldr	r3, [r0, #32]
 800765e:	b90b      	cbnz	r3, 8007664 <_vfiprintf_r+0x18>
 8007660:	f7fe fb4c 	bl	8005cfc <__sinit>
 8007664:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8007666:	07d9      	lsls	r1, r3, #31
 8007668:	d405      	bmi.n	8007676 <_vfiprintf_r+0x2a>
 800766a:	89ab      	ldrh	r3, [r5, #12]
 800766c:	059a      	lsls	r2, r3, #22
 800766e:	d402      	bmi.n	8007676 <_vfiprintf_r+0x2a>
 8007670:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8007672:	f7fe fd4e 	bl	8006112 <__retarget_lock_acquire_recursive>
 8007676:	89ab      	ldrh	r3, [r5, #12]
 8007678:	071b      	lsls	r3, r3, #28
 800767a:	d501      	bpl.n	8007680 <_vfiprintf_r+0x34>
 800767c:	692b      	ldr	r3, [r5, #16]
 800767e:	b99b      	cbnz	r3, 80076a8 <_vfiprintf_r+0x5c>
 8007680:	4629      	mov	r1, r5
 8007682:	4630      	mov	r0, r6
 8007684:	f7fe fc62 	bl	8005f4c <__swsetup_r>
 8007688:	b170      	cbz	r0, 80076a8 <_vfiprintf_r+0x5c>
 800768a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800768c:	07dc      	lsls	r4, r3, #31
 800768e:	d504      	bpl.n	800769a <_vfiprintf_r+0x4e>
 8007690:	f04f 30ff 	mov.w	r0, #4294967295
 8007694:	b01d      	add	sp, #116	@ 0x74
 8007696:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800769a:	89ab      	ldrh	r3, [r5, #12]
 800769c:	0598      	lsls	r0, r3, #22
 800769e:	d4f7      	bmi.n	8007690 <_vfiprintf_r+0x44>
 80076a0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80076a2:	f7fe fd37 	bl	8006114 <__retarget_lock_release_recursive>
 80076a6:	e7f3      	b.n	8007690 <_vfiprintf_r+0x44>
 80076a8:	2300      	movs	r3, #0
 80076aa:	9309      	str	r3, [sp, #36]	@ 0x24
 80076ac:	2320      	movs	r3, #32
 80076ae:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80076b2:	2330      	movs	r3, #48	@ 0x30
 80076b4:	f04f 0901 	mov.w	r9, #1
 80076b8:	f8cd 800c 	str.w	r8, [sp, #12]
 80076bc:	f8df 81a8 	ldr.w	r8, [pc, #424]	@ 8007868 <_vfiprintf_r+0x21c>
 80076c0:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80076c4:	4623      	mov	r3, r4
 80076c6:	469a      	mov	sl, r3
 80076c8:	f813 2b01 	ldrb.w	r2, [r3], #1
 80076cc:	b10a      	cbz	r2, 80076d2 <_vfiprintf_r+0x86>
 80076ce:	2a25      	cmp	r2, #37	@ 0x25
 80076d0:	d1f9      	bne.n	80076c6 <_vfiprintf_r+0x7a>
 80076d2:	ebba 0b04 	subs.w	fp, sl, r4
 80076d6:	d00b      	beq.n	80076f0 <_vfiprintf_r+0xa4>
 80076d8:	465b      	mov	r3, fp
 80076da:	4622      	mov	r2, r4
 80076dc:	4629      	mov	r1, r5
 80076de:	4630      	mov	r0, r6
 80076e0:	f7ff ffa2 	bl	8007628 <__sfputs_r>
 80076e4:	3001      	adds	r0, #1
 80076e6:	f000 80a7 	beq.w	8007838 <_vfiprintf_r+0x1ec>
 80076ea:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80076ec:	445a      	add	r2, fp
 80076ee:	9209      	str	r2, [sp, #36]	@ 0x24
 80076f0:	f89a 3000 	ldrb.w	r3, [sl]
 80076f4:	2b00      	cmp	r3, #0
 80076f6:	f000 809f 	beq.w	8007838 <_vfiprintf_r+0x1ec>
 80076fa:	2300      	movs	r3, #0
 80076fc:	f04f 32ff 	mov.w	r2, #4294967295
 8007700:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8007704:	f10a 0a01 	add.w	sl, sl, #1
 8007708:	9304      	str	r3, [sp, #16]
 800770a:	9307      	str	r3, [sp, #28]
 800770c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8007710:	931a      	str	r3, [sp, #104]	@ 0x68
 8007712:	4654      	mov	r4, sl
 8007714:	2205      	movs	r2, #5
 8007716:	f814 1b01 	ldrb.w	r1, [r4], #1
 800771a:	4853      	ldr	r0, [pc, #332]	@ (8007868 <_vfiprintf_r+0x21c>)
 800771c:	f7fe fcfb 	bl	8006116 <memchr>
 8007720:	9a04      	ldr	r2, [sp, #16]
 8007722:	b9d8      	cbnz	r0, 800775c <_vfiprintf_r+0x110>
 8007724:	06d1      	lsls	r1, r2, #27
 8007726:	bf44      	itt	mi
 8007728:	2320      	movmi	r3, #32
 800772a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800772e:	0713      	lsls	r3, r2, #28
 8007730:	bf44      	itt	mi
 8007732:	232b      	movmi	r3, #43	@ 0x2b
 8007734:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8007738:	f89a 3000 	ldrb.w	r3, [sl]
 800773c:	2b2a      	cmp	r3, #42	@ 0x2a
 800773e:	d015      	beq.n	800776c <_vfiprintf_r+0x120>
 8007740:	4654      	mov	r4, sl
 8007742:	2000      	movs	r0, #0
 8007744:	f04f 0c0a 	mov.w	ip, #10
 8007748:	9a07      	ldr	r2, [sp, #28]
 800774a:	4621      	mov	r1, r4
 800774c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8007750:	3b30      	subs	r3, #48	@ 0x30
 8007752:	2b09      	cmp	r3, #9
 8007754:	d94b      	bls.n	80077ee <_vfiprintf_r+0x1a2>
 8007756:	b1b0      	cbz	r0, 8007786 <_vfiprintf_r+0x13a>
 8007758:	9207      	str	r2, [sp, #28]
 800775a:	e014      	b.n	8007786 <_vfiprintf_r+0x13a>
 800775c:	eba0 0308 	sub.w	r3, r0, r8
 8007760:	fa09 f303 	lsl.w	r3, r9, r3
 8007764:	4313      	orrs	r3, r2
 8007766:	46a2      	mov	sl, r4
 8007768:	9304      	str	r3, [sp, #16]
 800776a:	e7d2      	b.n	8007712 <_vfiprintf_r+0xc6>
 800776c:	9b03      	ldr	r3, [sp, #12]
 800776e:	1d19      	adds	r1, r3, #4
 8007770:	681b      	ldr	r3, [r3, #0]
 8007772:	9103      	str	r1, [sp, #12]
 8007774:	2b00      	cmp	r3, #0
 8007776:	bfbb      	ittet	lt
 8007778:	425b      	neglt	r3, r3
 800777a:	f042 0202 	orrlt.w	r2, r2, #2
 800777e:	9307      	strge	r3, [sp, #28]
 8007780:	9307      	strlt	r3, [sp, #28]
 8007782:	bfb8      	it	lt
 8007784:	9204      	strlt	r2, [sp, #16]
 8007786:	7823      	ldrb	r3, [r4, #0]
 8007788:	2b2e      	cmp	r3, #46	@ 0x2e
 800778a:	d10a      	bne.n	80077a2 <_vfiprintf_r+0x156>
 800778c:	7863      	ldrb	r3, [r4, #1]
 800778e:	2b2a      	cmp	r3, #42	@ 0x2a
 8007790:	d132      	bne.n	80077f8 <_vfiprintf_r+0x1ac>
 8007792:	9b03      	ldr	r3, [sp, #12]
 8007794:	3402      	adds	r4, #2
 8007796:	1d1a      	adds	r2, r3, #4
 8007798:	681b      	ldr	r3, [r3, #0]
 800779a:	9203      	str	r2, [sp, #12]
 800779c:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80077a0:	9305      	str	r3, [sp, #20]
 80077a2:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 800786c <_vfiprintf_r+0x220>
 80077a6:	2203      	movs	r2, #3
 80077a8:	4650      	mov	r0, sl
 80077aa:	7821      	ldrb	r1, [r4, #0]
 80077ac:	f7fe fcb3 	bl	8006116 <memchr>
 80077b0:	b138      	cbz	r0, 80077c2 <_vfiprintf_r+0x176>
 80077b2:	2240      	movs	r2, #64	@ 0x40
 80077b4:	9b04      	ldr	r3, [sp, #16]
 80077b6:	eba0 000a 	sub.w	r0, r0, sl
 80077ba:	4082      	lsls	r2, r0
 80077bc:	4313      	orrs	r3, r2
 80077be:	3401      	adds	r4, #1
 80077c0:	9304      	str	r3, [sp, #16]
 80077c2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80077c6:	2206      	movs	r2, #6
 80077c8:	4829      	ldr	r0, [pc, #164]	@ (8007870 <_vfiprintf_r+0x224>)
 80077ca:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80077ce:	f7fe fca2 	bl	8006116 <memchr>
 80077d2:	2800      	cmp	r0, #0
 80077d4:	d03f      	beq.n	8007856 <_vfiprintf_r+0x20a>
 80077d6:	4b27      	ldr	r3, [pc, #156]	@ (8007874 <_vfiprintf_r+0x228>)
 80077d8:	bb1b      	cbnz	r3, 8007822 <_vfiprintf_r+0x1d6>
 80077da:	9b03      	ldr	r3, [sp, #12]
 80077dc:	3307      	adds	r3, #7
 80077de:	f023 0307 	bic.w	r3, r3, #7
 80077e2:	3308      	adds	r3, #8
 80077e4:	9303      	str	r3, [sp, #12]
 80077e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80077e8:	443b      	add	r3, r7
 80077ea:	9309      	str	r3, [sp, #36]	@ 0x24
 80077ec:	e76a      	b.n	80076c4 <_vfiprintf_r+0x78>
 80077ee:	460c      	mov	r4, r1
 80077f0:	2001      	movs	r0, #1
 80077f2:	fb0c 3202 	mla	r2, ip, r2, r3
 80077f6:	e7a8      	b.n	800774a <_vfiprintf_r+0xfe>
 80077f8:	2300      	movs	r3, #0
 80077fa:	f04f 0c0a 	mov.w	ip, #10
 80077fe:	4619      	mov	r1, r3
 8007800:	3401      	adds	r4, #1
 8007802:	9305      	str	r3, [sp, #20]
 8007804:	4620      	mov	r0, r4
 8007806:	f810 2b01 	ldrb.w	r2, [r0], #1
 800780a:	3a30      	subs	r2, #48	@ 0x30
 800780c:	2a09      	cmp	r2, #9
 800780e:	d903      	bls.n	8007818 <_vfiprintf_r+0x1cc>
 8007810:	2b00      	cmp	r3, #0
 8007812:	d0c6      	beq.n	80077a2 <_vfiprintf_r+0x156>
 8007814:	9105      	str	r1, [sp, #20]
 8007816:	e7c4      	b.n	80077a2 <_vfiprintf_r+0x156>
 8007818:	4604      	mov	r4, r0
 800781a:	2301      	movs	r3, #1
 800781c:	fb0c 2101 	mla	r1, ip, r1, r2
 8007820:	e7f0      	b.n	8007804 <_vfiprintf_r+0x1b8>
 8007822:	ab03      	add	r3, sp, #12
 8007824:	9300      	str	r3, [sp, #0]
 8007826:	462a      	mov	r2, r5
 8007828:	4630      	mov	r0, r6
 800782a:	4b13      	ldr	r3, [pc, #76]	@ (8007878 <_vfiprintf_r+0x22c>)
 800782c:	a904      	add	r1, sp, #16
 800782e:	f7fd fe1b 	bl	8005468 <_printf_float>
 8007832:	4607      	mov	r7, r0
 8007834:	1c78      	adds	r0, r7, #1
 8007836:	d1d6      	bne.n	80077e6 <_vfiprintf_r+0x19a>
 8007838:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800783a:	07d9      	lsls	r1, r3, #31
 800783c:	d405      	bmi.n	800784a <_vfiprintf_r+0x1fe>
 800783e:	89ab      	ldrh	r3, [r5, #12]
 8007840:	059a      	lsls	r2, r3, #22
 8007842:	d402      	bmi.n	800784a <_vfiprintf_r+0x1fe>
 8007844:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8007846:	f7fe fc65 	bl	8006114 <__retarget_lock_release_recursive>
 800784a:	89ab      	ldrh	r3, [r5, #12]
 800784c:	065b      	lsls	r3, r3, #25
 800784e:	f53f af1f 	bmi.w	8007690 <_vfiprintf_r+0x44>
 8007852:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8007854:	e71e      	b.n	8007694 <_vfiprintf_r+0x48>
 8007856:	ab03      	add	r3, sp, #12
 8007858:	9300      	str	r3, [sp, #0]
 800785a:	462a      	mov	r2, r5
 800785c:	4630      	mov	r0, r6
 800785e:	4b06      	ldr	r3, [pc, #24]	@ (8007878 <_vfiprintf_r+0x22c>)
 8007860:	a904      	add	r1, sp, #16
 8007862:	f7fe f89f 	bl	80059a4 <_printf_i>
 8007866:	e7e4      	b.n	8007832 <_vfiprintf_r+0x1e6>
 8007868:	08008219 	.word	0x08008219
 800786c:	0800821f 	.word	0x0800821f
 8007870:	08008223 	.word	0x08008223
 8007874:	08005469 	.word	0x08005469
 8007878:	08007629 	.word	0x08007629

0800787c <__sflush_r>:
 800787c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8007880:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007882:	0716      	lsls	r6, r2, #28
 8007884:	4605      	mov	r5, r0
 8007886:	460c      	mov	r4, r1
 8007888:	d454      	bmi.n	8007934 <__sflush_r+0xb8>
 800788a:	684b      	ldr	r3, [r1, #4]
 800788c:	2b00      	cmp	r3, #0
 800788e:	dc02      	bgt.n	8007896 <__sflush_r+0x1a>
 8007890:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8007892:	2b00      	cmp	r3, #0
 8007894:	dd48      	ble.n	8007928 <__sflush_r+0xac>
 8007896:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8007898:	2e00      	cmp	r6, #0
 800789a:	d045      	beq.n	8007928 <__sflush_r+0xac>
 800789c:	2300      	movs	r3, #0
 800789e:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80078a2:	682f      	ldr	r7, [r5, #0]
 80078a4:	6a21      	ldr	r1, [r4, #32]
 80078a6:	602b      	str	r3, [r5, #0]
 80078a8:	d030      	beq.n	800790c <__sflush_r+0x90>
 80078aa:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80078ac:	89a3      	ldrh	r3, [r4, #12]
 80078ae:	0759      	lsls	r1, r3, #29
 80078b0:	d505      	bpl.n	80078be <__sflush_r+0x42>
 80078b2:	6863      	ldr	r3, [r4, #4]
 80078b4:	1ad2      	subs	r2, r2, r3
 80078b6:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80078b8:	b10b      	cbz	r3, 80078be <__sflush_r+0x42>
 80078ba:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80078bc:	1ad2      	subs	r2, r2, r3
 80078be:	2300      	movs	r3, #0
 80078c0:	4628      	mov	r0, r5
 80078c2:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80078c4:	6a21      	ldr	r1, [r4, #32]
 80078c6:	47b0      	blx	r6
 80078c8:	1c43      	adds	r3, r0, #1
 80078ca:	89a3      	ldrh	r3, [r4, #12]
 80078cc:	d106      	bne.n	80078dc <__sflush_r+0x60>
 80078ce:	6829      	ldr	r1, [r5, #0]
 80078d0:	291d      	cmp	r1, #29
 80078d2:	d82b      	bhi.n	800792c <__sflush_r+0xb0>
 80078d4:	4a28      	ldr	r2, [pc, #160]	@ (8007978 <__sflush_r+0xfc>)
 80078d6:	410a      	asrs	r2, r1
 80078d8:	07d6      	lsls	r6, r2, #31
 80078da:	d427      	bmi.n	800792c <__sflush_r+0xb0>
 80078dc:	2200      	movs	r2, #0
 80078de:	6062      	str	r2, [r4, #4]
 80078e0:	6922      	ldr	r2, [r4, #16]
 80078e2:	04d9      	lsls	r1, r3, #19
 80078e4:	6022      	str	r2, [r4, #0]
 80078e6:	d504      	bpl.n	80078f2 <__sflush_r+0x76>
 80078e8:	1c42      	adds	r2, r0, #1
 80078ea:	d101      	bne.n	80078f0 <__sflush_r+0x74>
 80078ec:	682b      	ldr	r3, [r5, #0]
 80078ee:	b903      	cbnz	r3, 80078f2 <__sflush_r+0x76>
 80078f0:	6560      	str	r0, [r4, #84]	@ 0x54
 80078f2:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80078f4:	602f      	str	r7, [r5, #0]
 80078f6:	b1b9      	cbz	r1, 8007928 <__sflush_r+0xac>
 80078f8:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80078fc:	4299      	cmp	r1, r3
 80078fe:	d002      	beq.n	8007906 <__sflush_r+0x8a>
 8007900:	4628      	mov	r0, r5
 8007902:	f7ff fa95 	bl	8006e30 <_free_r>
 8007906:	2300      	movs	r3, #0
 8007908:	6363      	str	r3, [r4, #52]	@ 0x34
 800790a:	e00d      	b.n	8007928 <__sflush_r+0xac>
 800790c:	2301      	movs	r3, #1
 800790e:	4628      	mov	r0, r5
 8007910:	47b0      	blx	r6
 8007912:	4602      	mov	r2, r0
 8007914:	1c50      	adds	r0, r2, #1
 8007916:	d1c9      	bne.n	80078ac <__sflush_r+0x30>
 8007918:	682b      	ldr	r3, [r5, #0]
 800791a:	2b00      	cmp	r3, #0
 800791c:	d0c6      	beq.n	80078ac <__sflush_r+0x30>
 800791e:	2b1d      	cmp	r3, #29
 8007920:	d001      	beq.n	8007926 <__sflush_r+0xaa>
 8007922:	2b16      	cmp	r3, #22
 8007924:	d11d      	bne.n	8007962 <__sflush_r+0xe6>
 8007926:	602f      	str	r7, [r5, #0]
 8007928:	2000      	movs	r0, #0
 800792a:	e021      	b.n	8007970 <__sflush_r+0xf4>
 800792c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8007930:	b21b      	sxth	r3, r3
 8007932:	e01a      	b.n	800796a <__sflush_r+0xee>
 8007934:	690f      	ldr	r7, [r1, #16]
 8007936:	2f00      	cmp	r7, #0
 8007938:	d0f6      	beq.n	8007928 <__sflush_r+0xac>
 800793a:	0793      	lsls	r3, r2, #30
 800793c:	bf18      	it	ne
 800793e:	2300      	movne	r3, #0
 8007940:	680e      	ldr	r6, [r1, #0]
 8007942:	bf08      	it	eq
 8007944:	694b      	ldreq	r3, [r1, #20]
 8007946:	1bf6      	subs	r6, r6, r7
 8007948:	600f      	str	r7, [r1, #0]
 800794a:	608b      	str	r3, [r1, #8]
 800794c:	2e00      	cmp	r6, #0
 800794e:	ddeb      	ble.n	8007928 <__sflush_r+0xac>
 8007950:	4633      	mov	r3, r6
 8007952:	463a      	mov	r2, r7
 8007954:	4628      	mov	r0, r5
 8007956:	6a21      	ldr	r1, [r4, #32]
 8007958:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 800795c:	47e0      	blx	ip
 800795e:	2800      	cmp	r0, #0
 8007960:	dc07      	bgt.n	8007972 <__sflush_r+0xf6>
 8007962:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8007966:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800796a:	f04f 30ff 	mov.w	r0, #4294967295
 800796e:	81a3      	strh	r3, [r4, #12]
 8007970:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007972:	4407      	add	r7, r0
 8007974:	1a36      	subs	r6, r6, r0
 8007976:	e7e9      	b.n	800794c <__sflush_r+0xd0>
 8007978:	dfbffffe 	.word	0xdfbffffe

0800797c <_fflush_r>:
 800797c:	b538      	push	{r3, r4, r5, lr}
 800797e:	690b      	ldr	r3, [r1, #16]
 8007980:	4605      	mov	r5, r0
 8007982:	460c      	mov	r4, r1
 8007984:	b913      	cbnz	r3, 800798c <_fflush_r+0x10>
 8007986:	2500      	movs	r5, #0
 8007988:	4628      	mov	r0, r5
 800798a:	bd38      	pop	{r3, r4, r5, pc}
 800798c:	b118      	cbz	r0, 8007996 <_fflush_r+0x1a>
 800798e:	6a03      	ldr	r3, [r0, #32]
 8007990:	b90b      	cbnz	r3, 8007996 <_fflush_r+0x1a>
 8007992:	f7fe f9b3 	bl	8005cfc <__sinit>
 8007996:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800799a:	2b00      	cmp	r3, #0
 800799c:	d0f3      	beq.n	8007986 <_fflush_r+0xa>
 800799e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80079a0:	07d0      	lsls	r0, r2, #31
 80079a2:	d404      	bmi.n	80079ae <_fflush_r+0x32>
 80079a4:	0599      	lsls	r1, r3, #22
 80079a6:	d402      	bmi.n	80079ae <_fflush_r+0x32>
 80079a8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80079aa:	f7fe fbb2 	bl	8006112 <__retarget_lock_acquire_recursive>
 80079ae:	4628      	mov	r0, r5
 80079b0:	4621      	mov	r1, r4
 80079b2:	f7ff ff63 	bl	800787c <__sflush_r>
 80079b6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80079b8:	4605      	mov	r5, r0
 80079ba:	07da      	lsls	r2, r3, #31
 80079bc:	d4e4      	bmi.n	8007988 <_fflush_r+0xc>
 80079be:	89a3      	ldrh	r3, [r4, #12]
 80079c0:	059b      	lsls	r3, r3, #22
 80079c2:	d4e1      	bmi.n	8007988 <_fflush_r+0xc>
 80079c4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80079c6:	f7fe fba5 	bl	8006114 <__retarget_lock_release_recursive>
 80079ca:	e7dd      	b.n	8007988 <_fflush_r+0xc>

080079cc <fiprintf>:
 80079cc:	b40e      	push	{r1, r2, r3}
 80079ce:	b503      	push	{r0, r1, lr}
 80079d0:	4601      	mov	r1, r0
 80079d2:	ab03      	add	r3, sp, #12
 80079d4:	4805      	ldr	r0, [pc, #20]	@ (80079ec <fiprintf+0x20>)
 80079d6:	f853 2b04 	ldr.w	r2, [r3], #4
 80079da:	6800      	ldr	r0, [r0, #0]
 80079dc:	9301      	str	r3, [sp, #4]
 80079de:	f7ff fe35 	bl	800764c <_vfiprintf_r>
 80079e2:	b002      	add	sp, #8
 80079e4:	f85d eb04 	ldr.w	lr, [sp], #4
 80079e8:	b003      	add	sp, #12
 80079ea:	4770      	bx	lr
 80079ec:	20000198 	.word	0x20000198

080079f0 <__swhatbuf_r>:
 80079f0:	b570      	push	{r4, r5, r6, lr}
 80079f2:	460c      	mov	r4, r1
 80079f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80079f8:	4615      	mov	r5, r2
 80079fa:	2900      	cmp	r1, #0
 80079fc:	461e      	mov	r6, r3
 80079fe:	b096      	sub	sp, #88	@ 0x58
 8007a00:	da0c      	bge.n	8007a1c <__swhatbuf_r+0x2c>
 8007a02:	89a3      	ldrh	r3, [r4, #12]
 8007a04:	2100      	movs	r1, #0
 8007a06:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8007a0a:	bf14      	ite	ne
 8007a0c:	2340      	movne	r3, #64	@ 0x40
 8007a0e:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8007a12:	2000      	movs	r0, #0
 8007a14:	6031      	str	r1, [r6, #0]
 8007a16:	602b      	str	r3, [r5, #0]
 8007a18:	b016      	add	sp, #88	@ 0x58
 8007a1a:	bd70      	pop	{r4, r5, r6, pc}
 8007a1c:	466a      	mov	r2, sp
 8007a1e:	f000 f849 	bl	8007ab4 <_fstat_r>
 8007a22:	2800      	cmp	r0, #0
 8007a24:	dbed      	blt.n	8007a02 <__swhatbuf_r+0x12>
 8007a26:	9901      	ldr	r1, [sp, #4]
 8007a28:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8007a2c:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8007a30:	4259      	negs	r1, r3
 8007a32:	4159      	adcs	r1, r3
 8007a34:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8007a38:	e7eb      	b.n	8007a12 <__swhatbuf_r+0x22>

08007a3a <__smakebuf_r>:
 8007a3a:	898b      	ldrh	r3, [r1, #12]
 8007a3c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007a3e:	079d      	lsls	r5, r3, #30
 8007a40:	4606      	mov	r6, r0
 8007a42:	460c      	mov	r4, r1
 8007a44:	d507      	bpl.n	8007a56 <__smakebuf_r+0x1c>
 8007a46:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8007a4a:	6023      	str	r3, [r4, #0]
 8007a4c:	6123      	str	r3, [r4, #16]
 8007a4e:	2301      	movs	r3, #1
 8007a50:	6163      	str	r3, [r4, #20]
 8007a52:	b003      	add	sp, #12
 8007a54:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007a56:	466a      	mov	r2, sp
 8007a58:	ab01      	add	r3, sp, #4
 8007a5a:	f7ff ffc9 	bl	80079f0 <__swhatbuf_r>
 8007a5e:	9f00      	ldr	r7, [sp, #0]
 8007a60:	4605      	mov	r5, r0
 8007a62:	4639      	mov	r1, r7
 8007a64:	4630      	mov	r0, r6
 8007a66:	f7fd fbd5 	bl	8005214 <_malloc_r>
 8007a6a:	b948      	cbnz	r0, 8007a80 <__smakebuf_r+0x46>
 8007a6c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8007a70:	059a      	lsls	r2, r3, #22
 8007a72:	d4ee      	bmi.n	8007a52 <__smakebuf_r+0x18>
 8007a74:	f023 0303 	bic.w	r3, r3, #3
 8007a78:	f043 0302 	orr.w	r3, r3, #2
 8007a7c:	81a3      	strh	r3, [r4, #12]
 8007a7e:	e7e2      	b.n	8007a46 <__smakebuf_r+0xc>
 8007a80:	89a3      	ldrh	r3, [r4, #12]
 8007a82:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8007a86:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8007a8a:	81a3      	strh	r3, [r4, #12]
 8007a8c:	9b01      	ldr	r3, [sp, #4]
 8007a8e:	6020      	str	r0, [r4, #0]
 8007a90:	b15b      	cbz	r3, 8007aaa <__smakebuf_r+0x70>
 8007a92:	4630      	mov	r0, r6
 8007a94:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8007a98:	f000 f81e 	bl	8007ad8 <_isatty_r>
 8007a9c:	b128      	cbz	r0, 8007aaa <__smakebuf_r+0x70>
 8007a9e:	89a3      	ldrh	r3, [r4, #12]
 8007aa0:	f023 0303 	bic.w	r3, r3, #3
 8007aa4:	f043 0301 	orr.w	r3, r3, #1
 8007aa8:	81a3      	strh	r3, [r4, #12]
 8007aaa:	89a3      	ldrh	r3, [r4, #12]
 8007aac:	431d      	orrs	r5, r3
 8007aae:	81a5      	strh	r5, [r4, #12]
 8007ab0:	e7cf      	b.n	8007a52 <__smakebuf_r+0x18>
	...

08007ab4 <_fstat_r>:
 8007ab4:	b538      	push	{r3, r4, r5, lr}
 8007ab6:	2300      	movs	r3, #0
 8007ab8:	4d06      	ldr	r5, [pc, #24]	@ (8007ad4 <_fstat_r+0x20>)
 8007aba:	4604      	mov	r4, r0
 8007abc:	4608      	mov	r0, r1
 8007abe:	4611      	mov	r1, r2
 8007ac0:	602b      	str	r3, [r5, #0]
 8007ac2:	f7fa fef0 	bl	80028a6 <_fstat>
 8007ac6:	1c43      	adds	r3, r0, #1
 8007ac8:	d102      	bne.n	8007ad0 <_fstat_r+0x1c>
 8007aca:	682b      	ldr	r3, [r5, #0]
 8007acc:	b103      	cbz	r3, 8007ad0 <_fstat_r+0x1c>
 8007ace:	6023      	str	r3, [r4, #0]
 8007ad0:	bd38      	pop	{r3, r4, r5, pc}
 8007ad2:	bf00      	nop
 8007ad4:	200005c8 	.word	0x200005c8

08007ad8 <_isatty_r>:
 8007ad8:	b538      	push	{r3, r4, r5, lr}
 8007ada:	2300      	movs	r3, #0
 8007adc:	4d05      	ldr	r5, [pc, #20]	@ (8007af4 <_isatty_r+0x1c>)
 8007ade:	4604      	mov	r4, r0
 8007ae0:	4608      	mov	r0, r1
 8007ae2:	602b      	str	r3, [r5, #0]
 8007ae4:	f7fa fee4 	bl	80028b0 <_isatty>
 8007ae8:	1c43      	adds	r3, r0, #1
 8007aea:	d102      	bne.n	8007af2 <_isatty_r+0x1a>
 8007aec:	682b      	ldr	r3, [r5, #0]
 8007aee:	b103      	cbz	r3, 8007af2 <_isatty_r+0x1a>
 8007af0:	6023      	str	r3, [r4, #0]
 8007af2:	bd38      	pop	{r3, r4, r5, pc}
 8007af4:	200005c8 	.word	0x200005c8

08007af8 <abort>:
 8007af8:	2006      	movs	r0, #6
 8007afa:	b508      	push	{r3, lr}
 8007afc:	f000 f840 	bl	8007b80 <raise>
 8007b00:	2001      	movs	r0, #1
 8007b02:	f7fa feb7 	bl	8002874 <_exit>

08007b06 <_calloc_r>:
 8007b06:	b570      	push	{r4, r5, r6, lr}
 8007b08:	fba1 5402 	umull	r5, r4, r1, r2
 8007b0c:	b93c      	cbnz	r4, 8007b1e <_calloc_r+0x18>
 8007b0e:	4629      	mov	r1, r5
 8007b10:	f7fd fb80 	bl	8005214 <_malloc_r>
 8007b14:	4606      	mov	r6, r0
 8007b16:	b928      	cbnz	r0, 8007b24 <_calloc_r+0x1e>
 8007b18:	2600      	movs	r6, #0
 8007b1a:	4630      	mov	r0, r6
 8007b1c:	bd70      	pop	{r4, r5, r6, pc}
 8007b1e:	220c      	movs	r2, #12
 8007b20:	6002      	str	r2, [r0, #0]
 8007b22:	e7f9      	b.n	8007b18 <_calloc_r+0x12>
 8007b24:	462a      	mov	r2, r5
 8007b26:	4621      	mov	r1, r4
 8007b28:	f7fe fa66 	bl	8005ff8 <memset>
 8007b2c:	e7f5      	b.n	8007b1a <_calloc_r+0x14>

08007b2e <_raise_r>:
 8007b2e:	291f      	cmp	r1, #31
 8007b30:	b538      	push	{r3, r4, r5, lr}
 8007b32:	4605      	mov	r5, r0
 8007b34:	460c      	mov	r4, r1
 8007b36:	d904      	bls.n	8007b42 <_raise_r+0x14>
 8007b38:	2316      	movs	r3, #22
 8007b3a:	6003      	str	r3, [r0, #0]
 8007b3c:	f04f 30ff 	mov.w	r0, #4294967295
 8007b40:	bd38      	pop	{r3, r4, r5, pc}
 8007b42:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8007b44:	b112      	cbz	r2, 8007b4c <_raise_r+0x1e>
 8007b46:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8007b4a:	b94b      	cbnz	r3, 8007b60 <_raise_r+0x32>
 8007b4c:	4628      	mov	r0, r5
 8007b4e:	f000 f831 	bl	8007bb4 <_getpid_r>
 8007b52:	4622      	mov	r2, r4
 8007b54:	4601      	mov	r1, r0
 8007b56:	4628      	mov	r0, r5
 8007b58:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007b5c:	f000 b818 	b.w	8007b90 <_kill_r>
 8007b60:	2b01      	cmp	r3, #1
 8007b62:	d00a      	beq.n	8007b7a <_raise_r+0x4c>
 8007b64:	1c59      	adds	r1, r3, #1
 8007b66:	d103      	bne.n	8007b70 <_raise_r+0x42>
 8007b68:	2316      	movs	r3, #22
 8007b6a:	6003      	str	r3, [r0, #0]
 8007b6c:	2001      	movs	r0, #1
 8007b6e:	e7e7      	b.n	8007b40 <_raise_r+0x12>
 8007b70:	2100      	movs	r1, #0
 8007b72:	4620      	mov	r0, r4
 8007b74:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8007b78:	4798      	blx	r3
 8007b7a:	2000      	movs	r0, #0
 8007b7c:	e7e0      	b.n	8007b40 <_raise_r+0x12>
	...

08007b80 <raise>:
 8007b80:	4b02      	ldr	r3, [pc, #8]	@ (8007b8c <raise+0xc>)
 8007b82:	4601      	mov	r1, r0
 8007b84:	6818      	ldr	r0, [r3, #0]
 8007b86:	f7ff bfd2 	b.w	8007b2e <_raise_r>
 8007b8a:	bf00      	nop
 8007b8c:	20000198 	.word	0x20000198

08007b90 <_kill_r>:
 8007b90:	b538      	push	{r3, r4, r5, lr}
 8007b92:	2300      	movs	r3, #0
 8007b94:	4d06      	ldr	r5, [pc, #24]	@ (8007bb0 <_kill_r+0x20>)
 8007b96:	4604      	mov	r4, r0
 8007b98:	4608      	mov	r0, r1
 8007b9a:	4611      	mov	r1, r2
 8007b9c:	602b      	str	r3, [r5, #0]
 8007b9e:	f7fa fe61 	bl	8002864 <_kill>
 8007ba2:	1c43      	adds	r3, r0, #1
 8007ba4:	d102      	bne.n	8007bac <_kill_r+0x1c>
 8007ba6:	682b      	ldr	r3, [r5, #0]
 8007ba8:	b103      	cbz	r3, 8007bac <_kill_r+0x1c>
 8007baa:	6023      	str	r3, [r4, #0]
 8007bac:	bd38      	pop	{r3, r4, r5, pc}
 8007bae:	bf00      	nop
 8007bb0:	200005c8 	.word	0x200005c8

08007bb4 <_getpid_r>:
 8007bb4:	f7fa be54 	b.w	8002860 <_getpid>

08007bb8 <_init>:
 8007bb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007bba:	bf00      	nop
 8007bbc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007bbe:	bc08      	pop	{r3}
 8007bc0:	469e      	mov	lr, r3
 8007bc2:	4770      	bx	lr

08007bc4 <_fini>:
 8007bc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007bc6:	bf00      	nop
 8007bc8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007bca:	bc08      	pop	{r3}
 8007bcc:	469e      	mov	lr, r3
 8007bce:	4770      	bx	lr
