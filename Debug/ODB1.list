
ODB1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00007ee0  08000110  08000110  00001110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000694  08007ff0  08007ff0  00008ff0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08008684  08008684  0000a1e8  2**0
                  CONTENTS
  4 .ARM          00000008  08008684  08008684  00009684  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800868c  0800868c  0000a1e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800868c  0800868c  0000968c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08008690  08008690  00009690  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001e8  20000000  08008694  0000a000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000484  200001e8  0800887c  0000a1e8  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000066c  0800887c  0000a66c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0000a1e8  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000866e  00000000  00000000  0000a211  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001bd3  00000000  00000000  0001287f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loclists 00000ef8  00000000  00000000  00014452  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000003f0  00000000  00000000  0001534a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000002ee  00000000  00000000  0001573a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001a622  00000000  00000000  00015a28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000b3b7  00000000  00000000  0003004a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00095b98  00000000  00000000  0003b401  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000d0f99  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00001bfc  00000000  00000000  000d0fdc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	@ (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	@ (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200001e8 	.word	0x200001e8
 800012c:	00000000 	.word	0x00000000
 8000130:	08007fd8 	.word	0x08007fd8

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	@ (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	@ (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	@ (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200001ec 	.word	0x200001ec
 800014c:	08007fd8 	.word	0x08007fd8

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <__aeabi_drsub>:
 8000160:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000164:	e002      	b.n	800016c <__adddf3>
 8000166:	bf00      	nop

08000168 <__aeabi_dsub>:
 8000168:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800016c <__adddf3>:
 800016c:	b530      	push	{r4, r5, lr}
 800016e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000172:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000176:	ea94 0f05 	teq	r4, r5
 800017a:	bf08      	it	eq
 800017c:	ea90 0f02 	teqeq	r0, r2
 8000180:	bf1f      	itttt	ne
 8000182:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000186:	ea55 0c02 	orrsne.w	ip, r5, r2
 800018a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800018e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000192:	f000 80e2 	beq.w	800035a <__adddf3+0x1ee>
 8000196:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800019a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800019e:	bfb8      	it	lt
 80001a0:	426d      	neglt	r5, r5
 80001a2:	dd0c      	ble.n	80001be <__adddf3+0x52>
 80001a4:	442c      	add	r4, r5
 80001a6:	ea80 0202 	eor.w	r2, r0, r2
 80001aa:	ea81 0303 	eor.w	r3, r1, r3
 80001ae:	ea82 0000 	eor.w	r0, r2, r0
 80001b2:	ea83 0101 	eor.w	r1, r3, r1
 80001b6:	ea80 0202 	eor.w	r2, r0, r2
 80001ba:	ea81 0303 	eor.w	r3, r1, r3
 80001be:	2d36      	cmp	r5, #54	@ 0x36
 80001c0:	bf88      	it	hi
 80001c2:	bd30      	pophi	{r4, r5, pc}
 80001c4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80001c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001cc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80001d0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001d4:	d002      	beq.n	80001dc <__adddf3+0x70>
 80001d6:	4240      	negs	r0, r0
 80001d8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001dc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 80001e0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001e4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001e8:	d002      	beq.n	80001f0 <__adddf3+0x84>
 80001ea:	4252      	negs	r2, r2
 80001ec:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80001f0:	ea94 0f05 	teq	r4, r5
 80001f4:	f000 80a7 	beq.w	8000346 <__adddf3+0x1da>
 80001f8:	f1a4 0401 	sub.w	r4, r4, #1
 80001fc:	f1d5 0e20 	rsbs	lr, r5, #32
 8000200:	db0d      	blt.n	800021e <__adddf3+0xb2>
 8000202:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000206:	fa22 f205 	lsr.w	r2, r2, r5
 800020a:	1880      	adds	r0, r0, r2
 800020c:	f141 0100 	adc.w	r1, r1, #0
 8000210:	fa03 f20e 	lsl.w	r2, r3, lr
 8000214:	1880      	adds	r0, r0, r2
 8000216:	fa43 f305 	asr.w	r3, r3, r5
 800021a:	4159      	adcs	r1, r3
 800021c:	e00e      	b.n	800023c <__adddf3+0xd0>
 800021e:	f1a5 0520 	sub.w	r5, r5, #32
 8000222:	f10e 0e20 	add.w	lr, lr, #32
 8000226:	2a01      	cmp	r2, #1
 8000228:	fa03 fc0e 	lsl.w	ip, r3, lr
 800022c:	bf28      	it	cs
 800022e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000232:	fa43 f305 	asr.w	r3, r3, r5
 8000236:	18c0      	adds	r0, r0, r3
 8000238:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800023c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000240:	d507      	bpl.n	8000252 <__adddf3+0xe6>
 8000242:	f04f 0e00 	mov.w	lr, #0
 8000246:	f1dc 0c00 	rsbs	ip, ip, #0
 800024a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800024e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000252:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000256:	d31b      	bcc.n	8000290 <__adddf3+0x124>
 8000258:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800025c:	d30c      	bcc.n	8000278 <__adddf3+0x10c>
 800025e:	0849      	lsrs	r1, r1, #1
 8000260:	ea5f 0030 	movs.w	r0, r0, rrx
 8000264:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000268:	f104 0401 	add.w	r4, r4, #1
 800026c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000270:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000274:	f080 809a 	bcs.w	80003ac <__adddf3+0x240>
 8000278:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800027c:	bf08      	it	eq
 800027e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000282:	f150 0000 	adcs.w	r0, r0, #0
 8000286:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800028a:	ea41 0105 	orr.w	r1, r1, r5
 800028e:	bd30      	pop	{r4, r5, pc}
 8000290:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000294:	4140      	adcs	r0, r0
 8000296:	eb41 0101 	adc.w	r1, r1, r1
 800029a:	3c01      	subs	r4, #1
 800029c:	bf28      	it	cs
 800029e:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80002a2:	d2e9      	bcs.n	8000278 <__adddf3+0x10c>
 80002a4:	f091 0f00 	teq	r1, #0
 80002a8:	bf04      	itt	eq
 80002aa:	4601      	moveq	r1, r0
 80002ac:	2000      	moveq	r0, #0
 80002ae:	fab1 f381 	clz	r3, r1
 80002b2:	bf08      	it	eq
 80002b4:	3320      	addeq	r3, #32
 80002b6:	f1a3 030b 	sub.w	r3, r3, #11
 80002ba:	f1b3 0220 	subs.w	r2, r3, #32
 80002be:	da0c      	bge.n	80002da <__adddf3+0x16e>
 80002c0:	320c      	adds	r2, #12
 80002c2:	dd08      	ble.n	80002d6 <__adddf3+0x16a>
 80002c4:	f102 0c14 	add.w	ip, r2, #20
 80002c8:	f1c2 020c 	rsb	r2, r2, #12
 80002cc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002d0:	fa21 f102 	lsr.w	r1, r1, r2
 80002d4:	e00c      	b.n	80002f0 <__adddf3+0x184>
 80002d6:	f102 0214 	add.w	r2, r2, #20
 80002da:	bfd8      	it	le
 80002dc:	f1c2 0c20 	rsble	ip, r2, #32
 80002e0:	fa01 f102 	lsl.w	r1, r1, r2
 80002e4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002e8:	bfdc      	itt	le
 80002ea:	ea41 010c 	orrle.w	r1, r1, ip
 80002ee:	4090      	lslle	r0, r2
 80002f0:	1ae4      	subs	r4, r4, r3
 80002f2:	bfa2      	ittt	ge
 80002f4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80002f8:	4329      	orrge	r1, r5
 80002fa:	bd30      	popge	{r4, r5, pc}
 80002fc:	ea6f 0404 	mvn.w	r4, r4
 8000300:	3c1f      	subs	r4, #31
 8000302:	da1c      	bge.n	800033e <__adddf3+0x1d2>
 8000304:	340c      	adds	r4, #12
 8000306:	dc0e      	bgt.n	8000326 <__adddf3+0x1ba>
 8000308:	f104 0414 	add.w	r4, r4, #20
 800030c:	f1c4 0220 	rsb	r2, r4, #32
 8000310:	fa20 f004 	lsr.w	r0, r0, r4
 8000314:	fa01 f302 	lsl.w	r3, r1, r2
 8000318:	ea40 0003 	orr.w	r0, r0, r3
 800031c:	fa21 f304 	lsr.w	r3, r1, r4
 8000320:	ea45 0103 	orr.w	r1, r5, r3
 8000324:	bd30      	pop	{r4, r5, pc}
 8000326:	f1c4 040c 	rsb	r4, r4, #12
 800032a:	f1c4 0220 	rsb	r2, r4, #32
 800032e:	fa20 f002 	lsr.w	r0, r0, r2
 8000332:	fa01 f304 	lsl.w	r3, r1, r4
 8000336:	ea40 0003 	orr.w	r0, r0, r3
 800033a:	4629      	mov	r1, r5
 800033c:	bd30      	pop	{r4, r5, pc}
 800033e:	fa21 f004 	lsr.w	r0, r1, r4
 8000342:	4629      	mov	r1, r5
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f094 0f00 	teq	r4, #0
 800034a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800034e:	bf06      	itte	eq
 8000350:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000354:	3401      	addeq	r4, #1
 8000356:	3d01      	subne	r5, #1
 8000358:	e74e      	b.n	80001f8 <__adddf3+0x8c>
 800035a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800035e:	bf18      	it	ne
 8000360:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000364:	d029      	beq.n	80003ba <__adddf3+0x24e>
 8000366:	ea94 0f05 	teq	r4, r5
 800036a:	bf08      	it	eq
 800036c:	ea90 0f02 	teqeq	r0, r2
 8000370:	d005      	beq.n	800037e <__adddf3+0x212>
 8000372:	ea54 0c00 	orrs.w	ip, r4, r0
 8000376:	bf04      	itt	eq
 8000378:	4619      	moveq	r1, r3
 800037a:	4610      	moveq	r0, r2
 800037c:	bd30      	pop	{r4, r5, pc}
 800037e:	ea91 0f03 	teq	r1, r3
 8000382:	bf1e      	ittt	ne
 8000384:	2100      	movne	r1, #0
 8000386:	2000      	movne	r0, #0
 8000388:	bd30      	popne	{r4, r5, pc}
 800038a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800038e:	d105      	bne.n	800039c <__adddf3+0x230>
 8000390:	0040      	lsls	r0, r0, #1
 8000392:	4149      	adcs	r1, r1
 8000394:	bf28      	it	cs
 8000396:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 800039a:	bd30      	pop	{r4, r5, pc}
 800039c:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80003a0:	bf3c      	itt	cc
 80003a2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80003a6:	bd30      	popcc	{r4, r5, pc}
 80003a8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003ac:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80003b0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80003b4:	f04f 0000 	mov.w	r0, #0
 80003b8:	bd30      	pop	{r4, r5, pc}
 80003ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003be:	bf1a      	itte	ne
 80003c0:	4619      	movne	r1, r3
 80003c2:	4610      	movne	r0, r2
 80003c4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003c8:	bf1c      	itt	ne
 80003ca:	460b      	movne	r3, r1
 80003cc:	4602      	movne	r2, r0
 80003ce:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003d2:	bf06      	itte	eq
 80003d4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003d8:	ea91 0f03 	teqeq	r1, r3
 80003dc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 80003e0:	bd30      	pop	{r4, r5, pc}
 80003e2:	bf00      	nop

080003e4 <__aeabi_ui2d>:
 80003e4:	f090 0f00 	teq	r0, #0
 80003e8:	bf04      	itt	eq
 80003ea:	2100      	moveq	r1, #0
 80003ec:	4770      	bxeq	lr
 80003ee:	b530      	push	{r4, r5, lr}
 80003f0:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80003f4:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80003f8:	f04f 0500 	mov.w	r5, #0
 80003fc:	f04f 0100 	mov.w	r1, #0
 8000400:	e750      	b.n	80002a4 <__adddf3+0x138>
 8000402:	bf00      	nop

08000404 <__aeabi_i2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000418:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800041c:	bf48      	it	mi
 800041e:	4240      	negmi	r0, r0
 8000420:	f04f 0100 	mov.w	r1, #0
 8000424:	e73e      	b.n	80002a4 <__adddf3+0x138>
 8000426:	bf00      	nop

08000428 <__aeabi_f2d>:
 8000428:	0042      	lsls	r2, r0, #1
 800042a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800042e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000432:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000436:	bf1f      	itttt	ne
 8000438:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800043c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000440:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000444:	4770      	bxne	lr
 8000446:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800044a:	bf08      	it	eq
 800044c:	4770      	bxeq	lr
 800044e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000452:	bf04      	itt	eq
 8000454:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000458:	4770      	bxeq	lr
 800045a:	b530      	push	{r4, r5, lr}
 800045c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000460:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000464:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000468:	e71c      	b.n	80002a4 <__adddf3+0x138>
 800046a:	bf00      	nop

0800046c <__aeabi_ul2d>:
 800046c:	ea50 0201 	orrs.w	r2, r0, r1
 8000470:	bf08      	it	eq
 8000472:	4770      	bxeq	lr
 8000474:	b530      	push	{r4, r5, lr}
 8000476:	f04f 0500 	mov.w	r5, #0
 800047a:	e00a      	b.n	8000492 <__aeabi_l2d+0x16>

0800047c <__aeabi_l2d>:
 800047c:	ea50 0201 	orrs.w	r2, r0, r1
 8000480:	bf08      	it	eq
 8000482:	4770      	bxeq	lr
 8000484:	b530      	push	{r4, r5, lr}
 8000486:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 800048a:	d502      	bpl.n	8000492 <__aeabi_l2d+0x16>
 800048c:	4240      	negs	r0, r0
 800048e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000492:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000496:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800049a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800049e:	f43f aed8 	beq.w	8000252 <__adddf3+0xe6>
 80004a2:	f04f 0203 	mov.w	r2, #3
 80004a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004aa:	bf18      	it	ne
 80004ac:	3203      	addne	r2, #3
 80004ae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004b2:	bf18      	it	ne
 80004b4:	3203      	addne	r2, #3
 80004b6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004ba:	f1c2 0320 	rsb	r3, r2, #32
 80004be:	fa00 fc03 	lsl.w	ip, r0, r3
 80004c2:	fa20 f002 	lsr.w	r0, r0, r2
 80004c6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ca:	ea40 000e 	orr.w	r0, r0, lr
 80004ce:	fa21 f102 	lsr.w	r1, r1, r2
 80004d2:	4414      	add	r4, r2
 80004d4:	e6bd      	b.n	8000252 <__adddf3+0xe6>
 80004d6:	bf00      	nop

080004d8 <__aeabi_dmul>:
 80004d8:	b570      	push	{r4, r5, r6, lr}
 80004da:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80004de:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80004e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004e6:	bf1d      	ittte	ne
 80004e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004ec:	ea94 0f0c 	teqne	r4, ip
 80004f0:	ea95 0f0c 	teqne	r5, ip
 80004f4:	f000 f8de 	bleq	80006b4 <__aeabi_dmul+0x1dc>
 80004f8:	442c      	add	r4, r5
 80004fa:	ea81 0603 	eor.w	r6, r1, r3
 80004fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000502:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000506:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800050a:	bf18      	it	ne
 800050c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000510:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000514:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000518:	d038      	beq.n	800058c <__aeabi_dmul+0xb4>
 800051a:	fba0 ce02 	umull	ip, lr, r0, r2
 800051e:	f04f 0500 	mov.w	r5, #0
 8000522:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000526:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800052a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800052e:	f04f 0600 	mov.w	r6, #0
 8000532:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000536:	f09c 0f00 	teq	ip, #0
 800053a:	bf18      	it	ne
 800053c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000540:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000544:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000548:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800054c:	d204      	bcs.n	8000558 <__aeabi_dmul+0x80>
 800054e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000552:	416d      	adcs	r5, r5
 8000554:	eb46 0606 	adc.w	r6, r6, r6
 8000558:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800055c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000560:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000564:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000568:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800056c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000570:	bf88      	it	hi
 8000572:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000576:	d81e      	bhi.n	80005b6 <__aeabi_dmul+0xde>
 8000578:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800057c:	bf08      	it	eq
 800057e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000582:	f150 0000 	adcs.w	r0, r0, #0
 8000586:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800058a:	bd70      	pop	{r4, r5, r6, pc}
 800058c:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000590:	ea46 0101 	orr.w	r1, r6, r1
 8000594:	ea40 0002 	orr.w	r0, r0, r2
 8000598:	ea81 0103 	eor.w	r1, r1, r3
 800059c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005a0:	bfc2      	ittt	gt
 80005a2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005aa:	bd70      	popgt	{r4, r5, r6, pc}
 80005ac:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80005b0:	f04f 0e00 	mov.w	lr, #0
 80005b4:	3c01      	subs	r4, #1
 80005b6:	f300 80ab 	bgt.w	8000710 <__aeabi_dmul+0x238>
 80005ba:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80005be:	bfde      	ittt	le
 80005c0:	2000      	movle	r0, #0
 80005c2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80005c6:	bd70      	pople	{r4, r5, r6, pc}
 80005c8:	f1c4 0400 	rsb	r4, r4, #0
 80005cc:	3c20      	subs	r4, #32
 80005ce:	da35      	bge.n	800063c <__aeabi_dmul+0x164>
 80005d0:	340c      	adds	r4, #12
 80005d2:	dc1b      	bgt.n	800060c <__aeabi_dmul+0x134>
 80005d4:	f104 0414 	add.w	r4, r4, #20
 80005d8:	f1c4 0520 	rsb	r5, r4, #32
 80005dc:	fa00 f305 	lsl.w	r3, r0, r5
 80005e0:	fa20 f004 	lsr.w	r0, r0, r4
 80005e4:	fa01 f205 	lsl.w	r2, r1, r5
 80005e8:	ea40 0002 	orr.w	r0, r0, r2
 80005ec:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 80005f0:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80005f8:	fa21 f604 	lsr.w	r6, r1, r4
 80005fc:	eb42 0106 	adc.w	r1, r2, r6
 8000600:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000604:	bf08      	it	eq
 8000606:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800060a:	bd70      	pop	{r4, r5, r6, pc}
 800060c:	f1c4 040c 	rsb	r4, r4, #12
 8000610:	f1c4 0520 	rsb	r5, r4, #32
 8000614:	fa00 f304 	lsl.w	r3, r0, r4
 8000618:	fa20 f005 	lsr.w	r0, r0, r5
 800061c:	fa01 f204 	lsl.w	r2, r1, r4
 8000620:	ea40 0002 	orr.w	r0, r0, r2
 8000624:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000628:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800062c:	f141 0100 	adc.w	r1, r1, #0
 8000630:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000634:	bf08      	it	eq
 8000636:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800063a:	bd70      	pop	{r4, r5, r6, pc}
 800063c:	f1c4 0520 	rsb	r5, r4, #32
 8000640:	fa00 f205 	lsl.w	r2, r0, r5
 8000644:	ea4e 0e02 	orr.w	lr, lr, r2
 8000648:	fa20 f304 	lsr.w	r3, r0, r4
 800064c:	fa01 f205 	lsl.w	r2, r1, r5
 8000650:	ea43 0302 	orr.w	r3, r3, r2
 8000654:	fa21 f004 	lsr.w	r0, r1, r4
 8000658:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800065c:	fa21 f204 	lsr.w	r2, r1, r4
 8000660:	ea20 0002 	bic.w	r0, r0, r2
 8000664:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000668:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800066c:	bf08      	it	eq
 800066e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000672:	bd70      	pop	{r4, r5, r6, pc}
 8000674:	f094 0f00 	teq	r4, #0
 8000678:	d10f      	bne.n	800069a <__aeabi_dmul+0x1c2>
 800067a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800067e:	0040      	lsls	r0, r0, #1
 8000680:	eb41 0101 	adc.w	r1, r1, r1
 8000684:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000688:	bf08      	it	eq
 800068a:	3c01      	subeq	r4, #1
 800068c:	d0f7      	beq.n	800067e <__aeabi_dmul+0x1a6>
 800068e:	ea41 0106 	orr.w	r1, r1, r6
 8000692:	f095 0f00 	teq	r5, #0
 8000696:	bf18      	it	ne
 8000698:	4770      	bxne	lr
 800069a:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 800069e:	0052      	lsls	r2, r2, #1
 80006a0:	eb43 0303 	adc.w	r3, r3, r3
 80006a4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80006a8:	bf08      	it	eq
 80006aa:	3d01      	subeq	r5, #1
 80006ac:	d0f7      	beq.n	800069e <__aeabi_dmul+0x1c6>
 80006ae:	ea43 0306 	orr.w	r3, r3, r6
 80006b2:	4770      	bx	lr
 80006b4:	ea94 0f0c 	teq	r4, ip
 80006b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006bc:	bf18      	it	ne
 80006be:	ea95 0f0c 	teqne	r5, ip
 80006c2:	d00c      	beq.n	80006de <__aeabi_dmul+0x206>
 80006c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006c8:	bf18      	it	ne
 80006ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ce:	d1d1      	bne.n	8000674 <__aeabi_dmul+0x19c>
 80006d0:	ea81 0103 	eor.w	r1, r1, r3
 80006d4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80006d8:	f04f 0000 	mov.w	r0, #0
 80006dc:	bd70      	pop	{r4, r5, r6, pc}
 80006de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006e2:	bf06      	itte	eq
 80006e4:	4610      	moveq	r0, r2
 80006e6:	4619      	moveq	r1, r3
 80006e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ec:	d019      	beq.n	8000722 <__aeabi_dmul+0x24a>
 80006ee:	ea94 0f0c 	teq	r4, ip
 80006f2:	d102      	bne.n	80006fa <__aeabi_dmul+0x222>
 80006f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80006f8:	d113      	bne.n	8000722 <__aeabi_dmul+0x24a>
 80006fa:	ea95 0f0c 	teq	r5, ip
 80006fe:	d105      	bne.n	800070c <__aeabi_dmul+0x234>
 8000700:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000704:	bf1c      	itt	ne
 8000706:	4610      	movne	r0, r2
 8000708:	4619      	movne	r1, r3
 800070a:	d10a      	bne.n	8000722 <__aeabi_dmul+0x24a>
 800070c:	ea81 0103 	eor.w	r1, r1, r3
 8000710:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000714:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000718:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800071c:	f04f 0000 	mov.w	r0, #0
 8000720:	bd70      	pop	{r4, r5, r6, pc}
 8000722:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000726:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800072a:	bd70      	pop	{r4, r5, r6, pc}

0800072c <__aeabi_ddiv>:
 800072c:	b570      	push	{r4, r5, r6, lr}
 800072e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000732:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000736:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800073a:	bf1d      	ittte	ne
 800073c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000740:	ea94 0f0c 	teqne	r4, ip
 8000744:	ea95 0f0c 	teqne	r5, ip
 8000748:	f000 f8a7 	bleq	800089a <__aeabi_ddiv+0x16e>
 800074c:	eba4 0405 	sub.w	r4, r4, r5
 8000750:	ea81 0e03 	eor.w	lr, r1, r3
 8000754:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000758:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800075c:	f000 8088 	beq.w	8000870 <__aeabi_ddiv+0x144>
 8000760:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000764:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000768:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800076c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000770:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000774:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000778:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800077c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000780:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 8000784:	429d      	cmp	r5, r3
 8000786:	bf08      	it	eq
 8000788:	4296      	cmpeq	r6, r2
 800078a:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 800078e:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 8000792:	d202      	bcs.n	800079a <__aeabi_ddiv+0x6e>
 8000794:	085b      	lsrs	r3, r3, #1
 8000796:	ea4f 0232 	mov.w	r2, r2, rrx
 800079a:	1ab6      	subs	r6, r6, r2
 800079c:	eb65 0503 	sbc.w	r5, r5, r3
 80007a0:	085b      	lsrs	r3, r3, #1
 80007a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007a6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80007aa:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80007ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80007b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007b6:	bf22      	ittt	cs
 80007b8:	1ab6      	subcs	r6, r6, r2
 80007ba:	4675      	movcs	r5, lr
 80007bc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007c0:	085b      	lsrs	r3, r3, #1
 80007c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ce:	bf22      	ittt	cs
 80007d0:	1ab6      	subcs	r6, r6, r2
 80007d2:	4675      	movcs	r5, lr
 80007d4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007d8:	085b      	lsrs	r3, r3, #1
 80007da:	ea4f 0232 	mov.w	r2, r2, rrx
 80007de:	ebb6 0e02 	subs.w	lr, r6, r2
 80007e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007e6:	bf22      	ittt	cs
 80007e8:	1ab6      	subcs	r6, r6, r2
 80007ea:	4675      	movcs	r5, lr
 80007ec:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80007f0:	085b      	lsrs	r3, r3, #1
 80007f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007fe:	bf22      	ittt	cs
 8000800:	1ab6      	subcs	r6, r6, r2
 8000802:	4675      	movcs	r5, lr
 8000804:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000808:	ea55 0e06 	orrs.w	lr, r5, r6
 800080c:	d018      	beq.n	8000840 <__aeabi_ddiv+0x114>
 800080e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000812:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000816:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800081a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800081e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000822:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000826:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800082a:	d1c0      	bne.n	80007ae <__aeabi_ddiv+0x82>
 800082c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000830:	d10b      	bne.n	800084a <__aeabi_ddiv+0x11e>
 8000832:	ea41 0100 	orr.w	r1, r1, r0
 8000836:	f04f 0000 	mov.w	r0, #0
 800083a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800083e:	e7b6      	b.n	80007ae <__aeabi_ddiv+0x82>
 8000840:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000844:	bf04      	itt	eq
 8000846:	4301      	orreq	r1, r0
 8000848:	2000      	moveq	r0, #0
 800084a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800084e:	bf88      	it	hi
 8000850:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000854:	f63f aeaf 	bhi.w	80005b6 <__aeabi_dmul+0xde>
 8000858:	ebb5 0c03 	subs.w	ip, r5, r3
 800085c:	bf04      	itt	eq
 800085e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000862:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000866:	f150 0000 	adcs.w	r0, r0, #0
 800086a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800086e:	bd70      	pop	{r4, r5, r6, pc}
 8000870:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000874:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000878:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800087c:	bfc2      	ittt	gt
 800087e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000882:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000886:	bd70      	popgt	{r4, r5, r6, pc}
 8000888:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 800088c:	f04f 0e00 	mov.w	lr, #0
 8000890:	3c01      	subs	r4, #1
 8000892:	e690      	b.n	80005b6 <__aeabi_dmul+0xde>
 8000894:	ea45 0e06 	orr.w	lr, r5, r6
 8000898:	e68d      	b.n	80005b6 <__aeabi_dmul+0xde>
 800089a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800089e:	ea94 0f0c 	teq	r4, ip
 80008a2:	bf08      	it	eq
 80008a4:	ea95 0f0c 	teqeq	r5, ip
 80008a8:	f43f af3b 	beq.w	8000722 <__aeabi_dmul+0x24a>
 80008ac:	ea94 0f0c 	teq	r4, ip
 80008b0:	d10a      	bne.n	80008c8 <__aeabi_ddiv+0x19c>
 80008b2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008b6:	f47f af34 	bne.w	8000722 <__aeabi_dmul+0x24a>
 80008ba:	ea95 0f0c 	teq	r5, ip
 80008be:	f47f af25 	bne.w	800070c <__aeabi_dmul+0x234>
 80008c2:	4610      	mov	r0, r2
 80008c4:	4619      	mov	r1, r3
 80008c6:	e72c      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008c8:	ea95 0f0c 	teq	r5, ip
 80008cc:	d106      	bne.n	80008dc <__aeabi_ddiv+0x1b0>
 80008ce:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008d2:	f43f aefd 	beq.w	80006d0 <__aeabi_dmul+0x1f8>
 80008d6:	4610      	mov	r0, r2
 80008d8:	4619      	mov	r1, r3
 80008da:	e722      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008dc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008e0:	bf18      	it	ne
 80008e2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008e6:	f47f aec5 	bne.w	8000674 <__aeabi_dmul+0x19c>
 80008ea:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008ee:	f47f af0d 	bne.w	800070c <__aeabi_dmul+0x234>
 80008f2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80008f6:	f47f aeeb 	bne.w	80006d0 <__aeabi_dmul+0x1f8>
 80008fa:	e712      	b.n	8000722 <__aeabi_dmul+0x24a>

080008fc <__gedf2>:
 80008fc:	f04f 3cff 	mov.w	ip, #4294967295
 8000900:	e006      	b.n	8000910 <__cmpdf2+0x4>
 8000902:	bf00      	nop

08000904 <__ledf2>:
 8000904:	f04f 0c01 	mov.w	ip, #1
 8000908:	e002      	b.n	8000910 <__cmpdf2+0x4>
 800090a:	bf00      	nop

0800090c <__cmpdf2>:
 800090c:	f04f 0c01 	mov.w	ip, #1
 8000910:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000914:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000918:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800091c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000920:	bf18      	it	ne
 8000922:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000926:	d01b      	beq.n	8000960 <__cmpdf2+0x54>
 8000928:	b001      	add	sp, #4
 800092a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800092e:	bf0c      	ite	eq
 8000930:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000934:	ea91 0f03 	teqne	r1, r3
 8000938:	bf02      	ittt	eq
 800093a:	ea90 0f02 	teqeq	r0, r2
 800093e:	2000      	moveq	r0, #0
 8000940:	4770      	bxeq	lr
 8000942:	f110 0f00 	cmn.w	r0, #0
 8000946:	ea91 0f03 	teq	r1, r3
 800094a:	bf58      	it	pl
 800094c:	4299      	cmppl	r1, r3
 800094e:	bf08      	it	eq
 8000950:	4290      	cmpeq	r0, r2
 8000952:	bf2c      	ite	cs
 8000954:	17d8      	asrcs	r0, r3, #31
 8000956:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800095a:	f040 0001 	orr.w	r0, r0, #1
 800095e:	4770      	bx	lr
 8000960:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000964:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000968:	d102      	bne.n	8000970 <__cmpdf2+0x64>
 800096a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800096e:	d107      	bne.n	8000980 <__cmpdf2+0x74>
 8000970:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000974:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000978:	d1d6      	bne.n	8000928 <__cmpdf2+0x1c>
 800097a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800097e:	d0d3      	beq.n	8000928 <__cmpdf2+0x1c>
 8000980:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000984:	4770      	bx	lr
 8000986:	bf00      	nop

08000988 <__aeabi_cdrcmple>:
 8000988:	4684      	mov	ip, r0
 800098a:	4610      	mov	r0, r2
 800098c:	4662      	mov	r2, ip
 800098e:	468c      	mov	ip, r1
 8000990:	4619      	mov	r1, r3
 8000992:	4663      	mov	r3, ip
 8000994:	e000      	b.n	8000998 <__aeabi_cdcmpeq>
 8000996:	bf00      	nop

08000998 <__aeabi_cdcmpeq>:
 8000998:	b501      	push	{r0, lr}
 800099a:	f7ff ffb7 	bl	800090c <__cmpdf2>
 800099e:	2800      	cmp	r0, #0
 80009a0:	bf48      	it	mi
 80009a2:	f110 0f00 	cmnmi.w	r0, #0
 80009a6:	bd01      	pop	{r0, pc}

080009a8 <__aeabi_dcmpeq>:
 80009a8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009ac:	f7ff fff4 	bl	8000998 <__aeabi_cdcmpeq>
 80009b0:	bf0c      	ite	eq
 80009b2:	2001      	moveq	r0, #1
 80009b4:	2000      	movne	r0, #0
 80009b6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ba:	bf00      	nop

080009bc <__aeabi_dcmplt>:
 80009bc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009c0:	f7ff ffea 	bl	8000998 <__aeabi_cdcmpeq>
 80009c4:	bf34      	ite	cc
 80009c6:	2001      	movcc	r0, #1
 80009c8:	2000      	movcs	r0, #0
 80009ca:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ce:	bf00      	nop

080009d0 <__aeabi_dcmple>:
 80009d0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009d4:	f7ff ffe0 	bl	8000998 <__aeabi_cdcmpeq>
 80009d8:	bf94      	ite	ls
 80009da:	2001      	movls	r0, #1
 80009dc:	2000      	movhi	r0, #0
 80009de:	f85d fb08 	ldr.w	pc, [sp], #8
 80009e2:	bf00      	nop

080009e4 <__aeabi_dcmpge>:
 80009e4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e8:	f7ff ffce 	bl	8000988 <__aeabi_cdrcmple>
 80009ec:	bf94      	ite	ls
 80009ee:	2001      	movls	r0, #1
 80009f0:	2000      	movhi	r0, #0
 80009f2:	f85d fb08 	ldr.w	pc, [sp], #8
 80009f6:	bf00      	nop

080009f8 <__aeabi_dcmpgt>:
 80009f8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009fc:	f7ff ffc4 	bl	8000988 <__aeabi_cdrcmple>
 8000a00:	bf34      	ite	cc
 8000a02:	2001      	movcc	r0, #1
 8000a04:	2000      	movcs	r0, #0
 8000a06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a0a:	bf00      	nop

08000a0c <__aeabi_dcmpun>:
 8000a0c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a14:	d102      	bne.n	8000a1c <__aeabi_dcmpun+0x10>
 8000a16:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a1a:	d10a      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a24:	d102      	bne.n	8000a2c <__aeabi_dcmpun+0x20>
 8000a26:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a2a:	d102      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a2c:	f04f 0000 	mov.w	r0, #0
 8000a30:	4770      	bx	lr
 8000a32:	f04f 0001 	mov.w	r0, #1
 8000a36:	4770      	bx	lr

08000a38 <__aeabi_d2iz>:
 8000a38:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a3c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000a40:	d215      	bcs.n	8000a6e <__aeabi_d2iz+0x36>
 8000a42:	d511      	bpl.n	8000a68 <__aeabi_d2iz+0x30>
 8000a44:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000a48:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a4c:	d912      	bls.n	8000a74 <__aeabi_d2iz+0x3c>
 8000a4e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a52:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000a56:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a5a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000a5e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a62:	bf18      	it	ne
 8000a64:	4240      	negne	r0, r0
 8000a66:	4770      	bx	lr
 8000a68:	f04f 0000 	mov.w	r0, #0
 8000a6c:	4770      	bx	lr
 8000a6e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a72:	d105      	bne.n	8000a80 <__aeabi_d2iz+0x48>
 8000a74:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000a78:	bf08      	it	eq
 8000a7a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000a7e:	4770      	bx	lr
 8000a80:	f04f 0000 	mov.w	r0, #0
 8000a84:	4770      	bx	lr
 8000a86:	bf00      	nop

08000a88 <__aeabi_d2f>:
 8000a88:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a8c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000a90:	bf24      	itt	cs
 8000a92:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000a96:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000a9a:	d90d      	bls.n	8000ab8 <__aeabi_d2f+0x30>
 8000a9c:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000aa0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000aa4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000aa8:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000aac:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000ab0:	bf08      	it	eq
 8000ab2:	f020 0001 	biceq.w	r0, r0, #1
 8000ab6:	4770      	bx	lr
 8000ab8:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000abc:	d121      	bne.n	8000b02 <__aeabi_d2f+0x7a>
 8000abe:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000ac2:	bfbc      	itt	lt
 8000ac4:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000ac8:	4770      	bxlt	lr
 8000aca:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000ace:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000ad2:	f1c2 0218 	rsb	r2, r2, #24
 8000ad6:	f1c2 0c20 	rsb	ip, r2, #32
 8000ada:	fa10 f30c 	lsls.w	r3, r0, ip
 8000ade:	fa20 f002 	lsr.w	r0, r0, r2
 8000ae2:	bf18      	it	ne
 8000ae4:	f040 0001 	orrne.w	r0, r0, #1
 8000ae8:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000aec:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000af0:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000af4:	ea40 000c 	orr.w	r0, r0, ip
 8000af8:	fa23 f302 	lsr.w	r3, r3, r2
 8000afc:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b00:	e7cc      	b.n	8000a9c <__aeabi_d2f+0x14>
 8000b02:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b06:	d107      	bne.n	8000b18 <__aeabi_d2f+0x90>
 8000b08:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b0c:	bf1e      	ittt	ne
 8000b0e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000b12:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000b16:	4770      	bxne	lr
 8000b18:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000b1c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000b20:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000b24:	4770      	bx	lr
 8000b26:	bf00      	nop

08000b28 <__aeabi_frsub>:
 8000b28:	f080 4000 	eor.w	r0, r0, #2147483648	@ 0x80000000
 8000b2c:	e002      	b.n	8000b34 <__addsf3>
 8000b2e:	bf00      	nop

08000b30 <__aeabi_fsub>:
 8000b30:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000

08000b34 <__addsf3>:
 8000b34:	0042      	lsls	r2, r0, #1
 8000b36:	bf1f      	itttt	ne
 8000b38:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000b3c:	ea92 0f03 	teqne	r2, r3
 8000b40:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000b44:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000b48:	d06a      	beq.n	8000c20 <__addsf3+0xec>
 8000b4a:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000b4e:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000b52:	bfc1      	itttt	gt
 8000b54:	18d2      	addgt	r2, r2, r3
 8000b56:	4041      	eorgt	r1, r0
 8000b58:	4048      	eorgt	r0, r1
 8000b5a:	4041      	eorgt	r1, r0
 8000b5c:	bfb8      	it	lt
 8000b5e:	425b      	neglt	r3, r3
 8000b60:	2b19      	cmp	r3, #25
 8000b62:	bf88      	it	hi
 8000b64:	4770      	bxhi	lr
 8000b66:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 8000b6a:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000b6e:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
 8000b72:	bf18      	it	ne
 8000b74:	4240      	negne	r0, r0
 8000b76:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b7a:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8000b7e:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8000b82:	bf18      	it	ne
 8000b84:	4249      	negne	r1, r1
 8000b86:	ea92 0f03 	teq	r2, r3
 8000b8a:	d03f      	beq.n	8000c0c <__addsf3+0xd8>
 8000b8c:	f1a2 0201 	sub.w	r2, r2, #1
 8000b90:	fa41 fc03 	asr.w	ip, r1, r3
 8000b94:	eb10 000c 	adds.w	r0, r0, ip
 8000b98:	f1c3 0320 	rsb	r3, r3, #32
 8000b9c:	fa01 f103 	lsl.w	r1, r1, r3
 8000ba0:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000ba4:	d502      	bpl.n	8000bac <__addsf3+0x78>
 8000ba6:	4249      	negs	r1, r1
 8000ba8:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000bac:	f5b0 0f00 	cmp.w	r0, #8388608	@ 0x800000
 8000bb0:	d313      	bcc.n	8000bda <__addsf3+0xa6>
 8000bb2:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8000bb6:	d306      	bcc.n	8000bc6 <__addsf3+0x92>
 8000bb8:	0840      	lsrs	r0, r0, #1
 8000bba:	ea4f 0131 	mov.w	r1, r1, rrx
 8000bbe:	f102 0201 	add.w	r2, r2, #1
 8000bc2:	2afe      	cmp	r2, #254	@ 0xfe
 8000bc4:	d251      	bcs.n	8000c6a <__addsf3+0x136>
 8000bc6:	f1b1 4f00 	cmp.w	r1, #2147483648	@ 0x80000000
 8000bca:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000bce:	bf08      	it	eq
 8000bd0:	f020 0001 	biceq.w	r0, r0, #1
 8000bd4:	ea40 0003 	orr.w	r0, r0, r3
 8000bd8:	4770      	bx	lr
 8000bda:	0049      	lsls	r1, r1, #1
 8000bdc:	eb40 0000 	adc.w	r0, r0, r0
 8000be0:	3a01      	subs	r2, #1
 8000be2:	bf28      	it	cs
 8000be4:	f5b0 0f00 	cmpcs.w	r0, #8388608	@ 0x800000
 8000be8:	d2ed      	bcs.n	8000bc6 <__addsf3+0x92>
 8000bea:	fab0 fc80 	clz	ip, r0
 8000bee:	f1ac 0c08 	sub.w	ip, ip, #8
 8000bf2:	ebb2 020c 	subs.w	r2, r2, ip
 8000bf6:	fa00 f00c 	lsl.w	r0, r0, ip
 8000bfa:	bfaa      	itet	ge
 8000bfc:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000c00:	4252      	neglt	r2, r2
 8000c02:	4318      	orrge	r0, r3
 8000c04:	bfbc      	itt	lt
 8000c06:	40d0      	lsrlt	r0, r2
 8000c08:	4318      	orrlt	r0, r3
 8000c0a:	4770      	bx	lr
 8000c0c:	f092 0f00 	teq	r2, #0
 8000c10:	f481 0100 	eor.w	r1, r1, #8388608	@ 0x800000
 8000c14:	bf06      	itte	eq
 8000c16:	f480 0000 	eoreq.w	r0, r0, #8388608	@ 0x800000
 8000c1a:	3201      	addeq	r2, #1
 8000c1c:	3b01      	subne	r3, #1
 8000c1e:	e7b5      	b.n	8000b8c <__addsf3+0x58>
 8000c20:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000c24:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000c28:	bf18      	it	ne
 8000c2a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000c2e:	d021      	beq.n	8000c74 <__addsf3+0x140>
 8000c30:	ea92 0f03 	teq	r2, r3
 8000c34:	d004      	beq.n	8000c40 <__addsf3+0x10c>
 8000c36:	f092 0f00 	teq	r2, #0
 8000c3a:	bf08      	it	eq
 8000c3c:	4608      	moveq	r0, r1
 8000c3e:	4770      	bx	lr
 8000c40:	ea90 0f01 	teq	r0, r1
 8000c44:	bf1c      	itt	ne
 8000c46:	2000      	movne	r0, #0
 8000c48:	4770      	bxne	lr
 8000c4a:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8000c4e:	d104      	bne.n	8000c5a <__addsf3+0x126>
 8000c50:	0040      	lsls	r0, r0, #1
 8000c52:	bf28      	it	cs
 8000c54:	f040 4000 	orrcs.w	r0, r0, #2147483648	@ 0x80000000
 8000c58:	4770      	bx	lr
 8000c5a:	f112 7200 	adds.w	r2, r2, #33554432	@ 0x2000000
 8000c5e:	bf3c      	itt	cc
 8000c60:	f500 0000 	addcc.w	r0, r0, #8388608	@ 0x800000
 8000c64:	4770      	bxcc	lr
 8000c66:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000c6a:	f043 40fe 	orr.w	r0, r3, #2130706432	@ 0x7f000000
 8000c6e:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c72:	4770      	bx	lr
 8000c74:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000c78:	bf16      	itet	ne
 8000c7a:	4608      	movne	r0, r1
 8000c7c:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000c80:	4601      	movne	r1, r0
 8000c82:	0242      	lsls	r2, r0, #9
 8000c84:	bf06      	itte	eq
 8000c86:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000c8a:	ea90 0f01 	teqeq	r0, r1
 8000c8e:	f440 0080 	orrne.w	r0, r0, #4194304	@ 0x400000
 8000c92:	4770      	bx	lr

08000c94 <__aeabi_ui2f>:
 8000c94:	f04f 0300 	mov.w	r3, #0
 8000c98:	e004      	b.n	8000ca4 <__aeabi_i2f+0x8>
 8000c9a:	bf00      	nop

08000c9c <__aeabi_i2f>:
 8000c9c:	f010 4300 	ands.w	r3, r0, #2147483648	@ 0x80000000
 8000ca0:	bf48      	it	mi
 8000ca2:	4240      	negmi	r0, r0
 8000ca4:	ea5f 0c00 	movs.w	ip, r0
 8000ca8:	bf08      	it	eq
 8000caa:	4770      	bxeq	lr
 8000cac:	f043 4396 	orr.w	r3, r3, #1258291200	@ 0x4b000000
 8000cb0:	4601      	mov	r1, r0
 8000cb2:	f04f 0000 	mov.w	r0, #0
 8000cb6:	e01c      	b.n	8000cf2 <__aeabi_l2f+0x2a>

08000cb8 <__aeabi_ul2f>:
 8000cb8:	ea50 0201 	orrs.w	r2, r0, r1
 8000cbc:	bf08      	it	eq
 8000cbe:	4770      	bxeq	lr
 8000cc0:	f04f 0300 	mov.w	r3, #0
 8000cc4:	e00a      	b.n	8000cdc <__aeabi_l2f+0x14>
 8000cc6:	bf00      	nop

08000cc8 <__aeabi_l2f>:
 8000cc8:	ea50 0201 	orrs.w	r2, r0, r1
 8000ccc:	bf08      	it	eq
 8000cce:	4770      	bxeq	lr
 8000cd0:	f011 4300 	ands.w	r3, r1, #2147483648	@ 0x80000000
 8000cd4:	d502      	bpl.n	8000cdc <__aeabi_l2f+0x14>
 8000cd6:	4240      	negs	r0, r0
 8000cd8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cdc:	ea5f 0c01 	movs.w	ip, r1
 8000ce0:	bf02      	ittt	eq
 8000ce2:	4684      	moveq	ip, r0
 8000ce4:	4601      	moveq	r1, r0
 8000ce6:	2000      	moveq	r0, #0
 8000ce8:	f043 43b6 	orr.w	r3, r3, #1526726656	@ 0x5b000000
 8000cec:	bf08      	it	eq
 8000cee:	f1a3 5380 	subeq.w	r3, r3, #268435456	@ 0x10000000
 8000cf2:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 8000cf6:	fabc f28c 	clz	r2, ip
 8000cfa:	3a08      	subs	r2, #8
 8000cfc:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000d00:	db10      	blt.n	8000d24 <__aeabi_l2f+0x5c>
 8000d02:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d06:	4463      	add	r3, ip
 8000d08:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d0c:	f1c2 0220 	rsb	r2, r2, #32
 8000d10:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000d14:	fa20 f202 	lsr.w	r2, r0, r2
 8000d18:	eb43 0002 	adc.w	r0, r3, r2
 8000d1c:	bf08      	it	eq
 8000d1e:	f020 0001 	biceq.w	r0, r0, #1
 8000d22:	4770      	bx	lr
 8000d24:	f102 0220 	add.w	r2, r2, #32
 8000d28:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d2c:	f1c2 0220 	rsb	r2, r2, #32
 8000d30:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000d34:	fa21 f202 	lsr.w	r2, r1, r2
 8000d38:	eb43 0002 	adc.w	r0, r3, r2
 8000d3c:	bf08      	it	eq
 8000d3e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000d42:	4770      	bx	lr

08000d44 <__aeabi_fmul>:
 8000d44:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000d48:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000d4c:	bf1e      	ittt	ne
 8000d4e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000d52:	ea92 0f0c 	teqne	r2, ip
 8000d56:	ea93 0f0c 	teqne	r3, ip
 8000d5a:	d06f      	beq.n	8000e3c <__aeabi_fmul+0xf8>
 8000d5c:	441a      	add	r2, r3
 8000d5e:	ea80 0c01 	eor.w	ip, r0, r1
 8000d62:	0240      	lsls	r0, r0, #9
 8000d64:	bf18      	it	ne
 8000d66:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000d6a:	d01e      	beq.n	8000daa <__aeabi_fmul+0x66>
 8000d6c:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8000d70:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000d74:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000d78:	fba0 3101 	umull	r3, r1, r0, r1
 8000d7c:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000d80:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
 8000d84:	bf3e      	ittt	cc
 8000d86:	0049      	lslcc	r1, r1, #1
 8000d88:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000d8c:	005b      	lslcc	r3, r3, #1
 8000d8e:	ea40 0001 	orr.w	r0, r0, r1
 8000d92:	f162 027f 	sbc.w	r2, r2, #127	@ 0x7f
 8000d96:	2afd      	cmp	r2, #253	@ 0xfd
 8000d98:	d81d      	bhi.n	8000dd6 <__aeabi_fmul+0x92>
 8000d9a:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8000d9e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000da2:	bf08      	it	eq
 8000da4:	f020 0001 	biceq.w	r0, r0, #1
 8000da8:	4770      	bx	lr
 8000daa:	f090 0f00 	teq	r0, #0
 8000dae:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000db2:	bf08      	it	eq
 8000db4:	0249      	lsleq	r1, r1, #9
 8000db6:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000dba:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000dbe:	3a7f      	subs	r2, #127	@ 0x7f
 8000dc0:	bfc2      	ittt	gt
 8000dc2:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000dc6:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000dca:	4770      	bxgt	lr
 8000dcc:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000dd0:	f04f 0300 	mov.w	r3, #0
 8000dd4:	3a01      	subs	r2, #1
 8000dd6:	dc5d      	bgt.n	8000e94 <__aeabi_fmul+0x150>
 8000dd8:	f112 0f19 	cmn.w	r2, #25
 8000ddc:	bfdc      	itt	le
 8000dde:	f000 4000 	andle.w	r0, r0, #2147483648	@ 0x80000000
 8000de2:	4770      	bxle	lr
 8000de4:	f1c2 0200 	rsb	r2, r2, #0
 8000de8:	0041      	lsls	r1, r0, #1
 8000dea:	fa21 f102 	lsr.w	r1, r1, r2
 8000dee:	f1c2 0220 	rsb	r2, r2, #32
 8000df2:	fa00 fc02 	lsl.w	ip, r0, r2
 8000df6:	ea5f 0031 	movs.w	r0, r1, rrx
 8000dfa:	f140 0000 	adc.w	r0, r0, #0
 8000dfe:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000e02:	bf08      	it	eq
 8000e04:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e08:	4770      	bx	lr
 8000e0a:	f092 0f00 	teq	r2, #0
 8000e0e:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000e12:	bf02      	ittt	eq
 8000e14:	0040      	lsleq	r0, r0, #1
 8000e16:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000e1a:	3a01      	subeq	r2, #1
 8000e1c:	d0f9      	beq.n	8000e12 <__aeabi_fmul+0xce>
 8000e1e:	ea40 000c 	orr.w	r0, r0, ip
 8000e22:	f093 0f00 	teq	r3, #0
 8000e26:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000e2a:	bf02      	ittt	eq
 8000e2c:	0049      	lsleq	r1, r1, #1
 8000e2e:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000e32:	3b01      	subeq	r3, #1
 8000e34:	d0f9      	beq.n	8000e2a <__aeabi_fmul+0xe6>
 8000e36:	ea41 010c 	orr.w	r1, r1, ip
 8000e3a:	e78f      	b.n	8000d5c <__aeabi_fmul+0x18>
 8000e3c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000e40:	ea92 0f0c 	teq	r2, ip
 8000e44:	bf18      	it	ne
 8000e46:	ea93 0f0c 	teqne	r3, ip
 8000e4a:	d00a      	beq.n	8000e62 <__aeabi_fmul+0x11e>
 8000e4c:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8000e50:	bf18      	it	ne
 8000e52:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 8000e56:	d1d8      	bne.n	8000e0a <__aeabi_fmul+0xc6>
 8000e58:	ea80 0001 	eor.w	r0, r0, r1
 8000e5c:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000e60:	4770      	bx	lr
 8000e62:	f090 0f00 	teq	r0, #0
 8000e66:	bf17      	itett	ne
 8000e68:	f090 4f00 	teqne	r0, #2147483648	@ 0x80000000
 8000e6c:	4608      	moveq	r0, r1
 8000e6e:	f091 0f00 	teqne	r1, #0
 8000e72:	f091 4f00 	teqne	r1, #2147483648	@ 0x80000000
 8000e76:	d014      	beq.n	8000ea2 <__aeabi_fmul+0x15e>
 8000e78:	ea92 0f0c 	teq	r2, ip
 8000e7c:	d101      	bne.n	8000e82 <__aeabi_fmul+0x13e>
 8000e7e:	0242      	lsls	r2, r0, #9
 8000e80:	d10f      	bne.n	8000ea2 <__aeabi_fmul+0x15e>
 8000e82:	ea93 0f0c 	teq	r3, ip
 8000e86:	d103      	bne.n	8000e90 <__aeabi_fmul+0x14c>
 8000e88:	024b      	lsls	r3, r1, #9
 8000e8a:	bf18      	it	ne
 8000e8c:	4608      	movne	r0, r1
 8000e8e:	d108      	bne.n	8000ea2 <__aeabi_fmul+0x15e>
 8000e90:	ea80 0001 	eor.w	r0, r0, r1
 8000e94:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000e98:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000e9c:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000ea0:	4770      	bx	lr
 8000ea2:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000ea6:	f440 0040 	orr.w	r0, r0, #12582912	@ 0xc00000
 8000eaa:	4770      	bx	lr

08000eac <__aeabi_fdiv>:
 8000eac:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000eb0:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000eb4:	bf1e      	ittt	ne
 8000eb6:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000eba:	ea92 0f0c 	teqne	r2, ip
 8000ebe:	ea93 0f0c 	teqne	r3, ip
 8000ec2:	d069      	beq.n	8000f98 <__aeabi_fdiv+0xec>
 8000ec4:	eba2 0203 	sub.w	r2, r2, r3
 8000ec8:	ea80 0c01 	eor.w	ip, r0, r1
 8000ecc:	0249      	lsls	r1, r1, #9
 8000ece:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000ed2:	d037      	beq.n	8000f44 <__aeabi_fdiv+0x98>
 8000ed4:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
 8000ed8:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000edc:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000ee0:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000ee4:	428b      	cmp	r3, r1
 8000ee6:	bf38      	it	cc
 8000ee8:	005b      	lslcc	r3, r3, #1
 8000eea:	f142 027d 	adc.w	r2, r2, #125	@ 0x7d
 8000eee:	f44f 0c00 	mov.w	ip, #8388608	@ 0x800000
 8000ef2:	428b      	cmp	r3, r1
 8000ef4:	bf24      	itt	cs
 8000ef6:	1a5b      	subcs	r3, r3, r1
 8000ef8:	ea40 000c 	orrcs.w	r0, r0, ip
 8000efc:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000f00:	bf24      	itt	cs
 8000f02:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000f06:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000f0a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000f0e:	bf24      	itt	cs
 8000f10:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000f14:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000f18:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000f1c:	bf24      	itt	cs
 8000f1e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000f22:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000f26:	011b      	lsls	r3, r3, #4
 8000f28:	bf18      	it	ne
 8000f2a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000f2e:	d1e0      	bne.n	8000ef2 <__aeabi_fdiv+0x46>
 8000f30:	2afd      	cmp	r2, #253	@ 0xfd
 8000f32:	f63f af50 	bhi.w	8000dd6 <__aeabi_fmul+0x92>
 8000f36:	428b      	cmp	r3, r1
 8000f38:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000f3c:	bf08      	it	eq
 8000f3e:	f020 0001 	biceq.w	r0, r0, #1
 8000f42:	4770      	bx	lr
 8000f44:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000f48:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000f4c:	327f      	adds	r2, #127	@ 0x7f
 8000f4e:	bfc2      	ittt	gt
 8000f50:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000f54:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000f58:	4770      	bxgt	lr
 8000f5a:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000f5e:	f04f 0300 	mov.w	r3, #0
 8000f62:	3a01      	subs	r2, #1
 8000f64:	e737      	b.n	8000dd6 <__aeabi_fmul+0x92>
 8000f66:	f092 0f00 	teq	r2, #0
 8000f6a:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000f6e:	bf02      	ittt	eq
 8000f70:	0040      	lsleq	r0, r0, #1
 8000f72:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000f76:	3a01      	subeq	r2, #1
 8000f78:	d0f9      	beq.n	8000f6e <__aeabi_fdiv+0xc2>
 8000f7a:	ea40 000c 	orr.w	r0, r0, ip
 8000f7e:	f093 0f00 	teq	r3, #0
 8000f82:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000f86:	bf02      	ittt	eq
 8000f88:	0049      	lsleq	r1, r1, #1
 8000f8a:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000f8e:	3b01      	subeq	r3, #1
 8000f90:	d0f9      	beq.n	8000f86 <__aeabi_fdiv+0xda>
 8000f92:	ea41 010c 	orr.w	r1, r1, ip
 8000f96:	e795      	b.n	8000ec4 <__aeabi_fdiv+0x18>
 8000f98:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000f9c:	ea92 0f0c 	teq	r2, ip
 8000fa0:	d108      	bne.n	8000fb4 <__aeabi_fdiv+0x108>
 8000fa2:	0242      	lsls	r2, r0, #9
 8000fa4:	f47f af7d 	bne.w	8000ea2 <__aeabi_fmul+0x15e>
 8000fa8:	ea93 0f0c 	teq	r3, ip
 8000fac:	f47f af70 	bne.w	8000e90 <__aeabi_fmul+0x14c>
 8000fb0:	4608      	mov	r0, r1
 8000fb2:	e776      	b.n	8000ea2 <__aeabi_fmul+0x15e>
 8000fb4:	ea93 0f0c 	teq	r3, ip
 8000fb8:	d104      	bne.n	8000fc4 <__aeabi_fdiv+0x118>
 8000fba:	024b      	lsls	r3, r1, #9
 8000fbc:	f43f af4c 	beq.w	8000e58 <__aeabi_fmul+0x114>
 8000fc0:	4608      	mov	r0, r1
 8000fc2:	e76e      	b.n	8000ea2 <__aeabi_fmul+0x15e>
 8000fc4:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8000fc8:	bf18      	it	ne
 8000fca:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 8000fce:	d1ca      	bne.n	8000f66 <__aeabi_fdiv+0xba>
 8000fd0:	f030 4200 	bics.w	r2, r0, #2147483648	@ 0x80000000
 8000fd4:	f47f af5c 	bne.w	8000e90 <__aeabi_fmul+0x14c>
 8000fd8:	f031 4300 	bics.w	r3, r1, #2147483648	@ 0x80000000
 8000fdc:	f47f af3c 	bne.w	8000e58 <__aeabi_fmul+0x114>
 8000fe0:	e75f      	b.n	8000ea2 <__aeabi_fmul+0x15e>
 8000fe2:	bf00      	nop

08000fe4 <__aeabi_f2uiz>:
 8000fe4:	0042      	lsls	r2, r0, #1
 8000fe6:	d20e      	bcs.n	8001006 <__aeabi_f2uiz+0x22>
 8000fe8:	f1b2 4ffe 	cmp.w	r2, #2130706432	@ 0x7f000000
 8000fec:	d30b      	bcc.n	8001006 <__aeabi_f2uiz+0x22>
 8000fee:	f04f 039e 	mov.w	r3, #158	@ 0x9e
 8000ff2:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8000ff6:	d409      	bmi.n	800100c <__aeabi_f2uiz+0x28>
 8000ff8:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8000ffc:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8001000:	fa23 f002 	lsr.w	r0, r3, r2
 8001004:	4770      	bx	lr
 8001006:	f04f 0000 	mov.w	r0, #0
 800100a:	4770      	bx	lr
 800100c:	f112 0f61 	cmn.w	r2, #97	@ 0x61
 8001010:	d101      	bne.n	8001016 <__aeabi_f2uiz+0x32>
 8001012:	0242      	lsls	r2, r0, #9
 8001014:	d102      	bne.n	800101c <__aeabi_f2uiz+0x38>
 8001016:	f04f 30ff 	mov.w	r0, #4294967295
 800101a:	4770      	bx	lr
 800101c:	f04f 0000 	mov.w	r0, #0
 8001020:	4770      	bx	lr
 8001022:	bf00      	nop

08001024 <__aeabi_ldivmod>:
 8001024:	b97b      	cbnz	r3, 8001046 <__aeabi_ldivmod+0x22>
 8001026:	b972      	cbnz	r2, 8001046 <__aeabi_ldivmod+0x22>
 8001028:	2900      	cmp	r1, #0
 800102a:	bfbe      	ittt	lt
 800102c:	2000      	movlt	r0, #0
 800102e:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
 8001032:	e006      	blt.n	8001042 <__aeabi_ldivmod+0x1e>
 8001034:	bf08      	it	eq
 8001036:	2800      	cmpeq	r0, #0
 8001038:	bf1c      	itt	ne
 800103a:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
 800103e:	f04f 30ff 	movne.w	r0, #4294967295
 8001042:	f000 b99b 	b.w	800137c <__aeabi_idiv0>
 8001046:	f1ad 0c08 	sub.w	ip, sp, #8
 800104a:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 800104e:	2900      	cmp	r1, #0
 8001050:	db09      	blt.n	8001066 <__aeabi_ldivmod+0x42>
 8001052:	2b00      	cmp	r3, #0
 8001054:	db1a      	blt.n	800108c <__aeabi_ldivmod+0x68>
 8001056:	f000 f835 	bl	80010c4 <__udivmoddi4>
 800105a:	f8dd e004 	ldr.w	lr, [sp, #4]
 800105e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8001062:	b004      	add	sp, #16
 8001064:	4770      	bx	lr
 8001066:	4240      	negs	r0, r0
 8001068:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800106c:	2b00      	cmp	r3, #0
 800106e:	db1b      	blt.n	80010a8 <__aeabi_ldivmod+0x84>
 8001070:	f000 f828 	bl	80010c4 <__udivmoddi4>
 8001074:	f8dd e004 	ldr.w	lr, [sp, #4]
 8001078:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800107c:	b004      	add	sp, #16
 800107e:	4240      	negs	r0, r0
 8001080:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8001084:	4252      	negs	r2, r2
 8001086:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800108a:	4770      	bx	lr
 800108c:	4252      	negs	r2, r2
 800108e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8001092:	f000 f817 	bl	80010c4 <__udivmoddi4>
 8001096:	f8dd e004 	ldr.w	lr, [sp, #4]
 800109a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800109e:	b004      	add	sp, #16
 80010a0:	4240      	negs	r0, r0
 80010a2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80010a6:	4770      	bx	lr
 80010a8:	4252      	negs	r2, r2
 80010aa:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80010ae:	f000 f809 	bl	80010c4 <__udivmoddi4>
 80010b2:	f8dd e004 	ldr.w	lr, [sp, #4]
 80010b6:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80010ba:	b004      	add	sp, #16
 80010bc:	4252      	negs	r2, r2
 80010be:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80010c2:	4770      	bx	lr

080010c4 <__udivmoddi4>:
 80010c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80010c8:	9d08      	ldr	r5, [sp, #32]
 80010ca:	460c      	mov	r4, r1
 80010cc:	2b00      	cmp	r3, #0
 80010ce:	d14e      	bne.n	800116e <__udivmoddi4+0xaa>
 80010d0:	4694      	mov	ip, r2
 80010d2:	458c      	cmp	ip, r1
 80010d4:	4686      	mov	lr, r0
 80010d6:	fab2 f282 	clz	r2, r2
 80010da:	d962      	bls.n	80011a2 <__udivmoddi4+0xde>
 80010dc:	b14a      	cbz	r2, 80010f2 <__udivmoddi4+0x2e>
 80010de:	f1c2 0320 	rsb	r3, r2, #32
 80010e2:	4091      	lsls	r1, r2
 80010e4:	fa20 f303 	lsr.w	r3, r0, r3
 80010e8:	fa0c fc02 	lsl.w	ip, ip, r2
 80010ec:	4319      	orrs	r1, r3
 80010ee:	fa00 fe02 	lsl.w	lr, r0, r2
 80010f2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80010f6:	fbb1 f4f7 	udiv	r4, r1, r7
 80010fa:	fb07 1114 	mls	r1, r7, r4, r1
 80010fe:	fa1f f68c 	uxth.w	r6, ip
 8001102:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8001106:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800110a:	fb04 f106 	mul.w	r1, r4, r6
 800110e:	4299      	cmp	r1, r3
 8001110:	d90a      	bls.n	8001128 <__udivmoddi4+0x64>
 8001112:	eb1c 0303 	adds.w	r3, ip, r3
 8001116:	f104 30ff 	add.w	r0, r4, #4294967295
 800111a:	f080 8110 	bcs.w	800133e <__udivmoddi4+0x27a>
 800111e:	4299      	cmp	r1, r3
 8001120:	f240 810d 	bls.w	800133e <__udivmoddi4+0x27a>
 8001124:	3c02      	subs	r4, #2
 8001126:	4463      	add	r3, ip
 8001128:	1a59      	subs	r1, r3, r1
 800112a:	fbb1 f0f7 	udiv	r0, r1, r7
 800112e:	fb07 1110 	mls	r1, r7, r0, r1
 8001132:	fb00 f606 	mul.w	r6, r0, r6
 8001136:	fa1f f38e 	uxth.w	r3, lr
 800113a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800113e:	429e      	cmp	r6, r3
 8001140:	d90a      	bls.n	8001158 <__udivmoddi4+0x94>
 8001142:	eb1c 0303 	adds.w	r3, ip, r3
 8001146:	f100 31ff 	add.w	r1, r0, #4294967295
 800114a:	f080 80fa 	bcs.w	8001342 <__udivmoddi4+0x27e>
 800114e:	429e      	cmp	r6, r3
 8001150:	f240 80f7 	bls.w	8001342 <__udivmoddi4+0x27e>
 8001154:	4463      	add	r3, ip
 8001156:	3802      	subs	r0, #2
 8001158:	2100      	movs	r1, #0
 800115a:	1b9b      	subs	r3, r3, r6
 800115c:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8001160:	b11d      	cbz	r5, 800116a <__udivmoddi4+0xa6>
 8001162:	40d3      	lsrs	r3, r2
 8001164:	2200      	movs	r2, #0
 8001166:	e9c5 3200 	strd	r3, r2, [r5]
 800116a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800116e:	428b      	cmp	r3, r1
 8001170:	d905      	bls.n	800117e <__udivmoddi4+0xba>
 8001172:	b10d      	cbz	r5, 8001178 <__udivmoddi4+0xb4>
 8001174:	e9c5 0100 	strd	r0, r1, [r5]
 8001178:	2100      	movs	r1, #0
 800117a:	4608      	mov	r0, r1
 800117c:	e7f5      	b.n	800116a <__udivmoddi4+0xa6>
 800117e:	fab3 f183 	clz	r1, r3
 8001182:	2900      	cmp	r1, #0
 8001184:	d146      	bne.n	8001214 <__udivmoddi4+0x150>
 8001186:	42a3      	cmp	r3, r4
 8001188:	d302      	bcc.n	8001190 <__udivmoddi4+0xcc>
 800118a:	4290      	cmp	r0, r2
 800118c:	f0c0 80ee 	bcc.w	800136c <__udivmoddi4+0x2a8>
 8001190:	1a86      	subs	r6, r0, r2
 8001192:	eb64 0303 	sbc.w	r3, r4, r3
 8001196:	2001      	movs	r0, #1
 8001198:	2d00      	cmp	r5, #0
 800119a:	d0e6      	beq.n	800116a <__udivmoddi4+0xa6>
 800119c:	e9c5 6300 	strd	r6, r3, [r5]
 80011a0:	e7e3      	b.n	800116a <__udivmoddi4+0xa6>
 80011a2:	2a00      	cmp	r2, #0
 80011a4:	f040 808f 	bne.w	80012c6 <__udivmoddi4+0x202>
 80011a8:	eba1 040c 	sub.w	r4, r1, ip
 80011ac:	2101      	movs	r1, #1
 80011ae:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80011b2:	fa1f f78c 	uxth.w	r7, ip
 80011b6:	fbb4 f6f8 	udiv	r6, r4, r8
 80011ba:	fb08 4416 	mls	r4, r8, r6, r4
 80011be:	fb07 f006 	mul.w	r0, r7, r6
 80011c2:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80011c6:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80011ca:	4298      	cmp	r0, r3
 80011cc:	d908      	bls.n	80011e0 <__udivmoddi4+0x11c>
 80011ce:	eb1c 0303 	adds.w	r3, ip, r3
 80011d2:	f106 34ff 	add.w	r4, r6, #4294967295
 80011d6:	d202      	bcs.n	80011de <__udivmoddi4+0x11a>
 80011d8:	4298      	cmp	r0, r3
 80011da:	f200 80cb 	bhi.w	8001374 <__udivmoddi4+0x2b0>
 80011de:	4626      	mov	r6, r4
 80011e0:	1a1c      	subs	r4, r3, r0
 80011e2:	fbb4 f0f8 	udiv	r0, r4, r8
 80011e6:	fb08 4410 	mls	r4, r8, r0, r4
 80011ea:	fb00 f707 	mul.w	r7, r0, r7
 80011ee:	fa1f f38e 	uxth.w	r3, lr
 80011f2:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80011f6:	429f      	cmp	r7, r3
 80011f8:	d908      	bls.n	800120c <__udivmoddi4+0x148>
 80011fa:	eb1c 0303 	adds.w	r3, ip, r3
 80011fe:	f100 34ff 	add.w	r4, r0, #4294967295
 8001202:	d202      	bcs.n	800120a <__udivmoddi4+0x146>
 8001204:	429f      	cmp	r7, r3
 8001206:	f200 80ae 	bhi.w	8001366 <__udivmoddi4+0x2a2>
 800120a:	4620      	mov	r0, r4
 800120c:	1bdb      	subs	r3, r3, r7
 800120e:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8001212:	e7a5      	b.n	8001160 <__udivmoddi4+0x9c>
 8001214:	f1c1 0720 	rsb	r7, r1, #32
 8001218:	408b      	lsls	r3, r1
 800121a:	fa22 fc07 	lsr.w	ip, r2, r7
 800121e:	ea4c 0c03 	orr.w	ip, ip, r3
 8001222:	fa24 f607 	lsr.w	r6, r4, r7
 8001226:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800122a:	fbb6 f8f9 	udiv	r8, r6, r9
 800122e:	fa1f fe8c 	uxth.w	lr, ip
 8001232:	fb09 6618 	mls	r6, r9, r8, r6
 8001236:	fa20 f307 	lsr.w	r3, r0, r7
 800123a:	408c      	lsls	r4, r1
 800123c:	fa00 fa01 	lsl.w	sl, r0, r1
 8001240:	fb08 f00e 	mul.w	r0, r8, lr
 8001244:	431c      	orrs	r4, r3
 8001246:	0c23      	lsrs	r3, r4, #16
 8001248:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 800124c:	4298      	cmp	r0, r3
 800124e:	fa02 f201 	lsl.w	r2, r2, r1
 8001252:	d90a      	bls.n	800126a <__udivmoddi4+0x1a6>
 8001254:	eb1c 0303 	adds.w	r3, ip, r3
 8001258:	f108 36ff 	add.w	r6, r8, #4294967295
 800125c:	f080 8081 	bcs.w	8001362 <__udivmoddi4+0x29e>
 8001260:	4298      	cmp	r0, r3
 8001262:	d97e      	bls.n	8001362 <__udivmoddi4+0x29e>
 8001264:	f1a8 0802 	sub.w	r8, r8, #2
 8001268:	4463      	add	r3, ip
 800126a:	1a1e      	subs	r6, r3, r0
 800126c:	fbb6 f3f9 	udiv	r3, r6, r9
 8001270:	fb09 6613 	mls	r6, r9, r3, r6
 8001274:	fb03 fe0e 	mul.w	lr, r3, lr
 8001278:	b2a4      	uxth	r4, r4
 800127a:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 800127e:	45a6      	cmp	lr, r4
 8001280:	d908      	bls.n	8001294 <__udivmoddi4+0x1d0>
 8001282:	eb1c 0404 	adds.w	r4, ip, r4
 8001286:	f103 30ff 	add.w	r0, r3, #4294967295
 800128a:	d266      	bcs.n	800135a <__udivmoddi4+0x296>
 800128c:	45a6      	cmp	lr, r4
 800128e:	d964      	bls.n	800135a <__udivmoddi4+0x296>
 8001290:	3b02      	subs	r3, #2
 8001292:	4464      	add	r4, ip
 8001294:	ea43 4008 	orr.w	r0, r3, r8, lsl #16
 8001298:	fba0 8302 	umull	r8, r3, r0, r2
 800129c:	eba4 040e 	sub.w	r4, r4, lr
 80012a0:	429c      	cmp	r4, r3
 80012a2:	46c6      	mov	lr, r8
 80012a4:	461e      	mov	r6, r3
 80012a6:	d350      	bcc.n	800134a <__udivmoddi4+0x286>
 80012a8:	d04d      	beq.n	8001346 <__udivmoddi4+0x282>
 80012aa:	b155      	cbz	r5, 80012c2 <__udivmoddi4+0x1fe>
 80012ac:	ebba 030e 	subs.w	r3, sl, lr
 80012b0:	eb64 0406 	sbc.w	r4, r4, r6
 80012b4:	fa04 f707 	lsl.w	r7, r4, r7
 80012b8:	40cb      	lsrs	r3, r1
 80012ba:	431f      	orrs	r7, r3
 80012bc:	40cc      	lsrs	r4, r1
 80012be:	e9c5 7400 	strd	r7, r4, [r5]
 80012c2:	2100      	movs	r1, #0
 80012c4:	e751      	b.n	800116a <__udivmoddi4+0xa6>
 80012c6:	fa0c fc02 	lsl.w	ip, ip, r2
 80012ca:	f1c2 0320 	rsb	r3, r2, #32
 80012ce:	40d9      	lsrs	r1, r3
 80012d0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80012d4:	fa20 f303 	lsr.w	r3, r0, r3
 80012d8:	fa00 fe02 	lsl.w	lr, r0, r2
 80012dc:	fbb1 f0f8 	udiv	r0, r1, r8
 80012e0:	fb08 1110 	mls	r1, r8, r0, r1
 80012e4:	4094      	lsls	r4, r2
 80012e6:	431c      	orrs	r4, r3
 80012e8:	fa1f f78c 	uxth.w	r7, ip
 80012ec:	0c23      	lsrs	r3, r4, #16
 80012ee:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80012f2:	fb00 f107 	mul.w	r1, r0, r7
 80012f6:	4299      	cmp	r1, r3
 80012f8:	d908      	bls.n	800130c <__udivmoddi4+0x248>
 80012fa:	eb1c 0303 	adds.w	r3, ip, r3
 80012fe:	f100 36ff 	add.w	r6, r0, #4294967295
 8001302:	d22c      	bcs.n	800135e <__udivmoddi4+0x29a>
 8001304:	4299      	cmp	r1, r3
 8001306:	d92a      	bls.n	800135e <__udivmoddi4+0x29a>
 8001308:	3802      	subs	r0, #2
 800130a:	4463      	add	r3, ip
 800130c:	1a5b      	subs	r3, r3, r1
 800130e:	fbb3 f1f8 	udiv	r1, r3, r8
 8001312:	fb08 3311 	mls	r3, r8, r1, r3
 8001316:	b2a4      	uxth	r4, r4
 8001318:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800131c:	fb01 f307 	mul.w	r3, r1, r7
 8001320:	42a3      	cmp	r3, r4
 8001322:	d908      	bls.n	8001336 <__udivmoddi4+0x272>
 8001324:	eb1c 0404 	adds.w	r4, ip, r4
 8001328:	f101 36ff 	add.w	r6, r1, #4294967295
 800132c:	d213      	bcs.n	8001356 <__udivmoddi4+0x292>
 800132e:	42a3      	cmp	r3, r4
 8001330:	d911      	bls.n	8001356 <__udivmoddi4+0x292>
 8001332:	3902      	subs	r1, #2
 8001334:	4464      	add	r4, ip
 8001336:	1ae4      	subs	r4, r4, r3
 8001338:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800133c:	e73b      	b.n	80011b6 <__udivmoddi4+0xf2>
 800133e:	4604      	mov	r4, r0
 8001340:	e6f2      	b.n	8001128 <__udivmoddi4+0x64>
 8001342:	4608      	mov	r0, r1
 8001344:	e708      	b.n	8001158 <__udivmoddi4+0x94>
 8001346:	45c2      	cmp	sl, r8
 8001348:	d2af      	bcs.n	80012aa <__udivmoddi4+0x1e6>
 800134a:	ebb8 0e02 	subs.w	lr, r8, r2
 800134e:	eb63 060c 	sbc.w	r6, r3, ip
 8001352:	3801      	subs	r0, #1
 8001354:	e7a9      	b.n	80012aa <__udivmoddi4+0x1e6>
 8001356:	4631      	mov	r1, r6
 8001358:	e7ed      	b.n	8001336 <__udivmoddi4+0x272>
 800135a:	4603      	mov	r3, r0
 800135c:	e79a      	b.n	8001294 <__udivmoddi4+0x1d0>
 800135e:	4630      	mov	r0, r6
 8001360:	e7d4      	b.n	800130c <__udivmoddi4+0x248>
 8001362:	46b0      	mov	r8, r6
 8001364:	e781      	b.n	800126a <__udivmoddi4+0x1a6>
 8001366:	4463      	add	r3, ip
 8001368:	3802      	subs	r0, #2
 800136a:	e74f      	b.n	800120c <__udivmoddi4+0x148>
 800136c:	4606      	mov	r6, r0
 800136e:	4623      	mov	r3, r4
 8001370:	4608      	mov	r0, r1
 8001372:	e711      	b.n	8001198 <__udivmoddi4+0xd4>
 8001374:	3e02      	subs	r6, #2
 8001376:	4463      	add	r3, ip
 8001378:	e732      	b.n	80011e0 <__udivmoddi4+0x11c>
 800137a:	bf00      	nop

0800137c <__aeabi_idiv0>:
 800137c:	4770      	bx	lr
 800137e:	bf00      	nop

08001380 <BMP280_ReadRegister>:

	float altitude = (T0 / alpha) * (1 - pow((pressure / P0), (1 / beta)));
    return altitude;
}

uint8_t BMP280_ReadRegister(uint8_t reg) {
 8001380:	b500      	push	{lr}
 8001382:	b085      	sub	sp, #20
 8001384:	f88d 0007 	strb.w	r0, [sp, #7]

    uint8_t received_data;
    Write_GPIO(PA, 8, LOW); // Disable CS
 8001388:	2200      	movs	r2, #0
 800138a:	2108      	movs	r1, #8
 800138c:	2001      	movs	r0, #1
 800138e:	f000 fd79 	bl	8001e84 <Write_GPIO>
    SPI2_TX(&reg, 1);
 8001392:	2101      	movs	r1, #1
 8001394:	f10d 0007 	add.w	r0, sp, #7
 8001398:	f000 fe0c 	bl	8001fb4 <SPI2_TX>
    SPI2_RX(&received_data, 1);
 800139c:	2101      	movs	r1, #1
 800139e:	f10d 000f 	add.w	r0, sp, #15
 80013a2:	f000 fe25 	bl	8001ff0 <SPI2_RX>
    Write_GPIO(PA, 8, HIGH); // Enable CS
 80013a6:	2201      	movs	r2, #1
 80013a8:	2108      	movs	r1, #8
 80013aa:	4610      	mov	r0, r2
 80013ac:	f000 fd6a 	bl	8001e84 <Write_GPIO>
    return received_data;
}
 80013b0:	f89d 000f 	ldrb.w	r0, [sp, #15]
 80013b4:	b005      	add	sp, #20
 80013b6:	f85d fb04 	ldr.w	pc, [sp], #4

080013ba <BMP280_ReadCalibrationData>:
void BMP280_ReadCalibrationData(BMP280 *devBMP) {
 80013ba:	b530      	push	{r4, r5, lr}
 80013bc:	b089      	sub	sp, #36	@ 0x24
 80013be:	4605      	mov	r5, r0
	while((BMP280_ReadRegister(BMP280_REG_STATUS) & 0x04) != 0);
 80013c0:	20f3      	movs	r0, #243	@ 0xf3
 80013c2:	f7ff ffdd 	bl	8001380 <BMP280_ReadRegister>
 80013c6:	f010 0f04 	tst.w	r0, #4
 80013ca:	d1f9      	bne.n	80013c0 <BMP280_ReadCalibrationData+0x6>
    for (int i = 0; i < 26; i++) {
 80013cc:	2400      	movs	r4, #0
 80013ce:	e00a      	b.n	80013e6 <BMP280_ReadCalibrationData+0x2c>
        calib[i] = BMP280_ReadRegister(BMP280_REG_CALIB_00 + i);
 80013d0:	f1a4 0078 	sub.w	r0, r4, #120	@ 0x78
 80013d4:	b2c0      	uxtb	r0, r0
 80013d6:	f7ff ffd3 	bl	8001380 <BMP280_ReadRegister>
 80013da:	f104 0320 	add.w	r3, r4, #32
 80013de:	446b      	add	r3, sp
 80013e0:	f803 0c1c 	strb.w	r0, [r3, #-28]
    for (int i = 0; i < 26; i++) {
 80013e4:	3401      	adds	r4, #1
 80013e6:	2c19      	cmp	r4, #25
 80013e8:	ddf2      	ble.n	80013d0 <BMP280_ReadCalibrationData+0x16>
    devBMP->calib_data.dig_T1 = (calib[1] << 8) | calib[0];
 80013ea:	f89d 2005 	ldrb.w	r2, [sp, #5]
 80013ee:	f89d 3004 	ldrb.w	r3, [sp, #4]
 80013f2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80013f6:	812b      	strh	r3, [r5, #8]
    devBMP->calib_data.dig_T2 = (calib[3] << 8) | calib[2];
 80013f8:	f89d 2007 	ldrb.w	r2, [sp, #7]
 80013fc:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8001400:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001404:	816b      	strh	r3, [r5, #10]
    devBMP->calib_data.dig_T3 = (calib[5] << 8) | calib[4];
 8001406:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800140a:	f89d 3008 	ldrb.w	r3, [sp, #8]
 800140e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001412:	81ab      	strh	r3, [r5, #12]
    devBMP->calib_data.dig_P1 = (calib[7] << 8) | calib[6];
 8001414:	f89d 200b 	ldrb.w	r2, [sp, #11]
 8001418:	f89d 300a 	ldrb.w	r3, [sp, #10]
 800141c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001420:	81eb      	strh	r3, [r5, #14]
    devBMP->calib_data.dig_P2 = (calib[9] << 8) | calib[8];
 8001422:	f89d 200d 	ldrb.w	r2, [sp, #13]
 8001426:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800142a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800142e:	822b      	strh	r3, [r5, #16]
    devBMP->calib_data.dig_P3 = (calib[11] << 8) | calib[10];
 8001430:	f89d 200f 	ldrb.w	r2, [sp, #15]
 8001434:	f89d 300e 	ldrb.w	r3, [sp, #14]
 8001438:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800143c:	826b      	strh	r3, [r5, #18]
    devBMP->calib_data.dig_P4 = (calib[13] << 8) | calib[12];
 800143e:	f89d 2011 	ldrb.w	r2, [sp, #17]
 8001442:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8001446:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800144a:	82ab      	strh	r3, [r5, #20]
    devBMP->calib_data.dig_P5 = (calib[15] << 8) | calib[14];
 800144c:	f89d 2013 	ldrb.w	r2, [sp, #19]
 8001450:	f89d 3012 	ldrb.w	r3, [sp, #18]
 8001454:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001458:	82eb      	strh	r3, [r5, #22]
    devBMP->calib_data.dig_P6 = (calib[17] << 8) | calib[16];
 800145a:	f89d 2015 	ldrb.w	r2, [sp, #21]
 800145e:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8001462:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001466:	832b      	strh	r3, [r5, #24]
    devBMP->calib_data.dig_P7 = (calib[19] << 8) | calib[18];
 8001468:	f89d 2017 	ldrb.w	r2, [sp, #23]
 800146c:	f89d 3016 	ldrb.w	r3, [sp, #22]
 8001470:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001474:	836b      	strh	r3, [r5, #26]
    devBMP->calib_data.dig_P8 = (calib[21] << 8) | calib[20];
 8001476:	f89d 2019 	ldrb.w	r2, [sp, #25]
 800147a:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800147e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001482:	83ab      	strh	r3, [r5, #28]
    devBMP->calib_data.dig_P9 = (calib[23] << 8) | calib[22];
 8001484:	f89d 201b 	ldrb.w	r2, [sp, #27]
 8001488:	f89d 301a 	ldrb.w	r3, [sp, #26]
 800148c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001490:	83eb      	strh	r3, [r5, #30]
}
 8001492:	b009      	add	sp, #36	@ 0x24
 8001494:	bd30      	pop	{r4, r5, pc}

08001496 <BMP280_WriteRegister>:

uint8_t BMP280_WriteRegister(uint8_t reg, uint8_t value) {
 8001496:	b500      	push	{lr}
 8001498:	b083      	sub	sp, #12

    uint8_t data[2] = {reg, value};
 800149a:	f88d 0004 	strb.w	r0, [sp, #4]
 800149e:	f88d 1005 	strb.w	r1, [sp, #5]
    Write_GPIO(PA, 8, LOW); // Disable CS
 80014a2:	2200      	movs	r2, #0
 80014a4:	2108      	movs	r1, #8
 80014a6:	2001      	movs	r0, #1
 80014a8:	f000 fcec 	bl	8001e84 <Write_GPIO>
    SPI2_TX(data, 2);
 80014ac:	2102      	movs	r1, #2
 80014ae:	a801      	add	r0, sp, #4
 80014b0:	f000 fd80 	bl	8001fb4 <SPI2_TX>
    Write_GPIO(PA, 8, HIGH); // Enable CS
 80014b4:	2201      	movs	r2, #1
 80014b6:	2108      	movs	r1, #8
 80014b8:	4610      	mov	r0, r2
 80014ba:	f000 fce3 	bl	8001e84 <Write_GPIO>
    return 1; // OK
}
 80014be:	2001      	movs	r0, #1
 80014c0:	b003      	add	sp, #12
 80014c2:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080014c8 <BMP280_ReadTemperature>:
uint8_t BMP280_ReadTemperature(BMP280 *devBMP) {
 80014c8:	b538      	push	{r3, r4, r5, lr}
 80014ca:	4604      	mov	r4, r0
    BMP280_WriteRegister(BMP280_REG_CTRL_MEAS, 0x55); // Forced mode
 80014cc:	2155      	movs	r1, #85	@ 0x55
 80014ce:	20f4      	movs	r0, #244	@ 0xf4
 80014d0:	f7ff ffe1 	bl	8001496 <BMP280_WriteRegister>
    HAL_Delay(5);
 80014d4:	2005      	movs	r0, #5
 80014d6:	f001 fb83 	bl	8002be0 <HAL_Delay>
	while((BMP280_ReadRegister(BMP280_REG_STATUS) & 0x04) != 0 || (BMP280_ReadRegister(BMP280_REG_STATUS) & 0x01) != 0);
 80014da:	20f3      	movs	r0, #243	@ 0xf3
 80014dc:	f7ff ff50 	bl	8001380 <BMP280_ReadRegister>
 80014e0:	f010 0f04 	tst.w	r0, #4
 80014e4:	d1f9      	bne.n	80014da <BMP280_ReadTemperature+0x12>
 80014e6:	20f3      	movs	r0, #243	@ 0xf3
 80014e8:	f7ff ff4a 	bl	8001380 <BMP280_ReadRegister>
 80014ec:	f010 0f01 	tst.w	r0, #1
 80014f0:	d1f3      	bne.n	80014da <BMP280_ReadTemperature+0x12>
    int32_t adc_T = (BMP280_ReadRegister(BMP280_REG_TEMP_MSB) << 12) |
 80014f2:	20fa      	movs	r0, #250	@ 0xfa
 80014f4:	f7ff ff44 	bl	8001380 <BMP280_ReadRegister>
 80014f8:	0305      	lsls	r5, r0, #12
                    (BMP280_ReadRegister(BMP280_REG_TEMP_LSB) << 4) |
 80014fa:	20fb      	movs	r0, #251	@ 0xfb
 80014fc:	f7ff ff40 	bl	8001380 <BMP280_ReadRegister>
    int32_t adc_T = (BMP280_ReadRegister(BMP280_REG_TEMP_MSB) << 12) |
 8001500:	ea45 1500 	orr.w	r5, r5, r0, lsl #4
					((BMP280_ReadRegister(BMP280_REG_TEMP_XLSB) >> 4) & 0x0F);
 8001504:	20fc      	movs	r0, #252	@ 0xfc
 8001506:	f7ff ff3b 	bl	8001380 <BMP280_ReadRegister>
 800150a:	f3c0 1307 	ubfx	r3, r0, #4, #8
    int32_t adc_T = (BMP280_ReadRegister(BMP280_REG_TEMP_MSB) << 12) |
 800150e:	ea45 0203 	orr.w	r2, r5, r3
    int32_t var1 = ((((adc_T >> 3) - ((int32_t)devBMP->calib_data.dig_T1 << 1))) * ((int32_t)devBMP->calib_data.dig_T2)) >> 11;
 8001512:	8923      	ldrh	r3, [r4, #8]
 8001514:	0059      	lsls	r1, r3, #1
 8001516:	ebc1 01e2 	rsb	r1, r1, r2, asr #3
 800151a:	f9b4 000a 	ldrsh.w	r0, [r4, #10]
 800151e:	fb00 f101 	mul.w	r1, r0, r1
    int32_t var2 = (((((adc_T >> 4) - ((int32_t)devBMP->calib_data.dig_T1)) * ((adc_T >> 4) - ((int32_t)devBMP->calib_data.dig_T1))) >> 12) * ((int32_t)devBMP->calib_data.dig_T3)) >> 14;
 8001522:	ebc3 1322 	rsb	r3, r3, r2, asr #4
 8001526:	fb03 f303 	mul.w	r3, r3, r3
 800152a:	131b      	asrs	r3, r3, #12
 800152c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001530:	fb02 f303 	mul.w	r3, r2, r3
 8001534:	139b      	asrs	r3, r3, #14
    devBMP->t_fine = var1 + var2;
 8001536:	eb03 23e1 	add.w	r3, r3, r1, asr #11
 800153a:	6223      	str	r3, [r4, #32]
    int32_t T = (devBMP->t_fine * 5 + 128) >> 8;
 800153c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8001540:	3380      	adds	r3, #128	@ 0x80
    devBMP->temp_C = (float)(T / 100.0); // + devBMP->temperature_ref;
 8001542:	1218      	asrs	r0, r3, #8
 8001544:	f7fe ff5e 	bl	8000404 <__aeabi_i2d>
 8001548:	2200      	movs	r2, #0
 800154a:	4b04      	ldr	r3, [pc, #16]	@ (800155c <BMP280_ReadTemperature+0x94>)
 800154c:	f7ff f8ee 	bl	800072c <__aeabi_ddiv>
 8001550:	f7ff fa9a 	bl	8000a88 <__aeabi_d2f>
 8001554:	6060      	str	r0, [r4, #4]
}
 8001556:	2001      	movs	r0, #1
 8001558:	bd38      	pop	{r3, r4, r5, pc}
 800155a:	bf00      	nop
 800155c:	40590000 	.word	0x40590000

08001560 <BMP280_ReadPressure>:
uint8_t BMP280_ReadPressure(BMP280 *devBMP) {
 8001560:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001564:	4605      	mov	r5, r0
    BMP280_WriteRegister(BMP280_REG_CTRL_MEAS, 0x55); // Forced mode
 8001566:	2155      	movs	r1, #85	@ 0x55
 8001568:	20f4      	movs	r0, #244	@ 0xf4
 800156a:	f7ff ff94 	bl	8001496 <BMP280_WriteRegister>
    HAL_Delay(5);
 800156e:	2005      	movs	r0, #5
 8001570:	f001 fb36 	bl	8002be0 <HAL_Delay>
	while((BMP280_ReadRegister(BMP280_REG_STATUS) & 0x04) != 0 || (BMP280_ReadRegister(BMP280_REG_STATUS) & 0x01) != 0);
 8001574:	20f3      	movs	r0, #243	@ 0xf3
 8001576:	f7ff ff03 	bl	8001380 <BMP280_ReadRegister>
 800157a:	f010 0f04 	tst.w	r0, #4
 800157e:	d1f9      	bne.n	8001574 <BMP280_ReadPressure+0x14>
 8001580:	20f3      	movs	r0, #243	@ 0xf3
 8001582:	f7ff fefd 	bl	8001380 <BMP280_ReadRegister>
 8001586:	f010 0401 	ands.w	r4, r0, #1
 800158a:	d1f3      	bne.n	8001574 <BMP280_ReadPressure+0x14>
    int32_t adc_P = (BMP280_ReadRegister(BMP280_REG_PRESS_MSB) << 12) |
 800158c:	20f7      	movs	r0, #247	@ 0xf7
 800158e:	f7ff fef7 	bl	8001380 <BMP280_ReadRegister>
 8001592:	0306      	lsls	r6, r0, #12
                    (BMP280_ReadRegister(BMP280_REG_PRESS_LSB) << 4) |
 8001594:	20f8      	movs	r0, #248	@ 0xf8
 8001596:	f7ff fef3 	bl	8001380 <BMP280_ReadRegister>
    int32_t adc_P = (BMP280_ReadRegister(BMP280_REG_PRESS_MSB) << 12) |
 800159a:	ea46 1600 	orr.w	r6, r6, r0, lsl #4
                    ((BMP280_ReadRegister(BMP280_REG_PRESS_XLSB) >> 4) & 0x0F);
 800159e:	20f9      	movs	r0, #249	@ 0xf9
 80015a0:	f7ff feee 	bl	8001380 <BMP280_ReadRegister>
 80015a4:	f3c0 1307 	ubfx	r3, r0, #4, #8
    int32_t adc_P = (BMP280_ReadRegister(BMP280_REG_PRESS_MSB) << 12) |
 80015a8:	ea46 0103 	orr.w	r1, r6, r3
    int64_t var1 = ((int64_t)devBMP->t_fine) - 128000;
 80015ac:	6a28      	ldr	r0, [r5, #32]
 80015ae:	17c3      	asrs	r3, r0, #31
 80015b0:	f5b0 30fa 	subs.w	r0, r0, #128000	@ 0x1f400
 80015b4:	f143 33ff 	adc.w	r3, r3, #4294967295
    int64_t var2 = var1 * var1 * (int64_t)devBMP->calib_data.dig_P6;
 80015b8:	fb00 f203 	mul.w	r2, r0, r3
 80015bc:	fba0 7800 	umull	r7, r8, r0, r0
 80015c0:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 80015c4:	f9b5 2018 	ldrsh.w	r2, [r5, #24]
 80015c8:	17d6      	asrs	r6, r2, #31
 80015ca:	fb07 f606 	mul.w	r6, r7, r6
 80015ce:	fb02 6608 	mla	r6, r2, r8, r6
 80015d2:	fba7 c202 	umull	ip, r2, r7, r2
 80015d6:	4416      	add	r6, r2
    var2 = var2 + ((var1 * (int64_t)devBMP->calib_data.dig_P5) << 17);
 80015d8:	f9b5 2016 	ldrsh.w	r2, [r5, #22]
 80015dc:	ea4f 79e2 	mov.w	r9, r2, asr #31
 80015e0:	fb02 fe03 	mul.w	lr, r2, r3
 80015e4:	fb00 ee09 	mla	lr, r0, r9, lr
 80015e8:	fba2 2900 	umull	r2, r9, r2, r0
 80015ec:	44ce      	add	lr, r9
 80015ee:	ea4f 4e4e 	mov.w	lr, lr, lsl #17
 80015f2:	ea4e 3ed2 	orr.w	lr, lr, r2, lsr #15
 80015f6:	0452      	lsls	r2, r2, #17
 80015f8:	eb12 0c0c 	adds.w	ip, r2, ip
 80015fc:	eb46 060e 	adc.w	r6, r6, lr
    var2 = var2 + (((int64_t)devBMP->calib_data.dig_P4) << 35);
 8001600:	f9b5 2014 	ldrsh.w	r2, [r5, #20]
 8001604:	eb06 0ec2 	add.w	lr, r6, r2, lsl #3
    var1 = ((var1 * var1 * (int64_t)devBMP->calib_data.dig_P3) >> 8) + ((var1 * (int64_t)devBMP->calib_data.dig_P2) << 12);
 8001608:	f9b5 2012 	ldrsh.w	r2, [r5, #18]
 800160c:	17d6      	asrs	r6, r2, #31
 800160e:	fb07 f606 	mul.w	r6, r7, r6
 8001612:	fb02 6608 	mla	r6, r2, r8, r6
 8001616:	fba7 2702 	umull	r2, r7, r7, r2
 800161a:	443e      	add	r6, r7
 800161c:	0a12      	lsrs	r2, r2, #8
 800161e:	ea42 6206 	orr.w	r2, r2, r6, lsl #24
 8001622:	f9b5 7010 	ldrsh.w	r7, [r5, #16]
 8001626:	ea4f 78e7 	mov.w	r8, r7, asr #31
 800162a:	fb07 f303 	mul.w	r3, r7, r3
 800162e:	fb00 3308 	mla	r3, r0, r8, r3
 8001632:	fba7 7000 	umull	r7, r0, r7, r0
 8001636:	4403      	add	r3, r0
 8001638:	031b      	lsls	r3, r3, #12
 800163a:	ea43 5317 	orr.w	r3, r3, r7, lsr #20
 800163e:	0338      	lsls	r0, r7, #12
 8001640:	1812      	adds	r2, r2, r0
 8001642:	eb43 2326 	adc.w	r3, r3, r6, asr #8
    var1 = (((((int64_t)1) << 47) + var1)) * ((int64_t)devBMP->calib_data.dig_P1) >> 33;
 8001646:	f503 4300 	add.w	r3, r3, #32768	@ 0x8000
 800164a:	89ee      	ldrh	r6, [r5, #14]
 800164c:	fba2 2006 	umull	r2, r0, r2, r6
 8001650:	fb06 0003 	mla	r0, r6, r3, r0
 8001654:	1042      	asrs	r2, r0, #1
 8001656:	17c3      	asrs	r3, r0, #31
    if (var1 == 0) {
 8001658:	ea53 0060 	orrs.w	r0, r3, r0, asr #1
 800165c:	d065      	beq.n	800172a <BMP280_ReadPressure+0x1ca>
    int64_t p = 1048576 - adc_P;
 800165e:	f5c1 1480 	rsb	r4, r1, #1048576	@ 0x100000
    p = (((p << 31) - var2) * 3125) / var1;
 8001662:	1061      	asrs	r1, r4, #1
 8001664:	07e4      	lsls	r4, r4, #31
 8001666:	ebb4 040c 	subs.w	r4, r4, ip
 800166a:	eb61 010e 	sbc.w	r1, r1, lr
 800166e:	1920      	adds	r0, r4, r4
 8001670:	eb41 0c01 	adc.w	ip, r1, r1
 8001674:	1900      	adds	r0, r0, r4
 8001676:	eb41 0c0c 	adc.w	ip, r1, ip
 800167a:	ea4f 168c 	mov.w	r6, ip, lsl #6
 800167e:	ea46 6690 	orr.w	r6, r6, r0, lsr #26
 8001682:	0187      	lsls	r7, r0, #6
 8001684:	19c0      	adds	r0, r0, r7
 8001686:	eb4c 0c06 	adc.w	ip, ip, r6
 800168a:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800168e:	ea4c 7c90 	orr.w	ip, ip, r0, lsr #30
 8001692:	0080      	lsls	r0, r0, #2
 8001694:	1900      	adds	r0, r0, r4
 8001696:	eb41 0c0c 	adc.w	ip, r1, ip
 800169a:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800169e:	ea4c 7c90 	orr.w	ip, ip, r0, lsr #30
 80016a2:	0080      	lsls	r0, r0, #2
 80016a4:	1900      	adds	r0, r0, r4
 80016a6:	eb41 010c 	adc.w	r1, r1, ip
 80016aa:	f7ff fcbb 	bl	8001024 <__aeabi_ldivmod>
 80016ae:	4603      	mov	r3, r0
    var1 = (((int64_t)devBMP->calib_data.dig_P9) * (p >> 13) * (p >> 13)) >> 25;
 80016b0:	f9b5 401e 	ldrsh.w	r4, [r5, #30]
 80016b4:	ea4f 7ce4 	mov.w	ip, r4, asr #31
 80016b8:	0b42      	lsrs	r2, r0, #13
 80016ba:	ea42 42c1 	orr.w	r2, r2, r1, lsl #19
 80016be:	134f      	asrs	r7, r1, #13
 80016c0:	fb04 f607 	mul.w	r6, r4, r7
 80016c4:	fb02 660c 	mla	r6, r2, ip, r6
 80016c8:	fba4 4c02 	umull	r4, ip, r4, r2
 80016cc:	4466      	add	r6, ip
 80016ce:	fb02 f606 	mul.w	r6, r2, r6
 80016d2:	fb04 6607 	mla	r6, r4, r7, r6
 80016d6:	fba2 2404 	umull	r2, r4, r2, r4
 80016da:	4434      	add	r4, r6
 80016dc:	0e52      	lsrs	r2, r2, #25
 80016de:	ea42 12c4 	orr.w	r2, r2, r4, lsl #7
    var2 = (((int64_t)devBMP->calib_data.dig_P8) * p) >> 19;
 80016e2:	f9b5 601c 	ldrsh.w	r6, [r5, #28]
 80016e6:	ea4f 7ce6 	mov.w	ip, r6, asr #31
 80016ea:	fb06 f701 	mul.w	r7, r6, r1
 80016ee:	fb0c 7700 	mla	r7, ip, r0, r7
 80016f2:	fba6 6000 	umull	r6, r0, r6, r0
 80016f6:	4407      	add	r7, r0
 80016f8:	0cf0      	lsrs	r0, r6, #19
 80016fa:	ea40 3047 	orr.w	r0, r0, r7, lsl #13
    p = ((p + var1 + var2) >> 8) + (((int64_t)devBMP->calib_data.dig_P7) << 4);
 80016fe:	189b      	adds	r3, r3, r2
 8001700:	eb41 6264 	adc.w	r2, r1, r4, asr #25
 8001704:	181b      	adds	r3, r3, r0
 8001706:	eb42 42e7 	adc.w	r2, r2, r7, asr #19
 800170a:	0a1b      	lsrs	r3, r3, #8
 800170c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8001710:	f9b5 001a 	ldrsh.w	r0, [r5, #26]
    devBMP->pressure_Pa = (float)p / (float)(1 << 8); // + devBMP->pressure_ref;
 8001714:	eb03 1000 	add.w	r0, r3, r0, lsl #4
 8001718:	2100      	movs	r1, #0
 800171a:	f7ff fad5 	bl	8000cc8 <__aeabi_l2f>
 800171e:	f04f 516e 	mov.w	r1, #998244352	@ 0x3b800000
 8001722:	f7ff fb0f 	bl	8000d44 <__aeabi_fmul>
 8001726:	6028      	str	r0, [r5, #0]
    return 1; // OK
 8001728:	2401      	movs	r4, #1
}
 800172a:	4620      	mov	r0, r4
 800172c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08001730 <BMP280_MeasureReference>:
uint8_t BMP280_MeasureReference(BMP280 *devBMP, float temp_ref, float press_ref) {
 8001730:	b570      	push	{r4, r5, r6, lr}
 8001732:	4604      	mov	r4, r0
 8001734:	460e      	mov	r6, r1
 8001736:	4615      	mov	r5, r2
    devBMP->temperature_ref = BMP280_ReadTemperature(devBMP) - temp_ref;
 8001738:	f7ff fec6 	bl	80014c8 <BMP280_ReadTemperature>
 800173c:	f7ff faae 	bl	8000c9c <__aeabi_i2f>
 8001740:	4631      	mov	r1, r6
 8001742:	f7ff f9f5 	bl	8000b30 <__aeabi_fsub>
 8001746:	6260      	str	r0, [r4, #36]	@ 0x24
    devBMP->pressure_ref = BMP280_ReadPressure(devBMP) - press_ref;
 8001748:	4620      	mov	r0, r4
 800174a:	f7ff ff09 	bl	8001560 <BMP280_ReadPressure>
 800174e:	f7ff faa5 	bl	8000c9c <__aeabi_i2f>
 8001752:	4629      	mov	r1, r5
 8001754:	f7ff f9ec 	bl	8000b30 <__aeabi_fsub>
 8001758:	62a0      	str	r0, [r4, #40]	@ 0x28
}
 800175a:	2001      	movs	r0, #1
 800175c:	bd70      	pop	{r4, r5, r6, pc}
	...

08001760 <BMP280_Init>:
uint8_t BMP280_Init(BMP280 *devBMP, unsigned short spi_port) {
 8001760:	b510      	push	{r4, lr}
 8001762:	4604      	mov	r4, r0
	SPI_Init(spi_port);
 8001764:	4608      	mov	r0, r1
 8001766:	f000 fbc1 	bl	8001eec <SPI_Init>
    BMP280_WriteRegister(BMP280_REG_RESET, BMP280_RESET_WORD); // Reset
 800176a:	21b6      	movs	r1, #182	@ 0xb6
 800176c:	20e0      	movs	r0, #224	@ 0xe0
 800176e:	f7ff fe92 	bl	8001496 <BMP280_WriteRegister>
    if (BMP280_ReadRegister(BMP280_REG_ID) != BMP280_DEVICE_ID) {
 8001772:	20d0      	movs	r0, #208	@ 0xd0
 8001774:	f7ff fe04 	bl	8001380 <BMP280_ReadRegister>
 8001778:	2858      	cmp	r0, #88	@ 0x58
 800177a:	d001      	beq.n	8001780 <BMP280_Init+0x20>
        return 0; // Error
 800177c:	2000      	movs	r0, #0
}
 800177e:	bd10      	pop	{r4, pc}
    BMP280_ReadCalibrationData(devBMP);
 8001780:	4620      	mov	r0, r4
 8001782:	f7ff fe1a 	bl	80013ba <BMP280_ReadCalibrationData>
    BMP280_WriteRegister(BMP280_REG_CTRL_MEAS, 0x55); // Forced mode
 8001786:	2155      	movs	r1, #85	@ 0x55
 8001788:	20f4      	movs	r0, #244	@ 0xf4
 800178a:	f7ff fe84 	bl	8001496 <BMP280_WriteRegister>
    BMP280_WriteRegister(BMP280_REG_CONFIG, BMP280_SETTING_CONFIG);
 800178e:	2108      	movs	r1, #8
 8001790:	20f5      	movs	r0, #245	@ 0xf5
 8001792:	f7ff fe80 	bl	8001496 <BMP280_WriteRegister>
    BMP280_MeasureReference(devBMP, T0, 101325.0);
 8001796:	4a03      	ldr	r2, [pc, #12]	@ (80017a4 <BMP280_Init+0x44>)
 8001798:	4903      	ldr	r1, [pc, #12]	@ (80017a8 <BMP280_Init+0x48>)
 800179a:	4620      	mov	r0, r4
 800179c:	f7ff ffc8 	bl	8001730 <BMP280_MeasureReference>
    return 1;
 80017a0:	2001      	movs	r0, #1
 80017a2:	e7ec      	b.n	800177e <BMP280_Init+0x1e>
 80017a4:	47c5e680 	.word	0x47c5e680
 80017a8:	43901333 	.word	0x43901333

080017ac <Buzz>:
    {1, 280, 230, 100, 1000},  // PENDING
    {3, 280, 230, 100, 1000},  // ARMED
    {1, 280, 279, 3000, 10}    // CRASH
};

void Buzz(TIM_HandleTypeDef *htim, uint32_t channel, buzzRoutines_t routine){
 80017ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80017b0:	4606      	mov	r6, r0
 80017b2:	460f      	mov	r7, r1
 80017b4:	4614      	mov	r4, r2

	HAL_TIM_PWM_Start(htim, channel);
 80017b6:	f002 ffe7 	bl	8004788 <HAL_TIM_PWM_Start>

	const buzzParametres_t *params = &buzzParams[routine];

	uint8_t counter = params->nbBips;
 80017ba:	eb04 0284 	add.w	r2, r4, r4, lsl #2
 80017be:	4b35      	ldr	r3, [pc, #212]	@ (8001894 <Buzz+0xe8>)
 80017c0:	f813 5022 	ldrb.w	r5, [r3, r2, lsl #2]
	int freq;

	while (counter > 0) {
 80017c4:	2d00      	cmp	r5, #0
 80017c6:	d05f      	beq.n	8001888 <Buzz+0xdc>
		if(Delay_Wait(params->delayPause)) {
 80017c8:	eb04 0284 	add.w	r2, r4, r4, lsl #2
 80017cc:	4b31      	ldr	r3, [pc, #196]	@ (8001894 <Buzz+0xe8>)
 80017ce:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80017d2:	6918      	ldr	r0, [r3, #16]
 80017d4:	f000 fb76 	bl	8001ec4 <Delay_Wait>
 80017d8:	2800      	cmp	r0, #0
 80017da:	d0f3      	beq.n	80017c4 <Buzz+0x18>
			for(freq = params->frequencyStart; freq > params->frequencyEnd; freq--)
 80017dc:	eb04 0284 	add.w	r2, r4, r4, lsl #2
 80017e0:	4b2c      	ldr	r3, [pc, #176]	@ (8001894 <Buzz+0xe8>)
 80017e2:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80017e6:	f8d3 8004 	ldr.w	r8, [r3, #4]
 80017ea:	e00b      	b.n	8001804 <Buzz+0x58>
			{
				if(Delay_Wait(params->delayModulation) == true) {
					__HAL_TIM_SET_AUTORELOAD(htim, freq);
					__HAL_TIM_SET_COMPARE(htim, channel, freq);
 80017ec:	2f04      	cmp	r7, #4
 80017ee:	d028      	beq.n	8001842 <Buzz+0x96>
 80017f0:	2f08      	cmp	r7, #8
 80017f2:	d02a      	beq.n	800184a <Buzz+0x9e>
 80017f4:	6833      	ldr	r3, [r6, #0]
 80017f6:	f8c3 8040 	str.w	r8, [r3, #64]	@ 0x40
					Delay_Wait(params->delayModulation);
 80017fa:	4648      	mov	r0, r9
 80017fc:	f000 fb62 	bl	8001ec4 <Delay_Wait>
			for(freq = params->frequencyStart; freq > params->frequencyEnd; freq--)
 8001800:	f108 38ff 	add.w	r8, r8, #4294967295
 8001804:	eb04 0284 	add.w	r2, r4, r4, lsl #2
 8001808:	4b22      	ldr	r3, [pc, #136]	@ (8001894 <Buzz+0xe8>)
 800180a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800180e:	689b      	ldr	r3, [r3, #8]
 8001810:	4543      	cmp	r3, r8
 8001812:	da1e      	bge.n	8001852 <Buzz+0xa6>
				if(Delay_Wait(params->delayModulation) == true) {
 8001814:	eb04 0284 	add.w	r2, r4, r4, lsl #2
 8001818:	4b1e      	ldr	r3, [pc, #120]	@ (8001894 <Buzz+0xe8>)
 800181a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800181e:	f8d3 900c 	ldr.w	r9, [r3, #12]
 8001822:	4648      	mov	r0, r9
 8001824:	f000 fb4e 	bl	8001ec4 <Delay_Wait>
 8001828:	2800      	cmp	r0, #0
 800182a:	d0e9      	beq.n	8001800 <Buzz+0x54>
					__HAL_TIM_SET_AUTORELOAD(htim, freq);
 800182c:	6833      	ldr	r3, [r6, #0]
 800182e:	f8c3 802c 	str.w	r8, [r3, #44]	@ 0x2c
 8001832:	f8c6 800c 	str.w	r8, [r6, #12]
					__HAL_TIM_SET_COMPARE(htim, channel, freq);
 8001836:	2f00      	cmp	r7, #0
 8001838:	d1d8      	bne.n	80017ec <Buzz+0x40>
 800183a:	6833      	ldr	r3, [r6, #0]
 800183c:	f8c3 8034 	str.w	r8, [r3, #52]	@ 0x34
 8001840:	e7db      	b.n	80017fa <Buzz+0x4e>
 8001842:	6833      	ldr	r3, [r6, #0]
 8001844:	f8c3 8038 	str.w	r8, [r3, #56]	@ 0x38
 8001848:	e7d7      	b.n	80017fa <Buzz+0x4e>
 800184a:	6833      	ldr	r3, [r6, #0]
 800184c:	f8c3 803c 	str.w	r8, [r3, #60]	@ 0x3c
 8001850:	e7d3      	b.n	80017fa <Buzz+0x4e>
				}
			}
			__HAL_TIM_SET_AUTORELOAD(htim, 0);
 8001852:	6832      	ldr	r2, [r6, #0]
 8001854:	2300      	movs	r3, #0
 8001856:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8001858:	60f3      	str	r3, [r6, #12]
			__HAL_TIM_SET_COMPARE(htim, channel, 0);
 800185a:	b92f      	cbnz	r7, 8001868 <Buzz+0xbc>
 800185c:	6833      	ldr	r3, [r6, #0]
 800185e:	2200      	movs	r2, #0
 8001860:	635a      	str	r2, [r3, #52]	@ 0x34
			counter--;
 8001862:	3d01      	subs	r5, #1
 8001864:	b2ed      	uxtb	r5, r5
 8001866:	e7ad      	b.n	80017c4 <Buzz+0x18>
			__HAL_TIM_SET_COMPARE(htim, channel, 0);
 8001868:	2f04      	cmp	r7, #4
 800186a:	d005      	beq.n	8001878 <Buzz+0xcc>
 800186c:	2f08      	cmp	r7, #8
 800186e:	d007      	beq.n	8001880 <Buzz+0xd4>
 8001870:	6833      	ldr	r3, [r6, #0]
 8001872:	2200      	movs	r2, #0
 8001874:	641a      	str	r2, [r3, #64]	@ 0x40
 8001876:	e7f4      	b.n	8001862 <Buzz+0xb6>
 8001878:	6833      	ldr	r3, [r6, #0]
 800187a:	2200      	movs	r2, #0
 800187c:	639a      	str	r2, [r3, #56]	@ 0x38
 800187e:	e7f0      	b.n	8001862 <Buzz+0xb6>
 8001880:	6833      	ldr	r3, [r6, #0]
 8001882:	2200      	movs	r2, #0
 8001884:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001886:	e7ec      	b.n	8001862 <Buzz+0xb6>
		}
	}

	HAL_TIM_PWM_Stop(htim, channel);
 8001888:	4639      	mov	r1, r7
 800188a:	4630      	mov	r0, r6
 800188c:	f003 f81e 	bl	80048cc <HAL_TIM_PWM_Stop>
}
 8001890:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001894:	08007ff0 	.word	0x08007ff0

08001898 <CD74HC4051_Init>:

uint32_t ADC_Sampling (ADC_HandleTypeDef *hadc);

uint8_t CD74HC4051_Init (ADC_HandleTypeDef *hadc) {

	if (hadc == NULL) {
 8001898:	b370      	cbz	r0, 80018f8 <CD74HC4051_Init+0x60>
uint8_t CD74HC4051_Init (ADC_HandleTypeDef *hadc) {
 800189a:	b510      	push	{r4, lr}
 800189c:	4604      	mov	r4, r0
		return 0; // Error
	}
	// Read pin
	Init_GPIO(PA, 0, IN, I_AN); // MUL_AN
 800189e:	2300      	movs	r3, #0
 80018a0:	461a      	mov	r2, r3
 80018a2:	4619      	mov	r1, r3
 80018a4:	2001      	movs	r0, #1
 80018a6:	f000 faa3 	bl	8001df0 <Init_GPIO>
	// Batteries
	Init_GPIO(PC, 13, OUT2, O_GP_PP); // MUL_S0
 80018aa:	2300      	movs	r3, #0
 80018ac:	2202      	movs	r2, #2
 80018ae:	210d      	movs	r1, #13
 80018b0:	2003      	movs	r0, #3
 80018b2:	f000 fa9d 	bl	8001df0 <Init_GPIO>
	Init_GPIO(PC, 14, OUT2, O_GP_PP); // MUL_S1
 80018b6:	2300      	movs	r3, #0
 80018b8:	2202      	movs	r2, #2
 80018ba:	210e      	movs	r1, #14
 80018bc:	2003      	movs	r0, #3
 80018be:	f000 fa97 	bl	8001df0 <Init_GPIO>
	Init_GPIO(PC, 15, OUT2, O_GP_PP); // MUL_S2
 80018c2:	2300      	movs	r3, #0
 80018c4:	2202      	movs	r2, #2
 80018c6:	210f      	movs	r1, #15
 80018c8:	2003      	movs	r0, #3
 80018ca:	f000 fa91 	bl	8001df0 <Init_GPIO>
	Init_GPIO(PB, 8, OUT2, O_GP_PP); // MUL_E~
 80018ce:	2300      	movs	r3, #0
 80018d0:	2202      	movs	r2, #2
 80018d2:	2108      	movs	r1, #8
 80018d4:	4610      	mov	r0, r2
 80018d6:	f000 fa8b 	bl	8001df0 <Init_GPIO>
	// Set MUL_E~ (inverse)
	Write_GPIO(PB, 8, HIGH);
 80018da:	2201      	movs	r2, #1
 80018dc:	2108      	movs	r1, #8
 80018de:	2002      	movs	r0, #2
 80018e0:	f000 fad0 	bl	8001e84 <Write_GPIO>
	// Pyros
	Pyro_Init();
 80018e4:	f000 f9cc 	bl	8001c80 <Pyro_Init>

	//ADC calibration
	ADC_Stop(hadc);
 80018e8:	4620      	mov	r0, r4
 80018ea:	f000 fa61 	bl	8001db0 <ADC_Stop>
	ADC_Calibration(hadc);
 80018ee:	4620      	mov	r0, r4
 80018f0:	f000 fa59 	bl	8001da6 <ADC_Calibration>

	return 1; // OK
 80018f4:	2001      	movs	r0, #1
}
 80018f6:	bd10      	pop	{r4, pc}
		return 0; // Error
 80018f8:	2000      	movs	r0, #0
}
 80018fa:	4770      	bx	lr

080018fc <CD74HC4051_AnRead>:

uint16_t CD74HC4051_AnRead(ADC_HandleTypeDef *hadc, uint8_t channel, uint8_t pyro_channel, float vref) {

	if (hadc == NULL) {
 80018fc:	2800      	cmp	r0, #0
 80018fe:	d060      	beq.n	80019c2 <CD74HC4051_AnRead+0xc6>
uint16_t CD74HC4051_AnRead(ADC_HandleTypeDef *hadc, uint8_t channel, uint8_t pyro_channel, float vref) {
 8001900:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001902:	460c      	mov	r4, r1
 8001904:	4615      	mov	r5, r2
 8001906:	461e      	mov	r6, r3
 8001908:	4607      	mov	r7, r0
		return 0;
	}
	if(channel == CHANNEL_1 || channel == CHANNEL_7) {
 800190a:	2901      	cmp	r1, #1
 800190c:	d05b      	beq.n	80019c6 <CD74HC4051_AnRead+0xca>
		return 0;
	}

	ADC_Start(hadc);
 800190e:	f000 fa45 	bl	8001d9c <ADC_Start>

	Write_GPIO(PB, 8, HIGH); // MUL_E~ (inverse)
 8001912:	2201      	movs	r2, #1
 8001914:	2108      	movs	r1, #8
 8001916:	2002      	movs	r0, #2
 8001918:	f000 fab4 	bl	8001e84 <Write_GPIO>
	Write_GPIO(PA, 15, LOW); // Pyro_Test (inverse)
 800191c:	2200      	movs	r2, #0
 800191e:	210f      	movs	r1, #15
 8001920:	2001      	movs	r0, #1
 8001922:	f000 faaf 	bl	8001e84 <Write_GPIO>
	if(channel == CHANNEL_0) {
 8001926:	b98c      	cbnz	r4, 800194c <CD74HC4051_AnRead+0x50>
		if(pyro_channel == PYRO_CHANNEL_0) {
 8001928:	2d01      	cmp	r5, #1
 800192a:	d003      	beq.n	8001934 <CD74HC4051_AnRead+0x38>
			Write_GPIO(PB, 4, HIGH); // Pyro_ON0
		} else if (pyro_channel == PYRO_CHANNEL_1) {
 800192c:	2d02      	cmp	r5, #2
 800192e:	d007      	beq.n	8001940 <CD74HC4051_AnRead+0x44>
			Write_GPIO(PB, 5, HIGH); // Pyro_ON1
		} else {
			return 0;
 8001930:	2000      	movs	r0, #0
 8001932:	e045      	b.n	80019c0 <CD74HC4051_AnRead+0xc4>
			Write_GPIO(PB, 4, HIGH); // Pyro_ON0
 8001934:	2201      	movs	r2, #1
 8001936:	2104      	movs	r1, #4
 8001938:	2002      	movs	r0, #2
 800193a:	f000 faa3 	bl	8001e84 <Write_GPIO>
 800193e:	e017      	b.n	8001970 <CD74HC4051_AnRead+0x74>
			Write_GPIO(PB, 5, HIGH); // Pyro_ON1
 8001940:	2201      	movs	r2, #1
 8001942:	2105      	movs	r1, #5
 8001944:	2002      	movs	r0, #2
 8001946:	f000 fa9d 	bl	8001e84 <Write_GPIO>
 800194a:	e011      	b.n	8001970 <CD74HC4051_AnRead+0x74>
		}
	} else {
		// Set channel
		Write_GPIO(PC, 13, (channel & 0x01) ? HIGH : LOW);
 800194c:	f004 0201 	and.w	r2, r4, #1
 8001950:	210d      	movs	r1, #13
 8001952:	2003      	movs	r0, #3
 8001954:	f000 fa96 	bl	8001e84 <Write_GPIO>
		Write_GPIO(PC, 14, (channel & 0x02) ? HIGH : LOW);
 8001958:	f3c4 0240 	ubfx	r2, r4, #1, #1
 800195c:	210e      	movs	r1, #14
 800195e:	2003      	movs	r0, #3
 8001960:	f000 fa90 	bl	8001e84 <Write_GPIO>
		Write_GPIO(PC, 15, (channel & 0x04) ? HIGH : LOW);
 8001964:	f3c4 0280 	ubfx	r2, r4, #2, #1
 8001968:	210f      	movs	r1, #15
 800196a:	2003      	movs	r0, #3
 800196c:	f000 fa8a 	bl	8001e84 <Write_GPIO>
	}
	// Reactiver multiplexer pour lecture
	Write_GPIO(PB, 8, LOW); // MUL_E~ (inverse)
 8001970:	2200      	movs	r2, #0
 8001972:	2108      	movs	r1, #8
 8001974:	2002      	movs	r0, #2
 8001976:	f000 fa85 	bl	8001e84 <Write_GPIO>
	// Lecture
	uint32_t adc_value = ADC_Sampling(hadc);
 800197a:	4638      	mov	r0, r7
 800197c:	f000 fa1e 	bl	8001dbc <ADC_Sampling>
 8001980:	4604      	mov	r4, r0
	// Desactiver pyros (ordre important)
	Write_GPIO(PB, 4, LOW); // Pyro_ON0
 8001982:	2200      	movs	r2, #0
 8001984:	2104      	movs	r1, #4
 8001986:	2002      	movs	r0, #2
 8001988:	f000 fa7c 	bl	8001e84 <Write_GPIO>
	Write_GPIO(PB, 5, LOW); // Pyro_ON1
 800198c:	2200      	movs	r2, #0
 800198e:	2105      	movs	r1, #5
 8001990:	2002      	movs	r0, #2
 8001992:	f000 fa77 	bl	8001e84 <Write_GPIO>
	Write_GPIO(PA, 15, HIGH); // Pyro_Test~
 8001996:	2201      	movs	r2, #1
 8001998:	210f      	movs	r1, #15
 800199a:	4610      	mov	r0, r2
 800199c:	f000 fa72 	bl	8001e84 <Write_GPIO>

	return (uint16_t)((adc_value * vref / 4096) * 1000);
 80019a0:	4620      	mov	r0, r4
 80019a2:	f7ff f977 	bl	8000c94 <__aeabi_ui2f>
 80019a6:	4631      	mov	r1, r6
 80019a8:	f7ff f9cc 	bl	8000d44 <__aeabi_fmul>
 80019ac:	f04f 5166 	mov.w	r1, #964689920	@ 0x39800000
 80019b0:	f7ff f9c8 	bl	8000d44 <__aeabi_fmul>
 80019b4:	4905      	ldr	r1, [pc, #20]	@ (80019cc <CD74HC4051_AnRead+0xd0>)
 80019b6:	f7ff f9c5 	bl	8000d44 <__aeabi_fmul>
 80019ba:	f7ff fb13 	bl	8000fe4 <__aeabi_f2uiz>
 80019be:	b280      	uxth	r0, r0
}
 80019c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		return 0;
 80019c2:	2000      	movs	r0, #0
}
 80019c4:	4770      	bx	lr
		return 0;
 80019c6:	2000      	movs	r0, #0
 80019c8:	e7fa      	b.n	80019c0 <CD74HC4051_AnRead+0xc4>
 80019ca:	bf00      	nop
 80019cc:	447a0000 	.word	0x447a0000

080019d0 <ICM20602_Read>:
{
	return Read_GPIO(PA, 10);
}

void ICM20602_Read(uint8_t address, uint8_t rxData[], uint8_t size)
{
 80019d0:	b530      	push	{r4, r5, lr}
 80019d2:	b083      	sub	sp, #12
 80019d4:	460c      	mov	r4, r1
 80019d6:	4615      	mov	r5, r2
 80019d8:	f88d 0007 	strb.w	r0, [sp, #7]
	address |= 0x80;  // read operation
 80019dc:	b2c3      	uxtb	r3, r0
 80019de:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 80019e2:	f88d 3007 	strb.w	r3, [sp, #7]

	Write_GPIO(PB, 12, LOW);
 80019e6:	2200      	movs	r2, #0
 80019e8:	210c      	movs	r1, #12
 80019ea:	2002      	movs	r0, #2
 80019ec:	f000 fa4a 	bl	8001e84 <Write_GPIO>
	SPI2_TX(&address, 1);  // send address
 80019f0:	2101      	movs	r1, #1
 80019f2:	f10d 0007 	add.w	r0, sp, #7
 80019f6:	f000 fadd 	bl	8001fb4 <SPI2_TX>
	SPI2_RX(rxData, size);  // receive 6 bytes data
 80019fa:	4629      	mov	r1, r5
 80019fc:	4620      	mov	r0, r4
 80019fe:	f000 faf7 	bl	8001ff0 <SPI2_RX>
	Write_GPIO(PB, 12, HIGH);
 8001a02:	2201      	movs	r2, #1
 8001a04:	210c      	movs	r1, #12
 8001a06:	2002      	movs	r0, #2
 8001a08:	f000 fa3c 	bl	8001e84 <Write_GPIO>
}
 8001a0c:	b003      	add	sp, #12
 8001a0e:	bd30      	pop	{r4, r5, pc}

08001a10 <ICM20602_Write>:

void ICM20602_Write(uint8_t address, uint8_t value)
{
 8001a10:	b500      	push	{lr}
 8001a12:	b083      	sub	sp, #12
 8001a14:	f88d 0007 	strb.w	r0, [sp, #7]
 8001a18:	f88d 1006 	strb.w	r1, [sp, #6]
	Write_GPIO(PB, 12, LOW);
 8001a1c:	2200      	movs	r2, #0
 8001a1e:	210c      	movs	r1, #12
 8001a20:	2002      	movs	r0, #2
 8001a22:	f000 fa2f 	bl	8001e84 <Write_GPIO>
	SPI2_TX(&address, 1);  // send address
 8001a26:	2101      	movs	r1, #1
 8001a28:	f10d 0007 	add.w	r0, sp, #7
 8001a2c:	f000 fac2 	bl	8001fb4 <SPI2_TX>
	SPI2_TX(&value, 1);  // send value
 8001a30:	2101      	movs	r1, #1
 8001a32:	f10d 0006 	add.w	r0, sp, #6
 8001a36:	f000 fabd 	bl	8001fb4 <SPI2_TX>
	Write_GPIO(PB, 12, HIGH);
 8001a3a:	2201      	movs	r2, #1
 8001a3c:	210c      	movs	r1, #12
 8001a3e:	2002      	movs	r0, #2
 8001a40:	f000 fa20 	bl	8001e84 <Write_GPIO>
	HAL_Delay(20);
 8001a44:	2014      	movs	r0, #20
 8001a46:	f001 f8cb 	bl	8002be0 <HAL_Delay>
}
 8001a4a:	b003      	add	sp, #12
 8001a4c:	f85d fb04 	ldr.w	pc, [sp], #4

08001a50 <ICM20602_Remove_DC_Offset>:
{
 8001a50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001a54:	b084      	sub	sp, #16
 8001a56:	460d      	mov	r5, r1
	int16_t offset[3] = {0,0,0};
 8001a58:	2400      	movs	r4, #0
 8001a5a:	f8ad 4008 	strh.w	r4, [sp, #8]
 8001a5e:	f8ad 400a 	strh.w	r4, [sp, #10]
 8001a62:	f8ad 400c 	strh.w	r4, [sp, #12]
	for(i = 0; i < mean; i++)
 8001a66:	e027      	b.n	8001ab8 <ICM20602_Remove_DC_Offset+0x68>
		ICM20602_Read(ICM20602_REG_GYRO_XOUT_H, rxData, 6);
 8001a68:	2206      	movs	r2, #6
 8001a6a:	4669      	mov	r1, sp
 8001a6c:	2043      	movs	r0, #67	@ 0x43
 8001a6e:	f7ff ffaf 	bl	80019d0 <ICM20602_Read>
		offset[0] += (rxData[0] << 8) | rxData[1];
 8001a72:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8001a76:	f89d 1000 	ldrb.w	r1, [sp]
 8001a7a:	f89d 2001 	ldrb.w	r2, [sp, #1]
 8001a7e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8001a82:	4413      	add	r3, r2
 8001a84:	f8ad 3008 	strh.w	r3, [sp, #8]
		offset[1] += (rxData[2] << 8) | rxData[3];
 8001a88:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8001a8c:	f89d 1002 	ldrb.w	r1, [sp, #2]
 8001a90:	f89d 2003 	ldrb.w	r2, [sp, #3]
 8001a94:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8001a98:	4413      	add	r3, r2
 8001a9a:	f8ad 300a 	strh.w	r3, [sp, #10]
		offset[2] += (rxData[4] << 8) | rxData[5];
 8001a9e:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8001aa2:	f89d 1004 	ldrb.w	r1, [sp, #4]
 8001aa6:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8001aaa:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8001aae:	4413      	add	r3, r2
 8001ab0:	f8ad 300c 	strh.w	r3, [sp, #12]
	for(i = 0; i < mean; i++)
 8001ab4:	3401      	adds	r4, #1
 8001ab6:	b264      	sxtb	r4, r4
 8001ab8:	42ac      	cmp	r4, r5
 8001aba:	dbd5      	blt.n	8001a68 <ICM20602_Remove_DC_Offset+0x18>
	offset[0] /= mean;
 8001abc:	f9bd 7008 	ldrsh.w	r7, [sp, #8]
 8001ac0:	fb97 f7f5 	sdiv	r7, r7, r5
 8001ac4:	b239      	sxth	r1, r7
 8001ac6:	f8ad 1008 	strh.w	r1, [sp, #8]
	offset[1] /= mean;
 8001aca:	f9bd 600a 	ldrsh.w	r6, [sp, #10]
 8001ace:	fb96 f6f5 	sdiv	r6, r6, r5
 8001ad2:	fa0f f886 	sxth.w	r8, r6
 8001ad6:	f8ad 800a 	strh.w	r8, [sp, #10]
	offset[2] /= mean;
 8001ada:	f9bd 400c 	ldrsh.w	r4, [sp, #12]
 8001ade:	fb94 f4f5 	sdiv	r4, r4, r5
 8001ae2:	b225      	sxth	r5, r4
 8001ae4:	f8ad 500c 	strh.w	r5, [sp, #12]
	ICM20602_Write(ICM20602_REG_XG_OFFS_USRH, (offset[0]*-2)>>8);
 8001ae8:	ebc1 71c1 	rsb	r1, r1, r1, lsl #31
 8001aec:	f3c1 11c7 	ubfx	r1, r1, #7, #8
 8001af0:	2013      	movs	r0, #19
 8001af2:	f7ff ff8d 	bl	8001a10 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_XG_OFFS_USRL, offset[0]*-2);
 8001af6:	ebc7 17c7 	rsb	r7, r7, r7, lsl #7
 8001afa:	0079      	lsls	r1, r7, #1
 8001afc:	f001 01fe 	and.w	r1, r1, #254	@ 0xfe
 8001b00:	2014      	movs	r0, #20
 8001b02:	f7ff ff85 	bl	8001a10 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_YG_OFFS_USRH, (offset[1]*-2)>>8);
 8001b06:	ebc8 78c8 	rsb	r8, r8, r8, lsl #31
 8001b0a:	f3c8 11c7 	ubfx	r1, r8, #7, #8
 8001b0e:	2015      	movs	r0, #21
 8001b10:	f7ff ff7e 	bl	8001a10 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_YG_OFFS_USRL, offset[1]*-2);
 8001b14:	ebc6 16c6 	rsb	r6, r6, r6, lsl #7
 8001b18:	0071      	lsls	r1, r6, #1
 8001b1a:	f001 01fe 	and.w	r1, r1, #254	@ 0xfe
 8001b1e:	2016      	movs	r0, #22
 8001b20:	f7ff ff76 	bl	8001a10 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_ZG_OFFS_USRH, (offset[2]*-2)>>8);
 8001b24:	ebc5 75c5 	rsb	r5, r5, r5, lsl #31
 8001b28:	f3c5 11c7 	ubfx	r1, r5, #7, #8
 8001b2c:	2017      	movs	r0, #23
 8001b2e:	f7ff ff6f 	bl	8001a10 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_ZG_OFFS_USRL, offset[2]*-2);
 8001b32:	ebc4 14c4 	rsb	r4, r4, r4, lsl #7
 8001b36:	0061      	lsls	r1, r4, #1
 8001b38:	f001 01fe 	and.w	r1, r1, #254	@ 0xfe
 8001b3c:	2018      	movs	r0, #24
 8001b3e:	f7ff ff67 	bl	8001a10 <ICM20602_Write>
}
 8001b42:	b004      	add	sp, #16
 8001b44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08001b48 <ICM20602_Init>:
{
 8001b48:	b530      	push	{r4, r5, lr}
 8001b4a:	b083      	sub	sp, #12
 8001b4c:	4604      	mov	r4, r0
	dev->gyroXRaw = 	0.0f;
 8001b4e:	2500      	movs	r5, #0
 8001b50:	8005      	strh	r5, [r0, #0]
	dev->gyroYRaw = 	0.0f;
 8001b52:	8045      	strh	r5, [r0, #2]
	dev->gyroZRaw = 	0.0f;
 8001b54:	8085      	strh	r5, [r0, #4]
	dev->accXRaw = 		0.0f;
 8001b56:	80c5      	strh	r5, [r0, #6]
	dev->accYRaw = 		0.0f;
 8001b58:	8105      	strh	r5, [r0, #8]
	dev->accZRaw = 		0.0f;
 8001b5a:	8145      	strh	r5, [r0, #10]
	dev->temperatureC = 0.0f;
 8001b5c:	2300      	movs	r3, #0
 8001b5e:	6243      	str	r3, [r0, #36]	@ 0x24
	Init_GPIO(PA,  10, IN, I_PP); // Init GPIO for the interrupt
 8001b60:	2302      	movs	r3, #2
 8001b62:	462a      	mov	r2, r5
 8001b64:	210a      	movs	r1, #10
 8001b66:	2001      	movs	r0, #1
 8001b68:	f000 f942 	bl	8001df0 <Init_GPIO>
	ICM20602_Write(ICM20602_REG_PWR_MGMT_1, 0x80);
 8001b6c:	2180      	movs	r1, #128	@ 0x80
 8001b6e:	206b      	movs	r0, #107	@ 0x6b
 8001b70:	f7ff ff4e 	bl	8001a10 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_I2C_IF, 0x40);
 8001b74:	2140      	movs	r1, #64	@ 0x40
 8001b76:	2070      	movs	r0, #112	@ 0x70
 8001b78:	f7ff ff4a 	bl	8001a10 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_PWR_MGMT_1, 0x01);
 8001b7c:	2101      	movs	r1, #1
 8001b7e:	206b      	movs	r0, #107	@ 0x6b
 8001b80:	f7ff ff46 	bl	8001a10 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_SMPLRT_DIV, 0x00);
 8001b84:	4629      	mov	r1, r5
 8001b86:	2019      	movs	r0, #25
 8001b88:	f7ff ff42 	bl	8001a10 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_CONFIG, 0x05);
 8001b8c:	2105      	movs	r1, #5
 8001b8e:	201a      	movs	r0, #26
 8001b90:	f7ff ff3e 	bl	8001a10 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_GYRO_CONFIG, 0x018);
 8001b94:	2118      	movs	r1, #24
 8001b96:	201b      	movs	r0, #27
 8001b98:	f7ff ff3a 	bl	8001a10 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_ACCEL_CONFIG, 0x18);
 8001b9c:	2118      	movs	r1, #24
 8001b9e:	201c      	movs	r0, #28
 8001ba0:	f7ff ff36 	bl	8001a10 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_ACCEL_CONFIG2, 0x03); // Acc FCHOICE 1kHz(bit3-0), DLPF fc 44.8Hz(bit2:0-011)
 8001ba4:	2103      	movs	r1, #3
 8001ba6:	201d      	movs	r0, #29
 8001ba8:	f7ff ff32 	bl	8001a10 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_INT_ENABLE, 0x01);
 8001bac:	2101      	movs	r1, #1
 8001bae:	2038      	movs	r0, #56	@ 0x38
 8001bb0:	f7ff ff2e 	bl	8001a10 <ICM20602_Write>
	ICM20602_Read(ICM20602_REG_WHO_AM_I, rxData, 1);
 8001bb4:	2201      	movs	r2, #1
 8001bb6:	a901      	add	r1, sp, #4
 8001bb8:	2075      	movs	r0, #117	@ 0x75
 8001bba:	f7ff ff09 	bl	80019d0 <ICM20602_Read>
	ICM20602_Read(ICM20602_REG_I2C_IF, rxData, 1);
 8001bbe:	2201      	movs	r2, #1
 8001bc0:	a901      	add	r1, sp, #4
 8001bc2:	2070      	movs	r0, #112	@ 0x70
 8001bc4:	f7ff ff04 	bl	80019d0 <ICM20602_Read>
	ICM20602_Read(ICM20602_REG_PWR_MGMT_1, rxData, 1);
 8001bc8:	2201      	movs	r2, #1
 8001bca:	a901      	add	r1, sp, #4
 8001bcc:	206b      	movs	r0, #107	@ 0x6b
 8001bce:	f7ff feff 	bl	80019d0 <ICM20602_Read>
	ICM20602_Read(ICM20602_REG_SMPLRT_DIV, rxData, 1);
 8001bd2:	2201      	movs	r2, #1
 8001bd4:	a901      	add	r1, sp, #4
 8001bd6:	2019      	movs	r0, #25
 8001bd8:	f7ff fefa 	bl	80019d0 <ICM20602_Read>
	ICM20602_Read(ICM20602_REG_CONFIG, rxData, 1);
 8001bdc:	2201      	movs	r2, #1
 8001bde:	a901      	add	r1, sp, #4
 8001be0:	201a      	movs	r0, #26
 8001be2:	f7ff fef5 	bl	80019d0 <ICM20602_Read>
	ICM20602_Read(ICM20602_REG_ACCEL_CONFIG, rxData, 1);
 8001be6:	2201      	movs	r2, #1
 8001be8:	a901      	add	r1, sp, #4
 8001bea:	201c      	movs	r0, #28
 8001bec:	f7ff fef0 	bl	80019d0 <ICM20602_Read>
	ICM20602_Read(ICM20602_REG_ACCEL_CONFIG2, rxData, 1);
 8001bf0:	2201      	movs	r2, #1
 8001bf2:	a901      	add	r1, sp, #4
 8001bf4:	201d      	movs	r0, #29
 8001bf6:	f7ff feeb 	bl	80019d0 <ICM20602_Read>
	ICM20602_Remove_DC_Offset(dev,2);
 8001bfa:	2102      	movs	r1, #2
 8001bfc:	4620      	mov	r0, r4
 8001bfe:	f7ff ff27 	bl	8001a50 <ICM20602_Remove_DC_Offset>
}
 8001c02:	4628      	mov	r0, r5
 8001c04:	b003      	add	sp, #12
 8001c06:	bd30      	pop	{r4, r5, pc}

08001c08 <L76LM33_SendCommand>:
	return 1; // OK
}

uint8_t L76LM33_SendCommand(unsigned short usart_port, char *command) {

    if (command == NULL) {
 8001c08:	b161      	cbz	r1, 8001c24 <L76LM33_SendCommand+0x1c>
uint8_t L76LM33_SendCommand(unsigned short usart_port, char *command) {
 8001c0a:	b538      	push	{r3, r4, r5, lr}
 8001c0c:	4604      	mov	r4, r0
 8001c0e:	460d      	mov	r5, r1
        return 0; // Error
    }
    USART_TX(usart_port, (uint8_t*)command, strlen(command));
 8001c10:	4608      	mov	r0, r1
 8001c12:	f7fe fa9d 	bl	8000150 <strlen>
 8001c16:	4602      	mov	r2, r0
 8001c18:	4629      	mov	r1, r5
 8001c1a:	4620      	mov	r0, r4
 8001c1c:	f000 fa6e 	bl	80020fc <USART_TX>
    return 1; // OK
 8001c20:	2001      	movs	r0, #1
}
 8001c22:	bd38      	pop	{r3, r4, r5, pc}
        return 0; // Error
 8001c24:	2000      	movs	r0, #0
}
 8001c26:	4770      	bx	lr

08001c28 <L76LM33_Init>:
uint8_t L76LM33_Init (unsigned short usart_port) {
 8001c28:	b530      	push	{r4, r5, lr}
 8001c2a:	b095      	sub	sp, #84	@ 0x54
 8001c2c:	4605      	mov	r5, r0
	char PROTOCOL_SETRMS[] = "$PMTK314,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0*35\r\n";
 8001c2e:	f10d 0c14 	add.w	ip, sp, #20
 8001c32:	4c11      	ldr	r4, [pc, #68]	@ (8001c78 <L76LM33_Init+0x50>)
 8001c34:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001c36:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8001c3a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001c3c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8001c40:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001c42:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8001c46:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8001c4a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8001c4e:	f8ac 2000 	strh.w	r2, [ip]
	char PROTOCOL_NAVMODE[] = "PMTK886,2*2A\r\n";
 8001c52:	4b0a      	ldr	r3, [pc, #40]	@ (8001c7c <L76LM33_Init+0x54>)
 8001c54:	ac01      	add	r4, sp, #4
 8001c56:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001c58:	c407      	stmia	r4!, {r0, r1, r2}
 8001c5a:	f824 3b02 	strh.w	r3, [r4], #2
 8001c5e:	0c1b      	lsrs	r3, r3, #16
 8001c60:	7023      	strb	r3, [r4, #0]
	L76LM33_SendCommand(usart_port, PROTOCOL_SETRMS);
 8001c62:	a905      	add	r1, sp, #20
 8001c64:	4628      	mov	r0, r5
 8001c66:	f7ff ffcf 	bl	8001c08 <L76LM33_SendCommand>
	L76LM33_SendCommand(usart_port, PROTOCOL_NAVMODE);
 8001c6a:	a901      	add	r1, sp, #4
 8001c6c:	4628      	mov	r0, r5
 8001c6e:	f7ff ffcb 	bl	8001c08 <L76LM33_SendCommand>
}
 8001c72:	2001      	movs	r0, #1
 8001c74:	b015      	add	sp, #84	@ 0x54
 8001c76:	bd30      	pop	{r4, r5, pc}
 8001c78:	08008054 	.word	0x08008054
 8001c7c:	08008090 	.word	0x08008090

08001c80 <Pyro_Init>:
 *      Author: gagno
 */

#include "GAUL_Drivers/Pyros.h"

void Pyro_Init(void) {
 8001c80:	b508      	push	{r3, lr}
	// Pyros
	Init_GPIO(PB, 4, OUT2, O_GP_PP); // PyroON0
 8001c82:	2300      	movs	r3, #0
 8001c84:	2202      	movs	r2, #2
 8001c86:	2104      	movs	r1, #4
 8001c88:	4610      	mov	r0, r2
 8001c8a:	f000 f8b1 	bl	8001df0 <Init_GPIO>
	Init_GPIO(PB, 5, OUT2, O_GP_PP); // PyroON1
 8001c8e:	2300      	movs	r3, #0
 8001c90:	2202      	movs	r2, #2
 8001c92:	2105      	movs	r1, #5
 8001c94:	4610      	mov	r0, r2
 8001c96:	f000 f8ab 	bl	8001df0 <Init_GPIO>
	Init_GPIO(PA, 15, OUT2, O_GP_PP); // Pyro_Test~
 8001c9a:	2300      	movs	r3, #0
 8001c9c:	2202      	movs	r2, #2
 8001c9e:	210f      	movs	r1, #15
 8001ca0:	2001      	movs	r0, #1
 8001ca2:	f000 f8a5 	bl	8001df0 <Init_GPIO>
	// Set Pyro_Test~ (inverse) et Pyros_ON LOW
	Write_GPIO(PA, 15, HIGH);
 8001ca6:	2201      	movs	r2, #1
 8001ca8:	210f      	movs	r1, #15
 8001caa:	4610      	mov	r0, r2
 8001cac:	f000 f8ea 	bl	8001e84 <Write_GPIO>
	Write_GPIO(PB, 4, LOW);
 8001cb0:	2200      	movs	r2, #0
 8001cb2:	2104      	movs	r1, #4
 8001cb4:	2002      	movs	r0, #2
 8001cb6:	f000 f8e5 	bl	8001e84 <Write_GPIO>
	Write_GPIO(PB, 5, LOW);
 8001cba:	2200      	movs	r2, #0
 8001cbc:	2105      	movs	r1, #5
 8001cbe:	2002      	movs	r0, #2
 8001cc0:	f000 f8e0 	bl	8001e84 <Write_GPIO>
}
 8001cc4:	bd08      	pop	{r3, pc}
	...

08001cc8 <ws2812_timer2_init>:
static uint16_t ws2812_gpio_set_bits = 0;
static uint16_t dma_buffer[DMA_BUFFER_SIZE];


static void ws2812_timer2_init(void)
{
 8001cc8:	b570      	push	{r4, r5, r6, lr}
 8001cca:	b08e      	sub	sp, #56	@ 0x38
    TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001ccc:	2400      	movs	r4, #0
 8001cce:	940a      	str	r4, [sp, #40]	@ 0x28
 8001cd0:	940b      	str	r4, [sp, #44]	@ 0x2c
 8001cd2:	940c      	str	r4, [sp, #48]	@ 0x30
 8001cd4:	940d      	str	r4, [sp, #52]	@ 0x34
    TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001cd6:	9408      	str	r4, [sp, #32]
 8001cd8:	9409      	str	r4, [sp, #36]	@ 0x24
    TIM_OC_InitTypeDef sConfigOC = {0};
 8001cda:	9401      	str	r4, [sp, #4]
 8001cdc:	9402      	str	r4, [sp, #8]
 8001cde:	9403      	str	r4, [sp, #12]
 8001ce0:	9404      	str	r4, [sp, #16]
 8001ce2:	9405      	str	r4, [sp, #20]
 8001ce4:	9406      	str	r4, [sp, #24]
 8001ce6:	9407      	str	r4, [sp, #28]

    htimer2.Instance = TIM2;
 8001ce8:	4d1a      	ldr	r5, [pc, #104]	@ (8001d54 <ws2812_timer2_init+0x8c>)
 8001cea:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001cee:	602b      	str	r3, [r5, #0]
    htimer2.Init.Prescaler = 0;
 8001cf0:	606c      	str	r4, [r5, #4]
    htimer2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001cf2:	60ac      	str	r4, [r5, #8]
    htimer2.Init.Period = WS2812_TIMER_PERIOD;
 8001cf4:	235a      	movs	r3, #90	@ 0x5a
 8001cf6:	60eb      	str	r3, [r5, #12]

    htimer2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001cf8:	612c      	str	r4, [r5, #16]
    htimer2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001cfa:	61ac      	str	r4, [r5, #24]
    HAL_TIM_Base_Init(&htimer2);
 8001cfc:	4628      	mov	r0, r5
 8001cfe:	f002 fc9b 	bl	8004638 <HAL_TIM_Base_Init>

    sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001d02:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001d06:	930a      	str	r3, [sp, #40]	@ 0x28
    HAL_TIM_ConfigClockSource(&htimer2, &sClockSourceConfig);
 8001d08:	a90a      	add	r1, sp, #40	@ 0x28
 8001d0a:	4628      	mov	r0, r5
 8001d0c:	f002 ff04 	bl	8004b18 <HAL_TIM_ConfigClockSource>
    HAL_TIM_PWM_Init(&htimer2);
 8001d10:	4628      	mov	r0, r5
 8001d12:	f002 fce0 	bl	80046d6 <HAL_TIM_PWM_Init>
    sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001d16:	9408      	str	r4, [sp, #32]
    sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001d18:	9409      	str	r4, [sp, #36]	@ 0x24
    HAL_TIMEx_MasterConfigSynchronization(&htimer2, &sMasterConfig);
 8001d1a:	a908      	add	r1, sp, #32
 8001d1c:	4628      	mov	r0, r5
 8001d1e:	f003 fa67 	bl	80051f0 <HAL_TIMEx_MasterConfigSynchronization>

    sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001d22:	2660      	movs	r6, #96	@ 0x60
 8001d24:	9601      	str	r6, [sp, #4]

    sConfigOC.Pulse = WS2812_TIMER_PWM_CH1_TIME;
 8001d26:	231c      	movs	r3, #28
 8001d28:	9302      	str	r3, [sp, #8]
    sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001d2a:	9403      	str	r4, [sp, #12]
    sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001d2c:	9405      	str	r4, [sp, #20]
    HAL_TIM_PWM_ConfigChannel(&htimer2, &sConfigOC, TIM_CHANNEL_1);
 8001d2e:	4622      	mov	r2, r4
 8001d30:	a901      	add	r1, sp, #4
 8001d32:	4628      	mov	r0, r5
 8001d34:	f002 fe2e 	bl	8004994 <HAL_TIM_PWM_ConfigChannel>
    sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001d38:	9601      	str	r6, [sp, #4]

    sConfigOC.Pulse = WS2812_TIMER_PWM_CH2_TIME;
 8001d3a:	2339      	movs	r3, #57	@ 0x39
 8001d3c:	9302      	str	r3, [sp, #8]
    sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001d3e:	9403      	str	r4, [sp, #12]
    sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001d40:	9405      	str	r4, [sp, #20]
    HAL_TIM_PWM_ConfigChannel(&htimer2, &sConfigOC, TIM_CHANNEL_2);
 8001d42:	2204      	movs	r2, #4
 8001d44:	eb0d 0102 	add.w	r1, sp, r2
 8001d48:	4628      	mov	r0, r5
 8001d4a:	f002 fe23 	bl	8004994 <HAL_TIM_PWM_ConfigChannel>
}
 8001d4e:	b00e      	add	sp, #56	@ 0x38
 8001d50:	bd70      	pop	{r4, r5, r6, pc}
 8001d52:	bf00      	nop
 8001d54:	20000204 	.word	0x20000204

08001d58 <WS2812_Init>:
	__HAL_DMA_DISABLE(&hdma_tim2_pwm_ch1);
	__HAL_DMA_DISABLE(&hdma_tim2_pwm_ch2);
}

void WS2812_Init()
{
 8001d58:	b500      	push	{lr}
 8001d5a:	b083      	sub	sp, #12
    /* DMA controller clock enable */
    __HAL_RCC_DMA1_CLK_ENABLE();
 8001d5c:	4b0e      	ldr	r3, [pc, #56]	@ (8001d98 <WS2812_Init+0x40>)
 8001d5e:	695a      	ldr	r2, [r3, #20]
 8001d60:	f042 0201 	orr.w	r2, r2, #1
 8001d64:	615a      	str	r2, [r3, #20]
 8001d66:	695b      	ldr	r3, [r3, #20]
 8001d68:	f003 0301 	and.w	r3, r3, #1
 8001d6c:	9301      	str	r3, [sp, #4]
 8001d6e:	9b01      	ldr	r3, [sp, #4]

    /* DMA interrupt init, not that we're using it... */
    HAL_NVIC_SetPriority(DMA1_Channel2_IRQn, 0, 0);
 8001d70:	2200      	movs	r2, #0
 8001d72:	4611      	mov	r1, r2
 8001d74:	200c      	movs	r0, #12
 8001d76:	f001 fd18 	bl	80037aa <HAL_NVIC_SetPriority>
    HAL_NVIC_SetPriority(DMA1_Channel5_IRQn, 0, 0);
 8001d7a:	2200      	movs	r2, #0
 8001d7c:	4611      	mov	r1, r2
 8001d7e:	200f      	movs	r0, #15
 8001d80:	f001 fd13 	bl	80037aa <HAL_NVIC_SetPriority>
    HAL_NVIC_SetPriority(DMA1_Channel7_IRQn, 0, 0);
 8001d84:	2200      	movs	r2, #0
 8001d86:	4611      	mov	r1, r2
 8001d88:	2011      	movs	r0, #17
 8001d8a:	f001 fd0e 	bl	80037aa <HAL_NVIC_SetPriority>

    ws2812_timer2_init();
 8001d8e:	f7ff ff9b 	bl	8001cc8 <ws2812_timer2_init>
}
 8001d92:	b003      	add	sp, #12
 8001d94:	f85d fb04 	ldr.w	pc, [sp], #4
 8001d98:	40021000 	.word	0x40021000

08001d9c <ADC_Start>:


#include "GAUL_Drivers/Low_Level_Drivers/ADC_driver.h"


uint8_t ADC_Start(ADC_HandleTypeDef *hadc) {
 8001d9c:	b508      	push	{r3, lr}

	HAL_ADC_Start(hadc);
 8001d9e:	f001 f81b 	bl	8002dd8 <HAL_ADC_Start>
	return 1; // OK
}
 8001da2:	2001      	movs	r0, #1
 8001da4:	bd08      	pop	{r3, pc}

08001da6 <ADC_Calibration>:

uint8_t ADC_Calibration(ADC_HandleTypeDef *hadc) {
 8001da6:	b508      	push	{r3, lr}

	HAL_ADCEx_Calibration_Start(hadc);
 8001da8:	f001 fb96 	bl	80034d8 <HAL_ADCEx_Calibration_Start>
	return 1; // OK
}
 8001dac:	2001      	movs	r0, #1
 8001dae:	bd08      	pop	{r3, pc}

08001db0 <ADC_Stop>:

uint8_t ADC_Stop(ADC_HandleTypeDef *hadc) {
 8001db0:	b508      	push	{r3, lr}

	HAL_ADC_Stop(hadc);
 8001db2:	f001 f8bf 	bl	8002f34 <HAL_ADC_Stop>
	return 1; // OK
}
 8001db6:	2001      	movs	r0, #1
 8001db8:	bd08      	pop	{r3, pc}
	...

08001dbc <ADC_Sampling>:

uint32_t ADC_Sampling (ADC_HandleTypeDef *hadc) {
 8001dbc:	b538      	push	{r3, r4, r5, lr}

	if (!(ADC1->CR2 & ADC_CR2_ADON)) {
 8001dbe:	4b0b      	ldr	r3, [pc, #44]	@ (8001dec <ADC_Sampling+0x30>)
 8001dc0:	689b      	ldr	r3, [r3, #8]
 8001dc2:	f013 0f01 	tst.w	r3, #1
 8001dc6:	d00d      	beq.n	8001de4 <ADC_Sampling+0x28>
 8001dc8:	4604      	mov	r4, r0
		return 0xFFFF;
	}
	HAL_ADC_PollForConversion(hadc, HAL_MAX_DELAY); // Timeout peut etre ajuste
 8001dca:	f04f 31ff 	mov.w	r1, #4294967295
 8001dce:	f001 f8dd 	bl	8002f8c <HAL_ADC_PollForConversion>
	uint32_t adc_value = HAL_ADC_GetValue(hadc);
 8001dd2:	4620      	mov	r0, r4
 8001dd4:	f001 f9e0 	bl	8003198 <HAL_ADC_GetValue>
 8001dd8:	4605      	mov	r5, r0
	HAL_ADC_Stop(hadc);
 8001dda:	4620      	mov	r0, r4
 8001ddc:	f001 f8aa 	bl	8002f34 <HAL_ADC_Stop>

	return adc_value;
}
 8001de0:	4628      	mov	r0, r5
 8001de2:	bd38      	pop	{r3, r4, r5, pc}
		return 0xFFFF;
 8001de4:	f64f 75ff 	movw	r5, #65535	@ 0xffff
 8001de8:	e7fa      	b.n	8001de0 <ADC_Sampling+0x24>
 8001dea:	bf00      	nop
 8001dec:	40012400 	.word	0x40012400

08001df0 <Init_GPIO>:
#include "GAUL_Drivers/Low_Level_Drivers/GPIO_driver.h"

void Init_GPIO(unsigned short port, unsigned short pin, unsigned short dir, unsigned short opt)
{
 8001df0:	b510      	push	{r4, lr}
 volatile unsigned long * CR;
 unsigned short tPIN = pin;
 unsigned short offset = 0x00;

	if(pin > 7)
 8001df2:	2907      	cmp	r1, #7
 8001df4:	d904      	bls.n	8001e00 <Init_GPIO+0x10>
		{
			tPIN -= 8;
 8001df6:	3908      	subs	r1, #8
 8001df8:	b289      	uxth	r1, r1
			offset = 0x01;
 8001dfa:	f04f 0e01 	mov.w	lr, #1
 8001dfe:	e001      	b.n	8001e04 <Init_GPIO+0x14>
 unsigned short offset = 0x00;
 8001e00:	f04f 0e00 	mov.w	lr, #0
		}

	if(port == 1)
 8001e04:	2801      	cmp	r0, #1
 8001e06:	d00f      	beq.n	8001e28 <Init_GPIO+0x38>
		{
			RCC_APB2ENR |= 4; //// Enabling PORT A
			CR = (volatile unsigned long *) (&GPIO_A + offset);
		}
	else if(port == 2)
 8001e08:	2802      	cmp	r0, #2
 8001e0a:	d02d      	beq.n	8001e68 <Init_GPIO+0x78>
		{
			RCC_APB2ENR |= 8; //// Enabling PORT A
			CR = (volatile unsigned long *) (&GPIO_B + offset);
		}
	else if(port == 3)
 8001e0c:	2803      	cmp	r0, #3
 8001e0e:	d116      	bne.n	8001e3e <Init_GPIO+0x4e>
		{
			RCC_APB2ENR |= 0x10; //// Enabling PORT A
 8001e10:	4c1b      	ldr	r4, [pc, #108]	@ (8001e80 <Init_GPIO+0x90>)
 8001e12:	69a0      	ldr	r0, [r4, #24]
 8001e14:	f040 0010 	orr.w	r0, r0, #16
 8001e18:	61a0      	str	r0, [r4, #24]
			CR = (volatile unsigned long *) (&GPIO_C + offset);
 8001e1a:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8001e1e:	f10e 4c80 	add.w	ip, lr, #1073741824	@ 0x40000000
 8001e22:	f50c 3c88 	add.w	ip, ip, #69632	@ 0x11000
 8001e26:	e00a      	b.n	8001e3e <Init_GPIO+0x4e>
			RCC_APB2ENR |= 4; //// Enabling PORT A
 8001e28:	4c15      	ldr	r4, [pc, #84]	@ (8001e80 <Init_GPIO+0x90>)
 8001e2a:	69a0      	ldr	r0, [r4, #24]
 8001e2c:	f040 0004 	orr.w	r0, r0, #4
 8001e30:	61a0      	str	r0, [r4, #24]
			CR = (volatile unsigned long *) (&GPIO_A + offset);
 8001e32:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8001e36:	f10e 4c80 	add.w	ip, lr, #1073741824	@ 0x40000000
 8001e3a:	f50c 3c84 	add.w	ip, ip, #67584	@ 0x10800
		}

		*CR &= ~(0xf<<(tPIN)*4); ///Reset the taget pin
 8001e3e:	f8dc 0000 	ldr.w	r0, [ip]
 8001e42:	0089      	lsls	r1, r1, #2
 8001e44:	f04f 0e0f 	mov.w	lr, #15
 8001e48:	fa0e fe01 	lsl.w	lr, lr, r1
 8001e4c:	ea20 000e 	bic.w	r0, r0, lr
 8001e50:	f8cc 0000 	str.w	r0, [ip]
		*CR |= ((dir <<(tPIN*4)) | (opt<<(tPIN*4+2))); //// Set up the direction and the option of the PIN
 8001e54:	f8dc 0000 	ldr.w	r0, [ip]
 8001e58:	408a      	lsls	r2, r1
 8001e5a:	3102      	adds	r1, #2
 8001e5c:	408b      	lsls	r3, r1
 8001e5e:	431a      	orrs	r2, r3
 8001e60:	4302      	orrs	r2, r0
 8001e62:	f8cc 2000 	str.w	r2, [ip]
}
 8001e66:	bd10      	pop	{r4, pc}
			RCC_APB2ENR |= 8; //// Enabling PORT A
 8001e68:	4c05      	ldr	r4, [pc, #20]	@ (8001e80 <Init_GPIO+0x90>)
 8001e6a:	69a0      	ldr	r0, [r4, #24]
 8001e6c:	f040 0008 	orr.w	r0, r0, #8
 8001e70:	61a0      	str	r0, [r4, #24]
			CR = (volatile unsigned long *) (&GPIO_B + offset);
 8001e72:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8001e76:	f10e 4c80 	add.w	ip, lr, #1073741824	@ 0x40000000
 8001e7a:	f50c 3c86 	add.w	ip, ip, #68608	@ 0x10c00
 8001e7e:	e7de      	b.n	8001e3e <Init_GPIO+0x4e>
 8001e80:	40021000 	.word	0x40021000

08001e84 <Write_GPIO>:
{
		volatile unsigned long * ODR;
		unsigned long offset = 0x03;


	if(port == 1)
 8001e84:	2801      	cmp	r0, #1
 8001e86:	d005      	beq.n	8001e94 <Write_GPIO+0x10>
		{
			ODR = (volatile unsigned long *) (&GPIO_A + offset);
		}
	else if(port == 2)
 8001e88:	2802      	cmp	r0, #2
 8001e8a:	d00a      	beq.n	8001ea2 <Write_GPIO+0x1e>
		{
			ODR = (volatile unsigned long *) (&GPIO_B + offset);
		}
	else if(port == 3)
 8001e8c:	2803      	cmp	r0, #3
 8001e8e:	d102      	bne.n	8001e96 <Write_GPIO+0x12>
	{
		ODR = (volatile unsigned long *) (&GPIO_C + offset);
 8001e90:	4b09      	ldr	r3, [pc, #36]	@ (8001eb8 <Write_GPIO+0x34>)
 8001e92:	e000      	b.n	8001e96 <Write_GPIO+0x12>
			ODR = (volatile unsigned long *) (&GPIO_A + offset);
 8001e94:	4b09      	ldr	r3, [pc, #36]	@ (8001ebc <Write_GPIO+0x38>)
	}
	state ? (*ODR |= (state<<pin)) : (*ODR &= ~(1<<pin));
 8001e96:	b132      	cbz	r2, 8001ea6 <Write_GPIO+0x22>
 8001e98:	6818      	ldr	r0, [r3, #0]
 8001e9a:	408a      	lsls	r2, r1
 8001e9c:	4302      	orrs	r2, r0
 8001e9e:	601a      	str	r2, [r3, #0]
 8001ea0:	4770      	bx	lr
			ODR = (volatile unsigned long *) (&GPIO_B + offset);
 8001ea2:	4b07      	ldr	r3, [pc, #28]	@ (8001ec0 <Write_GPIO+0x3c>)
 8001ea4:	e7f7      	b.n	8001e96 <Write_GPIO+0x12>
	state ? (*ODR |= (state<<pin)) : (*ODR &= ~(1<<pin));
 8001ea6:	681a      	ldr	r2, [r3, #0]
 8001ea8:	2001      	movs	r0, #1
 8001eaa:	fa00 f101 	lsl.w	r1, r0, r1
 8001eae:	ea22 0201 	bic.w	r2, r2, r1
 8001eb2:	601a      	str	r2, [r3, #0]
}
 8001eb4:	4770      	bx	lr
 8001eb6:	bf00      	nop
 8001eb8:	4001100c 	.word	0x4001100c
 8001ebc:	4001080c 	.word	0x4001080c
 8001ec0:	40010c0c 	.word	0x40010c0c

08001ec4 <Delay_Wait>:

#include "GAUL_Drivers/Low_Level_Drivers/NonBlockingDelay_driver.h"

uint32_t lastGetTick = 0;

bool Delay_Wait(uint32_t delay) {
 8001ec4:	b510      	push	{r4, lr}
 8001ec6:	4604      	mov	r4, r0

	if((HAL_GetTick() - lastGetTick) >= delay) {
 8001ec8:	f000 fe80 	bl	8002bcc <HAL_GetTick>
 8001ecc:	4b06      	ldr	r3, [pc, #24]	@ (8001ee8 <Delay_Wait+0x24>)
 8001ece:	681b      	ldr	r3, [r3, #0]
 8001ed0:	1ac0      	subs	r0, r0, r3
 8001ed2:	42a0      	cmp	r0, r4
 8001ed4:	d201      	bcs.n	8001eda <Delay_Wait+0x16>
		lastGetTick = HAL_GetTick();
		return true;
	} else {
		return false;
 8001ed6:	2000      	movs	r0, #0
	}
}
 8001ed8:	bd10      	pop	{r4, pc}
		lastGetTick = HAL_GetTick();
 8001eda:	f000 fe77 	bl	8002bcc <HAL_GetTick>
 8001ede:	4b02      	ldr	r3, [pc, #8]	@ (8001ee8 <Delay_Wait+0x24>)
 8001ee0:	6018      	str	r0, [r3, #0]
		return true;
 8001ee2:	2001      	movs	r0, #1
 8001ee4:	e7f8      	b.n	8001ed8 <Delay_Wait+0x14>
 8001ee6:	bf00      	nop
 8001ee8:	2000024c 	.word	0x2000024c

08001eec <SPI_Init>:

#include "main.h"
#include "GAUL_Drivers/Low_Level_Drivers/GPIO_driver.h"
#include "GAUL_Drivers/Low_Level_Drivers/SPI_driver.h"

void SPI_Init(unsigned short spi) {
 8001eec:	b508      	push	{r3, lr}
    if(spi == 1) {
 8001eee:	2801      	cmp	r0, #1
 8001ef0:	d002      	beq.n	8001ef8 <SPI_Init+0xc>
        Init_GPIO(PA, 7, OUT50, O_AF_PP); // MOSI SPI1

        Write_GPIO(PA, 4, HIGH);

        SPI1->CR1 = SPI_CR1_MSTR | SPI_CR1_BR_1 | SPI_CR1_BR_2 | SPI_CR1_SSM | SPI_CR1_SSI | SPI_CR1_SPE;
    } else if(spi == 2) {
 8001ef2:	2802      	cmp	r0, #2
 8001ef4:	d026      	beq.n	8001f44 <SPI_Init+0x58>
        Write_GPIO(PA, 8, HIGH);
        Write_GPIO(PB, 12, HIGH);

        SPI2->CR1 = SPI_CR1_MSTR | SPI_CR1_BR_1 | SPI_CR1_BR_2 | SPI_CR1_SSM | SPI_CR1_SSI | SPI_CR1_SPE;
    }
}
 8001ef6:	bd08      	pop	{r3, pc}
        RCC->APB2ENR |= RCC_APB2ENR_SPI1EN;
 8001ef8:	4a2b      	ldr	r2, [pc, #172]	@ (8001fa8 <SPI_Init+0xbc>)
 8001efa:	6993      	ldr	r3, [r2, #24]
 8001efc:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8001f00:	6193      	str	r3, [r2, #24]
        Init_GPIO(PA, 4, OUT50, O_GP_PP); // CS
 8001f02:	2300      	movs	r3, #0
 8001f04:	2203      	movs	r2, #3
 8001f06:	2104      	movs	r1, #4
 8001f08:	f7ff ff72 	bl	8001df0 <Init_GPIO>
        Init_GPIO(PA, 5, OUT50, O_AF_PP); // CLK
 8001f0c:	2302      	movs	r3, #2
 8001f0e:	2203      	movs	r2, #3
 8001f10:	2105      	movs	r1, #5
 8001f12:	2001      	movs	r0, #1
 8001f14:	f7ff ff6c 	bl	8001df0 <Init_GPIO>
        Init_GPIO(PA, 6, IN, I_PP);    // MISO SPI1
 8001f18:	2302      	movs	r3, #2
 8001f1a:	2200      	movs	r2, #0
 8001f1c:	2106      	movs	r1, #6
 8001f1e:	2001      	movs	r0, #1
 8001f20:	f7ff ff66 	bl	8001df0 <Init_GPIO>
        Init_GPIO(PA, 7, OUT50, O_AF_PP); // MOSI SPI1
 8001f24:	2302      	movs	r3, #2
 8001f26:	2203      	movs	r2, #3
 8001f28:	2107      	movs	r1, #7
 8001f2a:	2001      	movs	r0, #1
 8001f2c:	f7ff ff60 	bl	8001df0 <Init_GPIO>
        Write_GPIO(PA, 4, HIGH);
 8001f30:	2201      	movs	r2, #1
 8001f32:	2104      	movs	r1, #4
 8001f34:	4610      	mov	r0, r2
 8001f36:	f7ff ffa5 	bl	8001e84 <Write_GPIO>
        SPI1->CR1 = SPI_CR1_MSTR | SPI_CR1_BR_1 | SPI_CR1_BR_2 | SPI_CR1_SSM | SPI_CR1_SSI | SPI_CR1_SPE;
 8001f3a:	4b1c      	ldr	r3, [pc, #112]	@ (8001fac <SPI_Init+0xc0>)
 8001f3c:	f44f 725d 	mov.w	r2, #884	@ 0x374
 8001f40:	601a      	str	r2, [r3, #0]
 8001f42:	e7d8      	b.n	8001ef6 <SPI_Init+0xa>
        RCC->APB1ENR |= RCC_APB1ENR_SPI2EN;
 8001f44:	4a18      	ldr	r2, [pc, #96]	@ (8001fa8 <SPI_Init+0xbc>)
 8001f46:	69d3      	ldr	r3, [r2, #28]
 8001f48:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001f4c:	61d3      	str	r3, [r2, #28]
        Init_GPIO(PA, 8, OUT50, O_GP_PP); // CS (optionnel)
 8001f4e:	2300      	movs	r3, #0
 8001f50:	2203      	movs	r2, #3
 8001f52:	2108      	movs	r1, #8
 8001f54:	2001      	movs	r0, #1
 8001f56:	f7ff ff4b 	bl	8001df0 <Init_GPIO>
        Init_GPIO(PB, 12, OUT50, O_GP_PP); // CS
 8001f5a:	2300      	movs	r3, #0
 8001f5c:	2203      	movs	r2, #3
 8001f5e:	210c      	movs	r1, #12
 8001f60:	2002      	movs	r0, #2
 8001f62:	f7ff ff45 	bl	8001df0 <Init_GPIO>
        Init_GPIO(PB, 13, OUT50, O_AF_PP); // CLK
 8001f66:	2302      	movs	r3, #2
 8001f68:	2203      	movs	r2, #3
 8001f6a:	210d      	movs	r1, #13
 8001f6c:	4618      	mov	r0, r3
 8001f6e:	f7ff ff3f 	bl	8001df0 <Init_GPIO>
        Init_GPIO(PB, 14, IN, I_PP);    // MISO SPI2
 8001f72:	2302      	movs	r3, #2
 8001f74:	2200      	movs	r2, #0
 8001f76:	210e      	movs	r1, #14
 8001f78:	4618      	mov	r0, r3
 8001f7a:	f7ff ff39 	bl	8001df0 <Init_GPIO>
        Init_GPIO(PB, 15, OUT50, O_AF_PP); // MOSI SPI2
 8001f7e:	2302      	movs	r3, #2
 8001f80:	2203      	movs	r2, #3
 8001f82:	210f      	movs	r1, #15
 8001f84:	4618      	mov	r0, r3
 8001f86:	f7ff ff33 	bl	8001df0 <Init_GPIO>
        Write_GPIO(PA, 8, HIGH);
 8001f8a:	2201      	movs	r2, #1
 8001f8c:	2108      	movs	r1, #8
 8001f8e:	4610      	mov	r0, r2
 8001f90:	f7ff ff78 	bl	8001e84 <Write_GPIO>
        Write_GPIO(PB, 12, HIGH);
 8001f94:	2201      	movs	r2, #1
 8001f96:	210c      	movs	r1, #12
 8001f98:	2002      	movs	r0, #2
 8001f9a:	f7ff ff73 	bl	8001e84 <Write_GPIO>
        SPI2->CR1 = SPI_CR1_MSTR | SPI_CR1_BR_1 | SPI_CR1_BR_2 | SPI_CR1_SSM | SPI_CR1_SSI | SPI_CR1_SPE;
 8001f9e:	4b04      	ldr	r3, [pc, #16]	@ (8001fb0 <SPI_Init+0xc4>)
 8001fa0:	f44f 725d 	mov.w	r2, #884	@ 0x374
 8001fa4:	601a      	str	r2, [r3, #0]
}
 8001fa6:	e7a6      	b.n	8001ef6 <SPI_Init+0xa>
 8001fa8:	40021000 	.word	0x40021000
 8001fac:	40013000 	.word	0x40013000
 8001fb0:	40003800 	.word	0x40003800

08001fb4 <SPI2_TX>:

    uint8_t temp = SPI1->DR;
    temp = SPI1->SR;
}

void SPI2_TX(uint8_t *data, int size) {
 8001fb4:	468c      	mov	ip, r1

    for (int i = 0; i < size; ++i) {
 8001fb6:	2200      	movs	r2, #0
 8001fb8:	e008      	b.n	8001fcc <SPI2_TX+0x18>
        while (!(SPI2->SR & SPI_SR_TXE)) {}
 8001fba:	4b0c      	ldr	r3, [pc, #48]	@ (8001fec <SPI2_TX+0x38>)
 8001fbc:	689b      	ldr	r3, [r3, #8]
 8001fbe:	f013 0f02 	tst.w	r3, #2
 8001fc2:	d0fa      	beq.n	8001fba <SPI2_TX+0x6>
        SPI2->DR = data[i];
 8001fc4:	5c81      	ldrb	r1, [r0, r2]
 8001fc6:	4b09      	ldr	r3, [pc, #36]	@ (8001fec <SPI2_TX+0x38>)
 8001fc8:	60d9      	str	r1, [r3, #12]
    for (int i = 0; i < size; ++i) {
 8001fca:	3201      	adds	r2, #1
 8001fcc:	4562      	cmp	r2, ip
 8001fce:	dbf4      	blt.n	8001fba <SPI2_TX+0x6>
    }

    while (!(SPI2->SR & SPI_SR_TXE)) {}
 8001fd0:	4b06      	ldr	r3, [pc, #24]	@ (8001fec <SPI2_TX+0x38>)
 8001fd2:	689b      	ldr	r3, [r3, #8]
 8001fd4:	f013 0f02 	tst.w	r3, #2
 8001fd8:	d0fa      	beq.n	8001fd0 <SPI2_TX+0x1c>
    while (SPI2->SR & SPI_SR_BSY) {}
 8001fda:	4b04      	ldr	r3, [pc, #16]	@ (8001fec <SPI2_TX+0x38>)
 8001fdc:	689b      	ldr	r3, [r3, #8]
 8001fde:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8001fe2:	d1fa      	bne.n	8001fda <SPI2_TX+0x26>

    uint8_t temp = SPI2->DR;
 8001fe4:	4b01      	ldr	r3, [pc, #4]	@ (8001fec <SPI2_TX+0x38>)
 8001fe6:	68da      	ldr	r2, [r3, #12]
    temp = SPI2->SR;
 8001fe8:	689b      	ldr	r3, [r3, #8]
}
 8001fea:	4770      	bx	lr
 8001fec:	40003800 	.word	0x40003800

08001ff0 <SPI2_RX>:
    }
}

void SPI2_RX(uint8_t *data, int size) {

    while (size) {
 8001ff0:	e011      	b.n	8002016 <SPI2_RX+0x26>
        while (SPI2->SR & SPI_SR_BSY) {}
 8001ff2:	4b0a      	ldr	r3, [pc, #40]	@ (800201c <SPI2_RX+0x2c>)
 8001ff4:	689b      	ldr	r3, [r3, #8]
 8001ff6:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8001ffa:	d1fa      	bne.n	8001ff2 <SPI2_RX+0x2>
        SPI2->DR = 0;
 8001ffc:	4b07      	ldr	r3, [pc, #28]	@ (800201c <SPI2_RX+0x2c>)
 8001ffe:	2200      	movs	r2, #0
 8002000:	60da      	str	r2, [r3, #12]
        while (!(SPI2->SR & SPI_SR_RXNE)) {}
 8002002:	4b06      	ldr	r3, [pc, #24]	@ (800201c <SPI2_RX+0x2c>)
 8002004:	689b      	ldr	r3, [r3, #8]
 8002006:	f013 0f01 	tst.w	r3, #1
 800200a:	d0fa      	beq.n	8002002 <SPI2_RX+0x12>
        *data++ = SPI2->DR;
 800200c:	4b03      	ldr	r3, [pc, #12]	@ (800201c <SPI2_RX+0x2c>)
 800200e:	68db      	ldr	r3, [r3, #12]
 8002010:	f800 3b01 	strb.w	r3, [r0], #1
        --size;
 8002014:	3901      	subs	r1, #1
    while (size) {
 8002016:	2900      	cmp	r1, #0
 8002018:	d1eb      	bne.n	8001ff2 <SPI2_RX+0x2>
    }
}
 800201a:	4770      	bx	lr
 800201c:	40003800 	.word	0x40003800

08002020 <USART_Init>:
#include "GAUL_Drivers/Low_Level_Drivers/USART_driver.h"
#include "main.h"


void USART_Init(unsigned short usart)
{
 8002020:	b508      	push	{r3, lr}
    if(usart == 1) {
 8002022:	2801      	cmp	r0, #1
 8002024:	d004      	beq.n	8002030 <USART_Init+0x10>

        USART1->CR1 |= USART_CR1_UE; // Activer USART (0x0C)
        USART1->CR1 |= USART_CR1_TE; // Activer la transmission
        USART1->CR1 |= USART_CR1_RE; // Activer la réception
    }
    else if(usart == 2) {
 8002026:	2802      	cmp	r0, #2
 8002028:	d021      	beq.n	800206e <USART_Init+0x4e>

        USART2->CR1 |= USART_CR1_UE; // Activer USART (0x10)
        USART2->CR1 |= USART_CR1_TE; // Activer la transmission
        USART2->CR1 |= USART_CR1_RE; // Activer la réception
    }
    else if(usart == 3) {
 800202a:	2803      	cmp	r0, #3
 800202c:	d03e      	beq.n	80020ac <USART_Init+0x8c>

        USART3->CR1 |= USART_CR1_UE; // Activer USART (0x14)
        USART3->CR1 |= USART_CR1_TE; // Activer la transmission
        USART3->CR1 |= USART_CR1_RE; // Activer la réception
    }
}
 800202e:	bd08      	pop	{r3, pc}
        RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 8002030:	4a2e      	ldr	r2, [pc, #184]	@ (80020ec <USART_Init+0xcc>)
 8002032:	6993      	ldr	r3, [r2, #24]
 8002034:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002038:	6193      	str	r3, [r2, #24]
        Init_GPIO(PB, 6, OUT50, O_AF_PP); // TX
 800203a:	2302      	movs	r3, #2
 800203c:	2203      	movs	r2, #3
 800203e:	2106      	movs	r1, #6
 8002040:	4618      	mov	r0, r3
 8002042:	f7ff fed5 	bl	8001df0 <Init_GPIO>
        Init_GPIO(PB, 7, IN, I_PP); // RX
 8002046:	2302      	movs	r3, #2
 8002048:	2200      	movs	r2, #0
 800204a:	2107      	movs	r1, #7
 800204c:	4618      	mov	r0, r3
 800204e:	f7ff fecf 	bl	8001df0 <Init_GPIO>
        USART1->CR1 |= USART_CR1_UE; // Activer USART (0x0C)
 8002052:	4b27      	ldr	r3, [pc, #156]	@ (80020f0 <USART_Init+0xd0>)
 8002054:	68da      	ldr	r2, [r3, #12]
 8002056:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800205a:	60da      	str	r2, [r3, #12]
        USART1->CR1 |= USART_CR1_TE; // Activer la transmission
 800205c:	68da      	ldr	r2, [r3, #12]
 800205e:	f042 0208 	orr.w	r2, r2, #8
 8002062:	60da      	str	r2, [r3, #12]
        USART1->CR1 |= USART_CR1_RE; // Activer la réception
 8002064:	68da      	ldr	r2, [r3, #12]
 8002066:	f042 0204 	orr.w	r2, r2, #4
 800206a:	60da      	str	r2, [r3, #12]
 800206c:	e7df      	b.n	800202e <USART_Init+0xe>
        RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 800206e:	4a1f      	ldr	r2, [pc, #124]	@ (80020ec <USART_Init+0xcc>)
 8002070:	69d3      	ldr	r3, [r2, #28]
 8002072:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002076:	61d3      	str	r3, [r2, #28]
        Init_GPIO(PA, 2, OUT50, O_AF_PP); // TX
 8002078:	2302      	movs	r3, #2
 800207a:	2203      	movs	r2, #3
 800207c:	4619      	mov	r1, r3
 800207e:	2001      	movs	r0, #1
 8002080:	f7ff feb6 	bl	8001df0 <Init_GPIO>
        Init_GPIO(PA, 3, IN, I_PP); // RX
 8002084:	2302      	movs	r3, #2
 8002086:	2200      	movs	r2, #0
 8002088:	2103      	movs	r1, #3
 800208a:	2001      	movs	r0, #1
 800208c:	f7ff feb0 	bl	8001df0 <Init_GPIO>
        USART2->CR1 |= USART_CR1_UE; // Activer USART (0x10)
 8002090:	4b18      	ldr	r3, [pc, #96]	@ (80020f4 <USART_Init+0xd4>)
 8002092:	68da      	ldr	r2, [r3, #12]
 8002094:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8002098:	60da      	str	r2, [r3, #12]
        USART2->CR1 |= USART_CR1_TE; // Activer la transmission
 800209a:	68da      	ldr	r2, [r3, #12]
 800209c:	f042 0208 	orr.w	r2, r2, #8
 80020a0:	60da      	str	r2, [r3, #12]
        USART2->CR1 |= USART_CR1_RE; // Activer la réception
 80020a2:	68da      	ldr	r2, [r3, #12]
 80020a4:	f042 0204 	orr.w	r2, r2, #4
 80020a8:	60da      	str	r2, [r3, #12]
 80020aa:	e7c0      	b.n	800202e <USART_Init+0xe>
        RCC->APB1ENR |= RCC_APB1ENR_USART3EN ;
 80020ac:	4a0f      	ldr	r2, [pc, #60]	@ (80020ec <USART_Init+0xcc>)
 80020ae:	69d3      	ldr	r3, [r2, #28]
 80020b0:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80020b4:	61d3      	str	r3, [r2, #28]
        Init_GPIO(PB, 10, OUT50, O_AF_PP); // TX
 80020b6:	2302      	movs	r3, #2
 80020b8:	2203      	movs	r2, #3
 80020ba:	210a      	movs	r1, #10
 80020bc:	4618      	mov	r0, r3
 80020be:	f7ff fe97 	bl	8001df0 <Init_GPIO>
        Init_GPIO(PB, 11, IN, I_PP); // RX
 80020c2:	2302      	movs	r3, #2
 80020c4:	2200      	movs	r2, #0
 80020c6:	210b      	movs	r1, #11
 80020c8:	4618      	mov	r0, r3
 80020ca:	f7ff fe91 	bl	8001df0 <Init_GPIO>
        USART3->CR1 |= USART_CR1_UE; // Activer USART (0x14)
 80020ce:	4b0a      	ldr	r3, [pc, #40]	@ (80020f8 <USART_Init+0xd8>)
 80020d0:	68da      	ldr	r2, [r3, #12]
 80020d2:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80020d6:	60da      	str	r2, [r3, #12]
        USART3->CR1 |= USART_CR1_TE; // Activer la transmission
 80020d8:	68da      	ldr	r2, [r3, #12]
 80020da:	f042 0208 	orr.w	r2, r2, #8
 80020de:	60da      	str	r2, [r3, #12]
        USART3->CR1 |= USART_CR1_RE; // Activer la réception
 80020e0:	68da      	ldr	r2, [r3, #12]
 80020e2:	f042 0204 	orr.w	r2, r2, #4
 80020e6:	60da      	str	r2, [r3, #12]
}
 80020e8:	e7a1      	b.n	800202e <USART_Init+0xe>
 80020ea:	bf00      	nop
 80020ec:	40021000 	.word	0x40021000
 80020f0:	40013800 	.word	0x40013800
 80020f4:	40004400 	.word	0x40004400
 80020f8:	40004800 	.word	0x40004800

080020fc <USART_TX>:

void USART_TX(unsigned short usart, const uint8_t *data, int size) {
 80020fc:	b410      	push	{r4}

    if (usart == 1) {
 80020fe:	2801      	cmp	r0, #1
 8002100:	d027      	beq.n	8002152 <USART_TX+0x56>
        for (int i = 0; i < size; i++) {
            while (!(USART1->SR & USART_SR_TXE));
            USART1->DR = data[i];
            while (!(USART1->SR & USART_SR_TC));
        }
    } else if (usart == 2) {
 8002102:	2802      	cmp	r0, #2
 8002104:	d038      	beq.n	8002178 <USART_TX+0x7c>
        for (int i = 0; i < size; i++) {
            while (!(USART2->SR & USART_SR_TXE));
            USART2->DR = data[i];
            while (!(USART2->SR & USART_SR_TC));
        }
    } else if (usart == 3) {
 8002106:	2803      	cmp	r0, #3
 8002108:	d121      	bne.n	800214e <USART_TX+0x52>
        for (int i = 0; i < size; i++) {
 800210a:	2000      	movs	r0, #0
 800210c:	4290      	cmp	r0, r2
 800210e:	da1e      	bge.n	800214e <USART_TX+0x52>
            while (!(USART3->SR & USART_SR_TXE));
 8002110:	4b1a      	ldr	r3, [pc, #104]	@ (800217c <USART_TX+0x80>)
 8002112:	681b      	ldr	r3, [r3, #0]
 8002114:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8002118:	d0fa      	beq.n	8002110 <USART_TX+0x14>
            USART3->DR = data[i];
 800211a:	5c0c      	ldrb	r4, [r1, r0]
 800211c:	4b17      	ldr	r3, [pc, #92]	@ (800217c <USART_TX+0x80>)
 800211e:	605c      	str	r4, [r3, #4]
            while (!(USART3->SR & USART_SR_TC));
 8002120:	4b16      	ldr	r3, [pc, #88]	@ (800217c <USART_TX+0x80>)
 8002122:	681b      	ldr	r3, [r3, #0]
 8002124:	f013 0f40 	tst.w	r3, #64	@ 0x40
 8002128:	d0fa      	beq.n	8002120 <USART_TX+0x24>
        for (int i = 0; i < size; i++) {
 800212a:	3001      	adds	r0, #1
 800212c:	e7ee      	b.n	800210c <USART_TX+0x10>
            while (!(USART1->SR & USART_SR_TXE));
 800212e:	4b14      	ldr	r3, [pc, #80]	@ (8002180 <USART_TX+0x84>)
 8002130:	681b      	ldr	r3, [r3, #0]
 8002132:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8002136:	d0fa      	beq.n	800212e <USART_TX+0x32>
            USART1->DR = data[i];
 8002138:	5c0c      	ldrb	r4, [r1, r0]
 800213a:	4b11      	ldr	r3, [pc, #68]	@ (8002180 <USART_TX+0x84>)
 800213c:	605c      	str	r4, [r3, #4]
            while (!(USART1->SR & USART_SR_TC));
 800213e:	4b10      	ldr	r3, [pc, #64]	@ (8002180 <USART_TX+0x84>)
 8002140:	681b      	ldr	r3, [r3, #0]
 8002142:	f013 0f40 	tst.w	r3, #64	@ 0x40
 8002146:	d0fa      	beq.n	800213e <USART_TX+0x42>
        for (int i = 0; i < size; i++) {
 8002148:	3001      	adds	r0, #1
 800214a:	4290      	cmp	r0, r2
 800214c:	dbef      	blt.n	800212e <USART_TX+0x32>
        }
    }
}
 800214e:	bc10      	pop	{r4}
 8002150:	4770      	bx	lr
        for (int i = 0; i < size; i++) {
 8002152:	2000      	movs	r0, #0
 8002154:	e7f9      	b.n	800214a <USART_TX+0x4e>
            while (!(USART2->SR & USART_SR_TXE));
 8002156:	4b0b      	ldr	r3, [pc, #44]	@ (8002184 <USART_TX+0x88>)
 8002158:	681b      	ldr	r3, [r3, #0]
 800215a:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800215e:	d0fa      	beq.n	8002156 <USART_TX+0x5a>
            USART2->DR = data[i];
 8002160:	5c0c      	ldrb	r4, [r1, r0]
 8002162:	4b08      	ldr	r3, [pc, #32]	@ (8002184 <USART_TX+0x88>)
 8002164:	605c      	str	r4, [r3, #4]
            while (!(USART2->SR & USART_SR_TC));
 8002166:	4b07      	ldr	r3, [pc, #28]	@ (8002184 <USART_TX+0x88>)
 8002168:	681b      	ldr	r3, [r3, #0]
 800216a:	f013 0f40 	tst.w	r3, #64	@ 0x40
 800216e:	d0fa      	beq.n	8002166 <USART_TX+0x6a>
        for (int i = 0; i < size; i++) {
 8002170:	3001      	adds	r0, #1
 8002172:	4290      	cmp	r0, r2
 8002174:	dbef      	blt.n	8002156 <USART_TX+0x5a>
 8002176:	e7ea      	b.n	800214e <USART_TX+0x52>
 8002178:	2000      	movs	r0, #0
 800217a:	e7fa      	b.n	8002172 <USART_TX+0x76>
 800217c:	40004800 	.word	0x40004800
 8002180:	40013800 	.word	0x40013800
 8002184:	40004400 	.word	0x40004400

08002188 <USART_RX>:

void USART_RX(unsigned short usart, uint8_t *data, int size) {

    if (usart == 1) {
 8002188:	2801      	cmp	r0, #1
 800218a:	d010      	beq.n	80021ae <USART_RX+0x26>
        for (int i = 0; i < size; i++) {
            while (!(USART1->SR & USART_SR_RXNE));
            data[i] = USART1->DR;
        }
    } else if (usart == 2) {
 800218c:	2802      	cmp	r0, #2
 800218e:	d01c      	beq.n	80021ca <USART_RX+0x42>
        for (int i = 0; i < size; i++) {
            while (!(USART2->SR & USART_SR_RXNE));
            data[i] = USART2->DR;
        }
    } else if (usart == 3) {
 8002190:	2803      	cmp	r0, #3
 8002192:	d01c      	beq.n	80021ce <USART_RX+0x46>
        for (int i = 0; i < size; i++) {
            while (!(USART3->SR & USART_SR_RXNE));
            data[i] = USART3->DR;
        }
    }
}
 8002194:	4770      	bx	lr
            while (!(USART1->SR & USART_SR_RXNE));
 8002196:	4b14      	ldr	r3, [pc, #80]	@ (80021e8 <USART_RX+0x60>)
 8002198:	681b      	ldr	r3, [r3, #0]
 800219a:	f013 0f20 	tst.w	r3, #32
 800219e:	d0fa      	beq.n	8002196 <USART_RX+0xe>
            data[i] = USART1->DR;
 80021a0:	4b11      	ldr	r3, [pc, #68]	@ (80021e8 <USART_RX+0x60>)
 80021a2:	685b      	ldr	r3, [r3, #4]
 80021a4:	540b      	strb	r3, [r1, r0]
        for (int i = 0; i < size; i++) {
 80021a6:	3001      	adds	r0, #1
 80021a8:	4290      	cmp	r0, r2
 80021aa:	dbf4      	blt.n	8002196 <USART_RX+0xe>
 80021ac:	4770      	bx	lr
 80021ae:	2000      	movs	r0, #0
 80021b0:	e7fa      	b.n	80021a8 <USART_RX+0x20>
            while (!(USART2->SR & USART_SR_RXNE));
 80021b2:	4b0e      	ldr	r3, [pc, #56]	@ (80021ec <USART_RX+0x64>)
 80021b4:	681b      	ldr	r3, [r3, #0]
 80021b6:	f013 0f20 	tst.w	r3, #32
 80021ba:	d0fa      	beq.n	80021b2 <USART_RX+0x2a>
            data[i] = USART2->DR;
 80021bc:	4b0b      	ldr	r3, [pc, #44]	@ (80021ec <USART_RX+0x64>)
 80021be:	685b      	ldr	r3, [r3, #4]
 80021c0:	540b      	strb	r3, [r1, r0]
        for (int i = 0; i < size; i++) {
 80021c2:	3001      	adds	r0, #1
 80021c4:	4290      	cmp	r0, r2
 80021c6:	dbf4      	blt.n	80021b2 <USART_RX+0x2a>
 80021c8:	4770      	bx	lr
 80021ca:	2000      	movs	r0, #0
 80021cc:	e7fa      	b.n	80021c4 <USART_RX+0x3c>
        for (int i = 0; i < size; i++) {
 80021ce:	2000      	movs	r0, #0
 80021d0:	4290      	cmp	r0, r2
 80021d2:	dadf      	bge.n	8002194 <USART_RX+0xc>
            while (!(USART3->SR & USART_SR_RXNE));
 80021d4:	4b06      	ldr	r3, [pc, #24]	@ (80021f0 <USART_RX+0x68>)
 80021d6:	681b      	ldr	r3, [r3, #0]
 80021d8:	f013 0f20 	tst.w	r3, #32
 80021dc:	d0fa      	beq.n	80021d4 <USART_RX+0x4c>
            data[i] = USART3->DR;
 80021de:	4b04      	ldr	r3, [pc, #16]	@ (80021f0 <USART_RX+0x68>)
 80021e0:	685b      	ldr	r3, [r3, #4]
 80021e2:	540b      	strb	r3, [r1, r0]
        for (int i = 0; i < size; i++) {
 80021e4:	3001      	adds	r0, #1
 80021e6:	e7f3      	b.n	80021d0 <USART_RX+0x48>
 80021e8:	40013800 	.word	0x40013800
 80021ec:	40004400 	.word	0x40004400
 80021f0:	40004800 	.word	0x40004800

080021f4 <ITM_SendChar>:
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80021f4:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80021f8:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	@ 0xe80
 80021fc:	f013 0f01 	tst.w	r3, #1
 8002200:	d011      	beq.n	8002226 <ITM_SendChar+0x32>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 8002202:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8002206:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	@ 0xe00
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 800220a:	f013 0f01 	tst.w	r3, #1
 800220e:	d101      	bne.n	8002214 <ITM_SendChar+0x20>
 8002210:	4770      	bx	lr
  {
    while (ITM->PORT[0U].u32 == 0UL)
    {
      __NOP();
 8002212:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 8002214:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8002218:	681b      	ldr	r3, [r3, #0]
 800221a:	2b00      	cmp	r3, #0
 800221c:	d0f9      	beq.n	8002212 <ITM_SendChar+0x1e>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 800221e:	b2c3      	uxtb	r3, r0
 8002220:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 8002224:	7013      	strb	r3, [r2, #0]
  }
  return (ch);
}
 8002226:	4770      	bx	lr

08002228 <ROCKET_SetMode>:
	packet.data[index + 3] = (uint8_t)(data & 0xFF);
}

uint8_t ROCKET_SetMode(uint8_t mode) {

	if(mode != MODE_PREFLIGHT && mode != MODE_INFLIGHT && mode != MODE_POSTFLIGHT) {
 8002228:	2802      	cmp	r0, #2
 800222a:	d803      	bhi.n	8002234 <ROCKET_SetMode+0xc>
		return 0;
	}
	packet.header_states.mode = mode;
 800222c:	4b02      	ldr	r3, [pc, #8]	@ (8002238 <ROCKET_SetMode+0x10>)
 800222e:	7018      	strb	r0, [r3, #0]
	return 1; // OK
 8002230:	2001      	movs	r0, #1
 8002232:	4770      	bx	lr
		return 0;
 8002234:	2000      	movs	r0, #0
}
 8002236:	4770      	bx	lr
 8002238:	20000250 	.word	0x20000250

0800223c <_write>:

}

/* USER CODE BEGIN 4 */
int _write(int le, char *ptr, int len)
{
 800223c:	b570      	push	{r4, r5, r6, lr}
 800223e:	460c      	mov	r4, r1
 8002240:	4616      	mov	r6, r2
	int DataIdx;
	for(DataIdx = 0; DataIdx < len; DataIdx++)
 8002242:	2500      	movs	r5, #0
 8002244:	e004      	b.n	8002250 <_write+0x14>
	{
		ITM_SendChar(*ptr++);
 8002246:	f814 0b01 	ldrb.w	r0, [r4], #1
 800224a:	f7ff ffd3 	bl	80021f4 <ITM_SendChar>
	for(DataIdx = 0; DataIdx < len; DataIdx++)
 800224e:	3501      	adds	r5, #1
 8002250:	42b5      	cmp	r5, r6
 8002252:	dbf8      	blt.n	8002246 <_write+0xa>
	}
	return len;
}
 8002254:	4630      	mov	r0, r6
 8002256:	bd70      	pop	{r4, r5, r6, pc}

08002258 <Error_Handler>:
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002258:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800225a:	e7fe      	b.n	800225a <Error_Handler+0x2>

0800225c <MX_USART1_UART_Init>:
{
 800225c:	b508      	push	{r3, lr}
  huart1.Instance = USART1;
 800225e:	480a      	ldr	r0, [pc, #40]	@ (8002288 <MX_USART1_UART_Init+0x2c>)
 8002260:	4b0a      	ldr	r3, [pc, #40]	@ (800228c <MX_USART1_UART_Init+0x30>)
 8002262:	6003      	str	r3, [r0, #0]
  huart1.Init.BaudRate = 9600;
 8002264:	f44f 5316 	mov.w	r3, #9600	@ 0x2580
 8002268:	6043      	str	r3, [r0, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 800226a:	2300      	movs	r3, #0
 800226c:	6083      	str	r3, [r0, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 800226e:	60c3      	str	r3, [r0, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8002270:	6103      	str	r3, [r0, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8002272:	220c      	movs	r2, #12
 8002274:	6142      	str	r2, [r0, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002276:	6183      	str	r3, [r0, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8002278:	61c3      	str	r3, [r0, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 800227a:	f003 f817 	bl	80052ac <HAL_UART_Init>
 800227e:	b900      	cbnz	r0, 8002282 <MX_USART1_UART_Init+0x26>
}
 8002280:	bd08      	pop	{r3, pc}
    Error_Handler();
 8002282:	f7ff ffe9 	bl	8002258 <Error_Handler>
 8002286:	bf00      	nop
 8002288:	200003f4 	.word	0x200003f4
 800228c:	40013800 	.word	0x40013800

08002290 <MX_USART2_UART_Init>:
{
 8002290:	b508      	push	{r3, lr}
  huart2.Instance = USART2;
 8002292:	480a      	ldr	r0, [pc, #40]	@ (80022bc <MX_USART2_UART_Init+0x2c>)
 8002294:	4b0a      	ldr	r3, [pc, #40]	@ (80022c0 <MX_USART2_UART_Init+0x30>)
 8002296:	6003      	str	r3, [r0, #0]
  huart2.Init.BaudRate = 9600;
 8002298:	f44f 5316 	mov.w	r3, #9600	@ 0x2580
 800229c:	6043      	str	r3, [r0, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800229e:	2300      	movs	r3, #0
 80022a0:	6083      	str	r3, [r0, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80022a2:	60c3      	str	r3, [r0, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80022a4:	6103      	str	r3, [r0, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80022a6:	220c      	movs	r2, #12
 80022a8:	6142      	str	r2, [r0, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80022aa:	6183      	str	r3, [r0, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80022ac:	61c3      	str	r3, [r0, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80022ae:	f002 fffd 	bl	80052ac <HAL_UART_Init>
 80022b2:	b900      	cbnz	r0, 80022b6 <MX_USART2_UART_Init+0x26>
}
 80022b4:	bd08      	pop	{r3, pc}
    Error_Handler();
 80022b6:	f7ff ffcf 	bl	8002258 <Error_Handler>
 80022ba:	bf00      	nop
 80022bc:	200003ac 	.word	0x200003ac
 80022c0:	40004400 	.word	0x40004400

080022c4 <MX_USART3_UART_Init>:
{
 80022c4:	b508      	push	{r3, lr}
  huart3.Instance = USART3;
 80022c6:	480a      	ldr	r0, [pc, #40]	@ (80022f0 <MX_USART3_UART_Init+0x2c>)
 80022c8:	4b0a      	ldr	r3, [pc, #40]	@ (80022f4 <MX_USART3_UART_Init+0x30>)
 80022ca:	6003      	str	r3, [r0, #0]
  huart3.Init.BaudRate = 9600;
 80022cc:	f44f 5316 	mov.w	r3, #9600	@ 0x2580
 80022d0:	6043      	str	r3, [r0, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 80022d2:	2300      	movs	r3, #0
 80022d4:	6083      	str	r3, [r0, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 80022d6:	60c3      	str	r3, [r0, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 80022d8:	6103      	str	r3, [r0, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 80022da:	220c      	movs	r2, #12
 80022dc:	6142      	str	r2, [r0, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80022de:	6183      	str	r3, [r0, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 80022e0:	61c3      	str	r3, [r0, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 80022e2:	f002 ffe3 	bl	80052ac <HAL_UART_Init>
 80022e6:	b900      	cbnz	r0, 80022ea <MX_USART3_UART_Init+0x26>
}
 80022e8:	bd08      	pop	{r3, pc}
    Error_Handler();
 80022ea:	f7ff ffb5 	bl	8002258 <Error_Handler>
 80022ee:	bf00      	nop
 80022f0:	20000364 	.word	0x20000364
 80022f4:	40004800 	.word	0x40004800

080022f8 <MX_TIM3_Init>:
{
 80022f8:	b500      	push	{lr}
 80022fa:	b08f      	sub	sp, #60	@ 0x3c
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80022fc:	2300      	movs	r3, #0
 80022fe:	930a      	str	r3, [sp, #40]	@ 0x28
 8002300:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002302:	930c      	str	r3, [sp, #48]	@ 0x30
 8002304:	930d      	str	r3, [sp, #52]	@ 0x34
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002306:	9308      	str	r3, [sp, #32]
 8002308:	9309      	str	r3, [sp, #36]	@ 0x24
  TIM_OC_InitTypeDef sConfigOC = {0};
 800230a:	9301      	str	r3, [sp, #4]
 800230c:	9302      	str	r3, [sp, #8]
 800230e:	9303      	str	r3, [sp, #12]
 8002310:	9304      	str	r3, [sp, #16]
 8002312:	9305      	str	r3, [sp, #20]
 8002314:	9306      	str	r3, [sp, #24]
 8002316:	9307      	str	r3, [sp, #28]
  htim3.Instance = TIM3;
 8002318:	481e      	ldr	r0, [pc, #120]	@ (8002394 <MX_TIM3_Init+0x9c>)
 800231a:	4a1f      	ldr	r2, [pc, #124]	@ (8002398 <MX_TIM3_Init+0xa0>)
 800231c:	6002      	str	r2, [r0, #0]
  htim3.Init.Prescaler = 127;
 800231e:	227f      	movs	r2, #127	@ 0x7f
 8002320:	6042      	str	r2, [r0, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002322:	6083      	str	r3, [r0, #8]
  htim3.Init.Period = 20;
 8002324:	2214      	movs	r2, #20
 8002326:	60c2      	str	r2, [r0, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002328:	6103      	str	r3, [r0, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800232a:	6183      	str	r3, [r0, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 800232c:	f002 f984 	bl	8004638 <HAL_TIM_Base_Init>
 8002330:	bb28      	cbnz	r0, 800237e <MX_TIM3_Init+0x86>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002332:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8002336:	930a      	str	r3, [sp, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8002338:	a90a      	add	r1, sp, #40	@ 0x28
 800233a:	4816      	ldr	r0, [pc, #88]	@ (8002394 <MX_TIM3_Init+0x9c>)
 800233c:	f002 fbec 	bl	8004b18 <HAL_TIM_ConfigClockSource>
 8002340:	b9f8      	cbnz	r0, 8002382 <MX_TIM3_Init+0x8a>
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8002342:	4814      	ldr	r0, [pc, #80]	@ (8002394 <MX_TIM3_Init+0x9c>)
 8002344:	f002 f9c7 	bl	80046d6 <HAL_TIM_PWM_Init>
 8002348:	b9e8      	cbnz	r0, 8002386 <MX_TIM3_Init+0x8e>
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800234a:	2300      	movs	r3, #0
 800234c:	9308      	str	r3, [sp, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800234e:	9309      	str	r3, [sp, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8002350:	a908      	add	r1, sp, #32
 8002352:	4810      	ldr	r0, [pc, #64]	@ (8002394 <MX_TIM3_Init+0x9c>)
 8002354:	f002 ff4c 	bl	80051f0 <HAL_TIMEx_MasterConfigSynchronization>
 8002358:	b9b8      	cbnz	r0, 800238a <MX_TIM3_Init+0x92>
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800235a:	2360      	movs	r3, #96	@ 0x60
 800235c:	9301      	str	r3, [sp, #4]
  sConfigOC.Pulse = 0;
 800235e:	2300      	movs	r3, #0
 8002360:	9302      	str	r3, [sp, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8002362:	9303      	str	r3, [sp, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8002364:	9305      	str	r3, [sp, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8002366:	220c      	movs	r2, #12
 8002368:	a901      	add	r1, sp, #4
 800236a:	480a      	ldr	r0, [pc, #40]	@ (8002394 <MX_TIM3_Init+0x9c>)
 800236c:	f002 fb12 	bl	8004994 <HAL_TIM_PWM_ConfigChannel>
 8002370:	b968      	cbnz	r0, 800238e <MX_TIM3_Init+0x96>
  HAL_TIM_MspPostInit(&htim3);
 8002372:	4808      	ldr	r0, [pc, #32]	@ (8002394 <MX_TIM3_Init+0x9c>)
 8002374:	f000 fa86 	bl	8002884 <HAL_TIM_MspPostInit>
}
 8002378:	b00f      	add	sp, #60	@ 0x3c
 800237a:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 800237e:	f7ff ff6b 	bl	8002258 <Error_Handler>
    Error_Handler();
 8002382:	f7ff ff69 	bl	8002258 <Error_Handler>
    Error_Handler();
 8002386:	f7ff ff67 	bl	8002258 <Error_Handler>
    Error_Handler();
 800238a:	f7ff ff65 	bl	8002258 <Error_Handler>
    Error_Handler();
 800238e:	f7ff ff63 	bl	8002258 <Error_Handler>
 8002392:	bf00      	nop
 8002394:	2000043c 	.word	0x2000043c
 8002398:	40000400 	.word	0x40000400

0800239c <MX_TIM2_Init>:
{
 800239c:	b500      	push	{lr}
 800239e:	b087      	sub	sp, #28
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80023a0:	2300      	movs	r3, #0
 80023a2:	9302      	str	r3, [sp, #8]
 80023a4:	9303      	str	r3, [sp, #12]
 80023a6:	9304      	str	r3, [sp, #16]
 80023a8:	9305      	str	r3, [sp, #20]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80023aa:	9300      	str	r3, [sp, #0]
 80023ac:	9301      	str	r3, [sp, #4]
  htim2.Instance = TIM2;
 80023ae:	4814      	ldr	r0, [pc, #80]	@ (8002400 <MX_TIM2_Init+0x64>)
 80023b0:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80023b4:	6002      	str	r2, [r0, #0]
  htim2.Init.Prescaler = 14400;
 80023b6:	f44f 5261 	mov.w	r2, #14400	@ 0x3840
 80023ba:	6042      	str	r2, [r0, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80023bc:	6083      	str	r3, [r0, #8]
  htim2.Init.Period = 65535;
 80023be:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80023c2:	60c2      	str	r2, [r0, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80023c4:	6103      	str	r3, [r0, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80023c6:	6183      	str	r3, [r0, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80023c8:	f002 f936 	bl	8004638 <HAL_TIM_Base_Init>
 80023cc:	b990      	cbnz	r0, 80023f4 <MX_TIM2_Init+0x58>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80023ce:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80023d2:	9302      	str	r3, [sp, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80023d4:	a902      	add	r1, sp, #8
 80023d6:	480a      	ldr	r0, [pc, #40]	@ (8002400 <MX_TIM2_Init+0x64>)
 80023d8:	f002 fb9e 	bl	8004b18 <HAL_TIM_ConfigClockSource>
 80023dc:	b960      	cbnz	r0, 80023f8 <MX_TIM2_Init+0x5c>
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80023de:	2300      	movs	r3, #0
 80023e0:	9300      	str	r3, [sp, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80023e2:	9301      	str	r3, [sp, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80023e4:	4669      	mov	r1, sp
 80023e6:	4806      	ldr	r0, [pc, #24]	@ (8002400 <MX_TIM2_Init+0x64>)
 80023e8:	f002 ff02 	bl	80051f0 <HAL_TIMEx_MasterConfigSynchronization>
 80023ec:	b930      	cbnz	r0, 80023fc <MX_TIM2_Init+0x60>
}
 80023ee:	b007      	add	sp, #28
 80023f0:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 80023f4:	f7ff ff30 	bl	8002258 <Error_Handler>
    Error_Handler();
 80023f8:	f7ff ff2e 	bl	8002258 <Error_Handler>
    Error_Handler();
 80023fc:	f7ff ff2c 	bl	8002258 <Error_Handler>
 8002400:	20000484 	.word	0x20000484

08002404 <MX_ADC1_Init>:
{
 8002404:	b500      	push	{lr}
 8002406:	b085      	sub	sp, #20
  ADC_ChannelConfTypeDef sConfig = {0};
 8002408:	2300      	movs	r3, #0
 800240a:	9301      	str	r3, [sp, #4]
 800240c:	9302      	str	r3, [sp, #8]
 800240e:	9303      	str	r3, [sp, #12]
  hadc1.Instance = ADC1;
 8002410:	480f      	ldr	r0, [pc, #60]	@ (8002450 <MX_ADC1_Init+0x4c>)
 8002412:	4a10      	ldr	r2, [pc, #64]	@ (8002454 <MX_ADC1_Init+0x50>)
 8002414:	6002      	str	r2, [r0, #0]
  hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 8002416:	6083      	str	r3, [r0, #8]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8002418:	7303      	strb	r3, [r0, #12]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 800241a:	7503      	strb	r3, [r0, #20]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800241c:	f44f 2260 	mov.w	r2, #917504	@ 0xe0000
 8002420:	61c2      	str	r2, [r0, #28]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8002422:	6043      	str	r3, [r0, #4]
  hadc1.Init.NbrOfConversion = 1;
 8002424:	2301      	movs	r3, #1
 8002426:	6103      	str	r3, [r0, #16]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8002428:	f000 fbfe 	bl	8002c28 <HAL_ADC_Init>
 800242c:	b960      	cbnz	r0, 8002448 <MX_ADC1_Init+0x44>
  sConfig.Channel = ADC_CHANNEL_0;
 800242e:	2300      	movs	r3, #0
 8002430:	9301      	str	r3, [sp, #4]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8002432:	2201      	movs	r2, #1
 8002434:	9202      	str	r2, [sp, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 8002436:	9303      	str	r3, [sp, #12]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8002438:	a901      	add	r1, sp, #4
 800243a:	4805      	ldr	r0, [pc, #20]	@ (8002450 <MX_ADC1_Init+0x4c>)
 800243c:	f000 feb8 	bl	80031b0 <HAL_ADC_ConfigChannel>
 8002440:	b920      	cbnz	r0, 800244c <MX_ADC1_Init+0x48>
}
 8002442:	b005      	add	sp, #20
 8002444:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 8002448:	f7ff ff06 	bl	8002258 <Error_Handler>
    Error_Handler();
 800244c:	f7ff ff04 	bl	8002258 <Error_Handler>
 8002450:	200004d4 	.word	0x200004d4
 8002454:	40012400 	.word	0x40012400

08002458 <MX_CRC_Init>:
{
 8002458:	b508      	push	{r3, lr}
  hcrc.Instance = CRC;
 800245a:	4804      	ldr	r0, [pc, #16]	@ (800246c <MX_CRC_Init+0x14>)
 800245c:	4b04      	ldr	r3, [pc, #16]	@ (8002470 <MX_CRC_Init+0x18>)
 800245e:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8002460:	f001 f9cb 	bl	80037fa <HAL_CRC_Init>
 8002464:	b900      	cbnz	r0, 8002468 <MX_CRC_Init+0x10>
}
 8002466:	bd08      	pop	{r3, pc}
    Error_Handler();
 8002468:	f7ff fef6 	bl	8002258 <Error_Handler>
 800246c:	200004cc 	.word	0x200004cc
 8002470:	40023000 	.word	0x40023000

08002474 <SystemClock_Config>:
{
 8002474:	b500      	push	{lr}
 8002476:	b095      	sub	sp, #84	@ 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8002478:	2228      	movs	r2, #40	@ 0x28
 800247a:	2100      	movs	r1, #0
 800247c:	eb0d 0002 	add.w	r0, sp, r2
 8002480:	f003 ffca 	bl	8006418 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002484:	2300      	movs	r3, #0
 8002486:	9305      	str	r3, [sp, #20]
 8002488:	9306      	str	r3, [sp, #24]
 800248a:	9307      	str	r3, [sp, #28]
 800248c:	9308      	str	r3, [sp, #32]
 800248e:	9309      	str	r3, [sp, #36]	@ 0x24
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8002490:	9301      	str	r3, [sp, #4]
 8002492:	9302      	str	r3, [sp, #8]
 8002494:	9303      	str	r3, [sp, #12]
 8002496:	9304      	str	r3, [sp, #16]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8002498:	2201      	movs	r2, #1
 800249a:	920a      	str	r2, [sp, #40]	@ 0x28
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800249c:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80024a0:	930b      	str	r3, [sp, #44]	@ 0x2c
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV2;
 80024a2:	f44f 3100 	mov.w	r1, #131072	@ 0x20000
 80024a6:	910c      	str	r1, [sp, #48]	@ 0x30
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80024a8:	920e      	str	r2, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80024aa:	2202      	movs	r2, #2
 80024ac:	9211      	str	r2, [sp, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80024ae:	9312      	str	r3, [sp, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 80024b0:	f44f 13e0 	mov.w	r3, #1835008	@ 0x1c0000
 80024b4:	9313      	str	r3, [sp, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80024b6:	a80a      	add	r0, sp, #40	@ 0x28
 80024b8:	f001 fb40 	bl	8003b3c <HAL_RCC_OscConfig>
 80024bc:	b9c8      	cbnz	r0, 80024f2 <SystemClock_Config+0x7e>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80024be:	230f      	movs	r3, #15
 80024c0:	9305      	str	r3, [sp, #20]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80024c2:	2102      	movs	r1, #2
 80024c4:	9106      	str	r1, [sp, #24]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80024c6:	2300      	movs	r3, #0
 80024c8:	9307      	str	r3, [sp, #28]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80024ca:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80024ce:	9208      	str	r2, [sp, #32]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80024d0:	9309      	str	r3, [sp, #36]	@ 0x24
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 80024d2:	a805      	add	r0, sp, #20
 80024d4:	f001 fdb4 	bl	8004040 <HAL_RCC_ClockConfig>
 80024d8:	b968      	cbnz	r0, 80024f6 <SystemClock_Config+0x82>
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 80024da:	2302      	movs	r3, #2
 80024dc:	9301      	str	r3, [sp, #4]
  PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 80024de:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80024e2:	9303      	str	r3, [sp, #12]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80024e4:	a801      	add	r0, sp, #4
 80024e6:	f001 ff3b 	bl	8004360 <HAL_RCCEx_PeriphCLKConfig>
 80024ea:	b930      	cbnz	r0, 80024fa <SystemClock_Config+0x86>
}
 80024ec:	b015      	add	sp, #84	@ 0x54
 80024ee:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 80024f2:	f7ff feb1 	bl	8002258 <Error_Handler>
    Error_Handler();
 80024f6:	f7ff feaf 	bl	8002258 <Error_Handler>
    Error_Handler();
 80024fa:	f7ff fead 	bl	8002258 <Error_Handler>
	...

08002500 <ROCKET_InitRoutine>:
void ROCKET_InitRoutine(void) {
 8002500:	b570      	push	{r4, r5, r6, lr}
	HAL_Init();
 8002502:	f000 fb0b 	bl	8002b1c <HAL_Init>
	SystemClock_Config();
 8002506:	f7ff ffb5 	bl	8002474 <SystemClock_Config>
	MX_USART1_UART_Init();
 800250a:	f7ff fea7 	bl	800225c <MX_USART1_UART_Init>
	MX_USART2_UART_Init();
 800250e:	f7ff febf 	bl	8002290 <MX_USART2_UART_Init>
	MX_USART3_UART_Init();
 8002512:	f7ff fed7 	bl	80022c4 <MX_USART3_UART_Init>
	MX_TIM3_Init();
 8002516:	f7ff feef 	bl	80022f8 <MX_TIM3_Init>
	MX_TIM2_Init();
 800251a:	f7ff ff3f 	bl	800239c <MX_TIM2_Init>
	MX_ADC1_Init();
 800251e:	f7ff ff71 	bl	8002404 <MX_ADC1_Init>
	MX_CRC_Init();
 8002522:	f7ff ff99 	bl	8002458 <MX_CRC_Init>
	printf("|----------Starting----------|\r\n");
 8002526:	4845      	ldr	r0, [pc, #276]	@ (800263c <ROCKET_InitRoutine+0x13c>)
 8002528:	f003 fe96 	bl	8006258 <puts>
	Buzz(&htim3, TIM_CHANNEL_4, START);
 800252c:	2201      	movs	r2, #1
 800252e:	210c      	movs	r1, #12
 8002530:	4843      	ldr	r0, [pc, #268]	@ (8002640 <ROCKET_InitRoutine+0x140>)
 8002532:	f7ff f93b 	bl	80017ac <Buzz>
	SPI_Init(1);
 8002536:	2001      	movs	r0, #1
 8002538:	f7ff fcd8 	bl	8001eec <SPI_Init>
	printf("(+) SPI1 succeeded...\r\n");
 800253c:	4841      	ldr	r0, [pc, #260]	@ (8002644 <ROCKET_InitRoutine+0x144>)
 800253e:	f003 fe8b 	bl	8006258 <puts>
	SPI_Init(2);
 8002542:	2002      	movs	r0, #2
 8002544:	f7ff fcd2 	bl	8001eec <SPI_Init>
	printf("(+) SPI2 succeeded...\r\n");
 8002548:	483f      	ldr	r0, [pc, #252]	@ (8002648 <ROCKET_InitRoutine+0x148>)
 800254a:	f003 fe85 	bl	8006258 <puts>
	USART_Init(1);
 800254e:	2001      	movs	r0, #1
 8002550:	f7ff fd66 	bl	8002020 <USART_Init>
	printf("(+) USART1 succeeded...\r\n");
 8002554:	483d      	ldr	r0, [pc, #244]	@ (800264c <ROCKET_InitRoutine+0x14c>)
 8002556:	f003 fe7f 	bl	8006258 <puts>
	USART_Init(2);
 800255a:	2002      	movs	r0, #2
 800255c:	f7ff fd60 	bl	8002020 <USART_Init>
	printf("(+) USART2 succeeded...\r\n");
 8002560:	483b      	ldr	r0, [pc, #236]	@ (8002650 <ROCKET_InitRoutine+0x150>)
 8002562:	f003 fe79 	bl	8006258 <puts>
	USART_Init(3);
 8002566:	2003      	movs	r0, #3
 8002568:	f7ff fd5a 	bl	8002020 <USART_Init>
	printf("(+) USART3 succeeded...\r\n");
 800256c:	4839      	ldr	r0, [pc, #228]	@ (8002654 <ROCKET_InitRoutine+0x154>)
 800256e:	f003 fe73 	bl	8006258 <puts>
	printf("|----------Components initialization----------|\r\n");
 8002572:	4839      	ldr	r0, [pc, #228]	@ (8002658 <ROCKET_InitRoutine+0x158>)
 8002574:	f003 fe70 	bl	8006258 <puts>
	ROCKET_SetMode(MODE_PREFLIGHT);
 8002578:	2000      	movs	r0, #0
 800257a:	f7ff fe55 	bl	8002228 <ROCKET_SetMode>
	printf("(+) Mode flight: %i succeeded...\r\n", packet.header_states.mode);
 800257e:	4b37      	ldr	r3, [pc, #220]	@ (800265c <ROCKET_InitRoutine+0x15c>)
 8002580:	7819      	ldrb	r1, [r3, #0]
 8002582:	4837      	ldr	r0, [pc, #220]	@ (8002660 <ROCKET_InitRoutine+0x160>)
 8002584:	f003 fe00 	bl	8006188 <iprintf>
	WS2812_Init();
 8002588:	f7ff fbe6 	bl	8001d58 <WS2812_Init>
	printf("(+) WS2812 succeeded...\r\n");
 800258c:	4835      	ldr	r0, [pc, #212]	@ (8002664 <ROCKET_InitRoutine+0x164>)
 800258e:	f003 fe63 	bl	8006258 <puts>
	if (CD74HC4051_Init(&hadc1) != 1) {
 8002592:	4835      	ldr	r0, [pc, #212]	@ (8002668 <ROCKET_InitRoutine+0x168>)
 8002594:	f7ff f980 	bl	8001898 <CD74HC4051_Init>
 8002598:	2801      	cmp	r0, #1
 800259a:	d02c      	beq.n	80025f6 <ROCKET_InitRoutine+0xf6>
	  printf("(-) CD74HC4051 failed...\r\n");
 800259c:	4833      	ldr	r0, [pc, #204]	@ (800266c <ROCKET_InitRoutine+0x16c>)
 800259e:	f003 fe5b 	bl	8006258 <puts>
	packet.header_states.barometer = BMP280_Init(&bmp_data, BMP_SPI_PORT) == 1 ? 0x01 : 0x00;
 80025a2:	2102      	movs	r1, #2
 80025a4:	4832      	ldr	r0, [pc, #200]	@ (8002670 <ROCKET_InitRoutine+0x170>)
 80025a6:	f7ff f8db 	bl	8001760 <BMP280_Init>
 80025aa:	2801      	cmp	r0, #1
 80025ac:	bf14      	ite	ne
 80025ae:	2000      	movne	r0, #0
 80025b0:	2001      	moveq	r0, #1
 80025b2:	4b2a      	ldr	r3, [pc, #168]	@ (800265c <ROCKET_InitRoutine+0x15c>)
 80025b4:	7118      	strb	r0, [r3, #4]
	printf(packet.header_states.barometer ? "(+) BMP280 succeeded...\r\n" : "(-) BMP280 failed...\r\n");
 80025b6:	2800      	cmp	r0, #0
 80025b8:	d03a      	beq.n	8002630 <ROCKET_InitRoutine+0x130>
 80025ba:	482e      	ldr	r0, [pc, #184]	@ (8002674 <ROCKET_InitRoutine+0x174>)
 80025bc:	f003 fde4 	bl	8006188 <iprintf>
	packet.header_states.accelerometer = ICM20602_Init(&icm_data) == 0 ? 0x01 : 0x00;
 80025c0:	482d      	ldr	r0, [pc, #180]	@ (8002678 <ROCKET_InitRoutine+0x178>)
 80025c2:	f7ff fac1 	bl	8001b48 <ICM20602_Init>
 80025c6:	fab0 f080 	clz	r0, r0
 80025ca:	0940      	lsrs	r0, r0, #5
 80025cc:	4b23      	ldr	r3, [pc, #140]	@ (800265c <ROCKET_InitRoutine+0x15c>)
 80025ce:	70d8      	strb	r0, [r3, #3]
	printf(packet.header_states.accelerometer ? "(+) ICM20602 succeeded...\r\n" : "(-) ICM20602 failed...\r\n");
 80025d0:	2800      	cmp	r0, #0
 80025d2:	d02f      	beq.n	8002634 <ROCKET_InitRoutine+0x134>
 80025d4:	4829      	ldr	r0, [pc, #164]	@ (800267c <ROCKET_InitRoutine+0x17c>)
 80025d6:	f003 fdd7 	bl	8006188 <iprintf>
	packet.header_states.gps = L76LM33_Init(GPS_USART_PORT) == 1 ? 0x01 : 0x00;
 80025da:	2002      	movs	r0, #2
 80025dc:	f7ff fb24 	bl	8001c28 <L76LM33_Init>
 80025e0:	2801      	cmp	r0, #1
 80025e2:	bf14      	ite	ne
 80025e4:	2000      	movne	r0, #0
 80025e6:	2001      	moveq	r0, #1
 80025e8:	4b1c      	ldr	r3, [pc, #112]	@ (800265c <ROCKET_InitRoutine+0x15c>)
 80025ea:	7158      	strb	r0, [r3, #5]
	printf(packet.header_states.gps ? "(+) L76LM33 succeeded...\r\n" : "(-) L76LM33 failed...\r\n");
 80025ec:	b320      	cbz	r0, 8002638 <ROCKET_InitRoutine+0x138>
 80025ee:	4824      	ldr	r0, [pc, #144]	@ (8002680 <ROCKET_InitRoutine+0x180>)
 80025f0:	f003 fdca 	bl	8006188 <iprintf>
}
 80025f4:	bd70      	pop	{r4, r5, r6, pc}
		packet.header_states.pyro0 = CD74HC4051_AnRead(&hadc1, CHANNEL_0, PYRO_CHANNEL_0, VREFPYRO);
 80025f6:	4e23      	ldr	r6, [pc, #140]	@ (8002684 <ROCKET_InitRoutine+0x184>)
 80025f8:	4d1b      	ldr	r5, [pc, #108]	@ (8002668 <ROCKET_InitRoutine+0x168>)
 80025fa:	4633      	mov	r3, r6
 80025fc:	2201      	movs	r2, #1
 80025fe:	2100      	movs	r1, #0
 8002600:	4628      	mov	r0, r5
 8002602:	f7ff f97b 	bl	80018fc <CD74HC4051_AnRead>
 8002606:	4c15      	ldr	r4, [pc, #84]	@ (800265c <ROCKET_InitRoutine+0x15c>)
 8002608:	7060      	strb	r0, [r4, #1]
		packet.header_states.pyro1 = CD74HC4051_AnRead(&hadc1, CHANNEL_0, PYRO_CHANNEL_1, VREFPYRO);
 800260a:	4633      	mov	r3, r6
 800260c:	2202      	movs	r2, #2
 800260e:	2100      	movs	r1, #0
 8002610:	4628      	mov	r0, r5
 8002612:	f7ff f973 	bl	80018fc <CD74HC4051_AnRead>
 8002616:	70a0      	strb	r0, [r4, #2]
		printf(" -> Pyro0 state: %i\r\n", packet.header_states.pyro0);
 8002618:	7861      	ldrb	r1, [r4, #1]
 800261a:	481b      	ldr	r0, [pc, #108]	@ (8002688 <ROCKET_InitRoutine+0x188>)
 800261c:	f003 fdb4 	bl	8006188 <iprintf>
		printf(" -> Pyro1 state: %i\r\n", packet.header_states.pyro1);
 8002620:	78a1      	ldrb	r1, [r4, #2]
 8002622:	481a      	ldr	r0, [pc, #104]	@ (800268c <ROCKET_InitRoutine+0x18c>)
 8002624:	f003 fdb0 	bl	8006188 <iprintf>
		printf("(+) CD74HC4051 succeeded...\r\n");
 8002628:	4819      	ldr	r0, [pc, #100]	@ (8002690 <ROCKET_InitRoutine+0x190>)
 800262a:	f003 fe15 	bl	8006258 <puts>
 800262e:	e7b8      	b.n	80025a2 <ROCKET_InitRoutine+0xa2>
	printf(packet.header_states.barometer ? "(+) BMP280 succeeded...\r\n" : "(-) BMP280 failed...\r\n");
 8002630:	4818      	ldr	r0, [pc, #96]	@ (8002694 <ROCKET_InitRoutine+0x194>)
 8002632:	e7c3      	b.n	80025bc <ROCKET_InitRoutine+0xbc>
	printf(packet.header_states.accelerometer ? "(+) ICM20602 succeeded...\r\n" : "(-) ICM20602 failed...\r\n");
 8002634:	4818      	ldr	r0, [pc, #96]	@ (8002698 <ROCKET_InitRoutine+0x198>)
 8002636:	e7ce      	b.n	80025d6 <ROCKET_InitRoutine+0xd6>
	printf(packet.header_states.gps ? "(+) L76LM33 succeeded...\r\n" : "(-) L76LM33 failed...\r\n");
 8002638:	4818      	ldr	r0, [pc, #96]	@ (800269c <ROCKET_InitRoutine+0x19c>)
 800263a:	e7d9      	b.n	80025f0 <ROCKET_InitRoutine+0xf0>
 800263c:	08008140 	.word	0x08008140
 8002640:	2000043c 	.word	0x2000043c
 8002644:	08008160 	.word	0x08008160
 8002648:	08008178 	.word	0x08008178
 800264c:	08008190 	.word	0x08008190
 8002650:	080081ac 	.word	0x080081ac
 8002654:	080081c8 	.word	0x080081c8
 8002658:	080081e4 	.word	0x080081e4
 800265c:	20000250 	.word	0x20000250
 8002660:	08008218 	.word	0x08008218
 8002664:	0800823c 	.word	0x0800823c
 8002668:	200004d4 	.word	0x200004d4
 800266c:	08008258 	.word	0x08008258
 8002670:	20000298 	.word	0x20000298
 8002674:	080080a0 	.word	0x080080a0
 8002678:	20000260 	.word	0x20000260
 800267c:	080080d4 	.word	0x080080d4
 8002680:	0800810c 	.word	0x0800810c
 8002684:	40533333 	.word	0x40533333
 8002688:	08008274 	.word	0x08008274
 800268c:	0800828c 	.word	0x0800828c
 8002690:	080082a4 	.word	0x080082a4
 8002694:	080080bc 	.word	0x080080bc
 8002698:	080080f0 	.word	0x080080f0
 800269c:	08008128 	.word	0x08008128

080026a0 <main>:
{
 80026a0:	b500      	push	{lr}
 80026a2:	b083      	sub	sp, #12
  ROCKET_InitRoutine();
 80026a4:	f7ff ff2c 	bl	8002500 <ROCKET_InitRoutine>
  HAL_Init();
 80026a8:	f000 fa38 	bl	8002b1c <HAL_Init>
  SystemClock_Config();
 80026ac:	f7ff fee2 	bl	8002474 <SystemClock_Config>
  MX_USART1_UART_Init();
 80026b0:	f7ff fdd4 	bl	800225c <MX_USART1_UART_Init>
  MX_USART2_UART_Init();
 80026b4:	f7ff fdec 	bl	8002290 <MX_USART2_UART_Init>
  MX_USART3_UART_Init();
 80026b8:	f7ff fe04 	bl	80022c4 <MX_USART3_UART_Init>
  MX_TIM3_Init();
 80026bc:	f7ff fe1c 	bl	80022f8 <MX_TIM3_Init>
  MX_TIM2_Init();
 80026c0:	f7ff fe6c 	bl	800239c <MX_TIM2_Init>
  MX_ADC1_Init();
 80026c4:	f7ff fe9e 	bl	8002404 <MX_ADC1_Init>
  MX_CRC_Init();
 80026c8:	f7ff fec6 	bl	8002458 <MX_CRC_Init>
  MX_FATFS_Init();
 80026cc:	f002 fecc 	bl	8005468 <MX_FATFS_Init>
 80026d0:	e016      	b.n	8002700 <main+0x60>
				if (rx_data[i + 24] != '.' || rx_data[i + 29] != ',' || rx_data[i + 42] != ',') {
 80026d2:	f103 0218 	add.w	r2, r3, #24
 80026d6:	4921      	ldr	r1, [pc, #132]	@ (800275c <main+0xbc>)
 80026d8:	5c8a      	ldrb	r2, [r1, r2]
 80026da:	2a2e      	cmp	r2, #46	@ 0x2e
 80026dc:	d104      	bne.n	80026e8 <main+0x48>
 80026de:	f103 021d 	add.w	r2, r3, #29
 80026e2:	5c8a      	ldrb	r2, [r1, r2]
 80026e4:	2a2c      	cmp	r2, #44	@ 0x2c
 80026e6:	d019      	beq.n	800271c <main+0x7c>
					printf("Wrong data\r\n");
 80026e8:	481d      	ldr	r0, [pc, #116]	@ (8002760 <main+0xc0>)
 80026ea:	f003 fdb5 	bl	8006258 <puts>
			uint8_t err = '!';
 80026ee:	2321      	movs	r3, #33	@ 0x21
 80026f0:	f88d 3007 	strb.w	r3, [sp, #7]
			USART_TX(RFD_USART_PORT, &err, 1);
 80026f4:	2201      	movs	r2, #1
 80026f6:	f10d 0107 	add.w	r1, sp, #7
 80026fa:	4610      	mov	r0, r2
 80026fc:	f7ff fcfe 	bl	80020fc <USART_TX>
		USART_RX(GPS_USART_PORT, (uint8_t*)rx_data, 128); // Read GPS
 8002700:	2280      	movs	r2, #128	@ 0x80
 8002702:	4916      	ldr	r1, [pc, #88]	@ (800275c <main+0xbc>)
 8002704:	2002      	movs	r0, #2
 8002706:	f7ff fd3f 	bl	8002188 <USART_RX>
		for (int i = 0; i < 128; i++) {
 800270a:	2300      	movs	r3, #0
 800270c:	2b7f      	cmp	r3, #127	@ 0x7f
 800270e:	dc15      	bgt.n	800273c <main+0x9c>
			if (rx_data[i] == '$') { // Trace start found
 8002710:	4a12      	ldr	r2, [pc, #72]	@ (800275c <main+0xbc>)
 8002712:	5cd2      	ldrb	r2, [r2, r3]
 8002714:	2a24      	cmp	r2, #36	@ 0x24
 8002716:	d0dc      	beq.n	80026d2 <main+0x32>
		for (int i = 0; i < 128; i++) {
 8002718:	3301      	adds	r3, #1
 800271a:	e7f7      	b.n	800270c <main+0x6c>
				if (rx_data[i + 24] != '.' || rx_data[i + 29] != ',' || rx_data[i + 42] != ',') {
 800271c:	f103 022a 	add.w	r2, r3, #42	@ 0x2a
 8002720:	5c8a      	ldrb	r2, [r1, r2]
 8002722:	2a2c      	cmp	r2, #44	@ 0x2c
 8002724:	d1e0      	bne.n	80026e8 <main+0x48>
				for (int j = 0; j <= 24; j++) { // A,0000.0000,N,00000.0000,
 8002726:	2200      	movs	r2, #0
 8002728:	e006      	b.n	8002738 <main+0x98>
					send_data[j] = rx_data[i + j + 18]; // 20: offset to where lat lon starts
 800272a:	1899      	adds	r1, r3, r2
 800272c:	3112      	adds	r1, #18
 800272e:	480b      	ldr	r0, [pc, #44]	@ (800275c <main+0xbc>)
 8002730:	5c40      	ldrb	r0, [r0, r1]
 8002732:	490c      	ldr	r1, [pc, #48]	@ (8002764 <main+0xc4>)
 8002734:	5488      	strb	r0, [r1, r2]
				for (int j = 0; j <= 24; j++) { // A,0000.0000,N,00000.0000,
 8002736:	3201      	adds	r2, #1
 8002738:	2a18      	cmp	r2, #24
 800273a:	ddf6      	ble.n	800272a <main+0x8a>
			uint8_t delim = '$';
 800273c:	2324      	movs	r3, #36	@ 0x24
 800273e:	f88d 3007 	strb.w	r3, [sp, #7]
			USART_TX(RFD_USART_PORT, &delim, 1);
 8002742:	2201      	movs	r2, #1
 8002744:	f10d 0107 	add.w	r1, sp, #7
 8002748:	4610      	mov	r0, r2
 800274a:	f7ff fcd7 	bl	80020fc <USART_TX>
			USART_TX(RFD_USART_PORT, (uint8_t*)send_data, 32);
 800274e:	2220      	movs	r2, #32
 8002750:	4904      	ldr	r1, [pc, #16]	@ (8002764 <main+0xc4>)
 8002752:	2001      	movs	r0, #1
 8002754:	f7ff fcd2 	bl	80020fc <USART_TX>
 8002758:	e7d2      	b.n	8002700 <main+0x60>
 800275a:	bf00      	nop
 800275c:	200002e4 	.word	0x200002e4
 8002760:	080082c4 	.word	0x080082c4
 8002764:	200002c4 	.word	0x200002c4

08002768 <HAL_MspInit>:
 8002768:	b082      	sub	sp, #8
 800276a:	4b0e      	ldr	r3, [pc, #56]	@ (80027a4 <HAL_MspInit+0x3c>)
 800276c:	699a      	ldr	r2, [r3, #24]
 800276e:	f042 0201 	orr.w	r2, r2, #1
 8002772:	619a      	str	r2, [r3, #24]
 8002774:	699a      	ldr	r2, [r3, #24]
 8002776:	f002 0201 	and.w	r2, r2, #1
 800277a:	9200      	str	r2, [sp, #0]
 800277c:	9a00      	ldr	r2, [sp, #0]
 800277e:	69da      	ldr	r2, [r3, #28]
 8002780:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8002784:	61da      	str	r2, [r3, #28]
 8002786:	69db      	ldr	r3, [r3, #28]
 8002788:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800278c:	9301      	str	r3, [sp, #4]
 800278e:	9b01      	ldr	r3, [sp, #4]
 8002790:	4a05      	ldr	r2, [pc, #20]	@ (80027a8 <HAL_MspInit+0x40>)
 8002792:	6853      	ldr	r3, [r2, #4]
 8002794:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 8002798:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 800279c:	6053      	str	r3, [r2, #4]
 800279e:	b002      	add	sp, #8
 80027a0:	4770      	bx	lr
 80027a2:	bf00      	nop
 80027a4:	40021000 	.word	0x40021000
 80027a8:	40010000 	.word	0x40010000

080027ac <HAL_ADC_MspInit>:
 80027ac:	b500      	push	{lr}
 80027ae:	b087      	sub	sp, #28
 80027b0:	2300      	movs	r3, #0
 80027b2:	9302      	str	r3, [sp, #8]
 80027b4:	9303      	str	r3, [sp, #12]
 80027b6:	9304      	str	r3, [sp, #16]
 80027b8:	9305      	str	r3, [sp, #20]
 80027ba:	6802      	ldr	r2, [r0, #0]
 80027bc:	4b11      	ldr	r3, [pc, #68]	@ (8002804 <HAL_ADC_MspInit+0x58>)
 80027be:	429a      	cmp	r2, r3
 80027c0:	d002      	beq.n	80027c8 <HAL_ADC_MspInit+0x1c>
 80027c2:	b007      	add	sp, #28
 80027c4:	f85d fb04 	ldr.w	pc, [sp], #4
 80027c8:	f503 436c 	add.w	r3, r3, #60416	@ 0xec00
 80027cc:	699a      	ldr	r2, [r3, #24]
 80027ce:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80027d2:	619a      	str	r2, [r3, #24]
 80027d4:	699a      	ldr	r2, [r3, #24]
 80027d6:	f402 7200 	and.w	r2, r2, #512	@ 0x200
 80027da:	9200      	str	r2, [sp, #0]
 80027dc:	9a00      	ldr	r2, [sp, #0]
 80027de:	699a      	ldr	r2, [r3, #24]
 80027e0:	f042 0204 	orr.w	r2, r2, #4
 80027e4:	619a      	str	r2, [r3, #24]
 80027e6:	699b      	ldr	r3, [r3, #24]
 80027e8:	f003 0304 	and.w	r3, r3, #4
 80027ec:	9301      	str	r3, [sp, #4]
 80027ee:	9b01      	ldr	r3, [sp, #4]
 80027f0:	2301      	movs	r3, #1
 80027f2:	9302      	str	r3, [sp, #8]
 80027f4:	2303      	movs	r3, #3
 80027f6:	9303      	str	r3, [sp, #12]
 80027f8:	a902      	add	r1, sp, #8
 80027fa:	4803      	ldr	r0, [pc, #12]	@ (8002808 <HAL_ADC_MspInit+0x5c>)
 80027fc:	f001 f81a 	bl	8003834 <HAL_GPIO_Init>
 8002800:	e7df      	b.n	80027c2 <HAL_ADC_MspInit+0x16>
 8002802:	bf00      	nop
 8002804:	40012400 	.word	0x40012400
 8002808:	40010800 	.word	0x40010800

0800280c <HAL_CRC_MspInit>:
 800280c:	6802      	ldr	r2, [r0, #0]
 800280e:	4b09      	ldr	r3, [pc, #36]	@ (8002834 <HAL_CRC_MspInit+0x28>)
 8002810:	429a      	cmp	r2, r3
 8002812:	d000      	beq.n	8002816 <HAL_CRC_MspInit+0xa>
 8002814:	4770      	bx	lr
 8002816:	b082      	sub	sp, #8
 8002818:	f5a3 5300 	sub.w	r3, r3, #8192	@ 0x2000
 800281c:	695a      	ldr	r2, [r3, #20]
 800281e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8002822:	615a      	str	r2, [r3, #20]
 8002824:	695b      	ldr	r3, [r3, #20]
 8002826:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800282a:	9301      	str	r3, [sp, #4]
 800282c:	9b01      	ldr	r3, [sp, #4]
 800282e:	b002      	add	sp, #8
 8002830:	4770      	bx	lr
 8002832:	bf00      	nop
 8002834:	40023000 	.word	0x40023000

08002838 <HAL_TIM_Base_MspInit>:
 8002838:	b082      	sub	sp, #8
 800283a:	6803      	ldr	r3, [r0, #0]
 800283c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002840:	d004      	beq.n	800284c <HAL_TIM_Base_MspInit+0x14>
 8002842:	4a0e      	ldr	r2, [pc, #56]	@ (800287c <HAL_TIM_Base_MspInit+0x44>)
 8002844:	4293      	cmp	r3, r2
 8002846:	d00d      	beq.n	8002864 <HAL_TIM_Base_MspInit+0x2c>
 8002848:	b002      	add	sp, #8
 800284a:	4770      	bx	lr
 800284c:	f503 3304 	add.w	r3, r3, #135168	@ 0x21000
 8002850:	69da      	ldr	r2, [r3, #28]
 8002852:	f042 0201 	orr.w	r2, r2, #1
 8002856:	61da      	str	r2, [r3, #28]
 8002858:	69db      	ldr	r3, [r3, #28]
 800285a:	f003 0301 	and.w	r3, r3, #1
 800285e:	9300      	str	r3, [sp, #0]
 8002860:	9b00      	ldr	r3, [sp, #0]
 8002862:	e7f1      	b.n	8002848 <HAL_TIM_Base_MspInit+0x10>
 8002864:	4b06      	ldr	r3, [pc, #24]	@ (8002880 <HAL_TIM_Base_MspInit+0x48>)
 8002866:	69da      	ldr	r2, [r3, #28]
 8002868:	f042 0202 	orr.w	r2, r2, #2
 800286c:	61da      	str	r2, [r3, #28]
 800286e:	69db      	ldr	r3, [r3, #28]
 8002870:	f003 0302 	and.w	r3, r3, #2
 8002874:	9301      	str	r3, [sp, #4]
 8002876:	9b01      	ldr	r3, [sp, #4]
 8002878:	e7e6      	b.n	8002848 <HAL_TIM_Base_MspInit+0x10>
 800287a:	bf00      	nop
 800287c:	40000400 	.word	0x40000400
 8002880:	40021000 	.word	0x40021000

08002884 <HAL_TIM_MspPostInit>:
 8002884:	b500      	push	{lr}
 8002886:	b087      	sub	sp, #28
 8002888:	2300      	movs	r3, #0
 800288a:	9302      	str	r3, [sp, #8]
 800288c:	9303      	str	r3, [sp, #12]
 800288e:	9304      	str	r3, [sp, #16]
 8002890:	9305      	str	r3, [sp, #20]
 8002892:	6802      	ldr	r2, [r0, #0]
 8002894:	4b0c      	ldr	r3, [pc, #48]	@ (80028c8 <HAL_TIM_MspPostInit+0x44>)
 8002896:	429a      	cmp	r2, r3
 8002898:	d002      	beq.n	80028a0 <HAL_TIM_MspPostInit+0x1c>
 800289a:	b007      	add	sp, #28
 800289c:	f85d fb04 	ldr.w	pc, [sp], #4
 80028a0:	f503 3303 	add.w	r3, r3, #134144	@ 0x20c00
 80028a4:	699a      	ldr	r2, [r3, #24]
 80028a6:	f042 0208 	orr.w	r2, r2, #8
 80028aa:	619a      	str	r2, [r3, #24]
 80028ac:	699b      	ldr	r3, [r3, #24]
 80028ae:	f003 0308 	and.w	r3, r3, #8
 80028b2:	9301      	str	r3, [sp, #4]
 80028b4:	9b01      	ldr	r3, [sp, #4]
 80028b6:	2302      	movs	r3, #2
 80028b8:	9302      	str	r3, [sp, #8]
 80028ba:	9303      	str	r3, [sp, #12]
 80028bc:	9305      	str	r3, [sp, #20]
 80028be:	a902      	add	r1, sp, #8
 80028c0:	4802      	ldr	r0, [pc, #8]	@ (80028cc <HAL_TIM_MspPostInit+0x48>)
 80028c2:	f000 ffb7 	bl	8003834 <HAL_GPIO_Init>
 80028c6:	e7e8      	b.n	800289a <HAL_TIM_MspPostInit+0x16>
 80028c8:	40000400 	.word	0x40000400
 80028cc:	40010c00 	.word	0x40010c00

080028d0 <HAL_UART_MspInit>:
 80028d0:	b510      	push	{r4, lr}
 80028d2:	b08a      	sub	sp, #40	@ 0x28
 80028d4:	2300      	movs	r3, #0
 80028d6:	9306      	str	r3, [sp, #24]
 80028d8:	9307      	str	r3, [sp, #28]
 80028da:	9308      	str	r3, [sp, #32]
 80028dc:	9309      	str	r3, [sp, #36]	@ 0x24
 80028de:	6803      	ldr	r3, [r0, #0]
 80028e0:	4a45      	ldr	r2, [pc, #276]	@ (80029f8 <HAL_UART_MspInit+0x128>)
 80028e2:	4293      	cmp	r3, r2
 80028e4:	d007      	beq.n	80028f6 <HAL_UART_MspInit+0x26>
 80028e6:	4a45      	ldr	r2, [pc, #276]	@ (80029fc <HAL_UART_MspInit+0x12c>)
 80028e8:	4293      	cmp	r3, r2
 80028ea:	d033      	beq.n	8002954 <HAL_UART_MspInit+0x84>
 80028ec:	4a44      	ldr	r2, [pc, #272]	@ (8002a00 <HAL_UART_MspInit+0x130>)
 80028ee:	4293      	cmp	r3, r2
 80028f0:	d058      	beq.n	80029a4 <HAL_UART_MspInit+0xd4>
 80028f2:	b00a      	add	sp, #40	@ 0x28
 80028f4:	bd10      	pop	{r4, pc}
 80028f6:	4b43      	ldr	r3, [pc, #268]	@ (8002a04 <HAL_UART_MspInit+0x134>)
 80028f8:	699a      	ldr	r2, [r3, #24]
 80028fa:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80028fe:	619a      	str	r2, [r3, #24]
 8002900:	699a      	ldr	r2, [r3, #24]
 8002902:	f402 4280 	and.w	r2, r2, #16384	@ 0x4000
 8002906:	9200      	str	r2, [sp, #0]
 8002908:	9a00      	ldr	r2, [sp, #0]
 800290a:	699a      	ldr	r2, [r3, #24]
 800290c:	f042 0208 	orr.w	r2, r2, #8
 8002910:	619a      	str	r2, [r3, #24]
 8002912:	699b      	ldr	r3, [r3, #24]
 8002914:	f003 0308 	and.w	r3, r3, #8
 8002918:	9301      	str	r3, [sp, #4]
 800291a:	9b01      	ldr	r3, [sp, #4]
 800291c:	2340      	movs	r3, #64	@ 0x40
 800291e:	9306      	str	r3, [sp, #24]
 8002920:	2302      	movs	r3, #2
 8002922:	9307      	str	r3, [sp, #28]
 8002924:	2303      	movs	r3, #3
 8002926:	9309      	str	r3, [sp, #36]	@ 0x24
 8002928:	4c37      	ldr	r4, [pc, #220]	@ (8002a08 <HAL_UART_MspInit+0x138>)
 800292a:	a906      	add	r1, sp, #24
 800292c:	4620      	mov	r0, r4
 800292e:	f000 ff81 	bl	8003834 <HAL_GPIO_Init>
 8002932:	2380      	movs	r3, #128	@ 0x80
 8002934:	9306      	str	r3, [sp, #24]
 8002936:	2300      	movs	r3, #0
 8002938:	9307      	str	r3, [sp, #28]
 800293a:	9308      	str	r3, [sp, #32]
 800293c:	a906      	add	r1, sp, #24
 800293e:	4620      	mov	r0, r4
 8002940:	f000 ff78 	bl	8003834 <HAL_GPIO_Init>
 8002944:	4a31      	ldr	r2, [pc, #196]	@ (8002a0c <HAL_UART_MspInit+0x13c>)
 8002946:	6853      	ldr	r3, [r2, #4]
 8002948:	f043 63e0 	orr.w	r3, r3, #117440512	@ 0x7000000
 800294c:	f043 0304 	orr.w	r3, r3, #4
 8002950:	6053      	str	r3, [r2, #4]
 8002952:	e7ce      	b.n	80028f2 <HAL_UART_MspInit+0x22>
 8002954:	4b2b      	ldr	r3, [pc, #172]	@ (8002a04 <HAL_UART_MspInit+0x134>)
 8002956:	69da      	ldr	r2, [r3, #28]
 8002958:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 800295c:	61da      	str	r2, [r3, #28]
 800295e:	69da      	ldr	r2, [r3, #28]
 8002960:	f402 3200 	and.w	r2, r2, #131072	@ 0x20000
 8002964:	9202      	str	r2, [sp, #8]
 8002966:	9a02      	ldr	r2, [sp, #8]
 8002968:	699a      	ldr	r2, [r3, #24]
 800296a:	f042 0204 	orr.w	r2, r2, #4
 800296e:	619a      	str	r2, [r3, #24]
 8002970:	699b      	ldr	r3, [r3, #24]
 8002972:	f003 0304 	and.w	r3, r3, #4
 8002976:	9303      	str	r3, [sp, #12]
 8002978:	9b03      	ldr	r3, [sp, #12]
 800297a:	2304      	movs	r3, #4
 800297c:	9306      	str	r3, [sp, #24]
 800297e:	2302      	movs	r3, #2
 8002980:	9307      	str	r3, [sp, #28]
 8002982:	2303      	movs	r3, #3
 8002984:	9309      	str	r3, [sp, #36]	@ 0x24
 8002986:	4c22      	ldr	r4, [pc, #136]	@ (8002a10 <HAL_UART_MspInit+0x140>)
 8002988:	a906      	add	r1, sp, #24
 800298a:	4620      	mov	r0, r4
 800298c:	f000 ff52 	bl	8003834 <HAL_GPIO_Init>
 8002990:	2308      	movs	r3, #8
 8002992:	9306      	str	r3, [sp, #24]
 8002994:	2300      	movs	r3, #0
 8002996:	9307      	str	r3, [sp, #28]
 8002998:	9308      	str	r3, [sp, #32]
 800299a:	a906      	add	r1, sp, #24
 800299c:	4620      	mov	r0, r4
 800299e:	f000 ff49 	bl	8003834 <HAL_GPIO_Init>
 80029a2:	e7a6      	b.n	80028f2 <HAL_UART_MspInit+0x22>
 80029a4:	4b17      	ldr	r3, [pc, #92]	@ (8002a04 <HAL_UART_MspInit+0x134>)
 80029a6:	69da      	ldr	r2, [r3, #28]
 80029a8:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 80029ac:	61da      	str	r2, [r3, #28]
 80029ae:	69da      	ldr	r2, [r3, #28]
 80029b0:	f402 2280 	and.w	r2, r2, #262144	@ 0x40000
 80029b4:	9204      	str	r2, [sp, #16]
 80029b6:	9a04      	ldr	r2, [sp, #16]
 80029b8:	699a      	ldr	r2, [r3, #24]
 80029ba:	f042 0208 	orr.w	r2, r2, #8
 80029be:	619a      	str	r2, [r3, #24]
 80029c0:	699b      	ldr	r3, [r3, #24]
 80029c2:	f003 0308 	and.w	r3, r3, #8
 80029c6:	9305      	str	r3, [sp, #20]
 80029c8:	9b05      	ldr	r3, [sp, #20]
 80029ca:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80029ce:	9306      	str	r3, [sp, #24]
 80029d0:	2302      	movs	r3, #2
 80029d2:	9307      	str	r3, [sp, #28]
 80029d4:	2303      	movs	r3, #3
 80029d6:	9309      	str	r3, [sp, #36]	@ 0x24
 80029d8:	4c0b      	ldr	r4, [pc, #44]	@ (8002a08 <HAL_UART_MspInit+0x138>)
 80029da:	a906      	add	r1, sp, #24
 80029dc:	4620      	mov	r0, r4
 80029de:	f000 ff29 	bl	8003834 <HAL_GPIO_Init>
 80029e2:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 80029e6:	9306      	str	r3, [sp, #24]
 80029e8:	2300      	movs	r3, #0
 80029ea:	9307      	str	r3, [sp, #28]
 80029ec:	9308      	str	r3, [sp, #32]
 80029ee:	a906      	add	r1, sp, #24
 80029f0:	4620      	mov	r0, r4
 80029f2:	f000 ff1f 	bl	8003834 <HAL_GPIO_Init>
 80029f6:	e77c      	b.n	80028f2 <HAL_UART_MspInit+0x22>
 80029f8:	40013800 	.word	0x40013800
 80029fc:	40004400 	.word	0x40004400
 8002a00:	40004800 	.word	0x40004800
 8002a04:	40021000 	.word	0x40021000
 8002a08:	40010c00 	.word	0x40010c00
 8002a0c:	40010000 	.word	0x40010000
 8002a10:	40010800 	.word	0x40010800

08002a14 <NMI_Handler>:
 8002a14:	e7fe      	b.n	8002a14 <NMI_Handler>

08002a16 <HardFault_Handler>:
 8002a16:	e7fe      	b.n	8002a16 <HardFault_Handler>

08002a18 <MemManage_Handler>:
 8002a18:	e7fe      	b.n	8002a18 <MemManage_Handler>

08002a1a <BusFault_Handler>:
 8002a1a:	e7fe      	b.n	8002a1a <BusFault_Handler>

08002a1c <UsageFault_Handler>:
 8002a1c:	e7fe      	b.n	8002a1c <UsageFault_Handler>

08002a1e <SVC_Handler>:
 8002a1e:	4770      	bx	lr

08002a20 <DebugMon_Handler>:
 8002a20:	4770      	bx	lr

08002a22 <PendSV_Handler>:
 8002a22:	4770      	bx	lr

08002a24 <SysTick_Handler>:
 8002a24:	b508      	push	{r3, lr}
 8002a26:	f000 f8bf 	bl	8002ba8 <HAL_IncTick>
 8002a2a:	bd08      	pop	{r3, pc}

08002a2c <_getpid>:
 8002a2c:	2001      	movs	r0, #1
 8002a2e:	4770      	bx	lr

08002a30 <_kill>:
 8002a30:	b508      	push	{r3, lr}
 8002a32:	f003 fd53 	bl	80064dc <__errno>
 8002a36:	2316      	movs	r3, #22
 8002a38:	6003      	str	r3, [r0, #0]
 8002a3a:	f04f 30ff 	mov.w	r0, #4294967295
 8002a3e:	bd08      	pop	{r3, pc}

08002a40 <_exit>:
 8002a40:	b508      	push	{r3, lr}
 8002a42:	f04f 31ff 	mov.w	r1, #4294967295
 8002a46:	f7ff fff3 	bl	8002a30 <_kill>
 8002a4a:	e7fe      	b.n	8002a4a <_exit+0xa>

08002a4c <_read>:
 8002a4c:	b570      	push	{r4, r5, r6, lr}
 8002a4e:	460c      	mov	r4, r1
 8002a50:	4616      	mov	r6, r2
 8002a52:	2500      	movs	r5, #0
 8002a54:	e006      	b.n	8002a64 <_read+0x18>
 8002a56:	f3af 8000 	nop.w
 8002a5a:	4621      	mov	r1, r4
 8002a5c:	f801 0b01 	strb.w	r0, [r1], #1
 8002a60:	3501      	adds	r5, #1
 8002a62:	460c      	mov	r4, r1
 8002a64:	42b5      	cmp	r5, r6
 8002a66:	dbf6      	blt.n	8002a56 <_read+0xa>
 8002a68:	4630      	mov	r0, r6
 8002a6a:	bd70      	pop	{r4, r5, r6, pc}

08002a6c <_close>:
 8002a6c:	f04f 30ff 	mov.w	r0, #4294967295
 8002a70:	4770      	bx	lr

08002a72 <_fstat>:
 8002a72:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8002a76:	604b      	str	r3, [r1, #4]
 8002a78:	2000      	movs	r0, #0
 8002a7a:	4770      	bx	lr

08002a7c <_isatty>:
 8002a7c:	2001      	movs	r0, #1
 8002a7e:	4770      	bx	lr

08002a80 <_lseek>:
 8002a80:	2000      	movs	r0, #0
 8002a82:	4770      	bx	lr

08002a84 <_sbrk>:
 8002a84:	b510      	push	{r4, lr}
 8002a86:	4603      	mov	r3, r0
 8002a88:	4a0c      	ldr	r2, [pc, #48]	@ (8002abc <_sbrk+0x38>)
 8002a8a:	490d      	ldr	r1, [pc, #52]	@ (8002ac0 <_sbrk+0x3c>)
 8002a8c:	480d      	ldr	r0, [pc, #52]	@ (8002ac4 <_sbrk+0x40>)
 8002a8e:	6800      	ldr	r0, [r0, #0]
 8002a90:	b140      	cbz	r0, 8002aa4 <_sbrk+0x20>
 8002a92:	480c      	ldr	r0, [pc, #48]	@ (8002ac4 <_sbrk+0x40>)
 8002a94:	6800      	ldr	r0, [r0, #0]
 8002a96:	4403      	add	r3, r0
 8002a98:	1a52      	subs	r2, r2, r1
 8002a9a:	4293      	cmp	r3, r2
 8002a9c:	d806      	bhi.n	8002aac <_sbrk+0x28>
 8002a9e:	4a09      	ldr	r2, [pc, #36]	@ (8002ac4 <_sbrk+0x40>)
 8002aa0:	6013      	str	r3, [r2, #0]
 8002aa2:	bd10      	pop	{r4, pc}
 8002aa4:	4807      	ldr	r0, [pc, #28]	@ (8002ac4 <_sbrk+0x40>)
 8002aa6:	4c08      	ldr	r4, [pc, #32]	@ (8002ac8 <_sbrk+0x44>)
 8002aa8:	6004      	str	r4, [r0, #0]
 8002aaa:	e7f2      	b.n	8002a92 <_sbrk+0xe>
 8002aac:	f003 fd16 	bl	80064dc <__errno>
 8002ab0:	230c      	movs	r3, #12
 8002ab2:	6003      	str	r3, [r0, #0]
 8002ab4:	f04f 30ff 	mov.w	r0, #4294967295
 8002ab8:	e7f3      	b.n	8002aa2 <_sbrk+0x1e>
 8002aba:	bf00      	nop
 8002abc:	20005000 	.word	0x20005000
 8002ac0:	00000400 	.word	0x00000400
 8002ac4:	20000504 	.word	0x20000504
 8002ac8:	20000670 	.word	0x20000670

08002acc <SystemInit>:
 8002acc:	4770      	bx	lr
	...

08002ad0 <Reset_Handler>:
 8002ad0:	f7ff fffc 	bl	8002acc <SystemInit>
 8002ad4:	480b      	ldr	r0, [pc, #44]	@ (8002b04 <LoopFillZerobss+0xe>)
 8002ad6:	490c      	ldr	r1, [pc, #48]	@ (8002b08 <LoopFillZerobss+0x12>)
 8002ad8:	4a0c      	ldr	r2, [pc, #48]	@ (8002b0c <LoopFillZerobss+0x16>)
 8002ada:	2300      	movs	r3, #0
 8002adc:	e002      	b.n	8002ae4 <LoopCopyDataInit>

08002ade <CopyDataInit>:
 8002ade:	58d4      	ldr	r4, [r2, r3]
 8002ae0:	50c4      	str	r4, [r0, r3]
 8002ae2:	3304      	adds	r3, #4

08002ae4 <LoopCopyDataInit>:
 8002ae4:	18c4      	adds	r4, r0, r3
 8002ae6:	428c      	cmp	r4, r1
 8002ae8:	d3f9      	bcc.n	8002ade <CopyDataInit>
 8002aea:	4a09      	ldr	r2, [pc, #36]	@ (8002b10 <LoopFillZerobss+0x1a>)
 8002aec:	4c09      	ldr	r4, [pc, #36]	@ (8002b14 <LoopFillZerobss+0x1e>)
 8002aee:	2300      	movs	r3, #0
 8002af0:	e001      	b.n	8002af6 <LoopFillZerobss>

08002af2 <FillZerobss>:
 8002af2:	6013      	str	r3, [r2, #0]
 8002af4:	3204      	adds	r2, #4

08002af6 <LoopFillZerobss>:
 8002af6:	42a2      	cmp	r2, r4
 8002af8:	d3fb      	bcc.n	8002af2 <FillZerobss>
 8002afa:	f003 fcf5 	bl	80064e8 <__libc_init_array>
 8002afe:	f7ff fdcf 	bl	80026a0 <main>
 8002b02:	4770      	bx	lr
 8002b04:	20000000 	.word	0x20000000
 8002b08:	200001e8 	.word	0x200001e8
 8002b0c:	08008694 	.word	0x08008694
 8002b10:	200001e8 	.word	0x200001e8
 8002b14:	2000066c 	.word	0x2000066c

08002b18 <ADC1_2_IRQHandler>:
 8002b18:	e7fe      	b.n	8002b18 <ADC1_2_IRQHandler>
	...

08002b1c <HAL_Init>:
 8002b1c:	b580      	push	{r7, lr}
 8002b1e:	af00      	add	r7, sp, #0
 8002b20:	4b08      	ldr	r3, [pc, #32]	@ (8002b44 <HAL_Init+0x28>)
 8002b22:	681b      	ldr	r3, [r3, #0]
 8002b24:	4a07      	ldr	r2, [pc, #28]	@ (8002b44 <HAL_Init+0x28>)
 8002b26:	f043 0310 	orr.w	r3, r3, #16
 8002b2a:	6013      	str	r3, [r2, #0]
 8002b2c:	2003      	movs	r0, #3
 8002b2e:	f000 fe31 	bl	8003794 <HAL_NVIC_SetPriorityGrouping>
 8002b32:	200f      	movs	r0, #15
 8002b34:	f000 f808 	bl	8002b48 <HAL_InitTick>
 8002b38:	f7ff fe16 	bl	8002768 <HAL_MspInit>
 8002b3c:	2300      	movs	r3, #0
 8002b3e:	4618      	mov	r0, r3
 8002b40:	bd80      	pop	{r7, pc}
 8002b42:	bf00      	nop
 8002b44:	40022000 	.word	0x40022000

08002b48 <HAL_InitTick>:
 8002b48:	b580      	push	{r7, lr}
 8002b4a:	b082      	sub	sp, #8
 8002b4c:	af00      	add	r7, sp, #0
 8002b4e:	6078      	str	r0, [r7, #4]
 8002b50:	4b12      	ldr	r3, [pc, #72]	@ (8002b9c <HAL_InitTick+0x54>)
 8002b52:	681a      	ldr	r2, [r3, #0]
 8002b54:	4b12      	ldr	r3, [pc, #72]	@ (8002ba0 <HAL_InitTick+0x58>)
 8002b56:	781b      	ldrb	r3, [r3, #0]
 8002b58:	4619      	mov	r1, r3
 8002b5a:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8002b5e:	fbb3 f3f1 	udiv	r3, r3, r1
 8002b62:	fbb2 f3f3 	udiv	r3, r2, r3
 8002b66:	4618      	mov	r0, r3
 8002b68:	f000 fe3b 	bl	80037e2 <HAL_SYSTICK_Config>
 8002b6c:	4603      	mov	r3, r0
 8002b6e:	2b00      	cmp	r3, #0
 8002b70:	d001      	beq.n	8002b76 <HAL_InitTick+0x2e>
 8002b72:	2301      	movs	r3, #1
 8002b74:	e00e      	b.n	8002b94 <HAL_InitTick+0x4c>
 8002b76:	687b      	ldr	r3, [r7, #4]
 8002b78:	2b0f      	cmp	r3, #15
 8002b7a:	d80a      	bhi.n	8002b92 <HAL_InitTick+0x4a>
 8002b7c:	2200      	movs	r2, #0
 8002b7e:	6879      	ldr	r1, [r7, #4]
 8002b80:	f04f 30ff 	mov.w	r0, #4294967295
 8002b84:	f000 fe11 	bl	80037aa <HAL_NVIC_SetPriority>
 8002b88:	4a06      	ldr	r2, [pc, #24]	@ (8002ba4 <HAL_InitTick+0x5c>)
 8002b8a:	687b      	ldr	r3, [r7, #4]
 8002b8c:	6013      	str	r3, [r2, #0]
 8002b8e:	2300      	movs	r3, #0
 8002b90:	e000      	b.n	8002b94 <HAL_InitTick+0x4c>
 8002b92:	2301      	movs	r3, #1
 8002b94:	4618      	mov	r0, r3
 8002b96:	3708      	adds	r7, #8
 8002b98:	46bd      	mov	sp, r7
 8002b9a:	bd80      	pop	{r7, pc}
 8002b9c:	20000000 	.word	0x20000000
 8002ba0:	20000008 	.word	0x20000008
 8002ba4:	20000004 	.word	0x20000004

08002ba8 <HAL_IncTick>:
 8002ba8:	b480      	push	{r7}
 8002baa:	af00      	add	r7, sp, #0
 8002bac:	4b05      	ldr	r3, [pc, #20]	@ (8002bc4 <HAL_IncTick+0x1c>)
 8002bae:	781b      	ldrb	r3, [r3, #0]
 8002bb0:	461a      	mov	r2, r3
 8002bb2:	4b05      	ldr	r3, [pc, #20]	@ (8002bc8 <HAL_IncTick+0x20>)
 8002bb4:	681b      	ldr	r3, [r3, #0]
 8002bb6:	4413      	add	r3, r2
 8002bb8:	4a03      	ldr	r2, [pc, #12]	@ (8002bc8 <HAL_IncTick+0x20>)
 8002bba:	6013      	str	r3, [r2, #0]
 8002bbc:	bf00      	nop
 8002bbe:	46bd      	mov	sp, r7
 8002bc0:	bc80      	pop	{r7}
 8002bc2:	4770      	bx	lr
 8002bc4:	20000008 	.word	0x20000008
 8002bc8:	20000508 	.word	0x20000508

08002bcc <HAL_GetTick>:
 8002bcc:	b480      	push	{r7}
 8002bce:	af00      	add	r7, sp, #0
 8002bd0:	4b02      	ldr	r3, [pc, #8]	@ (8002bdc <HAL_GetTick+0x10>)
 8002bd2:	681b      	ldr	r3, [r3, #0]
 8002bd4:	4618      	mov	r0, r3
 8002bd6:	46bd      	mov	sp, r7
 8002bd8:	bc80      	pop	{r7}
 8002bda:	4770      	bx	lr
 8002bdc:	20000508 	.word	0x20000508

08002be0 <HAL_Delay>:
 8002be0:	b580      	push	{r7, lr}
 8002be2:	b084      	sub	sp, #16
 8002be4:	af00      	add	r7, sp, #0
 8002be6:	6078      	str	r0, [r7, #4]
 8002be8:	f7ff fff0 	bl	8002bcc <HAL_GetTick>
 8002bec:	60b8      	str	r0, [r7, #8]
 8002bee:	687b      	ldr	r3, [r7, #4]
 8002bf0:	60fb      	str	r3, [r7, #12]
 8002bf2:	68fb      	ldr	r3, [r7, #12]
 8002bf4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002bf8:	d005      	beq.n	8002c06 <HAL_Delay+0x26>
 8002bfa:	4b0a      	ldr	r3, [pc, #40]	@ (8002c24 <HAL_Delay+0x44>)
 8002bfc:	781b      	ldrb	r3, [r3, #0]
 8002bfe:	461a      	mov	r2, r3
 8002c00:	68fb      	ldr	r3, [r7, #12]
 8002c02:	4413      	add	r3, r2
 8002c04:	60fb      	str	r3, [r7, #12]
 8002c06:	bf00      	nop
 8002c08:	f7ff ffe0 	bl	8002bcc <HAL_GetTick>
 8002c0c:	4602      	mov	r2, r0
 8002c0e:	68bb      	ldr	r3, [r7, #8]
 8002c10:	1ad3      	subs	r3, r2, r3
 8002c12:	68fa      	ldr	r2, [r7, #12]
 8002c14:	429a      	cmp	r2, r3
 8002c16:	d8f7      	bhi.n	8002c08 <HAL_Delay+0x28>
 8002c18:	bf00      	nop
 8002c1a:	bf00      	nop
 8002c1c:	3710      	adds	r7, #16
 8002c1e:	46bd      	mov	sp, r7
 8002c20:	bd80      	pop	{r7, pc}
 8002c22:	bf00      	nop
 8002c24:	20000008 	.word	0x20000008

08002c28 <HAL_ADC_Init>:
 8002c28:	b580      	push	{r7, lr}
 8002c2a:	b086      	sub	sp, #24
 8002c2c:	af00      	add	r7, sp, #0
 8002c2e:	6078      	str	r0, [r7, #4]
 8002c30:	2300      	movs	r3, #0
 8002c32:	75fb      	strb	r3, [r7, #23]
 8002c34:	2300      	movs	r3, #0
 8002c36:	613b      	str	r3, [r7, #16]
 8002c38:	2300      	movs	r3, #0
 8002c3a:	60bb      	str	r3, [r7, #8]
 8002c3c:	2300      	movs	r3, #0
 8002c3e:	60fb      	str	r3, [r7, #12]
 8002c40:	687b      	ldr	r3, [r7, #4]
 8002c42:	2b00      	cmp	r3, #0
 8002c44:	d101      	bne.n	8002c4a <HAL_ADC_Init+0x22>
 8002c46:	2301      	movs	r3, #1
 8002c48:	e0be      	b.n	8002dc8 <HAL_ADC_Init+0x1a0>
 8002c4a:	687b      	ldr	r3, [r7, #4]
 8002c4c:	689b      	ldr	r3, [r3, #8]
 8002c4e:	2b00      	cmp	r3, #0
 8002c50:	687b      	ldr	r3, [r7, #4]
 8002c52:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002c54:	2b00      	cmp	r3, #0
 8002c56:	d109      	bne.n	8002c6c <HAL_ADC_Init+0x44>
 8002c58:	687b      	ldr	r3, [r7, #4]
 8002c5a:	2200      	movs	r2, #0
 8002c5c:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002c5e:	687b      	ldr	r3, [r7, #4]
 8002c60:	2200      	movs	r2, #0
 8002c62:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002c66:	6878      	ldr	r0, [r7, #4]
 8002c68:	f7ff fda0 	bl	80027ac <HAL_ADC_MspInit>
 8002c6c:	6878      	ldr	r0, [r7, #4]
 8002c6e:	f000 fbf1 	bl	8003454 <ADC_ConversionStop_Disable>
 8002c72:	4603      	mov	r3, r0
 8002c74:	75fb      	strb	r3, [r7, #23]
 8002c76:	687b      	ldr	r3, [r7, #4]
 8002c78:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002c7a:	f003 0310 	and.w	r3, r3, #16
 8002c7e:	2b00      	cmp	r3, #0
 8002c80:	f040 8099 	bne.w	8002db6 <HAL_ADC_Init+0x18e>
 8002c84:	7dfb      	ldrb	r3, [r7, #23]
 8002c86:	2b00      	cmp	r3, #0
 8002c88:	f040 8095 	bne.w	8002db6 <HAL_ADC_Init+0x18e>
 8002c8c:	687b      	ldr	r3, [r7, #4]
 8002c8e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002c90:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8002c94:	f023 0302 	bic.w	r3, r3, #2
 8002c98:	f043 0202 	orr.w	r2, r3, #2
 8002c9c:	687b      	ldr	r3, [r7, #4]
 8002c9e:	629a      	str	r2, [r3, #40]	@ 0x28
 8002ca0:	687b      	ldr	r3, [r7, #4]
 8002ca2:	685a      	ldr	r2, [r3, #4]
 8002ca4:	687b      	ldr	r3, [r7, #4]
 8002ca6:	69db      	ldr	r3, [r3, #28]
 8002ca8:	431a      	orrs	r2, r3
 8002caa:	687b      	ldr	r3, [r7, #4]
 8002cac:	7b1b      	ldrb	r3, [r3, #12]
 8002cae:	005b      	lsls	r3, r3, #1
 8002cb0:	4313      	orrs	r3, r2
 8002cb2:	68ba      	ldr	r2, [r7, #8]
 8002cb4:	4313      	orrs	r3, r2
 8002cb6:	60bb      	str	r3, [r7, #8]
 8002cb8:	687b      	ldr	r3, [r7, #4]
 8002cba:	689b      	ldr	r3, [r3, #8]
 8002cbc:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002cc0:	d003      	beq.n	8002cca <HAL_ADC_Init+0xa2>
 8002cc2:	687b      	ldr	r3, [r7, #4]
 8002cc4:	689b      	ldr	r3, [r3, #8]
 8002cc6:	2b01      	cmp	r3, #1
 8002cc8:	d102      	bne.n	8002cd0 <HAL_ADC_Init+0xa8>
 8002cca:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8002cce:	e000      	b.n	8002cd2 <HAL_ADC_Init+0xaa>
 8002cd0:	2300      	movs	r3, #0
 8002cd2:	693a      	ldr	r2, [r7, #16]
 8002cd4:	4313      	orrs	r3, r2
 8002cd6:	613b      	str	r3, [r7, #16]
 8002cd8:	687b      	ldr	r3, [r7, #4]
 8002cda:	7d1b      	ldrb	r3, [r3, #20]
 8002cdc:	2b01      	cmp	r3, #1
 8002cde:	d119      	bne.n	8002d14 <HAL_ADC_Init+0xec>
 8002ce0:	687b      	ldr	r3, [r7, #4]
 8002ce2:	7b1b      	ldrb	r3, [r3, #12]
 8002ce4:	2b00      	cmp	r3, #0
 8002ce6:	d109      	bne.n	8002cfc <HAL_ADC_Init+0xd4>
 8002ce8:	687b      	ldr	r3, [r7, #4]
 8002cea:	699b      	ldr	r3, [r3, #24]
 8002cec:	3b01      	subs	r3, #1
 8002cee:	035a      	lsls	r2, r3, #13
 8002cf0:	693b      	ldr	r3, [r7, #16]
 8002cf2:	4313      	orrs	r3, r2
 8002cf4:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8002cf8:	613b      	str	r3, [r7, #16]
 8002cfa:	e00b      	b.n	8002d14 <HAL_ADC_Init+0xec>
 8002cfc:	687b      	ldr	r3, [r7, #4]
 8002cfe:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002d00:	f043 0220 	orr.w	r2, r3, #32
 8002d04:	687b      	ldr	r3, [r7, #4]
 8002d06:	629a      	str	r2, [r3, #40]	@ 0x28
 8002d08:	687b      	ldr	r3, [r7, #4]
 8002d0a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002d0c:	f043 0201 	orr.w	r2, r3, #1
 8002d10:	687b      	ldr	r3, [r7, #4]
 8002d12:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002d14:	687b      	ldr	r3, [r7, #4]
 8002d16:	681b      	ldr	r3, [r3, #0]
 8002d18:	685b      	ldr	r3, [r3, #4]
 8002d1a:	f423 4169 	bic.w	r1, r3, #59648	@ 0xe900
 8002d1e:	687b      	ldr	r3, [r7, #4]
 8002d20:	681b      	ldr	r3, [r3, #0]
 8002d22:	693a      	ldr	r2, [r7, #16]
 8002d24:	430a      	orrs	r2, r1
 8002d26:	605a      	str	r2, [r3, #4]
 8002d28:	687b      	ldr	r3, [r7, #4]
 8002d2a:	681b      	ldr	r3, [r3, #0]
 8002d2c:	689a      	ldr	r2, [r3, #8]
 8002d2e:	4b28      	ldr	r3, [pc, #160]	@ (8002dd0 <HAL_ADC_Init+0x1a8>)
 8002d30:	4013      	ands	r3, r2
 8002d32:	687a      	ldr	r2, [r7, #4]
 8002d34:	6812      	ldr	r2, [r2, #0]
 8002d36:	68b9      	ldr	r1, [r7, #8]
 8002d38:	430b      	orrs	r3, r1
 8002d3a:	6093      	str	r3, [r2, #8]
 8002d3c:	687b      	ldr	r3, [r7, #4]
 8002d3e:	689b      	ldr	r3, [r3, #8]
 8002d40:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002d44:	d003      	beq.n	8002d4e <HAL_ADC_Init+0x126>
 8002d46:	687b      	ldr	r3, [r7, #4]
 8002d48:	689b      	ldr	r3, [r3, #8]
 8002d4a:	2b01      	cmp	r3, #1
 8002d4c:	d104      	bne.n	8002d58 <HAL_ADC_Init+0x130>
 8002d4e:	687b      	ldr	r3, [r7, #4]
 8002d50:	691b      	ldr	r3, [r3, #16]
 8002d52:	3b01      	subs	r3, #1
 8002d54:	051b      	lsls	r3, r3, #20
 8002d56:	60fb      	str	r3, [r7, #12]
 8002d58:	687b      	ldr	r3, [r7, #4]
 8002d5a:	681b      	ldr	r3, [r3, #0]
 8002d5c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002d5e:	f423 0170 	bic.w	r1, r3, #15728640	@ 0xf00000
 8002d62:	687b      	ldr	r3, [r7, #4]
 8002d64:	681b      	ldr	r3, [r3, #0]
 8002d66:	68fa      	ldr	r2, [r7, #12]
 8002d68:	430a      	orrs	r2, r1
 8002d6a:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002d6c:	687b      	ldr	r3, [r7, #4]
 8002d6e:	681b      	ldr	r3, [r3, #0]
 8002d70:	689a      	ldr	r2, [r3, #8]
 8002d72:	4b18      	ldr	r3, [pc, #96]	@ (8002dd4 <HAL_ADC_Init+0x1ac>)
 8002d74:	4013      	ands	r3, r2
 8002d76:	68ba      	ldr	r2, [r7, #8]
 8002d78:	429a      	cmp	r2, r3
 8002d7a:	d10b      	bne.n	8002d94 <HAL_ADC_Init+0x16c>
 8002d7c:	687b      	ldr	r3, [r7, #4]
 8002d7e:	2200      	movs	r2, #0
 8002d80:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002d82:	687b      	ldr	r3, [r7, #4]
 8002d84:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002d86:	f023 0303 	bic.w	r3, r3, #3
 8002d8a:	f043 0201 	orr.w	r2, r3, #1
 8002d8e:	687b      	ldr	r3, [r7, #4]
 8002d90:	629a      	str	r2, [r3, #40]	@ 0x28
 8002d92:	e018      	b.n	8002dc6 <HAL_ADC_Init+0x19e>
 8002d94:	687b      	ldr	r3, [r7, #4]
 8002d96:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002d98:	f023 0312 	bic.w	r3, r3, #18
 8002d9c:	f043 0210 	orr.w	r2, r3, #16
 8002da0:	687b      	ldr	r3, [r7, #4]
 8002da2:	629a      	str	r2, [r3, #40]	@ 0x28
 8002da4:	687b      	ldr	r3, [r7, #4]
 8002da6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002da8:	f043 0201 	orr.w	r2, r3, #1
 8002dac:	687b      	ldr	r3, [r7, #4]
 8002dae:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002db0:	2301      	movs	r3, #1
 8002db2:	75fb      	strb	r3, [r7, #23]
 8002db4:	e007      	b.n	8002dc6 <HAL_ADC_Init+0x19e>
 8002db6:	687b      	ldr	r3, [r7, #4]
 8002db8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002dba:	f043 0210 	orr.w	r2, r3, #16
 8002dbe:	687b      	ldr	r3, [r7, #4]
 8002dc0:	629a      	str	r2, [r3, #40]	@ 0x28
 8002dc2:	2301      	movs	r3, #1
 8002dc4:	75fb      	strb	r3, [r7, #23]
 8002dc6:	7dfb      	ldrb	r3, [r7, #23]
 8002dc8:	4618      	mov	r0, r3
 8002dca:	3718      	adds	r7, #24
 8002dcc:	46bd      	mov	sp, r7
 8002dce:	bd80      	pop	{r7, pc}
 8002dd0:	ffe1f7fd 	.word	0xffe1f7fd
 8002dd4:	ff1f0efe 	.word	0xff1f0efe

08002dd8 <HAL_ADC_Start>:
 8002dd8:	b580      	push	{r7, lr}
 8002dda:	b084      	sub	sp, #16
 8002ddc:	af00      	add	r7, sp, #0
 8002dde:	6078      	str	r0, [r7, #4]
 8002de0:	2300      	movs	r3, #0
 8002de2:	73fb      	strb	r3, [r7, #15]
 8002de4:	687b      	ldr	r3, [r7, #4]
 8002de6:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8002dea:	2b01      	cmp	r3, #1
 8002dec:	d101      	bne.n	8002df2 <HAL_ADC_Start+0x1a>
 8002dee:	2302      	movs	r3, #2
 8002df0:	e098      	b.n	8002f24 <HAL_ADC_Start+0x14c>
 8002df2:	687b      	ldr	r3, [r7, #4]
 8002df4:	2201      	movs	r2, #1
 8002df6:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002dfa:	6878      	ldr	r0, [r7, #4]
 8002dfc:	f000 fad0 	bl	80033a0 <ADC_Enable>
 8002e00:	4603      	mov	r3, r0
 8002e02:	73fb      	strb	r3, [r7, #15]
 8002e04:	7bfb      	ldrb	r3, [r7, #15]
 8002e06:	2b00      	cmp	r3, #0
 8002e08:	f040 8087 	bne.w	8002f1a <HAL_ADC_Start+0x142>
 8002e0c:	687b      	ldr	r3, [r7, #4]
 8002e0e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002e10:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8002e14:	f023 0301 	bic.w	r3, r3, #1
 8002e18:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8002e1c:	687b      	ldr	r3, [r7, #4]
 8002e1e:	629a      	str	r2, [r3, #40]	@ 0x28
 8002e20:	687b      	ldr	r3, [r7, #4]
 8002e22:	681b      	ldr	r3, [r3, #0]
 8002e24:	4a41      	ldr	r2, [pc, #260]	@ (8002f2c <HAL_ADC_Start+0x154>)
 8002e26:	4293      	cmp	r3, r2
 8002e28:	d105      	bne.n	8002e36 <HAL_ADC_Start+0x5e>
 8002e2a:	4b41      	ldr	r3, [pc, #260]	@ (8002f30 <HAL_ADC_Start+0x158>)
 8002e2c:	685b      	ldr	r3, [r3, #4]
 8002e2e:	f403 2370 	and.w	r3, r3, #983040	@ 0xf0000
 8002e32:	2b00      	cmp	r3, #0
 8002e34:	d115      	bne.n	8002e62 <HAL_ADC_Start+0x8a>
 8002e36:	687b      	ldr	r3, [r7, #4]
 8002e38:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002e3a:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 8002e3e:	687b      	ldr	r3, [r7, #4]
 8002e40:	629a      	str	r2, [r3, #40]	@ 0x28
 8002e42:	687b      	ldr	r3, [r7, #4]
 8002e44:	681b      	ldr	r3, [r3, #0]
 8002e46:	685b      	ldr	r3, [r3, #4]
 8002e48:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002e4c:	2b00      	cmp	r3, #0
 8002e4e:	d026      	beq.n	8002e9e <HAL_ADC_Start+0xc6>
 8002e50:	687b      	ldr	r3, [r7, #4]
 8002e52:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002e54:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8002e58:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8002e5c:	687b      	ldr	r3, [r7, #4]
 8002e5e:	629a      	str	r2, [r3, #40]	@ 0x28
 8002e60:	e01d      	b.n	8002e9e <HAL_ADC_Start+0xc6>
 8002e62:	687b      	ldr	r3, [r7, #4]
 8002e64:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002e66:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 8002e6a:	687b      	ldr	r3, [r7, #4]
 8002e6c:	629a      	str	r2, [r3, #40]	@ 0x28
 8002e6e:	687b      	ldr	r3, [r7, #4]
 8002e70:	681b      	ldr	r3, [r3, #0]
 8002e72:	4a2f      	ldr	r2, [pc, #188]	@ (8002f30 <HAL_ADC_Start+0x158>)
 8002e74:	4293      	cmp	r3, r2
 8002e76:	d004      	beq.n	8002e82 <HAL_ADC_Start+0xaa>
 8002e78:	687b      	ldr	r3, [r7, #4]
 8002e7a:	681b      	ldr	r3, [r3, #0]
 8002e7c:	4a2b      	ldr	r2, [pc, #172]	@ (8002f2c <HAL_ADC_Start+0x154>)
 8002e7e:	4293      	cmp	r3, r2
 8002e80:	d10d      	bne.n	8002e9e <HAL_ADC_Start+0xc6>
 8002e82:	4b2b      	ldr	r3, [pc, #172]	@ (8002f30 <HAL_ADC_Start+0x158>)
 8002e84:	685b      	ldr	r3, [r3, #4]
 8002e86:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002e8a:	2b00      	cmp	r3, #0
 8002e8c:	d007      	beq.n	8002e9e <HAL_ADC_Start+0xc6>
 8002e8e:	687b      	ldr	r3, [r7, #4]
 8002e90:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002e92:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8002e96:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8002e9a:	687b      	ldr	r3, [r7, #4]
 8002e9c:	629a      	str	r2, [r3, #40]	@ 0x28
 8002e9e:	687b      	ldr	r3, [r7, #4]
 8002ea0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002ea2:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002ea6:	2b00      	cmp	r3, #0
 8002ea8:	d006      	beq.n	8002eb8 <HAL_ADC_Start+0xe0>
 8002eaa:	687b      	ldr	r3, [r7, #4]
 8002eac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002eae:	f023 0206 	bic.w	r2, r3, #6
 8002eb2:	687b      	ldr	r3, [r7, #4]
 8002eb4:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002eb6:	e002      	b.n	8002ebe <HAL_ADC_Start+0xe6>
 8002eb8:	687b      	ldr	r3, [r7, #4]
 8002eba:	2200      	movs	r2, #0
 8002ebc:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002ebe:	687b      	ldr	r3, [r7, #4]
 8002ec0:	2200      	movs	r2, #0
 8002ec2:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002ec6:	687b      	ldr	r3, [r7, #4]
 8002ec8:	681b      	ldr	r3, [r3, #0]
 8002eca:	f06f 0202 	mvn.w	r2, #2
 8002ece:	601a      	str	r2, [r3, #0]
 8002ed0:	687b      	ldr	r3, [r7, #4]
 8002ed2:	681b      	ldr	r3, [r3, #0]
 8002ed4:	689b      	ldr	r3, [r3, #8]
 8002ed6:	f403 2360 	and.w	r3, r3, #917504	@ 0xe0000
 8002eda:	f5b3 2f60 	cmp.w	r3, #917504	@ 0xe0000
 8002ede:	d113      	bne.n	8002f08 <HAL_ADC_Start+0x130>
 8002ee0:	687b      	ldr	r3, [r7, #4]
 8002ee2:	681b      	ldr	r3, [r3, #0]
 8002ee4:	4a11      	ldr	r2, [pc, #68]	@ (8002f2c <HAL_ADC_Start+0x154>)
 8002ee6:	4293      	cmp	r3, r2
 8002ee8:	d105      	bne.n	8002ef6 <HAL_ADC_Start+0x11e>
 8002eea:	4b11      	ldr	r3, [pc, #68]	@ (8002f30 <HAL_ADC_Start+0x158>)
 8002eec:	685b      	ldr	r3, [r3, #4]
 8002eee:	f403 2370 	and.w	r3, r3, #983040	@ 0xf0000
 8002ef2:	2b00      	cmp	r3, #0
 8002ef4:	d108      	bne.n	8002f08 <HAL_ADC_Start+0x130>
 8002ef6:	687b      	ldr	r3, [r7, #4]
 8002ef8:	681b      	ldr	r3, [r3, #0]
 8002efa:	689a      	ldr	r2, [r3, #8]
 8002efc:	687b      	ldr	r3, [r7, #4]
 8002efe:	681b      	ldr	r3, [r3, #0]
 8002f00:	f442 02a0 	orr.w	r2, r2, #5242880	@ 0x500000
 8002f04:	609a      	str	r2, [r3, #8]
 8002f06:	e00c      	b.n	8002f22 <HAL_ADC_Start+0x14a>
 8002f08:	687b      	ldr	r3, [r7, #4]
 8002f0a:	681b      	ldr	r3, [r3, #0]
 8002f0c:	689a      	ldr	r2, [r3, #8]
 8002f0e:	687b      	ldr	r3, [r7, #4]
 8002f10:	681b      	ldr	r3, [r3, #0]
 8002f12:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 8002f16:	609a      	str	r2, [r3, #8]
 8002f18:	e003      	b.n	8002f22 <HAL_ADC_Start+0x14a>
 8002f1a:	687b      	ldr	r3, [r7, #4]
 8002f1c:	2200      	movs	r2, #0
 8002f1e:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002f22:	7bfb      	ldrb	r3, [r7, #15]
 8002f24:	4618      	mov	r0, r3
 8002f26:	3710      	adds	r7, #16
 8002f28:	46bd      	mov	sp, r7
 8002f2a:	bd80      	pop	{r7, pc}
 8002f2c:	40012800 	.word	0x40012800
 8002f30:	40012400 	.word	0x40012400

08002f34 <HAL_ADC_Stop>:
 8002f34:	b580      	push	{r7, lr}
 8002f36:	b084      	sub	sp, #16
 8002f38:	af00      	add	r7, sp, #0
 8002f3a:	6078      	str	r0, [r7, #4]
 8002f3c:	2300      	movs	r3, #0
 8002f3e:	73fb      	strb	r3, [r7, #15]
 8002f40:	687b      	ldr	r3, [r7, #4]
 8002f42:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8002f46:	2b01      	cmp	r3, #1
 8002f48:	d101      	bne.n	8002f4e <HAL_ADC_Stop+0x1a>
 8002f4a:	2302      	movs	r3, #2
 8002f4c:	e01a      	b.n	8002f84 <HAL_ADC_Stop+0x50>
 8002f4e:	687b      	ldr	r3, [r7, #4]
 8002f50:	2201      	movs	r2, #1
 8002f52:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002f56:	6878      	ldr	r0, [r7, #4]
 8002f58:	f000 fa7c 	bl	8003454 <ADC_ConversionStop_Disable>
 8002f5c:	4603      	mov	r3, r0
 8002f5e:	73fb      	strb	r3, [r7, #15]
 8002f60:	7bfb      	ldrb	r3, [r7, #15]
 8002f62:	2b00      	cmp	r3, #0
 8002f64:	d109      	bne.n	8002f7a <HAL_ADC_Stop+0x46>
 8002f66:	687b      	ldr	r3, [r7, #4]
 8002f68:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002f6a:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8002f6e:	f023 0301 	bic.w	r3, r3, #1
 8002f72:	f043 0201 	orr.w	r2, r3, #1
 8002f76:	687b      	ldr	r3, [r7, #4]
 8002f78:	629a      	str	r2, [r3, #40]	@ 0x28
 8002f7a:	687b      	ldr	r3, [r7, #4]
 8002f7c:	2200      	movs	r2, #0
 8002f7e:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002f82:	7bfb      	ldrb	r3, [r7, #15]
 8002f84:	4618      	mov	r0, r3
 8002f86:	3710      	adds	r7, #16
 8002f88:	46bd      	mov	sp, r7
 8002f8a:	bd80      	pop	{r7, pc}

08002f8c <HAL_ADC_PollForConversion>:
 8002f8c:	b590      	push	{r4, r7, lr}
 8002f8e:	b087      	sub	sp, #28
 8002f90:	af00      	add	r7, sp, #0
 8002f92:	6078      	str	r0, [r7, #4]
 8002f94:	6039      	str	r1, [r7, #0]
 8002f96:	2300      	movs	r3, #0
 8002f98:	617b      	str	r3, [r7, #20]
 8002f9a:	2300      	movs	r3, #0
 8002f9c:	60fb      	str	r3, [r7, #12]
 8002f9e:	2300      	movs	r3, #0
 8002fa0:	613b      	str	r3, [r7, #16]
 8002fa2:	f7ff fe13 	bl	8002bcc <HAL_GetTick>
 8002fa6:	6178      	str	r0, [r7, #20]
 8002fa8:	687b      	ldr	r3, [r7, #4]
 8002faa:	681b      	ldr	r3, [r3, #0]
 8002fac:	689b      	ldr	r3, [r3, #8]
 8002fae:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002fb2:	2b00      	cmp	r3, #0
 8002fb4:	d00b      	beq.n	8002fce <HAL_ADC_PollForConversion+0x42>
 8002fb6:	687b      	ldr	r3, [r7, #4]
 8002fb8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002fba:	f043 0220 	orr.w	r2, r3, #32
 8002fbe:	687b      	ldr	r3, [r7, #4]
 8002fc0:	629a      	str	r2, [r3, #40]	@ 0x28
 8002fc2:	687b      	ldr	r3, [r7, #4]
 8002fc4:	2200      	movs	r2, #0
 8002fc6:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002fca:	2301      	movs	r3, #1
 8002fcc:	e0d3      	b.n	8003176 <HAL_ADC_PollForConversion+0x1ea>
 8002fce:	687b      	ldr	r3, [r7, #4]
 8002fd0:	681b      	ldr	r3, [r3, #0]
 8002fd2:	685b      	ldr	r3, [r3, #4]
 8002fd4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002fd8:	2b00      	cmp	r3, #0
 8002fda:	d131      	bne.n	8003040 <HAL_ADC_PollForConversion+0xb4>
 8002fdc:	687b      	ldr	r3, [r7, #4]
 8002fde:	681b      	ldr	r3, [r3, #0]
 8002fe0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002fe2:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
 8002fe6:	2b00      	cmp	r3, #0
 8002fe8:	d12a      	bne.n	8003040 <HAL_ADC_PollForConversion+0xb4>
 8002fea:	e021      	b.n	8003030 <HAL_ADC_PollForConversion+0xa4>
 8002fec:	683b      	ldr	r3, [r7, #0]
 8002fee:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002ff2:	d01d      	beq.n	8003030 <HAL_ADC_PollForConversion+0xa4>
 8002ff4:	683b      	ldr	r3, [r7, #0]
 8002ff6:	2b00      	cmp	r3, #0
 8002ff8:	d007      	beq.n	800300a <HAL_ADC_PollForConversion+0x7e>
 8002ffa:	f7ff fde7 	bl	8002bcc <HAL_GetTick>
 8002ffe:	4602      	mov	r2, r0
 8003000:	697b      	ldr	r3, [r7, #20]
 8003002:	1ad3      	subs	r3, r2, r3
 8003004:	683a      	ldr	r2, [r7, #0]
 8003006:	429a      	cmp	r2, r3
 8003008:	d212      	bcs.n	8003030 <HAL_ADC_PollForConversion+0xa4>
 800300a:	687b      	ldr	r3, [r7, #4]
 800300c:	681b      	ldr	r3, [r3, #0]
 800300e:	681b      	ldr	r3, [r3, #0]
 8003010:	f003 0302 	and.w	r3, r3, #2
 8003014:	2b00      	cmp	r3, #0
 8003016:	d10b      	bne.n	8003030 <HAL_ADC_PollForConversion+0xa4>
 8003018:	687b      	ldr	r3, [r7, #4]
 800301a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800301c:	f043 0204 	orr.w	r2, r3, #4
 8003020:	687b      	ldr	r3, [r7, #4]
 8003022:	629a      	str	r2, [r3, #40]	@ 0x28
 8003024:	687b      	ldr	r3, [r7, #4]
 8003026:	2200      	movs	r2, #0
 8003028:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 800302c:	2303      	movs	r3, #3
 800302e:	e0a2      	b.n	8003176 <HAL_ADC_PollForConversion+0x1ea>
 8003030:	687b      	ldr	r3, [r7, #4]
 8003032:	681b      	ldr	r3, [r3, #0]
 8003034:	681b      	ldr	r3, [r3, #0]
 8003036:	f003 0302 	and.w	r3, r3, #2
 800303a:	2b00      	cmp	r3, #0
 800303c:	d0d6      	beq.n	8002fec <HAL_ADC_PollForConversion+0x60>
 800303e:	e070      	b.n	8003122 <HAL_ADC_PollForConversion+0x196>
 8003040:	4b4f      	ldr	r3, [pc, #316]	@ (8003180 <HAL_ADC_PollForConversion+0x1f4>)
 8003042:	681c      	ldr	r4, [r3, #0]
 8003044:	2002      	movs	r0, #2
 8003046:	f001 fa41 	bl	80044cc <HAL_RCCEx_GetPeriphCLKFreq>
 800304a:	4603      	mov	r3, r0
 800304c:	fbb4 f2f3 	udiv	r2, r4, r3
 8003050:	687b      	ldr	r3, [r7, #4]
 8003052:	681b      	ldr	r3, [r3, #0]
 8003054:	6919      	ldr	r1, [r3, #16]
 8003056:	4b4b      	ldr	r3, [pc, #300]	@ (8003184 <HAL_ADC_PollForConversion+0x1f8>)
 8003058:	400b      	ands	r3, r1
 800305a:	2b00      	cmp	r3, #0
 800305c:	d118      	bne.n	8003090 <HAL_ADC_PollForConversion+0x104>
 800305e:	687b      	ldr	r3, [r7, #4]
 8003060:	681b      	ldr	r3, [r3, #0]
 8003062:	68d9      	ldr	r1, [r3, #12]
 8003064:	4b48      	ldr	r3, [pc, #288]	@ (8003188 <HAL_ADC_PollForConversion+0x1fc>)
 8003066:	400b      	ands	r3, r1
 8003068:	2b00      	cmp	r3, #0
 800306a:	d111      	bne.n	8003090 <HAL_ADC_PollForConversion+0x104>
 800306c:	687b      	ldr	r3, [r7, #4]
 800306e:	681b      	ldr	r3, [r3, #0]
 8003070:	6919      	ldr	r1, [r3, #16]
 8003072:	4b46      	ldr	r3, [pc, #280]	@ (800318c <HAL_ADC_PollForConversion+0x200>)
 8003074:	400b      	ands	r3, r1
 8003076:	2b00      	cmp	r3, #0
 8003078:	d108      	bne.n	800308c <HAL_ADC_PollForConversion+0x100>
 800307a:	687b      	ldr	r3, [r7, #4]
 800307c:	681b      	ldr	r3, [r3, #0]
 800307e:	68d9      	ldr	r1, [r3, #12]
 8003080:	4b43      	ldr	r3, [pc, #268]	@ (8003190 <HAL_ADC_PollForConversion+0x204>)
 8003082:	400b      	ands	r3, r1
 8003084:	2b00      	cmp	r3, #0
 8003086:	d101      	bne.n	800308c <HAL_ADC_PollForConversion+0x100>
 8003088:	2314      	movs	r3, #20
 800308a:	e020      	b.n	80030ce <HAL_ADC_PollForConversion+0x142>
 800308c:	2329      	movs	r3, #41	@ 0x29
 800308e:	e01e      	b.n	80030ce <HAL_ADC_PollForConversion+0x142>
 8003090:	687b      	ldr	r3, [r7, #4]
 8003092:	681b      	ldr	r3, [r3, #0]
 8003094:	6919      	ldr	r1, [r3, #16]
 8003096:	4b3d      	ldr	r3, [pc, #244]	@ (800318c <HAL_ADC_PollForConversion+0x200>)
 8003098:	400b      	ands	r3, r1
 800309a:	2b00      	cmp	r3, #0
 800309c:	d106      	bne.n	80030ac <HAL_ADC_PollForConversion+0x120>
 800309e:	687b      	ldr	r3, [r7, #4]
 80030a0:	681b      	ldr	r3, [r3, #0]
 80030a2:	68d9      	ldr	r1, [r3, #12]
 80030a4:	4b3a      	ldr	r3, [pc, #232]	@ (8003190 <HAL_ADC_PollForConversion+0x204>)
 80030a6:	400b      	ands	r3, r1
 80030a8:	2b00      	cmp	r3, #0
 80030aa:	d00d      	beq.n	80030c8 <HAL_ADC_PollForConversion+0x13c>
 80030ac:	687b      	ldr	r3, [r7, #4]
 80030ae:	681b      	ldr	r3, [r3, #0]
 80030b0:	6919      	ldr	r1, [r3, #16]
 80030b2:	4b38      	ldr	r3, [pc, #224]	@ (8003194 <HAL_ADC_PollForConversion+0x208>)
 80030b4:	400b      	ands	r3, r1
 80030b6:	2b00      	cmp	r3, #0
 80030b8:	d108      	bne.n	80030cc <HAL_ADC_PollForConversion+0x140>
 80030ba:	687b      	ldr	r3, [r7, #4]
 80030bc:	681b      	ldr	r3, [r3, #0]
 80030be:	68d9      	ldr	r1, [r3, #12]
 80030c0:	4b34      	ldr	r3, [pc, #208]	@ (8003194 <HAL_ADC_PollForConversion+0x208>)
 80030c2:	400b      	ands	r3, r1
 80030c4:	2b00      	cmp	r3, #0
 80030c6:	d101      	bne.n	80030cc <HAL_ADC_PollForConversion+0x140>
 80030c8:	2354      	movs	r3, #84	@ 0x54
 80030ca:	e000      	b.n	80030ce <HAL_ADC_PollForConversion+0x142>
 80030cc:	23fc      	movs	r3, #252	@ 0xfc
 80030ce:	fb02 f303 	mul.w	r3, r2, r3
 80030d2:	613b      	str	r3, [r7, #16]
 80030d4:	e021      	b.n	800311a <HAL_ADC_PollForConversion+0x18e>
 80030d6:	683b      	ldr	r3, [r7, #0]
 80030d8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80030dc:	d01a      	beq.n	8003114 <HAL_ADC_PollForConversion+0x188>
 80030de:	683b      	ldr	r3, [r7, #0]
 80030e0:	2b00      	cmp	r3, #0
 80030e2:	d007      	beq.n	80030f4 <HAL_ADC_PollForConversion+0x168>
 80030e4:	f7ff fd72 	bl	8002bcc <HAL_GetTick>
 80030e8:	4602      	mov	r2, r0
 80030ea:	697b      	ldr	r3, [r7, #20]
 80030ec:	1ad3      	subs	r3, r2, r3
 80030ee:	683a      	ldr	r2, [r7, #0]
 80030f0:	429a      	cmp	r2, r3
 80030f2:	d20f      	bcs.n	8003114 <HAL_ADC_PollForConversion+0x188>
 80030f4:	68fb      	ldr	r3, [r7, #12]
 80030f6:	693a      	ldr	r2, [r7, #16]
 80030f8:	429a      	cmp	r2, r3
 80030fa:	d90b      	bls.n	8003114 <HAL_ADC_PollForConversion+0x188>
 80030fc:	687b      	ldr	r3, [r7, #4]
 80030fe:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003100:	f043 0204 	orr.w	r2, r3, #4
 8003104:	687b      	ldr	r3, [r7, #4]
 8003106:	629a      	str	r2, [r3, #40]	@ 0x28
 8003108:	687b      	ldr	r3, [r7, #4]
 800310a:	2200      	movs	r2, #0
 800310c:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8003110:	2303      	movs	r3, #3
 8003112:	e030      	b.n	8003176 <HAL_ADC_PollForConversion+0x1ea>
 8003114:	68fb      	ldr	r3, [r7, #12]
 8003116:	3301      	adds	r3, #1
 8003118:	60fb      	str	r3, [r7, #12]
 800311a:	68fb      	ldr	r3, [r7, #12]
 800311c:	693a      	ldr	r2, [r7, #16]
 800311e:	429a      	cmp	r2, r3
 8003120:	d8d9      	bhi.n	80030d6 <HAL_ADC_PollForConversion+0x14a>
 8003122:	687b      	ldr	r3, [r7, #4]
 8003124:	681b      	ldr	r3, [r3, #0]
 8003126:	f06f 0212 	mvn.w	r2, #18
 800312a:	601a      	str	r2, [r3, #0]
 800312c:	687b      	ldr	r3, [r7, #4]
 800312e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003130:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8003134:	687b      	ldr	r3, [r7, #4]
 8003136:	629a      	str	r2, [r3, #40]	@ 0x28
 8003138:	687b      	ldr	r3, [r7, #4]
 800313a:	681b      	ldr	r3, [r3, #0]
 800313c:	689b      	ldr	r3, [r3, #8]
 800313e:	f403 2360 	and.w	r3, r3, #917504	@ 0xe0000
 8003142:	f5b3 2f60 	cmp.w	r3, #917504	@ 0xe0000
 8003146:	d115      	bne.n	8003174 <HAL_ADC_PollForConversion+0x1e8>
 8003148:	687b      	ldr	r3, [r7, #4]
 800314a:	7b1b      	ldrb	r3, [r3, #12]
 800314c:	2b00      	cmp	r3, #0
 800314e:	d111      	bne.n	8003174 <HAL_ADC_PollForConversion+0x1e8>
 8003150:	687b      	ldr	r3, [r7, #4]
 8003152:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003154:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8003158:	687b      	ldr	r3, [r7, #4]
 800315a:	629a      	str	r2, [r3, #40]	@ 0x28
 800315c:	687b      	ldr	r3, [r7, #4]
 800315e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003160:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8003164:	2b00      	cmp	r3, #0
 8003166:	d105      	bne.n	8003174 <HAL_ADC_PollForConversion+0x1e8>
 8003168:	687b      	ldr	r3, [r7, #4]
 800316a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800316c:	f043 0201 	orr.w	r2, r3, #1
 8003170:	687b      	ldr	r3, [r7, #4]
 8003172:	629a      	str	r2, [r3, #40]	@ 0x28
 8003174:	2300      	movs	r3, #0
 8003176:	4618      	mov	r0, r3
 8003178:	371c      	adds	r7, #28
 800317a:	46bd      	mov	sp, r7
 800317c:	bd90      	pop	{r4, r7, pc}
 800317e:	bf00      	nop
 8003180:	20000000 	.word	0x20000000
 8003184:	24924924 	.word	0x24924924
 8003188:	00924924 	.word	0x00924924
 800318c:	12492492 	.word	0x12492492
 8003190:	00492492 	.word	0x00492492
 8003194:	00249249 	.word	0x00249249

08003198 <HAL_ADC_GetValue>:
 8003198:	b480      	push	{r7}
 800319a:	b083      	sub	sp, #12
 800319c:	af00      	add	r7, sp, #0
 800319e:	6078      	str	r0, [r7, #4]
 80031a0:	687b      	ldr	r3, [r7, #4]
 80031a2:	681b      	ldr	r3, [r3, #0]
 80031a4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80031a6:	4618      	mov	r0, r3
 80031a8:	370c      	adds	r7, #12
 80031aa:	46bd      	mov	sp, r7
 80031ac:	bc80      	pop	{r7}
 80031ae:	4770      	bx	lr

080031b0 <HAL_ADC_ConfigChannel>:
 80031b0:	b480      	push	{r7}
 80031b2:	b085      	sub	sp, #20
 80031b4:	af00      	add	r7, sp, #0
 80031b6:	6078      	str	r0, [r7, #4]
 80031b8:	6039      	str	r1, [r7, #0]
 80031ba:	2300      	movs	r3, #0
 80031bc:	73fb      	strb	r3, [r7, #15]
 80031be:	2300      	movs	r3, #0
 80031c0:	60bb      	str	r3, [r7, #8]
 80031c2:	687b      	ldr	r3, [r7, #4]
 80031c4:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 80031c8:	2b01      	cmp	r3, #1
 80031ca:	d101      	bne.n	80031d0 <HAL_ADC_ConfigChannel+0x20>
 80031cc:	2302      	movs	r3, #2
 80031ce:	e0dc      	b.n	800338a <HAL_ADC_ConfigChannel+0x1da>
 80031d0:	687b      	ldr	r3, [r7, #4]
 80031d2:	2201      	movs	r2, #1
 80031d4:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80031d8:	683b      	ldr	r3, [r7, #0]
 80031da:	685b      	ldr	r3, [r3, #4]
 80031dc:	2b06      	cmp	r3, #6
 80031de:	d81c      	bhi.n	800321a <HAL_ADC_ConfigChannel+0x6a>
 80031e0:	687b      	ldr	r3, [r7, #4]
 80031e2:	681b      	ldr	r3, [r3, #0]
 80031e4:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80031e6:	683b      	ldr	r3, [r7, #0]
 80031e8:	685a      	ldr	r2, [r3, #4]
 80031ea:	4613      	mov	r3, r2
 80031ec:	009b      	lsls	r3, r3, #2
 80031ee:	4413      	add	r3, r2
 80031f0:	3b05      	subs	r3, #5
 80031f2:	221f      	movs	r2, #31
 80031f4:	fa02 f303 	lsl.w	r3, r2, r3
 80031f8:	43db      	mvns	r3, r3
 80031fa:	4019      	ands	r1, r3
 80031fc:	683b      	ldr	r3, [r7, #0]
 80031fe:	6818      	ldr	r0, [r3, #0]
 8003200:	683b      	ldr	r3, [r7, #0]
 8003202:	685a      	ldr	r2, [r3, #4]
 8003204:	4613      	mov	r3, r2
 8003206:	009b      	lsls	r3, r3, #2
 8003208:	4413      	add	r3, r2
 800320a:	3b05      	subs	r3, #5
 800320c:	fa00 f203 	lsl.w	r2, r0, r3
 8003210:	687b      	ldr	r3, [r7, #4]
 8003212:	681b      	ldr	r3, [r3, #0]
 8003214:	430a      	orrs	r2, r1
 8003216:	635a      	str	r2, [r3, #52]	@ 0x34
 8003218:	e03c      	b.n	8003294 <HAL_ADC_ConfigChannel+0xe4>
 800321a:	683b      	ldr	r3, [r7, #0]
 800321c:	685b      	ldr	r3, [r3, #4]
 800321e:	2b0c      	cmp	r3, #12
 8003220:	d81c      	bhi.n	800325c <HAL_ADC_ConfigChannel+0xac>
 8003222:	687b      	ldr	r3, [r7, #4]
 8003224:	681b      	ldr	r3, [r3, #0]
 8003226:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8003228:	683b      	ldr	r3, [r7, #0]
 800322a:	685a      	ldr	r2, [r3, #4]
 800322c:	4613      	mov	r3, r2
 800322e:	009b      	lsls	r3, r3, #2
 8003230:	4413      	add	r3, r2
 8003232:	3b23      	subs	r3, #35	@ 0x23
 8003234:	221f      	movs	r2, #31
 8003236:	fa02 f303 	lsl.w	r3, r2, r3
 800323a:	43db      	mvns	r3, r3
 800323c:	4019      	ands	r1, r3
 800323e:	683b      	ldr	r3, [r7, #0]
 8003240:	6818      	ldr	r0, [r3, #0]
 8003242:	683b      	ldr	r3, [r7, #0]
 8003244:	685a      	ldr	r2, [r3, #4]
 8003246:	4613      	mov	r3, r2
 8003248:	009b      	lsls	r3, r3, #2
 800324a:	4413      	add	r3, r2
 800324c:	3b23      	subs	r3, #35	@ 0x23
 800324e:	fa00 f203 	lsl.w	r2, r0, r3
 8003252:	687b      	ldr	r3, [r7, #4]
 8003254:	681b      	ldr	r3, [r3, #0]
 8003256:	430a      	orrs	r2, r1
 8003258:	631a      	str	r2, [r3, #48]	@ 0x30
 800325a:	e01b      	b.n	8003294 <HAL_ADC_ConfigChannel+0xe4>
 800325c:	687b      	ldr	r3, [r7, #4]
 800325e:	681b      	ldr	r3, [r3, #0]
 8003260:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8003262:	683b      	ldr	r3, [r7, #0]
 8003264:	685a      	ldr	r2, [r3, #4]
 8003266:	4613      	mov	r3, r2
 8003268:	009b      	lsls	r3, r3, #2
 800326a:	4413      	add	r3, r2
 800326c:	3b41      	subs	r3, #65	@ 0x41
 800326e:	221f      	movs	r2, #31
 8003270:	fa02 f303 	lsl.w	r3, r2, r3
 8003274:	43db      	mvns	r3, r3
 8003276:	4019      	ands	r1, r3
 8003278:	683b      	ldr	r3, [r7, #0]
 800327a:	6818      	ldr	r0, [r3, #0]
 800327c:	683b      	ldr	r3, [r7, #0]
 800327e:	685a      	ldr	r2, [r3, #4]
 8003280:	4613      	mov	r3, r2
 8003282:	009b      	lsls	r3, r3, #2
 8003284:	4413      	add	r3, r2
 8003286:	3b41      	subs	r3, #65	@ 0x41
 8003288:	fa00 f203 	lsl.w	r2, r0, r3
 800328c:	687b      	ldr	r3, [r7, #4]
 800328e:	681b      	ldr	r3, [r3, #0]
 8003290:	430a      	orrs	r2, r1
 8003292:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003294:	683b      	ldr	r3, [r7, #0]
 8003296:	681b      	ldr	r3, [r3, #0]
 8003298:	2b09      	cmp	r3, #9
 800329a:	d91c      	bls.n	80032d6 <HAL_ADC_ConfigChannel+0x126>
 800329c:	687b      	ldr	r3, [r7, #4]
 800329e:	681b      	ldr	r3, [r3, #0]
 80032a0:	68d9      	ldr	r1, [r3, #12]
 80032a2:	683b      	ldr	r3, [r7, #0]
 80032a4:	681a      	ldr	r2, [r3, #0]
 80032a6:	4613      	mov	r3, r2
 80032a8:	005b      	lsls	r3, r3, #1
 80032aa:	4413      	add	r3, r2
 80032ac:	3b1e      	subs	r3, #30
 80032ae:	2207      	movs	r2, #7
 80032b0:	fa02 f303 	lsl.w	r3, r2, r3
 80032b4:	43db      	mvns	r3, r3
 80032b6:	4019      	ands	r1, r3
 80032b8:	683b      	ldr	r3, [r7, #0]
 80032ba:	6898      	ldr	r0, [r3, #8]
 80032bc:	683b      	ldr	r3, [r7, #0]
 80032be:	681a      	ldr	r2, [r3, #0]
 80032c0:	4613      	mov	r3, r2
 80032c2:	005b      	lsls	r3, r3, #1
 80032c4:	4413      	add	r3, r2
 80032c6:	3b1e      	subs	r3, #30
 80032c8:	fa00 f203 	lsl.w	r2, r0, r3
 80032cc:	687b      	ldr	r3, [r7, #4]
 80032ce:	681b      	ldr	r3, [r3, #0]
 80032d0:	430a      	orrs	r2, r1
 80032d2:	60da      	str	r2, [r3, #12]
 80032d4:	e019      	b.n	800330a <HAL_ADC_ConfigChannel+0x15a>
 80032d6:	687b      	ldr	r3, [r7, #4]
 80032d8:	681b      	ldr	r3, [r3, #0]
 80032da:	6919      	ldr	r1, [r3, #16]
 80032dc:	683b      	ldr	r3, [r7, #0]
 80032de:	681a      	ldr	r2, [r3, #0]
 80032e0:	4613      	mov	r3, r2
 80032e2:	005b      	lsls	r3, r3, #1
 80032e4:	4413      	add	r3, r2
 80032e6:	2207      	movs	r2, #7
 80032e8:	fa02 f303 	lsl.w	r3, r2, r3
 80032ec:	43db      	mvns	r3, r3
 80032ee:	4019      	ands	r1, r3
 80032f0:	683b      	ldr	r3, [r7, #0]
 80032f2:	6898      	ldr	r0, [r3, #8]
 80032f4:	683b      	ldr	r3, [r7, #0]
 80032f6:	681a      	ldr	r2, [r3, #0]
 80032f8:	4613      	mov	r3, r2
 80032fa:	005b      	lsls	r3, r3, #1
 80032fc:	4413      	add	r3, r2
 80032fe:	fa00 f203 	lsl.w	r2, r0, r3
 8003302:	687b      	ldr	r3, [r7, #4]
 8003304:	681b      	ldr	r3, [r3, #0]
 8003306:	430a      	orrs	r2, r1
 8003308:	611a      	str	r2, [r3, #16]
 800330a:	683b      	ldr	r3, [r7, #0]
 800330c:	681b      	ldr	r3, [r3, #0]
 800330e:	2b10      	cmp	r3, #16
 8003310:	d003      	beq.n	800331a <HAL_ADC_ConfigChannel+0x16a>
 8003312:	683b      	ldr	r3, [r7, #0]
 8003314:	681b      	ldr	r3, [r3, #0]
 8003316:	2b11      	cmp	r3, #17
 8003318:	d132      	bne.n	8003380 <HAL_ADC_ConfigChannel+0x1d0>
 800331a:	687b      	ldr	r3, [r7, #4]
 800331c:	681b      	ldr	r3, [r3, #0]
 800331e:	4a1d      	ldr	r2, [pc, #116]	@ (8003394 <HAL_ADC_ConfigChannel+0x1e4>)
 8003320:	4293      	cmp	r3, r2
 8003322:	d125      	bne.n	8003370 <HAL_ADC_ConfigChannel+0x1c0>
 8003324:	687b      	ldr	r3, [r7, #4]
 8003326:	681b      	ldr	r3, [r3, #0]
 8003328:	689b      	ldr	r3, [r3, #8]
 800332a:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800332e:	2b00      	cmp	r3, #0
 8003330:	d126      	bne.n	8003380 <HAL_ADC_ConfigChannel+0x1d0>
 8003332:	687b      	ldr	r3, [r7, #4]
 8003334:	681b      	ldr	r3, [r3, #0]
 8003336:	689a      	ldr	r2, [r3, #8]
 8003338:	687b      	ldr	r3, [r7, #4]
 800333a:	681b      	ldr	r3, [r3, #0]
 800333c:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8003340:	609a      	str	r2, [r3, #8]
 8003342:	683b      	ldr	r3, [r7, #0]
 8003344:	681b      	ldr	r3, [r3, #0]
 8003346:	2b10      	cmp	r3, #16
 8003348:	d11a      	bne.n	8003380 <HAL_ADC_ConfigChannel+0x1d0>
 800334a:	4b13      	ldr	r3, [pc, #76]	@ (8003398 <HAL_ADC_ConfigChannel+0x1e8>)
 800334c:	681b      	ldr	r3, [r3, #0]
 800334e:	4a13      	ldr	r2, [pc, #76]	@ (800339c <HAL_ADC_ConfigChannel+0x1ec>)
 8003350:	fba2 2303 	umull	r2, r3, r2, r3
 8003354:	0c9a      	lsrs	r2, r3, #18
 8003356:	4613      	mov	r3, r2
 8003358:	009b      	lsls	r3, r3, #2
 800335a:	4413      	add	r3, r2
 800335c:	005b      	lsls	r3, r3, #1
 800335e:	60bb      	str	r3, [r7, #8]
 8003360:	e002      	b.n	8003368 <HAL_ADC_ConfigChannel+0x1b8>
 8003362:	68bb      	ldr	r3, [r7, #8]
 8003364:	3b01      	subs	r3, #1
 8003366:	60bb      	str	r3, [r7, #8]
 8003368:	68bb      	ldr	r3, [r7, #8]
 800336a:	2b00      	cmp	r3, #0
 800336c:	d1f9      	bne.n	8003362 <HAL_ADC_ConfigChannel+0x1b2>
 800336e:	e007      	b.n	8003380 <HAL_ADC_ConfigChannel+0x1d0>
 8003370:	687b      	ldr	r3, [r7, #4]
 8003372:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003374:	f043 0220 	orr.w	r2, r3, #32
 8003378:	687b      	ldr	r3, [r7, #4]
 800337a:	629a      	str	r2, [r3, #40]	@ 0x28
 800337c:	2301      	movs	r3, #1
 800337e:	73fb      	strb	r3, [r7, #15]
 8003380:	687b      	ldr	r3, [r7, #4]
 8003382:	2200      	movs	r2, #0
 8003384:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8003388:	7bfb      	ldrb	r3, [r7, #15]
 800338a:	4618      	mov	r0, r3
 800338c:	3714      	adds	r7, #20
 800338e:	46bd      	mov	sp, r7
 8003390:	bc80      	pop	{r7}
 8003392:	4770      	bx	lr
 8003394:	40012400 	.word	0x40012400
 8003398:	20000000 	.word	0x20000000
 800339c:	431bde83 	.word	0x431bde83

080033a0 <ADC_Enable>:
 80033a0:	b580      	push	{r7, lr}
 80033a2:	b084      	sub	sp, #16
 80033a4:	af00      	add	r7, sp, #0
 80033a6:	6078      	str	r0, [r7, #4]
 80033a8:	2300      	movs	r3, #0
 80033aa:	60fb      	str	r3, [r7, #12]
 80033ac:	2300      	movs	r3, #0
 80033ae:	60bb      	str	r3, [r7, #8]
 80033b0:	687b      	ldr	r3, [r7, #4]
 80033b2:	681b      	ldr	r3, [r3, #0]
 80033b4:	689b      	ldr	r3, [r3, #8]
 80033b6:	f003 0301 	and.w	r3, r3, #1
 80033ba:	2b01      	cmp	r3, #1
 80033bc:	d040      	beq.n	8003440 <ADC_Enable+0xa0>
 80033be:	687b      	ldr	r3, [r7, #4]
 80033c0:	681b      	ldr	r3, [r3, #0]
 80033c2:	689a      	ldr	r2, [r3, #8]
 80033c4:	687b      	ldr	r3, [r7, #4]
 80033c6:	681b      	ldr	r3, [r3, #0]
 80033c8:	f042 0201 	orr.w	r2, r2, #1
 80033cc:	609a      	str	r2, [r3, #8]
 80033ce:	4b1f      	ldr	r3, [pc, #124]	@ (800344c <ADC_Enable+0xac>)
 80033d0:	681b      	ldr	r3, [r3, #0]
 80033d2:	4a1f      	ldr	r2, [pc, #124]	@ (8003450 <ADC_Enable+0xb0>)
 80033d4:	fba2 2303 	umull	r2, r3, r2, r3
 80033d8:	0c9b      	lsrs	r3, r3, #18
 80033da:	60bb      	str	r3, [r7, #8]
 80033dc:	e002      	b.n	80033e4 <ADC_Enable+0x44>
 80033de:	68bb      	ldr	r3, [r7, #8]
 80033e0:	3b01      	subs	r3, #1
 80033e2:	60bb      	str	r3, [r7, #8]
 80033e4:	68bb      	ldr	r3, [r7, #8]
 80033e6:	2b00      	cmp	r3, #0
 80033e8:	d1f9      	bne.n	80033de <ADC_Enable+0x3e>
 80033ea:	f7ff fbef 	bl	8002bcc <HAL_GetTick>
 80033ee:	60f8      	str	r0, [r7, #12]
 80033f0:	e01f      	b.n	8003432 <ADC_Enable+0x92>
 80033f2:	f7ff fbeb 	bl	8002bcc <HAL_GetTick>
 80033f6:	4602      	mov	r2, r0
 80033f8:	68fb      	ldr	r3, [r7, #12]
 80033fa:	1ad3      	subs	r3, r2, r3
 80033fc:	2b02      	cmp	r3, #2
 80033fe:	d918      	bls.n	8003432 <ADC_Enable+0x92>
 8003400:	687b      	ldr	r3, [r7, #4]
 8003402:	681b      	ldr	r3, [r3, #0]
 8003404:	689b      	ldr	r3, [r3, #8]
 8003406:	f003 0301 	and.w	r3, r3, #1
 800340a:	2b01      	cmp	r3, #1
 800340c:	d011      	beq.n	8003432 <ADC_Enable+0x92>
 800340e:	687b      	ldr	r3, [r7, #4]
 8003410:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003412:	f043 0210 	orr.w	r2, r3, #16
 8003416:	687b      	ldr	r3, [r7, #4]
 8003418:	629a      	str	r2, [r3, #40]	@ 0x28
 800341a:	687b      	ldr	r3, [r7, #4]
 800341c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800341e:	f043 0201 	orr.w	r2, r3, #1
 8003422:	687b      	ldr	r3, [r7, #4]
 8003424:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003426:	687b      	ldr	r3, [r7, #4]
 8003428:	2200      	movs	r2, #0
 800342a:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 800342e:	2301      	movs	r3, #1
 8003430:	e007      	b.n	8003442 <ADC_Enable+0xa2>
 8003432:	687b      	ldr	r3, [r7, #4]
 8003434:	681b      	ldr	r3, [r3, #0]
 8003436:	689b      	ldr	r3, [r3, #8]
 8003438:	f003 0301 	and.w	r3, r3, #1
 800343c:	2b01      	cmp	r3, #1
 800343e:	d1d8      	bne.n	80033f2 <ADC_Enable+0x52>
 8003440:	2300      	movs	r3, #0
 8003442:	4618      	mov	r0, r3
 8003444:	3710      	adds	r7, #16
 8003446:	46bd      	mov	sp, r7
 8003448:	bd80      	pop	{r7, pc}
 800344a:	bf00      	nop
 800344c:	20000000 	.word	0x20000000
 8003450:	431bde83 	.word	0x431bde83

08003454 <ADC_ConversionStop_Disable>:
 8003454:	b580      	push	{r7, lr}
 8003456:	b084      	sub	sp, #16
 8003458:	af00      	add	r7, sp, #0
 800345a:	6078      	str	r0, [r7, #4]
 800345c:	2300      	movs	r3, #0
 800345e:	60fb      	str	r3, [r7, #12]
 8003460:	687b      	ldr	r3, [r7, #4]
 8003462:	681b      	ldr	r3, [r3, #0]
 8003464:	689b      	ldr	r3, [r3, #8]
 8003466:	f003 0301 	and.w	r3, r3, #1
 800346a:	2b01      	cmp	r3, #1
 800346c:	d12e      	bne.n	80034cc <ADC_ConversionStop_Disable+0x78>
 800346e:	687b      	ldr	r3, [r7, #4]
 8003470:	681b      	ldr	r3, [r3, #0]
 8003472:	689a      	ldr	r2, [r3, #8]
 8003474:	687b      	ldr	r3, [r7, #4]
 8003476:	681b      	ldr	r3, [r3, #0]
 8003478:	f022 0201 	bic.w	r2, r2, #1
 800347c:	609a      	str	r2, [r3, #8]
 800347e:	f7ff fba5 	bl	8002bcc <HAL_GetTick>
 8003482:	60f8      	str	r0, [r7, #12]
 8003484:	e01b      	b.n	80034be <ADC_ConversionStop_Disable+0x6a>
 8003486:	f7ff fba1 	bl	8002bcc <HAL_GetTick>
 800348a:	4602      	mov	r2, r0
 800348c:	68fb      	ldr	r3, [r7, #12]
 800348e:	1ad3      	subs	r3, r2, r3
 8003490:	2b02      	cmp	r3, #2
 8003492:	d914      	bls.n	80034be <ADC_ConversionStop_Disable+0x6a>
 8003494:	687b      	ldr	r3, [r7, #4]
 8003496:	681b      	ldr	r3, [r3, #0]
 8003498:	689b      	ldr	r3, [r3, #8]
 800349a:	f003 0301 	and.w	r3, r3, #1
 800349e:	2b01      	cmp	r3, #1
 80034a0:	d10d      	bne.n	80034be <ADC_ConversionStop_Disable+0x6a>
 80034a2:	687b      	ldr	r3, [r7, #4]
 80034a4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80034a6:	f043 0210 	orr.w	r2, r3, #16
 80034aa:	687b      	ldr	r3, [r7, #4]
 80034ac:	629a      	str	r2, [r3, #40]	@ 0x28
 80034ae:	687b      	ldr	r3, [r7, #4]
 80034b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80034b2:	f043 0201 	orr.w	r2, r3, #1
 80034b6:	687b      	ldr	r3, [r7, #4]
 80034b8:	62da      	str	r2, [r3, #44]	@ 0x2c
 80034ba:	2301      	movs	r3, #1
 80034bc:	e007      	b.n	80034ce <ADC_ConversionStop_Disable+0x7a>
 80034be:	687b      	ldr	r3, [r7, #4]
 80034c0:	681b      	ldr	r3, [r3, #0]
 80034c2:	689b      	ldr	r3, [r3, #8]
 80034c4:	f003 0301 	and.w	r3, r3, #1
 80034c8:	2b01      	cmp	r3, #1
 80034ca:	d0dc      	beq.n	8003486 <ADC_ConversionStop_Disable+0x32>
 80034cc:	2300      	movs	r3, #0
 80034ce:	4618      	mov	r0, r3
 80034d0:	3710      	adds	r7, #16
 80034d2:	46bd      	mov	sp, r7
 80034d4:	bd80      	pop	{r7, pc}
	...

080034d8 <HAL_ADCEx_Calibration_Start>:
 80034d8:	b590      	push	{r4, r7, lr}
 80034da:	b087      	sub	sp, #28
 80034dc:	af00      	add	r7, sp, #0
 80034de:	6078      	str	r0, [r7, #4]
 80034e0:	2300      	movs	r3, #0
 80034e2:	75fb      	strb	r3, [r7, #23]
 80034e4:	2300      	movs	r3, #0
 80034e6:	60fb      	str	r3, [r7, #12]
 80034e8:	687b      	ldr	r3, [r7, #4]
 80034ea:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 80034ee:	2b01      	cmp	r3, #1
 80034f0:	d101      	bne.n	80034f6 <HAL_ADCEx_Calibration_Start+0x1e>
 80034f2:	2302      	movs	r3, #2
 80034f4:	e097      	b.n	8003626 <HAL_ADCEx_Calibration_Start+0x14e>
 80034f6:	687b      	ldr	r3, [r7, #4]
 80034f8:	2201      	movs	r2, #1
 80034fa:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80034fe:	6878      	ldr	r0, [r7, #4]
 8003500:	f7ff ffa8 	bl	8003454 <ADC_ConversionStop_Disable>
 8003504:	4603      	mov	r3, r0
 8003506:	75fb      	strb	r3, [r7, #23]
 8003508:	6878      	ldr	r0, [r7, #4]
 800350a:	f7ff ff49 	bl	80033a0 <ADC_Enable>
 800350e:	4603      	mov	r3, r0
 8003510:	75fb      	strb	r3, [r7, #23]
 8003512:	7dfb      	ldrb	r3, [r7, #23]
 8003514:	2b00      	cmp	r3, #0
 8003516:	f040 8081 	bne.w	800361c <HAL_ADCEx_Calibration_Start+0x144>
 800351a:	687b      	ldr	r3, [r7, #4]
 800351c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800351e:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8003522:	f023 0302 	bic.w	r3, r3, #2
 8003526:	f043 0202 	orr.w	r2, r3, #2
 800352a:	687b      	ldr	r3, [r7, #4]
 800352c:	629a      	str	r2, [r3, #40]	@ 0x28
 800352e:	4b40      	ldr	r3, [pc, #256]	@ (8003630 <HAL_ADCEx_Calibration_Start+0x158>)
 8003530:	681c      	ldr	r4, [r3, #0]
 8003532:	2002      	movs	r0, #2
 8003534:	f000 ffca 	bl	80044cc <HAL_RCCEx_GetPeriphCLKFreq>
 8003538:	4603      	mov	r3, r0
 800353a:	fbb4 f3f3 	udiv	r3, r4, r3
 800353e:	005b      	lsls	r3, r3, #1
 8003540:	60fb      	str	r3, [r7, #12]
 8003542:	e002      	b.n	800354a <HAL_ADCEx_Calibration_Start+0x72>
 8003544:	68fb      	ldr	r3, [r7, #12]
 8003546:	3b01      	subs	r3, #1
 8003548:	60fb      	str	r3, [r7, #12]
 800354a:	68fb      	ldr	r3, [r7, #12]
 800354c:	2b00      	cmp	r3, #0
 800354e:	d1f9      	bne.n	8003544 <HAL_ADCEx_Calibration_Start+0x6c>
 8003550:	687b      	ldr	r3, [r7, #4]
 8003552:	681b      	ldr	r3, [r3, #0]
 8003554:	689a      	ldr	r2, [r3, #8]
 8003556:	687b      	ldr	r3, [r7, #4]
 8003558:	681b      	ldr	r3, [r3, #0]
 800355a:	f042 0208 	orr.w	r2, r2, #8
 800355e:	609a      	str	r2, [r3, #8]
 8003560:	f7ff fb34 	bl	8002bcc <HAL_GetTick>
 8003564:	6138      	str	r0, [r7, #16]
 8003566:	e01b      	b.n	80035a0 <HAL_ADCEx_Calibration_Start+0xc8>
 8003568:	f7ff fb30 	bl	8002bcc <HAL_GetTick>
 800356c:	4602      	mov	r2, r0
 800356e:	693b      	ldr	r3, [r7, #16]
 8003570:	1ad3      	subs	r3, r2, r3
 8003572:	2b0a      	cmp	r3, #10
 8003574:	d914      	bls.n	80035a0 <HAL_ADCEx_Calibration_Start+0xc8>
 8003576:	687b      	ldr	r3, [r7, #4]
 8003578:	681b      	ldr	r3, [r3, #0]
 800357a:	689b      	ldr	r3, [r3, #8]
 800357c:	f003 0308 	and.w	r3, r3, #8
 8003580:	2b00      	cmp	r3, #0
 8003582:	d00d      	beq.n	80035a0 <HAL_ADCEx_Calibration_Start+0xc8>
 8003584:	687b      	ldr	r3, [r7, #4]
 8003586:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003588:	f023 0312 	bic.w	r3, r3, #18
 800358c:	f043 0210 	orr.w	r2, r3, #16
 8003590:	687b      	ldr	r3, [r7, #4]
 8003592:	629a      	str	r2, [r3, #40]	@ 0x28
 8003594:	687b      	ldr	r3, [r7, #4]
 8003596:	2200      	movs	r2, #0
 8003598:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 800359c:	2301      	movs	r3, #1
 800359e:	e042      	b.n	8003626 <HAL_ADCEx_Calibration_Start+0x14e>
 80035a0:	687b      	ldr	r3, [r7, #4]
 80035a2:	681b      	ldr	r3, [r3, #0]
 80035a4:	689b      	ldr	r3, [r3, #8]
 80035a6:	f003 0308 	and.w	r3, r3, #8
 80035aa:	2b00      	cmp	r3, #0
 80035ac:	d1dc      	bne.n	8003568 <HAL_ADCEx_Calibration_Start+0x90>
 80035ae:	687b      	ldr	r3, [r7, #4]
 80035b0:	681b      	ldr	r3, [r3, #0]
 80035b2:	689a      	ldr	r2, [r3, #8]
 80035b4:	687b      	ldr	r3, [r7, #4]
 80035b6:	681b      	ldr	r3, [r3, #0]
 80035b8:	f042 0204 	orr.w	r2, r2, #4
 80035bc:	609a      	str	r2, [r3, #8]
 80035be:	f7ff fb05 	bl	8002bcc <HAL_GetTick>
 80035c2:	6138      	str	r0, [r7, #16]
 80035c4:	e01b      	b.n	80035fe <HAL_ADCEx_Calibration_Start+0x126>
 80035c6:	f7ff fb01 	bl	8002bcc <HAL_GetTick>
 80035ca:	4602      	mov	r2, r0
 80035cc:	693b      	ldr	r3, [r7, #16]
 80035ce:	1ad3      	subs	r3, r2, r3
 80035d0:	2b0a      	cmp	r3, #10
 80035d2:	d914      	bls.n	80035fe <HAL_ADCEx_Calibration_Start+0x126>
 80035d4:	687b      	ldr	r3, [r7, #4]
 80035d6:	681b      	ldr	r3, [r3, #0]
 80035d8:	689b      	ldr	r3, [r3, #8]
 80035da:	f003 0304 	and.w	r3, r3, #4
 80035de:	2b00      	cmp	r3, #0
 80035e0:	d00d      	beq.n	80035fe <HAL_ADCEx_Calibration_Start+0x126>
 80035e2:	687b      	ldr	r3, [r7, #4]
 80035e4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80035e6:	f023 0312 	bic.w	r3, r3, #18
 80035ea:	f043 0210 	orr.w	r2, r3, #16
 80035ee:	687b      	ldr	r3, [r7, #4]
 80035f0:	629a      	str	r2, [r3, #40]	@ 0x28
 80035f2:	687b      	ldr	r3, [r7, #4]
 80035f4:	2200      	movs	r2, #0
 80035f6:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80035fa:	2301      	movs	r3, #1
 80035fc:	e013      	b.n	8003626 <HAL_ADCEx_Calibration_Start+0x14e>
 80035fe:	687b      	ldr	r3, [r7, #4]
 8003600:	681b      	ldr	r3, [r3, #0]
 8003602:	689b      	ldr	r3, [r3, #8]
 8003604:	f003 0304 	and.w	r3, r3, #4
 8003608:	2b00      	cmp	r3, #0
 800360a:	d1dc      	bne.n	80035c6 <HAL_ADCEx_Calibration_Start+0xee>
 800360c:	687b      	ldr	r3, [r7, #4]
 800360e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003610:	f023 0303 	bic.w	r3, r3, #3
 8003614:	f043 0201 	orr.w	r2, r3, #1
 8003618:	687b      	ldr	r3, [r7, #4]
 800361a:	629a      	str	r2, [r3, #40]	@ 0x28
 800361c:	687b      	ldr	r3, [r7, #4]
 800361e:	2200      	movs	r2, #0
 8003620:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8003624:	7dfb      	ldrb	r3, [r7, #23]
 8003626:	4618      	mov	r0, r3
 8003628:	371c      	adds	r7, #28
 800362a:	46bd      	mov	sp, r7
 800362c:	bd90      	pop	{r4, r7, pc}
 800362e:	bf00      	nop
 8003630:	20000000 	.word	0x20000000

08003634 <__NVIC_SetPriorityGrouping>:
 8003634:	b480      	push	{r7}
 8003636:	b085      	sub	sp, #20
 8003638:	af00      	add	r7, sp, #0
 800363a:	6078      	str	r0, [r7, #4]
 800363c:	687b      	ldr	r3, [r7, #4]
 800363e:	f003 0307 	and.w	r3, r3, #7
 8003642:	60fb      	str	r3, [r7, #12]
 8003644:	4b0c      	ldr	r3, [pc, #48]	@ (8003678 <__NVIC_SetPriorityGrouping+0x44>)
 8003646:	68db      	ldr	r3, [r3, #12]
 8003648:	60bb      	str	r3, [r7, #8]
 800364a:	68ba      	ldr	r2, [r7, #8]
 800364c:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8003650:	4013      	ands	r3, r2
 8003652:	60bb      	str	r3, [r7, #8]
 8003654:	68fb      	ldr	r3, [r7, #12]
 8003656:	021a      	lsls	r2, r3, #8
 8003658:	68bb      	ldr	r3, [r7, #8]
 800365a:	4313      	orrs	r3, r2
 800365c:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8003660:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8003664:	60bb      	str	r3, [r7, #8]
 8003666:	4a04      	ldr	r2, [pc, #16]	@ (8003678 <__NVIC_SetPriorityGrouping+0x44>)
 8003668:	68bb      	ldr	r3, [r7, #8]
 800366a:	60d3      	str	r3, [r2, #12]
 800366c:	bf00      	nop
 800366e:	3714      	adds	r7, #20
 8003670:	46bd      	mov	sp, r7
 8003672:	bc80      	pop	{r7}
 8003674:	4770      	bx	lr
 8003676:	bf00      	nop
 8003678:	e000ed00 	.word	0xe000ed00

0800367c <__NVIC_GetPriorityGrouping>:
 800367c:	b480      	push	{r7}
 800367e:	af00      	add	r7, sp, #0
 8003680:	4b04      	ldr	r3, [pc, #16]	@ (8003694 <__NVIC_GetPriorityGrouping+0x18>)
 8003682:	68db      	ldr	r3, [r3, #12]
 8003684:	0a1b      	lsrs	r3, r3, #8
 8003686:	f003 0307 	and.w	r3, r3, #7
 800368a:	4618      	mov	r0, r3
 800368c:	46bd      	mov	sp, r7
 800368e:	bc80      	pop	{r7}
 8003690:	4770      	bx	lr
 8003692:	bf00      	nop
 8003694:	e000ed00 	.word	0xe000ed00

08003698 <__NVIC_SetPriority>:
 8003698:	b480      	push	{r7}
 800369a:	b083      	sub	sp, #12
 800369c:	af00      	add	r7, sp, #0
 800369e:	4603      	mov	r3, r0
 80036a0:	6039      	str	r1, [r7, #0]
 80036a2:	71fb      	strb	r3, [r7, #7]
 80036a4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80036a8:	2b00      	cmp	r3, #0
 80036aa:	db0a      	blt.n	80036c2 <__NVIC_SetPriority+0x2a>
 80036ac:	683b      	ldr	r3, [r7, #0]
 80036ae:	b2da      	uxtb	r2, r3
 80036b0:	490c      	ldr	r1, [pc, #48]	@ (80036e4 <__NVIC_SetPriority+0x4c>)
 80036b2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80036b6:	0112      	lsls	r2, r2, #4
 80036b8:	b2d2      	uxtb	r2, r2
 80036ba:	440b      	add	r3, r1
 80036bc:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80036c0:	e00a      	b.n	80036d8 <__NVIC_SetPriority+0x40>
 80036c2:	683b      	ldr	r3, [r7, #0]
 80036c4:	b2da      	uxtb	r2, r3
 80036c6:	4908      	ldr	r1, [pc, #32]	@ (80036e8 <__NVIC_SetPriority+0x50>)
 80036c8:	79fb      	ldrb	r3, [r7, #7]
 80036ca:	f003 030f 	and.w	r3, r3, #15
 80036ce:	3b04      	subs	r3, #4
 80036d0:	0112      	lsls	r2, r2, #4
 80036d2:	b2d2      	uxtb	r2, r2
 80036d4:	440b      	add	r3, r1
 80036d6:	761a      	strb	r2, [r3, #24]
 80036d8:	bf00      	nop
 80036da:	370c      	adds	r7, #12
 80036dc:	46bd      	mov	sp, r7
 80036de:	bc80      	pop	{r7}
 80036e0:	4770      	bx	lr
 80036e2:	bf00      	nop
 80036e4:	e000e100 	.word	0xe000e100
 80036e8:	e000ed00 	.word	0xe000ed00

080036ec <NVIC_EncodePriority>:
 80036ec:	b480      	push	{r7}
 80036ee:	b089      	sub	sp, #36	@ 0x24
 80036f0:	af00      	add	r7, sp, #0
 80036f2:	60f8      	str	r0, [r7, #12]
 80036f4:	60b9      	str	r1, [r7, #8]
 80036f6:	607a      	str	r2, [r7, #4]
 80036f8:	68fb      	ldr	r3, [r7, #12]
 80036fa:	f003 0307 	and.w	r3, r3, #7
 80036fe:	61fb      	str	r3, [r7, #28]
 8003700:	69fb      	ldr	r3, [r7, #28]
 8003702:	f1c3 0307 	rsb	r3, r3, #7
 8003706:	2b04      	cmp	r3, #4
 8003708:	bf28      	it	cs
 800370a:	2304      	movcs	r3, #4
 800370c:	61bb      	str	r3, [r7, #24]
 800370e:	69fb      	ldr	r3, [r7, #28]
 8003710:	3304      	adds	r3, #4
 8003712:	2b06      	cmp	r3, #6
 8003714:	d902      	bls.n	800371c <NVIC_EncodePriority+0x30>
 8003716:	69fb      	ldr	r3, [r7, #28]
 8003718:	3b03      	subs	r3, #3
 800371a:	e000      	b.n	800371e <NVIC_EncodePriority+0x32>
 800371c:	2300      	movs	r3, #0
 800371e:	617b      	str	r3, [r7, #20]
 8003720:	f04f 32ff 	mov.w	r2, #4294967295
 8003724:	69bb      	ldr	r3, [r7, #24]
 8003726:	fa02 f303 	lsl.w	r3, r2, r3
 800372a:	43da      	mvns	r2, r3
 800372c:	68bb      	ldr	r3, [r7, #8]
 800372e:	401a      	ands	r2, r3
 8003730:	697b      	ldr	r3, [r7, #20]
 8003732:	409a      	lsls	r2, r3
 8003734:	f04f 31ff 	mov.w	r1, #4294967295
 8003738:	697b      	ldr	r3, [r7, #20]
 800373a:	fa01 f303 	lsl.w	r3, r1, r3
 800373e:	43d9      	mvns	r1, r3
 8003740:	687b      	ldr	r3, [r7, #4]
 8003742:	400b      	ands	r3, r1
 8003744:	4313      	orrs	r3, r2
 8003746:	4618      	mov	r0, r3
 8003748:	3724      	adds	r7, #36	@ 0x24
 800374a:	46bd      	mov	sp, r7
 800374c:	bc80      	pop	{r7}
 800374e:	4770      	bx	lr

08003750 <SysTick_Config>:
 8003750:	b580      	push	{r7, lr}
 8003752:	b082      	sub	sp, #8
 8003754:	af00      	add	r7, sp, #0
 8003756:	6078      	str	r0, [r7, #4]
 8003758:	687b      	ldr	r3, [r7, #4]
 800375a:	3b01      	subs	r3, #1
 800375c:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003760:	d301      	bcc.n	8003766 <SysTick_Config+0x16>
 8003762:	2301      	movs	r3, #1
 8003764:	e00f      	b.n	8003786 <SysTick_Config+0x36>
 8003766:	4a0a      	ldr	r2, [pc, #40]	@ (8003790 <SysTick_Config+0x40>)
 8003768:	687b      	ldr	r3, [r7, #4]
 800376a:	3b01      	subs	r3, #1
 800376c:	6053      	str	r3, [r2, #4]
 800376e:	210f      	movs	r1, #15
 8003770:	f04f 30ff 	mov.w	r0, #4294967295
 8003774:	f7ff ff90 	bl	8003698 <__NVIC_SetPriority>
 8003778:	4b05      	ldr	r3, [pc, #20]	@ (8003790 <SysTick_Config+0x40>)
 800377a:	2200      	movs	r2, #0
 800377c:	609a      	str	r2, [r3, #8]
 800377e:	4b04      	ldr	r3, [pc, #16]	@ (8003790 <SysTick_Config+0x40>)
 8003780:	2207      	movs	r2, #7
 8003782:	601a      	str	r2, [r3, #0]
 8003784:	2300      	movs	r3, #0
 8003786:	4618      	mov	r0, r3
 8003788:	3708      	adds	r7, #8
 800378a:	46bd      	mov	sp, r7
 800378c:	bd80      	pop	{r7, pc}
 800378e:	bf00      	nop
 8003790:	e000e010 	.word	0xe000e010

08003794 <HAL_NVIC_SetPriorityGrouping>:
 8003794:	b580      	push	{r7, lr}
 8003796:	b082      	sub	sp, #8
 8003798:	af00      	add	r7, sp, #0
 800379a:	6078      	str	r0, [r7, #4]
 800379c:	6878      	ldr	r0, [r7, #4]
 800379e:	f7ff ff49 	bl	8003634 <__NVIC_SetPriorityGrouping>
 80037a2:	bf00      	nop
 80037a4:	3708      	adds	r7, #8
 80037a6:	46bd      	mov	sp, r7
 80037a8:	bd80      	pop	{r7, pc}

080037aa <HAL_NVIC_SetPriority>:
 80037aa:	b580      	push	{r7, lr}
 80037ac:	b086      	sub	sp, #24
 80037ae:	af00      	add	r7, sp, #0
 80037b0:	4603      	mov	r3, r0
 80037b2:	60b9      	str	r1, [r7, #8]
 80037b4:	607a      	str	r2, [r7, #4]
 80037b6:	73fb      	strb	r3, [r7, #15]
 80037b8:	2300      	movs	r3, #0
 80037ba:	617b      	str	r3, [r7, #20]
 80037bc:	f7ff ff5e 	bl	800367c <__NVIC_GetPriorityGrouping>
 80037c0:	6178      	str	r0, [r7, #20]
 80037c2:	687a      	ldr	r2, [r7, #4]
 80037c4:	68b9      	ldr	r1, [r7, #8]
 80037c6:	6978      	ldr	r0, [r7, #20]
 80037c8:	f7ff ff90 	bl	80036ec <NVIC_EncodePriority>
 80037cc:	4602      	mov	r2, r0
 80037ce:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80037d2:	4611      	mov	r1, r2
 80037d4:	4618      	mov	r0, r3
 80037d6:	f7ff ff5f 	bl	8003698 <__NVIC_SetPriority>
 80037da:	bf00      	nop
 80037dc:	3718      	adds	r7, #24
 80037de:	46bd      	mov	sp, r7
 80037e0:	bd80      	pop	{r7, pc}

080037e2 <HAL_SYSTICK_Config>:
 80037e2:	b580      	push	{r7, lr}
 80037e4:	b082      	sub	sp, #8
 80037e6:	af00      	add	r7, sp, #0
 80037e8:	6078      	str	r0, [r7, #4]
 80037ea:	6878      	ldr	r0, [r7, #4]
 80037ec:	f7ff ffb0 	bl	8003750 <SysTick_Config>
 80037f0:	4603      	mov	r3, r0
 80037f2:	4618      	mov	r0, r3
 80037f4:	3708      	adds	r7, #8
 80037f6:	46bd      	mov	sp, r7
 80037f8:	bd80      	pop	{r7, pc}

080037fa <HAL_CRC_Init>:
 80037fa:	b580      	push	{r7, lr}
 80037fc:	b082      	sub	sp, #8
 80037fe:	af00      	add	r7, sp, #0
 8003800:	6078      	str	r0, [r7, #4]
 8003802:	687b      	ldr	r3, [r7, #4]
 8003804:	2b00      	cmp	r3, #0
 8003806:	d101      	bne.n	800380c <HAL_CRC_Init+0x12>
 8003808:	2301      	movs	r3, #1
 800380a:	e00e      	b.n	800382a <HAL_CRC_Init+0x30>
 800380c:	687b      	ldr	r3, [r7, #4]
 800380e:	795b      	ldrb	r3, [r3, #5]
 8003810:	b2db      	uxtb	r3, r3
 8003812:	2b00      	cmp	r3, #0
 8003814:	d105      	bne.n	8003822 <HAL_CRC_Init+0x28>
 8003816:	687b      	ldr	r3, [r7, #4]
 8003818:	2200      	movs	r2, #0
 800381a:	711a      	strb	r2, [r3, #4]
 800381c:	6878      	ldr	r0, [r7, #4]
 800381e:	f7fe fff5 	bl	800280c <HAL_CRC_MspInit>
 8003822:	687b      	ldr	r3, [r7, #4]
 8003824:	2201      	movs	r2, #1
 8003826:	715a      	strb	r2, [r3, #5]
 8003828:	2300      	movs	r3, #0
 800382a:	4618      	mov	r0, r3
 800382c:	3708      	adds	r7, #8
 800382e:	46bd      	mov	sp, r7
 8003830:	bd80      	pop	{r7, pc}
	...

08003834 <HAL_GPIO_Init>:
 8003834:	b480      	push	{r7}
 8003836:	b08b      	sub	sp, #44	@ 0x2c
 8003838:	af00      	add	r7, sp, #0
 800383a:	6078      	str	r0, [r7, #4]
 800383c:	6039      	str	r1, [r7, #0]
 800383e:	2300      	movs	r3, #0
 8003840:	627b      	str	r3, [r7, #36]	@ 0x24
 8003842:	2300      	movs	r3, #0
 8003844:	623b      	str	r3, [r7, #32]
 8003846:	e169      	b.n	8003b1c <HAL_GPIO_Init+0x2e8>
 8003848:	2201      	movs	r2, #1
 800384a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800384c:	fa02 f303 	lsl.w	r3, r2, r3
 8003850:	61fb      	str	r3, [r7, #28]
 8003852:	683b      	ldr	r3, [r7, #0]
 8003854:	681b      	ldr	r3, [r3, #0]
 8003856:	69fa      	ldr	r2, [r7, #28]
 8003858:	4013      	ands	r3, r2
 800385a:	61bb      	str	r3, [r7, #24]
 800385c:	69ba      	ldr	r2, [r7, #24]
 800385e:	69fb      	ldr	r3, [r7, #28]
 8003860:	429a      	cmp	r2, r3
 8003862:	f040 8158 	bne.w	8003b16 <HAL_GPIO_Init+0x2e2>
 8003866:	683b      	ldr	r3, [r7, #0]
 8003868:	685b      	ldr	r3, [r3, #4]
 800386a:	4a9a      	ldr	r2, [pc, #616]	@ (8003ad4 <HAL_GPIO_Init+0x2a0>)
 800386c:	4293      	cmp	r3, r2
 800386e:	d05e      	beq.n	800392e <HAL_GPIO_Init+0xfa>
 8003870:	4a98      	ldr	r2, [pc, #608]	@ (8003ad4 <HAL_GPIO_Init+0x2a0>)
 8003872:	4293      	cmp	r3, r2
 8003874:	d875      	bhi.n	8003962 <HAL_GPIO_Init+0x12e>
 8003876:	4a98      	ldr	r2, [pc, #608]	@ (8003ad8 <HAL_GPIO_Init+0x2a4>)
 8003878:	4293      	cmp	r3, r2
 800387a:	d058      	beq.n	800392e <HAL_GPIO_Init+0xfa>
 800387c:	4a96      	ldr	r2, [pc, #600]	@ (8003ad8 <HAL_GPIO_Init+0x2a4>)
 800387e:	4293      	cmp	r3, r2
 8003880:	d86f      	bhi.n	8003962 <HAL_GPIO_Init+0x12e>
 8003882:	4a96      	ldr	r2, [pc, #600]	@ (8003adc <HAL_GPIO_Init+0x2a8>)
 8003884:	4293      	cmp	r3, r2
 8003886:	d052      	beq.n	800392e <HAL_GPIO_Init+0xfa>
 8003888:	4a94      	ldr	r2, [pc, #592]	@ (8003adc <HAL_GPIO_Init+0x2a8>)
 800388a:	4293      	cmp	r3, r2
 800388c:	d869      	bhi.n	8003962 <HAL_GPIO_Init+0x12e>
 800388e:	4a94      	ldr	r2, [pc, #592]	@ (8003ae0 <HAL_GPIO_Init+0x2ac>)
 8003890:	4293      	cmp	r3, r2
 8003892:	d04c      	beq.n	800392e <HAL_GPIO_Init+0xfa>
 8003894:	4a92      	ldr	r2, [pc, #584]	@ (8003ae0 <HAL_GPIO_Init+0x2ac>)
 8003896:	4293      	cmp	r3, r2
 8003898:	d863      	bhi.n	8003962 <HAL_GPIO_Init+0x12e>
 800389a:	4a92      	ldr	r2, [pc, #584]	@ (8003ae4 <HAL_GPIO_Init+0x2b0>)
 800389c:	4293      	cmp	r3, r2
 800389e:	d046      	beq.n	800392e <HAL_GPIO_Init+0xfa>
 80038a0:	4a90      	ldr	r2, [pc, #576]	@ (8003ae4 <HAL_GPIO_Init+0x2b0>)
 80038a2:	4293      	cmp	r3, r2
 80038a4:	d85d      	bhi.n	8003962 <HAL_GPIO_Init+0x12e>
 80038a6:	2b12      	cmp	r3, #18
 80038a8:	d82a      	bhi.n	8003900 <HAL_GPIO_Init+0xcc>
 80038aa:	2b12      	cmp	r3, #18
 80038ac:	d859      	bhi.n	8003962 <HAL_GPIO_Init+0x12e>
 80038ae:	a201      	add	r2, pc, #4	@ (adr r2, 80038b4 <HAL_GPIO_Init+0x80>)
 80038b0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80038b4:	0800392f 	.word	0x0800392f
 80038b8:	08003909 	.word	0x08003909
 80038bc:	0800391b 	.word	0x0800391b
 80038c0:	0800395d 	.word	0x0800395d
 80038c4:	08003963 	.word	0x08003963
 80038c8:	08003963 	.word	0x08003963
 80038cc:	08003963 	.word	0x08003963
 80038d0:	08003963 	.word	0x08003963
 80038d4:	08003963 	.word	0x08003963
 80038d8:	08003963 	.word	0x08003963
 80038dc:	08003963 	.word	0x08003963
 80038e0:	08003963 	.word	0x08003963
 80038e4:	08003963 	.word	0x08003963
 80038e8:	08003963 	.word	0x08003963
 80038ec:	08003963 	.word	0x08003963
 80038f0:	08003963 	.word	0x08003963
 80038f4:	08003963 	.word	0x08003963
 80038f8:	08003911 	.word	0x08003911
 80038fc:	08003925 	.word	0x08003925
 8003900:	4a79      	ldr	r2, [pc, #484]	@ (8003ae8 <HAL_GPIO_Init+0x2b4>)
 8003902:	4293      	cmp	r3, r2
 8003904:	d013      	beq.n	800392e <HAL_GPIO_Init+0xfa>
 8003906:	e02c      	b.n	8003962 <HAL_GPIO_Init+0x12e>
 8003908:	683b      	ldr	r3, [r7, #0]
 800390a:	68db      	ldr	r3, [r3, #12]
 800390c:	623b      	str	r3, [r7, #32]
 800390e:	e029      	b.n	8003964 <HAL_GPIO_Init+0x130>
 8003910:	683b      	ldr	r3, [r7, #0]
 8003912:	68db      	ldr	r3, [r3, #12]
 8003914:	3304      	adds	r3, #4
 8003916:	623b      	str	r3, [r7, #32]
 8003918:	e024      	b.n	8003964 <HAL_GPIO_Init+0x130>
 800391a:	683b      	ldr	r3, [r7, #0]
 800391c:	68db      	ldr	r3, [r3, #12]
 800391e:	3308      	adds	r3, #8
 8003920:	623b      	str	r3, [r7, #32]
 8003922:	e01f      	b.n	8003964 <HAL_GPIO_Init+0x130>
 8003924:	683b      	ldr	r3, [r7, #0]
 8003926:	68db      	ldr	r3, [r3, #12]
 8003928:	330c      	adds	r3, #12
 800392a:	623b      	str	r3, [r7, #32]
 800392c:	e01a      	b.n	8003964 <HAL_GPIO_Init+0x130>
 800392e:	683b      	ldr	r3, [r7, #0]
 8003930:	689b      	ldr	r3, [r3, #8]
 8003932:	2b00      	cmp	r3, #0
 8003934:	d102      	bne.n	800393c <HAL_GPIO_Init+0x108>
 8003936:	2304      	movs	r3, #4
 8003938:	623b      	str	r3, [r7, #32]
 800393a:	e013      	b.n	8003964 <HAL_GPIO_Init+0x130>
 800393c:	683b      	ldr	r3, [r7, #0]
 800393e:	689b      	ldr	r3, [r3, #8]
 8003940:	2b01      	cmp	r3, #1
 8003942:	d105      	bne.n	8003950 <HAL_GPIO_Init+0x11c>
 8003944:	2308      	movs	r3, #8
 8003946:	623b      	str	r3, [r7, #32]
 8003948:	687b      	ldr	r3, [r7, #4]
 800394a:	69fa      	ldr	r2, [r7, #28]
 800394c:	611a      	str	r2, [r3, #16]
 800394e:	e009      	b.n	8003964 <HAL_GPIO_Init+0x130>
 8003950:	2308      	movs	r3, #8
 8003952:	623b      	str	r3, [r7, #32]
 8003954:	687b      	ldr	r3, [r7, #4]
 8003956:	69fa      	ldr	r2, [r7, #28]
 8003958:	615a      	str	r2, [r3, #20]
 800395a:	e003      	b.n	8003964 <HAL_GPIO_Init+0x130>
 800395c:	2300      	movs	r3, #0
 800395e:	623b      	str	r3, [r7, #32]
 8003960:	e000      	b.n	8003964 <HAL_GPIO_Init+0x130>
 8003962:	bf00      	nop
 8003964:	69bb      	ldr	r3, [r7, #24]
 8003966:	2bff      	cmp	r3, #255	@ 0xff
 8003968:	d801      	bhi.n	800396e <HAL_GPIO_Init+0x13a>
 800396a:	687b      	ldr	r3, [r7, #4]
 800396c:	e001      	b.n	8003972 <HAL_GPIO_Init+0x13e>
 800396e:	687b      	ldr	r3, [r7, #4]
 8003970:	3304      	adds	r3, #4
 8003972:	617b      	str	r3, [r7, #20]
 8003974:	69bb      	ldr	r3, [r7, #24]
 8003976:	2bff      	cmp	r3, #255	@ 0xff
 8003978:	d802      	bhi.n	8003980 <HAL_GPIO_Init+0x14c>
 800397a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800397c:	009b      	lsls	r3, r3, #2
 800397e:	e002      	b.n	8003986 <HAL_GPIO_Init+0x152>
 8003980:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003982:	3b08      	subs	r3, #8
 8003984:	009b      	lsls	r3, r3, #2
 8003986:	613b      	str	r3, [r7, #16]
 8003988:	697b      	ldr	r3, [r7, #20]
 800398a:	681a      	ldr	r2, [r3, #0]
 800398c:	210f      	movs	r1, #15
 800398e:	693b      	ldr	r3, [r7, #16]
 8003990:	fa01 f303 	lsl.w	r3, r1, r3
 8003994:	43db      	mvns	r3, r3
 8003996:	401a      	ands	r2, r3
 8003998:	6a39      	ldr	r1, [r7, #32]
 800399a:	693b      	ldr	r3, [r7, #16]
 800399c:	fa01 f303 	lsl.w	r3, r1, r3
 80039a0:	431a      	orrs	r2, r3
 80039a2:	697b      	ldr	r3, [r7, #20]
 80039a4:	601a      	str	r2, [r3, #0]
 80039a6:	683b      	ldr	r3, [r7, #0]
 80039a8:	685b      	ldr	r3, [r3, #4]
 80039aa:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80039ae:	2b00      	cmp	r3, #0
 80039b0:	f000 80b1 	beq.w	8003b16 <HAL_GPIO_Init+0x2e2>
 80039b4:	4b4d      	ldr	r3, [pc, #308]	@ (8003aec <HAL_GPIO_Init+0x2b8>)
 80039b6:	699b      	ldr	r3, [r3, #24]
 80039b8:	4a4c      	ldr	r2, [pc, #304]	@ (8003aec <HAL_GPIO_Init+0x2b8>)
 80039ba:	f043 0301 	orr.w	r3, r3, #1
 80039be:	6193      	str	r3, [r2, #24]
 80039c0:	4b4a      	ldr	r3, [pc, #296]	@ (8003aec <HAL_GPIO_Init+0x2b8>)
 80039c2:	699b      	ldr	r3, [r3, #24]
 80039c4:	f003 0301 	and.w	r3, r3, #1
 80039c8:	60bb      	str	r3, [r7, #8]
 80039ca:	68bb      	ldr	r3, [r7, #8]
 80039cc:	4a48      	ldr	r2, [pc, #288]	@ (8003af0 <HAL_GPIO_Init+0x2bc>)
 80039ce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80039d0:	089b      	lsrs	r3, r3, #2
 80039d2:	3302      	adds	r3, #2
 80039d4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80039d8:	60fb      	str	r3, [r7, #12]
 80039da:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80039dc:	f003 0303 	and.w	r3, r3, #3
 80039e0:	009b      	lsls	r3, r3, #2
 80039e2:	220f      	movs	r2, #15
 80039e4:	fa02 f303 	lsl.w	r3, r2, r3
 80039e8:	43db      	mvns	r3, r3
 80039ea:	68fa      	ldr	r2, [r7, #12]
 80039ec:	4013      	ands	r3, r2
 80039ee:	60fb      	str	r3, [r7, #12]
 80039f0:	687b      	ldr	r3, [r7, #4]
 80039f2:	4a40      	ldr	r2, [pc, #256]	@ (8003af4 <HAL_GPIO_Init+0x2c0>)
 80039f4:	4293      	cmp	r3, r2
 80039f6:	d013      	beq.n	8003a20 <HAL_GPIO_Init+0x1ec>
 80039f8:	687b      	ldr	r3, [r7, #4]
 80039fa:	4a3f      	ldr	r2, [pc, #252]	@ (8003af8 <HAL_GPIO_Init+0x2c4>)
 80039fc:	4293      	cmp	r3, r2
 80039fe:	d00d      	beq.n	8003a1c <HAL_GPIO_Init+0x1e8>
 8003a00:	687b      	ldr	r3, [r7, #4]
 8003a02:	4a3e      	ldr	r2, [pc, #248]	@ (8003afc <HAL_GPIO_Init+0x2c8>)
 8003a04:	4293      	cmp	r3, r2
 8003a06:	d007      	beq.n	8003a18 <HAL_GPIO_Init+0x1e4>
 8003a08:	687b      	ldr	r3, [r7, #4]
 8003a0a:	4a3d      	ldr	r2, [pc, #244]	@ (8003b00 <HAL_GPIO_Init+0x2cc>)
 8003a0c:	4293      	cmp	r3, r2
 8003a0e:	d101      	bne.n	8003a14 <HAL_GPIO_Init+0x1e0>
 8003a10:	2303      	movs	r3, #3
 8003a12:	e006      	b.n	8003a22 <HAL_GPIO_Init+0x1ee>
 8003a14:	2304      	movs	r3, #4
 8003a16:	e004      	b.n	8003a22 <HAL_GPIO_Init+0x1ee>
 8003a18:	2302      	movs	r3, #2
 8003a1a:	e002      	b.n	8003a22 <HAL_GPIO_Init+0x1ee>
 8003a1c:	2301      	movs	r3, #1
 8003a1e:	e000      	b.n	8003a22 <HAL_GPIO_Init+0x1ee>
 8003a20:	2300      	movs	r3, #0
 8003a22:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003a24:	f002 0203 	and.w	r2, r2, #3
 8003a28:	0092      	lsls	r2, r2, #2
 8003a2a:	4093      	lsls	r3, r2
 8003a2c:	68fa      	ldr	r2, [r7, #12]
 8003a2e:	4313      	orrs	r3, r2
 8003a30:	60fb      	str	r3, [r7, #12]
 8003a32:	492f      	ldr	r1, [pc, #188]	@ (8003af0 <HAL_GPIO_Init+0x2bc>)
 8003a34:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003a36:	089b      	lsrs	r3, r3, #2
 8003a38:	3302      	adds	r3, #2
 8003a3a:	68fa      	ldr	r2, [r7, #12]
 8003a3c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003a40:	683b      	ldr	r3, [r7, #0]
 8003a42:	685b      	ldr	r3, [r3, #4]
 8003a44:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8003a48:	2b00      	cmp	r3, #0
 8003a4a:	d006      	beq.n	8003a5a <HAL_GPIO_Init+0x226>
 8003a4c:	4b2d      	ldr	r3, [pc, #180]	@ (8003b04 <HAL_GPIO_Init+0x2d0>)
 8003a4e:	689a      	ldr	r2, [r3, #8]
 8003a50:	492c      	ldr	r1, [pc, #176]	@ (8003b04 <HAL_GPIO_Init+0x2d0>)
 8003a52:	69bb      	ldr	r3, [r7, #24]
 8003a54:	4313      	orrs	r3, r2
 8003a56:	608b      	str	r3, [r1, #8]
 8003a58:	e006      	b.n	8003a68 <HAL_GPIO_Init+0x234>
 8003a5a:	4b2a      	ldr	r3, [pc, #168]	@ (8003b04 <HAL_GPIO_Init+0x2d0>)
 8003a5c:	689a      	ldr	r2, [r3, #8]
 8003a5e:	69bb      	ldr	r3, [r7, #24]
 8003a60:	43db      	mvns	r3, r3
 8003a62:	4928      	ldr	r1, [pc, #160]	@ (8003b04 <HAL_GPIO_Init+0x2d0>)
 8003a64:	4013      	ands	r3, r2
 8003a66:	608b      	str	r3, [r1, #8]
 8003a68:	683b      	ldr	r3, [r7, #0]
 8003a6a:	685b      	ldr	r3, [r3, #4]
 8003a6c:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8003a70:	2b00      	cmp	r3, #0
 8003a72:	d006      	beq.n	8003a82 <HAL_GPIO_Init+0x24e>
 8003a74:	4b23      	ldr	r3, [pc, #140]	@ (8003b04 <HAL_GPIO_Init+0x2d0>)
 8003a76:	68da      	ldr	r2, [r3, #12]
 8003a78:	4922      	ldr	r1, [pc, #136]	@ (8003b04 <HAL_GPIO_Init+0x2d0>)
 8003a7a:	69bb      	ldr	r3, [r7, #24]
 8003a7c:	4313      	orrs	r3, r2
 8003a7e:	60cb      	str	r3, [r1, #12]
 8003a80:	e006      	b.n	8003a90 <HAL_GPIO_Init+0x25c>
 8003a82:	4b20      	ldr	r3, [pc, #128]	@ (8003b04 <HAL_GPIO_Init+0x2d0>)
 8003a84:	68da      	ldr	r2, [r3, #12]
 8003a86:	69bb      	ldr	r3, [r7, #24]
 8003a88:	43db      	mvns	r3, r3
 8003a8a:	491e      	ldr	r1, [pc, #120]	@ (8003b04 <HAL_GPIO_Init+0x2d0>)
 8003a8c:	4013      	ands	r3, r2
 8003a8e:	60cb      	str	r3, [r1, #12]
 8003a90:	683b      	ldr	r3, [r7, #0]
 8003a92:	685b      	ldr	r3, [r3, #4]
 8003a94:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003a98:	2b00      	cmp	r3, #0
 8003a9a:	d006      	beq.n	8003aaa <HAL_GPIO_Init+0x276>
 8003a9c:	4b19      	ldr	r3, [pc, #100]	@ (8003b04 <HAL_GPIO_Init+0x2d0>)
 8003a9e:	685a      	ldr	r2, [r3, #4]
 8003aa0:	4918      	ldr	r1, [pc, #96]	@ (8003b04 <HAL_GPIO_Init+0x2d0>)
 8003aa2:	69bb      	ldr	r3, [r7, #24]
 8003aa4:	4313      	orrs	r3, r2
 8003aa6:	604b      	str	r3, [r1, #4]
 8003aa8:	e006      	b.n	8003ab8 <HAL_GPIO_Init+0x284>
 8003aaa:	4b16      	ldr	r3, [pc, #88]	@ (8003b04 <HAL_GPIO_Init+0x2d0>)
 8003aac:	685a      	ldr	r2, [r3, #4]
 8003aae:	69bb      	ldr	r3, [r7, #24]
 8003ab0:	43db      	mvns	r3, r3
 8003ab2:	4914      	ldr	r1, [pc, #80]	@ (8003b04 <HAL_GPIO_Init+0x2d0>)
 8003ab4:	4013      	ands	r3, r2
 8003ab6:	604b      	str	r3, [r1, #4]
 8003ab8:	683b      	ldr	r3, [r7, #0]
 8003aba:	685b      	ldr	r3, [r3, #4]
 8003abc:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003ac0:	2b00      	cmp	r3, #0
 8003ac2:	d021      	beq.n	8003b08 <HAL_GPIO_Init+0x2d4>
 8003ac4:	4b0f      	ldr	r3, [pc, #60]	@ (8003b04 <HAL_GPIO_Init+0x2d0>)
 8003ac6:	681a      	ldr	r2, [r3, #0]
 8003ac8:	490e      	ldr	r1, [pc, #56]	@ (8003b04 <HAL_GPIO_Init+0x2d0>)
 8003aca:	69bb      	ldr	r3, [r7, #24]
 8003acc:	4313      	orrs	r3, r2
 8003ace:	600b      	str	r3, [r1, #0]
 8003ad0:	e021      	b.n	8003b16 <HAL_GPIO_Init+0x2e2>
 8003ad2:	bf00      	nop
 8003ad4:	10320000 	.word	0x10320000
 8003ad8:	10310000 	.word	0x10310000
 8003adc:	10220000 	.word	0x10220000
 8003ae0:	10210000 	.word	0x10210000
 8003ae4:	10120000 	.word	0x10120000
 8003ae8:	10110000 	.word	0x10110000
 8003aec:	40021000 	.word	0x40021000
 8003af0:	40010000 	.word	0x40010000
 8003af4:	40010800 	.word	0x40010800
 8003af8:	40010c00 	.word	0x40010c00
 8003afc:	40011000 	.word	0x40011000
 8003b00:	40011400 	.word	0x40011400
 8003b04:	40010400 	.word	0x40010400
 8003b08:	4b0b      	ldr	r3, [pc, #44]	@ (8003b38 <HAL_GPIO_Init+0x304>)
 8003b0a:	681a      	ldr	r2, [r3, #0]
 8003b0c:	69bb      	ldr	r3, [r7, #24]
 8003b0e:	43db      	mvns	r3, r3
 8003b10:	4909      	ldr	r1, [pc, #36]	@ (8003b38 <HAL_GPIO_Init+0x304>)
 8003b12:	4013      	ands	r3, r2
 8003b14:	600b      	str	r3, [r1, #0]
 8003b16:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003b18:	3301      	adds	r3, #1
 8003b1a:	627b      	str	r3, [r7, #36]	@ 0x24
 8003b1c:	683b      	ldr	r3, [r7, #0]
 8003b1e:	681a      	ldr	r2, [r3, #0]
 8003b20:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003b22:	fa22 f303 	lsr.w	r3, r2, r3
 8003b26:	2b00      	cmp	r3, #0
 8003b28:	f47f ae8e 	bne.w	8003848 <HAL_GPIO_Init+0x14>
 8003b2c:	bf00      	nop
 8003b2e:	bf00      	nop
 8003b30:	372c      	adds	r7, #44	@ 0x2c
 8003b32:	46bd      	mov	sp, r7
 8003b34:	bc80      	pop	{r7}
 8003b36:	4770      	bx	lr
 8003b38:	40010400 	.word	0x40010400

08003b3c <HAL_RCC_OscConfig>:
 8003b3c:	b580      	push	{r7, lr}
 8003b3e:	b086      	sub	sp, #24
 8003b40:	af00      	add	r7, sp, #0
 8003b42:	6078      	str	r0, [r7, #4]
 8003b44:	687b      	ldr	r3, [r7, #4]
 8003b46:	2b00      	cmp	r3, #0
 8003b48:	d101      	bne.n	8003b4e <HAL_RCC_OscConfig+0x12>
 8003b4a:	2301      	movs	r3, #1
 8003b4c:	e272      	b.n	8004034 <HAL_RCC_OscConfig+0x4f8>
 8003b4e:	687b      	ldr	r3, [r7, #4]
 8003b50:	681b      	ldr	r3, [r3, #0]
 8003b52:	f003 0301 	and.w	r3, r3, #1
 8003b56:	2b00      	cmp	r3, #0
 8003b58:	f000 8087 	beq.w	8003c6a <HAL_RCC_OscConfig+0x12e>
 8003b5c:	4b92      	ldr	r3, [pc, #584]	@ (8003da8 <HAL_RCC_OscConfig+0x26c>)
 8003b5e:	685b      	ldr	r3, [r3, #4]
 8003b60:	f003 030c 	and.w	r3, r3, #12
 8003b64:	2b04      	cmp	r3, #4
 8003b66:	d00c      	beq.n	8003b82 <HAL_RCC_OscConfig+0x46>
 8003b68:	4b8f      	ldr	r3, [pc, #572]	@ (8003da8 <HAL_RCC_OscConfig+0x26c>)
 8003b6a:	685b      	ldr	r3, [r3, #4]
 8003b6c:	f003 030c 	and.w	r3, r3, #12
 8003b70:	2b08      	cmp	r3, #8
 8003b72:	d112      	bne.n	8003b9a <HAL_RCC_OscConfig+0x5e>
 8003b74:	4b8c      	ldr	r3, [pc, #560]	@ (8003da8 <HAL_RCC_OscConfig+0x26c>)
 8003b76:	685b      	ldr	r3, [r3, #4]
 8003b78:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003b7c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003b80:	d10b      	bne.n	8003b9a <HAL_RCC_OscConfig+0x5e>
 8003b82:	4b89      	ldr	r3, [pc, #548]	@ (8003da8 <HAL_RCC_OscConfig+0x26c>)
 8003b84:	681b      	ldr	r3, [r3, #0]
 8003b86:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003b8a:	2b00      	cmp	r3, #0
 8003b8c:	d06c      	beq.n	8003c68 <HAL_RCC_OscConfig+0x12c>
 8003b8e:	687b      	ldr	r3, [r7, #4]
 8003b90:	685b      	ldr	r3, [r3, #4]
 8003b92:	2b00      	cmp	r3, #0
 8003b94:	d168      	bne.n	8003c68 <HAL_RCC_OscConfig+0x12c>
 8003b96:	2301      	movs	r3, #1
 8003b98:	e24c      	b.n	8004034 <HAL_RCC_OscConfig+0x4f8>
 8003b9a:	687b      	ldr	r3, [r7, #4]
 8003b9c:	685b      	ldr	r3, [r3, #4]
 8003b9e:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003ba2:	d106      	bne.n	8003bb2 <HAL_RCC_OscConfig+0x76>
 8003ba4:	4b80      	ldr	r3, [pc, #512]	@ (8003da8 <HAL_RCC_OscConfig+0x26c>)
 8003ba6:	681b      	ldr	r3, [r3, #0]
 8003ba8:	4a7f      	ldr	r2, [pc, #508]	@ (8003da8 <HAL_RCC_OscConfig+0x26c>)
 8003baa:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003bae:	6013      	str	r3, [r2, #0]
 8003bb0:	e02e      	b.n	8003c10 <HAL_RCC_OscConfig+0xd4>
 8003bb2:	687b      	ldr	r3, [r7, #4]
 8003bb4:	685b      	ldr	r3, [r3, #4]
 8003bb6:	2b00      	cmp	r3, #0
 8003bb8:	d10c      	bne.n	8003bd4 <HAL_RCC_OscConfig+0x98>
 8003bba:	4b7b      	ldr	r3, [pc, #492]	@ (8003da8 <HAL_RCC_OscConfig+0x26c>)
 8003bbc:	681b      	ldr	r3, [r3, #0]
 8003bbe:	4a7a      	ldr	r2, [pc, #488]	@ (8003da8 <HAL_RCC_OscConfig+0x26c>)
 8003bc0:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8003bc4:	6013      	str	r3, [r2, #0]
 8003bc6:	4b78      	ldr	r3, [pc, #480]	@ (8003da8 <HAL_RCC_OscConfig+0x26c>)
 8003bc8:	681b      	ldr	r3, [r3, #0]
 8003bca:	4a77      	ldr	r2, [pc, #476]	@ (8003da8 <HAL_RCC_OscConfig+0x26c>)
 8003bcc:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8003bd0:	6013      	str	r3, [r2, #0]
 8003bd2:	e01d      	b.n	8003c10 <HAL_RCC_OscConfig+0xd4>
 8003bd4:	687b      	ldr	r3, [r7, #4]
 8003bd6:	685b      	ldr	r3, [r3, #4]
 8003bd8:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8003bdc:	d10c      	bne.n	8003bf8 <HAL_RCC_OscConfig+0xbc>
 8003bde:	4b72      	ldr	r3, [pc, #456]	@ (8003da8 <HAL_RCC_OscConfig+0x26c>)
 8003be0:	681b      	ldr	r3, [r3, #0]
 8003be2:	4a71      	ldr	r2, [pc, #452]	@ (8003da8 <HAL_RCC_OscConfig+0x26c>)
 8003be4:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8003be8:	6013      	str	r3, [r2, #0]
 8003bea:	4b6f      	ldr	r3, [pc, #444]	@ (8003da8 <HAL_RCC_OscConfig+0x26c>)
 8003bec:	681b      	ldr	r3, [r3, #0]
 8003bee:	4a6e      	ldr	r2, [pc, #440]	@ (8003da8 <HAL_RCC_OscConfig+0x26c>)
 8003bf0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003bf4:	6013      	str	r3, [r2, #0]
 8003bf6:	e00b      	b.n	8003c10 <HAL_RCC_OscConfig+0xd4>
 8003bf8:	4b6b      	ldr	r3, [pc, #428]	@ (8003da8 <HAL_RCC_OscConfig+0x26c>)
 8003bfa:	681b      	ldr	r3, [r3, #0]
 8003bfc:	4a6a      	ldr	r2, [pc, #424]	@ (8003da8 <HAL_RCC_OscConfig+0x26c>)
 8003bfe:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8003c02:	6013      	str	r3, [r2, #0]
 8003c04:	4b68      	ldr	r3, [pc, #416]	@ (8003da8 <HAL_RCC_OscConfig+0x26c>)
 8003c06:	681b      	ldr	r3, [r3, #0]
 8003c08:	4a67      	ldr	r2, [pc, #412]	@ (8003da8 <HAL_RCC_OscConfig+0x26c>)
 8003c0a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8003c0e:	6013      	str	r3, [r2, #0]
 8003c10:	687b      	ldr	r3, [r7, #4]
 8003c12:	685b      	ldr	r3, [r3, #4]
 8003c14:	2b00      	cmp	r3, #0
 8003c16:	d013      	beq.n	8003c40 <HAL_RCC_OscConfig+0x104>
 8003c18:	f7fe ffd8 	bl	8002bcc <HAL_GetTick>
 8003c1c:	6138      	str	r0, [r7, #16]
 8003c1e:	e008      	b.n	8003c32 <HAL_RCC_OscConfig+0xf6>
 8003c20:	f7fe ffd4 	bl	8002bcc <HAL_GetTick>
 8003c24:	4602      	mov	r2, r0
 8003c26:	693b      	ldr	r3, [r7, #16]
 8003c28:	1ad3      	subs	r3, r2, r3
 8003c2a:	2b64      	cmp	r3, #100	@ 0x64
 8003c2c:	d901      	bls.n	8003c32 <HAL_RCC_OscConfig+0xf6>
 8003c2e:	2303      	movs	r3, #3
 8003c30:	e200      	b.n	8004034 <HAL_RCC_OscConfig+0x4f8>
 8003c32:	4b5d      	ldr	r3, [pc, #372]	@ (8003da8 <HAL_RCC_OscConfig+0x26c>)
 8003c34:	681b      	ldr	r3, [r3, #0]
 8003c36:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003c3a:	2b00      	cmp	r3, #0
 8003c3c:	d0f0      	beq.n	8003c20 <HAL_RCC_OscConfig+0xe4>
 8003c3e:	e014      	b.n	8003c6a <HAL_RCC_OscConfig+0x12e>
 8003c40:	f7fe ffc4 	bl	8002bcc <HAL_GetTick>
 8003c44:	6138      	str	r0, [r7, #16]
 8003c46:	e008      	b.n	8003c5a <HAL_RCC_OscConfig+0x11e>
 8003c48:	f7fe ffc0 	bl	8002bcc <HAL_GetTick>
 8003c4c:	4602      	mov	r2, r0
 8003c4e:	693b      	ldr	r3, [r7, #16]
 8003c50:	1ad3      	subs	r3, r2, r3
 8003c52:	2b64      	cmp	r3, #100	@ 0x64
 8003c54:	d901      	bls.n	8003c5a <HAL_RCC_OscConfig+0x11e>
 8003c56:	2303      	movs	r3, #3
 8003c58:	e1ec      	b.n	8004034 <HAL_RCC_OscConfig+0x4f8>
 8003c5a:	4b53      	ldr	r3, [pc, #332]	@ (8003da8 <HAL_RCC_OscConfig+0x26c>)
 8003c5c:	681b      	ldr	r3, [r3, #0]
 8003c5e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003c62:	2b00      	cmp	r3, #0
 8003c64:	d1f0      	bne.n	8003c48 <HAL_RCC_OscConfig+0x10c>
 8003c66:	e000      	b.n	8003c6a <HAL_RCC_OscConfig+0x12e>
 8003c68:	bf00      	nop
 8003c6a:	687b      	ldr	r3, [r7, #4]
 8003c6c:	681b      	ldr	r3, [r3, #0]
 8003c6e:	f003 0302 	and.w	r3, r3, #2
 8003c72:	2b00      	cmp	r3, #0
 8003c74:	d063      	beq.n	8003d3e <HAL_RCC_OscConfig+0x202>
 8003c76:	4b4c      	ldr	r3, [pc, #304]	@ (8003da8 <HAL_RCC_OscConfig+0x26c>)
 8003c78:	685b      	ldr	r3, [r3, #4]
 8003c7a:	f003 030c 	and.w	r3, r3, #12
 8003c7e:	2b00      	cmp	r3, #0
 8003c80:	d00b      	beq.n	8003c9a <HAL_RCC_OscConfig+0x15e>
 8003c82:	4b49      	ldr	r3, [pc, #292]	@ (8003da8 <HAL_RCC_OscConfig+0x26c>)
 8003c84:	685b      	ldr	r3, [r3, #4]
 8003c86:	f003 030c 	and.w	r3, r3, #12
 8003c8a:	2b08      	cmp	r3, #8
 8003c8c:	d11c      	bne.n	8003cc8 <HAL_RCC_OscConfig+0x18c>
 8003c8e:	4b46      	ldr	r3, [pc, #280]	@ (8003da8 <HAL_RCC_OscConfig+0x26c>)
 8003c90:	685b      	ldr	r3, [r3, #4]
 8003c92:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003c96:	2b00      	cmp	r3, #0
 8003c98:	d116      	bne.n	8003cc8 <HAL_RCC_OscConfig+0x18c>
 8003c9a:	4b43      	ldr	r3, [pc, #268]	@ (8003da8 <HAL_RCC_OscConfig+0x26c>)
 8003c9c:	681b      	ldr	r3, [r3, #0]
 8003c9e:	f003 0302 	and.w	r3, r3, #2
 8003ca2:	2b00      	cmp	r3, #0
 8003ca4:	d005      	beq.n	8003cb2 <HAL_RCC_OscConfig+0x176>
 8003ca6:	687b      	ldr	r3, [r7, #4]
 8003ca8:	691b      	ldr	r3, [r3, #16]
 8003caa:	2b01      	cmp	r3, #1
 8003cac:	d001      	beq.n	8003cb2 <HAL_RCC_OscConfig+0x176>
 8003cae:	2301      	movs	r3, #1
 8003cb0:	e1c0      	b.n	8004034 <HAL_RCC_OscConfig+0x4f8>
 8003cb2:	4b3d      	ldr	r3, [pc, #244]	@ (8003da8 <HAL_RCC_OscConfig+0x26c>)
 8003cb4:	681b      	ldr	r3, [r3, #0]
 8003cb6:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8003cba:	687b      	ldr	r3, [r7, #4]
 8003cbc:	695b      	ldr	r3, [r3, #20]
 8003cbe:	00db      	lsls	r3, r3, #3
 8003cc0:	4939      	ldr	r1, [pc, #228]	@ (8003da8 <HAL_RCC_OscConfig+0x26c>)
 8003cc2:	4313      	orrs	r3, r2
 8003cc4:	600b      	str	r3, [r1, #0]
 8003cc6:	e03a      	b.n	8003d3e <HAL_RCC_OscConfig+0x202>
 8003cc8:	687b      	ldr	r3, [r7, #4]
 8003cca:	691b      	ldr	r3, [r3, #16]
 8003ccc:	2b00      	cmp	r3, #0
 8003cce:	d020      	beq.n	8003d12 <HAL_RCC_OscConfig+0x1d6>
 8003cd0:	4b36      	ldr	r3, [pc, #216]	@ (8003dac <HAL_RCC_OscConfig+0x270>)
 8003cd2:	2201      	movs	r2, #1
 8003cd4:	601a      	str	r2, [r3, #0]
 8003cd6:	f7fe ff79 	bl	8002bcc <HAL_GetTick>
 8003cda:	6138      	str	r0, [r7, #16]
 8003cdc:	e008      	b.n	8003cf0 <HAL_RCC_OscConfig+0x1b4>
 8003cde:	f7fe ff75 	bl	8002bcc <HAL_GetTick>
 8003ce2:	4602      	mov	r2, r0
 8003ce4:	693b      	ldr	r3, [r7, #16]
 8003ce6:	1ad3      	subs	r3, r2, r3
 8003ce8:	2b02      	cmp	r3, #2
 8003cea:	d901      	bls.n	8003cf0 <HAL_RCC_OscConfig+0x1b4>
 8003cec:	2303      	movs	r3, #3
 8003cee:	e1a1      	b.n	8004034 <HAL_RCC_OscConfig+0x4f8>
 8003cf0:	4b2d      	ldr	r3, [pc, #180]	@ (8003da8 <HAL_RCC_OscConfig+0x26c>)
 8003cf2:	681b      	ldr	r3, [r3, #0]
 8003cf4:	f003 0302 	and.w	r3, r3, #2
 8003cf8:	2b00      	cmp	r3, #0
 8003cfa:	d0f0      	beq.n	8003cde <HAL_RCC_OscConfig+0x1a2>
 8003cfc:	4b2a      	ldr	r3, [pc, #168]	@ (8003da8 <HAL_RCC_OscConfig+0x26c>)
 8003cfe:	681b      	ldr	r3, [r3, #0]
 8003d00:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8003d04:	687b      	ldr	r3, [r7, #4]
 8003d06:	695b      	ldr	r3, [r3, #20]
 8003d08:	00db      	lsls	r3, r3, #3
 8003d0a:	4927      	ldr	r1, [pc, #156]	@ (8003da8 <HAL_RCC_OscConfig+0x26c>)
 8003d0c:	4313      	orrs	r3, r2
 8003d0e:	600b      	str	r3, [r1, #0]
 8003d10:	e015      	b.n	8003d3e <HAL_RCC_OscConfig+0x202>
 8003d12:	4b26      	ldr	r3, [pc, #152]	@ (8003dac <HAL_RCC_OscConfig+0x270>)
 8003d14:	2200      	movs	r2, #0
 8003d16:	601a      	str	r2, [r3, #0]
 8003d18:	f7fe ff58 	bl	8002bcc <HAL_GetTick>
 8003d1c:	6138      	str	r0, [r7, #16]
 8003d1e:	e008      	b.n	8003d32 <HAL_RCC_OscConfig+0x1f6>
 8003d20:	f7fe ff54 	bl	8002bcc <HAL_GetTick>
 8003d24:	4602      	mov	r2, r0
 8003d26:	693b      	ldr	r3, [r7, #16]
 8003d28:	1ad3      	subs	r3, r2, r3
 8003d2a:	2b02      	cmp	r3, #2
 8003d2c:	d901      	bls.n	8003d32 <HAL_RCC_OscConfig+0x1f6>
 8003d2e:	2303      	movs	r3, #3
 8003d30:	e180      	b.n	8004034 <HAL_RCC_OscConfig+0x4f8>
 8003d32:	4b1d      	ldr	r3, [pc, #116]	@ (8003da8 <HAL_RCC_OscConfig+0x26c>)
 8003d34:	681b      	ldr	r3, [r3, #0]
 8003d36:	f003 0302 	and.w	r3, r3, #2
 8003d3a:	2b00      	cmp	r3, #0
 8003d3c:	d1f0      	bne.n	8003d20 <HAL_RCC_OscConfig+0x1e4>
 8003d3e:	687b      	ldr	r3, [r7, #4]
 8003d40:	681b      	ldr	r3, [r3, #0]
 8003d42:	f003 0308 	and.w	r3, r3, #8
 8003d46:	2b00      	cmp	r3, #0
 8003d48:	d03a      	beq.n	8003dc0 <HAL_RCC_OscConfig+0x284>
 8003d4a:	687b      	ldr	r3, [r7, #4]
 8003d4c:	699b      	ldr	r3, [r3, #24]
 8003d4e:	2b00      	cmp	r3, #0
 8003d50:	d019      	beq.n	8003d86 <HAL_RCC_OscConfig+0x24a>
 8003d52:	4b17      	ldr	r3, [pc, #92]	@ (8003db0 <HAL_RCC_OscConfig+0x274>)
 8003d54:	2201      	movs	r2, #1
 8003d56:	601a      	str	r2, [r3, #0]
 8003d58:	f7fe ff38 	bl	8002bcc <HAL_GetTick>
 8003d5c:	6138      	str	r0, [r7, #16]
 8003d5e:	e008      	b.n	8003d72 <HAL_RCC_OscConfig+0x236>
 8003d60:	f7fe ff34 	bl	8002bcc <HAL_GetTick>
 8003d64:	4602      	mov	r2, r0
 8003d66:	693b      	ldr	r3, [r7, #16]
 8003d68:	1ad3      	subs	r3, r2, r3
 8003d6a:	2b02      	cmp	r3, #2
 8003d6c:	d901      	bls.n	8003d72 <HAL_RCC_OscConfig+0x236>
 8003d6e:	2303      	movs	r3, #3
 8003d70:	e160      	b.n	8004034 <HAL_RCC_OscConfig+0x4f8>
 8003d72:	4b0d      	ldr	r3, [pc, #52]	@ (8003da8 <HAL_RCC_OscConfig+0x26c>)
 8003d74:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003d76:	f003 0302 	and.w	r3, r3, #2
 8003d7a:	2b00      	cmp	r3, #0
 8003d7c:	d0f0      	beq.n	8003d60 <HAL_RCC_OscConfig+0x224>
 8003d7e:	2001      	movs	r0, #1
 8003d80:	f000 fad0 	bl	8004324 <RCC_Delay>
 8003d84:	e01c      	b.n	8003dc0 <HAL_RCC_OscConfig+0x284>
 8003d86:	4b0a      	ldr	r3, [pc, #40]	@ (8003db0 <HAL_RCC_OscConfig+0x274>)
 8003d88:	2200      	movs	r2, #0
 8003d8a:	601a      	str	r2, [r3, #0]
 8003d8c:	f7fe ff1e 	bl	8002bcc <HAL_GetTick>
 8003d90:	6138      	str	r0, [r7, #16]
 8003d92:	e00f      	b.n	8003db4 <HAL_RCC_OscConfig+0x278>
 8003d94:	f7fe ff1a 	bl	8002bcc <HAL_GetTick>
 8003d98:	4602      	mov	r2, r0
 8003d9a:	693b      	ldr	r3, [r7, #16]
 8003d9c:	1ad3      	subs	r3, r2, r3
 8003d9e:	2b02      	cmp	r3, #2
 8003da0:	d908      	bls.n	8003db4 <HAL_RCC_OscConfig+0x278>
 8003da2:	2303      	movs	r3, #3
 8003da4:	e146      	b.n	8004034 <HAL_RCC_OscConfig+0x4f8>
 8003da6:	bf00      	nop
 8003da8:	40021000 	.word	0x40021000
 8003dac:	42420000 	.word	0x42420000
 8003db0:	42420480 	.word	0x42420480
 8003db4:	4b92      	ldr	r3, [pc, #584]	@ (8004000 <HAL_RCC_OscConfig+0x4c4>)
 8003db6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003db8:	f003 0302 	and.w	r3, r3, #2
 8003dbc:	2b00      	cmp	r3, #0
 8003dbe:	d1e9      	bne.n	8003d94 <HAL_RCC_OscConfig+0x258>
 8003dc0:	687b      	ldr	r3, [r7, #4]
 8003dc2:	681b      	ldr	r3, [r3, #0]
 8003dc4:	f003 0304 	and.w	r3, r3, #4
 8003dc8:	2b00      	cmp	r3, #0
 8003dca:	f000 80a6 	beq.w	8003f1a <HAL_RCC_OscConfig+0x3de>
 8003dce:	2300      	movs	r3, #0
 8003dd0:	75fb      	strb	r3, [r7, #23]
 8003dd2:	4b8b      	ldr	r3, [pc, #556]	@ (8004000 <HAL_RCC_OscConfig+0x4c4>)
 8003dd4:	69db      	ldr	r3, [r3, #28]
 8003dd6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003dda:	2b00      	cmp	r3, #0
 8003ddc:	d10d      	bne.n	8003dfa <HAL_RCC_OscConfig+0x2be>
 8003dde:	4b88      	ldr	r3, [pc, #544]	@ (8004000 <HAL_RCC_OscConfig+0x4c4>)
 8003de0:	69db      	ldr	r3, [r3, #28]
 8003de2:	4a87      	ldr	r2, [pc, #540]	@ (8004000 <HAL_RCC_OscConfig+0x4c4>)
 8003de4:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003de8:	61d3      	str	r3, [r2, #28]
 8003dea:	4b85      	ldr	r3, [pc, #532]	@ (8004000 <HAL_RCC_OscConfig+0x4c4>)
 8003dec:	69db      	ldr	r3, [r3, #28]
 8003dee:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003df2:	60bb      	str	r3, [r7, #8]
 8003df4:	68bb      	ldr	r3, [r7, #8]
 8003df6:	2301      	movs	r3, #1
 8003df8:	75fb      	strb	r3, [r7, #23]
 8003dfa:	4b82      	ldr	r3, [pc, #520]	@ (8004004 <HAL_RCC_OscConfig+0x4c8>)
 8003dfc:	681b      	ldr	r3, [r3, #0]
 8003dfe:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003e02:	2b00      	cmp	r3, #0
 8003e04:	d118      	bne.n	8003e38 <HAL_RCC_OscConfig+0x2fc>
 8003e06:	4b7f      	ldr	r3, [pc, #508]	@ (8004004 <HAL_RCC_OscConfig+0x4c8>)
 8003e08:	681b      	ldr	r3, [r3, #0]
 8003e0a:	4a7e      	ldr	r2, [pc, #504]	@ (8004004 <HAL_RCC_OscConfig+0x4c8>)
 8003e0c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003e10:	6013      	str	r3, [r2, #0]
 8003e12:	f7fe fedb 	bl	8002bcc <HAL_GetTick>
 8003e16:	6138      	str	r0, [r7, #16]
 8003e18:	e008      	b.n	8003e2c <HAL_RCC_OscConfig+0x2f0>
 8003e1a:	f7fe fed7 	bl	8002bcc <HAL_GetTick>
 8003e1e:	4602      	mov	r2, r0
 8003e20:	693b      	ldr	r3, [r7, #16]
 8003e22:	1ad3      	subs	r3, r2, r3
 8003e24:	2b64      	cmp	r3, #100	@ 0x64
 8003e26:	d901      	bls.n	8003e2c <HAL_RCC_OscConfig+0x2f0>
 8003e28:	2303      	movs	r3, #3
 8003e2a:	e103      	b.n	8004034 <HAL_RCC_OscConfig+0x4f8>
 8003e2c:	4b75      	ldr	r3, [pc, #468]	@ (8004004 <HAL_RCC_OscConfig+0x4c8>)
 8003e2e:	681b      	ldr	r3, [r3, #0]
 8003e30:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003e34:	2b00      	cmp	r3, #0
 8003e36:	d0f0      	beq.n	8003e1a <HAL_RCC_OscConfig+0x2de>
 8003e38:	687b      	ldr	r3, [r7, #4]
 8003e3a:	68db      	ldr	r3, [r3, #12]
 8003e3c:	2b01      	cmp	r3, #1
 8003e3e:	d106      	bne.n	8003e4e <HAL_RCC_OscConfig+0x312>
 8003e40:	4b6f      	ldr	r3, [pc, #444]	@ (8004000 <HAL_RCC_OscConfig+0x4c4>)
 8003e42:	6a1b      	ldr	r3, [r3, #32]
 8003e44:	4a6e      	ldr	r2, [pc, #440]	@ (8004000 <HAL_RCC_OscConfig+0x4c4>)
 8003e46:	f043 0301 	orr.w	r3, r3, #1
 8003e4a:	6213      	str	r3, [r2, #32]
 8003e4c:	e02d      	b.n	8003eaa <HAL_RCC_OscConfig+0x36e>
 8003e4e:	687b      	ldr	r3, [r7, #4]
 8003e50:	68db      	ldr	r3, [r3, #12]
 8003e52:	2b00      	cmp	r3, #0
 8003e54:	d10c      	bne.n	8003e70 <HAL_RCC_OscConfig+0x334>
 8003e56:	4b6a      	ldr	r3, [pc, #424]	@ (8004000 <HAL_RCC_OscConfig+0x4c4>)
 8003e58:	6a1b      	ldr	r3, [r3, #32]
 8003e5a:	4a69      	ldr	r2, [pc, #420]	@ (8004000 <HAL_RCC_OscConfig+0x4c4>)
 8003e5c:	f023 0301 	bic.w	r3, r3, #1
 8003e60:	6213      	str	r3, [r2, #32]
 8003e62:	4b67      	ldr	r3, [pc, #412]	@ (8004000 <HAL_RCC_OscConfig+0x4c4>)
 8003e64:	6a1b      	ldr	r3, [r3, #32]
 8003e66:	4a66      	ldr	r2, [pc, #408]	@ (8004000 <HAL_RCC_OscConfig+0x4c4>)
 8003e68:	f023 0304 	bic.w	r3, r3, #4
 8003e6c:	6213      	str	r3, [r2, #32]
 8003e6e:	e01c      	b.n	8003eaa <HAL_RCC_OscConfig+0x36e>
 8003e70:	687b      	ldr	r3, [r7, #4]
 8003e72:	68db      	ldr	r3, [r3, #12]
 8003e74:	2b05      	cmp	r3, #5
 8003e76:	d10c      	bne.n	8003e92 <HAL_RCC_OscConfig+0x356>
 8003e78:	4b61      	ldr	r3, [pc, #388]	@ (8004000 <HAL_RCC_OscConfig+0x4c4>)
 8003e7a:	6a1b      	ldr	r3, [r3, #32]
 8003e7c:	4a60      	ldr	r2, [pc, #384]	@ (8004000 <HAL_RCC_OscConfig+0x4c4>)
 8003e7e:	f043 0304 	orr.w	r3, r3, #4
 8003e82:	6213      	str	r3, [r2, #32]
 8003e84:	4b5e      	ldr	r3, [pc, #376]	@ (8004000 <HAL_RCC_OscConfig+0x4c4>)
 8003e86:	6a1b      	ldr	r3, [r3, #32]
 8003e88:	4a5d      	ldr	r2, [pc, #372]	@ (8004000 <HAL_RCC_OscConfig+0x4c4>)
 8003e8a:	f043 0301 	orr.w	r3, r3, #1
 8003e8e:	6213      	str	r3, [r2, #32]
 8003e90:	e00b      	b.n	8003eaa <HAL_RCC_OscConfig+0x36e>
 8003e92:	4b5b      	ldr	r3, [pc, #364]	@ (8004000 <HAL_RCC_OscConfig+0x4c4>)
 8003e94:	6a1b      	ldr	r3, [r3, #32]
 8003e96:	4a5a      	ldr	r2, [pc, #360]	@ (8004000 <HAL_RCC_OscConfig+0x4c4>)
 8003e98:	f023 0301 	bic.w	r3, r3, #1
 8003e9c:	6213      	str	r3, [r2, #32]
 8003e9e:	4b58      	ldr	r3, [pc, #352]	@ (8004000 <HAL_RCC_OscConfig+0x4c4>)
 8003ea0:	6a1b      	ldr	r3, [r3, #32]
 8003ea2:	4a57      	ldr	r2, [pc, #348]	@ (8004000 <HAL_RCC_OscConfig+0x4c4>)
 8003ea4:	f023 0304 	bic.w	r3, r3, #4
 8003ea8:	6213      	str	r3, [r2, #32]
 8003eaa:	687b      	ldr	r3, [r7, #4]
 8003eac:	68db      	ldr	r3, [r3, #12]
 8003eae:	2b00      	cmp	r3, #0
 8003eb0:	d015      	beq.n	8003ede <HAL_RCC_OscConfig+0x3a2>
 8003eb2:	f7fe fe8b 	bl	8002bcc <HAL_GetTick>
 8003eb6:	6138      	str	r0, [r7, #16]
 8003eb8:	e00a      	b.n	8003ed0 <HAL_RCC_OscConfig+0x394>
 8003eba:	f7fe fe87 	bl	8002bcc <HAL_GetTick>
 8003ebe:	4602      	mov	r2, r0
 8003ec0:	693b      	ldr	r3, [r7, #16]
 8003ec2:	1ad3      	subs	r3, r2, r3
 8003ec4:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003ec8:	4293      	cmp	r3, r2
 8003eca:	d901      	bls.n	8003ed0 <HAL_RCC_OscConfig+0x394>
 8003ecc:	2303      	movs	r3, #3
 8003ece:	e0b1      	b.n	8004034 <HAL_RCC_OscConfig+0x4f8>
 8003ed0:	4b4b      	ldr	r3, [pc, #300]	@ (8004000 <HAL_RCC_OscConfig+0x4c4>)
 8003ed2:	6a1b      	ldr	r3, [r3, #32]
 8003ed4:	f003 0302 	and.w	r3, r3, #2
 8003ed8:	2b00      	cmp	r3, #0
 8003eda:	d0ee      	beq.n	8003eba <HAL_RCC_OscConfig+0x37e>
 8003edc:	e014      	b.n	8003f08 <HAL_RCC_OscConfig+0x3cc>
 8003ede:	f7fe fe75 	bl	8002bcc <HAL_GetTick>
 8003ee2:	6138      	str	r0, [r7, #16]
 8003ee4:	e00a      	b.n	8003efc <HAL_RCC_OscConfig+0x3c0>
 8003ee6:	f7fe fe71 	bl	8002bcc <HAL_GetTick>
 8003eea:	4602      	mov	r2, r0
 8003eec:	693b      	ldr	r3, [r7, #16]
 8003eee:	1ad3      	subs	r3, r2, r3
 8003ef0:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003ef4:	4293      	cmp	r3, r2
 8003ef6:	d901      	bls.n	8003efc <HAL_RCC_OscConfig+0x3c0>
 8003ef8:	2303      	movs	r3, #3
 8003efa:	e09b      	b.n	8004034 <HAL_RCC_OscConfig+0x4f8>
 8003efc:	4b40      	ldr	r3, [pc, #256]	@ (8004000 <HAL_RCC_OscConfig+0x4c4>)
 8003efe:	6a1b      	ldr	r3, [r3, #32]
 8003f00:	f003 0302 	and.w	r3, r3, #2
 8003f04:	2b00      	cmp	r3, #0
 8003f06:	d1ee      	bne.n	8003ee6 <HAL_RCC_OscConfig+0x3aa>
 8003f08:	7dfb      	ldrb	r3, [r7, #23]
 8003f0a:	2b01      	cmp	r3, #1
 8003f0c:	d105      	bne.n	8003f1a <HAL_RCC_OscConfig+0x3de>
 8003f0e:	4b3c      	ldr	r3, [pc, #240]	@ (8004000 <HAL_RCC_OscConfig+0x4c4>)
 8003f10:	69db      	ldr	r3, [r3, #28]
 8003f12:	4a3b      	ldr	r2, [pc, #236]	@ (8004000 <HAL_RCC_OscConfig+0x4c4>)
 8003f14:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8003f18:	61d3      	str	r3, [r2, #28]
 8003f1a:	687b      	ldr	r3, [r7, #4]
 8003f1c:	69db      	ldr	r3, [r3, #28]
 8003f1e:	2b00      	cmp	r3, #0
 8003f20:	f000 8087 	beq.w	8004032 <HAL_RCC_OscConfig+0x4f6>
 8003f24:	4b36      	ldr	r3, [pc, #216]	@ (8004000 <HAL_RCC_OscConfig+0x4c4>)
 8003f26:	685b      	ldr	r3, [r3, #4]
 8003f28:	f003 030c 	and.w	r3, r3, #12
 8003f2c:	2b08      	cmp	r3, #8
 8003f2e:	d061      	beq.n	8003ff4 <HAL_RCC_OscConfig+0x4b8>
 8003f30:	687b      	ldr	r3, [r7, #4]
 8003f32:	69db      	ldr	r3, [r3, #28]
 8003f34:	2b02      	cmp	r3, #2
 8003f36:	d146      	bne.n	8003fc6 <HAL_RCC_OscConfig+0x48a>
 8003f38:	4b33      	ldr	r3, [pc, #204]	@ (8004008 <HAL_RCC_OscConfig+0x4cc>)
 8003f3a:	2200      	movs	r2, #0
 8003f3c:	601a      	str	r2, [r3, #0]
 8003f3e:	f7fe fe45 	bl	8002bcc <HAL_GetTick>
 8003f42:	6138      	str	r0, [r7, #16]
 8003f44:	e008      	b.n	8003f58 <HAL_RCC_OscConfig+0x41c>
 8003f46:	f7fe fe41 	bl	8002bcc <HAL_GetTick>
 8003f4a:	4602      	mov	r2, r0
 8003f4c:	693b      	ldr	r3, [r7, #16]
 8003f4e:	1ad3      	subs	r3, r2, r3
 8003f50:	2b02      	cmp	r3, #2
 8003f52:	d901      	bls.n	8003f58 <HAL_RCC_OscConfig+0x41c>
 8003f54:	2303      	movs	r3, #3
 8003f56:	e06d      	b.n	8004034 <HAL_RCC_OscConfig+0x4f8>
 8003f58:	4b29      	ldr	r3, [pc, #164]	@ (8004000 <HAL_RCC_OscConfig+0x4c4>)
 8003f5a:	681b      	ldr	r3, [r3, #0]
 8003f5c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003f60:	2b00      	cmp	r3, #0
 8003f62:	d1f0      	bne.n	8003f46 <HAL_RCC_OscConfig+0x40a>
 8003f64:	687b      	ldr	r3, [r7, #4]
 8003f66:	6a1b      	ldr	r3, [r3, #32]
 8003f68:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003f6c:	d108      	bne.n	8003f80 <HAL_RCC_OscConfig+0x444>
 8003f6e:	4b24      	ldr	r3, [pc, #144]	@ (8004000 <HAL_RCC_OscConfig+0x4c4>)
 8003f70:	685b      	ldr	r3, [r3, #4]
 8003f72:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 8003f76:	687b      	ldr	r3, [r7, #4]
 8003f78:	689b      	ldr	r3, [r3, #8]
 8003f7a:	4921      	ldr	r1, [pc, #132]	@ (8004000 <HAL_RCC_OscConfig+0x4c4>)
 8003f7c:	4313      	orrs	r3, r2
 8003f7e:	604b      	str	r3, [r1, #4]
 8003f80:	4b1f      	ldr	r3, [pc, #124]	@ (8004000 <HAL_RCC_OscConfig+0x4c4>)
 8003f82:	685b      	ldr	r3, [r3, #4]
 8003f84:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 8003f88:	687b      	ldr	r3, [r7, #4]
 8003f8a:	6a19      	ldr	r1, [r3, #32]
 8003f8c:	687b      	ldr	r3, [r7, #4]
 8003f8e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003f90:	430b      	orrs	r3, r1
 8003f92:	491b      	ldr	r1, [pc, #108]	@ (8004000 <HAL_RCC_OscConfig+0x4c4>)
 8003f94:	4313      	orrs	r3, r2
 8003f96:	604b      	str	r3, [r1, #4]
 8003f98:	4b1b      	ldr	r3, [pc, #108]	@ (8004008 <HAL_RCC_OscConfig+0x4cc>)
 8003f9a:	2201      	movs	r2, #1
 8003f9c:	601a      	str	r2, [r3, #0]
 8003f9e:	f7fe fe15 	bl	8002bcc <HAL_GetTick>
 8003fa2:	6138      	str	r0, [r7, #16]
 8003fa4:	e008      	b.n	8003fb8 <HAL_RCC_OscConfig+0x47c>
 8003fa6:	f7fe fe11 	bl	8002bcc <HAL_GetTick>
 8003faa:	4602      	mov	r2, r0
 8003fac:	693b      	ldr	r3, [r7, #16]
 8003fae:	1ad3      	subs	r3, r2, r3
 8003fb0:	2b02      	cmp	r3, #2
 8003fb2:	d901      	bls.n	8003fb8 <HAL_RCC_OscConfig+0x47c>
 8003fb4:	2303      	movs	r3, #3
 8003fb6:	e03d      	b.n	8004034 <HAL_RCC_OscConfig+0x4f8>
 8003fb8:	4b11      	ldr	r3, [pc, #68]	@ (8004000 <HAL_RCC_OscConfig+0x4c4>)
 8003fba:	681b      	ldr	r3, [r3, #0]
 8003fbc:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003fc0:	2b00      	cmp	r3, #0
 8003fc2:	d0f0      	beq.n	8003fa6 <HAL_RCC_OscConfig+0x46a>
 8003fc4:	e035      	b.n	8004032 <HAL_RCC_OscConfig+0x4f6>
 8003fc6:	4b10      	ldr	r3, [pc, #64]	@ (8004008 <HAL_RCC_OscConfig+0x4cc>)
 8003fc8:	2200      	movs	r2, #0
 8003fca:	601a      	str	r2, [r3, #0]
 8003fcc:	f7fe fdfe 	bl	8002bcc <HAL_GetTick>
 8003fd0:	6138      	str	r0, [r7, #16]
 8003fd2:	e008      	b.n	8003fe6 <HAL_RCC_OscConfig+0x4aa>
 8003fd4:	f7fe fdfa 	bl	8002bcc <HAL_GetTick>
 8003fd8:	4602      	mov	r2, r0
 8003fda:	693b      	ldr	r3, [r7, #16]
 8003fdc:	1ad3      	subs	r3, r2, r3
 8003fde:	2b02      	cmp	r3, #2
 8003fe0:	d901      	bls.n	8003fe6 <HAL_RCC_OscConfig+0x4aa>
 8003fe2:	2303      	movs	r3, #3
 8003fe4:	e026      	b.n	8004034 <HAL_RCC_OscConfig+0x4f8>
 8003fe6:	4b06      	ldr	r3, [pc, #24]	@ (8004000 <HAL_RCC_OscConfig+0x4c4>)
 8003fe8:	681b      	ldr	r3, [r3, #0]
 8003fea:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003fee:	2b00      	cmp	r3, #0
 8003ff0:	d1f0      	bne.n	8003fd4 <HAL_RCC_OscConfig+0x498>
 8003ff2:	e01e      	b.n	8004032 <HAL_RCC_OscConfig+0x4f6>
 8003ff4:	687b      	ldr	r3, [r7, #4]
 8003ff6:	69db      	ldr	r3, [r3, #28]
 8003ff8:	2b01      	cmp	r3, #1
 8003ffa:	d107      	bne.n	800400c <HAL_RCC_OscConfig+0x4d0>
 8003ffc:	2301      	movs	r3, #1
 8003ffe:	e019      	b.n	8004034 <HAL_RCC_OscConfig+0x4f8>
 8004000:	40021000 	.word	0x40021000
 8004004:	40007000 	.word	0x40007000
 8004008:	42420060 	.word	0x42420060
 800400c:	4b0b      	ldr	r3, [pc, #44]	@ (800403c <HAL_RCC_OscConfig+0x500>)
 800400e:	685b      	ldr	r3, [r3, #4]
 8004010:	60fb      	str	r3, [r7, #12]
 8004012:	68fb      	ldr	r3, [r7, #12]
 8004014:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 8004018:	687b      	ldr	r3, [r7, #4]
 800401a:	6a1b      	ldr	r3, [r3, #32]
 800401c:	429a      	cmp	r2, r3
 800401e:	d106      	bne.n	800402e <HAL_RCC_OscConfig+0x4f2>
 8004020:	68fb      	ldr	r3, [r7, #12]
 8004022:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 8004026:	687b      	ldr	r3, [r7, #4]
 8004028:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800402a:	429a      	cmp	r2, r3
 800402c:	d001      	beq.n	8004032 <HAL_RCC_OscConfig+0x4f6>
 800402e:	2301      	movs	r3, #1
 8004030:	e000      	b.n	8004034 <HAL_RCC_OscConfig+0x4f8>
 8004032:	2300      	movs	r3, #0
 8004034:	4618      	mov	r0, r3
 8004036:	3718      	adds	r7, #24
 8004038:	46bd      	mov	sp, r7
 800403a:	bd80      	pop	{r7, pc}
 800403c:	40021000 	.word	0x40021000

08004040 <HAL_RCC_ClockConfig>:
 8004040:	b580      	push	{r7, lr}
 8004042:	b084      	sub	sp, #16
 8004044:	af00      	add	r7, sp, #0
 8004046:	6078      	str	r0, [r7, #4]
 8004048:	6039      	str	r1, [r7, #0]
 800404a:	687b      	ldr	r3, [r7, #4]
 800404c:	2b00      	cmp	r3, #0
 800404e:	d101      	bne.n	8004054 <HAL_RCC_ClockConfig+0x14>
 8004050:	2301      	movs	r3, #1
 8004052:	e0d0      	b.n	80041f6 <HAL_RCC_ClockConfig+0x1b6>
 8004054:	4b6a      	ldr	r3, [pc, #424]	@ (8004200 <HAL_RCC_ClockConfig+0x1c0>)
 8004056:	681b      	ldr	r3, [r3, #0]
 8004058:	f003 0307 	and.w	r3, r3, #7
 800405c:	683a      	ldr	r2, [r7, #0]
 800405e:	429a      	cmp	r2, r3
 8004060:	d910      	bls.n	8004084 <HAL_RCC_ClockConfig+0x44>
 8004062:	4b67      	ldr	r3, [pc, #412]	@ (8004200 <HAL_RCC_ClockConfig+0x1c0>)
 8004064:	681b      	ldr	r3, [r3, #0]
 8004066:	f023 0207 	bic.w	r2, r3, #7
 800406a:	4965      	ldr	r1, [pc, #404]	@ (8004200 <HAL_RCC_ClockConfig+0x1c0>)
 800406c:	683b      	ldr	r3, [r7, #0]
 800406e:	4313      	orrs	r3, r2
 8004070:	600b      	str	r3, [r1, #0]
 8004072:	4b63      	ldr	r3, [pc, #396]	@ (8004200 <HAL_RCC_ClockConfig+0x1c0>)
 8004074:	681b      	ldr	r3, [r3, #0]
 8004076:	f003 0307 	and.w	r3, r3, #7
 800407a:	683a      	ldr	r2, [r7, #0]
 800407c:	429a      	cmp	r2, r3
 800407e:	d001      	beq.n	8004084 <HAL_RCC_ClockConfig+0x44>
 8004080:	2301      	movs	r3, #1
 8004082:	e0b8      	b.n	80041f6 <HAL_RCC_ClockConfig+0x1b6>
 8004084:	687b      	ldr	r3, [r7, #4]
 8004086:	681b      	ldr	r3, [r3, #0]
 8004088:	f003 0302 	and.w	r3, r3, #2
 800408c:	2b00      	cmp	r3, #0
 800408e:	d020      	beq.n	80040d2 <HAL_RCC_ClockConfig+0x92>
 8004090:	687b      	ldr	r3, [r7, #4]
 8004092:	681b      	ldr	r3, [r3, #0]
 8004094:	f003 0304 	and.w	r3, r3, #4
 8004098:	2b00      	cmp	r3, #0
 800409a:	d005      	beq.n	80040a8 <HAL_RCC_ClockConfig+0x68>
 800409c:	4b59      	ldr	r3, [pc, #356]	@ (8004204 <HAL_RCC_ClockConfig+0x1c4>)
 800409e:	685b      	ldr	r3, [r3, #4]
 80040a0:	4a58      	ldr	r2, [pc, #352]	@ (8004204 <HAL_RCC_ClockConfig+0x1c4>)
 80040a2:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 80040a6:	6053      	str	r3, [r2, #4]
 80040a8:	687b      	ldr	r3, [r7, #4]
 80040aa:	681b      	ldr	r3, [r3, #0]
 80040ac:	f003 0308 	and.w	r3, r3, #8
 80040b0:	2b00      	cmp	r3, #0
 80040b2:	d005      	beq.n	80040c0 <HAL_RCC_ClockConfig+0x80>
 80040b4:	4b53      	ldr	r3, [pc, #332]	@ (8004204 <HAL_RCC_ClockConfig+0x1c4>)
 80040b6:	685b      	ldr	r3, [r3, #4]
 80040b8:	4a52      	ldr	r2, [pc, #328]	@ (8004204 <HAL_RCC_ClockConfig+0x1c4>)
 80040ba:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 80040be:	6053      	str	r3, [r2, #4]
 80040c0:	4b50      	ldr	r3, [pc, #320]	@ (8004204 <HAL_RCC_ClockConfig+0x1c4>)
 80040c2:	685b      	ldr	r3, [r3, #4]
 80040c4:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80040c8:	687b      	ldr	r3, [r7, #4]
 80040ca:	689b      	ldr	r3, [r3, #8]
 80040cc:	494d      	ldr	r1, [pc, #308]	@ (8004204 <HAL_RCC_ClockConfig+0x1c4>)
 80040ce:	4313      	orrs	r3, r2
 80040d0:	604b      	str	r3, [r1, #4]
 80040d2:	687b      	ldr	r3, [r7, #4]
 80040d4:	681b      	ldr	r3, [r3, #0]
 80040d6:	f003 0301 	and.w	r3, r3, #1
 80040da:	2b00      	cmp	r3, #0
 80040dc:	d040      	beq.n	8004160 <HAL_RCC_ClockConfig+0x120>
 80040de:	687b      	ldr	r3, [r7, #4]
 80040e0:	685b      	ldr	r3, [r3, #4]
 80040e2:	2b01      	cmp	r3, #1
 80040e4:	d107      	bne.n	80040f6 <HAL_RCC_ClockConfig+0xb6>
 80040e6:	4b47      	ldr	r3, [pc, #284]	@ (8004204 <HAL_RCC_ClockConfig+0x1c4>)
 80040e8:	681b      	ldr	r3, [r3, #0]
 80040ea:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80040ee:	2b00      	cmp	r3, #0
 80040f0:	d115      	bne.n	800411e <HAL_RCC_ClockConfig+0xde>
 80040f2:	2301      	movs	r3, #1
 80040f4:	e07f      	b.n	80041f6 <HAL_RCC_ClockConfig+0x1b6>
 80040f6:	687b      	ldr	r3, [r7, #4]
 80040f8:	685b      	ldr	r3, [r3, #4]
 80040fa:	2b02      	cmp	r3, #2
 80040fc:	d107      	bne.n	800410e <HAL_RCC_ClockConfig+0xce>
 80040fe:	4b41      	ldr	r3, [pc, #260]	@ (8004204 <HAL_RCC_ClockConfig+0x1c4>)
 8004100:	681b      	ldr	r3, [r3, #0]
 8004102:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004106:	2b00      	cmp	r3, #0
 8004108:	d109      	bne.n	800411e <HAL_RCC_ClockConfig+0xde>
 800410a:	2301      	movs	r3, #1
 800410c:	e073      	b.n	80041f6 <HAL_RCC_ClockConfig+0x1b6>
 800410e:	4b3d      	ldr	r3, [pc, #244]	@ (8004204 <HAL_RCC_ClockConfig+0x1c4>)
 8004110:	681b      	ldr	r3, [r3, #0]
 8004112:	f003 0302 	and.w	r3, r3, #2
 8004116:	2b00      	cmp	r3, #0
 8004118:	d101      	bne.n	800411e <HAL_RCC_ClockConfig+0xde>
 800411a:	2301      	movs	r3, #1
 800411c:	e06b      	b.n	80041f6 <HAL_RCC_ClockConfig+0x1b6>
 800411e:	4b39      	ldr	r3, [pc, #228]	@ (8004204 <HAL_RCC_ClockConfig+0x1c4>)
 8004120:	685b      	ldr	r3, [r3, #4]
 8004122:	f023 0203 	bic.w	r2, r3, #3
 8004126:	687b      	ldr	r3, [r7, #4]
 8004128:	685b      	ldr	r3, [r3, #4]
 800412a:	4936      	ldr	r1, [pc, #216]	@ (8004204 <HAL_RCC_ClockConfig+0x1c4>)
 800412c:	4313      	orrs	r3, r2
 800412e:	604b      	str	r3, [r1, #4]
 8004130:	f7fe fd4c 	bl	8002bcc <HAL_GetTick>
 8004134:	60f8      	str	r0, [r7, #12]
 8004136:	e00a      	b.n	800414e <HAL_RCC_ClockConfig+0x10e>
 8004138:	f7fe fd48 	bl	8002bcc <HAL_GetTick>
 800413c:	4602      	mov	r2, r0
 800413e:	68fb      	ldr	r3, [r7, #12]
 8004140:	1ad3      	subs	r3, r2, r3
 8004142:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004146:	4293      	cmp	r3, r2
 8004148:	d901      	bls.n	800414e <HAL_RCC_ClockConfig+0x10e>
 800414a:	2303      	movs	r3, #3
 800414c:	e053      	b.n	80041f6 <HAL_RCC_ClockConfig+0x1b6>
 800414e:	4b2d      	ldr	r3, [pc, #180]	@ (8004204 <HAL_RCC_ClockConfig+0x1c4>)
 8004150:	685b      	ldr	r3, [r3, #4]
 8004152:	f003 020c 	and.w	r2, r3, #12
 8004156:	687b      	ldr	r3, [r7, #4]
 8004158:	685b      	ldr	r3, [r3, #4]
 800415a:	009b      	lsls	r3, r3, #2
 800415c:	429a      	cmp	r2, r3
 800415e:	d1eb      	bne.n	8004138 <HAL_RCC_ClockConfig+0xf8>
 8004160:	4b27      	ldr	r3, [pc, #156]	@ (8004200 <HAL_RCC_ClockConfig+0x1c0>)
 8004162:	681b      	ldr	r3, [r3, #0]
 8004164:	f003 0307 	and.w	r3, r3, #7
 8004168:	683a      	ldr	r2, [r7, #0]
 800416a:	429a      	cmp	r2, r3
 800416c:	d210      	bcs.n	8004190 <HAL_RCC_ClockConfig+0x150>
 800416e:	4b24      	ldr	r3, [pc, #144]	@ (8004200 <HAL_RCC_ClockConfig+0x1c0>)
 8004170:	681b      	ldr	r3, [r3, #0]
 8004172:	f023 0207 	bic.w	r2, r3, #7
 8004176:	4922      	ldr	r1, [pc, #136]	@ (8004200 <HAL_RCC_ClockConfig+0x1c0>)
 8004178:	683b      	ldr	r3, [r7, #0]
 800417a:	4313      	orrs	r3, r2
 800417c:	600b      	str	r3, [r1, #0]
 800417e:	4b20      	ldr	r3, [pc, #128]	@ (8004200 <HAL_RCC_ClockConfig+0x1c0>)
 8004180:	681b      	ldr	r3, [r3, #0]
 8004182:	f003 0307 	and.w	r3, r3, #7
 8004186:	683a      	ldr	r2, [r7, #0]
 8004188:	429a      	cmp	r2, r3
 800418a:	d001      	beq.n	8004190 <HAL_RCC_ClockConfig+0x150>
 800418c:	2301      	movs	r3, #1
 800418e:	e032      	b.n	80041f6 <HAL_RCC_ClockConfig+0x1b6>
 8004190:	687b      	ldr	r3, [r7, #4]
 8004192:	681b      	ldr	r3, [r3, #0]
 8004194:	f003 0304 	and.w	r3, r3, #4
 8004198:	2b00      	cmp	r3, #0
 800419a:	d008      	beq.n	80041ae <HAL_RCC_ClockConfig+0x16e>
 800419c:	4b19      	ldr	r3, [pc, #100]	@ (8004204 <HAL_RCC_ClockConfig+0x1c4>)
 800419e:	685b      	ldr	r3, [r3, #4]
 80041a0:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 80041a4:	687b      	ldr	r3, [r7, #4]
 80041a6:	68db      	ldr	r3, [r3, #12]
 80041a8:	4916      	ldr	r1, [pc, #88]	@ (8004204 <HAL_RCC_ClockConfig+0x1c4>)
 80041aa:	4313      	orrs	r3, r2
 80041ac:	604b      	str	r3, [r1, #4]
 80041ae:	687b      	ldr	r3, [r7, #4]
 80041b0:	681b      	ldr	r3, [r3, #0]
 80041b2:	f003 0308 	and.w	r3, r3, #8
 80041b6:	2b00      	cmp	r3, #0
 80041b8:	d009      	beq.n	80041ce <HAL_RCC_ClockConfig+0x18e>
 80041ba:	4b12      	ldr	r3, [pc, #72]	@ (8004204 <HAL_RCC_ClockConfig+0x1c4>)
 80041bc:	685b      	ldr	r3, [r3, #4]
 80041be:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 80041c2:	687b      	ldr	r3, [r7, #4]
 80041c4:	691b      	ldr	r3, [r3, #16]
 80041c6:	00db      	lsls	r3, r3, #3
 80041c8:	490e      	ldr	r1, [pc, #56]	@ (8004204 <HAL_RCC_ClockConfig+0x1c4>)
 80041ca:	4313      	orrs	r3, r2
 80041cc:	604b      	str	r3, [r1, #4]
 80041ce:	f000 f821 	bl	8004214 <HAL_RCC_GetSysClockFreq>
 80041d2:	4602      	mov	r2, r0
 80041d4:	4b0b      	ldr	r3, [pc, #44]	@ (8004204 <HAL_RCC_ClockConfig+0x1c4>)
 80041d6:	685b      	ldr	r3, [r3, #4]
 80041d8:	091b      	lsrs	r3, r3, #4
 80041da:	f003 030f 	and.w	r3, r3, #15
 80041de:	490a      	ldr	r1, [pc, #40]	@ (8004208 <HAL_RCC_ClockConfig+0x1c8>)
 80041e0:	5ccb      	ldrb	r3, [r1, r3]
 80041e2:	fa22 f303 	lsr.w	r3, r2, r3
 80041e6:	4a09      	ldr	r2, [pc, #36]	@ (800420c <HAL_RCC_ClockConfig+0x1cc>)
 80041e8:	6013      	str	r3, [r2, #0]
 80041ea:	4b09      	ldr	r3, [pc, #36]	@ (8004210 <HAL_RCC_ClockConfig+0x1d0>)
 80041ec:	681b      	ldr	r3, [r3, #0]
 80041ee:	4618      	mov	r0, r3
 80041f0:	f7fe fcaa 	bl	8002b48 <HAL_InitTick>
 80041f4:	2300      	movs	r3, #0
 80041f6:	4618      	mov	r0, r3
 80041f8:	3710      	adds	r7, #16
 80041fa:	46bd      	mov	sp, r7
 80041fc:	bd80      	pop	{r7, pc}
 80041fe:	bf00      	nop
 8004200:	40022000 	.word	0x40022000
 8004204:	40021000 	.word	0x40021000
 8004208:	080082d8 	.word	0x080082d8
 800420c:	20000000 	.word	0x20000000
 8004210:	20000004 	.word	0x20000004

08004214 <HAL_RCC_GetSysClockFreq>:
 8004214:	b480      	push	{r7}
 8004216:	b087      	sub	sp, #28
 8004218:	af00      	add	r7, sp, #0
 800421a:	2300      	movs	r3, #0
 800421c:	60fb      	str	r3, [r7, #12]
 800421e:	2300      	movs	r3, #0
 8004220:	60bb      	str	r3, [r7, #8]
 8004222:	2300      	movs	r3, #0
 8004224:	617b      	str	r3, [r7, #20]
 8004226:	2300      	movs	r3, #0
 8004228:	607b      	str	r3, [r7, #4]
 800422a:	2300      	movs	r3, #0
 800422c:	613b      	str	r3, [r7, #16]
 800422e:	4b1e      	ldr	r3, [pc, #120]	@ (80042a8 <HAL_RCC_GetSysClockFreq+0x94>)
 8004230:	685b      	ldr	r3, [r3, #4]
 8004232:	60fb      	str	r3, [r7, #12]
 8004234:	68fb      	ldr	r3, [r7, #12]
 8004236:	f003 030c 	and.w	r3, r3, #12
 800423a:	2b04      	cmp	r3, #4
 800423c:	d002      	beq.n	8004244 <HAL_RCC_GetSysClockFreq+0x30>
 800423e:	2b08      	cmp	r3, #8
 8004240:	d003      	beq.n	800424a <HAL_RCC_GetSysClockFreq+0x36>
 8004242:	e027      	b.n	8004294 <HAL_RCC_GetSysClockFreq+0x80>
 8004244:	4b19      	ldr	r3, [pc, #100]	@ (80042ac <HAL_RCC_GetSysClockFreq+0x98>)
 8004246:	613b      	str	r3, [r7, #16]
 8004248:	e027      	b.n	800429a <HAL_RCC_GetSysClockFreq+0x86>
 800424a:	68fb      	ldr	r3, [r7, #12]
 800424c:	0c9b      	lsrs	r3, r3, #18
 800424e:	f003 030f 	and.w	r3, r3, #15
 8004252:	4a17      	ldr	r2, [pc, #92]	@ (80042b0 <HAL_RCC_GetSysClockFreq+0x9c>)
 8004254:	5cd3      	ldrb	r3, [r2, r3]
 8004256:	607b      	str	r3, [r7, #4]
 8004258:	68fb      	ldr	r3, [r7, #12]
 800425a:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800425e:	2b00      	cmp	r3, #0
 8004260:	d010      	beq.n	8004284 <HAL_RCC_GetSysClockFreq+0x70>
 8004262:	4b11      	ldr	r3, [pc, #68]	@ (80042a8 <HAL_RCC_GetSysClockFreq+0x94>)
 8004264:	685b      	ldr	r3, [r3, #4]
 8004266:	0c5b      	lsrs	r3, r3, #17
 8004268:	f003 0301 	and.w	r3, r3, #1
 800426c:	4a11      	ldr	r2, [pc, #68]	@ (80042b4 <HAL_RCC_GetSysClockFreq+0xa0>)
 800426e:	5cd3      	ldrb	r3, [r2, r3]
 8004270:	60bb      	str	r3, [r7, #8]
 8004272:	687b      	ldr	r3, [r7, #4]
 8004274:	4a0d      	ldr	r2, [pc, #52]	@ (80042ac <HAL_RCC_GetSysClockFreq+0x98>)
 8004276:	fb03 f202 	mul.w	r2, r3, r2
 800427a:	68bb      	ldr	r3, [r7, #8]
 800427c:	fbb2 f3f3 	udiv	r3, r2, r3
 8004280:	617b      	str	r3, [r7, #20]
 8004282:	e004      	b.n	800428e <HAL_RCC_GetSysClockFreq+0x7a>
 8004284:	687b      	ldr	r3, [r7, #4]
 8004286:	4a0c      	ldr	r2, [pc, #48]	@ (80042b8 <HAL_RCC_GetSysClockFreq+0xa4>)
 8004288:	fb02 f303 	mul.w	r3, r2, r3
 800428c:	617b      	str	r3, [r7, #20]
 800428e:	697b      	ldr	r3, [r7, #20]
 8004290:	613b      	str	r3, [r7, #16]
 8004292:	e002      	b.n	800429a <HAL_RCC_GetSysClockFreq+0x86>
 8004294:	4b09      	ldr	r3, [pc, #36]	@ (80042bc <HAL_RCC_GetSysClockFreq+0xa8>)
 8004296:	613b      	str	r3, [r7, #16]
 8004298:	bf00      	nop
 800429a:	693b      	ldr	r3, [r7, #16]
 800429c:	4618      	mov	r0, r3
 800429e:	371c      	adds	r7, #28
 80042a0:	46bd      	mov	sp, r7
 80042a2:	bc80      	pop	{r7}
 80042a4:	4770      	bx	lr
 80042a6:	bf00      	nop
 80042a8:	40021000 	.word	0x40021000
 80042ac:	00f42400 	.word	0x00f42400
 80042b0:	080082e8 	.word	0x080082e8
 80042b4:	080082f8 	.word	0x080082f8
 80042b8:	003d0900 	.word	0x003d0900
 80042bc:	007a1200 	.word	0x007a1200

080042c0 <HAL_RCC_GetHCLKFreq>:
 80042c0:	b480      	push	{r7}
 80042c2:	af00      	add	r7, sp, #0
 80042c4:	4b02      	ldr	r3, [pc, #8]	@ (80042d0 <HAL_RCC_GetHCLKFreq+0x10>)
 80042c6:	681b      	ldr	r3, [r3, #0]
 80042c8:	4618      	mov	r0, r3
 80042ca:	46bd      	mov	sp, r7
 80042cc:	bc80      	pop	{r7}
 80042ce:	4770      	bx	lr
 80042d0:	20000000 	.word	0x20000000

080042d4 <HAL_RCC_GetPCLK1Freq>:
 80042d4:	b580      	push	{r7, lr}
 80042d6:	af00      	add	r7, sp, #0
 80042d8:	f7ff fff2 	bl	80042c0 <HAL_RCC_GetHCLKFreq>
 80042dc:	4602      	mov	r2, r0
 80042de:	4b05      	ldr	r3, [pc, #20]	@ (80042f4 <HAL_RCC_GetPCLK1Freq+0x20>)
 80042e0:	685b      	ldr	r3, [r3, #4]
 80042e2:	0a1b      	lsrs	r3, r3, #8
 80042e4:	f003 0307 	and.w	r3, r3, #7
 80042e8:	4903      	ldr	r1, [pc, #12]	@ (80042f8 <HAL_RCC_GetPCLK1Freq+0x24>)
 80042ea:	5ccb      	ldrb	r3, [r1, r3]
 80042ec:	fa22 f303 	lsr.w	r3, r2, r3
 80042f0:	4618      	mov	r0, r3
 80042f2:	bd80      	pop	{r7, pc}
 80042f4:	40021000 	.word	0x40021000
 80042f8:	080082d0 	.word	0x080082d0

080042fc <HAL_RCC_GetPCLK2Freq>:
 80042fc:	b580      	push	{r7, lr}
 80042fe:	af00      	add	r7, sp, #0
 8004300:	f7ff ffde 	bl	80042c0 <HAL_RCC_GetHCLKFreq>
 8004304:	4602      	mov	r2, r0
 8004306:	4b05      	ldr	r3, [pc, #20]	@ (800431c <HAL_RCC_GetPCLK2Freq+0x20>)
 8004308:	685b      	ldr	r3, [r3, #4]
 800430a:	0adb      	lsrs	r3, r3, #11
 800430c:	f003 0307 	and.w	r3, r3, #7
 8004310:	4903      	ldr	r1, [pc, #12]	@ (8004320 <HAL_RCC_GetPCLK2Freq+0x24>)
 8004312:	5ccb      	ldrb	r3, [r1, r3]
 8004314:	fa22 f303 	lsr.w	r3, r2, r3
 8004318:	4618      	mov	r0, r3
 800431a:	bd80      	pop	{r7, pc}
 800431c:	40021000 	.word	0x40021000
 8004320:	080082d0 	.word	0x080082d0

08004324 <RCC_Delay>:
 8004324:	b480      	push	{r7}
 8004326:	b085      	sub	sp, #20
 8004328:	af00      	add	r7, sp, #0
 800432a:	6078      	str	r0, [r7, #4]
 800432c:	4b0a      	ldr	r3, [pc, #40]	@ (8004358 <RCC_Delay+0x34>)
 800432e:	681b      	ldr	r3, [r3, #0]
 8004330:	4a0a      	ldr	r2, [pc, #40]	@ (800435c <RCC_Delay+0x38>)
 8004332:	fba2 2303 	umull	r2, r3, r2, r3
 8004336:	0a5b      	lsrs	r3, r3, #9
 8004338:	687a      	ldr	r2, [r7, #4]
 800433a:	fb02 f303 	mul.w	r3, r2, r3
 800433e:	60fb      	str	r3, [r7, #12]
 8004340:	bf00      	nop
 8004342:	68fb      	ldr	r3, [r7, #12]
 8004344:	1e5a      	subs	r2, r3, #1
 8004346:	60fa      	str	r2, [r7, #12]
 8004348:	2b00      	cmp	r3, #0
 800434a:	d1f9      	bne.n	8004340 <RCC_Delay+0x1c>
 800434c:	bf00      	nop
 800434e:	bf00      	nop
 8004350:	3714      	adds	r7, #20
 8004352:	46bd      	mov	sp, r7
 8004354:	bc80      	pop	{r7}
 8004356:	4770      	bx	lr
 8004358:	20000000 	.word	0x20000000
 800435c:	10624dd3 	.word	0x10624dd3

08004360 <HAL_RCCEx_PeriphCLKConfig>:
 8004360:	b580      	push	{r7, lr}
 8004362:	b086      	sub	sp, #24
 8004364:	af00      	add	r7, sp, #0
 8004366:	6078      	str	r0, [r7, #4]
 8004368:	2300      	movs	r3, #0
 800436a:	613b      	str	r3, [r7, #16]
 800436c:	2300      	movs	r3, #0
 800436e:	60fb      	str	r3, [r7, #12]
 8004370:	687b      	ldr	r3, [r7, #4]
 8004372:	681b      	ldr	r3, [r3, #0]
 8004374:	f003 0301 	and.w	r3, r3, #1
 8004378:	2b00      	cmp	r3, #0
 800437a:	d07d      	beq.n	8004478 <HAL_RCCEx_PeriphCLKConfig+0x118>
 800437c:	2300      	movs	r3, #0
 800437e:	75fb      	strb	r3, [r7, #23]
 8004380:	4b4f      	ldr	r3, [pc, #316]	@ (80044c0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004382:	69db      	ldr	r3, [r3, #28]
 8004384:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004388:	2b00      	cmp	r3, #0
 800438a:	d10d      	bne.n	80043a8 <HAL_RCCEx_PeriphCLKConfig+0x48>
 800438c:	4b4c      	ldr	r3, [pc, #304]	@ (80044c0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800438e:	69db      	ldr	r3, [r3, #28]
 8004390:	4a4b      	ldr	r2, [pc, #300]	@ (80044c0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004392:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8004396:	61d3      	str	r3, [r2, #28]
 8004398:	4b49      	ldr	r3, [pc, #292]	@ (80044c0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800439a:	69db      	ldr	r3, [r3, #28]
 800439c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80043a0:	60bb      	str	r3, [r7, #8]
 80043a2:	68bb      	ldr	r3, [r7, #8]
 80043a4:	2301      	movs	r3, #1
 80043a6:	75fb      	strb	r3, [r7, #23]
 80043a8:	4b46      	ldr	r3, [pc, #280]	@ (80044c4 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 80043aa:	681b      	ldr	r3, [r3, #0]
 80043ac:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80043b0:	2b00      	cmp	r3, #0
 80043b2:	d118      	bne.n	80043e6 <HAL_RCCEx_PeriphCLKConfig+0x86>
 80043b4:	4b43      	ldr	r3, [pc, #268]	@ (80044c4 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 80043b6:	681b      	ldr	r3, [r3, #0]
 80043b8:	4a42      	ldr	r2, [pc, #264]	@ (80044c4 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 80043ba:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80043be:	6013      	str	r3, [r2, #0]
 80043c0:	f7fe fc04 	bl	8002bcc <HAL_GetTick>
 80043c4:	6138      	str	r0, [r7, #16]
 80043c6:	e008      	b.n	80043da <HAL_RCCEx_PeriphCLKConfig+0x7a>
 80043c8:	f7fe fc00 	bl	8002bcc <HAL_GetTick>
 80043cc:	4602      	mov	r2, r0
 80043ce:	693b      	ldr	r3, [r7, #16]
 80043d0:	1ad3      	subs	r3, r2, r3
 80043d2:	2b64      	cmp	r3, #100	@ 0x64
 80043d4:	d901      	bls.n	80043da <HAL_RCCEx_PeriphCLKConfig+0x7a>
 80043d6:	2303      	movs	r3, #3
 80043d8:	e06d      	b.n	80044b6 <HAL_RCCEx_PeriphCLKConfig+0x156>
 80043da:	4b3a      	ldr	r3, [pc, #232]	@ (80044c4 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 80043dc:	681b      	ldr	r3, [r3, #0]
 80043de:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80043e2:	2b00      	cmp	r3, #0
 80043e4:	d0f0      	beq.n	80043c8 <HAL_RCCEx_PeriphCLKConfig+0x68>
 80043e6:	4b36      	ldr	r3, [pc, #216]	@ (80044c0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80043e8:	6a1b      	ldr	r3, [r3, #32]
 80043ea:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80043ee:	60fb      	str	r3, [r7, #12]
 80043f0:	68fb      	ldr	r3, [r7, #12]
 80043f2:	2b00      	cmp	r3, #0
 80043f4:	d02e      	beq.n	8004454 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 80043f6:	687b      	ldr	r3, [r7, #4]
 80043f8:	685b      	ldr	r3, [r3, #4]
 80043fa:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80043fe:	68fa      	ldr	r2, [r7, #12]
 8004400:	429a      	cmp	r2, r3
 8004402:	d027      	beq.n	8004454 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8004404:	4b2e      	ldr	r3, [pc, #184]	@ (80044c0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004406:	6a1b      	ldr	r3, [r3, #32]
 8004408:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800440c:	60fb      	str	r3, [r7, #12]
 800440e:	4b2e      	ldr	r3, [pc, #184]	@ (80044c8 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 8004410:	2201      	movs	r2, #1
 8004412:	601a      	str	r2, [r3, #0]
 8004414:	4b2c      	ldr	r3, [pc, #176]	@ (80044c8 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 8004416:	2200      	movs	r2, #0
 8004418:	601a      	str	r2, [r3, #0]
 800441a:	4a29      	ldr	r2, [pc, #164]	@ (80044c0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800441c:	68fb      	ldr	r3, [r7, #12]
 800441e:	6213      	str	r3, [r2, #32]
 8004420:	68fb      	ldr	r3, [r7, #12]
 8004422:	f003 0301 	and.w	r3, r3, #1
 8004426:	2b00      	cmp	r3, #0
 8004428:	d014      	beq.n	8004454 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 800442a:	f7fe fbcf 	bl	8002bcc <HAL_GetTick>
 800442e:	6138      	str	r0, [r7, #16]
 8004430:	e00a      	b.n	8004448 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 8004432:	f7fe fbcb 	bl	8002bcc <HAL_GetTick>
 8004436:	4602      	mov	r2, r0
 8004438:	693b      	ldr	r3, [r7, #16]
 800443a:	1ad3      	subs	r3, r2, r3
 800443c:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004440:	4293      	cmp	r3, r2
 8004442:	d901      	bls.n	8004448 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 8004444:	2303      	movs	r3, #3
 8004446:	e036      	b.n	80044b6 <HAL_RCCEx_PeriphCLKConfig+0x156>
 8004448:	4b1d      	ldr	r3, [pc, #116]	@ (80044c0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800444a:	6a1b      	ldr	r3, [r3, #32]
 800444c:	f003 0302 	and.w	r3, r3, #2
 8004450:	2b00      	cmp	r3, #0
 8004452:	d0ee      	beq.n	8004432 <HAL_RCCEx_PeriphCLKConfig+0xd2>
 8004454:	4b1a      	ldr	r3, [pc, #104]	@ (80044c0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004456:	6a1b      	ldr	r3, [r3, #32]
 8004458:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 800445c:	687b      	ldr	r3, [r7, #4]
 800445e:	685b      	ldr	r3, [r3, #4]
 8004460:	4917      	ldr	r1, [pc, #92]	@ (80044c0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004462:	4313      	orrs	r3, r2
 8004464:	620b      	str	r3, [r1, #32]
 8004466:	7dfb      	ldrb	r3, [r7, #23]
 8004468:	2b01      	cmp	r3, #1
 800446a:	d105      	bne.n	8004478 <HAL_RCCEx_PeriphCLKConfig+0x118>
 800446c:	4b14      	ldr	r3, [pc, #80]	@ (80044c0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800446e:	69db      	ldr	r3, [r3, #28]
 8004470:	4a13      	ldr	r2, [pc, #76]	@ (80044c0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004472:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8004476:	61d3      	str	r3, [r2, #28]
 8004478:	687b      	ldr	r3, [r7, #4]
 800447a:	681b      	ldr	r3, [r3, #0]
 800447c:	f003 0302 	and.w	r3, r3, #2
 8004480:	2b00      	cmp	r3, #0
 8004482:	d008      	beq.n	8004496 <HAL_RCCEx_PeriphCLKConfig+0x136>
 8004484:	4b0e      	ldr	r3, [pc, #56]	@ (80044c0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004486:	685b      	ldr	r3, [r3, #4]
 8004488:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 800448c:	687b      	ldr	r3, [r7, #4]
 800448e:	689b      	ldr	r3, [r3, #8]
 8004490:	490b      	ldr	r1, [pc, #44]	@ (80044c0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004492:	4313      	orrs	r3, r2
 8004494:	604b      	str	r3, [r1, #4]
 8004496:	687b      	ldr	r3, [r7, #4]
 8004498:	681b      	ldr	r3, [r3, #0]
 800449a:	f003 0310 	and.w	r3, r3, #16
 800449e:	2b00      	cmp	r3, #0
 80044a0:	d008      	beq.n	80044b4 <HAL_RCCEx_PeriphCLKConfig+0x154>
 80044a2:	4b07      	ldr	r3, [pc, #28]	@ (80044c0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80044a4:	685b      	ldr	r3, [r3, #4]
 80044a6:	f423 0280 	bic.w	r2, r3, #4194304	@ 0x400000
 80044aa:	687b      	ldr	r3, [r7, #4]
 80044ac:	68db      	ldr	r3, [r3, #12]
 80044ae:	4904      	ldr	r1, [pc, #16]	@ (80044c0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80044b0:	4313      	orrs	r3, r2
 80044b2:	604b      	str	r3, [r1, #4]
 80044b4:	2300      	movs	r3, #0
 80044b6:	4618      	mov	r0, r3
 80044b8:	3718      	adds	r7, #24
 80044ba:	46bd      	mov	sp, r7
 80044bc:	bd80      	pop	{r7, pc}
 80044be:	bf00      	nop
 80044c0:	40021000 	.word	0x40021000
 80044c4:	40007000 	.word	0x40007000
 80044c8:	42420440 	.word	0x42420440

080044cc <HAL_RCCEx_GetPeriphCLKFreq>:
 80044cc:	b580      	push	{r7, lr}
 80044ce:	b088      	sub	sp, #32
 80044d0:	af00      	add	r7, sp, #0
 80044d2:	6078      	str	r0, [r7, #4]
 80044d4:	2300      	movs	r3, #0
 80044d6:	617b      	str	r3, [r7, #20]
 80044d8:	2300      	movs	r3, #0
 80044da:	61fb      	str	r3, [r7, #28]
 80044dc:	2300      	movs	r3, #0
 80044de:	613b      	str	r3, [r7, #16]
 80044e0:	2300      	movs	r3, #0
 80044e2:	60fb      	str	r3, [r7, #12]
 80044e4:	2300      	movs	r3, #0
 80044e6:	61bb      	str	r3, [r7, #24]
 80044e8:	687b      	ldr	r3, [r7, #4]
 80044ea:	2b10      	cmp	r3, #16
 80044ec:	d00a      	beq.n	8004504 <HAL_RCCEx_GetPeriphCLKFreq+0x38>
 80044ee:	687b      	ldr	r3, [r7, #4]
 80044f0:	2b10      	cmp	r3, #16
 80044f2:	f200 8089 	bhi.w	8004608 <HAL_RCCEx_GetPeriphCLKFreq+0x13c>
 80044f6:	687b      	ldr	r3, [r7, #4]
 80044f8:	2b01      	cmp	r3, #1
 80044fa:	d045      	beq.n	8004588 <HAL_RCCEx_GetPeriphCLKFreq+0xbc>
 80044fc:	687b      	ldr	r3, [r7, #4]
 80044fe:	2b02      	cmp	r3, #2
 8004500:	d074      	beq.n	80045ec <HAL_RCCEx_GetPeriphCLKFreq+0x120>
 8004502:	e081      	b.n	8004608 <HAL_RCCEx_GetPeriphCLKFreq+0x13c>
 8004504:	4b45      	ldr	r3, [pc, #276]	@ (800461c <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 8004506:	685b      	ldr	r3, [r3, #4]
 8004508:	60fb      	str	r3, [r7, #12]
 800450a:	4b44      	ldr	r3, [pc, #272]	@ (800461c <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 800450c:	681b      	ldr	r3, [r3, #0]
 800450e:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8004512:	2b00      	cmp	r3, #0
 8004514:	d07a      	beq.n	800460c <HAL_RCCEx_GetPeriphCLKFreq+0x140>
 8004516:	68fb      	ldr	r3, [r7, #12]
 8004518:	0c9b      	lsrs	r3, r3, #18
 800451a:	f003 030f 	and.w	r3, r3, #15
 800451e:	4a40      	ldr	r2, [pc, #256]	@ (8004620 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8004520:	5cd3      	ldrb	r3, [r2, r3]
 8004522:	613b      	str	r3, [r7, #16]
 8004524:	68fb      	ldr	r3, [r7, #12]
 8004526:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800452a:	2b00      	cmp	r3, #0
 800452c:	d015      	beq.n	800455a <HAL_RCCEx_GetPeriphCLKFreq+0x8e>
 800452e:	4b3b      	ldr	r3, [pc, #236]	@ (800461c <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 8004530:	685b      	ldr	r3, [r3, #4]
 8004532:	0c5b      	lsrs	r3, r3, #17
 8004534:	f003 0301 	and.w	r3, r3, #1
 8004538:	4a3a      	ldr	r2, [pc, #232]	@ (8004624 <HAL_RCCEx_GetPeriphCLKFreq+0x158>)
 800453a:	5cd3      	ldrb	r3, [r2, r3]
 800453c:	617b      	str	r3, [r7, #20]
 800453e:	68fb      	ldr	r3, [r7, #12]
 8004540:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004544:	2b00      	cmp	r3, #0
 8004546:	d00d      	beq.n	8004564 <HAL_RCCEx_GetPeriphCLKFreq+0x98>
 8004548:	4a37      	ldr	r2, [pc, #220]	@ (8004628 <HAL_RCCEx_GetPeriphCLKFreq+0x15c>)
 800454a:	697b      	ldr	r3, [r7, #20]
 800454c:	fbb2 f2f3 	udiv	r2, r2, r3
 8004550:	693b      	ldr	r3, [r7, #16]
 8004552:	fb02 f303 	mul.w	r3, r2, r3
 8004556:	61fb      	str	r3, [r7, #28]
 8004558:	e004      	b.n	8004564 <HAL_RCCEx_GetPeriphCLKFreq+0x98>
 800455a:	693b      	ldr	r3, [r7, #16]
 800455c:	4a33      	ldr	r2, [pc, #204]	@ (800462c <HAL_RCCEx_GetPeriphCLKFreq+0x160>)
 800455e:	fb02 f303 	mul.w	r3, r2, r3
 8004562:	61fb      	str	r3, [r7, #28]
 8004564:	4b2d      	ldr	r3, [pc, #180]	@ (800461c <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 8004566:	685b      	ldr	r3, [r3, #4]
 8004568:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800456c:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8004570:	d102      	bne.n	8004578 <HAL_RCCEx_GetPeriphCLKFreq+0xac>
 8004572:	69fb      	ldr	r3, [r7, #28]
 8004574:	61bb      	str	r3, [r7, #24]
 8004576:	e049      	b.n	800460c <HAL_RCCEx_GetPeriphCLKFreq+0x140>
 8004578:	69fb      	ldr	r3, [r7, #28]
 800457a:	005b      	lsls	r3, r3, #1
 800457c:	4a2c      	ldr	r2, [pc, #176]	@ (8004630 <HAL_RCCEx_GetPeriphCLKFreq+0x164>)
 800457e:	fba2 2303 	umull	r2, r3, r2, r3
 8004582:	085b      	lsrs	r3, r3, #1
 8004584:	61bb      	str	r3, [r7, #24]
 8004586:	e041      	b.n	800460c <HAL_RCCEx_GetPeriphCLKFreq+0x140>
 8004588:	4b24      	ldr	r3, [pc, #144]	@ (800461c <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 800458a:	6a1b      	ldr	r3, [r3, #32]
 800458c:	60fb      	str	r3, [r7, #12]
 800458e:	68fb      	ldr	r3, [r7, #12]
 8004590:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8004594:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004598:	d108      	bne.n	80045ac <HAL_RCCEx_GetPeriphCLKFreq+0xe0>
 800459a:	68fb      	ldr	r3, [r7, #12]
 800459c:	f003 0302 	and.w	r3, r3, #2
 80045a0:	2b00      	cmp	r3, #0
 80045a2:	d003      	beq.n	80045ac <HAL_RCCEx_GetPeriphCLKFreq+0xe0>
 80045a4:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80045a8:	61bb      	str	r3, [r7, #24]
 80045aa:	e01e      	b.n	80045ea <HAL_RCCEx_GetPeriphCLKFreq+0x11e>
 80045ac:	68fb      	ldr	r3, [r7, #12]
 80045ae:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80045b2:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80045b6:	d109      	bne.n	80045cc <HAL_RCCEx_GetPeriphCLKFreq+0x100>
 80045b8:	4b18      	ldr	r3, [pc, #96]	@ (800461c <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 80045ba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80045bc:	f003 0302 	and.w	r3, r3, #2
 80045c0:	2b00      	cmp	r3, #0
 80045c2:	d003      	beq.n	80045cc <HAL_RCCEx_GetPeriphCLKFreq+0x100>
 80045c4:	f649 4340 	movw	r3, #40000	@ 0x9c40
 80045c8:	61bb      	str	r3, [r7, #24]
 80045ca:	e00e      	b.n	80045ea <HAL_RCCEx_GetPeriphCLKFreq+0x11e>
 80045cc:	68fb      	ldr	r3, [r7, #12]
 80045ce:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80045d2:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80045d6:	d11b      	bne.n	8004610 <HAL_RCCEx_GetPeriphCLKFreq+0x144>
 80045d8:	4b10      	ldr	r3, [pc, #64]	@ (800461c <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 80045da:	681b      	ldr	r3, [r3, #0]
 80045dc:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80045e0:	2b00      	cmp	r3, #0
 80045e2:	d015      	beq.n	8004610 <HAL_RCCEx_GetPeriphCLKFreq+0x144>
 80045e4:	4b13      	ldr	r3, [pc, #76]	@ (8004634 <HAL_RCCEx_GetPeriphCLKFreq+0x168>)
 80045e6:	61bb      	str	r3, [r7, #24]
 80045e8:	e012      	b.n	8004610 <HAL_RCCEx_GetPeriphCLKFreq+0x144>
 80045ea:	e011      	b.n	8004610 <HAL_RCCEx_GetPeriphCLKFreq+0x144>
 80045ec:	f7ff fe86 	bl	80042fc <HAL_RCC_GetPCLK2Freq>
 80045f0:	4602      	mov	r2, r0
 80045f2:	4b0a      	ldr	r3, [pc, #40]	@ (800461c <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 80045f4:	685b      	ldr	r3, [r3, #4]
 80045f6:	0b9b      	lsrs	r3, r3, #14
 80045f8:	f003 0303 	and.w	r3, r3, #3
 80045fc:	3301      	adds	r3, #1
 80045fe:	005b      	lsls	r3, r3, #1
 8004600:	fbb2 f3f3 	udiv	r3, r2, r3
 8004604:	61bb      	str	r3, [r7, #24]
 8004606:	e004      	b.n	8004612 <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 8004608:	bf00      	nop
 800460a:	e002      	b.n	8004612 <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 800460c:	bf00      	nop
 800460e:	e000      	b.n	8004612 <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 8004610:	bf00      	nop
 8004612:	69bb      	ldr	r3, [r7, #24]
 8004614:	4618      	mov	r0, r3
 8004616:	3720      	adds	r7, #32
 8004618:	46bd      	mov	sp, r7
 800461a:	bd80      	pop	{r7, pc}
 800461c:	40021000 	.word	0x40021000
 8004620:	080082fc 	.word	0x080082fc
 8004624:	0800830c 	.word	0x0800830c
 8004628:	00f42400 	.word	0x00f42400
 800462c:	003d0900 	.word	0x003d0900
 8004630:	aaaaaaab 	.word	0xaaaaaaab
 8004634:	0001e848 	.word	0x0001e848

08004638 <HAL_TIM_Base_Init>:
 8004638:	b580      	push	{r7, lr}
 800463a:	b082      	sub	sp, #8
 800463c:	af00      	add	r7, sp, #0
 800463e:	6078      	str	r0, [r7, #4]
 8004640:	687b      	ldr	r3, [r7, #4]
 8004642:	2b00      	cmp	r3, #0
 8004644:	d101      	bne.n	800464a <HAL_TIM_Base_Init+0x12>
 8004646:	2301      	movs	r3, #1
 8004648:	e041      	b.n	80046ce <HAL_TIM_Base_Init+0x96>
 800464a:	687b      	ldr	r3, [r7, #4]
 800464c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004650:	b2db      	uxtb	r3, r3
 8004652:	2b00      	cmp	r3, #0
 8004654:	d106      	bne.n	8004664 <HAL_TIM_Base_Init+0x2c>
 8004656:	687b      	ldr	r3, [r7, #4]
 8004658:	2200      	movs	r2, #0
 800465a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800465e:	6878      	ldr	r0, [r7, #4]
 8004660:	f7fe f8ea 	bl	8002838 <HAL_TIM_Base_MspInit>
 8004664:	687b      	ldr	r3, [r7, #4]
 8004666:	2202      	movs	r2, #2
 8004668:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800466c:	687b      	ldr	r3, [r7, #4]
 800466e:	681a      	ldr	r2, [r3, #0]
 8004670:	687b      	ldr	r3, [r7, #4]
 8004672:	3304      	adds	r3, #4
 8004674:	4619      	mov	r1, r3
 8004676:	4610      	mov	r0, r2
 8004678:	f000 fb16 	bl	8004ca8 <TIM_Base_SetConfig>
 800467c:	687b      	ldr	r3, [r7, #4]
 800467e:	2201      	movs	r2, #1
 8004680:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8004684:	687b      	ldr	r3, [r7, #4]
 8004686:	2201      	movs	r2, #1
 8004688:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800468c:	687b      	ldr	r3, [r7, #4]
 800468e:	2201      	movs	r2, #1
 8004690:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004694:	687b      	ldr	r3, [r7, #4]
 8004696:	2201      	movs	r2, #1
 8004698:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800469c:	687b      	ldr	r3, [r7, #4]
 800469e:	2201      	movs	r2, #1
 80046a0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80046a4:	687b      	ldr	r3, [r7, #4]
 80046a6:	2201      	movs	r2, #1
 80046a8:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80046ac:	687b      	ldr	r3, [r7, #4]
 80046ae:	2201      	movs	r2, #1
 80046b0:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80046b4:	687b      	ldr	r3, [r7, #4]
 80046b6:	2201      	movs	r2, #1
 80046b8:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80046bc:	687b      	ldr	r3, [r7, #4]
 80046be:	2201      	movs	r2, #1
 80046c0:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80046c4:	687b      	ldr	r3, [r7, #4]
 80046c6:	2201      	movs	r2, #1
 80046c8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80046cc:	2300      	movs	r3, #0
 80046ce:	4618      	mov	r0, r3
 80046d0:	3708      	adds	r7, #8
 80046d2:	46bd      	mov	sp, r7
 80046d4:	bd80      	pop	{r7, pc}

080046d6 <HAL_TIM_PWM_Init>:
 80046d6:	b580      	push	{r7, lr}
 80046d8:	b082      	sub	sp, #8
 80046da:	af00      	add	r7, sp, #0
 80046dc:	6078      	str	r0, [r7, #4]
 80046de:	687b      	ldr	r3, [r7, #4]
 80046e0:	2b00      	cmp	r3, #0
 80046e2:	d101      	bne.n	80046e8 <HAL_TIM_PWM_Init+0x12>
 80046e4:	2301      	movs	r3, #1
 80046e6:	e041      	b.n	800476c <HAL_TIM_PWM_Init+0x96>
 80046e8:	687b      	ldr	r3, [r7, #4]
 80046ea:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80046ee:	b2db      	uxtb	r3, r3
 80046f0:	2b00      	cmp	r3, #0
 80046f2:	d106      	bne.n	8004702 <HAL_TIM_PWM_Init+0x2c>
 80046f4:	687b      	ldr	r3, [r7, #4]
 80046f6:	2200      	movs	r2, #0
 80046f8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80046fc:	6878      	ldr	r0, [r7, #4]
 80046fe:	f000 f839 	bl	8004774 <HAL_TIM_PWM_MspInit>
 8004702:	687b      	ldr	r3, [r7, #4]
 8004704:	2202      	movs	r2, #2
 8004706:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800470a:	687b      	ldr	r3, [r7, #4]
 800470c:	681a      	ldr	r2, [r3, #0]
 800470e:	687b      	ldr	r3, [r7, #4]
 8004710:	3304      	adds	r3, #4
 8004712:	4619      	mov	r1, r3
 8004714:	4610      	mov	r0, r2
 8004716:	f000 fac7 	bl	8004ca8 <TIM_Base_SetConfig>
 800471a:	687b      	ldr	r3, [r7, #4]
 800471c:	2201      	movs	r2, #1
 800471e:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8004722:	687b      	ldr	r3, [r7, #4]
 8004724:	2201      	movs	r2, #1
 8004726:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800472a:	687b      	ldr	r3, [r7, #4]
 800472c:	2201      	movs	r2, #1
 800472e:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004732:	687b      	ldr	r3, [r7, #4]
 8004734:	2201      	movs	r2, #1
 8004736:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800473a:	687b      	ldr	r3, [r7, #4]
 800473c:	2201      	movs	r2, #1
 800473e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004742:	687b      	ldr	r3, [r7, #4]
 8004744:	2201      	movs	r2, #1
 8004746:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800474a:	687b      	ldr	r3, [r7, #4]
 800474c:	2201      	movs	r2, #1
 800474e:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8004752:	687b      	ldr	r3, [r7, #4]
 8004754:	2201      	movs	r2, #1
 8004756:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800475a:	687b      	ldr	r3, [r7, #4]
 800475c:	2201      	movs	r2, #1
 800475e:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8004762:	687b      	ldr	r3, [r7, #4]
 8004764:	2201      	movs	r2, #1
 8004766:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800476a:	2300      	movs	r3, #0
 800476c:	4618      	mov	r0, r3
 800476e:	3708      	adds	r7, #8
 8004770:	46bd      	mov	sp, r7
 8004772:	bd80      	pop	{r7, pc}

08004774 <HAL_TIM_PWM_MspInit>:
 8004774:	b480      	push	{r7}
 8004776:	b083      	sub	sp, #12
 8004778:	af00      	add	r7, sp, #0
 800477a:	6078      	str	r0, [r7, #4]
 800477c:	bf00      	nop
 800477e:	370c      	adds	r7, #12
 8004780:	46bd      	mov	sp, r7
 8004782:	bc80      	pop	{r7}
 8004784:	4770      	bx	lr
	...

08004788 <HAL_TIM_PWM_Start>:
 8004788:	b580      	push	{r7, lr}
 800478a:	b084      	sub	sp, #16
 800478c:	af00      	add	r7, sp, #0
 800478e:	6078      	str	r0, [r7, #4]
 8004790:	6039      	str	r1, [r7, #0]
 8004792:	683b      	ldr	r3, [r7, #0]
 8004794:	2b00      	cmp	r3, #0
 8004796:	d109      	bne.n	80047ac <HAL_TIM_PWM_Start+0x24>
 8004798:	687b      	ldr	r3, [r7, #4]
 800479a:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800479e:	b2db      	uxtb	r3, r3
 80047a0:	2b01      	cmp	r3, #1
 80047a2:	bf14      	ite	ne
 80047a4:	2301      	movne	r3, #1
 80047a6:	2300      	moveq	r3, #0
 80047a8:	b2db      	uxtb	r3, r3
 80047aa:	e022      	b.n	80047f2 <HAL_TIM_PWM_Start+0x6a>
 80047ac:	683b      	ldr	r3, [r7, #0]
 80047ae:	2b04      	cmp	r3, #4
 80047b0:	d109      	bne.n	80047c6 <HAL_TIM_PWM_Start+0x3e>
 80047b2:	687b      	ldr	r3, [r7, #4]
 80047b4:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 80047b8:	b2db      	uxtb	r3, r3
 80047ba:	2b01      	cmp	r3, #1
 80047bc:	bf14      	ite	ne
 80047be:	2301      	movne	r3, #1
 80047c0:	2300      	moveq	r3, #0
 80047c2:	b2db      	uxtb	r3, r3
 80047c4:	e015      	b.n	80047f2 <HAL_TIM_PWM_Start+0x6a>
 80047c6:	683b      	ldr	r3, [r7, #0]
 80047c8:	2b08      	cmp	r3, #8
 80047ca:	d109      	bne.n	80047e0 <HAL_TIM_PWM_Start+0x58>
 80047cc:	687b      	ldr	r3, [r7, #4]
 80047ce:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80047d2:	b2db      	uxtb	r3, r3
 80047d4:	2b01      	cmp	r3, #1
 80047d6:	bf14      	ite	ne
 80047d8:	2301      	movne	r3, #1
 80047da:	2300      	moveq	r3, #0
 80047dc:	b2db      	uxtb	r3, r3
 80047de:	e008      	b.n	80047f2 <HAL_TIM_PWM_Start+0x6a>
 80047e0:	687b      	ldr	r3, [r7, #4]
 80047e2:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80047e6:	b2db      	uxtb	r3, r3
 80047e8:	2b01      	cmp	r3, #1
 80047ea:	bf14      	ite	ne
 80047ec:	2301      	movne	r3, #1
 80047ee:	2300      	moveq	r3, #0
 80047f0:	b2db      	uxtb	r3, r3
 80047f2:	2b00      	cmp	r3, #0
 80047f4:	d001      	beq.n	80047fa <HAL_TIM_PWM_Start+0x72>
 80047f6:	2301      	movs	r3, #1
 80047f8:	e05e      	b.n	80048b8 <HAL_TIM_PWM_Start+0x130>
 80047fa:	683b      	ldr	r3, [r7, #0]
 80047fc:	2b00      	cmp	r3, #0
 80047fe:	d104      	bne.n	800480a <HAL_TIM_PWM_Start+0x82>
 8004800:	687b      	ldr	r3, [r7, #4]
 8004802:	2202      	movs	r2, #2
 8004804:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004808:	e013      	b.n	8004832 <HAL_TIM_PWM_Start+0xaa>
 800480a:	683b      	ldr	r3, [r7, #0]
 800480c:	2b04      	cmp	r3, #4
 800480e:	d104      	bne.n	800481a <HAL_TIM_PWM_Start+0x92>
 8004810:	687b      	ldr	r3, [r7, #4]
 8004812:	2202      	movs	r2, #2
 8004814:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004818:	e00b      	b.n	8004832 <HAL_TIM_PWM_Start+0xaa>
 800481a:	683b      	ldr	r3, [r7, #0]
 800481c:	2b08      	cmp	r3, #8
 800481e:	d104      	bne.n	800482a <HAL_TIM_PWM_Start+0xa2>
 8004820:	687b      	ldr	r3, [r7, #4]
 8004822:	2202      	movs	r2, #2
 8004824:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004828:	e003      	b.n	8004832 <HAL_TIM_PWM_Start+0xaa>
 800482a:	687b      	ldr	r3, [r7, #4]
 800482c:	2202      	movs	r2, #2
 800482e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004832:	687b      	ldr	r3, [r7, #4]
 8004834:	681b      	ldr	r3, [r3, #0]
 8004836:	2201      	movs	r2, #1
 8004838:	6839      	ldr	r1, [r7, #0]
 800483a:	4618      	mov	r0, r3
 800483c:	f000 fcb4 	bl	80051a8 <TIM_CCxChannelCmd>
 8004840:	687b      	ldr	r3, [r7, #4]
 8004842:	681b      	ldr	r3, [r3, #0]
 8004844:	4a1e      	ldr	r2, [pc, #120]	@ (80048c0 <HAL_TIM_PWM_Start+0x138>)
 8004846:	4293      	cmp	r3, r2
 8004848:	d107      	bne.n	800485a <HAL_TIM_PWM_Start+0xd2>
 800484a:	687b      	ldr	r3, [r7, #4]
 800484c:	681b      	ldr	r3, [r3, #0]
 800484e:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8004850:	687b      	ldr	r3, [r7, #4]
 8004852:	681b      	ldr	r3, [r3, #0]
 8004854:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8004858:	645a      	str	r2, [r3, #68]	@ 0x44
 800485a:	687b      	ldr	r3, [r7, #4]
 800485c:	681b      	ldr	r3, [r3, #0]
 800485e:	4a18      	ldr	r2, [pc, #96]	@ (80048c0 <HAL_TIM_PWM_Start+0x138>)
 8004860:	4293      	cmp	r3, r2
 8004862:	d00e      	beq.n	8004882 <HAL_TIM_PWM_Start+0xfa>
 8004864:	687b      	ldr	r3, [r7, #4]
 8004866:	681b      	ldr	r3, [r3, #0]
 8004868:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800486c:	d009      	beq.n	8004882 <HAL_TIM_PWM_Start+0xfa>
 800486e:	687b      	ldr	r3, [r7, #4]
 8004870:	681b      	ldr	r3, [r3, #0]
 8004872:	4a14      	ldr	r2, [pc, #80]	@ (80048c4 <HAL_TIM_PWM_Start+0x13c>)
 8004874:	4293      	cmp	r3, r2
 8004876:	d004      	beq.n	8004882 <HAL_TIM_PWM_Start+0xfa>
 8004878:	687b      	ldr	r3, [r7, #4]
 800487a:	681b      	ldr	r3, [r3, #0]
 800487c:	4a12      	ldr	r2, [pc, #72]	@ (80048c8 <HAL_TIM_PWM_Start+0x140>)
 800487e:	4293      	cmp	r3, r2
 8004880:	d111      	bne.n	80048a6 <HAL_TIM_PWM_Start+0x11e>
 8004882:	687b      	ldr	r3, [r7, #4]
 8004884:	681b      	ldr	r3, [r3, #0]
 8004886:	689b      	ldr	r3, [r3, #8]
 8004888:	f003 0307 	and.w	r3, r3, #7
 800488c:	60fb      	str	r3, [r7, #12]
 800488e:	68fb      	ldr	r3, [r7, #12]
 8004890:	2b06      	cmp	r3, #6
 8004892:	d010      	beq.n	80048b6 <HAL_TIM_PWM_Start+0x12e>
 8004894:	687b      	ldr	r3, [r7, #4]
 8004896:	681b      	ldr	r3, [r3, #0]
 8004898:	681a      	ldr	r2, [r3, #0]
 800489a:	687b      	ldr	r3, [r7, #4]
 800489c:	681b      	ldr	r3, [r3, #0]
 800489e:	f042 0201 	orr.w	r2, r2, #1
 80048a2:	601a      	str	r2, [r3, #0]
 80048a4:	e007      	b.n	80048b6 <HAL_TIM_PWM_Start+0x12e>
 80048a6:	687b      	ldr	r3, [r7, #4]
 80048a8:	681b      	ldr	r3, [r3, #0]
 80048aa:	681a      	ldr	r2, [r3, #0]
 80048ac:	687b      	ldr	r3, [r7, #4]
 80048ae:	681b      	ldr	r3, [r3, #0]
 80048b0:	f042 0201 	orr.w	r2, r2, #1
 80048b4:	601a      	str	r2, [r3, #0]
 80048b6:	2300      	movs	r3, #0
 80048b8:	4618      	mov	r0, r3
 80048ba:	3710      	adds	r7, #16
 80048bc:	46bd      	mov	sp, r7
 80048be:	bd80      	pop	{r7, pc}
 80048c0:	40012c00 	.word	0x40012c00
 80048c4:	40000400 	.word	0x40000400
 80048c8:	40000800 	.word	0x40000800

080048cc <HAL_TIM_PWM_Stop>:
 80048cc:	b580      	push	{r7, lr}
 80048ce:	b082      	sub	sp, #8
 80048d0:	af00      	add	r7, sp, #0
 80048d2:	6078      	str	r0, [r7, #4]
 80048d4:	6039      	str	r1, [r7, #0]
 80048d6:	687b      	ldr	r3, [r7, #4]
 80048d8:	681b      	ldr	r3, [r3, #0]
 80048da:	2200      	movs	r2, #0
 80048dc:	6839      	ldr	r1, [r7, #0]
 80048de:	4618      	mov	r0, r3
 80048e0:	f000 fc62 	bl	80051a8 <TIM_CCxChannelCmd>
 80048e4:	687b      	ldr	r3, [r7, #4]
 80048e6:	681b      	ldr	r3, [r3, #0]
 80048e8:	4a29      	ldr	r2, [pc, #164]	@ (8004990 <HAL_TIM_PWM_Stop+0xc4>)
 80048ea:	4293      	cmp	r3, r2
 80048ec:	d117      	bne.n	800491e <HAL_TIM_PWM_Stop+0x52>
 80048ee:	687b      	ldr	r3, [r7, #4]
 80048f0:	681b      	ldr	r3, [r3, #0]
 80048f2:	6a1a      	ldr	r2, [r3, #32]
 80048f4:	f241 1311 	movw	r3, #4369	@ 0x1111
 80048f8:	4013      	ands	r3, r2
 80048fa:	2b00      	cmp	r3, #0
 80048fc:	d10f      	bne.n	800491e <HAL_TIM_PWM_Stop+0x52>
 80048fe:	687b      	ldr	r3, [r7, #4]
 8004900:	681b      	ldr	r3, [r3, #0]
 8004902:	6a1a      	ldr	r2, [r3, #32]
 8004904:	f240 4344 	movw	r3, #1092	@ 0x444
 8004908:	4013      	ands	r3, r2
 800490a:	2b00      	cmp	r3, #0
 800490c:	d107      	bne.n	800491e <HAL_TIM_PWM_Stop+0x52>
 800490e:	687b      	ldr	r3, [r7, #4]
 8004910:	681b      	ldr	r3, [r3, #0]
 8004912:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8004914:	687b      	ldr	r3, [r7, #4]
 8004916:	681b      	ldr	r3, [r3, #0]
 8004918:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800491c:	645a      	str	r2, [r3, #68]	@ 0x44
 800491e:	687b      	ldr	r3, [r7, #4]
 8004920:	681b      	ldr	r3, [r3, #0]
 8004922:	6a1a      	ldr	r2, [r3, #32]
 8004924:	f241 1311 	movw	r3, #4369	@ 0x1111
 8004928:	4013      	ands	r3, r2
 800492a:	2b00      	cmp	r3, #0
 800492c:	d10f      	bne.n	800494e <HAL_TIM_PWM_Stop+0x82>
 800492e:	687b      	ldr	r3, [r7, #4]
 8004930:	681b      	ldr	r3, [r3, #0]
 8004932:	6a1a      	ldr	r2, [r3, #32]
 8004934:	f240 4344 	movw	r3, #1092	@ 0x444
 8004938:	4013      	ands	r3, r2
 800493a:	2b00      	cmp	r3, #0
 800493c:	d107      	bne.n	800494e <HAL_TIM_PWM_Stop+0x82>
 800493e:	687b      	ldr	r3, [r7, #4]
 8004940:	681b      	ldr	r3, [r3, #0]
 8004942:	681a      	ldr	r2, [r3, #0]
 8004944:	687b      	ldr	r3, [r7, #4]
 8004946:	681b      	ldr	r3, [r3, #0]
 8004948:	f022 0201 	bic.w	r2, r2, #1
 800494c:	601a      	str	r2, [r3, #0]
 800494e:	683b      	ldr	r3, [r7, #0]
 8004950:	2b00      	cmp	r3, #0
 8004952:	d104      	bne.n	800495e <HAL_TIM_PWM_Stop+0x92>
 8004954:	687b      	ldr	r3, [r7, #4]
 8004956:	2201      	movs	r2, #1
 8004958:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800495c:	e013      	b.n	8004986 <HAL_TIM_PWM_Stop+0xba>
 800495e:	683b      	ldr	r3, [r7, #0]
 8004960:	2b04      	cmp	r3, #4
 8004962:	d104      	bne.n	800496e <HAL_TIM_PWM_Stop+0xa2>
 8004964:	687b      	ldr	r3, [r7, #4]
 8004966:	2201      	movs	r2, #1
 8004968:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800496c:	e00b      	b.n	8004986 <HAL_TIM_PWM_Stop+0xba>
 800496e:	683b      	ldr	r3, [r7, #0]
 8004970:	2b08      	cmp	r3, #8
 8004972:	d104      	bne.n	800497e <HAL_TIM_PWM_Stop+0xb2>
 8004974:	687b      	ldr	r3, [r7, #4]
 8004976:	2201      	movs	r2, #1
 8004978:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800497c:	e003      	b.n	8004986 <HAL_TIM_PWM_Stop+0xba>
 800497e:	687b      	ldr	r3, [r7, #4]
 8004980:	2201      	movs	r2, #1
 8004982:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004986:	2300      	movs	r3, #0
 8004988:	4618      	mov	r0, r3
 800498a:	3708      	adds	r7, #8
 800498c:	46bd      	mov	sp, r7
 800498e:	bd80      	pop	{r7, pc}
 8004990:	40012c00 	.word	0x40012c00

08004994 <HAL_TIM_PWM_ConfigChannel>:
 8004994:	b580      	push	{r7, lr}
 8004996:	b086      	sub	sp, #24
 8004998:	af00      	add	r7, sp, #0
 800499a:	60f8      	str	r0, [r7, #12]
 800499c:	60b9      	str	r1, [r7, #8]
 800499e:	607a      	str	r2, [r7, #4]
 80049a0:	2300      	movs	r3, #0
 80049a2:	75fb      	strb	r3, [r7, #23]
 80049a4:	68fb      	ldr	r3, [r7, #12]
 80049a6:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80049aa:	2b01      	cmp	r3, #1
 80049ac:	d101      	bne.n	80049b2 <HAL_TIM_PWM_ConfigChannel+0x1e>
 80049ae:	2302      	movs	r3, #2
 80049b0:	e0ae      	b.n	8004b10 <HAL_TIM_PWM_ConfigChannel+0x17c>
 80049b2:	68fb      	ldr	r3, [r7, #12]
 80049b4:	2201      	movs	r2, #1
 80049b6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80049ba:	687b      	ldr	r3, [r7, #4]
 80049bc:	2b0c      	cmp	r3, #12
 80049be:	f200 809f 	bhi.w	8004b00 <HAL_TIM_PWM_ConfigChannel+0x16c>
 80049c2:	a201      	add	r2, pc, #4	@ (adr r2, 80049c8 <HAL_TIM_PWM_ConfigChannel+0x34>)
 80049c4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80049c8:	080049fd 	.word	0x080049fd
 80049cc:	08004b01 	.word	0x08004b01
 80049d0:	08004b01 	.word	0x08004b01
 80049d4:	08004b01 	.word	0x08004b01
 80049d8:	08004a3d 	.word	0x08004a3d
 80049dc:	08004b01 	.word	0x08004b01
 80049e0:	08004b01 	.word	0x08004b01
 80049e4:	08004b01 	.word	0x08004b01
 80049e8:	08004a7f 	.word	0x08004a7f
 80049ec:	08004b01 	.word	0x08004b01
 80049f0:	08004b01 	.word	0x08004b01
 80049f4:	08004b01 	.word	0x08004b01
 80049f8:	08004abf 	.word	0x08004abf
 80049fc:	68fb      	ldr	r3, [r7, #12]
 80049fe:	681b      	ldr	r3, [r3, #0]
 8004a00:	68b9      	ldr	r1, [r7, #8]
 8004a02:	4618      	mov	r0, r3
 8004a04:	f000 f9b2 	bl	8004d6c <TIM_OC1_SetConfig>
 8004a08:	68fb      	ldr	r3, [r7, #12]
 8004a0a:	681b      	ldr	r3, [r3, #0]
 8004a0c:	699a      	ldr	r2, [r3, #24]
 8004a0e:	68fb      	ldr	r3, [r7, #12]
 8004a10:	681b      	ldr	r3, [r3, #0]
 8004a12:	f042 0208 	orr.w	r2, r2, #8
 8004a16:	619a      	str	r2, [r3, #24]
 8004a18:	68fb      	ldr	r3, [r7, #12]
 8004a1a:	681b      	ldr	r3, [r3, #0]
 8004a1c:	699a      	ldr	r2, [r3, #24]
 8004a1e:	68fb      	ldr	r3, [r7, #12]
 8004a20:	681b      	ldr	r3, [r3, #0]
 8004a22:	f022 0204 	bic.w	r2, r2, #4
 8004a26:	619a      	str	r2, [r3, #24]
 8004a28:	68fb      	ldr	r3, [r7, #12]
 8004a2a:	681b      	ldr	r3, [r3, #0]
 8004a2c:	6999      	ldr	r1, [r3, #24]
 8004a2e:	68bb      	ldr	r3, [r7, #8]
 8004a30:	691a      	ldr	r2, [r3, #16]
 8004a32:	68fb      	ldr	r3, [r7, #12]
 8004a34:	681b      	ldr	r3, [r3, #0]
 8004a36:	430a      	orrs	r2, r1
 8004a38:	619a      	str	r2, [r3, #24]
 8004a3a:	e064      	b.n	8004b06 <HAL_TIM_PWM_ConfigChannel+0x172>
 8004a3c:	68fb      	ldr	r3, [r7, #12]
 8004a3e:	681b      	ldr	r3, [r3, #0]
 8004a40:	68b9      	ldr	r1, [r7, #8]
 8004a42:	4618      	mov	r0, r3
 8004a44:	f000 f9f8 	bl	8004e38 <TIM_OC2_SetConfig>
 8004a48:	68fb      	ldr	r3, [r7, #12]
 8004a4a:	681b      	ldr	r3, [r3, #0]
 8004a4c:	699a      	ldr	r2, [r3, #24]
 8004a4e:	68fb      	ldr	r3, [r7, #12]
 8004a50:	681b      	ldr	r3, [r3, #0]
 8004a52:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004a56:	619a      	str	r2, [r3, #24]
 8004a58:	68fb      	ldr	r3, [r7, #12]
 8004a5a:	681b      	ldr	r3, [r3, #0]
 8004a5c:	699a      	ldr	r2, [r3, #24]
 8004a5e:	68fb      	ldr	r3, [r7, #12]
 8004a60:	681b      	ldr	r3, [r3, #0]
 8004a62:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004a66:	619a      	str	r2, [r3, #24]
 8004a68:	68fb      	ldr	r3, [r7, #12]
 8004a6a:	681b      	ldr	r3, [r3, #0]
 8004a6c:	6999      	ldr	r1, [r3, #24]
 8004a6e:	68bb      	ldr	r3, [r7, #8]
 8004a70:	691b      	ldr	r3, [r3, #16]
 8004a72:	021a      	lsls	r2, r3, #8
 8004a74:	68fb      	ldr	r3, [r7, #12]
 8004a76:	681b      	ldr	r3, [r3, #0]
 8004a78:	430a      	orrs	r2, r1
 8004a7a:	619a      	str	r2, [r3, #24]
 8004a7c:	e043      	b.n	8004b06 <HAL_TIM_PWM_ConfigChannel+0x172>
 8004a7e:	68fb      	ldr	r3, [r7, #12]
 8004a80:	681b      	ldr	r3, [r3, #0]
 8004a82:	68b9      	ldr	r1, [r7, #8]
 8004a84:	4618      	mov	r0, r3
 8004a86:	f000 fa41 	bl	8004f0c <TIM_OC3_SetConfig>
 8004a8a:	68fb      	ldr	r3, [r7, #12]
 8004a8c:	681b      	ldr	r3, [r3, #0]
 8004a8e:	69da      	ldr	r2, [r3, #28]
 8004a90:	68fb      	ldr	r3, [r7, #12]
 8004a92:	681b      	ldr	r3, [r3, #0]
 8004a94:	f042 0208 	orr.w	r2, r2, #8
 8004a98:	61da      	str	r2, [r3, #28]
 8004a9a:	68fb      	ldr	r3, [r7, #12]
 8004a9c:	681b      	ldr	r3, [r3, #0]
 8004a9e:	69da      	ldr	r2, [r3, #28]
 8004aa0:	68fb      	ldr	r3, [r7, #12]
 8004aa2:	681b      	ldr	r3, [r3, #0]
 8004aa4:	f022 0204 	bic.w	r2, r2, #4
 8004aa8:	61da      	str	r2, [r3, #28]
 8004aaa:	68fb      	ldr	r3, [r7, #12]
 8004aac:	681b      	ldr	r3, [r3, #0]
 8004aae:	69d9      	ldr	r1, [r3, #28]
 8004ab0:	68bb      	ldr	r3, [r7, #8]
 8004ab2:	691a      	ldr	r2, [r3, #16]
 8004ab4:	68fb      	ldr	r3, [r7, #12]
 8004ab6:	681b      	ldr	r3, [r3, #0]
 8004ab8:	430a      	orrs	r2, r1
 8004aba:	61da      	str	r2, [r3, #28]
 8004abc:	e023      	b.n	8004b06 <HAL_TIM_PWM_ConfigChannel+0x172>
 8004abe:	68fb      	ldr	r3, [r7, #12]
 8004ac0:	681b      	ldr	r3, [r3, #0]
 8004ac2:	68b9      	ldr	r1, [r7, #8]
 8004ac4:	4618      	mov	r0, r3
 8004ac6:	f000 fa8b 	bl	8004fe0 <TIM_OC4_SetConfig>
 8004aca:	68fb      	ldr	r3, [r7, #12]
 8004acc:	681b      	ldr	r3, [r3, #0]
 8004ace:	69da      	ldr	r2, [r3, #28]
 8004ad0:	68fb      	ldr	r3, [r7, #12]
 8004ad2:	681b      	ldr	r3, [r3, #0]
 8004ad4:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004ad8:	61da      	str	r2, [r3, #28]
 8004ada:	68fb      	ldr	r3, [r7, #12]
 8004adc:	681b      	ldr	r3, [r3, #0]
 8004ade:	69da      	ldr	r2, [r3, #28]
 8004ae0:	68fb      	ldr	r3, [r7, #12]
 8004ae2:	681b      	ldr	r3, [r3, #0]
 8004ae4:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004ae8:	61da      	str	r2, [r3, #28]
 8004aea:	68fb      	ldr	r3, [r7, #12]
 8004aec:	681b      	ldr	r3, [r3, #0]
 8004aee:	69d9      	ldr	r1, [r3, #28]
 8004af0:	68bb      	ldr	r3, [r7, #8]
 8004af2:	691b      	ldr	r3, [r3, #16]
 8004af4:	021a      	lsls	r2, r3, #8
 8004af6:	68fb      	ldr	r3, [r7, #12]
 8004af8:	681b      	ldr	r3, [r3, #0]
 8004afa:	430a      	orrs	r2, r1
 8004afc:	61da      	str	r2, [r3, #28]
 8004afe:	e002      	b.n	8004b06 <HAL_TIM_PWM_ConfigChannel+0x172>
 8004b00:	2301      	movs	r3, #1
 8004b02:	75fb      	strb	r3, [r7, #23]
 8004b04:	bf00      	nop
 8004b06:	68fb      	ldr	r3, [r7, #12]
 8004b08:	2200      	movs	r2, #0
 8004b0a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004b0e:	7dfb      	ldrb	r3, [r7, #23]
 8004b10:	4618      	mov	r0, r3
 8004b12:	3718      	adds	r7, #24
 8004b14:	46bd      	mov	sp, r7
 8004b16:	bd80      	pop	{r7, pc}

08004b18 <HAL_TIM_ConfigClockSource>:
 8004b18:	b580      	push	{r7, lr}
 8004b1a:	b084      	sub	sp, #16
 8004b1c:	af00      	add	r7, sp, #0
 8004b1e:	6078      	str	r0, [r7, #4]
 8004b20:	6039      	str	r1, [r7, #0]
 8004b22:	2300      	movs	r3, #0
 8004b24:	73fb      	strb	r3, [r7, #15]
 8004b26:	687b      	ldr	r3, [r7, #4]
 8004b28:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004b2c:	2b01      	cmp	r3, #1
 8004b2e:	d101      	bne.n	8004b34 <HAL_TIM_ConfigClockSource+0x1c>
 8004b30:	2302      	movs	r3, #2
 8004b32:	e0b4      	b.n	8004c9e <HAL_TIM_ConfigClockSource+0x186>
 8004b34:	687b      	ldr	r3, [r7, #4]
 8004b36:	2201      	movs	r2, #1
 8004b38:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004b3c:	687b      	ldr	r3, [r7, #4]
 8004b3e:	2202      	movs	r2, #2
 8004b40:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004b44:	687b      	ldr	r3, [r7, #4]
 8004b46:	681b      	ldr	r3, [r3, #0]
 8004b48:	689b      	ldr	r3, [r3, #8]
 8004b4a:	60bb      	str	r3, [r7, #8]
 8004b4c:	68bb      	ldr	r3, [r7, #8]
 8004b4e:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8004b52:	60bb      	str	r3, [r7, #8]
 8004b54:	68bb      	ldr	r3, [r7, #8]
 8004b56:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8004b5a:	60bb      	str	r3, [r7, #8]
 8004b5c:	687b      	ldr	r3, [r7, #4]
 8004b5e:	681b      	ldr	r3, [r3, #0]
 8004b60:	68ba      	ldr	r2, [r7, #8]
 8004b62:	609a      	str	r2, [r3, #8]
 8004b64:	683b      	ldr	r3, [r7, #0]
 8004b66:	681b      	ldr	r3, [r3, #0]
 8004b68:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8004b6c:	d03e      	beq.n	8004bec <HAL_TIM_ConfigClockSource+0xd4>
 8004b6e:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8004b72:	f200 8087 	bhi.w	8004c84 <HAL_TIM_ConfigClockSource+0x16c>
 8004b76:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004b7a:	f000 8086 	beq.w	8004c8a <HAL_TIM_ConfigClockSource+0x172>
 8004b7e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004b82:	d87f      	bhi.n	8004c84 <HAL_TIM_ConfigClockSource+0x16c>
 8004b84:	2b70      	cmp	r3, #112	@ 0x70
 8004b86:	d01a      	beq.n	8004bbe <HAL_TIM_ConfigClockSource+0xa6>
 8004b88:	2b70      	cmp	r3, #112	@ 0x70
 8004b8a:	d87b      	bhi.n	8004c84 <HAL_TIM_ConfigClockSource+0x16c>
 8004b8c:	2b60      	cmp	r3, #96	@ 0x60
 8004b8e:	d050      	beq.n	8004c32 <HAL_TIM_ConfigClockSource+0x11a>
 8004b90:	2b60      	cmp	r3, #96	@ 0x60
 8004b92:	d877      	bhi.n	8004c84 <HAL_TIM_ConfigClockSource+0x16c>
 8004b94:	2b50      	cmp	r3, #80	@ 0x50
 8004b96:	d03c      	beq.n	8004c12 <HAL_TIM_ConfigClockSource+0xfa>
 8004b98:	2b50      	cmp	r3, #80	@ 0x50
 8004b9a:	d873      	bhi.n	8004c84 <HAL_TIM_ConfigClockSource+0x16c>
 8004b9c:	2b40      	cmp	r3, #64	@ 0x40
 8004b9e:	d058      	beq.n	8004c52 <HAL_TIM_ConfigClockSource+0x13a>
 8004ba0:	2b40      	cmp	r3, #64	@ 0x40
 8004ba2:	d86f      	bhi.n	8004c84 <HAL_TIM_ConfigClockSource+0x16c>
 8004ba4:	2b30      	cmp	r3, #48	@ 0x30
 8004ba6:	d064      	beq.n	8004c72 <HAL_TIM_ConfigClockSource+0x15a>
 8004ba8:	2b30      	cmp	r3, #48	@ 0x30
 8004baa:	d86b      	bhi.n	8004c84 <HAL_TIM_ConfigClockSource+0x16c>
 8004bac:	2b20      	cmp	r3, #32
 8004bae:	d060      	beq.n	8004c72 <HAL_TIM_ConfigClockSource+0x15a>
 8004bb0:	2b20      	cmp	r3, #32
 8004bb2:	d867      	bhi.n	8004c84 <HAL_TIM_ConfigClockSource+0x16c>
 8004bb4:	2b00      	cmp	r3, #0
 8004bb6:	d05c      	beq.n	8004c72 <HAL_TIM_ConfigClockSource+0x15a>
 8004bb8:	2b10      	cmp	r3, #16
 8004bba:	d05a      	beq.n	8004c72 <HAL_TIM_ConfigClockSource+0x15a>
 8004bbc:	e062      	b.n	8004c84 <HAL_TIM_ConfigClockSource+0x16c>
 8004bbe:	687b      	ldr	r3, [r7, #4]
 8004bc0:	6818      	ldr	r0, [r3, #0]
 8004bc2:	683b      	ldr	r3, [r7, #0]
 8004bc4:	6899      	ldr	r1, [r3, #8]
 8004bc6:	683b      	ldr	r3, [r7, #0]
 8004bc8:	685a      	ldr	r2, [r3, #4]
 8004bca:	683b      	ldr	r3, [r7, #0]
 8004bcc:	68db      	ldr	r3, [r3, #12]
 8004bce:	f000 facc 	bl	800516a <TIM_ETR_SetConfig>
 8004bd2:	687b      	ldr	r3, [r7, #4]
 8004bd4:	681b      	ldr	r3, [r3, #0]
 8004bd6:	689b      	ldr	r3, [r3, #8]
 8004bd8:	60bb      	str	r3, [r7, #8]
 8004bda:	68bb      	ldr	r3, [r7, #8]
 8004bdc:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8004be0:	60bb      	str	r3, [r7, #8]
 8004be2:	687b      	ldr	r3, [r7, #4]
 8004be4:	681b      	ldr	r3, [r3, #0]
 8004be6:	68ba      	ldr	r2, [r7, #8]
 8004be8:	609a      	str	r2, [r3, #8]
 8004bea:	e04f      	b.n	8004c8c <HAL_TIM_ConfigClockSource+0x174>
 8004bec:	687b      	ldr	r3, [r7, #4]
 8004bee:	6818      	ldr	r0, [r3, #0]
 8004bf0:	683b      	ldr	r3, [r7, #0]
 8004bf2:	6899      	ldr	r1, [r3, #8]
 8004bf4:	683b      	ldr	r3, [r7, #0]
 8004bf6:	685a      	ldr	r2, [r3, #4]
 8004bf8:	683b      	ldr	r3, [r7, #0]
 8004bfa:	68db      	ldr	r3, [r3, #12]
 8004bfc:	f000 fab5 	bl	800516a <TIM_ETR_SetConfig>
 8004c00:	687b      	ldr	r3, [r7, #4]
 8004c02:	681b      	ldr	r3, [r3, #0]
 8004c04:	689a      	ldr	r2, [r3, #8]
 8004c06:	687b      	ldr	r3, [r7, #4]
 8004c08:	681b      	ldr	r3, [r3, #0]
 8004c0a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8004c0e:	609a      	str	r2, [r3, #8]
 8004c10:	e03c      	b.n	8004c8c <HAL_TIM_ConfigClockSource+0x174>
 8004c12:	687b      	ldr	r3, [r7, #4]
 8004c14:	6818      	ldr	r0, [r3, #0]
 8004c16:	683b      	ldr	r3, [r7, #0]
 8004c18:	6859      	ldr	r1, [r3, #4]
 8004c1a:	683b      	ldr	r3, [r7, #0]
 8004c1c:	68db      	ldr	r3, [r3, #12]
 8004c1e:	461a      	mov	r2, r3
 8004c20:	f000 fa2c 	bl	800507c <TIM_TI1_ConfigInputStage>
 8004c24:	687b      	ldr	r3, [r7, #4]
 8004c26:	681b      	ldr	r3, [r3, #0]
 8004c28:	2150      	movs	r1, #80	@ 0x50
 8004c2a:	4618      	mov	r0, r3
 8004c2c:	f000 fa83 	bl	8005136 <TIM_ITRx_SetConfig>
 8004c30:	e02c      	b.n	8004c8c <HAL_TIM_ConfigClockSource+0x174>
 8004c32:	687b      	ldr	r3, [r7, #4]
 8004c34:	6818      	ldr	r0, [r3, #0]
 8004c36:	683b      	ldr	r3, [r7, #0]
 8004c38:	6859      	ldr	r1, [r3, #4]
 8004c3a:	683b      	ldr	r3, [r7, #0]
 8004c3c:	68db      	ldr	r3, [r3, #12]
 8004c3e:	461a      	mov	r2, r3
 8004c40:	f000 fa4a 	bl	80050d8 <TIM_TI2_ConfigInputStage>
 8004c44:	687b      	ldr	r3, [r7, #4]
 8004c46:	681b      	ldr	r3, [r3, #0]
 8004c48:	2160      	movs	r1, #96	@ 0x60
 8004c4a:	4618      	mov	r0, r3
 8004c4c:	f000 fa73 	bl	8005136 <TIM_ITRx_SetConfig>
 8004c50:	e01c      	b.n	8004c8c <HAL_TIM_ConfigClockSource+0x174>
 8004c52:	687b      	ldr	r3, [r7, #4]
 8004c54:	6818      	ldr	r0, [r3, #0]
 8004c56:	683b      	ldr	r3, [r7, #0]
 8004c58:	6859      	ldr	r1, [r3, #4]
 8004c5a:	683b      	ldr	r3, [r7, #0]
 8004c5c:	68db      	ldr	r3, [r3, #12]
 8004c5e:	461a      	mov	r2, r3
 8004c60:	f000 fa0c 	bl	800507c <TIM_TI1_ConfigInputStage>
 8004c64:	687b      	ldr	r3, [r7, #4]
 8004c66:	681b      	ldr	r3, [r3, #0]
 8004c68:	2140      	movs	r1, #64	@ 0x40
 8004c6a:	4618      	mov	r0, r3
 8004c6c:	f000 fa63 	bl	8005136 <TIM_ITRx_SetConfig>
 8004c70:	e00c      	b.n	8004c8c <HAL_TIM_ConfigClockSource+0x174>
 8004c72:	687b      	ldr	r3, [r7, #4]
 8004c74:	681a      	ldr	r2, [r3, #0]
 8004c76:	683b      	ldr	r3, [r7, #0]
 8004c78:	681b      	ldr	r3, [r3, #0]
 8004c7a:	4619      	mov	r1, r3
 8004c7c:	4610      	mov	r0, r2
 8004c7e:	f000 fa5a 	bl	8005136 <TIM_ITRx_SetConfig>
 8004c82:	e003      	b.n	8004c8c <HAL_TIM_ConfigClockSource+0x174>
 8004c84:	2301      	movs	r3, #1
 8004c86:	73fb      	strb	r3, [r7, #15]
 8004c88:	e000      	b.n	8004c8c <HAL_TIM_ConfigClockSource+0x174>
 8004c8a:	bf00      	nop
 8004c8c:	687b      	ldr	r3, [r7, #4]
 8004c8e:	2201      	movs	r2, #1
 8004c90:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004c94:	687b      	ldr	r3, [r7, #4]
 8004c96:	2200      	movs	r2, #0
 8004c98:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004c9c:	7bfb      	ldrb	r3, [r7, #15]
 8004c9e:	4618      	mov	r0, r3
 8004ca0:	3710      	adds	r7, #16
 8004ca2:	46bd      	mov	sp, r7
 8004ca4:	bd80      	pop	{r7, pc}
	...

08004ca8 <TIM_Base_SetConfig>:
 8004ca8:	b480      	push	{r7}
 8004caa:	b085      	sub	sp, #20
 8004cac:	af00      	add	r7, sp, #0
 8004cae:	6078      	str	r0, [r7, #4]
 8004cb0:	6039      	str	r1, [r7, #0]
 8004cb2:	687b      	ldr	r3, [r7, #4]
 8004cb4:	681b      	ldr	r3, [r3, #0]
 8004cb6:	60fb      	str	r3, [r7, #12]
 8004cb8:	687b      	ldr	r3, [r7, #4]
 8004cba:	4a29      	ldr	r2, [pc, #164]	@ (8004d60 <TIM_Base_SetConfig+0xb8>)
 8004cbc:	4293      	cmp	r3, r2
 8004cbe:	d00b      	beq.n	8004cd8 <TIM_Base_SetConfig+0x30>
 8004cc0:	687b      	ldr	r3, [r7, #4]
 8004cc2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004cc6:	d007      	beq.n	8004cd8 <TIM_Base_SetConfig+0x30>
 8004cc8:	687b      	ldr	r3, [r7, #4]
 8004cca:	4a26      	ldr	r2, [pc, #152]	@ (8004d64 <TIM_Base_SetConfig+0xbc>)
 8004ccc:	4293      	cmp	r3, r2
 8004cce:	d003      	beq.n	8004cd8 <TIM_Base_SetConfig+0x30>
 8004cd0:	687b      	ldr	r3, [r7, #4]
 8004cd2:	4a25      	ldr	r2, [pc, #148]	@ (8004d68 <TIM_Base_SetConfig+0xc0>)
 8004cd4:	4293      	cmp	r3, r2
 8004cd6:	d108      	bne.n	8004cea <TIM_Base_SetConfig+0x42>
 8004cd8:	68fb      	ldr	r3, [r7, #12]
 8004cda:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004cde:	60fb      	str	r3, [r7, #12]
 8004ce0:	683b      	ldr	r3, [r7, #0]
 8004ce2:	685b      	ldr	r3, [r3, #4]
 8004ce4:	68fa      	ldr	r2, [r7, #12]
 8004ce6:	4313      	orrs	r3, r2
 8004ce8:	60fb      	str	r3, [r7, #12]
 8004cea:	687b      	ldr	r3, [r7, #4]
 8004cec:	4a1c      	ldr	r2, [pc, #112]	@ (8004d60 <TIM_Base_SetConfig+0xb8>)
 8004cee:	4293      	cmp	r3, r2
 8004cf0:	d00b      	beq.n	8004d0a <TIM_Base_SetConfig+0x62>
 8004cf2:	687b      	ldr	r3, [r7, #4]
 8004cf4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004cf8:	d007      	beq.n	8004d0a <TIM_Base_SetConfig+0x62>
 8004cfa:	687b      	ldr	r3, [r7, #4]
 8004cfc:	4a19      	ldr	r2, [pc, #100]	@ (8004d64 <TIM_Base_SetConfig+0xbc>)
 8004cfe:	4293      	cmp	r3, r2
 8004d00:	d003      	beq.n	8004d0a <TIM_Base_SetConfig+0x62>
 8004d02:	687b      	ldr	r3, [r7, #4]
 8004d04:	4a18      	ldr	r2, [pc, #96]	@ (8004d68 <TIM_Base_SetConfig+0xc0>)
 8004d06:	4293      	cmp	r3, r2
 8004d08:	d108      	bne.n	8004d1c <TIM_Base_SetConfig+0x74>
 8004d0a:	68fb      	ldr	r3, [r7, #12]
 8004d0c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004d10:	60fb      	str	r3, [r7, #12]
 8004d12:	683b      	ldr	r3, [r7, #0]
 8004d14:	68db      	ldr	r3, [r3, #12]
 8004d16:	68fa      	ldr	r2, [r7, #12]
 8004d18:	4313      	orrs	r3, r2
 8004d1a:	60fb      	str	r3, [r7, #12]
 8004d1c:	68fb      	ldr	r3, [r7, #12]
 8004d1e:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8004d22:	683b      	ldr	r3, [r7, #0]
 8004d24:	695b      	ldr	r3, [r3, #20]
 8004d26:	4313      	orrs	r3, r2
 8004d28:	60fb      	str	r3, [r7, #12]
 8004d2a:	687b      	ldr	r3, [r7, #4]
 8004d2c:	68fa      	ldr	r2, [r7, #12]
 8004d2e:	601a      	str	r2, [r3, #0]
 8004d30:	683b      	ldr	r3, [r7, #0]
 8004d32:	689a      	ldr	r2, [r3, #8]
 8004d34:	687b      	ldr	r3, [r7, #4]
 8004d36:	62da      	str	r2, [r3, #44]	@ 0x2c
 8004d38:	683b      	ldr	r3, [r7, #0]
 8004d3a:	681a      	ldr	r2, [r3, #0]
 8004d3c:	687b      	ldr	r3, [r7, #4]
 8004d3e:	629a      	str	r2, [r3, #40]	@ 0x28
 8004d40:	687b      	ldr	r3, [r7, #4]
 8004d42:	4a07      	ldr	r2, [pc, #28]	@ (8004d60 <TIM_Base_SetConfig+0xb8>)
 8004d44:	4293      	cmp	r3, r2
 8004d46:	d103      	bne.n	8004d50 <TIM_Base_SetConfig+0xa8>
 8004d48:	683b      	ldr	r3, [r7, #0]
 8004d4a:	691a      	ldr	r2, [r3, #16]
 8004d4c:	687b      	ldr	r3, [r7, #4]
 8004d4e:	631a      	str	r2, [r3, #48]	@ 0x30
 8004d50:	687b      	ldr	r3, [r7, #4]
 8004d52:	2201      	movs	r2, #1
 8004d54:	615a      	str	r2, [r3, #20]
 8004d56:	bf00      	nop
 8004d58:	3714      	adds	r7, #20
 8004d5a:	46bd      	mov	sp, r7
 8004d5c:	bc80      	pop	{r7}
 8004d5e:	4770      	bx	lr
 8004d60:	40012c00 	.word	0x40012c00
 8004d64:	40000400 	.word	0x40000400
 8004d68:	40000800 	.word	0x40000800

08004d6c <TIM_OC1_SetConfig>:
 8004d6c:	b480      	push	{r7}
 8004d6e:	b087      	sub	sp, #28
 8004d70:	af00      	add	r7, sp, #0
 8004d72:	6078      	str	r0, [r7, #4]
 8004d74:	6039      	str	r1, [r7, #0]
 8004d76:	687b      	ldr	r3, [r7, #4]
 8004d78:	6a1b      	ldr	r3, [r3, #32]
 8004d7a:	617b      	str	r3, [r7, #20]
 8004d7c:	687b      	ldr	r3, [r7, #4]
 8004d7e:	6a1b      	ldr	r3, [r3, #32]
 8004d80:	f023 0201 	bic.w	r2, r3, #1
 8004d84:	687b      	ldr	r3, [r7, #4]
 8004d86:	621a      	str	r2, [r3, #32]
 8004d88:	687b      	ldr	r3, [r7, #4]
 8004d8a:	685b      	ldr	r3, [r3, #4]
 8004d8c:	613b      	str	r3, [r7, #16]
 8004d8e:	687b      	ldr	r3, [r7, #4]
 8004d90:	699b      	ldr	r3, [r3, #24]
 8004d92:	60fb      	str	r3, [r7, #12]
 8004d94:	68fb      	ldr	r3, [r7, #12]
 8004d96:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004d9a:	60fb      	str	r3, [r7, #12]
 8004d9c:	68fb      	ldr	r3, [r7, #12]
 8004d9e:	f023 0303 	bic.w	r3, r3, #3
 8004da2:	60fb      	str	r3, [r7, #12]
 8004da4:	683b      	ldr	r3, [r7, #0]
 8004da6:	681b      	ldr	r3, [r3, #0]
 8004da8:	68fa      	ldr	r2, [r7, #12]
 8004daa:	4313      	orrs	r3, r2
 8004dac:	60fb      	str	r3, [r7, #12]
 8004dae:	697b      	ldr	r3, [r7, #20]
 8004db0:	f023 0302 	bic.w	r3, r3, #2
 8004db4:	617b      	str	r3, [r7, #20]
 8004db6:	683b      	ldr	r3, [r7, #0]
 8004db8:	689b      	ldr	r3, [r3, #8]
 8004dba:	697a      	ldr	r2, [r7, #20]
 8004dbc:	4313      	orrs	r3, r2
 8004dbe:	617b      	str	r3, [r7, #20]
 8004dc0:	687b      	ldr	r3, [r7, #4]
 8004dc2:	4a1c      	ldr	r2, [pc, #112]	@ (8004e34 <TIM_OC1_SetConfig+0xc8>)
 8004dc4:	4293      	cmp	r3, r2
 8004dc6:	d10c      	bne.n	8004de2 <TIM_OC1_SetConfig+0x76>
 8004dc8:	697b      	ldr	r3, [r7, #20]
 8004dca:	f023 0308 	bic.w	r3, r3, #8
 8004dce:	617b      	str	r3, [r7, #20]
 8004dd0:	683b      	ldr	r3, [r7, #0]
 8004dd2:	68db      	ldr	r3, [r3, #12]
 8004dd4:	697a      	ldr	r2, [r7, #20]
 8004dd6:	4313      	orrs	r3, r2
 8004dd8:	617b      	str	r3, [r7, #20]
 8004dda:	697b      	ldr	r3, [r7, #20]
 8004ddc:	f023 0304 	bic.w	r3, r3, #4
 8004de0:	617b      	str	r3, [r7, #20]
 8004de2:	687b      	ldr	r3, [r7, #4]
 8004de4:	4a13      	ldr	r2, [pc, #76]	@ (8004e34 <TIM_OC1_SetConfig+0xc8>)
 8004de6:	4293      	cmp	r3, r2
 8004de8:	d111      	bne.n	8004e0e <TIM_OC1_SetConfig+0xa2>
 8004dea:	693b      	ldr	r3, [r7, #16]
 8004dec:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8004df0:	613b      	str	r3, [r7, #16]
 8004df2:	693b      	ldr	r3, [r7, #16]
 8004df4:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8004df8:	613b      	str	r3, [r7, #16]
 8004dfa:	683b      	ldr	r3, [r7, #0]
 8004dfc:	695b      	ldr	r3, [r3, #20]
 8004dfe:	693a      	ldr	r2, [r7, #16]
 8004e00:	4313      	orrs	r3, r2
 8004e02:	613b      	str	r3, [r7, #16]
 8004e04:	683b      	ldr	r3, [r7, #0]
 8004e06:	699b      	ldr	r3, [r3, #24]
 8004e08:	693a      	ldr	r2, [r7, #16]
 8004e0a:	4313      	orrs	r3, r2
 8004e0c:	613b      	str	r3, [r7, #16]
 8004e0e:	687b      	ldr	r3, [r7, #4]
 8004e10:	693a      	ldr	r2, [r7, #16]
 8004e12:	605a      	str	r2, [r3, #4]
 8004e14:	687b      	ldr	r3, [r7, #4]
 8004e16:	68fa      	ldr	r2, [r7, #12]
 8004e18:	619a      	str	r2, [r3, #24]
 8004e1a:	683b      	ldr	r3, [r7, #0]
 8004e1c:	685a      	ldr	r2, [r3, #4]
 8004e1e:	687b      	ldr	r3, [r7, #4]
 8004e20:	635a      	str	r2, [r3, #52]	@ 0x34
 8004e22:	687b      	ldr	r3, [r7, #4]
 8004e24:	697a      	ldr	r2, [r7, #20]
 8004e26:	621a      	str	r2, [r3, #32]
 8004e28:	bf00      	nop
 8004e2a:	371c      	adds	r7, #28
 8004e2c:	46bd      	mov	sp, r7
 8004e2e:	bc80      	pop	{r7}
 8004e30:	4770      	bx	lr
 8004e32:	bf00      	nop
 8004e34:	40012c00 	.word	0x40012c00

08004e38 <TIM_OC2_SetConfig>:
 8004e38:	b480      	push	{r7}
 8004e3a:	b087      	sub	sp, #28
 8004e3c:	af00      	add	r7, sp, #0
 8004e3e:	6078      	str	r0, [r7, #4]
 8004e40:	6039      	str	r1, [r7, #0]
 8004e42:	687b      	ldr	r3, [r7, #4]
 8004e44:	6a1b      	ldr	r3, [r3, #32]
 8004e46:	617b      	str	r3, [r7, #20]
 8004e48:	687b      	ldr	r3, [r7, #4]
 8004e4a:	6a1b      	ldr	r3, [r3, #32]
 8004e4c:	f023 0210 	bic.w	r2, r3, #16
 8004e50:	687b      	ldr	r3, [r7, #4]
 8004e52:	621a      	str	r2, [r3, #32]
 8004e54:	687b      	ldr	r3, [r7, #4]
 8004e56:	685b      	ldr	r3, [r3, #4]
 8004e58:	613b      	str	r3, [r7, #16]
 8004e5a:	687b      	ldr	r3, [r7, #4]
 8004e5c:	699b      	ldr	r3, [r3, #24]
 8004e5e:	60fb      	str	r3, [r7, #12]
 8004e60:	68fb      	ldr	r3, [r7, #12]
 8004e62:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004e66:	60fb      	str	r3, [r7, #12]
 8004e68:	68fb      	ldr	r3, [r7, #12]
 8004e6a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004e6e:	60fb      	str	r3, [r7, #12]
 8004e70:	683b      	ldr	r3, [r7, #0]
 8004e72:	681b      	ldr	r3, [r3, #0]
 8004e74:	021b      	lsls	r3, r3, #8
 8004e76:	68fa      	ldr	r2, [r7, #12]
 8004e78:	4313      	orrs	r3, r2
 8004e7a:	60fb      	str	r3, [r7, #12]
 8004e7c:	697b      	ldr	r3, [r7, #20]
 8004e7e:	f023 0320 	bic.w	r3, r3, #32
 8004e82:	617b      	str	r3, [r7, #20]
 8004e84:	683b      	ldr	r3, [r7, #0]
 8004e86:	689b      	ldr	r3, [r3, #8]
 8004e88:	011b      	lsls	r3, r3, #4
 8004e8a:	697a      	ldr	r2, [r7, #20]
 8004e8c:	4313      	orrs	r3, r2
 8004e8e:	617b      	str	r3, [r7, #20]
 8004e90:	687b      	ldr	r3, [r7, #4]
 8004e92:	4a1d      	ldr	r2, [pc, #116]	@ (8004f08 <TIM_OC2_SetConfig+0xd0>)
 8004e94:	4293      	cmp	r3, r2
 8004e96:	d10d      	bne.n	8004eb4 <TIM_OC2_SetConfig+0x7c>
 8004e98:	697b      	ldr	r3, [r7, #20]
 8004e9a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8004e9e:	617b      	str	r3, [r7, #20]
 8004ea0:	683b      	ldr	r3, [r7, #0]
 8004ea2:	68db      	ldr	r3, [r3, #12]
 8004ea4:	011b      	lsls	r3, r3, #4
 8004ea6:	697a      	ldr	r2, [r7, #20]
 8004ea8:	4313      	orrs	r3, r2
 8004eaa:	617b      	str	r3, [r7, #20]
 8004eac:	697b      	ldr	r3, [r7, #20]
 8004eae:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8004eb2:	617b      	str	r3, [r7, #20]
 8004eb4:	687b      	ldr	r3, [r7, #4]
 8004eb6:	4a14      	ldr	r2, [pc, #80]	@ (8004f08 <TIM_OC2_SetConfig+0xd0>)
 8004eb8:	4293      	cmp	r3, r2
 8004eba:	d113      	bne.n	8004ee4 <TIM_OC2_SetConfig+0xac>
 8004ebc:	693b      	ldr	r3, [r7, #16]
 8004ebe:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8004ec2:	613b      	str	r3, [r7, #16]
 8004ec4:	693b      	ldr	r3, [r7, #16]
 8004ec6:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8004eca:	613b      	str	r3, [r7, #16]
 8004ecc:	683b      	ldr	r3, [r7, #0]
 8004ece:	695b      	ldr	r3, [r3, #20]
 8004ed0:	009b      	lsls	r3, r3, #2
 8004ed2:	693a      	ldr	r2, [r7, #16]
 8004ed4:	4313      	orrs	r3, r2
 8004ed6:	613b      	str	r3, [r7, #16]
 8004ed8:	683b      	ldr	r3, [r7, #0]
 8004eda:	699b      	ldr	r3, [r3, #24]
 8004edc:	009b      	lsls	r3, r3, #2
 8004ede:	693a      	ldr	r2, [r7, #16]
 8004ee0:	4313      	orrs	r3, r2
 8004ee2:	613b      	str	r3, [r7, #16]
 8004ee4:	687b      	ldr	r3, [r7, #4]
 8004ee6:	693a      	ldr	r2, [r7, #16]
 8004ee8:	605a      	str	r2, [r3, #4]
 8004eea:	687b      	ldr	r3, [r7, #4]
 8004eec:	68fa      	ldr	r2, [r7, #12]
 8004eee:	619a      	str	r2, [r3, #24]
 8004ef0:	683b      	ldr	r3, [r7, #0]
 8004ef2:	685a      	ldr	r2, [r3, #4]
 8004ef4:	687b      	ldr	r3, [r7, #4]
 8004ef6:	639a      	str	r2, [r3, #56]	@ 0x38
 8004ef8:	687b      	ldr	r3, [r7, #4]
 8004efa:	697a      	ldr	r2, [r7, #20]
 8004efc:	621a      	str	r2, [r3, #32]
 8004efe:	bf00      	nop
 8004f00:	371c      	adds	r7, #28
 8004f02:	46bd      	mov	sp, r7
 8004f04:	bc80      	pop	{r7}
 8004f06:	4770      	bx	lr
 8004f08:	40012c00 	.word	0x40012c00

08004f0c <TIM_OC3_SetConfig>:
 8004f0c:	b480      	push	{r7}
 8004f0e:	b087      	sub	sp, #28
 8004f10:	af00      	add	r7, sp, #0
 8004f12:	6078      	str	r0, [r7, #4]
 8004f14:	6039      	str	r1, [r7, #0]
 8004f16:	687b      	ldr	r3, [r7, #4]
 8004f18:	6a1b      	ldr	r3, [r3, #32]
 8004f1a:	617b      	str	r3, [r7, #20]
 8004f1c:	687b      	ldr	r3, [r7, #4]
 8004f1e:	6a1b      	ldr	r3, [r3, #32]
 8004f20:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8004f24:	687b      	ldr	r3, [r7, #4]
 8004f26:	621a      	str	r2, [r3, #32]
 8004f28:	687b      	ldr	r3, [r7, #4]
 8004f2a:	685b      	ldr	r3, [r3, #4]
 8004f2c:	613b      	str	r3, [r7, #16]
 8004f2e:	687b      	ldr	r3, [r7, #4]
 8004f30:	69db      	ldr	r3, [r3, #28]
 8004f32:	60fb      	str	r3, [r7, #12]
 8004f34:	68fb      	ldr	r3, [r7, #12]
 8004f36:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004f3a:	60fb      	str	r3, [r7, #12]
 8004f3c:	68fb      	ldr	r3, [r7, #12]
 8004f3e:	f023 0303 	bic.w	r3, r3, #3
 8004f42:	60fb      	str	r3, [r7, #12]
 8004f44:	683b      	ldr	r3, [r7, #0]
 8004f46:	681b      	ldr	r3, [r3, #0]
 8004f48:	68fa      	ldr	r2, [r7, #12]
 8004f4a:	4313      	orrs	r3, r2
 8004f4c:	60fb      	str	r3, [r7, #12]
 8004f4e:	697b      	ldr	r3, [r7, #20]
 8004f50:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8004f54:	617b      	str	r3, [r7, #20]
 8004f56:	683b      	ldr	r3, [r7, #0]
 8004f58:	689b      	ldr	r3, [r3, #8]
 8004f5a:	021b      	lsls	r3, r3, #8
 8004f5c:	697a      	ldr	r2, [r7, #20]
 8004f5e:	4313      	orrs	r3, r2
 8004f60:	617b      	str	r3, [r7, #20]
 8004f62:	687b      	ldr	r3, [r7, #4]
 8004f64:	4a1d      	ldr	r2, [pc, #116]	@ (8004fdc <TIM_OC3_SetConfig+0xd0>)
 8004f66:	4293      	cmp	r3, r2
 8004f68:	d10d      	bne.n	8004f86 <TIM_OC3_SetConfig+0x7a>
 8004f6a:	697b      	ldr	r3, [r7, #20]
 8004f6c:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8004f70:	617b      	str	r3, [r7, #20]
 8004f72:	683b      	ldr	r3, [r7, #0]
 8004f74:	68db      	ldr	r3, [r3, #12]
 8004f76:	021b      	lsls	r3, r3, #8
 8004f78:	697a      	ldr	r2, [r7, #20]
 8004f7a:	4313      	orrs	r3, r2
 8004f7c:	617b      	str	r3, [r7, #20]
 8004f7e:	697b      	ldr	r3, [r7, #20]
 8004f80:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8004f84:	617b      	str	r3, [r7, #20]
 8004f86:	687b      	ldr	r3, [r7, #4]
 8004f88:	4a14      	ldr	r2, [pc, #80]	@ (8004fdc <TIM_OC3_SetConfig+0xd0>)
 8004f8a:	4293      	cmp	r3, r2
 8004f8c:	d113      	bne.n	8004fb6 <TIM_OC3_SetConfig+0xaa>
 8004f8e:	693b      	ldr	r3, [r7, #16]
 8004f90:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8004f94:	613b      	str	r3, [r7, #16]
 8004f96:	693b      	ldr	r3, [r7, #16]
 8004f98:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8004f9c:	613b      	str	r3, [r7, #16]
 8004f9e:	683b      	ldr	r3, [r7, #0]
 8004fa0:	695b      	ldr	r3, [r3, #20]
 8004fa2:	011b      	lsls	r3, r3, #4
 8004fa4:	693a      	ldr	r2, [r7, #16]
 8004fa6:	4313      	orrs	r3, r2
 8004fa8:	613b      	str	r3, [r7, #16]
 8004faa:	683b      	ldr	r3, [r7, #0]
 8004fac:	699b      	ldr	r3, [r3, #24]
 8004fae:	011b      	lsls	r3, r3, #4
 8004fb0:	693a      	ldr	r2, [r7, #16]
 8004fb2:	4313      	orrs	r3, r2
 8004fb4:	613b      	str	r3, [r7, #16]
 8004fb6:	687b      	ldr	r3, [r7, #4]
 8004fb8:	693a      	ldr	r2, [r7, #16]
 8004fba:	605a      	str	r2, [r3, #4]
 8004fbc:	687b      	ldr	r3, [r7, #4]
 8004fbe:	68fa      	ldr	r2, [r7, #12]
 8004fc0:	61da      	str	r2, [r3, #28]
 8004fc2:	683b      	ldr	r3, [r7, #0]
 8004fc4:	685a      	ldr	r2, [r3, #4]
 8004fc6:	687b      	ldr	r3, [r7, #4]
 8004fc8:	63da      	str	r2, [r3, #60]	@ 0x3c
 8004fca:	687b      	ldr	r3, [r7, #4]
 8004fcc:	697a      	ldr	r2, [r7, #20]
 8004fce:	621a      	str	r2, [r3, #32]
 8004fd0:	bf00      	nop
 8004fd2:	371c      	adds	r7, #28
 8004fd4:	46bd      	mov	sp, r7
 8004fd6:	bc80      	pop	{r7}
 8004fd8:	4770      	bx	lr
 8004fda:	bf00      	nop
 8004fdc:	40012c00 	.word	0x40012c00

08004fe0 <TIM_OC4_SetConfig>:
 8004fe0:	b480      	push	{r7}
 8004fe2:	b087      	sub	sp, #28
 8004fe4:	af00      	add	r7, sp, #0
 8004fe6:	6078      	str	r0, [r7, #4]
 8004fe8:	6039      	str	r1, [r7, #0]
 8004fea:	687b      	ldr	r3, [r7, #4]
 8004fec:	6a1b      	ldr	r3, [r3, #32]
 8004fee:	613b      	str	r3, [r7, #16]
 8004ff0:	687b      	ldr	r3, [r7, #4]
 8004ff2:	6a1b      	ldr	r3, [r3, #32]
 8004ff4:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8004ff8:	687b      	ldr	r3, [r7, #4]
 8004ffa:	621a      	str	r2, [r3, #32]
 8004ffc:	687b      	ldr	r3, [r7, #4]
 8004ffe:	685b      	ldr	r3, [r3, #4]
 8005000:	617b      	str	r3, [r7, #20]
 8005002:	687b      	ldr	r3, [r7, #4]
 8005004:	69db      	ldr	r3, [r3, #28]
 8005006:	60fb      	str	r3, [r7, #12]
 8005008:	68fb      	ldr	r3, [r7, #12]
 800500a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800500e:	60fb      	str	r3, [r7, #12]
 8005010:	68fb      	ldr	r3, [r7, #12]
 8005012:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8005016:	60fb      	str	r3, [r7, #12]
 8005018:	683b      	ldr	r3, [r7, #0]
 800501a:	681b      	ldr	r3, [r3, #0]
 800501c:	021b      	lsls	r3, r3, #8
 800501e:	68fa      	ldr	r2, [r7, #12]
 8005020:	4313      	orrs	r3, r2
 8005022:	60fb      	str	r3, [r7, #12]
 8005024:	693b      	ldr	r3, [r7, #16]
 8005026:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 800502a:	613b      	str	r3, [r7, #16]
 800502c:	683b      	ldr	r3, [r7, #0]
 800502e:	689b      	ldr	r3, [r3, #8]
 8005030:	031b      	lsls	r3, r3, #12
 8005032:	693a      	ldr	r2, [r7, #16]
 8005034:	4313      	orrs	r3, r2
 8005036:	613b      	str	r3, [r7, #16]
 8005038:	687b      	ldr	r3, [r7, #4]
 800503a:	4a0f      	ldr	r2, [pc, #60]	@ (8005078 <TIM_OC4_SetConfig+0x98>)
 800503c:	4293      	cmp	r3, r2
 800503e:	d109      	bne.n	8005054 <TIM_OC4_SetConfig+0x74>
 8005040:	697b      	ldr	r3, [r7, #20]
 8005042:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8005046:	617b      	str	r3, [r7, #20]
 8005048:	683b      	ldr	r3, [r7, #0]
 800504a:	695b      	ldr	r3, [r3, #20]
 800504c:	019b      	lsls	r3, r3, #6
 800504e:	697a      	ldr	r2, [r7, #20]
 8005050:	4313      	orrs	r3, r2
 8005052:	617b      	str	r3, [r7, #20]
 8005054:	687b      	ldr	r3, [r7, #4]
 8005056:	697a      	ldr	r2, [r7, #20]
 8005058:	605a      	str	r2, [r3, #4]
 800505a:	687b      	ldr	r3, [r7, #4]
 800505c:	68fa      	ldr	r2, [r7, #12]
 800505e:	61da      	str	r2, [r3, #28]
 8005060:	683b      	ldr	r3, [r7, #0]
 8005062:	685a      	ldr	r2, [r3, #4]
 8005064:	687b      	ldr	r3, [r7, #4]
 8005066:	641a      	str	r2, [r3, #64]	@ 0x40
 8005068:	687b      	ldr	r3, [r7, #4]
 800506a:	693a      	ldr	r2, [r7, #16]
 800506c:	621a      	str	r2, [r3, #32]
 800506e:	bf00      	nop
 8005070:	371c      	adds	r7, #28
 8005072:	46bd      	mov	sp, r7
 8005074:	bc80      	pop	{r7}
 8005076:	4770      	bx	lr
 8005078:	40012c00 	.word	0x40012c00

0800507c <TIM_TI1_ConfigInputStage>:
 800507c:	b480      	push	{r7}
 800507e:	b087      	sub	sp, #28
 8005080:	af00      	add	r7, sp, #0
 8005082:	60f8      	str	r0, [r7, #12]
 8005084:	60b9      	str	r1, [r7, #8]
 8005086:	607a      	str	r2, [r7, #4]
 8005088:	68fb      	ldr	r3, [r7, #12]
 800508a:	6a1b      	ldr	r3, [r3, #32]
 800508c:	617b      	str	r3, [r7, #20]
 800508e:	68fb      	ldr	r3, [r7, #12]
 8005090:	6a1b      	ldr	r3, [r3, #32]
 8005092:	f023 0201 	bic.w	r2, r3, #1
 8005096:	68fb      	ldr	r3, [r7, #12]
 8005098:	621a      	str	r2, [r3, #32]
 800509a:	68fb      	ldr	r3, [r7, #12]
 800509c:	699b      	ldr	r3, [r3, #24]
 800509e:	613b      	str	r3, [r7, #16]
 80050a0:	693b      	ldr	r3, [r7, #16]
 80050a2:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80050a6:	613b      	str	r3, [r7, #16]
 80050a8:	687b      	ldr	r3, [r7, #4]
 80050aa:	011b      	lsls	r3, r3, #4
 80050ac:	693a      	ldr	r2, [r7, #16]
 80050ae:	4313      	orrs	r3, r2
 80050b0:	613b      	str	r3, [r7, #16]
 80050b2:	697b      	ldr	r3, [r7, #20]
 80050b4:	f023 030a 	bic.w	r3, r3, #10
 80050b8:	617b      	str	r3, [r7, #20]
 80050ba:	697a      	ldr	r2, [r7, #20]
 80050bc:	68bb      	ldr	r3, [r7, #8]
 80050be:	4313      	orrs	r3, r2
 80050c0:	617b      	str	r3, [r7, #20]
 80050c2:	68fb      	ldr	r3, [r7, #12]
 80050c4:	693a      	ldr	r2, [r7, #16]
 80050c6:	619a      	str	r2, [r3, #24]
 80050c8:	68fb      	ldr	r3, [r7, #12]
 80050ca:	697a      	ldr	r2, [r7, #20]
 80050cc:	621a      	str	r2, [r3, #32]
 80050ce:	bf00      	nop
 80050d0:	371c      	adds	r7, #28
 80050d2:	46bd      	mov	sp, r7
 80050d4:	bc80      	pop	{r7}
 80050d6:	4770      	bx	lr

080050d8 <TIM_TI2_ConfigInputStage>:
 80050d8:	b480      	push	{r7}
 80050da:	b087      	sub	sp, #28
 80050dc:	af00      	add	r7, sp, #0
 80050de:	60f8      	str	r0, [r7, #12]
 80050e0:	60b9      	str	r1, [r7, #8]
 80050e2:	607a      	str	r2, [r7, #4]
 80050e4:	68fb      	ldr	r3, [r7, #12]
 80050e6:	6a1b      	ldr	r3, [r3, #32]
 80050e8:	617b      	str	r3, [r7, #20]
 80050ea:	68fb      	ldr	r3, [r7, #12]
 80050ec:	6a1b      	ldr	r3, [r3, #32]
 80050ee:	f023 0210 	bic.w	r2, r3, #16
 80050f2:	68fb      	ldr	r3, [r7, #12]
 80050f4:	621a      	str	r2, [r3, #32]
 80050f6:	68fb      	ldr	r3, [r7, #12]
 80050f8:	699b      	ldr	r3, [r3, #24]
 80050fa:	613b      	str	r3, [r7, #16]
 80050fc:	693b      	ldr	r3, [r7, #16]
 80050fe:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8005102:	613b      	str	r3, [r7, #16]
 8005104:	687b      	ldr	r3, [r7, #4]
 8005106:	031b      	lsls	r3, r3, #12
 8005108:	693a      	ldr	r2, [r7, #16]
 800510a:	4313      	orrs	r3, r2
 800510c:	613b      	str	r3, [r7, #16]
 800510e:	697b      	ldr	r3, [r7, #20]
 8005110:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8005114:	617b      	str	r3, [r7, #20]
 8005116:	68bb      	ldr	r3, [r7, #8]
 8005118:	011b      	lsls	r3, r3, #4
 800511a:	697a      	ldr	r2, [r7, #20]
 800511c:	4313      	orrs	r3, r2
 800511e:	617b      	str	r3, [r7, #20]
 8005120:	68fb      	ldr	r3, [r7, #12]
 8005122:	693a      	ldr	r2, [r7, #16]
 8005124:	619a      	str	r2, [r3, #24]
 8005126:	68fb      	ldr	r3, [r7, #12]
 8005128:	697a      	ldr	r2, [r7, #20]
 800512a:	621a      	str	r2, [r3, #32]
 800512c:	bf00      	nop
 800512e:	371c      	adds	r7, #28
 8005130:	46bd      	mov	sp, r7
 8005132:	bc80      	pop	{r7}
 8005134:	4770      	bx	lr

08005136 <TIM_ITRx_SetConfig>:
 8005136:	b480      	push	{r7}
 8005138:	b085      	sub	sp, #20
 800513a:	af00      	add	r7, sp, #0
 800513c:	6078      	str	r0, [r7, #4]
 800513e:	6039      	str	r1, [r7, #0]
 8005140:	687b      	ldr	r3, [r7, #4]
 8005142:	689b      	ldr	r3, [r3, #8]
 8005144:	60fb      	str	r3, [r7, #12]
 8005146:	68fb      	ldr	r3, [r7, #12]
 8005148:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800514c:	60fb      	str	r3, [r7, #12]
 800514e:	683a      	ldr	r2, [r7, #0]
 8005150:	68fb      	ldr	r3, [r7, #12]
 8005152:	4313      	orrs	r3, r2
 8005154:	f043 0307 	orr.w	r3, r3, #7
 8005158:	60fb      	str	r3, [r7, #12]
 800515a:	687b      	ldr	r3, [r7, #4]
 800515c:	68fa      	ldr	r2, [r7, #12]
 800515e:	609a      	str	r2, [r3, #8]
 8005160:	bf00      	nop
 8005162:	3714      	adds	r7, #20
 8005164:	46bd      	mov	sp, r7
 8005166:	bc80      	pop	{r7}
 8005168:	4770      	bx	lr

0800516a <TIM_ETR_SetConfig>:
 800516a:	b480      	push	{r7}
 800516c:	b087      	sub	sp, #28
 800516e:	af00      	add	r7, sp, #0
 8005170:	60f8      	str	r0, [r7, #12]
 8005172:	60b9      	str	r1, [r7, #8]
 8005174:	607a      	str	r2, [r7, #4]
 8005176:	603b      	str	r3, [r7, #0]
 8005178:	68fb      	ldr	r3, [r7, #12]
 800517a:	689b      	ldr	r3, [r3, #8]
 800517c:	617b      	str	r3, [r7, #20]
 800517e:	697b      	ldr	r3, [r7, #20]
 8005180:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8005184:	617b      	str	r3, [r7, #20]
 8005186:	683b      	ldr	r3, [r7, #0]
 8005188:	021a      	lsls	r2, r3, #8
 800518a:	687b      	ldr	r3, [r7, #4]
 800518c:	431a      	orrs	r2, r3
 800518e:	68bb      	ldr	r3, [r7, #8]
 8005190:	4313      	orrs	r3, r2
 8005192:	697a      	ldr	r2, [r7, #20]
 8005194:	4313      	orrs	r3, r2
 8005196:	617b      	str	r3, [r7, #20]
 8005198:	68fb      	ldr	r3, [r7, #12]
 800519a:	697a      	ldr	r2, [r7, #20]
 800519c:	609a      	str	r2, [r3, #8]
 800519e:	bf00      	nop
 80051a0:	371c      	adds	r7, #28
 80051a2:	46bd      	mov	sp, r7
 80051a4:	bc80      	pop	{r7}
 80051a6:	4770      	bx	lr

080051a8 <TIM_CCxChannelCmd>:
 80051a8:	b480      	push	{r7}
 80051aa:	b087      	sub	sp, #28
 80051ac:	af00      	add	r7, sp, #0
 80051ae:	60f8      	str	r0, [r7, #12]
 80051b0:	60b9      	str	r1, [r7, #8]
 80051b2:	607a      	str	r2, [r7, #4]
 80051b4:	68bb      	ldr	r3, [r7, #8]
 80051b6:	f003 031f 	and.w	r3, r3, #31
 80051ba:	2201      	movs	r2, #1
 80051bc:	fa02 f303 	lsl.w	r3, r2, r3
 80051c0:	617b      	str	r3, [r7, #20]
 80051c2:	68fb      	ldr	r3, [r7, #12]
 80051c4:	6a1a      	ldr	r2, [r3, #32]
 80051c6:	697b      	ldr	r3, [r7, #20]
 80051c8:	43db      	mvns	r3, r3
 80051ca:	401a      	ands	r2, r3
 80051cc:	68fb      	ldr	r3, [r7, #12]
 80051ce:	621a      	str	r2, [r3, #32]
 80051d0:	68fb      	ldr	r3, [r7, #12]
 80051d2:	6a1a      	ldr	r2, [r3, #32]
 80051d4:	68bb      	ldr	r3, [r7, #8]
 80051d6:	f003 031f 	and.w	r3, r3, #31
 80051da:	6879      	ldr	r1, [r7, #4]
 80051dc:	fa01 f303 	lsl.w	r3, r1, r3
 80051e0:	431a      	orrs	r2, r3
 80051e2:	68fb      	ldr	r3, [r7, #12]
 80051e4:	621a      	str	r2, [r3, #32]
 80051e6:	bf00      	nop
 80051e8:	371c      	adds	r7, #28
 80051ea:	46bd      	mov	sp, r7
 80051ec:	bc80      	pop	{r7}
 80051ee:	4770      	bx	lr

080051f0 <HAL_TIMEx_MasterConfigSynchronization>:
 80051f0:	b480      	push	{r7}
 80051f2:	b085      	sub	sp, #20
 80051f4:	af00      	add	r7, sp, #0
 80051f6:	6078      	str	r0, [r7, #4]
 80051f8:	6039      	str	r1, [r7, #0]
 80051fa:	687b      	ldr	r3, [r7, #4]
 80051fc:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005200:	2b01      	cmp	r3, #1
 8005202:	d101      	bne.n	8005208 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8005204:	2302      	movs	r3, #2
 8005206:	e046      	b.n	8005296 <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8005208:	687b      	ldr	r3, [r7, #4]
 800520a:	2201      	movs	r2, #1
 800520c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005210:	687b      	ldr	r3, [r7, #4]
 8005212:	2202      	movs	r2, #2
 8005214:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005218:	687b      	ldr	r3, [r7, #4]
 800521a:	681b      	ldr	r3, [r3, #0]
 800521c:	685b      	ldr	r3, [r3, #4]
 800521e:	60fb      	str	r3, [r7, #12]
 8005220:	687b      	ldr	r3, [r7, #4]
 8005222:	681b      	ldr	r3, [r3, #0]
 8005224:	689b      	ldr	r3, [r3, #8]
 8005226:	60bb      	str	r3, [r7, #8]
 8005228:	68fb      	ldr	r3, [r7, #12]
 800522a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800522e:	60fb      	str	r3, [r7, #12]
 8005230:	683b      	ldr	r3, [r7, #0]
 8005232:	681b      	ldr	r3, [r3, #0]
 8005234:	68fa      	ldr	r2, [r7, #12]
 8005236:	4313      	orrs	r3, r2
 8005238:	60fb      	str	r3, [r7, #12]
 800523a:	687b      	ldr	r3, [r7, #4]
 800523c:	681b      	ldr	r3, [r3, #0]
 800523e:	68fa      	ldr	r2, [r7, #12]
 8005240:	605a      	str	r2, [r3, #4]
 8005242:	687b      	ldr	r3, [r7, #4]
 8005244:	681b      	ldr	r3, [r3, #0]
 8005246:	4a16      	ldr	r2, [pc, #88]	@ (80052a0 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8005248:	4293      	cmp	r3, r2
 800524a:	d00e      	beq.n	800526a <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 800524c:	687b      	ldr	r3, [r7, #4]
 800524e:	681b      	ldr	r3, [r3, #0]
 8005250:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005254:	d009      	beq.n	800526a <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8005256:	687b      	ldr	r3, [r7, #4]
 8005258:	681b      	ldr	r3, [r3, #0]
 800525a:	4a12      	ldr	r2, [pc, #72]	@ (80052a4 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 800525c:	4293      	cmp	r3, r2
 800525e:	d004      	beq.n	800526a <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8005260:	687b      	ldr	r3, [r7, #4]
 8005262:	681b      	ldr	r3, [r3, #0]
 8005264:	4a10      	ldr	r2, [pc, #64]	@ (80052a8 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 8005266:	4293      	cmp	r3, r2
 8005268:	d10c      	bne.n	8005284 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 800526a:	68bb      	ldr	r3, [r7, #8]
 800526c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8005270:	60bb      	str	r3, [r7, #8]
 8005272:	683b      	ldr	r3, [r7, #0]
 8005274:	685b      	ldr	r3, [r3, #4]
 8005276:	68ba      	ldr	r2, [r7, #8]
 8005278:	4313      	orrs	r3, r2
 800527a:	60bb      	str	r3, [r7, #8]
 800527c:	687b      	ldr	r3, [r7, #4]
 800527e:	681b      	ldr	r3, [r3, #0]
 8005280:	68ba      	ldr	r2, [r7, #8]
 8005282:	609a      	str	r2, [r3, #8]
 8005284:	687b      	ldr	r3, [r7, #4]
 8005286:	2201      	movs	r2, #1
 8005288:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800528c:	687b      	ldr	r3, [r7, #4]
 800528e:	2200      	movs	r2, #0
 8005290:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005294:	2300      	movs	r3, #0
 8005296:	4618      	mov	r0, r3
 8005298:	3714      	adds	r7, #20
 800529a:	46bd      	mov	sp, r7
 800529c:	bc80      	pop	{r7}
 800529e:	4770      	bx	lr
 80052a0:	40012c00 	.word	0x40012c00
 80052a4:	40000400 	.word	0x40000400
 80052a8:	40000800 	.word	0x40000800

080052ac <HAL_UART_Init>:
 80052ac:	b580      	push	{r7, lr}
 80052ae:	b082      	sub	sp, #8
 80052b0:	af00      	add	r7, sp, #0
 80052b2:	6078      	str	r0, [r7, #4]
 80052b4:	687b      	ldr	r3, [r7, #4]
 80052b6:	2b00      	cmp	r3, #0
 80052b8:	d101      	bne.n	80052be <HAL_UART_Init+0x12>
 80052ba:	2301      	movs	r3, #1
 80052bc:	e042      	b.n	8005344 <HAL_UART_Init+0x98>
 80052be:	687b      	ldr	r3, [r7, #4]
 80052c0:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80052c4:	b2db      	uxtb	r3, r3
 80052c6:	2b00      	cmp	r3, #0
 80052c8:	d106      	bne.n	80052d8 <HAL_UART_Init+0x2c>
 80052ca:	687b      	ldr	r3, [r7, #4]
 80052cc:	2200      	movs	r2, #0
 80052ce:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80052d2:	6878      	ldr	r0, [r7, #4]
 80052d4:	f7fd fafc 	bl	80028d0 <HAL_UART_MspInit>
 80052d8:	687b      	ldr	r3, [r7, #4]
 80052da:	2224      	movs	r2, #36	@ 0x24
 80052dc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80052e0:	687b      	ldr	r3, [r7, #4]
 80052e2:	681b      	ldr	r3, [r3, #0]
 80052e4:	68da      	ldr	r2, [r3, #12]
 80052e6:	687b      	ldr	r3, [r7, #4]
 80052e8:	681b      	ldr	r3, [r3, #0]
 80052ea:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80052ee:	60da      	str	r2, [r3, #12]
 80052f0:	6878      	ldr	r0, [r7, #4]
 80052f2:	f000 f82b 	bl	800534c <UART_SetConfig>
 80052f6:	687b      	ldr	r3, [r7, #4]
 80052f8:	681b      	ldr	r3, [r3, #0]
 80052fa:	691a      	ldr	r2, [r3, #16]
 80052fc:	687b      	ldr	r3, [r7, #4]
 80052fe:	681b      	ldr	r3, [r3, #0]
 8005300:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8005304:	611a      	str	r2, [r3, #16]
 8005306:	687b      	ldr	r3, [r7, #4]
 8005308:	681b      	ldr	r3, [r3, #0]
 800530a:	695a      	ldr	r2, [r3, #20]
 800530c:	687b      	ldr	r3, [r7, #4]
 800530e:	681b      	ldr	r3, [r3, #0]
 8005310:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8005314:	615a      	str	r2, [r3, #20]
 8005316:	687b      	ldr	r3, [r7, #4]
 8005318:	681b      	ldr	r3, [r3, #0]
 800531a:	68da      	ldr	r2, [r3, #12]
 800531c:	687b      	ldr	r3, [r7, #4]
 800531e:	681b      	ldr	r3, [r3, #0]
 8005320:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8005324:	60da      	str	r2, [r3, #12]
 8005326:	687b      	ldr	r3, [r7, #4]
 8005328:	2200      	movs	r2, #0
 800532a:	645a      	str	r2, [r3, #68]	@ 0x44
 800532c:	687b      	ldr	r3, [r7, #4]
 800532e:	2220      	movs	r2, #32
 8005330:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005334:	687b      	ldr	r3, [r7, #4]
 8005336:	2220      	movs	r2, #32
 8005338:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800533c:	687b      	ldr	r3, [r7, #4]
 800533e:	2200      	movs	r2, #0
 8005340:	635a      	str	r2, [r3, #52]	@ 0x34
 8005342:	2300      	movs	r3, #0
 8005344:	4618      	mov	r0, r3
 8005346:	3708      	adds	r7, #8
 8005348:	46bd      	mov	sp, r7
 800534a:	bd80      	pop	{r7, pc}

0800534c <UART_SetConfig>:
 800534c:	b580      	push	{r7, lr}
 800534e:	b084      	sub	sp, #16
 8005350:	af00      	add	r7, sp, #0
 8005352:	6078      	str	r0, [r7, #4]
 8005354:	687b      	ldr	r3, [r7, #4]
 8005356:	681b      	ldr	r3, [r3, #0]
 8005358:	691b      	ldr	r3, [r3, #16]
 800535a:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 800535e:	687b      	ldr	r3, [r7, #4]
 8005360:	68da      	ldr	r2, [r3, #12]
 8005362:	687b      	ldr	r3, [r7, #4]
 8005364:	681b      	ldr	r3, [r3, #0]
 8005366:	430a      	orrs	r2, r1
 8005368:	611a      	str	r2, [r3, #16]
 800536a:	687b      	ldr	r3, [r7, #4]
 800536c:	689a      	ldr	r2, [r3, #8]
 800536e:	687b      	ldr	r3, [r7, #4]
 8005370:	691b      	ldr	r3, [r3, #16]
 8005372:	431a      	orrs	r2, r3
 8005374:	687b      	ldr	r3, [r7, #4]
 8005376:	695b      	ldr	r3, [r3, #20]
 8005378:	4313      	orrs	r3, r2
 800537a:	60bb      	str	r3, [r7, #8]
 800537c:	687b      	ldr	r3, [r7, #4]
 800537e:	681b      	ldr	r3, [r3, #0]
 8005380:	68db      	ldr	r3, [r3, #12]
 8005382:	f423 53b0 	bic.w	r3, r3, #5632	@ 0x1600
 8005386:	f023 030c 	bic.w	r3, r3, #12
 800538a:	687a      	ldr	r2, [r7, #4]
 800538c:	6812      	ldr	r2, [r2, #0]
 800538e:	68b9      	ldr	r1, [r7, #8]
 8005390:	430b      	orrs	r3, r1
 8005392:	60d3      	str	r3, [r2, #12]
 8005394:	687b      	ldr	r3, [r7, #4]
 8005396:	681b      	ldr	r3, [r3, #0]
 8005398:	695b      	ldr	r3, [r3, #20]
 800539a:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 800539e:	687b      	ldr	r3, [r7, #4]
 80053a0:	699a      	ldr	r2, [r3, #24]
 80053a2:	687b      	ldr	r3, [r7, #4]
 80053a4:	681b      	ldr	r3, [r3, #0]
 80053a6:	430a      	orrs	r2, r1
 80053a8:	615a      	str	r2, [r3, #20]
 80053aa:	687b      	ldr	r3, [r7, #4]
 80053ac:	681b      	ldr	r3, [r3, #0]
 80053ae:	4a2c      	ldr	r2, [pc, #176]	@ (8005460 <UART_SetConfig+0x114>)
 80053b0:	4293      	cmp	r3, r2
 80053b2:	d103      	bne.n	80053bc <UART_SetConfig+0x70>
 80053b4:	f7fe ffa2 	bl	80042fc <HAL_RCC_GetPCLK2Freq>
 80053b8:	60f8      	str	r0, [r7, #12]
 80053ba:	e002      	b.n	80053c2 <UART_SetConfig+0x76>
 80053bc:	f7fe ff8a 	bl	80042d4 <HAL_RCC_GetPCLK1Freq>
 80053c0:	60f8      	str	r0, [r7, #12]
 80053c2:	68fa      	ldr	r2, [r7, #12]
 80053c4:	4613      	mov	r3, r2
 80053c6:	009b      	lsls	r3, r3, #2
 80053c8:	4413      	add	r3, r2
 80053ca:	009a      	lsls	r2, r3, #2
 80053cc:	441a      	add	r2, r3
 80053ce:	687b      	ldr	r3, [r7, #4]
 80053d0:	685b      	ldr	r3, [r3, #4]
 80053d2:	009b      	lsls	r3, r3, #2
 80053d4:	fbb2 f3f3 	udiv	r3, r2, r3
 80053d8:	4a22      	ldr	r2, [pc, #136]	@ (8005464 <UART_SetConfig+0x118>)
 80053da:	fba2 2303 	umull	r2, r3, r2, r3
 80053de:	095b      	lsrs	r3, r3, #5
 80053e0:	0119      	lsls	r1, r3, #4
 80053e2:	68fa      	ldr	r2, [r7, #12]
 80053e4:	4613      	mov	r3, r2
 80053e6:	009b      	lsls	r3, r3, #2
 80053e8:	4413      	add	r3, r2
 80053ea:	009a      	lsls	r2, r3, #2
 80053ec:	441a      	add	r2, r3
 80053ee:	687b      	ldr	r3, [r7, #4]
 80053f0:	685b      	ldr	r3, [r3, #4]
 80053f2:	009b      	lsls	r3, r3, #2
 80053f4:	fbb2 f2f3 	udiv	r2, r2, r3
 80053f8:	4b1a      	ldr	r3, [pc, #104]	@ (8005464 <UART_SetConfig+0x118>)
 80053fa:	fba3 0302 	umull	r0, r3, r3, r2
 80053fe:	095b      	lsrs	r3, r3, #5
 8005400:	2064      	movs	r0, #100	@ 0x64
 8005402:	fb00 f303 	mul.w	r3, r0, r3
 8005406:	1ad3      	subs	r3, r2, r3
 8005408:	011b      	lsls	r3, r3, #4
 800540a:	3332      	adds	r3, #50	@ 0x32
 800540c:	4a15      	ldr	r2, [pc, #84]	@ (8005464 <UART_SetConfig+0x118>)
 800540e:	fba2 2303 	umull	r2, r3, r2, r3
 8005412:	095b      	lsrs	r3, r3, #5
 8005414:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8005418:	4419      	add	r1, r3
 800541a:	68fa      	ldr	r2, [r7, #12]
 800541c:	4613      	mov	r3, r2
 800541e:	009b      	lsls	r3, r3, #2
 8005420:	4413      	add	r3, r2
 8005422:	009a      	lsls	r2, r3, #2
 8005424:	441a      	add	r2, r3
 8005426:	687b      	ldr	r3, [r7, #4]
 8005428:	685b      	ldr	r3, [r3, #4]
 800542a:	009b      	lsls	r3, r3, #2
 800542c:	fbb2 f2f3 	udiv	r2, r2, r3
 8005430:	4b0c      	ldr	r3, [pc, #48]	@ (8005464 <UART_SetConfig+0x118>)
 8005432:	fba3 0302 	umull	r0, r3, r3, r2
 8005436:	095b      	lsrs	r3, r3, #5
 8005438:	2064      	movs	r0, #100	@ 0x64
 800543a:	fb00 f303 	mul.w	r3, r0, r3
 800543e:	1ad3      	subs	r3, r2, r3
 8005440:	011b      	lsls	r3, r3, #4
 8005442:	3332      	adds	r3, #50	@ 0x32
 8005444:	4a07      	ldr	r2, [pc, #28]	@ (8005464 <UART_SetConfig+0x118>)
 8005446:	fba2 2303 	umull	r2, r3, r2, r3
 800544a:	095b      	lsrs	r3, r3, #5
 800544c:	f003 020f 	and.w	r2, r3, #15
 8005450:	687b      	ldr	r3, [r7, #4]
 8005452:	681b      	ldr	r3, [r3, #0]
 8005454:	440a      	add	r2, r1
 8005456:	609a      	str	r2, [r3, #8]
 8005458:	bf00      	nop
 800545a:	3710      	adds	r7, #16
 800545c:	46bd      	mov	sp, r7
 800545e:	bd80      	pop	{r7, pc}
 8005460:	40013800 	.word	0x40013800
 8005464:	51eb851f 	.word	0x51eb851f

08005468 <MX_FATFS_Init>:
/* USER CODE BEGIN Variables */

/* USER CODE END Variables */

void MX_FATFS_Init(void)
{
 8005468:	b580      	push	{r7, lr}
 800546a:	af00      	add	r7, sp, #0
  /*## FatFS: Link the USER driver ###########################*/
  retUSER = FATFS_LinkDriver(&USER_Driver, USERPath);
 800546c:	4904      	ldr	r1, [pc, #16]	@ (8005480 <MX_FATFS_Init+0x18>)
 800546e:	4805      	ldr	r0, [pc, #20]	@ (8005484 <MX_FATFS_Init+0x1c>)
 8005470:	f000 f8a6 	bl	80055c0 <FATFS_LinkDriver>
 8005474:	4603      	mov	r3, r0
 8005476:	461a      	mov	r2, r3
 8005478:	4b03      	ldr	r3, [pc, #12]	@ (8005488 <MX_FATFS_Init+0x20>)
 800547a:	701a      	strb	r2, [r3, #0]

  /* USER CODE BEGIN Init */
  /* additional user code for init */
  /* USER CODE END Init */
}
 800547c:	bf00      	nop
 800547e:	bd80      	pop	{r7, pc}
 8005480:	20000510 	.word	0x20000510
 8005484:	2000000c 	.word	0x2000000c
 8005488:	2000050c 	.word	0x2000050c

0800548c <USER_initialize>:
  * @retval DSTATUS: Operation status
  */
DSTATUS USER_initialize (
	BYTE pdrv           /* Physical drive nmuber to identify the drive */
)
{
 800548c:	b480      	push	{r7}
 800548e:	b083      	sub	sp, #12
 8005490:	af00      	add	r7, sp, #0
 8005492:	4603      	mov	r3, r0
 8005494:	71fb      	strb	r3, [r7, #7]
  /* USER CODE BEGIN INIT */
    Stat = STA_NOINIT;
 8005496:	4b05      	ldr	r3, [pc, #20]	@ (80054ac <USER_initialize+0x20>)
 8005498:	2201      	movs	r2, #1
 800549a:	701a      	strb	r2, [r3, #0]
    return Stat;
 800549c:	4b03      	ldr	r3, [pc, #12]	@ (80054ac <USER_initialize+0x20>)
 800549e:	781b      	ldrb	r3, [r3, #0]
 80054a0:	b2db      	uxtb	r3, r3
  /* USER CODE END INIT */
}
 80054a2:	4618      	mov	r0, r3
 80054a4:	370c      	adds	r7, #12
 80054a6:	46bd      	mov	sp, r7
 80054a8:	bc80      	pop	{r7}
 80054aa:	4770      	bx	lr
 80054ac:	20000009 	.word	0x20000009

080054b0 <USER_status>:
  * @retval DSTATUS: Operation status
  */
DSTATUS USER_status (
	BYTE pdrv       /* Physical drive number to identify the drive */
)
{
 80054b0:	b480      	push	{r7}
 80054b2:	b083      	sub	sp, #12
 80054b4:	af00      	add	r7, sp, #0
 80054b6:	4603      	mov	r3, r0
 80054b8:	71fb      	strb	r3, [r7, #7]
  /* USER CODE BEGIN STATUS */
    Stat = STA_NOINIT;
 80054ba:	4b05      	ldr	r3, [pc, #20]	@ (80054d0 <USER_status+0x20>)
 80054bc:	2201      	movs	r2, #1
 80054be:	701a      	strb	r2, [r3, #0]
    return Stat;
 80054c0:	4b03      	ldr	r3, [pc, #12]	@ (80054d0 <USER_status+0x20>)
 80054c2:	781b      	ldrb	r3, [r3, #0]
 80054c4:	b2db      	uxtb	r3, r3
  /* USER CODE END STATUS */
}
 80054c6:	4618      	mov	r0, r3
 80054c8:	370c      	adds	r7, #12
 80054ca:	46bd      	mov	sp, r7
 80054cc:	bc80      	pop	{r7}
 80054ce:	4770      	bx	lr
 80054d0:	20000009 	.word	0x20000009

080054d4 <USER_read>:
	BYTE pdrv,      /* Physical drive nmuber to identify the drive */
	BYTE *buff,     /* Data buffer to store read data */
	DWORD sector,   /* Sector address in LBA */
	UINT count      /* Number of sectors to read */
)
{
 80054d4:	b480      	push	{r7}
 80054d6:	b085      	sub	sp, #20
 80054d8:	af00      	add	r7, sp, #0
 80054da:	60b9      	str	r1, [r7, #8]
 80054dc:	607a      	str	r2, [r7, #4]
 80054de:	603b      	str	r3, [r7, #0]
 80054e0:	4603      	mov	r3, r0
 80054e2:	73fb      	strb	r3, [r7, #15]
  /* USER CODE BEGIN READ */
    return RES_OK;
 80054e4:	2300      	movs	r3, #0
  /* USER CODE END READ */
}
 80054e6:	4618      	mov	r0, r3
 80054e8:	3714      	adds	r7, #20
 80054ea:	46bd      	mov	sp, r7
 80054ec:	bc80      	pop	{r7}
 80054ee:	4770      	bx	lr

080054f0 <USER_write>:
	BYTE pdrv,          /* Physical drive nmuber to identify the drive */
	const BYTE *buff,   /* Data to be written */
	DWORD sector,       /* Sector address in LBA */
	UINT count          /* Number of sectors to write */
)
{
 80054f0:	b480      	push	{r7}
 80054f2:	b085      	sub	sp, #20
 80054f4:	af00      	add	r7, sp, #0
 80054f6:	60b9      	str	r1, [r7, #8]
 80054f8:	607a      	str	r2, [r7, #4]
 80054fa:	603b      	str	r3, [r7, #0]
 80054fc:	4603      	mov	r3, r0
 80054fe:	73fb      	strb	r3, [r7, #15]
  /* USER CODE BEGIN WRITE */
  /* USER CODE HERE */
    return RES_OK;
 8005500:	2300      	movs	r3, #0
  /* USER CODE END WRITE */
}
 8005502:	4618      	mov	r0, r3
 8005504:	3714      	adds	r7, #20
 8005506:	46bd      	mov	sp, r7
 8005508:	bc80      	pop	{r7}
 800550a:	4770      	bx	lr

0800550c <USER_ioctl>:
DRESULT USER_ioctl (
	BYTE pdrv,      /* Physical drive nmuber (0..) */
	BYTE cmd,       /* Control code */
	void *buff      /* Buffer to send/receive control data */
)
{
 800550c:	b480      	push	{r7}
 800550e:	b085      	sub	sp, #20
 8005510:	af00      	add	r7, sp, #0
 8005512:	4603      	mov	r3, r0
 8005514:	603a      	str	r2, [r7, #0]
 8005516:	71fb      	strb	r3, [r7, #7]
 8005518:	460b      	mov	r3, r1
 800551a:	71bb      	strb	r3, [r7, #6]
  /* USER CODE BEGIN IOCTL */
    DRESULT res = RES_ERROR;
 800551c:	2301      	movs	r3, #1
 800551e:	73fb      	strb	r3, [r7, #15]
    return res;
 8005520:	7bfb      	ldrb	r3, [r7, #15]
  /* USER CODE END IOCTL */
}
 8005522:	4618      	mov	r0, r3
 8005524:	3714      	adds	r7, #20
 8005526:	46bd      	mov	sp, r7
 8005528:	bc80      	pop	{r7}
 800552a:	4770      	bx	lr

0800552c <FATFS_LinkDriverEx>:
  * @param  lun : only used for USB Key Disk to add multi-lun management
            else the paramter must be equal to 0
  * @retval Returns 0 in case of success, otherwise 1.
  */
uint8_t FATFS_LinkDriverEx(Diskio_drvTypeDef *drv, char *path, uint8_t lun)
{
 800552c:	b480      	push	{r7}
 800552e:	b087      	sub	sp, #28
 8005530:	af00      	add	r7, sp, #0
 8005532:	60f8      	str	r0, [r7, #12]
 8005534:	60b9      	str	r1, [r7, #8]
 8005536:	4613      	mov	r3, r2
 8005538:	71fb      	strb	r3, [r7, #7]
  uint8_t ret = 1;
 800553a:	2301      	movs	r3, #1
 800553c:	75fb      	strb	r3, [r7, #23]
  uint8_t DiskNum = 0;
 800553e:	2300      	movs	r3, #0
 8005540:	75bb      	strb	r3, [r7, #22]
  
  if(disk.nbr <= _VOLUMES)
 8005542:	4b1e      	ldr	r3, [pc, #120]	@ (80055bc <FATFS_LinkDriverEx+0x90>)
 8005544:	7a5b      	ldrb	r3, [r3, #9]
 8005546:	b2db      	uxtb	r3, r3
 8005548:	2b01      	cmp	r3, #1
 800554a:	d831      	bhi.n	80055b0 <FATFS_LinkDriverEx+0x84>
  {
    disk.is_initialized[disk.nbr] = 0;
 800554c:	4b1b      	ldr	r3, [pc, #108]	@ (80055bc <FATFS_LinkDriverEx+0x90>)
 800554e:	7a5b      	ldrb	r3, [r3, #9]
 8005550:	b2db      	uxtb	r3, r3
 8005552:	461a      	mov	r2, r3
 8005554:	4b19      	ldr	r3, [pc, #100]	@ (80055bc <FATFS_LinkDriverEx+0x90>)
 8005556:	2100      	movs	r1, #0
 8005558:	5499      	strb	r1, [r3, r2]
    disk.drv[disk.nbr] = drv;  
 800555a:	4b18      	ldr	r3, [pc, #96]	@ (80055bc <FATFS_LinkDriverEx+0x90>)
 800555c:	7a5b      	ldrb	r3, [r3, #9]
 800555e:	b2db      	uxtb	r3, r3
 8005560:	4a16      	ldr	r2, [pc, #88]	@ (80055bc <FATFS_LinkDriverEx+0x90>)
 8005562:	009b      	lsls	r3, r3, #2
 8005564:	4413      	add	r3, r2
 8005566:	68fa      	ldr	r2, [r7, #12]
 8005568:	605a      	str	r2, [r3, #4]
    disk.lun[disk.nbr] = lun;  
 800556a:	4b14      	ldr	r3, [pc, #80]	@ (80055bc <FATFS_LinkDriverEx+0x90>)
 800556c:	7a5b      	ldrb	r3, [r3, #9]
 800556e:	b2db      	uxtb	r3, r3
 8005570:	461a      	mov	r2, r3
 8005572:	4b12      	ldr	r3, [pc, #72]	@ (80055bc <FATFS_LinkDriverEx+0x90>)
 8005574:	4413      	add	r3, r2
 8005576:	79fa      	ldrb	r2, [r7, #7]
 8005578:	721a      	strb	r2, [r3, #8]
    DiskNum = disk.nbr++;
 800557a:	4b10      	ldr	r3, [pc, #64]	@ (80055bc <FATFS_LinkDriverEx+0x90>)
 800557c:	7a5b      	ldrb	r3, [r3, #9]
 800557e:	b2db      	uxtb	r3, r3
 8005580:	1c5a      	adds	r2, r3, #1
 8005582:	b2d1      	uxtb	r1, r2
 8005584:	4a0d      	ldr	r2, [pc, #52]	@ (80055bc <FATFS_LinkDriverEx+0x90>)
 8005586:	7251      	strb	r1, [r2, #9]
 8005588:	75bb      	strb	r3, [r7, #22]
    path[0] = DiskNum + '0';
 800558a:	7dbb      	ldrb	r3, [r7, #22]
 800558c:	3330      	adds	r3, #48	@ 0x30
 800558e:	b2da      	uxtb	r2, r3
 8005590:	68bb      	ldr	r3, [r7, #8]
 8005592:	701a      	strb	r2, [r3, #0]
    path[1] = ':';
 8005594:	68bb      	ldr	r3, [r7, #8]
 8005596:	3301      	adds	r3, #1
 8005598:	223a      	movs	r2, #58	@ 0x3a
 800559a:	701a      	strb	r2, [r3, #0]
    path[2] = '/';
 800559c:	68bb      	ldr	r3, [r7, #8]
 800559e:	3302      	adds	r3, #2
 80055a0:	222f      	movs	r2, #47	@ 0x2f
 80055a2:	701a      	strb	r2, [r3, #0]
    path[3] = 0;
 80055a4:	68bb      	ldr	r3, [r7, #8]
 80055a6:	3303      	adds	r3, #3
 80055a8:	2200      	movs	r2, #0
 80055aa:	701a      	strb	r2, [r3, #0]
    ret = 0;
 80055ac:	2300      	movs	r3, #0
 80055ae:	75fb      	strb	r3, [r7, #23]
  }
  
  return ret;
 80055b0:	7dfb      	ldrb	r3, [r7, #23]
}
 80055b2:	4618      	mov	r0, r3
 80055b4:	371c      	adds	r7, #28
 80055b6:	46bd      	mov	sp, r7
 80055b8:	bc80      	pop	{r7}
 80055ba:	4770      	bx	lr
 80055bc:	20000514 	.word	0x20000514

080055c0 <FATFS_LinkDriver>:
  * @param  drv: pointer to the disk IO Driver structure
  * @param  path: pointer to the logical drive path 
  * @retval Returns 0 in case of success, otherwise 1.
  */
uint8_t FATFS_LinkDriver(Diskio_drvTypeDef *drv, char *path)
{
 80055c0:	b580      	push	{r7, lr}
 80055c2:	b082      	sub	sp, #8
 80055c4:	af00      	add	r7, sp, #0
 80055c6:	6078      	str	r0, [r7, #4]
 80055c8:	6039      	str	r1, [r7, #0]
  return FATFS_LinkDriverEx(drv, path, 0);
 80055ca:	2200      	movs	r2, #0
 80055cc:	6839      	ldr	r1, [r7, #0]
 80055ce:	6878      	ldr	r0, [r7, #4]
 80055d0:	f7ff ffac 	bl	800552c <FATFS_LinkDriverEx>
 80055d4:	4603      	mov	r3, r0
}
 80055d6:	4618      	mov	r0, r3
 80055d8:	3708      	adds	r7, #8
 80055da:	46bd      	mov	sp, r7
 80055dc:	bd80      	pop	{r7, pc}
	...

080055e0 <malloc>:
 80055e0:	4b02      	ldr	r3, [pc, #8]	@ (80055ec <malloc+0xc>)
 80055e2:	4601      	mov	r1, r0
 80055e4:	6818      	ldr	r0, [r3, #0]
 80055e6:	f000 b825 	b.w	8005634 <_malloc_r>
 80055ea:	bf00      	nop
 80055ec:	20000198 	.word	0x20000198

080055f0 <sbrk_aligned>:
 80055f0:	b570      	push	{r4, r5, r6, lr}
 80055f2:	4e0f      	ldr	r6, [pc, #60]	@ (8005630 <sbrk_aligned+0x40>)
 80055f4:	460c      	mov	r4, r1
 80055f6:	6831      	ldr	r1, [r6, #0]
 80055f8:	4605      	mov	r5, r0
 80055fa:	b911      	cbnz	r1, 8005602 <sbrk_aligned+0x12>
 80055fc:	f000 ff4c 	bl	8006498 <_sbrk_r>
 8005600:	6030      	str	r0, [r6, #0]
 8005602:	4621      	mov	r1, r4
 8005604:	4628      	mov	r0, r5
 8005606:	f000 ff47 	bl	8006498 <_sbrk_r>
 800560a:	1c43      	adds	r3, r0, #1
 800560c:	d103      	bne.n	8005616 <sbrk_aligned+0x26>
 800560e:	f04f 34ff 	mov.w	r4, #4294967295
 8005612:	4620      	mov	r0, r4
 8005614:	bd70      	pop	{r4, r5, r6, pc}
 8005616:	1cc4      	adds	r4, r0, #3
 8005618:	f024 0403 	bic.w	r4, r4, #3
 800561c:	42a0      	cmp	r0, r4
 800561e:	d0f8      	beq.n	8005612 <sbrk_aligned+0x22>
 8005620:	1a21      	subs	r1, r4, r0
 8005622:	4628      	mov	r0, r5
 8005624:	f000 ff38 	bl	8006498 <_sbrk_r>
 8005628:	3001      	adds	r0, #1
 800562a:	d1f2      	bne.n	8005612 <sbrk_aligned+0x22>
 800562c:	e7ef      	b.n	800560e <sbrk_aligned+0x1e>
 800562e:	bf00      	nop
 8005630:	20000520 	.word	0x20000520

08005634 <_malloc_r>:
 8005634:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005638:	1ccd      	adds	r5, r1, #3
 800563a:	f025 0503 	bic.w	r5, r5, #3
 800563e:	3508      	adds	r5, #8
 8005640:	2d0c      	cmp	r5, #12
 8005642:	bf38      	it	cc
 8005644:	250c      	movcc	r5, #12
 8005646:	2d00      	cmp	r5, #0
 8005648:	4606      	mov	r6, r0
 800564a:	db01      	blt.n	8005650 <_malloc_r+0x1c>
 800564c:	42a9      	cmp	r1, r5
 800564e:	d904      	bls.n	800565a <_malloc_r+0x26>
 8005650:	230c      	movs	r3, #12
 8005652:	6033      	str	r3, [r6, #0]
 8005654:	2000      	movs	r0, #0
 8005656:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800565a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8005730 <_malloc_r+0xfc>
 800565e:	f000 f869 	bl	8005734 <__malloc_lock>
 8005662:	f8d8 3000 	ldr.w	r3, [r8]
 8005666:	461c      	mov	r4, r3
 8005668:	bb44      	cbnz	r4, 80056bc <_malloc_r+0x88>
 800566a:	4629      	mov	r1, r5
 800566c:	4630      	mov	r0, r6
 800566e:	f7ff ffbf 	bl	80055f0 <sbrk_aligned>
 8005672:	1c43      	adds	r3, r0, #1
 8005674:	4604      	mov	r4, r0
 8005676:	d158      	bne.n	800572a <_malloc_r+0xf6>
 8005678:	f8d8 4000 	ldr.w	r4, [r8]
 800567c:	4627      	mov	r7, r4
 800567e:	2f00      	cmp	r7, #0
 8005680:	d143      	bne.n	800570a <_malloc_r+0xd6>
 8005682:	2c00      	cmp	r4, #0
 8005684:	d04b      	beq.n	800571e <_malloc_r+0xea>
 8005686:	6823      	ldr	r3, [r4, #0]
 8005688:	4639      	mov	r1, r7
 800568a:	4630      	mov	r0, r6
 800568c:	eb04 0903 	add.w	r9, r4, r3
 8005690:	f000 ff02 	bl	8006498 <_sbrk_r>
 8005694:	4581      	cmp	r9, r0
 8005696:	d142      	bne.n	800571e <_malloc_r+0xea>
 8005698:	6821      	ldr	r1, [r4, #0]
 800569a:	4630      	mov	r0, r6
 800569c:	1a6d      	subs	r5, r5, r1
 800569e:	4629      	mov	r1, r5
 80056a0:	f7ff ffa6 	bl	80055f0 <sbrk_aligned>
 80056a4:	3001      	adds	r0, #1
 80056a6:	d03a      	beq.n	800571e <_malloc_r+0xea>
 80056a8:	6823      	ldr	r3, [r4, #0]
 80056aa:	442b      	add	r3, r5
 80056ac:	6023      	str	r3, [r4, #0]
 80056ae:	f8d8 3000 	ldr.w	r3, [r8]
 80056b2:	685a      	ldr	r2, [r3, #4]
 80056b4:	bb62      	cbnz	r2, 8005710 <_malloc_r+0xdc>
 80056b6:	f8c8 7000 	str.w	r7, [r8]
 80056ba:	e00f      	b.n	80056dc <_malloc_r+0xa8>
 80056bc:	6822      	ldr	r2, [r4, #0]
 80056be:	1b52      	subs	r2, r2, r5
 80056c0:	d420      	bmi.n	8005704 <_malloc_r+0xd0>
 80056c2:	2a0b      	cmp	r2, #11
 80056c4:	d917      	bls.n	80056f6 <_malloc_r+0xc2>
 80056c6:	1961      	adds	r1, r4, r5
 80056c8:	42a3      	cmp	r3, r4
 80056ca:	6025      	str	r5, [r4, #0]
 80056cc:	bf18      	it	ne
 80056ce:	6059      	strne	r1, [r3, #4]
 80056d0:	6863      	ldr	r3, [r4, #4]
 80056d2:	bf08      	it	eq
 80056d4:	f8c8 1000 	streq.w	r1, [r8]
 80056d8:	5162      	str	r2, [r4, r5]
 80056da:	604b      	str	r3, [r1, #4]
 80056dc:	4630      	mov	r0, r6
 80056de:	f000 f82f 	bl	8005740 <__malloc_unlock>
 80056e2:	f104 000b 	add.w	r0, r4, #11
 80056e6:	1d23      	adds	r3, r4, #4
 80056e8:	f020 0007 	bic.w	r0, r0, #7
 80056ec:	1ac2      	subs	r2, r0, r3
 80056ee:	bf1c      	itt	ne
 80056f0:	1a1b      	subne	r3, r3, r0
 80056f2:	50a3      	strne	r3, [r4, r2]
 80056f4:	e7af      	b.n	8005656 <_malloc_r+0x22>
 80056f6:	6862      	ldr	r2, [r4, #4]
 80056f8:	42a3      	cmp	r3, r4
 80056fa:	bf0c      	ite	eq
 80056fc:	f8c8 2000 	streq.w	r2, [r8]
 8005700:	605a      	strne	r2, [r3, #4]
 8005702:	e7eb      	b.n	80056dc <_malloc_r+0xa8>
 8005704:	4623      	mov	r3, r4
 8005706:	6864      	ldr	r4, [r4, #4]
 8005708:	e7ae      	b.n	8005668 <_malloc_r+0x34>
 800570a:	463c      	mov	r4, r7
 800570c:	687f      	ldr	r7, [r7, #4]
 800570e:	e7b6      	b.n	800567e <_malloc_r+0x4a>
 8005710:	461a      	mov	r2, r3
 8005712:	685b      	ldr	r3, [r3, #4]
 8005714:	42a3      	cmp	r3, r4
 8005716:	d1fb      	bne.n	8005710 <_malloc_r+0xdc>
 8005718:	2300      	movs	r3, #0
 800571a:	6053      	str	r3, [r2, #4]
 800571c:	e7de      	b.n	80056dc <_malloc_r+0xa8>
 800571e:	230c      	movs	r3, #12
 8005720:	4630      	mov	r0, r6
 8005722:	6033      	str	r3, [r6, #0]
 8005724:	f000 f80c 	bl	8005740 <__malloc_unlock>
 8005728:	e794      	b.n	8005654 <_malloc_r+0x20>
 800572a:	6005      	str	r5, [r0, #0]
 800572c:	e7d6      	b.n	80056dc <_malloc_r+0xa8>
 800572e:	bf00      	nop
 8005730:	20000524 	.word	0x20000524

08005734 <__malloc_lock>:
 8005734:	4801      	ldr	r0, [pc, #4]	@ (800573c <__malloc_lock+0x8>)
 8005736:	f000 befc 	b.w	8006532 <__retarget_lock_acquire_recursive>
 800573a:	bf00      	nop
 800573c:	20000668 	.word	0x20000668

08005740 <__malloc_unlock>:
 8005740:	4801      	ldr	r0, [pc, #4]	@ (8005748 <__malloc_unlock+0x8>)
 8005742:	f000 bef7 	b.w	8006534 <__retarget_lock_release_recursive>
 8005746:	bf00      	nop
 8005748:	20000668 	.word	0x20000668

0800574c <__cvt>:
 800574c:	2b00      	cmp	r3, #0
 800574e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005752:	461d      	mov	r5, r3
 8005754:	bfbb      	ittet	lt
 8005756:	f103 4300 	addlt.w	r3, r3, #2147483648	@ 0x80000000
 800575a:	461d      	movlt	r5, r3
 800575c:	2300      	movge	r3, #0
 800575e:	232d      	movlt	r3, #45	@ 0x2d
 8005760:	b088      	sub	sp, #32
 8005762:	4614      	mov	r4, r2
 8005764:	bfb8      	it	lt
 8005766:	4614      	movlt	r4, r2
 8005768:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800576a:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 800576c:	7013      	strb	r3, [r2, #0]
 800576e:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8005770:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 8005774:	f023 0820 	bic.w	r8, r3, #32
 8005778:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 800577c:	d005      	beq.n	800578a <__cvt+0x3e>
 800577e:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8005782:	d100      	bne.n	8005786 <__cvt+0x3a>
 8005784:	3601      	adds	r6, #1
 8005786:	2302      	movs	r3, #2
 8005788:	e000      	b.n	800578c <__cvt+0x40>
 800578a:	2303      	movs	r3, #3
 800578c:	aa07      	add	r2, sp, #28
 800578e:	9204      	str	r2, [sp, #16]
 8005790:	aa06      	add	r2, sp, #24
 8005792:	e9cd a202 	strd	sl, r2, [sp, #8]
 8005796:	e9cd 3600 	strd	r3, r6, [sp]
 800579a:	4622      	mov	r2, r4
 800579c:	462b      	mov	r3, r5
 800579e:	f000 ff8f 	bl	80066c0 <_dtoa_r>
 80057a2:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 80057a6:	4607      	mov	r7, r0
 80057a8:	d119      	bne.n	80057de <__cvt+0x92>
 80057aa:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80057ac:	07db      	lsls	r3, r3, #31
 80057ae:	d50e      	bpl.n	80057ce <__cvt+0x82>
 80057b0:	eb00 0906 	add.w	r9, r0, r6
 80057b4:	2200      	movs	r2, #0
 80057b6:	2300      	movs	r3, #0
 80057b8:	4620      	mov	r0, r4
 80057ba:	4629      	mov	r1, r5
 80057bc:	f7fb f8f4 	bl	80009a8 <__aeabi_dcmpeq>
 80057c0:	b108      	cbz	r0, 80057c6 <__cvt+0x7a>
 80057c2:	f8cd 901c 	str.w	r9, [sp, #28]
 80057c6:	2230      	movs	r2, #48	@ 0x30
 80057c8:	9b07      	ldr	r3, [sp, #28]
 80057ca:	454b      	cmp	r3, r9
 80057cc:	d31e      	bcc.n	800580c <__cvt+0xc0>
 80057ce:	4638      	mov	r0, r7
 80057d0:	9b07      	ldr	r3, [sp, #28]
 80057d2:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 80057d4:	1bdb      	subs	r3, r3, r7
 80057d6:	6013      	str	r3, [r2, #0]
 80057d8:	b008      	add	sp, #32
 80057da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80057de:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 80057e2:	eb00 0906 	add.w	r9, r0, r6
 80057e6:	d1e5      	bne.n	80057b4 <__cvt+0x68>
 80057e8:	7803      	ldrb	r3, [r0, #0]
 80057ea:	2b30      	cmp	r3, #48	@ 0x30
 80057ec:	d10a      	bne.n	8005804 <__cvt+0xb8>
 80057ee:	2200      	movs	r2, #0
 80057f0:	2300      	movs	r3, #0
 80057f2:	4620      	mov	r0, r4
 80057f4:	4629      	mov	r1, r5
 80057f6:	f7fb f8d7 	bl	80009a8 <__aeabi_dcmpeq>
 80057fa:	b918      	cbnz	r0, 8005804 <__cvt+0xb8>
 80057fc:	f1c6 0601 	rsb	r6, r6, #1
 8005800:	f8ca 6000 	str.w	r6, [sl]
 8005804:	f8da 3000 	ldr.w	r3, [sl]
 8005808:	4499      	add	r9, r3
 800580a:	e7d3      	b.n	80057b4 <__cvt+0x68>
 800580c:	1c59      	adds	r1, r3, #1
 800580e:	9107      	str	r1, [sp, #28]
 8005810:	701a      	strb	r2, [r3, #0]
 8005812:	e7d9      	b.n	80057c8 <__cvt+0x7c>

08005814 <__exponent>:
 8005814:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005816:	2900      	cmp	r1, #0
 8005818:	bfb6      	itet	lt
 800581a:	232d      	movlt	r3, #45	@ 0x2d
 800581c:	232b      	movge	r3, #43	@ 0x2b
 800581e:	4249      	neglt	r1, r1
 8005820:	2909      	cmp	r1, #9
 8005822:	7002      	strb	r2, [r0, #0]
 8005824:	7043      	strb	r3, [r0, #1]
 8005826:	dd29      	ble.n	800587c <__exponent+0x68>
 8005828:	f10d 0307 	add.w	r3, sp, #7
 800582c:	461d      	mov	r5, r3
 800582e:	270a      	movs	r7, #10
 8005830:	fbb1 f6f7 	udiv	r6, r1, r7
 8005834:	461a      	mov	r2, r3
 8005836:	fb07 1416 	mls	r4, r7, r6, r1
 800583a:	3430      	adds	r4, #48	@ 0x30
 800583c:	f802 4c01 	strb.w	r4, [r2, #-1]
 8005840:	460c      	mov	r4, r1
 8005842:	2c63      	cmp	r4, #99	@ 0x63
 8005844:	4631      	mov	r1, r6
 8005846:	f103 33ff 	add.w	r3, r3, #4294967295
 800584a:	dcf1      	bgt.n	8005830 <__exponent+0x1c>
 800584c:	3130      	adds	r1, #48	@ 0x30
 800584e:	1e94      	subs	r4, r2, #2
 8005850:	f803 1c01 	strb.w	r1, [r3, #-1]
 8005854:	4623      	mov	r3, r4
 8005856:	1c41      	adds	r1, r0, #1
 8005858:	42ab      	cmp	r3, r5
 800585a:	d30a      	bcc.n	8005872 <__exponent+0x5e>
 800585c:	f10d 0309 	add.w	r3, sp, #9
 8005860:	1a9b      	subs	r3, r3, r2
 8005862:	42ac      	cmp	r4, r5
 8005864:	bf88      	it	hi
 8005866:	2300      	movhi	r3, #0
 8005868:	3302      	adds	r3, #2
 800586a:	4403      	add	r3, r0
 800586c:	1a18      	subs	r0, r3, r0
 800586e:	b003      	add	sp, #12
 8005870:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005872:	f813 6b01 	ldrb.w	r6, [r3], #1
 8005876:	f801 6f01 	strb.w	r6, [r1, #1]!
 800587a:	e7ed      	b.n	8005858 <__exponent+0x44>
 800587c:	2330      	movs	r3, #48	@ 0x30
 800587e:	3130      	adds	r1, #48	@ 0x30
 8005880:	7083      	strb	r3, [r0, #2]
 8005882:	70c1      	strb	r1, [r0, #3]
 8005884:	1d03      	adds	r3, r0, #4
 8005886:	e7f1      	b.n	800586c <__exponent+0x58>

08005888 <_printf_float>:
 8005888:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800588c:	b091      	sub	sp, #68	@ 0x44
 800588e:	460c      	mov	r4, r1
 8005890:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
 8005894:	4616      	mov	r6, r2
 8005896:	461f      	mov	r7, r3
 8005898:	4605      	mov	r5, r0
 800589a:	f000 fdc5 	bl	8006428 <_localeconv_r>
 800589e:	6803      	ldr	r3, [r0, #0]
 80058a0:	4618      	mov	r0, r3
 80058a2:	9308      	str	r3, [sp, #32]
 80058a4:	f7fa fc54 	bl	8000150 <strlen>
 80058a8:	2300      	movs	r3, #0
 80058aa:	930e      	str	r3, [sp, #56]	@ 0x38
 80058ac:	f8d8 3000 	ldr.w	r3, [r8]
 80058b0:	9009      	str	r0, [sp, #36]	@ 0x24
 80058b2:	3307      	adds	r3, #7
 80058b4:	f023 0307 	bic.w	r3, r3, #7
 80058b8:	f103 0208 	add.w	r2, r3, #8
 80058bc:	f894 a018 	ldrb.w	sl, [r4, #24]
 80058c0:	f8d4 b000 	ldr.w	fp, [r4]
 80058c4:	f8c8 2000 	str.w	r2, [r8]
 80058c8:	e9d3 8900 	ldrd	r8, r9, [r3]
 80058cc:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 80058d0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80058d2:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 80058d6:	f04f 32ff 	mov.w	r2, #4294967295
 80058da:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80058de:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 80058e2:	4b9c      	ldr	r3, [pc, #624]	@ (8005b54 <_printf_float+0x2cc>)
 80058e4:	f7fb f892 	bl	8000a0c <__aeabi_dcmpun>
 80058e8:	bb70      	cbnz	r0, 8005948 <_printf_float+0xc0>
 80058ea:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80058ee:	f04f 32ff 	mov.w	r2, #4294967295
 80058f2:	4b98      	ldr	r3, [pc, #608]	@ (8005b54 <_printf_float+0x2cc>)
 80058f4:	f7fb f86c 	bl	80009d0 <__aeabi_dcmple>
 80058f8:	bb30      	cbnz	r0, 8005948 <_printf_float+0xc0>
 80058fa:	2200      	movs	r2, #0
 80058fc:	2300      	movs	r3, #0
 80058fe:	4640      	mov	r0, r8
 8005900:	4649      	mov	r1, r9
 8005902:	f7fb f85b 	bl	80009bc <__aeabi_dcmplt>
 8005906:	b110      	cbz	r0, 800590e <_printf_float+0x86>
 8005908:	232d      	movs	r3, #45	@ 0x2d
 800590a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800590e:	4a92      	ldr	r2, [pc, #584]	@ (8005b58 <_printf_float+0x2d0>)
 8005910:	4b92      	ldr	r3, [pc, #584]	@ (8005b5c <_printf_float+0x2d4>)
 8005912:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8005916:	bf94      	ite	ls
 8005918:	4690      	movls	r8, r2
 800591a:	4698      	movhi	r8, r3
 800591c:	2303      	movs	r3, #3
 800591e:	f04f 0900 	mov.w	r9, #0
 8005922:	6123      	str	r3, [r4, #16]
 8005924:	f02b 0304 	bic.w	r3, fp, #4
 8005928:	6023      	str	r3, [r4, #0]
 800592a:	4633      	mov	r3, r6
 800592c:	4621      	mov	r1, r4
 800592e:	4628      	mov	r0, r5
 8005930:	9700      	str	r7, [sp, #0]
 8005932:	aa0f      	add	r2, sp, #60	@ 0x3c
 8005934:	f000 f9d4 	bl	8005ce0 <_printf_common>
 8005938:	3001      	adds	r0, #1
 800593a:	f040 8090 	bne.w	8005a5e <_printf_float+0x1d6>
 800593e:	f04f 30ff 	mov.w	r0, #4294967295
 8005942:	b011      	add	sp, #68	@ 0x44
 8005944:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005948:	4642      	mov	r2, r8
 800594a:	464b      	mov	r3, r9
 800594c:	4640      	mov	r0, r8
 800594e:	4649      	mov	r1, r9
 8005950:	f7fb f85c 	bl	8000a0c <__aeabi_dcmpun>
 8005954:	b148      	cbz	r0, 800596a <_printf_float+0xe2>
 8005956:	464b      	mov	r3, r9
 8005958:	2b00      	cmp	r3, #0
 800595a:	bfb8      	it	lt
 800595c:	232d      	movlt	r3, #45	@ 0x2d
 800595e:	4a80      	ldr	r2, [pc, #512]	@ (8005b60 <_printf_float+0x2d8>)
 8005960:	bfb8      	it	lt
 8005962:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8005966:	4b7f      	ldr	r3, [pc, #508]	@ (8005b64 <_printf_float+0x2dc>)
 8005968:	e7d3      	b.n	8005912 <_printf_float+0x8a>
 800596a:	6863      	ldr	r3, [r4, #4]
 800596c:	f00a 01df 	and.w	r1, sl, #223	@ 0xdf
 8005970:	1c5a      	adds	r2, r3, #1
 8005972:	d13f      	bne.n	80059f4 <_printf_float+0x16c>
 8005974:	2306      	movs	r3, #6
 8005976:	6063      	str	r3, [r4, #4]
 8005978:	2200      	movs	r2, #0
 800597a:	f44b 6380 	orr.w	r3, fp, #1024	@ 0x400
 800597e:	6023      	str	r3, [r4, #0]
 8005980:	9206      	str	r2, [sp, #24]
 8005982:	aa0e      	add	r2, sp, #56	@ 0x38
 8005984:	e9cd a204 	strd	sl, r2, [sp, #16]
 8005988:	aa0d      	add	r2, sp, #52	@ 0x34
 800598a:	9203      	str	r2, [sp, #12]
 800598c:	f10d 0233 	add.w	r2, sp, #51	@ 0x33
 8005990:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8005994:	6863      	ldr	r3, [r4, #4]
 8005996:	4642      	mov	r2, r8
 8005998:	9300      	str	r3, [sp, #0]
 800599a:	4628      	mov	r0, r5
 800599c:	464b      	mov	r3, r9
 800599e:	910a      	str	r1, [sp, #40]	@ 0x28
 80059a0:	f7ff fed4 	bl	800574c <__cvt>
 80059a4:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80059a6:	4680      	mov	r8, r0
 80059a8:	2947      	cmp	r1, #71	@ 0x47
 80059aa:	990d      	ldr	r1, [sp, #52]	@ 0x34
 80059ac:	d128      	bne.n	8005a00 <_printf_float+0x178>
 80059ae:	1cc8      	adds	r0, r1, #3
 80059b0:	db02      	blt.n	80059b8 <_printf_float+0x130>
 80059b2:	6863      	ldr	r3, [r4, #4]
 80059b4:	4299      	cmp	r1, r3
 80059b6:	dd40      	ble.n	8005a3a <_printf_float+0x1b2>
 80059b8:	f1aa 0a02 	sub.w	sl, sl, #2
 80059bc:	fa5f fa8a 	uxtb.w	sl, sl
 80059c0:	4652      	mov	r2, sl
 80059c2:	3901      	subs	r1, #1
 80059c4:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 80059c8:	910d      	str	r1, [sp, #52]	@ 0x34
 80059ca:	f7ff ff23 	bl	8005814 <__exponent>
 80059ce:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80059d0:	4681      	mov	r9, r0
 80059d2:	1813      	adds	r3, r2, r0
 80059d4:	2a01      	cmp	r2, #1
 80059d6:	6123      	str	r3, [r4, #16]
 80059d8:	dc02      	bgt.n	80059e0 <_printf_float+0x158>
 80059da:	6822      	ldr	r2, [r4, #0]
 80059dc:	07d2      	lsls	r2, r2, #31
 80059de:	d501      	bpl.n	80059e4 <_printf_float+0x15c>
 80059e0:	3301      	adds	r3, #1
 80059e2:	6123      	str	r3, [r4, #16]
 80059e4:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 80059e8:	2b00      	cmp	r3, #0
 80059ea:	d09e      	beq.n	800592a <_printf_float+0xa2>
 80059ec:	232d      	movs	r3, #45	@ 0x2d
 80059ee:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80059f2:	e79a      	b.n	800592a <_printf_float+0xa2>
 80059f4:	2947      	cmp	r1, #71	@ 0x47
 80059f6:	d1bf      	bne.n	8005978 <_printf_float+0xf0>
 80059f8:	2b00      	cmp	r3, #0
 80059fa:	d1bd      	bne.n	8005978 <_printf_float+0xf0>
 80059fc:	2301      	movs	r3, #1
 80059fe:	e7ba      	b.n	8005976 <_printf_float+0xee>
 8005a00:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8005a04:	d9dc      	bls.n	80059c0 <_printf_float+0x138>
 8005a06:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8005a0a:	d118      	bne.n	8005a3e <_printf_float+0x1b6>
 8005a0c:	2900      	cmp	r1, #0
 8005a0e:	6863      	ldr	r3, [r4, #4]
 8005a10:	dd0b      	ble.n	8005a2a <_printf_float+0x1a2>
 8005a12:	6121      	str	r1, [r4, #16]
 8005a14:	b913      	cbnz	r3, 8005a1c <_printf_float+0x194>
 8005a16:	6822      	ldr	r2, [r4, #0]
 8005a18:	07d0      	lsls	r0, r2, #31
 8005a1a:	d502      	bpl.n	8005a22 <_printf_float+0x19a>
 8005a1c:	3301      	adds	r3, #1
 8005a1e:	440b      	add	r3, r1
 8005a20:	6123      	str	r3, [r4, #16]
 8005a22:	f04f 0900 	mov.w	r9, #0
 8005a26:	65a1      	str	r1, [r4, #88]	@ 0x58
 8005a28:	e7dc      	b.n	80059e4 <_printf_float+0x15c>
 8005a2a:	b913      	cbnz	r3, 8005a32 <_printf_float+0x1aa>
 8005a2c:	6822      	ldr	r2, [r4, #0]
 8005a2e:	07d2      	lsls	r2, r2, #31
 8005a30:	d501      	bpl.n	8005a36 <_printf_float+0x1ae>
 8005a32:	3302      	adds	r3, #2
 8005a34:	e7f4      	b.n	8005a20 <_printf_float+0x198>
 8005a36:	2301      	movs	r3, #1
 8005a38:	e7f2      	b.n	8005a20 <_printf_float+0x198>
 8005a3a:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8005a3e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005a40:	4299      	cmp	r1, r3
 8005a42:	db05      	blt.n	8005a50 <_printf_float+0x1c8>
 8005a44:	6823      	ldr	r3, [r4, #0]
 8005a46:	6121      	str	r1, [r4, #16]
 8005a48:	07d8      	lsls	r0, r3, #31
 8005a4a:	d5ea      	bpl.n	8005a22 <_printf_float+0x19a>
 8005a4c:	1c4b      	adds	r3, r1, #1
 8005a4e:	e7e7      	b.n	8005a20 <_printf_float+0x198>
 8005a50:	2900      	cmp	r1, #0
 8005a52:	bfcc      	ite	gt
 8005a54:	2201      	movgt	r2, #1
 8005a56:	f1c1 0202 	rsble	r2, r1, #2
 8005a5a:	4413      	add	r3, r2
 8005a5c:	e7e0      	b.n	8005a20 <_printf_float+0x198>
 8005a5e:	6823      	ldr	r3, [r4, #0]
 8005a60:	055a      	lsls	r2, r3, #21
 8005a62:	d407      	bmi.n	8005a74 <_printf_float+0x1ec>
 8005a64:	6923      	ldr	r3, [r4, #16]
 8005a66:	4642      	mov	r2, r8
 8005a68:	4631      	mov	r1, r6
 8005a6a:	4628      	mov	r0, r5
 8005a6c:	47b8      	blx	r7
 8005a6e:	3001      	adds	r0, #1
 8005a70:	d12b      	bne.n	8005aca <_printf_float+0x242>
 8005a72:	e764      	b.n	800593e <_printf_float+0xb6>
 8005a74:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8005a78:	f240 80dc 	bls.w	8005c34 <_printf_float+0x3ac>
 8005a7c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8005a80:	2200      	movs	r2, #0
 8005a82:	2300      	movs	r3, #0
 8005a84:	f7fa ff90 	bl	80009a8 <__aeabi_dcmpeq>
 8005a88:	2800      	cmp	r0, #0
 8005a8a:	d033      	beq.n	8005af4 <_printf_float+0x26c>
 8005a8c:	2301      	movs	r3, #1
 8005a8e:	4631      	mov	r1, r6
 8005a90:	4628      	mov	r0, r5
 8005a92:	4a35      	ldr	r2, [pc, #212]	@ (8005b68 <_printf_float+0x2e0>)
 8005a94:	47b8      	blx	r7
 8005a96:	3001      	adds	r0, #1
 8005a98:	f43f af51 	beq.w	800593e <_printf_float+0xb6>
 8005a9c:	e9dd 380d 	ldrd	r3, r8, [sp, #52]	@ 0x34
 8005aa0:	4543      	cmp	r3, r8
 8005aa2:	db02      	blt.n	8005aaa <_printf_float+0x222>
 8005aa4:	6823      	ldr	r3, [r4, #0]
 8005aa6:	07d8      	lsls	r0, r3, #31
 8005aa8:	d50f      	bpl.n	8005aca <_printf_float+0x242>
 8005aaa:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8005aae:	4631      	mov	r1, r6
 8005ab0:	4628      	mov	r0, r5
 8005ab2:	47b8      	blx	r7
 8005ab4:	3001      	adds	r0, #1
 8005ab6:	f43f af42 	beq.w	800593e <_printf_float+0xb6>
 8005aba:	f04f 0900 	mov.w	r9, #0
 8005abe:	f108 38ff 	add.w	r8, r8, #4294967295
 8005ac2:	f104 0a1a 	add.w	sl, r4, #26
 8005ac6:	45c8      	cmp	r8, r9
 8005ac8:	dc09      	bgt.n	8005ade <_printf_float+0x256>
 8005aca:	6823      	ldr	r3, [r4, #0]
 8005acc:	079b      	lsls	r3, r3, #30
 8005ace:	f100 8102 	bmi.w	8005cd6 <_printf_float+0x44e>
 8005ad2:	68e0      	ldr	r0, [r4, #12]
 8005ad4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005ad6:	4298      	cmp	r0, r3
 8005ad8:	bfb8      	it	lt
 8005ada:	4618      	movlt	r0, r3
 8005adc:	e731      	b.n	8005942 <_printf_float+0xba>
 8005ade:	2301      	movs	r3, #1
 8005ae0:	4652      	mov	r2, sl
 8005ae2:	4631      	mov	r1, r6
 8005ae4:	4628      	mov	r0, r5
 8005ae6:	47b8      	blx	r7
 8005ae8:	3001      	adds	r0, #1
 8005aea:	f43f af28 	beq.w	800593e <_printf_float+0xb6>
 8005aee:	f109 0901 	add.w	r9, r9, #1
 8005af2:	e7e8      	b.n	8005ac6 <_printf_float+0x23e>
 8005af4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8005af6:	2b00      	cmp	r3, #0
 8005af8:	dc38      	bgt.n	8005b6c <_printf_float+0x2e4>
 8005afa:	2301      	movs	r3, #1
 8005afc:	4631      	mov	r1, r6
 8005afe:	4628      	mov	r0, r5
 8005b00:	4a19      	ldr	r2, [pc, #100]	@ (8005b68 <_printf_float+0x2e0>)
 8005b02:	47b8      	blx	r7
 8005b04:	3001      	adds	r0, #1
 8005b06:	f43f af1a 	beq.w	800593e <_printf_float+0xb6>
 8005b0a:	e9dd 390d 	ldrd	r3, r9, [sp, #52]	@ 0x34
 8005b0e:	ea59 0303 	orrs.w	r3, r9, r3
 8005b12:	d102      	bne.n	8005b1a <_printf_float+0x292>
 8005b14:	6823      	ldr	r3, [r4, #0]
 8005b16:	07d9      	lsls	r1, r3, #31
 8005b18:	d5d7      	bpl.n	8005aca <_printf_float+0x242>
 8005b1a:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8005b1e:	4631      	mov	r1, r6
 8005b20:	4628      	mov	r0, r5
 8005b22:	47b8      	blx	r7
 8005b24:	3001      	adds	r0, #1
 8005b26:	f43f af0a 	beq.w	800593e <_printf_float+0xb6>
 8005b2a:	f04f 0a00 	mov.w	sl, #0
 8005b2e:	f104 0b1a 	add.w	fp, r4, #26
 8005b32:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8005b34:	425b      	negs	r3, r3
 8005b36:	4553      	cmp	r3, sl
 8005b38:	dc01      	bgt.n	8005b3e <_printf_float+0x2b6>
 8005b3a:	464b      	mov	r3, r9
 8005b3c:	e793      	b.n	8005a66 <_printf_float+0x1de>
 8005b3e:	2301      	movs	r3, #1
 8005b40:	465a      	mov	r2, fp
 8005b42:	4631      	mov	r1, r6
 8005b44:	4628      	mov	r0, r5
 8005b46:	47b8      	blx	r7
 8005b48:	3001      	adds	r0, #1
 8005b4a:	f43f aef8 	beq.w	800593e <_printf_float+0xb6>
 8005b4e:	f10a 0a01 	add.w	sl, sl, #1
 8005b52:	e7ee      	b.n	8005b32 <_printf_float+0x2aa>
 8005b54:	7fefffff 	.word	0x7fefffff
 8005b58:	0800830e 	.word	0x0800830e
 8005b5c:	08008312 	.word	0x08008312
 8005b60:	08008316 	.word	0x08008316
 8005b64:	0800831a 	.word	0x0800831a
 8005b68:	0800831e 	.word	0x0800831e
 8005b6c:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8005b6e:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8005b72:	4553      	cmp	r3, sl
 8005b74:	bfa8      	it	ge
 8005b76:	4653      	movge	r3, sl
 8005b78:	2b00      	cmp	r3, #0
 8005b7a:	4699      	mov	r9, r3
 8005b7c:	dc36      	bgt.n	8005bec <_printf_float+0x364>
 8005b7e:	f04f 0b00 	mov.w	fp, #0
 8005b82:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8005b86:	f104 021a 	add.w	r2, r4, #26
 8005b8a:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8005b8c:	930a      	str	r3, [sp, #40]	@ 0x28
 8005b8e:	eba3 0309 	sub.w	r3, r3, r9
 8005b92:	455b      	cmp	r3, fp
 8005b94:	dc31      	bgt.n	8005bfa <_printf_float+0x372>
 8005b96:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8005b98:	459a      	cmp	sl, r3
 8005b9a:	dc3a      	bgt.n	8005c12 <_printf_float+0x38a>
 8005b9c:	6823      	ldr	r3, [r4, #0]
 8005b9e:	07da      	lsls	r2, r3, #31
 8005ba0:	d437      	bmi.n	8005c12 <_printf_float+0x38a>
 8005ba2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8005ba4:	ebaa 0903 	sub.w	r9, sl, r3
 8005ba8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005baa:	ebaa 0303 	sub.w	r3, sl, r3
 8005bae:	4599      	cmp	r9, r3
 8005bb0:	bfa8      	it	ge
 8005bb2:	4699      	movge	r9, r3
 8005bb4:	f1b9 0f00 	cmp.w	r9, #0
 8005bb8:	dc33      	bgt.n	8005c22 <_printf_float+0x39a>
 8005bba:	f04f 0800 	mov.w	r8, #0
 8005bbe:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8005bc2:	f104 0b1a 	add.w	fp, r4, #26
 8005bc6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8005bc8:	ebaa 0303 	sub.w	r3, sl, r3
 8005bcc:	eba3 0309 	sub.w	r3, r3, r9
 8005bd0:	4543      	cmp	r3, r8
 8005bd2:	f77f af7a 	ble.w	8005aca <_printf_float+0x242>
 8005bd6:	2301      	movs	r3, #1
 8005bd8:	465a      	mov	r2, fp
 8005bda:	4631      	mov	r1, r6
 8005bdc:	4628      	mov	r0, r5
 8005bde:	47b8      	blx	r7
 8005be0:	3001      	adds	r0, #1
 8005be2:	f43f aeac 	beq.w	800593e <_printf_float+0xb6>
 8005be6:	f108 0801 	add.w	r8, r8, #1
 8005bea:	e7ec      	b.n	8005bc6 <_printf_float+0x33e>
 8005bec:	4642      	mov	r2, r8
 8005bee:	4631      	mov	r1, r6
 8005bf0:	4628      	mov	r0, r5
 8005bf2:	47b8      	blx	r7
 8005bf4:	3001      	adds	r0, #1
 8005bf6:	d1c2      	bne.n	8005b7e <_printf_float+0x2f6>
 8005bf8:	e6a1      	b.n	800593e <_printf_float+0xb6>
 8005bfa:	2301      	movs	r3, #1
 8005bfc:	4631      	mov	r1, r6
 8005bfe:	4628      	mov	r0, r5
 8005c00:	920a      	str	r2, [sp, #40]	@ 0x28
 8005c02:	47b8      	blx	r7
 8005c04:	3001      	adds	r0, #1
 8005c06:	f43f ae9a 	beq.w	800593e <_printf_float+0xb6>
 8005c0a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8005c0c:	f10b 0b01 	add.w	fp, fp, #1
 8005c10:	e7bb      	b.n	8005b8a <_printf_float+0x302>
 8005c12:	4631      	mov	r1, r6
 8005c14:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8005c18:	4628      	mov	r0, r5
 8005c1a:	47b8      	blx	r7
 8005c1c:	3001      	adds	r0, #1
 8005c1e:	d1c0      	bne.n	8005ba2 <_printf_float+0x31a>
 8005c20:	e68d      	b.n	800593e <_printf_float+0xb6>
 8005c22:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8005c24:	464b      	mov	r3, r9
 8005c26:	4631      	mov	r1, r6
 8005c28:	4628      	mov	r0, r5
 8005c2a:	4442      	add	r2, r8
 8005c2c:	47b8      	blx	r7
 8005c2e:	3001      	adds	r0, #1
 8005c30:	d1c3      	bne.n	8005bba <_printf_float+0x332>
 8005c32:	e684      	b.n	800593e <_printf_float+0xb6>
 8005c34:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8005c38:	f1ba 0f01 	cmp.w	sl, #1
 8005c3c:	dc01      	bgt.n	8005c42 <_printf_float+0x3ba>
 8005c3e:	07db      	lsls	r3, r3, #31
 8005c40:	d536      	bpl.n	8005cb0 <_printf_float+0x428>
 8005c42:	2301      	movs	r3, #1
 8005c44:	4642      	mov	r2, r8
 8005c46:	4631      	mov	r1, r6
 8005c48:	4628      	mov	r0, r5
 8005c4a:	47b8      	blx	r7
 8005c4c:	3001      	adds	r0, #1
 8005c4e:	f43f ae76 	beq.w	800593e <_printf_float+0xb6>
 8005c52:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8005c56:	4631      	mov	r1, r6
 8005c58:	4628      	mov	r0, r5
 8005c5a:	47b8      	blx	r7
 8005c5c:	3001      	adds	r0, #1
 8005c5e:	f43f ae6e 	beq.w	800593e <_printf_float+0xb6>
 8005c62:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8005c66:	2200      	movs	r2, #0
 8005c68:	2300      	movs	r3, #0
 8005c6a:	f10a 3aff 	add.w	sl, sl, #4294967295
 8005c6e:	f7fa fe9b 	bl	80009a8 <__aeabi_dcmpeq>
 8005c72:	b9c0      	cbnz	r0, 8005ca6 <_printf_float+0x41e>
 8005c74:	4653      	mov	r3, sl
 8005c76:	f108 0201 	add.w	r2, r8, #1
 8005c7a:	4631      	mov	r1, r6
 8005c7c:	4628      	mov	r0, r5
 8005c7e:	47b8      	blx	r7
 8005c80:	3001      	adds	r0, #1
 8005c82:	d10c      	bne.n	8005c9e <_printf_float+0x416>
 8005c84:	e65b      	b.n	800593e <_printf_float+0xb6>
 8005c86:	2301      	movs	r3, #1
 8005c88:	465a      	mov	r2, fp
 8005c8a:	4631      	mov	r1, r6
 8005c8c:	4628      	mov	r0, r5
 8005c8e:	47b8      	blx	r7
 8005c90:	3001      	adds	r0, #1
 8005c92:	f43f ae54 	beq.w	800593e <_printf_float+0xb6>
 8005c96:	f108 0801 	add.w	r8, r8, #1
 8005c9a:	45d0      	cmp	r8, sl
 8005c9c:	dbf3      	blt.n	8005c86 <_printf_float+0x3fe>
 8005c9e:	464b      	mov	r3, r9
 8005ca0:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8005ca4:	e6e0      	b.n	8005a68 <_printf_float+0x1e0>
 8005ca6:	f04f 0800 	mov.w	r8, #0
 8005caa:	f104 0b1a 	add.w	fp, r4, #26
 8005cae:	e7f4      	b.n	8005c9a <_printf_float+0x412>
 8005cb0:	2301      	movs	r3, #1
 8005cb2:	4642      	mov	r2, r8
 8005cb4:	e7e1      	b.n	8005c7a <_printf_float+0x3f2>
 8005cb6:	2301      	movs	r3, #1
 8005cb8:	464a      	mov	r2, r9
 8005cba:	4631      	mov	r1, r6
 8005cbc:	4628      	mov	r0, r5
 8005cbe:	47b8      	blx	r7
 8005cc0:	3001      	adds	r0, #1
 8005cc2:	f43f ae3c 	beq.w	800593e <_printf_float+0xb6>
 8005cc6:	f108 0801 	add.w	r8, r8, #1
 8005cca:	68e3      	ldr	r3, [r4, #12]
 8005ccc:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8005cce:	1a5b      	subs	r3, r3, r1
 8005cd0:	4543      	cmp	r3, r8
 8005cd2:	dcf0      	bgt.n	8005cb6 <_printf_float+0x42e>
 8005cd4:	e6fd      	b.n	8005ad2 <_printf_float+0x24a>
 8005cd6:	f04f 0800 	mov.w	r8, #0
 8005cda:	f104 0919 	add.w	r9, r4, #25
 8005cde:	e7f4      	b.n	8005cca <_printf_float+0x442>

08005ce0 <_printf_common>:
 8005ce0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005ce4:	4616      	mov	r6, r2
 8005ce6:	4698      	mov	r8, r3
 8005ce8:	688a      	ldr	r2, [r1, #8]
 8005cea:	690b      	ldr	r3, [r1, #16]
 8005cec:	4607      	mov	r7, r0
 8005cee:	4293      	cmp	r3, r2
 8005cf0:	bfb8      	it	lt
 8005cf2:	4613      	movlt	r3, r2
 8005cf4:	6033      	str	r3, [r6, #0]
 8005cf6:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8005cfa:	460c      	mov	r4, r1
 8005cfc:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8005d00:	b10a      	cbz	r2, 8005d06 <_printf_common+0x26>
 8005d02:	3301      	adds	r3, #1
 8005d04:	6033      	str	r3, [r6, #0]
 8005d06:	6823      	ldr	r3, [r4, #0]
 8005d08:	0699      	lsls	r1, r3, #26
 8005d0a:	bf42      	ittt	mi
 8005d0c:	6833      	ldrmi	r3, [r6, #0]
 8005d0e:	3302      	addmi	r3, #2
 8005d10:	6033      	strmi	r3, [r6, #0]
 8005d12:	6825      	ldr	r5, [r4, #0]
 8005d14:	f015 0506 	ands.w	r5, r5, #6
 8005d18:	d106      	bne.n	8005d28 <_printf_common+0x48>
 8005d1a:	f104 0a19 	add.w	sl, r4, #25
 8005d1e:	68e3      	ldr	r3, [r4, #12]
 8005d20:	6832      	ldr	r2, [r6, #0]
 8005d22:	1a9b      	subs	r3, r3, r2
 8005d24:	42ab      	cmp	r3, r5
 8005d26:	dc2b      	bgt.n	8005d80 <_printf_common+0xa0>
 8005d28:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8005d2c:	6822      	ldr	r2, [r4, #0]
 8005d2e:	3b00      	subs	r3, #0
 8005d30:	bf18      	it	ne
 8005d32:	2301      	movne	r3, #1
 8005d34:	0692      	lsls	r2, r2, #26
 8005d36:	d430      	bmi.n	8005d9a <_printf_common+0xba>
 8005d38:	4641      	mov	r1, r8
 8005d3a:	4638      	mov	r0, r7
 8005d3c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8005d40:	47c8      	blx	r9
 8005d42:	3001      	adds	r0, #1
 8005d44:	d023      	beq.n	8005d8e <_printf_common+0xae>
 8005d46:	6823      	ldr	r3, [r4, #0]
 8005d48:	6922      	ldr	r2, [r4, #16]
 8005d4a:	f003 0306 	and.w	r3, r3, #6
 8005d4e:	2b04      	cmp	r3, #4
 8005d50:	bf14      	ite	ne
 8005d52:	2500      	movne	r5, #0
 8005d54:	6833      	ldreq	r3, [r6, #0]
 8005d56:	f04f 0600 	mov.w	r6, #0
 8005d5a:	bf08      	it	eq
 8005d5c:	68e5      	ldreq	r5, [r4, #12]
 8005d5e:	f104 041a 	add.w	r4, r4, #26
 8005d62:	bf08      	it	eq
 8005d64:	1aed      	subeq	r5, r5, r3
 8005d66:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8005d6a:	bf08      	it	eq
 8005d6c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8005d70:	4293      	cmp	r3, r2
 8005d72:	bfc4      	itt	gt
 8005d74:	1a9b      	subgt	r3, r3, r2
 8005d76:	18ed      	addgt	r5, r5, r3
 8005d78:	42b5      	cmp	r5, r6
 8005d7a:	d11a      	bne.n	8005db2 <_printf_common+0xd2>
 8005d7c:	2000      	movs	r0, #0
 8005d7e:	e008      	b.n	8005d92 <_printf_common+0xb2>
 8005d80:	2301      	movs	r3, #1
 8005d82:	4652      	mov	r2, sl
 8005d84:	4641      	mov	r1, r8
 8005d86:	4638      	mov	r0, r7
 8005d88:	47c8      	blx	r9
 8005d8a:	3001      	adds	r0, #1
 8005d8c:	d103      	bne.n	8005d96 <_printf_common+0xb6>
 8005d8e:	f04f 30ff 	mov.w	r0, #4294967295
 8005d92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005d96:	3501      	adds	r5, #1
 8005d98:	e7c1      	b.n	8005d1e <_printf_common+0x3e>
 8005d9a:	2030      	movs	r0, #48	@ 0x30
 8005d9c:	18e1      	adds	r1, r4, r3
 8005d9e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8005da2:	1c5a      	adds	r2, r3, #1
 8005da4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8005da8:	4422      	add	r2, r4
 8005daa:	3302      	adds	r3, #2
 8005dac:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8005db0:	e7c2      	b.n	8005d38 <_printf_common+0x58>
 8005db2:	2301      	movs	r3, #1
 8005db4:	4622      	mov	r2, r4
 8005db6:	4641      	mov	r1, r8
 8005db8:	4638      	mov	r0, r7
 8005dba:	47c8      	blx	r9
 8005dbc:	3001      	adds	r0, #1
 8005dbe:	d0e6      	beq.n	8005d8e <_printf_common+0xae>
 8005dc0:	3601      	adds	r6, #1
 8005dc2:	e7d9      	b.n	8005d78 <_printf_common+0x98>

08005dc4 <_printf_i>:
 8005dc4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005dc8:	7e0f      	ldrb	r7, [r1, #24]
 8005dca:	4691      	mov	r9, r2
 8005dcc:	2f78      	cmp	r7, #120	@ 0x78
 8005dce:	4680      	mov	r8, r0
 8005dd0:	460c      	mov	r4, r1
 8005dd2:	469a      	mov	sl, r3
 8005dd4:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8005dd6:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8005dda:	d807      	bhi.n	8005dec <_printf_i+0x28>
 8005ddc:	2f62      	cmp	r7, #98	@ 0x62
 8005dde:	d80a      	bhi.n	8005df6 <_printf_i+0x32>
 8005de0:	2f00      	cmp	r7, #0
 8005de2:	f000 80d3 	beq.w	8005f8c <_printf_i+0x1c8>
 8005de6:	2f58      	cmp	r7, #88	@ 0x58
 8005de8:	f000 80ba 	beq.w	8005f60 <_printf_i+0x19c>
 8005dec:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8005df0:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8005df4:	e03a      	b.n	8005e6c <_printf_i+0xa8>
 8005df6:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8005dfa:	2b15      	cmp	r3, #21
 8005dfc:	d8f6      	bhi.n	8005dec <_printf_i+0x28>
 8005dfe:	a101      	add	r1, pc, #4	@ (adr r1, 8005e04 <_printf_i+0x40>)
 8005e00:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8005e04:	08005e5d 	.word	0x08005e5d
 8005e08:	08005e71 	.word	0x08005e71
 8005e0c:	08005ded 	.word	0x08005ded
 8005e10:	08005ded 	.word	0x08005ded
 8005e14:	08005ded 	.word	0x08005ded
 8005e18:	08005ded 	.word	0x08005ded
 8005e1c:	08005e71 	.word	0x08005e71
 8005e20:	08005ded 	.word	0x08005ded
 8005e24:	08005ded 	.word	0x08005ded
 8005e28:	08005ded 	.word	0x08005ded
 8005e2c:	08005ded 	.word	0x08005ded
 8005e30:	08005f73 	.word	0x08005f73
 8005e34:	08005e9b 	.word	0x08005e9b
 8005e38:	08005f2d 	.word	0x08005f2d
 8005e3c:	08005ded 	.word	0x08005ded
 8005e40:	08005ded 	.word	0x08005ded
 8005e44:	08005f95 	.word	0x08005f95
 8005e48:	08005ded 	.word	0x08005ded
 8005e4c:	08005e9b 	.word	0x08005e9b
 8005e50:	08005ded 	.word	0x08005ded
 8005e54:	08005ded 	.word	0x08005ded
 8005e58:	08005f35 	.word	0x08005f35
 8005e5c:	6833      	ldr	r3, [r6, #0]
 8005e5e:	1d1a      	adds	r2, r3, #4
 8005e60:	681b      	ldr	r3, [r3, #0]
 8005e62:	6032      	str	r2, [r6, #0]
 8005e64:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8005e68:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8005e6c:	2301      	movs	r3, #1
 8005e6e:	e09e      	b.n	8005fae <_printf_i+0x1ea>
 8005e70:	6833      	ldr	r3, [r6, #0]
 8005e72:	6820      	ldr	r0, [r4, #0]
 8005e74:	1d19      	adds	r1, r3, #4
 8005e76:	6031      	str	r1, [r6, #0]
 8005e78:	0606      	lsls	r6, r0, #24
 8005e7a:	d501      	bpl.n	8005e80 <_printf_i+0xbc>
 8005e7c:	681d      	ldr	r5, [r3, #0]
 8005e7e:	e003      	b.n	8005e88 <_printf_i+0xc4>
 8005e80:	0645      	lsls	r5, r0, #25
 8005e82:	d5fb      	bpl.n	8005e7c <_printf_i+0xb8>
 8005e84:	f9b3 5000 	ldrsh.w	r5, [r3]
 8005e88:	2d00      	cmp	r5, #0
 8005e8a:	da03      	bge.n	8005e94 <_printf_i+0xd0>
 8005e8c:	232d      	movs	r3, #45	@ 0x2d
 8005e8e:	426d      	negs	r5, r5
 8005e90:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8005e94:	230a      	movs	r3, #10
 8005e96:	4859      	ldr	r0, [pc, #356]	@ (8005ffc <_printf_i+0x238>)
 8005e98:	e011      	b.n	8005ebe <_printf_i+0xfa>
 8005e9a:	6821      	ldr	r1, [r4, #0]
 8005e9c:	6833      	ldr	r3, [r6, #0]
 8005e9e:	0608      	lsls	r0, r1, #24
 8005ea0:	f853 5b04 	ldr.w	r5, [r3], #4
 8005ea4:	d402      	bmi.n	8005eac <_printf_i+0xe8>
 8005ea6:	0649      	lsls	r1, r1, #25
 8005ea8:	bf48      	it	mi
 8005eaa:	b2ad      	uxthmi	r5, r5
 8005eac:	2f6f      	cmp	r7, #111	@ 0x6f
 8005eae:	6033      	str	r3, [r6, #0]
 8005eb0:	bf14      	ite	ne
 8005eb2:	230a      	movne	r3, #10
 8005eb4:	2308      	moveq	r3, #8
 8005eb6:	4851      	ldr	r0, [pc, #324]	@ (8005ffc <_printf_i+0x238>)
 8005eb8:	2100      	movs	r1, #0
 8005eba:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8005ebe:	6866      	ldr	r6, [r4, #4]
 8005ec0:	2e00      	cmp	r6, #0
 8005ec2:	bfa8      	it	ge
 8005ec4:	6821      	ldrge	r1, [r4, #0]
 8005ec6:	60a6      	str	r6, [r4, #8]
 8005ec8:	bfa4      	itt	ge
 8005eca:	f021 0104 	bicge.w	r1, r1, #4
 8005ece:	6021      	strge	r1, [r4, #0]
 8005ed0:	b90d      	cbnz	r5, 8005ed6 <_printf_i+0x112>
 8005ed2:	2e00      	cmp	r6, #0
 8005ed4:	d04b      	beq.n	8005f6e <_printf_i+0x1aa>
 8005ed6:	4616      	mov	r6, r2
 8005ed8:	fbb5 f1f3 	udiv	r1, r5, r3
 8005edc:	fb03 5711 	mls	r7, r3, r1, r5
 8005ee0:	5dc7      	ldrb	r7, [r0, r7]
 8005ee2:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8005ee6:	462f      	mov	r7, r5
 8005ee8:	42bb      	cmp	r3, r7
 8005eea:	460d      	mov	r5, r1
 8005eec:	d9f4      	bls.n	8005ed8 <_printf_i+0x114>
 8005eee:	2b08      	cmp	r3, #8
 8005ef0:	d10b      	bne.n	8005f0a <_printf_i+0x146>
 8005ef2:	6823      	ldr	r3, [r4, #0]
 8005ef4:	07df      	lsls	r7, r3, #31
 8005ef6:	d508      	bpl.n	8005f0a <_printf_i+0x146>
 8005ef8:	6923      	ldr	r3, [r4, #16]
 8005efa:	6861      	ldr	r1, [r4, #4]
 8005efc:	4299      	cmp	r1, r3
 8005efe:	bfde      	ittt	le
 8005f00:	2330      	movle	r3, #48	@ 0x30
 8005f02:	f806 3c01 	strble.w	r3, [r6, #-1]
 8005f06:	f106 36ff 	addle.w	r6, r6, #4294967295
 8005f0a:	1b92      	subs	r2, r2, r6
 8005f0c:	6122      	str	r2, [r4, #16]
 8005f0e:	464b      	mov	r3, r9
 8005f10:	4621      	mov	r1, r4
 8005f12:	4640      	mov	r0, r8
 8005f14:	f8cd a000 	str.w	sl, [sp]
 8005f18:	aa03      	add	r2, sp, #12
 8005f1a:	f7ff fee1 	bl	8005ce0 <_printf_common>
 8005f1e:	3001      	adds	r0, #1
 8005f20:	d14a      	bne.n	8005fb8 <_printf_i+0x1f4>
 8005f22:	f04f 30ff 	mov.w	r0, #4294967295
 8005f26:	b004      	add	sp, #16
 8005f28:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005f2c:	6823      	ldr	r3, [r4, #0]
 8005f2e:	f043 0320 	orr.w	r3, r3, #32
 8005f32:	6023      	str	r3, [r4, #0]
 8005f34:	2778      	movs	r7, #120	@ 0x78
 8005f36:	4832      	ldr	r0, [pc, #200]	@ (8006000 <_printf_i+0x23c>)
 8005f38:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8005f3c:	6823      	ldr	r3, [r4, #0]
 8005f3e:	6831      	ldr	r1, [r6, #0]
 8005f40:	061f      	lsls	r7, r3, #24
 8005f42:	f851 5b04 	ldr.w	r5, [r1], #4
 8005f46:	d402      	bmi.n	8005f4e <_printf_i+0x18a>
 8005f48:	065f      	lsls	r7, r3, #25
 8005f4a:	bf48      	it	mi
 8005f4c:	b2ad      	uxthmi	r5, r5
 8005f4e:	6031      	str	r1, [r6, #0]
 8005f50:	07d9      	lsls	r1, r3, #31
 8005f52:	bf44      	itt	mi
 8005f54:	f043 0320 	orrmi.w	r3, r3, #32
 8005f58:	6023      	strmi	r3, [r4, #0]
 8005f5a:	b11d      	cbz	r5, 8005f64 <_printf_i+0x1a0>
 8005f5c:	2310      	movs	r3, #16
 8005f5e:	e7ab      	b.n	8005eb8 <_printf_i+0xf4>
 8005f60:	4826      	ldr	r0, [pc, #152]	@ (8005ffc <_printf_i+0x238>)
 8005f62:	e7e9      	b.n	8005f38 <_printf_i+0x174>
 8005f64:	6823      	ldr	r3, [r4, #0]
 8005f66:	f023 0320 	bic.w	r3, r3, #32
 8005f6a:	6023      	str	r3, [r4, #0]
 8005f6c:	e7f6      	b.n	8005f5c <_printf_i+0x198>
 8005f6e:	4616      	mov	r6, r2
 8005f70:	e7bd      	b.n	8005eee <_printf_i+0x12a>
 8005f72:	6833      	ldr	r3, [r6, #0]
 8005f74:	6825      	ldr	r5, [r4, #0]
 8005f76:	1d18      	adds	r0, r3, #4
 8005f78:	6961      	ldr	r1, [r4, #20]
 8005f7a:	6030      	str	r0, [r6, #0]
 8005f7c:	062e      	lsls	r6, r5, #24
 8005f7e:	681b      	ldr	r3, [r3, #0]
 8005f80:	d501      	bpl.n	8005f86 <_printf_i+0x1c2>
 8005f82:	6019      	str	r1, [r3, #0]
 8005f84:	e002      	b.n	8005f8c <_printf_i+0x1c8>
 8005f86:	0668      	lsls	r0, r5, #25
 8005f88:	d5fb      	bpl.n	8005f82 <_printf_i+0x1be>
 8005f8a:	8019      	strh	r1, [r3, #0]
 8005f8c:	2300      	movs	r3, #0
 8005f8e:	4616      	mov	r6, r2
 8005f90:	6123      	str	r3, [r4, #16]
 8005f92:	e7bc      	b.n	8005f0e <_printf_i+0x14a>
 8005f94:	6833      	ldr	r3, [r6, #0]
 8005f96:	2100      	movs	r1, #0
 8005f98:	1d1a      	adds	r2, r3, #4
 8005f9a:	6032      	str	r2, [r6, #0]
 8005f9c:	681e      	ldr	r6, [r3, #0]
 8005f9e:	6862      	ldr	r2, [r4, #4]
 8005fa0:	4630      	mov	r0, r6
 8005fa2:	f000 fac8 	bl	8006536 <memchr>
 8005fa6:	b108      	cbz	r0, 8005fac <_printf_i+0x1e8>
 8005fa8:	1b80      	subs	r0, r0, r6
 8005faa:	6060      	str	r0, [r4, #4]
 8005fac:	6863      	ldr	r3, [r4, #4]
 8005fae:	6123      	str	r3, [r4, #16]
 8005fb0:	2300      	movs	r3, #0
 8005fb2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8005fb6:	e7aa      	b.n	8005f0e <_printf_i+0x14a>
 8005fb8:	4632      	mov	r2, r6
 8005fba:	4649      	mov	r1, r9
 8005fbc:	4640      	mov	r0, r8
 8005fbe:	6923      	ldr	r3, [r4, #16]
 8005fc0:	47d0      	blx	sl
 8005fc2:	3001      	adds	r0, #1
 8005fc4:	d0ad      	beq.n	8005f22 <_printf_i+0x15e>
 8005fc6:	6823      	ldr	r3, [r4, #0]
 8005fc8:	079b      	lsls	r3, r3, #30
 8005fca:	d413      	bmi.n	8005ff4 <_printf_i+0x230>
 8005fcc:	68e0      	ldr	r0, [r4, #12]
 8005fce:	9b03      	ldr	r3, [sp, #12]
 8005fd0:	4298      	cmp	r0, r3
 8005fd2:	bfb8      	it	lt
 8005fd4:	4618      	movlt	r0, r3
 8005fd6:	e7a6      	b.n	8005f26 <_printf_i+0x162>
 8005fd8:	2301      	movs	r3, #1
 8005fda:	4632      	mov	r2, r6
 8005fdc:	4649      	mov	r1, r9
 8005fde:	4640      	mov	r0, r8
 8005fe0:	47d0      	blx	sl
 8005fe2:	3001      	adds	r0, #1
 8005fe4:	d09d      	beq.n	8005f22 <_printf_i+0x15e>
 8005fe6:	3501      	adds	r5, #1
 8005fe8:	68e3      	ldr	r3, [r4, #12]
 8005fea:	9903      	ldr	r1, [sp, #12]
 8005fec:	1a5b      	subs	r3, r3, r1
 8005fee:	42ab      	cmp	r3, r5
 8005ff0:	dcf2      	bgt.n	8005fd8 <_printf_i+0x214>
 8005ff2:	e7eb      	b.n	8005fcc <_printf_i+0x208>
 8005ff4:	2500      	movs	r5, #0
 8005ff6:	f104 0619 	add.w	r6, r4, #25
 8005ffa:	e7f5      	b.n	8005fe8 <_printf_i+0x224>
 8005ffc:	08008320 	.word	0x08008320
 8006000:	08008331 	.word	0x08008331

08006004 <std>:
 8006004:	2300      	movs	r3, #0
 8006006:	b510      	push	{r4, lr}
 8006008:	4604      	mov	r4, r0
 800600a:	e9c0 3300 	strd	r3, r3, [r0]
 800600e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8006012:	6083      	str	r3, [r0, #8]
 8006014:	8181      	strh	r1, [r0, #12]
 8006016:	6643      	str	r3, [r0, #100]	@ 0x64
 8006018:	81c2      	strh	r2, [r0, #14]
 800601a:	6183      	str	r3, [r0, #24]
 800601c:	4619      	mov	r1, r3
 800601e:	2208      	movs	r2, #8
 8006020:	305c      	adds	r0, #92	@ 0x5c
 8006022:	f000 f9f9 	bl	8006418 <memset>
 8006026:	4b0d      	ldr	r3, [pc, #52]	@ (800605c <std+0x58>)
 8006028:	6224      	str	r4, [r4, #32]
 800602a:	6263      	str	r3, [r4, #36]	@ 0x24
 800602c:	4b0c      	ldr	r3, [pc, #48]	@ (8006060 <std+0x5c>)
 800602e:	62a3      	str	r3, [r4, #40]	@ 0x28
 8006030:	4b0c      	ldr	r3, [pc, #48]	@ (8006064 <std+0x60>)
 8006032:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8006034:	4b0c      	ldr	r3, [pc, #48]	@ (8006068 <std+0x64>)
 8006036:	6323      	str	r3, [r4, #48]	@ 0x30
 8006038:	4b0c      	ldr	r3, [pc, #48]	@ (800606c <std+0x68>)
 800603a:	429c      	cmp	r4, r3
 800603c:	d006      	beq.n	800604c <std+0x48>
 800603e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8006042:	4294      	cmp	r4, r2
 8006044:	d002      	beq.n	800604c <std+0x48>
 8006046:	33d0      	adds	r3, #208	@ 0xd0
 8006048:	429c      	cmp	r4, r3
 800604a:	d105      	bne.n	8006058 <std+0x54>
 800604c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8006050:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006054:	f000 ba6c 	b.w	8006530 <__retarget_lock_init_recursive>
 8006058:	bd10      	pop	{r4, pc}
 800605a:	bf00      	nop
 800605c:	08006269 	.word	0x08006269
 8006060:	0800628b 	.word	0x0800628b
 8006064:	080062c3 	.word	0x080062c3
 8006068:	080062e7 	.word	0x080062e7
 800606c:	20000528 	.word	0x20000528

08006070 <stdio_exit_handler>:
 8006070:	4a02      	ldr	r2, [pc, #8]	@ (800607c <stdio_exit_handler+0xc>)
 8006072:	4903      	ldr	r1, [pc, #12]	@ (8006080 <stdio_exit_handler+0x10>)
 8006074:	4803      	ldr	r0, [pc, #12]	@ (8006084 <stdio_exit_handler+0x14>)
 8006076:	f000 b869 	b.w	800614c <_fwalk_sglue>
 800607a:	bf00      	nop
 800607c:	20000020 	.word	0x20000020
 8006080:	08007d9d 	.word	0x08007d9d
 8006084:	2000019c 	.word	0x2000019c

08006088 <cleanup_stdio>:
 8006088:	6841      	ldr	r1, [r0, #4]
 800608a:	4b0c      	ldr	r3, [pc, #48]	@ (80060bc <cleanup_stdio+0x34>)
 800608c:	b510      	push	{r4, lr}
 800608e:	4299      	cmp	r1, r3
 8006090:	4604      	mov	r4, r0
 8006092:	d001      	beq.n	8006098 <cleanup_stdio+0x10>
 8006094:	f001 fe82 	bl	8007d9c <_fflush_r>
 8006098:	68a1      	ldr	r1, [r4, #8]
 800609a:	4b09      	ldr	r3, [pc, #36]	@ (80060c0 <cleanup_stdio+0x38>)
 800609c:	4299      	cmp	r1, r3
 800609e:	d002      	beq.n	80060a6 <cleanup_stdio+0x1e>
 80060a0:	4620      	mov	r0, r4
 80060a2:	f001 fe7b 	bl	8007d9c <_fflush_r>
 80060a6:	68e1      	ldr	r1, [r4, #12]
 80060a8:	4b06      	ldr	r3, [pc, #24]	@ (80060c4 <cleanup_stdio+0x3c>)
 80060aa:	4299      	cmp	r1, r3
 80060ac:	d004      	beq.n	80060b8 <cleanup_stdio+0x30>
 80060ae:	4620      	mov	r0, r4
 80060b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80060b4:	f001 be72 	b.w	8007d9c <_fflush_r>
 80060b8:	bd10      	pop	{r4, pc}
 80060ba:	bf00      	nop
 80060bc:	20000528 	.word	0x20000528
 80060c0:	20000590 	.word	0x20000590
 80060c4:	200005f8 	.word	0x200005f8

080060c8 <global_stdio_init.part.0>:
 80060c8:	b510      	push	{r4, lr}
 80060ca:	4b0b      	ldr	r3, [pc, #44]	@ (80060f8 <global_stdio_init.part.0+0x30>)
 80060cc:	4c0b      	ldr	r4, [pc, #44]	@ (80060fc <global_stdio_init.part.0+0x34>)
 80060ce:	4a0c      	ldr	r2, [pc, #48]	@ (8006100 <global_stdio_init.part.0+0x38>)
 80060d0:	4620      	mov	r0, r4
 80060d2:	601a      	str	r2, [r3, #0]
 80060d4:	2104      	movs	r1, #4
 80060d6:	2200      	movs	r2, #0
 80060d8:	f7ff ff94 	bl	8006004 <std>
 80060dc:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80060e0:	2201      	movs	r2, #1
 80060e2:	2109      	movs	r1, #9
 80060e4:	f7ff ff8e 	bl	8006004 <std>
 80060e8:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80060ec:	2202      	movs	r2, #2
 80060ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80060f2:	2112      	movs	r1, #18
 80060f4:	f7ff bf86 	b.w	8006004 <std>
 80060f8:	20000660 	.word	0x20000660
 80060fc:	20000528 	.word	0x20000528
 8006100:	08006071 	.word	0x08006071

08006104 <__sfp_lock_acquire>:
 8006104:	4801      	ldr	r0, [pc, #4]	@ (800610c <__sfp_lock_acquire+0x8>)
 8006106:	f000 ba14 	b.w	8006532 <__retarget_lock_acquire_recursive>
 800610a:	bf00      	nop
 800610c:	20000669 	.word	0x20000669

08006110 <__sfp_lock_release>:
 8006110:	4801      	ldr	r0, [pc, #4]	@ (8006118 <__sfp_lock_release+0x8>)
 8006112:	f000 ba0f 	b.w	8006534 <__retarget_lock_release_recursive>
 8006116:	bf00      	nop
 8006118:	20000669 	.word	0x20000669

0800611c <__sinit>:
 800611c:	b510      	push	{r4, lr}
 800611e:	4604      	mov	r4, r0
 8006120:	f7ff fff0 	bl	8006104 <__sfp_lock_acquire>
 8006124:	6a23      	ldr	r3, [r4, #32]
 8006126:	b11b      	cbz	r3, 8006130 <__sinit+0x14>
 8006128:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800612c:	f7ff bff0 	b.w	8006110 <__sfp_lock_release>
 8006130:	4b04      	ldr	r3, [pc, #16]	@ (8006144 <__sinit+0x28>)
 8006132:	6223      	str	r3, [r4, #32]
 8006134:	4b04      	ldr	r3, [pc, #16]	@ (8006148 <__sinit+0x2c>)
 8006136:	681b      	ldr	r3, [r3, #0]
 8006138:	2b00      	cmp	r3, #0
 800613a:	d1f5      	bne.n	8006128 <__sinit+0xc>
 800613c:	f7ff ffc4 	bl	80060c8 <global_stdio_init.part.0>
 8006140:	e7f2      	b.n	8006128 <__sinit+0xc>
 8006142:	bf00      	nop
 8006144:	08006089 	.word	0x08006089
 8006148:	20000660 	.word	0x20000660

0800614c <_fwalk_sglue>:
 800614c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006150:	4607      	mov	r7, r0
 8006152:	4688      	mov	r8, r1
 8006154:	4614      	mov	r4, r2
 8006156:	2600      	movs	r6, #0
 8006158:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800615c:	f1b9 0901 	subs.w	r9, r9, #1
 8006160:	d505      	bpl.n	800616e <_fwalk_sglue+0x22>
 8006162:	6824      	ldr	r4, [r4, #0]
 8006164:	2c00      	cmp	r4, #0
 8006166:	d1f7      	bne.n	8006158 <_fwalk_sglue+0xc>
 8006168:	4630      	mov	r0, r6
 800616a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800616e:	89ab      	ldrh	r3, [r5, #12]
 8006170:	2b01      	cmp	r3, #1
 8006172:	d907      	bls.n	8006184 <_fwalk_sglue+0x38>
 8006174:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8006178:	3301      	adds	r3, #1
 800617a:	d003      	beq.n	8006184 <_fwalk_sglue+0x38>
 800617c:	4629      	mov	r1, r5
 800617e:	4638      	mov	r0, r7
 8006180:	47c0      	blx	r8
 8006182:	4306      	orrs	r6, r0
 8006184:	3568      	adds	r5, #104	@ 0x68
 8006186:	e7e9      	b.n	800615c <_fwalk_sglue+0x10>

08006188 <iprintf>:
 8006188:	b40f      	push	{r0, r1, r2, r3}
 800618a:	b507      	push	{r0, r1, r2, lr}
 800618c:	4906      	ldr	r1, [pc, #24]	@ (80061a8 <iprintf+0x20>)
 800618e:	ab04      	add	r3, sp, #16
 8006190:	6808      	ldr	r0, [r1, #0]
 8006192:	f853 2b04 	ldr.w	r2, [r3], #4
 8006196:	6881      	ldr	r1, [r0, #8]
 8006198:	9301      	str	r3, [sp, #4]
 800619a:	f001 fc67 	bl	8007a6c <_vfiprintf_r>
 800619e:	b003      	add	sp, #12
 80061a0:	f85d eb04 	ldr.w	lr, [sp], #4
 80061a4:	b004      	add	sp, #16
 80061a6:	4770      	bx	lr
 80061a8:	20000198 	.word	0x20000198

080061ac <_puts_r>:
 80061ac:	6a03      	ldr	r3, [r0, #32]
 80061ae:	b570      	push	{r4, r5, r6, lr}
 80061b0:	4605      	mov	r5, r0
 80061b2:	460e      	mov	r6, r1
 80061b4:	6884      	ldr	r4, [r0, #8]
 80061b6:	b90b      	cbnz	r3, 80061bc <_puts_r+0x10>
 80061b8:	f7ff ffb0 	bl	800611c <__sinit>
 80061bc:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80061be:	07db      	lsls	r3, r3, #31
 80061c0:	d405      	bmi.n	80061ce <_puts_r+0x22>
 80061c2:	89a3      	ldrh	r3, [r4, #12]
 80061c4:	0598      	lsls	r0, r3, #22
 80061c6:	d402      	bmi.n	80061ce <_puts_r+0x22>
 80061c8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80061ca:	f000 f9b2 	bl	8006532 <__retarget_lock_acquire_recursive>
 80061ce:	89a3      	ldrh	r3, [r4, #12]
 80061d0:	0719      	lsls	r1, r3, #28
 80061d2:	d502      	bpl.n	80061da <_puts_r+0x2e>
 80061d4:	6923      	ldr	r3, [r4, #16]
 80061d6:	2b00      	cmp	r3, #0
 80061d8:	d135      	bne.n	8006246 <_puts_r+0x9a>
 80061da:	4621      	mov	r1, r4
 80061dc:	4628      	mov	r0, r5
 80061de:	f000 f8c5 	bl	800636c <__swsetup_r>
 80061e2:	b380      	cbz	r0, 8006246 <_puts_r+0x9a>
 80061e4:	f04f 35ff 	mov.w	r5, #4294967295
 80061e8:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80061ea:	07da      	lsls	r2, r3, #31
 80061ec:	d405      	bmi.n	80061fa <_puts_r+0x4e>
 80061ee:	89a3      	ldrh	r3, [r4, #12]
 80061f0:	059b      	lsls	r3, r3, #22
 80061f2:	d402      	bmi.n	80061fa <_puts_r+0x4e>
 80061f4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80061f6:	f000 f99d 	bl	8006534 <__retarget_lock_release_recursive>
 80061fa:	4628      	mov	r0, r5
 80061fc:	bd70      	pop	{r4, r5, r6, pc}
 80061fe:	2b00      	cmp	r3, #0
 8006200:	da04      	bge.n	800620c <_puts_r+0x60>
 8006202:	69a2      	ldr	r2, [r4, #24]
 8006204:	429a      	cmp	r2, r3
 8006206:	dc17      	bgt.n	8006238 <_puts_r+0x8c>
 8006208:	290a      	cmp	r1, #10
 800620a:	d015      	beq.n	8006238 <_puts_r+0x8c>
 800620c:	6823      	ldr	r3, [r4, #0]
 800620e:	1c5a      	adds	r2, r3, #1
 8006210:	6022      	str	r2, [r4, #0]
 8006212:	7019      	strb	r1, [r3, #0]
 8006214:	68a3      	ldr	r3, [r4, #8]
 8006216:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800621a:	3b01      	subs	r3, #1
 800621c:	60a3      	str	r3, [r4, #8]
 800621e:	2900      	cmp	r1, #0
 8006220:	d1ed      	bne.n	80061fe <_puts_r+0x52>
 8006222:	2b00      	cmp	r3, #0
 8006224:	da11      	bge.n	800624a <_puts_r+0x9e>
 8006226:	4622      	mov	r2, r4
 8006228:	210a      	movs	r1, #10
 800622a:	4628      	mov	r0, r5
 800622c:	f000 f85f 	bl	80062ee <__swbuf_r>
 8006230:	3001      	adds	r0, #1
 8006232:	d0d7      	beq.n	80061e4 <_puts_r+0x38>
 8006234:	250a      	movs	r5, #10
 8006236:	e7d7      	b.n	80061e8 <_puts_r+0x3c>
 8006238:	4622      	mov	r2, r4
 800623a:	4628      	mov	r0, r5
 800623c:	f000 f857 	bl	80062ee <__swbuf_r>
 8006240:	3001      	adds	r0, #1
 8006242:	d1e7      	bne.n	8006214 <_puts_r+0x68>
 8006244:	e7ce      	b.n	80061e4 <_puts_r+0x38>
 8006246:	3e01      	subs	r6, #1
 8006248:	e7e4      	b.n	8006214 <_puts_r+0x68>
 800624a:	6823      	ldr	r3, [r4, #0]
 800624c:	1c5a      	adds	r2, r3, #1
 800624e:	6022      	str	r2, [r4, #0]
 8006250:	220a      	movs	r2, #10
 8006252:	701a      	strb	r2, [r3, #0]
 8006254:	e7ee      	b.n	8006234 <_puts_r+0x88>
	...

08006258 <puts>:
 8006258:	4b02      	ldr	r3, [pc, #8]	@ (8006264 <puts+0xc>)
 800625a:	4601      	mov	r1, r0
 800625c:	6818      	ldr	r0, [r3, #0]
 800625e:	f7ff bfa5 	b.w	80061ac <_puts_r>
 8006262:	bf00      	nop
 8006264:	20000198 	.word	0x20000198

08006268 <__sread>:
 8006268:	b510      	push	{r4, lr}
 800626a:	460c      	mov	r4, r1
 800626c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006270:	f000 f900 	bl	8006474 <_read_r>
 8006274:	2800      	cmp	r0, #0
 8006276:	bfab      	itete	ge
 8006278:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800627a:	89a3      	ldrhlt	r3, [r4, #12]
 800627c:	181b      	addge	r3, r3, r0
 800627e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8006282:	bfac      	ite	ge
 8006284:	6563      	strge	r3, [r4, #84]	@ 0x54
 8006286:	81a3      	strhlt	r3, [r4, #12]
 8006288:	bd10      	pop	{r4, pc}

0800628a <__swrite>:
 800628a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800628e:	461f      	mov	r7, r3
 8006290:	898b      	ldrh	r3, [r1, #12]
 8006292:	4605      	mov	r5, r0
 8006294:	05db      	lsls	r3, r3, #23
 8006296:	460c      	mov	r4, r1
 8006298:	4616      	mov	r6, r2
 800629a:	d505      	bpl.n	80062a8 <__swrite+0x1e>
 800629c:	2302      	movs	r3, #2
 800629e:	2200      	movs	r2, #0
 80062a0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80062a4:	f000 f8d4 	bl	8006450 <_lseek_r>
 80062a8:	89a3      	ldrh	r3, [r4, #12]
 80062aa:	4632      	mov	r2, r6
 80062ac:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80062b0:	81a3      	strh	r3, [r4, #12]
 80062b2:	4628      	mov	r0, r5
 80062b4:	463b      	mov	r3, r7
 80062b6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80062ba:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80062be:	f000 b8fb 	b.w	80064b8 <_write_r>

080062c2 <__sseek>:
 80062c2:	b510      	push	{r4, lr}
 80062c4:	460c      	mov	r4, r1
 80062c6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80062ca:	f000 f8c1 	bl	8006450 <_lseek_r>
 80062ce:	1c43      	adds	r3, r0, #1
 80062d0:	89a3      	ldrh	r3, [r4, #12]
 80062d2:	bf15      	itete	ne
 80062d4:	6560      	strne	r0, [r4, #84]	@ 0x54
 80062d6:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80062da:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80062de:	81a3      	strheq	r3, [r4, #12]
 80062e0:	bf18      	it	ne
 80062e2:	81a3      	strhne	r3, [r4, #12]
 80062e4:	bd10      	pop	{r4, pc}

080062e6 <__sclose>:
 80062e6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80062ea:	f000 b8a1 	b.w	8006430 <_close_r>

080062ee <__swbuf_r>:
 80062ee:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80062f0:	460e      	mov	r6, r1
 80062f2:	4614      	mov	r4, r2
 80062f4:	4605      	mov	r5, r0
 80062f6:	b118      	cbz	r0, 8006300 <__swbuf_r+0x12>
 80062f8:	6a03      	ldr	r3, [r0, #32]
 80062fa:	b90b      	cbnz	r3, 8006300 <__swbuf_r+0x12>
 80062fc:	f7ff ff0e 	bl	800611c <__sinit>
 8006300:	69a3      	ldr	r3, [r4, #24]
 8006302:	60a3      	str	r3, [r4, #8]
 8006304:	89a3      	ldrh	r3, [r4, #12]
 8006306:	071a      	lsls	r2, r3, #28
 8006308:	d501      	bpl.n	800630e <__swbuf_r+0x20>
 800630a:	6923      	ldr	r3, [r4, #16]
 800630c:	b943      	cbnz	r3, 8006320 <__swbuf_r+0x32>
 800630e:	4621      	mov	r1, r4
 8006310:	4628      	mov	r0, r5
 8006312:	f000 f82b 	bl	800636c <__swsetup_r>
 8006316:	b118      	cbz	r0, 8006320 <__swbuf_r+0x32>
 8006318:	f04f 37ff 	mov.w	r7, #4294967295
 800631c:	4638      	mov	r0, r7
 800631e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006320:	6823      	ldr	r3, [r4, #0]
 8006322:	6922      	ldr	r2, [r4, #16]
 8006324:	b2f6      	uxtb	r6, r6
 8006326:	1a98      	subs	r0, r3, r2
 8006328:	6963      	ldr	r3, [r4, #20]
 800632a:	4637      	mov	r7, r6
 800632c:	4283      	cmp	r3, r0
 800632e:	dc05      	bgt.n	800633c <__swbuf_r+0x4e>
 8006330:	4621      	mov	r1, r4
 8006332:	4628      	mov	r0, r5
 8006334:	f001 fd32 	bl	8007d9c <_fflush_r>
 8006338:	2800      	cmp	r0, #0
 800633a:	d1ed      	bne.n	8006318 <__swbuf_r+0x2a>
 800633c:	68a3      	ldr	r3, [r4, #8]
 800633e:	3b01      	subs	r3, #1
 8006340:	60a3      	str	r3, [r4, #8]
 8006342:	6823      	ldr	r3, [r4, #0]
 8006344:	1c5a      	adds	r2, r3, #1
 8006346:	6022      	str	r2, [r4, #0]
 8006348:	701e      	strb	r6, [r3, #0]
 800634a:	6962      	ldr	r2, [r4, #20]
 800634c:	1c43      	adds	r3, r0, #1
 800634e:	429a      	cmp	r2, r3
 8006350:	d004      	beq.n	800635c <__swbuf_r+0x6e>
 8006352:	89a3      	ldrh	r3, [r4, #12]
 8006354:	07db      	lsls	r3, r3, #31
 8006356:	d5e1      	bpl.n	800631c <__swbuf_r+0x2e>
 8006358:	2e0a      	cmp	r6, #10
 800635a:	d1df      	bne.n	800631c <__swbuf_r+0x2e>
 800635c:	4621      	mov	r1, r4
 800635e:	4628      	mov	r0, r5
 8006360:	f001 fd1c 	bl	8007d9c <_fflush_r>
 8006364:	2800      	cmp	r0, #0
 8006366:	d0d9      	beq.n	800631c <__swbuf_r+0x2e>
 8006368:	e7d6      	b.n	8006318 <__swbuf_r+0x2a>
	...

0800636c <__swsetup_r>:
 800636c:	b538      	push	{r3, r4, r5, lr}
 800636e:	4b29      	ldr	r3, [pc, #164]	@ (8006414 <__swsetup_r+0xa8>)
 8006370:	4605      	mov	r5, r0
 8006372:	6818      	ldr	r0, [r3, #0]
 8006374:	460c      	mov	r4, r1
 8006376:	b118      	cbz	r0, 8006380 <__swsetup_r+0x14>
 8006378:	6a03      	ldr	r3, [r0, #32]
 800637a:	b90b      	cbnz	r3, 8006380 <__swsetup_r+0x14>
 800637c:	f7ff fece 	bl	800611c <__sinit>
 8006380:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006384:	0719      	lsls	r1, r3, #28
 8006386:	d422      	bmi.n	80063ce <__swsetup_r+0x62>
 8006388:	06da      	lsls	r2, r3, #27
 800638a:	d407      	bmi.n	800639c <__swsetup_r+0x30>
 800638c:	2209      	movs	r2, #9
 800638e:	602a      	str	r2, [r5, #0]
 8006390:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006394:	f04f 30ff 	mov.w	r0, #4294967295
 8006398:	81a3      	strh	r3, [r4, #12]
 800639a:	e033      	b.n	8006404 <__swsetup_r+0x98>
 800639c:	0758      	lsls	r0, r3, #29
 800639e:	d512      	bpl.n	80063c6 <__swsetup_r+0x5a>
 80063a0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80063a2:	b141      	cbz	r1, 80063b6 <__swsetup_r+0x4a>
 80063a4:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80063a8:	4299      	cmp	r1, r3
 80063aa:	d002      	beq.n	80063b2 <__swsetup_r+0x46>
 80063ac:	4628      	mov	r0, r5
 80063ae:	f000 ff4f 	bl	8007250 <_free_r>
 80063b2:	2300      	movs	r3, #0
 80063b4:	6363      	str	r3, [r4, #52]	@ 0x34
 80063b6:	89a3      	ldrh	r3, [r4, #12]
 80063b8:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80063bc:	81a3      	strh	r3, [r4, #12]
 80063be:	2300      	movs	r3, #0
 80063c0:	6063      	str	r3, [r4, #4]
 80063c2:	6923      	ldr	r3, [r4, #16]
 80063c4:	6023      	str	r3, [r4, #0]
 80063c6:	89a3      	ldrh	r3, [r4, #12]
 80063c8:	f043 0308 	orr.w	r3, r3, #8
 80063cc:	81a3      	strh	r3, [r4, #12]
 80063ce:	6923      	ldr	r3, [r4, #16]
 80063d0:	b94b      	cbnz	r3, 80063e6 <__swsetup_r+0x7a>
 80063d2:	89a3      	ldrh	r3, [r4, #12]
 80063d4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80063d8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80063dc:	d003      	beq.n	80063e6 <__swsetup_r+0x7a>
 80063de:	4621      	mov	r1, r4
 80063e0:	4628      	mov	r0, r5
 80063e2:	f001 fd3a 	bl	8007e5a <__smakebuf_r>
 80063e6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80063ea:	f013 0201 	ands.w	r2, r3, #1
 80063ee:	d00a      	beq.n	8006406 <__swsetup_r+0x9a>
 80063f0:	2200      	movs	r2, #0
 80063f2:	60a2      	str	r2, [r4, #8]
 80063f4:	6962      	ldr	r2, [r4, #20]
 80063f6:	4252      	negs	r2, r2
 80063f8:	61a2      	str	r2, [r4, #24]
 80063fa:	6922      	ldr	r2, [r4, #16]
 80063fc:	b942      	cbnz	r2, 8006410 <__swsetup_r+0xa4>
 80063fe:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8006402:	d1c5      	bne.n	8006390 <__swsetup_r+0x24>
 8006404:	bd38      	pop	{r3, r4, r5, pc}
 8006406:	0799      	lsls	r1, r3, #30
 8006408:	bf58      	it	pl
 800640a:	6962      	ldrpl	r2, [r4, #20]
 800640c:	60a2      	str	r2, [r4, #8]
 800640e:	e7f4      	b.n	80063fa <__swsetup_r+0x8e>
 8006410:	2000      	movs	r0, #0
 8006412:	e7f7      	b.n	8006404 <__swsetup_r+0x98>
 8006414:	20000198 	.word	0x20000198

08006418 <memset>:
 8006418:	4603      	mov	r3, r0
 800641a:	4402      	add	r2, r0
 800641c:	4293      	cmp	r3, r2
 800641e:	d100      	bne.n	8006422 <memset+0xa>
 8006420:	4770      	bx	lr
 8006422:	f803 1b01 	strb.w	r1, [r3], #1
 8006426:	e7f9      	b.n	800641c <memset+0x4>

08006428 <_localeconv_r>:
 8006428:	4800      	ldr	r0, [pc, #0]	@ (800642c <_localeconv_r+0x4>)
 800642a:	4770      	bx	lr
 800642c:	2000011c 	.word	0x2000011c

08006430 <_close_r>:
 8006430:	b538      	push	{r3, r4, r5, lr}
 8006432:	2300      	movs	r3, #0
 8006434:	4d05      	ldr	r5, [pc, #20]	@ (800644c <_close_r+0x1c>)
 8006436:	4604      	mov	r4, r0
 8006438:	4608      	mov	r0, r1
 800643a:	602b      	str	r3, [r5, #0]
 800643c:	f7fc fb16 	bl	8002a6c <_close>
 8006440:	1c43      	adds	r3, r0, #1
 8006442:	d102      	bne.n	800644a <_close_r+0x1a>
 8006444:	682b      	ldr	r3, [r5, #0]
 8006446:	b103      	cbz	r3, 800644a <_close_r+0x1a>
 8006448:	6023      	str	r3, [r4, #0]
 800644a:	bd38      	pop	{r3, r4, r5, pc}
 800644c:	20000664 	.word	0x20000664

08006450 <_lseek_r>:
 8006450:	b538      	push	{r3, r4, r5, lr}
 8006452:	4604      	mov	r4, r0
 8006454:	4608      	mov	r0, r1
 8006456:	4611      	mov	r1, r2
 8006458:	2200      	movs	r2, #0
 800645a:	4d05      	ldr	r5, [pc, #20]	@ (8006470 <_lseek_r+0x20>)
 800645c:	602a      	str	r2, [r5, #0]
 800645e:	461a      	mov	r2, r3
 8006460:	f7fc fb0e 	bl	8002a80 <_lseek>
 8006464:	1c43      	adds	r3, r0, #1
 8006466:	d102      	bne.n	800646e <_lseek_r+0x1e>
 8006468:	682b      	ldr	r3, [r5, #0]
 800646a:	b103      	cbz	r3, 800646e <_lseek_r+0x1e>
 800646c:	6023      	str	r3, [r4, #0]
 800646e:	bd38      	pop	{r3, r4, r5, pc}
 8006470:	20000664 	.word	0x20000664

08006474 <_read_r>:
 8006474:	b538      	push	{r3, r4, r5, lr}
 8006476:	4604      	mov	r4, r0
 8006478:	4608      	mov	r0, r1
 800647a:	4611      	mov	r1, r2
 800647c:	2200      	movs	r2, #0
 800647e:	4d05      	ldr	r5, [pc, #20]	@ (8006494 <_read_r+0x20>)
 8006480:	602a      	str	r2, [r5, #0]
 8006482:	461a      	mov	r2, r3
 8006484:	f7fc fae2 	bl	8002a4c <_read>
 8006488:	1c43      	adds	r3, r0, #1
 800648a:	d102      	bne.n	8006492 <_read_r+0x1e>
 800648c:	682b      	ldr	r3, [r5, #0]
 800648e:	b103      	cbz	r3, 8006492 <_read_r+0x1e>
 8006490:	6023      	str	r3, [r4, #0]
 8006492:	bd38      	pop	{r3, r4, r5, pc}
 8006494:	20000664 	.word	0x20000664

08006498 <_sbrk_r>:
 8006498:	b538      	push	{r3, r4, r5, lr}
 800649a:	2300      	movs	r3, #0
 800649c:	4d05      	ldr	r5, [pc, #20]	@ (80064b4 <_sbrk_r+0x1c>)
 800649e:	4604      	mov	r4, r0
 80064a0:	4608      	mov	r0, r1
 80064a2:	602b      	str	r3, [r5, #0]
 80064a4:	f7fc faee 	bl	8002a84 <_sbrk>
 80064a8:	1c43      	adds	r3, r0, #1
 80064aa:	d102      	bne.n	80064b2 <_sbrk_r+0x1a>
 80064ac:	682b      	ldr	r3, [r5, #0]
 80064ae:	b103      	cbz	r3, 80064b2 <_sbrk_r+0x1a>
 80064b0:	6023      	str	r3, [r4, #0]
 80064b2:	bd38      	pop	{r3, r4, r5, pc}
 80064b4:	20000664 	.word	0x20000664

080064b8 <_write_r>:
 80064b8:	b538      	push	{r3, r4, r5, lr}
 80064ba:	4604      	mov	r4, r0
 80064bc:	4608      	mov	r0, r1
 80064be:	4611      	mov	r1, r2
 80064c0:	2200      	movs	r2, #0
 80064c2:	4d05      	ldr	r5, [pc, #20]	@ (80064d8 <_write_r+0x20>)
 80064c4:	602a      	str	r2, [r5, #0]
 80064c6:	461a      	mov	r2, r3
 80064c8:	f7fb feb8 	bl	800223c <_write>
 80064cc:	1c43      	adds	r3, r0, #1
 80064ce:	d102      	bne.n	80064d6 <_write_r+0x1e>
 80064d0:	682b      	ldr	r3, [r5, #0]
 80064d2:	b103      	cbz	r3, 80064d6 <_write_r+0x1e>
 80064d4:	6023      	str	r3, [r4, #0]
 80064d6:	bd38      	pop	{r3, r4, r5, pc}
 80064d8:	20000664 	.word	0x20000664

080064dc <__errno>:
 80064dc:	4b01      	ldr	r3, [pc, #4]	@ (80064e4 <__errno+0x8>)
 80064de:	6818      	ldr	r0, [r3, #0]
 80064e0:	4770      	bx	lr
 80064e2:	bf00      	nop
 80064e4:	20000198 	.word	0x20000198

080064e8 <__libc_init_array>:
 80064e8:	b570      	push	{r4, r5, r6, lr}
 80064ea:	2600      	movs	r6, #0
 80064ec:	4d0c      	ldr	r5, [pc, #48]	@ (8006520 <__libc_init_array+0x38>)
 80064ee:	4c0d      	ldr	r4, [pc, #52]	@ (8006524 <__libc_init_array+0x3c>)
 80064f0:	1b64      	subs	r4, r4, r5
 80064f2:	10a4      	asrs	r4, r4, #2
 80064f4:	42a6      	cmp	r6, r4
 80064f6:	d109      	bne.n	800650c <__libc_init_array+0x24>
 80064f8:	f001 fd6e 	bl	8007fd8 <_init>
 80064fc:	2600      	movs	r6, #0
 80064fe:	4d0a      	ldr	r5, [pc, #40]	@ (8006528 <__libc_init_array+0x40>)
 8006500:	4c0a      	ldr	r4, [pc, #40]	@ (800652c <__libc_init_array+0x44>)
 8006502:	1b64      	subs	r4, r4, r5
 8006504:	10a4      	asrs	r4, r4, #2
 8006506:	42a6      	cmp	r6, r4
 8006508:	d105      	bne.n	8006516 <__libc_init_array+0x2e>
 800650a:	bd70      	pop	{r4, r5, r6, pc}
 800650c:	f855 3b04 	ldr.w	r3, [r5], #4
 8006510:	4798      	blx	r3
 8006512:	3601      	adds	r6, #1
 8006514:	e7ee      	b.n	80064f4 <__libc_init_array+0xc>
 8006516:	f855 3b04 	ldr.w	r3, [r5], #4
 800651a:	4798      	blx	r3
 800651c:	3601      	adds	r6, #1
 800651e:	e7f2      	b.n	8006506 <__libc_init_array+0x1e>
 8006520:	0800868c 	.word	0x0800868c
 8006524:	0800868c 	.word	0x0800868c
 8006528:	0800868c 	.word	0x0800868c
 800652c:	08008690 	.word	0x08008690

08006530 <__retarget_lock_init_recursive>:
 8006530:	4770      	bx	lr

08006532 <__retarget_lock_acquire_recursive>:
 8006532:	4770      	bx	lr

08006534 <__retarget_lock_release_recursive>:
 8006534:	4770      	bx	lr

08006536 <memchr>:
 8006536:	4603      	mov	r3, r0
 8006538:	b510      	push	{r4, lr}
 800653a:	b2c9      	uxtb	r1, r1
 800653c:	4402      	add	r2, r0
 800653e:	4293      	cmp	r3, r2
 8006540:	4618      	mov	r0, r3
 8006542:	d101      	bne.n	8006548 <memchr+0x12>
 8006544:	2000      	movs	r0, #0
 8006546:	e003      	b.n	8006550 <memchr+0x1a>
 8006548:	7804      	ldrb	r4, [r0, #0]
 800654a:	3301      	adds	r3, #1
 800654c:	428c      	cmp	r4, r1
 800654e:	d1f6      	bne.n	800653e <memchr+0x8>
 8006550:	bd10      	pop	{r4, pc}

08006552 <memcpy>:
 8006552:	440a      	add	r2, r1
 8006554:	4291      	cmp	r1, r2
 8006556:	f100 33ff 	add.w	r3, r0, #4294967295
 800655a:	d100      	bne.n	800655e <memcpy+0xc>
 800655c:	4770      	bx	lr
 800655e:	b510      	push	{r4, lr}
 8006560:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006564:	4291      	cmp	r1, r2
 8006566:	f803 4f01 	strb.w	r4, [r3, #1]!
 800656a:	d1f9      	bne.n	8006560 <memcpy+0xe>
 800656c:	bd10      	pop	{r4, pc}
	...

08006570 <__assert_func>:
 8006570:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8006572:	4614      	mov	r4, r2
 8006574:	461a      	mov	r2, r3
 8006576:	4b09      	ldr	r3, [pc, #36]	@ (800659c <__assert_func+0x2c>)
 8006578:	4605      	mov	r5, r0
 800657a:	681b      	ldr	r3, [r3, #0]
 800657c:	68d8      	ldr	r0, [r3, #12]
 800657e:	b954      	cbnz	r4, 8006596 <__assert_func+0x26>
 8006580:	4b07      	ldr	r3, [pc, #28]	@ (80065a0 <__assert_func+0x30>)
 8006582:	461c      	mov	r4, r3
 8006584:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8006588:	9100      	str	r1, [sp, #0]
 800658a:	462b      	mov	r3, r5
 800658c:	4905      	ldr	r1, [pc, #20]	@ (80065a4 <__assert_func+0x34>)
 800658e:	f001 fc2d 	bl	8007dec <fiprintf>
 8006592:	f001 fcc1 	bl	8007f18 <abort>
 8006596:	4b04      	ldr	r3, [pc, #16]	@ (80065a8 <__assert_func+0x38>)
 8006598:	e7f4      	b.n	8006584 <__assert_func+0x14>
 800659a:	bf00      	nop
 800659c:	20000198 	.word	0x20000198
 80065a0:	08008387 	.word	0x08008387
 80065a4:	08008359 	.word	0x08008359
 80065a8:	0800834c 	.word	0x0800834c

080065ac <quorem>:
 80065ac:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80065b0:	6903      	ldr	r3, [r0, #16]
 80065b2:	690c      	ldr	r4, [r1, #16]
 80065b4:	4607      	mov	r7, r0
 80065b6:	42a3      	cmp	r3, r4
 80065b8:	db7e      	blt.n	80066b8 <quorem+0x10c>
 80065ba:	3c01      	subs	r4, #1
 80065bc:	00a3      	lsls	r3, r4, #2
 80065be:	f100 0514 	add.w	r5, r0, #20
 80065c2:	f101 0814 	add.w	r8, r1, #20
 80065c6:	9300      	str	r3, [sp, #0]
 80065c8:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80065cc:	9301      	str	r3, [sp, #4]
 80065ce:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80065d2:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80065d6:	3301      	adds	r3, #1
 80065d8:	429a      	cmp	r2, r3
 80065da:	fbb2 f6f3 	udiv	r6, r2, r3
 80065de:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80065e2:	d32e      	bcc.n	8006642 <quorem+0x96>
 80065e4:	f04f 0a00 	mov.w	sl, #0
 80065e8:	46c4      	mov	ip, r8
 80065ea:	46ae      	mov	lr, r5
 80065ec:	46d3      	mov	fp, sl
 80065ee:	f85c 3b04 	ldr.w	r3, [ip], #4
 80065f2:	b298      	uxth	r0, r3
 80065f4:	fb06 a000 	mla	r0, r6, r0, sl
 80065f8:	0c1b      	lsrs	r3, r3, #16
 80065fa:	0c02      	lsrs	r2, r0, #16
 80065fc:	fb06 2303 	mla	r3, r6, r3, r2
 8006600:	f8de 2000 	ldr.w	r2, [lr]
 8006604:	b280      	uxth	r0, r0
 8006606:	b292      	uxth	r2, r2
 8006608:	1a12      	subs	r2, r2, r0
 800660a:	445a      	add	r2, fp
 800660c:	f8de 0000 	ldr.w	r0, [lr]
 8006610:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8006614:	b29b      	uxth	r3, r3
 8006616:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 800661a:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 800661e:	b292      	uxth	r2, r2
 8006620:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8006624:	45e1      	cmp	r9, ip
 8006626:	ea4f 4b23 	mov.w	fp, r3, asr #16
 800662a:	f84e 2b04 	str.w	r2, [lr], #4
 800662e:	d2de      	bcs.n	80065ee <quorem+0x42>
 8006630:	9b00      	ldr	r3, [sp, #0]
 8006632:	58eb      	ldr	r3, [r5, r3]
 8006634:	b92b      	cbnz	r3, 8006642 <quorem+0x96>
 8006636:	9b01      	ldr	r3, [sp, #4]
 8006638:	3b04      	subs	r3, #4
 800663a:	429d      	cmp	r5, r3
 800663c:	461a      	mov	r2, r3
 800663e:	d32f      	bcc.n	80066a0 <quorem+0xf4>
 8006640:	613c      	str	r4, [r7, #16]
 8006642:	4638      	mov	r0, r7
 8006644:	f001 f8d6 	bl	80077f4 <__mcmp>
 8006648:	2800      	cmp	r0, #0
 800664a:	db25      	blt.n	8006698 <quorem+0xec>
 800664c:	4629      	mov	r1, r5
 800664e:	2000      	movs	r0, #0
 8006650:	f858 2b04 	ldr.w	r2, [r8], #4
 8006654:	f8d1 c000 	ldr.w	ip, [r1]
 8006658:	fa1f fe82 	uxth.w	lr, r2
 800665c:	fa1f f38c 	uxth.w	r3, ip
 8006660:	eba3 030e 	sub.w	r3, r3, lr
 8006664:	4403      	add	r3, r0
 8006666:	0c12      	lsrs	r2, r2, #16
 8006668:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 800666c:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8006670:	b29b      	uxth	r3, r3
 8006672:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8006676:	45c1      	cmp	r9, r8
 8006678:	ea4f 4022 	mov.w	r0, r2, asr #16
 800667c:	f841 3b04 	str.w	r3, [r1], #4
 8006680:	d2e6      	bcs.n	8006650 <quorem+0xa4>
 8006682:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8006686:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800668a:	b922      	cbnz	r2, 8006696 <quorem+0xea>
 800668c:	3b04      	subs	r3, #4
 800668e:	429d      	cmp	r5, r3
 8006690:	461a      	mov	r2, r3
 8006692:	d30b      	bcc.n	80066ac <quorem+0x100>
 8006694:	613c      	str	r4, [r7, #16]
 8006696:	3601      	adds	r6, #1
 8006698:	4630      	mov	r0, r6
 800669a:	b003      	add	sp, #12
 800669c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80066a0:	6812      	ldr	r2, [r2, #0]
 80066a2:	3b04      	subs	r3, #4
 80066a4:	2a00      	cmp	r2, #0
 80066a6:	d1cb      	bne.n	8006640 <quorem+0x94>
 80066a8:	3c01      	subs	r4, #1
 80066aa:	e7c6      	b.n	800663a <quorem+0x8e>
 80066ac:	6812      	ldr	r2, [r2, #0]
 80066ae:	3b04      	subs	r3, #4
 80066b0:	2a00      	cmp	r2, #0
 80066b2:	d1ef      	bne.n	8006694 <quorem+0xe8>
 80066b4:	3c01      	subs	r4, #1
 80066b6:	e7ea      	b.n	800668e <quorem+0xe2>
 80066b8:	2000      	movs	r0, #0
 80066ba:	e7ee      	b.n	800669a <quorem+0xee>
 80066bc:	0000      	movs	r0, r0
	...

080066c0 <_dtoa_r>:
 80066c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80066c4:	4614      	mov	r4, r2
 80066c6:	461d      	mov	r5, r3
 80066c8:	69c7      	ldr	r7, [r0, #28]
 80066ca:	b097      	sub	sp, #92	@ 0x5c
 80066cc:	4683      	mov	fp, r0
 80066ce:	e9cd 4502 	strd	r4, r5, [sp, #8]
 80066d2:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 80066d4:	b97f      	cbnz	r7, 80066f6 <_dtoa_r+0x36>
 80066d6:	2010      	movs	r0, #16
 80066d8:	f7fe ff82 	bl	80055e0 <malloc>
 80066dc:	4602      	mov	r2, r0
 80066de:	f8cb 001c 	str.w	r0, [fp, #28]
 80066e2:	b920      	cbnz	r0, 80066ee <_dtoa_r+0x2e>
 80066e4:	21ef      	movs	r1, #239	@ 0xef
 80066e6:	4ba8      	ldr	r3, [pc, #672]	@ (8006988 <_dtoa_r+0x2c8>)
 80066e8:	48a8      	ldr	r0, [pc, #672]	@ (800698c <_dtoa_r+0x2cc>)
 80066ea:	f7ff ff41 	bl	8006570 <__assert_func>
 80066ee:	e9c0 7701 	strd	r7, r7, [r0, #4]
 80066f2:	6007      	str	r7, [r0, #0]
 80066f4:	60c7      	str	r7, [r0, #12]
 80066f6:	f8db 301c 	ldr.w	r3, [fp, #28]
 80066fa:	6819      	ldr	r1, [r3, #0]
 80066fc:	b159      	cbz	r1, 8006716 <_dtoa_r+0x56>
 80066fe:	685a      	ldr	r2, [r3, #4]
 8006700:	2301      	movs	r3, #1
 8006702:	4093      	lsls	r3, r2
 8006704:	604a      	str	r2, [r1, #4]
 8006706:	608b      	str	r3, [r1, #8]
 8006708:	4658      	mov	r0, fp
 800670a:	f000 fe3b 	bl	8007384 <_Bfree>
 800670e:	2200      	movs	r2, #0
 8006710:	f8db 301c 	ldr.w	r3, [fp, #28]
 8006714:	601a      	str	r2, [r3, #0]
 8006716:	1e2b      	subs	r3, r5, #0
 8006718:	bfaf      	iteee	ge
 800671a:	2300      	movge	r3, #0
 800671c:	2201      	movlt	r2, #1
 800671e:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8006722:	9303      	strlt	r3, [sp, #12]
 8006724:	bfa8      	it	ge
 8006726:	6033      	strge	r3, [r6, #0]
 8006728:	f8dd 800c 	ldr.w	r8, [sp, #12]
 800672c:	4b98      	ldr	r3, [pc, #608]	@ (8006990 <_dtoa_r+0x2d0>)
 800672e:	bfb8      	it	lt
 8006730:	6032      	strlt	r2, [r6, #0]
 8006732:	ea33 0308 	bics.w	r3, r3, r8
 8006736:	d112      	bne.n	800675e <_dtoa_r+0x9e>
 8006738:	f242 730f 	movw	r3, #9999	@ 0x270f
 800673c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 800673e:	6013      	str	r3, [r2, #0]
 8006740:	f3c8 0313 	ubfx	r3, r8, #0, #20
 8006744:	4323      	orrs	r3, r4
 8006746:	f000 8550 	beq.w	80071ea <_dtoa_r+0xb2a>
 800674a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 800674c:	f8df a244 	ldr.w	sl, [pc, #580]	@ 8006994 <_dtoa_r+0x2d4>
 8006750:	2b00      	cmp	r3, #0
 8006752:	f000 8552 	beq.w	80071fa <_dtoa_r+0xb3a>
 8006756:	f10a 0303 	add.w	r3, sl, #3
 800675a:	f000 bd4c 	b.w	80071f6 <_dtoa_r+0xb36>
 800675e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8006762:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 8006766:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800676a:	2200      	movs	r2, #0
 800676c:	2300      	movs	r3, #0
 800676e:	f7fa f91b 	bl	80009a8 <__aeabi_dcmpeq>
 8006772:	4607      	mov	r7, r0
 8006774:	b158      	cbz	r0, 800678e <_dtoa_r+0xce>
 8006776:	2301      	movs	r3, #1
 8006778:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 800677a:	6013      	str	r3, [r2, #0]
 800677c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 800677e:	b113      	cbz	r3, 8006786 <_dtoa_r+0xc6>
 8006780:	4b85      	ldr	r3, [pc, #532]	@ (8006998 <_dtoa_r+0x2d8>)
 8006782:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8006784:	6013      	str	r3, [r2, #0]
 8006786:	f8df a214 	ldr.w	sl, [pc, #532]	@ 800699c <_dtoa_r+0x2dc>
 800678a:	f000 bd36 	b.w	80071fa <_dtoa_r+0xb3a>
 800678e:	ab14      	add	r3, sp, #80	@ 0x50
 8006790:	9301      	str	r3, [sp, #4]
 8006792:	ab15      	add	r3, sp, #84	@ 0x54
 8006794:	9300      	str	r3, [sp, #0]
 8006796:	4658      	mov	r0, fp
 8006798:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 800679c:	f001 f8da 	bl	8007954 <__d2b>
 80067a0:	f3c8 560a 	ubfx	r6, r8, #20, #11
 80067a4:	4681      	mov	r9, r0
 80067a6:	2e00      	cmp	r6, #0
 80067a8:	d077      	beq.n	800689a <_dtoa_r+0x1da>
 80067aa:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80067ae:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80067b0:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 80067b4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80067b8:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 80067bc:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 80067c0:	9712      	str	r7, [sp, #72]	@ 0x48
 80067c2:	4619      	mov	r1, r3
 80067c4:	2200      	movs	r2, #0
 80067c6:	4b76      	ldr	r3, [pc, #472]	@ (80069a0 <_dtoa_r+0x2e0>)
 80067c8:	f7f9 fcce 	bl	8000168 <__aeabi_dsub>
 80067cc:	a368      	add	r3, pc, #416	@ (adr r3, 8006970 <_dtoa_r+0x2b0>)
 80067ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80067d2:	f7f9 fe81 	bl	80004d8 <__aeabi_dmul>
 80067d6:	a368      	add	r3, pc, #416	@ (adr r3, 8006978 <_dtoa_r+0x2b8>)
 80067d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80067dc:	f7f9 fcc6 	bl	800016c <__adddf3>
 80067e0:	4604      	mov	r4, r0
 80067e2:	4630      	mov	r0, r6
 80067e4:	460d      	mov	r5, r1
 80067e6:	f7f9 fe0d 	bl	8000404 <__aeabi_i2d>
 80067ea:	a365      	add	r3, pc, #404	@ (adr r3, 8006980 <_dtoa_r+0x2c0>)
 80067ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80067f0:	f7f9 fe72 	bl	80004d8 <__aeabi_dmul>
 80067f4:	4602      	mov	r2, r0
 80067f6:	460b      	mov	r3, r1
 80067f8:	4620      	mov	r0, r4
 80067fa:	4629      	mov	r1, r5
 80067fc:	f7f9 fcb6 	bl	800016c <__adddf3>
 8006800:	4604      	mov	r4, r0
 8006802:	460d      	mov	r5, r1
 8006804:	f7fa f918 	bl	8000a38 <__aeabi_d2iz>
 8006808:	2200      	movs	r2, #0
 800680a:	4607      	mov	r7, r0
 800680c:	2300      	movs	r3, #0
 800680e:	4620      	mov	r0, r4
 8006810:	4629      	mov	r1, r5
 8006812:	f7fa f8d3 	bl	80009bc <__aeabi_dcmplt>
 8006816:	b140      	cbz	r0, 800682a <_dtoa_r+0x16a>
 8006818:	4638      	mov	r0, r7
 800681a:	f7f9 fdf3 	bl	8000404 <__aeabi_i2d>
 800681e:	4622      	mov	r2, r4
 8006820:	462b      	mov	r3, r5
 8006822:	f7fa f8c1 	bl	80009a8 <__aeabi_dcmpeq>
 8006826:	b900      	cbnz	r0, 800682a <_dtoa_r+0x16a>
 8006828:	3f01      	subs	r7, #1
 800682a:	2f16      	cmp	r7, #22
 800682c:	d853      	bhi.n	80068d6 <_dtoa_r+0x216>
 800682e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8006832:	4b5c      	ldr	r3, [pc, #368]	@ (80069a4 <_dtoa_r+0x2e4>)
 8006834:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8006838:	e9d3 2300 	ldrd	r2, r3, [r3]
 800683c:	f7fa f8be 	bl	80009bc <__aeabi_dcmplt>
 8006840:	2800      	cmp	r0, #0
 8006842:	d04a      	beq.n	80068da <_dtoa_r+0x21a>
 8006844:	2300      	movs	r3, #0
 8006846:	3f01      	subs	r7, #1
 8006848:	930f      	str	r3, [sp, #60]	@ 0x3c
 800684a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800684c:	1b9b      	subs	r3, r3, r6
 800684e:	1e5a      	subs	r2, r3, #1
 8006850:	bf46      	itte	mi
 8006852:	f1c3 0801 	rsbmi	r8, r3, #1
 8006856:	2300      	movmi	r3, #0
 8006858:	f04f 0800 	movpl.w	r8, #0
 800685c:	9209      	str	r2, [sp, #36]	@ 0x24
 800685e:	bf48      	it	mi
 8006860:	9309      	strmi	r3, [sp, #36]	@ 0x24
 8006862:	2f00      	cmp	r7, #0
 8006864:	db3b      	blt.n	80068de <_dtoa_r+0x21e>
 8006866:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006868:	970e      	str	r7, [sp, #56]	@ 0x38
 800686a:	443b      	add	r3, r7
 800686c:	9309      	str	r3, [sp, #36]	@ 0x24
 800686e:	2300      	movs	r3, #0
 8006870:	930a      	str	r3, [sp, #40]	@ 0x28
 8006872:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8006874:	2b09      	cmp	r3, #9
 8006876:	d866      	bhi.n	8006946 <_dtoa_r+0x286>
 8006878:	2b05      	cmp	r3, #5
 800687a:	bfc4      	itt	gt
 800687c:	3b04      	subgt	r3, #4
 800687e:	9320      	strgt	r3, [sp, #128]	@ 0x80
 8006880:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8006882:	bfc8      	it	gt
 8006884:	2400      	movgt	r4, #0
 8006886:	f1a3 0302 	sub.w	r3, r3, #2
 800688a:	bfd8      	it	le
 800688c:	2401      	movle	r4, #1
 800688e:	2b03      	cmp	r3, #3
 8006890:	d864      	bhi.n	800695c <_dtoa_r+0x29c>
 8006892:	e8df f003 	tbb	[pc, r3]
 8006896:	382b      	.short	0x382b
 8006898:	5636      	.short	0x5636
 800689a:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 800689e:	441e      	add	r6, r3
 80068a0:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 80068a4:	2b20      	cmp	r3, #32
 80068a6:	bfc1      	itttt	gt
 80068a8:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 80068ac:	fa08 f803 	lslgt.w	r8, r8, r3
 80068b0:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 80068b4:	fa24 f303 	lsrgt.w	r3, r4, r3
 80068b8:	bfd6      	itet	le
 80068ba:	f1c3 0320 	rsble	r3, r3, #32
 80068be:	ea48 0003 	orrgt.w	r0, r8, r3
 80068c2:	fa04 f003 	lslle.w	r0, r4, r3
 80068c6:	f7f9 fd8d 	bl	80003e4 <__aeabi_ui2d>
 80068ca:	2201      	movs	r2, #1
 80068cc:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 80068d0:	3e01      	subs	r6, #1
 80068d2:	9212      	str	r2, [sp, #72]	@ 0x48
 80068d4:	e775      	b.n	80067c2 <_dtoa_r+0x102>
 80068d6:	2301      	movs	r3, #1
 80068d8:	e7b6      	b.n	8006848 <_dtoa_r+0x188>
 80068da:	900f      	str	r0, [sp, #60]	@ 0x3c
 80068dc:	e7b5      	b.n	800684a <_dtoa_r+0x18a>
 80068de:	427b      	negs	r3, r7
 80068e0:	930a      	str	r3, [sp, #40]	@ 0x28
 80068e2:	2300      	movs	r3, #0
 80068e4:	eba8 0807 	sub.w	r8, r8, r7
 80068e8:	930e      	str	r3, [sp, #56]	@ 0x38
 80068ea:	e7c2      	b.n	8006872 <_dtoa_r+0x1b2>
 80068ec:	2300      	movs	r3, #0
 80068ee:	930b      	str	r3, [sp, #44]	@ 0x2c
 80068f0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80068f2:	2b00      	cmp	r3, #0
 80068f4:	dc35      	bgt.n	8006962 <_dtoa_r+0x2a2>
 80068f6:	2301      	movs	r3, #1
 80068f8:	461a      	mov	r2, r3
 80068fa:	e9cd 3307 	strd	r3, r3, [sp, #28]
 80068fe:	9221      	str	r2, [sp, #132]	@ 0x84
 8006900:	e00b      	b.n	800691a <_dtoa_r+0x25a>
 8006902:	2301      	movs	r3, #1
 8006904:	e7f3      	b.n	80068ee <_dtoa_r+0x22e>
 8006906:	2300      	movs	r3, #0
 8006908:	930b      	str	r3, [sp, #44]	@ 0x2c
 800690a:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800690c:	18fb      	adds	r3, r7, r3
 800690e:	9308      	str	r3, [sp, #32]
 8006910:	3301      	adds	r3, #1
 8006912:	2b01      	cmp	r3, #1
 8006914:	9307      	str	r3, [sp, #28]
 8006916:	bfb8      	it	lt
 8006918:	2301      	movlt	r3, #1
 800691a:	2100      	movs	r1, #0
 800691c:	2204      	movs	r2, #4
 800691e:	f8db 001c 	ldr.w	r0, [fp, #28]
 8006922:	f102 0514 	add.w	r5, r2, #20
 8006926:	429d      	cmp	r5, r3
 8006928:	d91f      	bls.n	800696a <_dtoa_r+0x2aa>
 800692a:	6041      	str	r1, [r0, #4]
 800692c:	4658      	mov	r0, fp
 800692e:	f000 fce9 	bl	8007304 <_Balloc>
 8006932:	4682      	mov	sl, r0
 8006934:	2800      	cmp	r0, #0
 8006936:	d139      	bne.n	80069ac <_dtoa_r+0x2ec>
 8006938:	4602      	mov	r2, r0
 800693a:	f240 11af 	movw	r1, #431	@ 0x1af
 800693e:	4b1a      	ldr	r3, [pc, #104]	@ (80069a8 <_dtoa_r+0x2e8>)
 8006940:	e6d2      	b.n	80066e8 <_dtoa_r+0x28>
 8006942:	2301      	movs	r3, #1
 8006944:	e7e0      	b.n	8006908 <_dtoa_r+0x248>
 8006946:	2401      	movs	r4, #1
 8006948:	2300      	movs	r3, #0
 800694a:	940b      	str	r4, [sp, #44]	@ 0x2c
 800694c:	9320      	str	r3, [sp, #128]	@ 0x80
 800694e:	f04f 33ff 	mov.w	r3, #4294967295
 8006952:	2200      	movs	r2, #0
 8006954:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8006958:	2312      	movs	r3, #18
 800695a:	e7d0      	b.n	80068fe <_dtoa_r+0x23e>
 800695c:	2301      	movs	r3, #1
 800695e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8006960:	e7f5      	b.n	800694e <_dtoa_r+0x28e>
 8006962:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8006964:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8006968:	e7d7      	b.n	800691a <_dtoa_r+0x25a>
 800696a:	3101      	adds	r1, #1
 800696c:	0052      	lsls	r2, r2, #1
 800696e:	e7d8      	b.n	8006922 <_dtoa_r+0x262>
 8006970:	636f4361 	.word	0x636f4361
 8006974:	3fd287a7 	.word	0x3fd287a7
 8006978:	8b60c8b3 	.word	0x8b60c8b3
 800697c:	3fc68a28 	.word	0x3fc68a28
 8006980:	509f79fb 	.word	0x509f79fb
 8006984:	3fd34413 	.word	0x3fd34413
 8006988:	08008395 	.word	0x08008395
 800698c:	080083ac 	.word	0x080083ac
 8006990:	7ff00000 	.word	0x7ff00000
 8006994:	08008391 	.word	0x08008391
 8006998:	0800831f 	.word	0x0800831f
 800699c:	0800831e 	.word	0x0800831e
 80069a0:	3ff80000 	.word	0x3ff80000
 80069a4:	080084a8 	.word	0x080084a8
 80069a8:	08008404 	.word	0x08008404
 80069ac:	f8db 301c 	ldr.w	r3, [fp, #28]
 80069b0:	6018      	str	r0, [r3, #0]
 80069b2:	9b07      	ldr	r3, [sp, #28]
 80069b4:	2b0e      	cmp	r3, #14
 80069b6:	f200 80a4 	bhi.w	8006b02 <_dtoa_r+0x442>
 80069ba:	2c00      	cmp	r4, #0
 80069bc:	f000 80a1 	beq.w	8006b02 <_dtoa_r+0x442>
 80069c0:	2f00      	cmp	r7, #0
 80069c2:	dd33      	ble.n	8006a2c <_dtoa_r+0x36c>
 80069c4:	4b86      	ldr	r3, [pc, #536]	@ (8006be0 <_dtoa_r+0x520>)
 80069c6:	f007 020f 	and.w	r2, r7, #15
 80069ca:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80069ce:	05f8      	lsls	r0, r7, #23
 80069d0:	e9d3 3400 	ldrd	r3, r4, [r3]
 80069d4:	e9cd 3404 	strd	r3, r4, [sp, #16]
 80069d8:	ea4f 1427 	mov.w	r4, r7, asr #4
 80069dc:	d516      	bpl.n	8006a0c <_dtoa_r+0x34c>
 80069de:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80069e2:	4b80      	ldr	r3, [pc, #512]	@ (8006be4 <_dtoa_r+0x524>)
 80069e4:	2603      	movs	r6, #3
 80069e6:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80069ea:	f7f9 fe9f 	bl	800072c <__aeabi_ddiv>
 80069ee:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80069f2:	f004 040f 	and.w	r4, r4, #15
 80069f6:	4d7b      	ldr	r5, [pc, #492]	@ (8006be4 <_dtoa_r+0x524>)
 80069f8:	b954      	cbnz	r4, 8006a10 <_dtoa_r+0x350>
 80069fa:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80069fe:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006a02:	f7f9 fe93 	bl	800072c <__aeabi_ddiv>
 8006a06:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8006a0a:	e028      	b.n	8006a5e <_dtoa_r+0x39e>
 8006a0c:	2602      	movs	r6, #2
 8006a0e:	e7f2      	b.n	80069f6 <_dtoa_r+0x336>
 8006a10:	07e1      	lsls	r1, r4, #31
 8006a12:	d508      	bpl.n	8006a26 <_dtoa_r+0x366>
 8006a14:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8006a18:	e9d5 2300 	ldrd	r2, r3, [r5]
 8006a1c:	f7f9 fd5c 	bl	80004d8 <__aeabi_dmul>
 8006a20:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8006a24:	3601      	adds	r6, #1
 8006a26:	1064      	asrs	r4, r4, #1
 8006a28:	3508      	adds	r5, #8
 8006a2a:	e7e5      	b.n	80069f8 <_dtoa_r+0x338>
 8006a2c:	f000 80d2 	beq.w	8006bd4 <_dtoa_r+0x514>
 8006a30:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8006a34:	427c      	negs	r4, r7
 8006a36:	4b6a      	ldr	r3, [pc, #424]	@ (8006be0 <_dtoa_r+0x520>)
 8006a38:	f004 020f 	and.w	r2, r4, #15
 8006a3c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8006a40:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006a44:	f7f9 fd48 	bl	80004d8 <__aeabi_dmul>
 8006a48:	2602      	movs	r6, #2
 8006a4a:	2300      	movs	r3, #0
 8006a4c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8006a50:	4d64      	ldr	r5, [pc, #400]	@ (8006be4 <_dtoa_r+0x524>)
 8006a52:	1124      	asrs	r4, r4, #4
 8006a54:	2c00      	cmp	r4, #0
 8006a56:	f040 80b2 	bne.w	8006bbe <_dtoa_r+0x4fe>
 8006a5a:	2b00      	cmp	r3, #0
 8006a5c:	d1d3      	bne.n	8006a06 <_dtoa_r+0x346>
 8006a5e:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8006a62:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8006a64:	2b00      	cmp	r3, #0
 8006a66:	f000 80b7 	beq.w	8006bd8 <_dtoa_r+0x518>
 8006a6a:	2200      	movs	r2, #0
 8006a6c:	4620      	mov	r0, r4
 8006a6e:	4629      	mov	r1, r5
 8006a70:	4b5d      	ldr	r3, [pc, #372]	@ (8006be8 <_dtoa_r+0x528>)
 8006a72:	f7f9 ffa3 	bl	80009bc <__aeabi_dcmplt>
 8006a76:	2800      	cmp	r0, #0
 8006a78:	f000 80ae 	beq.w	8006bd8 <_dtoa_r+0x518>
 8006a7c:	9b07      	ldr	r3, [sp, #28]
 8006a7e:	2b00      	cmp	r3, #0
 8006a80:	f000 80aa 	beq.w	8006bd8 <_dtoa_r+0x518>
 8006a84:	9b08      	ldr	r3, [sp, #32]
 8006a86:	2b00      	cmp	r3, #0
 8006a88:	dd37      	ble.n	8006afa <_dtoa_r+0x43a>
 8006a8a:	1e7b      	subs	r3, r7, #1
 8006a8c:	4620      	mov	r0, r4
 8006a8e:	9304      	str	r3, [sp, #16]
 8006a90:	2200      	movs	r2, #0
 8006a92:	4629      	mov	r1, r5
 8006a94:	4b55      	ldr	r3, [pc, #340]	@ (8006bec <_dtoa_r+0x52c>)
 8006a96:	f7f9 fd1f 	bl	80004d8 <__aeabi_dmul>
 8006a9a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8006a9e:	9c08      	ldr	r4, [sp, #32]
 8006aa0:	3601      	adds	r6, #1
 8006aa2:	4630      	mov	r0, r6
 8006aa4:	f7f9 fcae 	bl	8000404 <__aeabi_i2d>
 8006aa8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8006aac:	f7f9 fd14 	bl	80004d8 <__aeabi_dmul>
 8006ab0:	2200      	movs	r2, #0
 8006ab2:	4b4f      	ldr	r3, [pc, #316]	@ (8006bf0 <_dtoa_r+0x530>)
 8006ab4:	f7f9 fb5a 	bl	800016c <__adddf3>
 8006ab8:	4605      	mov	r5, r0
 8006aba:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8006abe:	2c00      	cmp	r4, #0
 8006ac0:	f040 809a 	bne.w	8006bf8 <_dtoa_r+0x538>
 8006ac4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006ac8:	2200      	movs	r2, #0
 8006aca:	4b4a      	ldr	r3, [pc, #296]	@ (8006bf4 <_dtoa_r+0x534>)
 8006acc:	f7f9 fb4c 	bl	8000168 <__aeabi_dsub>
 8006ad0:	4602      	mov	r2, r0
 8006ad2:	460b      	mov	r3, r1
 8006ad4:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8006ad8:	462a      	mov	r2, r5
 8006ada:	4633      	mov	r3, r6
 8006adc:	f7f9 ff8c 	bl	80009f8 <__aeabi_dcmpgt>
 8006ae0:	2800      	cmp	r0, #0
 8006ae2:	f040 828e 	bne.w	8007002 <_dtoa_r+0x942>
 8006ae6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006aea:	462a      	mov	r2, r5
 8006aec:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8006af0:	f7f9 ff64 	bl	80009bc <__aeabi_dcmplt>
 8006af4:	2800      	cmp	r0, #0
 8006af6:	f040 8127 	bne.w	8006d48 <_dtoa_r+0x688>
 8006afa:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 8006afe:	e9cd 3402 	strd	r3, r4, [sp, #8]
 8006b02:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8006b04:	2b00      	cmp	r3, #0
 8006b06:	f2c0 8163 	blt.w	8006dd0 <_dtoa_r+0x710>
 8006b0a:	2f0e      	cmp	r7, #14
 8006b0c:	f300 8160 	bgt.w	8006dd0 <_dtoa_r+0x710>
 8006b10:	4b33      	ldr	r3, [pc, #204]	@ (8006be0 <_dtoa_r+0x520>)
 8006b12:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8006b16:	e9d3 3400 	ldrd	r3, r4, [r3]
 8006b1a:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8006b1e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8006b20:	2b00      	cmp	r3, #0
 8006b22:	da03      	bge.n	8006b2c <_dtoa_r+0x46c>
 8006b24:	9b07      	ldr	r3, [sp, #28]
 8006b26:	2b00      	cmp	r3, #0
 8006b28:	f340 8100 	ble.w	8006d2c <_dtoa_r+0x66c>
 8006b2c:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8006b30:	4656      	mov	r6, sl
 8006b32:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8006b36:	4620      	mov	r0, r4
 8006b38:	4629      	mov	r1, r5
 8006b3a:	f7f9 fdf7 	bl	800072c <__aeabi_ddiv>
 8006b3e:	f7f9 ff7b 	bl	8000a38 <__aeabi_d2iz>
 8006b42:	4680      	mov	r8, r0
 8006b44:	f7f9 fc5e 	bl	8000404 <__aeabi_i2d>
 8006b48:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8006b4c:	f7f9 fcc4 	bl	80004d8 <__aeabi_dmul>
 8006b50:	4602      	mov	r2, r0
 8006b52:	460b      	mov	r3, r1
 8006b54:	4620      	mov	r0, r4
 8006b56:	4629      	mov	r1, r5
 8006b58:	f7f9 fb06 	bl	8000168 <__aeabi_dsub>
 8006b5c:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8006b60:	9d07      	ldr	r5, [sp, #28]
 8006b62:	f806 4b01 	strb.w	r4, [r6], #1
 8006b66:	eba6 040a 	sub.w	r4, r6, sl
 8006b6a:	42a5      	cmp	r5, r4
 8006b6c:	4602      	mov	r2, r0
 8006b6e:	460b      	mov	r3, r1
 8006b70:	f040 8116 	bne.w	8006da0 <_dtoa_r+0x6e0>
 8006b74:	f7f9 fafa 	bl	800016c <__adddf3>
 8006b78:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8006b7c:	4604      	mov	r4, r0
 8006b7e:	460d      	mov	r5, r1
 8006b80:	f7f9 ff3a 	bl	80009f8 <__aeabi_dcmpgt>
 8006b84:	2800      	cmp	r0, #0
 8006b86:	f040 80f8 	bne.w	8006d7a <_dtoa_r+0x6ba>
 8006b8a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8006b8e:	4620      	mov	r0, r4
 8006b90:	4629      	mov	r1, r5
 8006b92:	f7f9 ff09 	bl	80009a8 <__aeabi_dcmpeq>
 8006b96:	b118      	cbz	r0, 8006ba0 <_dtoa_r+0x4e0>
 8006b98:	f018 0f01 	tst.w	r8, #1
 8006b9c:	f040 80ed 	bne.w	8006d7a <_dtoa_r+0x6ba>
 8006ba0:	4649      	mov	r1, r9
 8006ba2:	4658      	mov	r0, fp
 8006ba4:	f000 fbee 	bl	8007384 <_Bfree>
 8006ba8:	2300      	movs	r3, #0
 8006baa:	7033      	strb	r3, [r6, #0]
 8006bac:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8006bae:	3701      	adds	r7, #1
 8006bb0:	601f      	str	r7, [r3, #0]
 8006bb2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8006bb4:	2b00      	cmp	r3, #0
 8006bb6:	f000 8320 	beq.w	80071fa <_dtoa_r+0xb3a>
 8006bba:	601e      	str	r6, [r3, #0]
 8006bbc:	e31d      	b.n	80071fa <_dtoa_r+0xb3a>
 8006bbe:	07e2      	lsls	r2, r4, #31
 8006bc0:	d505      	bpl.n	8006bce <_dtoa_r+0x50e>
 8006bc2:	e9d5 2300 	ldrd	r2, r3, [r5]
 8006bc6:	f7f9 fc87 	bl	80004d8 <__aeabi_dmul>
 8006bca:	2301      	movs	r3, #1
 8006bcc:	3601      	adds	r6, #1
 8006bce:	1064      	asrs	r4, r4, #1
 8006bd0:	3508      	adds	r5, #8
 8006bd2:	e73f      	b.n	8006a54 <_dtoa_r+0x394>
 8006bd4:	2602      	movs	r6, #2
 8006bd6:	e742      	b.n	8006a5e <_dtoa_r+0x39e>
 8006bd8:	9c07      	ldr	r4, [sp, #28]
 8006bda:	9704      	str	r7, [sp, #16]
 8006bdc:	e761      	b.n	8006aa2 <_dtoa_r+0x3e2>
 8006bde:	bf00      	nop
 8006be0:	080084a8 	.word	0x080084a8
 8006be4:	08008480 	.word	0x08008480
 8006be8:	3ff00000 	.word	0x3ff00000
 8006bec:	40240000 	.word	0x40240000
 8006bf0:	401c0000 	.word	0x401c0000
 8006bf4:	40140000 	.word	0x40140000
 8006bf8:	4b70      	ldr	r3, [pc, #448]	@ (8006dbc <_dtoa_r+0x6fc>)
 8006bfa:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8006bfc:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8006c00:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8006c04:	4454      	add	r4, sl
 8006c06:	2900      	cmp	r1, #0
 8006c08:	d045      	beq.n	8006c96 <_dtoa_r+0x5d6>
 8006c0a:	2000      	movs	r0, #0
 8006c0c:	496c      	ldr	r1, [pc, #432]	@ (8006dc0 <_dtoa_r+0x700>)
 8006c0e:	f7f9 fd8d 	bl	800072c <__aeabi_ddiv>
 8006c12:	4633      	mov	r3, r6
 8006c14:	462a      	mov	r2, r5
 8006c16:	f7f9 faa7 	bl	8000168 <__aeabi_dsub>
 8006c1a:	4656      	mov	r6, sl
 8006c1c:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8006c20:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006c24:	f7f9 ff08 	bl	8000a38 <__aeabi_d2iz>
 8006c28:	4605      	mov	r5, r0
 8006c2a:	f7f9 fbeb 	bl	8000404 <__aeabi_i2d>
 8006c2e:	4602      	mov	r2, r0
 8006c30:	460b      	mov	r3, r1
 8006c32:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006c36:	f7f9 fa97 	bl	8000168 <__aeabi_dsub>
 8006c3a:	4602      	mov	r2, r0
 8006c3c:	460b      	mov	r3, r1
 8006c3e:	3530      	adds	r5, #48	@ 0x30
 8006c40:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8006c44:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8006c48:	f806 5b01 	strb.w	r5, [r6], #1
 8006c4c:	f7f9 feb6 	bl	80009bc <__aeabi_dcmplt>
 8006c50:	2800      	cmp	r0, #0
 8006c52:	d163      	bne.n	8006d1c <_dtoa_r+0x65c>
 8006c54:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8006c58:	2000      	movs	r0, #0
 8006c5a:	495a      	ldr	r1, [pc, #360]	@ (8006dc4 <_dtoa_r+0x704>)
 8006c5c:	f7f9 fa84 	bl	8000168 <__aeabi_dsub>
 8006c60:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8006c64:	f7f9 feaa 	bl	80009bc <__aeabi_dcmplt>
 8006c68:	2800      	cmp	r0, #0
 8006c6a:	f040 8087 	bne.w	8006d7c <_dtoa_r+0x6bc>
 8006c6e:	42a6      	cmp	r6, r4
 8006c70:	f43f af43 	beq.w	8006afa <_dtoa_r+0x43a>
 8006c74:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8006c78:	2200      	movs	r2, #0
 8006c7a:	4b53      	ldr	r3, [pc, #332]	@ (8006dc8 <_dtoa_r+0x708>)
 8006c7c:	f7f9 fc2c 	bl	80004d8 <__aeabi_dmul>
 8006c80:	2200      	movs	r2, #0
 8006c82:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8006c86:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006c8a:	4b4f      	ldr	r3, [pc, #316]	@ (8006dc8 <_dtoa_r+0x708>)
 8006c8c:	f7f9 fc24 	bl	80004d8 <__aeabi_dmul>
 8006c90:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8006c94:	e7c4      	b.n	8006c20 <_dtoa_r+0x560>
 8006c96:	4631      	mov	r1, r6
 8006c98:	4628      	mov	r0, r5
 8006c9a:	f7f9 fc1d 	bl	80004d8 <__aeabi_dmul>
 8006c9e:	4656      	mov	r6, sl
 8006ca0:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8006ca4:	9413      	str	r4, [sp, #76]	@ 0x4c
 8006ca6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006caa:	f7f9 fec5 	bl	8000a38 <__aeabi_d2iz>
 8006cae:	4605      	mov	r5, r0
 8006cb0:	f7f9 fba8 	bl	8000404 <__aeabi_i2d>
 8006cb4:	4602      	mov	r2, r0
 8006cb6:	460b      	mov	r3, r1
 8006cb8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006cbc:	f7f9 fa54 	bl	8000168 <__aeabi_dsub>
 8006cc0:	4602      	mov	r2, r0
 8006cc2:	460b      	mov	r3, r1
 8006cc4:	3530      	adds	r5, #48	@ 0x30
 8006cc6:	f806 5b01 	strb.w	r5, [r6], #1
 8006cca:	42a6      	cmp	r6, r4
 8006ccc:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8006cd0:	f04f 0200 	mov.w	r2, #0
 8006cd4:	d124      	bne.n	8006d20 <_dtoa_r+0x660>
 8006cd6:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8006cda:	4b39      	ldr	r3, [pc, #228]	@ (8006dc0 <_dtoa_r+0x700>)
 8006cdc:	f7f9 fa46 	bl	800016c <__adddf3>
 8006ce0:	4602      	mov	r2, r0
 8006ce2:	460b      	mov	r3, r1
 8006ce4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006ce8:	f7f9 fe86 	bl	80009f8 <__aeabi_dcmpgt>
 8006cec:	2800      	cmp	r0, #0
 8006cee:	d145      	bne.n	8006d7c <_dtoa_r+0x6bc>
 8006cf0:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8006cf4:	2000      	movs	r0, #0
 8006cf6:	4932      	ldr	r1, [pc, #200]	@ (8006dc0 <_dtoa_r+0x700>)
 8006cf8:	f7f9 fa36 	bl	8000168 <__aeabi_dsub>
 8006cfc:	4602      	mov	r2, r0
 8006cfe:	460b      	mov	r3, r1
 8006d00:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006d04:	f7f9 fe5a 	bl	80009bc <__aeabi_dcmplt>
 8006d08:	2800      	cmp	r0, #0
 8006d0a:	f43f aef6 	beq.w	8006afa <_dtoa_r+0x43a>
 8006d0e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8006d10:	1e73      	subs	r3, r6, #1
 8006d12:	9313      	str	r3, [sp, #76]	@ 0x4c
 8006d14:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8006d18:	2b30      	cmp	r3, #48	@ 0x30
 8006d1a:	d0f8      	beq.n	8006d0e <_dtoa_r+0x64e>
 8006d1c:	9f04      	ldr	r7, [sp, #16]
 8006d1e:	e73f      	b.n	8006ba0 <_dtoa_r+0x4e0>
 8006d20:	4b29      	ldr	r3, [pc, #164]	@ (8006dc8 <_dtoa_r+0x708>)
 8006d22:	f7f9 fbd9 	bl	80004d8 <__aeabi_dmul>
 8006d26:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8006d2a:	e7bc      	b.n	8006ca6 <_dtoa_r+0x5e6>
 8006d2c:	d10c      	bne.n	8006d48 <_dtoa_r+0x688>
 8006d2e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8006d32:	2200      	movs	r2, #0
 8006d34:	4b25      	ldr	r3, [pc, #148]	@ (8006dcc <_dtoa_r+0x70c>)
 8006d36:	f7f9 fbcf 	bl	80004d8 <__aeabi_dmul>
 8006d3a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8006d3e:	f7f9 fe51 	bl	80009e4 <__aeabi_dcmpge>
 8006d42:	2800      	cmp	r0, #0
 8006d44:	f000 815b 	beq.w	8006ffe <_dtoa_r+0x93e>
 8006d48:	2400      	movs	r4, #0
 8006d4a:	4625      	mov	r5, r4
 8006d4c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8006d4e:	4656      	mov	r6, sl
 8006d50:	43db      	mvns	r3, r3
 8006d52:	9304      	str	r3, [sp, #16]
 8006d54:	2700      	movs	r7, #0
 8006d56:	4621      	mov	r1, r4
 8006d58:	4658      	mov	r0, fp
 8006d5a:	f000 fb13 	bl	8007384 <_Bfree>
 8006d5e:	2d00      	cmp	r5, #0
 8006d60:	d0dc      	beq.n	8006d1c <_dtoa_r+0x65c>
 8006d62:	b12f      	cbz	r7, 8006d70 <_dtoa_r+0x6b0>
 8006d64:	42af      	cmp	r7, r5
 8006d66:	d003      	beq.n	8006d70 <_dtoa_r+0x6b0>
 8006d68:	4639      	mov	r1, r7
 8006d6a:	4658      	mov	r0, fp
 8006d6c:	f000 fb0a 	bl	8007384 <_Bfree>
 8006d70:	4629      	mov	r1, r5
 8006d72:	4658      	mov	r0, fp
 8006d74:	f000 fb06 	bl	8007384 <_Bfree>
 8006d78:	e7d0      	b.n	8006d1c <_dtoa_r+0x65c>
 8006d7a:	9704      	str	r7, [sp, #16]
 8006d7c:	4633      	mov	r3, r6
 8006d7e:	461e      	mov	r6, r3
 8006d80:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8006d84:	2a39      	cmp	r2, #57	@ 0x39
 8006d86:	d107      	bne.n	8006d98 <_dtoa_r+0x6d8>
 8006d88:	459a      	cmp	sl, r3
 8006d8a:	d1f8      	bne.n	8006d7e <_dtoa_r+0x6be>
 8006d8c:	9a04      	ldr	r2, [sp, #16]
 8006d8e:	3201      	adds	r2, #1
 8006d90:	9204      	str	r2, [sp, #16]
 8006d92:	2230      	movs	r2, #48	@ 0x30
 8006d94:	f88a 2000 	strb.w	r2, [sl]
 8006d98:	781a      	ldrb	r2, [r3, #0]
 8006d9a:	3201      	adds	r2, #1
 8006d9c:	701a      	strb	r2, [r3, #0]
 8006d9e:	e7bd      	b.n	8006d1c <_dtoa_r+0x65c>
 8006da0:	2200      	movs	r2, #0
 8006da2:	4b09      	ldr	r3, [pc, #36]	@ (8006dc8 <_dtoa_r+0x708>)
 8006da4:	f7f9 fb98 	bl	80004d8 <__aeabi_dmul>
 8006da8:	2200      	movs	r2, #0
 8006daa:	2300      	movs	r3, #0
 8006dac:	4604      	mov	r4, r0
 8006dae:	460d      	mov	r5, r1
 8006db0:	f7f9 fdfa 	bl	80009a8 <__aeabi_dcmpeq>
 8006db4:	2800      	cmp	r0, #0
 8006db6:	f43f aebc 	beq.w	8006b32 <_dtoa_r+0x472>
 8006dba:	e6f1      	b.n	8006ba0 <_dtoa_r+0x4e0>
 8006dbc:	080084a8 	.word	0x080084a8
 8006dc0:	3fe00000 	.word	0x3fe00000
 8006dc4:	3ff00000 	.word	0x3ff00000
 8006dc8:	40240000 	.word	0x40240000
 8006dcc:	40140000 	.word	0x40140000
 8006dd0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8006dd2:	2a00      	cmp	r2, #0
 8006dd4:	f000 80db 	beq.w	8006f8e <_dtoa_r+0x8ce>
 8006dd8:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8006dda:	2a01      	cmp	r2, #1
 8006ddc:	f300 80bf 	bgt.w	8006f5e <_dtoa_r+0x89e>
 8006de0:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8006de2:	2a00      	cmp	r2, #0
 8006de4:	f000 80b7 	beq.w	8006f56 <_dtoa_r+0x896>
 8006de8:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8006dec:	4646      	mov	r6, r8
 8006dee:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8006df0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8006df2:	2101      	movs	r1, #1
 8006df4:	441a      	add	r2, r3
 8006df6:	4658      	mov	r0, fp
 8006df8:	4498      	add	r8, r3
 8006dfa:	9209      	str	r2, [sp, #36]	@ 0x24
 8006dfc:	f000 fb76 	bl	80074ec <__i2b>
 8006e00:	4605      	mov	r5, r0
 8006e02:	b15e      	cbz	r6, 8006e1c <_dtoa_r+0x75c>
 8006e04:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006e06:	2b00      	cmp	r3, #0
 8006e08:	dd08      	ble.n	8006e1c <_dtoa_r+0x75c>
 8006e0a:	42b3      	cmp	r3, r6
 8006e0c:	bfa8      	it	ge
 8006e0e:	4633      	movge	r3, r6
 8006e10:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8006e12:	eba8 0803 	sub.w	r8, r8, r3
 8006e16:	1af6      	subs	r6, r6, r3
 8006e18:	1ad3      	subs	r3, r2, r3
 8006e1a:	9309      	str	r3, [sp, #36]	@ 0x24
 8006e1c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006e1e:	b1f3      	cbz	r3, 8006e5e <_dtoa_r+0x79e>
 8006e20:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8006e22:	2b00      	cmp	r3, #0
 8006e24:	f000 80b7 	beq.w	8006f96 <_dtoa_r+0x8d6>
 8006e28:	b18c      	cbz	r4, 8006e4e <_dtoa_r+0x78e>
 8006e2a:	4629      	mov	r1, r5
 8006e2c:	4622      	mov	r2, r4
 8006e2e:	4658      	mov	r0, fp
 8006e30:	f000 fc1a 	bl	8007668 <__pow5mult>
 8006e34:	464a      	mov	r2, r9
 8006e36:	4601      	mov	r1, r0
 8006e38:	4605      	mov	r5, r0
 8006e3a:	4658      	mov	r0, fp
 8006e3c:	f000 fb6c 	bl	8007518 <__multiply>
 8006e40:	4649      	mov	r1, r9
 8006e42:	9004      	str	r0, [sp, #16]
 8006e44:	4658      	mov	r0, fp
 8006e46:	f000 fa9d 	bl	8007384 <_Bfree>
 8006e4a:	9b04      	ldr	r3, [sp, #16]
 8006e4c:	4699      	mov	r9, r3
 8006e4e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006e50:	1b1a      	subs	r2, r3, r4
 8006e52:	d004      	beq.n	8006e5e <_dtoa_r+0x79e>
 8006e54:	4649      	mov	r1, r9
 8006e56:	4658      	mov	r0, fp
 8006e58:	f000 fc06 	bl	8007668 <__pow5mult>
 8006e5c:	4681      	mov	r9, r0
 8006e5e:	2101      	movs	r1, #1
 8006e60:	4658      	mov	r0, fp
 8006e62:	f000 fb43 	bl	80074ec <__i2b>
 8006e66:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006e68:	4604      	mov	r4, r0
 8006e6a:	2b00      	cmp	r3, #0
 8006e6c:	f000 81c9 	beq.w	8007202 <_dtoa_r+0xb42>
 8006e70:	461a      	mov	r2, r3
 8006e72:	4601      	mov	r1, r0
 8006e74:	4658      	mov	r0, fp
 8006e76:	f000 fbf7 	bl	8007668 <__pow5mult>
 8006e7a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8006e7c:	4604      	mov	r4, r0
 8006e7e:	2b01      	cmp	r3, #1
 8006e80:	f300 808f 	bgt.w	8006fa2 <_dtoa_r+0x8e2>
 8006e84:	9b02      	ldr	r3, [sp, #8]
 8006e86:	2b00      	cmp	r3, #0
 8006e88:	f040 8087 	bne.w	8006f9a <_dtoa_r+0x8da>
 8006e8c:	9b03      	ldr	r3, [sp, #12]
 8006e8e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006e92:	2b00      	cmp	r3, #0
 8006e94:	f040 8083 	bne.w	8006f9e <_dtoa_r+0x8de>
 8006e98:	9b03      	ldr	r3, [sp, #12]
 8006e9a:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8006e9e:	0d1b      	lsrs	r3, r3, #20
 8006ea0:	051b      	lsls	r3, r3, #20
 8006ea2:	b12b      	cbz	r3, 8006eb0 <_dtoa_r+0x7f0>
 8006ea4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006ea6:	f108 0801 	add.w	r8, r8, #1
 8006eaa:	3301      	adds	r3, #1
 8006eac:	9309      	str	r3, [sp, #36]	@ 0x24
 8006eae:	2301      	movs	r3, #1
 8006eb0:	930a      	str	r3, [sp, #40]	@ 0x28
 8006eb2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006eb4:	2b00      	cmp	r3, #0
 8006eb6:	f000 81aa 	beq.w	800720e <_dtoa_r+0xb4e>
 8006eba:	6923      	ldr	r3, [r4, #16]
 8006ebc:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8006ec0:	6918      	ldr	r0, [r3, #16]
 8006ec2:	f000 fac7 	bl	8007454 <__hi0bits>
 8006ec6:	f1c0 0020 	rsb	r0, r0, #32
 8006eca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006ecc:	4418      	add	r0, r3
 8006ece:	f010 001f 	ands.w	r0, r0, #31
 8006ed2:	d071      	beq.n	8006fb8 <_dtoa_r+0x8f8>
 8006ed4:	f1c0 0320 	rsb	r3, r0, #32
 8006ed8:	2b04      	cmp	r3, #4
 8006eda:	dd65      	ble.n	8006fa8 <_dtoa_r+0x8e8>
 8006edc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006ede:	f1c0 001c 	rsb	r0, r0, #28
 8006ee2:	4403      	add	r3, r0
 8006ee4:	4480      	add	r8, r0
 8006ee6:	4406      	add	r6, r0
 8006ee8:	9309      	str	r3, [sp, #36]	@ 0x24
 8006eea:	f1b8 0f00 	cmp.w	r8, #0
 8006eee:	dd05      	ble.n	8006efc <_dtoa_r+0x83c>
 8006ef0:	4649      	mov	r1, r9
 8006ef2:	4642      	mov	r2, r8
 8006ef4:	4658      	mov	r0, fp
 8006ef6:	f000 fc11 	bl	800771c <__lshift>
 8006efa:	4681      	mov	r9, r0
 8006efc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006efe:	2b00      	cmp	r3, #0
 8006f00:	dd05      	ble.n	8006f0e <_dtoa_r+0x84e>
 8006f02:	4621      	mov	r1, r4
 8006f04:	461a      	mov	r2, r3
 8006f06:	4658      	mov	r0, fp
 8006f08:	f000 fc08 	bl	800771c <__lshift>
 8006f0c:	4604      	mov	r4, r0
 8006f0e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8006f10:	2b00      	cmp	r3, #0
 8006f12:	d053      	beq.n	8006fbc <_dtoa_r+0x8fc>
 8006f14:	4621      	mov	r1, r4
 8006f16:	4648      	mov	r0, r9
 8006f18:	f000 fc6c 	bl	80077f4 <__mcmp>
 8006f1c:	2800      	cmp	r0, #0
 8006f1e:	da4d      	bge.n	8006fbc <_dtoa_r+0x8fc>
 8006f20:	1e7b      	subs	r3, r7, #1
 8006f22:	4649      	mov	r1, r9
 8006f24:	9304      	str	r3, [sp, #16]
 8006f26:	220a      	movs	r2, #10
 8006f28:	2300      	movs	r3, #0
 8006f2a:	4658      	mov	r0, fp
 8006f2c:	f000 fa4c 	bl	80073c8 <__multadd>
 8006f30:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8006f32:	4681      	mov	r9, r0
 8006f34:	2b00      	cmp	r3, #0
 8006f36:	f000 816c 	beq.w	8007212 <_dtoa_r+0xb52>
 8006f3a:	2300      	movs	r3, #0
 8006f3c:	4629      	mov	r1, r5
 8006f3e:	220a      	movs	r2, #10
 8006f40:	4658      	mov	r0, fp
 8006f42:	f000 fa41 	bl	80073c8 <__multadd>
 8006f46:	9b08      	ldr	r3, [sp, #32]
 8006f48:	4605      	mov	r5, r0
 8006f4a:	2b00      	cmp	r3, #0
 8006f4c:	dc61      	bgt.n	8007012 <_dtoa_r+0x952>
 8006f4e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8006f50:	2b02      	cmp	r3, #2
 8006f52:	dc3b      	bgt.n	8006fcc <_dtoa_r+0x90c>
 8006f54:	e05d      	b.n	8007012 <_dtoa_r+0x952>
 8006f56:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8006f58:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8006f5c:	e746      	b.n	8006dec <_dtoa_r+0x72c>
 8006f5e:	9b07      	ldr	r3, [sp, #28]
 8006f60:	1e5c      	subs	r4, r3, #1
 8006f62:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006f64:	42a3      	cmp	r3, r4
 8006f66:	bfbf      	itttt	lt
 8006f68:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8006f6a:	9a0e      	ldrlt	r2, [sp, #56]	@ 0x38
 8006f6c:	1ae3      	sublt	r3, r4, r3
 8006f6e:	18d2      	addlt	r2, r2, r3
 8006f70:	bfa8      	it	ge
 8006f72:	1b1c      	subge	r4, r3, r4
 8006f74:	9b07      	ldr	r3, [sp, #28]
 8006f76:	bfbe      	ittt	lt
 8006f78:	940a      	strlt	r4, [sp, #40]	@ 0x28
 8006f7a:	920e      	strlt	r2, [sp, #56]	@ 0x38
 8006f7c:	2400      	movlt	r4, #0
 8006f7e:	2b00      	cmp	r3, #0
 8006f80:	bfb5      	itete	lt
 8006f82:	eba8 0603 	sublt.w	r6, r8, r3
 8006f86:	4646      	movge	r6, r8
 8006f88:	2300      	movlt	r3, #0
 8006f8a:	9b07      	ldrge	r3, [sp, #28]
 8006f8c:	e730      	b.n	8006df0 <_dtoa_r+0x730>
 8006f8e:	4646      	mov	r6, r8
 8006f90:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8006f92:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8006f94:	e735      	b.n	8006e02 <_dtoa_r+0x742>
 8006f96:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8006f98:	e75c      	b.n	8006e54 <_dtoa_r+0x794>
 8006f9a:	2300      	movs	r3, #0
 8006f9c:	e788      	b.n	8006eb0 <_dtoa_r+0x7f0>
 8006f9e:	9b02      	ldr	r3, [sp, #8]
 8006fa0:	e786      	b.n	8006eb0 <_dtoa_r+0x7f0>
 8006fa2:	2300      	movs	r3, #0
 8006fa4:	930a      	str	r3, [sp, #40]	@ 0x28
 8006fa6:	e788      	b.n	8006eba <_dtoa_r+0x7fa>
 8006fa8:	d09f      	beq.n	8006eea <_dtoa_r+0x82a>
 8006faa:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8006fac:	331c      	adds	r3, #28
 8006fae:	441a      	add	r2, r3
 8006fb0:	4498      	add	r8, r3
 8006fb2:	441e      	add	r6, r3
 8006fb4:	9209      	str	r2, [sp, #36]	@ 0x24
 8006fb6:	e798      	b.n	8006eea <_dtoa_r+0x82a>
 8006fb8:	4603      	mov	r3, r0
 8006fba:	e7f6      	b.n	8006faa <_dtoa_r+0x8ea>
 8006fbc:	9b07      	ldr	r3, [sp, #28]
 8006fbe:	9704      	str	r7, [sp, #16]
 8006fc0:	2b00      	cmp	r3, #0
 8006fc2:	dc20      	bgt.n	8007006 <_dtoa_r+0x946>
 8006fc4:	9308      	str	r3, [sp, #32]
 8006fc6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8006fc8:	2b02      	cmp	r3, #2
 8006fca:	dd1e      	ble.n	800700a <_dtoa_r+0x94a>
 8006fcc:	9b08      	ldr	r3, [sp, #32]
 8006fce:	2b00      	cmp	r3, #0
 8006fd0:	f47f aebc 	bne.w	8006d4c <_dtoa_r+0x68c>
 8006fd4:	4621      	mov	r1, r4
 8006fd6:	2205      	movs	r2, #5
 8006fd8:	4658      	mov	r0, fp
 8006fda:	f000 f9f5 	bl	80073c8 <__multadd>
 8006fde:	4601      	mov	r1, r0
 8006fe0:	4604      	mov	r4, r0
 8006fe2:	4648      	mov	r0, r9
 8006fe4:	f000 fc06 	bl	80077f4 <__mcmp>
 8006fe8:	2800      	cmp	r0, #0
 8006fea:	f77f aeaf 	ble.w	8006d4c <_dtoa_r+0x68c>
 8006fee:	2331      	movs	r3, #49	@ 0x31
 8006ff0:	4656      	mov	r6, sl
 8006ff2:	f806 3b01 	strb.w	r3, [r6], #1
 8006ff6:	9b04      	ldr	r3, [sp, #16]
 8006ff8:	3301      	adds	r3, #1
 8006ffa:	9304      	str	r3, [sp, #16]
 8006ffc:	e6aa      	b.n	8006d54 <_dtoa_r+0x694>
 8006ffe:	9c07      	ldr	r4, [sp, #28]
 8007000:	9704      	str	r7, [sp, #16]
 8007002:	4625      	mov	r5, r4
 8007004:	e7f3      	b.n	8006fee <_dtoa_r+0x92e>
 8007006:	9b07      	ldr	r3, [sp, #28]
 8007008:	9308      	str	r3, [sp, #32]
 800700a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800700c:	2b00      	cmp	r3, #0
 800700e:	f000 8104 	beq.w	800721a <_dtoa_r+0xb5a>
 8007012:	2e00      	cmp	r6, #0
 8007014:	dd05      	ble.n	8007022 <_dtoa_r+0x962>
 8007016:	4629      	mov	r1, r5
 8007018:	4632      	mov	r2, r6
 800701a:	4658      	mov	r0, fp
 800701c:	f000 fb7e 	bl	800771c <__lshift>
 8007020:	4605      	mov	r5, r0
 8007022:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8007024:	2b00      	cmp	r3, #0
 8007026:	d05a      	beq.n	80070de <_dtoa_r+0xa1e>
 8007028:	4658      	mov	r0, fp
 800702a:	6869      	ldr	r1, [r5, #4]
 800702c:	f000 f96a 	bl	8007304 <_Balloc>
 8007030:	4606      	mov	r6, r0
 8007032:	b928      	cbnz	r0, 8007040 <_dtoa_r+0x980>
 8007034:	4602      	mov	r2, r0
 8007036:	f240 21ef 	movw	r1, #751	@ 0x2ef
 800703a:	4b83      	ldr	r3, [pc, #524]	@ (8007248 <_dtoa_r+0xb88>)
 800703c:	f7ff bb54 	b.w	80066e8 <_dtoa_r+0x28>
 8007040:	692a      	ldr	r2, [r5, #16]
 8007042:	f105 010c 	add.w	r1, r5, #12
 8007046:	3202      	adds	r2, #2
 8007048:	0092      	lsls	r2, r2, #2
 800704a:	300c      	adds	r0, #12
 800704c:	f7ff fa81 	bl	8006552 <memcpy>
 8007050:	2201      	movs	r2, #1
 8007052:	4631      	mov	r1, r6
 8007054:	4658      	mov	r0, fp
 8007056:	f000 fb61 	bl	800771c <__lshift>
 800705a:	462f      	mov	r7, r5
 800705c:	4605      	mov	r5, r0
 800705e:	f10a 0301 	add.w	r3, sl, #1
 8007062:	9307      	str	r3, [sp, #28]
 8007064:	9b08      	ldr	r3, [sp, #32]
 8007066:	4453      	add	r3, sl
 8007068:	930b      	str	r3, [sp, #44]	@ 0x2c
 800706a:	9b02      	ldr	r3, [sp, #8]
 800706c:	f003 0301 	and.w	r3, r3, #1
 8007070:	930a      	str	r3, [sp, #40]	@ 0x28
 8007072:	9b07      	ldr	r3, [sp, #28]
 8007074:	4621      	mov	r1, r4
 8007076:	3b01      	subs	r3, #1
 8007078:	4648      	mov	r0, r9
 800707a:	9302      	str	r3, [sp, #8]
 800707c:	f7ff fa96 	bl	80065ac <quorem>
 8007080:	4639      	mov	r1, r7
 8007082:	9008      	str	r0, [sp, #32]
 8007084:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8007088:	4648      	mov	r0, r9
 800708a:	f000 fbb3 	bl	80077f4 <__mcmp>
 800708e:	462a      	mov	r2, r5
 8007090:	9009      	str	r0, [sp, #36]	@ 0x24
 8007092:	4621      	mov	r1, r4
 8007094:	4658      	mov	r0, fp
 8007096:	f000 fbc9 	bl	800782c <__mdiff>
 800709a:	68c2      	ldr	r2, [r0, #12]
 800709c:	4606      	mov	r6, r0
 800709e:	bb02      	cbnz	r2, 80070e2 <_dtoa_r+0xa22>
 80070a0:	4601      	mov	r1, r0
 80070a2:	4648      	mov	r0, r9
 80070a4:	f000 fba6 	bl	80077f4 <__mcmp>
 80070a8:	4602      	mov	r2, r0
 80070aa:	4631      	mov	r1, r6
 80070ac:	4658      	mov	r0, fp
 80070ae:	920c      	str	r2, [sp, #48]	@ 0x30
 80070b0:	f000 f968 	bl	8007384 <_Bfree>
 80070b4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80070b6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80070b8:	9e07      	ldr	r6, [sp, #28]
 80070ba:	ea43 0102 	orr.w	r1, r3, r2
 80070be:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80070c0:	4319      	orrs	r1, r3
 80070c2:	d110      	bne.n	80070e6 <_dtoa_r+0xa26>
 80070c4:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 80070c8:	d029      	beq.n	800711e <_dtoa_r+0xa5e>
 80070ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80070cc:	2b00      	cmp	r3, #0
 80070ce:	dd02      	ble.n	80070d6 <_dtoa_r+0xa16>
 80070d0:	9b08      	ldr	r3, [sp, #32]
 80070d2:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 80070d6:	9b02      	ldr	r3, [sp, #8]
 80070d8:	f883 8000 	strb.w	r8, [r3]
 80070dc:	e63b      	b.n	8006d56 <_dtoa_r+0x696>
 80070de:	4628      	mov	r0, r5
 80070e0:	e7bb      	b.n	800705a <_dtoa_r+0x99a>
 80070e2:	2201      	movs	r2, #1
 80070e4:	e7e1      	b.n	80070aa <_dtoa_r+0x9ea>
 80070e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80070e8:	2b00      	cmp	r3, #0
 80070ea:	db04      	blt.n	80070f6 <_dtoa_r+0xa36>
 80070ec:	9920      	ldr	r1, [sp, #128]	@ 0x80
 80070ee:	430b      	orrs	r3, r1
 80070f0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80070f2:	430b      	orrs	r3, r1
 80070f4:	d120      	bne.n	8007138 <_dtoa_r+0xa78>
 80070f6:	2a00      	cmp	r2, #0
 80070f8:	dded      	ble.n	80070d6 <_dtoa_r+0xa16>
 80070fa:	4649      	mov	r1, r9
 80070fc:	2201      	movs	r2, #1
 80070fe:	4658      	mov	r0, fp
 8007100:	f000 fb0c 	bl	800771c <__lshift>
 8007104:	4621      	mov	r1, r4
 8007106:	4681      	mov	r9, r0
 8007108:	f000 fb74 	bl	80077f4 <__mcmp>
 800710c:	2800      	cmp	r0, #0
 800710e:	dc03      	bgt.n	8007118 <_dtoa_r+0xa58>
 8007110:	d1e1      	bne.n	80070d6 <_dtoa_r+0xa16>
 8007112:	f018 0f01 	tst.w	r8, #1
 8007116:	d0de      	beq.n	80070d6 <_dtoa_r+0xa16>
 8007118:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 800711c:	d1d8      	bne.n	80070d0 <_dtoa_r+0xa10>
 800711e:	2339      	movs	r3, #57	@ 0x39
 8007120:	9a02      	ldr	r2, [sp, #8]
 8007122:	7013      	strb	r3, [r2, #0]
 8007124:	4633      	mov	r3, r6
 8007126:	461e      	mov	r6, r3
 8007128:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 800712c:	3b01      	subs	r3, #1
 800712e:	2a39      	cmp	r2, #57	@ 0x39
 8007130:	d052      	beq.n	80071d8 <_dtoa_r+0xb18>
 8007132:	3201      	adds	r2, #1
 8007134:	701a      	strb	r2, [r3, #0]
 8007136:	e60e      	b.n	8006d56 <_dtoa_r+0x696>
 8007138:	2a00      	cmp	r2, #0
 800713a:	dd07      	ble.n	800714c <_dtoa_r+0xa8c>
 800713c:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8007140:	d0ed      	beq.n	800711e <_dtoa_r+0xa5e>
 8007142:	9a02      	ldr	r2, [sp, #8]
 8007144:	f108 0301 	add.w	r3, r8, #1
 8007148:	7013      	strb	r3, [r2, #0]
 800714a:	e604      	b.n	8006d56 <_dtoa_r+0x696>
 800714c:	9b07      	ldr	r3, [sp, #28]
 800714e:	9a07      	ldr	r2, [sp, #28]
 8007150:	f803 8c01 	strb.w	r8, [r3, #-1]
 8007154:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8007156:	4293      	cmp	r3, r2
 8007158:	d028      	beq.n	80071ac <_dtoa_r+0xaec>
 800715a:	4649      	mov	r1, r9
 800715c:	2300      	movs	r3, #0
 800715e:	220a      	movs	r2, #10
 8007160:	4658      	mov	r0, fp
 8007162:	f000 f931 	bl	80073c8 <__multadd>
 8007166:	42af      	cmp	r7, r5
 8007168:	4681      	mov	r9, r0
 800716a:	f04f 0300 	mov.w	r3, #0
 800716e:	f04f 020a 	mov.w	r2, #10
 8007172:	4639      	mov	r1, r7
 8007174:	4658      	mov	r0, fp
 8007176:	d107      	bne.n	8007188 <_dtoa_r+0xac8>
 8007178:	f000 f926 	bl	80073c8 <__multadd>
 800717c:	4607      	mov	r7, r0
 800717e:	4605      	mov	r5, r0
 8007180:	9b07      	ldr	r3, [sp, #28]
 8007182:	3301      	adds	r3, #1
 8007184:	9307      	str	r3, [sp, #28]
 8007186:	e774      	b.n	8007072 <_dtoa_r+0x9b2>
 8007188:	f000 f91e 	bl	80073c8 <__multadd>
 800718c:	4629      	mov	r1, r5
 800718e:	4607      	mov	r7, r0
 8007190:	2300      	movs	r3, #0
 8007192:	220a      	movs	r2, #10
 8007194:	4658      	mov	r0, fp
 8007196:	f000 f917 	bl	80073c8 <__multadd>
 800719a:	4605      	mov	r5, r0
 800719c:	e7f0      	b.n	8007180 <_dtoa_r+0xac0>
 800719e:	9b08      	ldr	r3, [sp, #32]
 80071a0:	2700      	movs	r7, #0
 80071a2:	2b00      	cmp	r3, #0
 80071a4:	bfcc      	ite	gt
 80071a6:	461e      	movgt	r6, r3
 80071a8:	2601      	movle	r6, #1
 80071aa:	4456      	add	r6, sl
 80071ac:	4649      	mov	r1, r9
 80071ae:	2201      	movs	r2, #1
 80071b0:	4658      	mov	r0, fp
 80071b2:	f000 fab3 	bl	800771c <__lshift>
 80071b6:	4621      	mov	r1, r4
 80071b8:	4681      	mov	r9, r0
 80071ba:	f000 fb1b 	bl	80077f4 <__mcmp>
 80071be:	2800      	cmp	r0, #0
 80071c0:	dcb0      	bgt.n	8007124 <_dtoa_r+0xa64>
 80071c2:	d102      	bne.n	80071ca <_dtoa_r+0xb0a>
 80071c4:	f018 0f01 	tst.w	r8, #1
 80071c8:	d1ac      	bne.n	8007124 <_dtoa_r+0xa64>
 80071ca:	4633      	mov	r3, r6
 80071cc:	461e      	mov	r6, r3
 80071ce:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80071d2:	2a30      	cmp	r2, #48	@ 0x30
 80071d4:	d0fa      	beq.n	80071cc <_dtoa_r+0xb0c>
 80071d6:	e5be      	b.n	8006d56 <_dtoa_r+0x696>
 80071d8:	459a      	cmp	sl, r3
 80071da:	d1a4      	bne.n	8007126 <_dtoa_r+0xa66>
 80071dc:	9b04      	ldr	r3, [sp, #16]
 80071de:	3301      	adds	r3, #1
 80071e0:	9304      	str	r3, [sp, #16]
 80071e2:	2331      	movs	r3, #49	@ 0x31
 80071e4:	f88a 3000 	strb.w	r3, [sl]
 80071e8:	e5b5      	b.n	8006d56 <_dtoa_r+0x696>
 80071ea:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80071ec:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 800724c <_dtoa_r+0xb8c>
 80071f0:	b11b      	cbz	r3, 80071fa <_dtoa_r+0xb3a>
 80071f2:	f10a 0308 	add.w	r3, sl, #8
 80071f6:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 80071f8:	6013      	str	r3, [r2, #0]
 80071fa:	4650      	mov	r0, sl
 80071fc:	b017      	add	sp, #92	@ 0x5c
 80071fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007202:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8007204:	2b01      	cmp	r3, #1
 8007206:	f77f ae3d 	ble.w	8006e84 <_dtoa_r+0x7c4>
 800720a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800720c:	930a      	str	r3, [sp, #40]	@ 0x28
 800720e:	2001      	movs	r0, #1
 8007210:	e65b      	b.n	8006eca <_dtoa_r+0x80a>
 8007212:	9b08      	ldr	r3, [sp, #32]
 8007214:	2b00      	cmp	r3, #0
 8007216:	f77f aed6 	ble.w	8006fc6 <_dtoa_r+0x906>
 800721a:	4656      	mov	r6, sl
 800721c:	4621      	mov	r1, r4
 800721e:	4648      	mov	r0, r9
 8007220:	f7ff f9c4 	bl	80065ac <quorem>
 8007224:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8007228:	9b08      	ldr	r3, [sp, #32]
 800722a:	f806 8b01 	strb.w	r8, [r6], #1
 800722e:	eba6 020a 	sub.w	r2, r6, sl
 8007232:	4293      	cmp	r3, r2
 8007234:	ddb3      	ble.n	800719e <_dtoa_r+0xade>
 8007236:	4649      	mov	r1, r9
 8007238:	2300      	movs	r3, #0
 800723a:	220a      	movs	r2, #10
 800723c:	4658      	mov	r0, fp
 800723e:	f000 f8c3 	bl	80073c8 <__multadd>
 8007242:	4681      	mov	r9, r0
 8007244:	e7ea      	b.n	800721c <_dtoa_r+0xb5c>
 8007246:	bf00      	nop
 8007248:	08008404 	.word	0x08008404
 800724c:	08008388 	.word	0x08008388

08007250 <_free_r>:
 8007250:	b538      	push	{r3, r4, r5, lr}
 8007252:	4605      	mov	r5, r0
 8007254:	2900      	cmp	r1, #0
 8007256:	d040      	beq.n	80072da <_free_r+0x8a>
 8007258:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800725c:	1f0c      	subs	r4, r1, #4
 800725e:	2b00      	cmp	r3, #0
 8007260:	bfb8      	it	lt
 8007262:	18e4      	addlt	r4, r4, r3
 8007264:	f7fe fa66 	bl	8005734 <__malloc_lock>
 8007268:	4a1c      	ldr	r2, [pc, #112]	@ (80072dc <_free_r+0x8c>)
 800726a:	6813      	ldr	r3, [r2, #0]
 800726c:	b933      	cbnz	r3, 800727c <_free_r+0x2c>
 800726e:	6063      	str	r3, [r4, #4]
 8007270:	6014      	str	r4, [r2, #0]
 8007272:	4628      	mov	r0, r5
 8007274:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007278:	f7fe ba62 	b.w	8005740 <__malloc_unlock>
 800727c:	42a3      	cmp	r3, r4
 800727e:	d908      	bls.n	8007292 <_free_r+0x42>
 8007280:	6820      	ldr	r0, [r4, #0]
 8007282:	1821      	adds	r1, r4, r0
 8007284:	428b      	cmp	r3, r1
 8007286:	bf01      	itttt	eq
 8007288:	6819      	ldreq	r1, [r3, #0]
 800728a:	685b      	ldreq	r3, [r3, #4]
 800728c:	1809      	addeq	r1, r1, r0
 800728e:	6021      	streq	r1, [r4, #0]
 8007290:	e7ed      	b.n	800726e <_free_r+0x1e>
 8007292:	461a      	mov	r2, r3
 8007294:	685b      	ldr	r3, [r3, #4]
 8007296:	b10b      	cbz	r3, 800729c <_free_r+0x4c>
 8007298:	42a3      	cmp	r3, r4
 800729a:	d9fa      	bls.n	8007292 <_free_r+0x42>
 800729c:	6811      	ldr	r1, [r2, #0]
 800729e:	1850      	adds	r0, r2, r1
 80072a0:	42a0      	cmp	r0, r4
 80072a2:	d10b      	bne.n	80072bc <_free_r+0x6c>
 80072a4:	6820      	ldr	r0, [r4, #0]
 80072a6:	4401      	add	r1, r0
 80072a8:	1850      	adds	r0, r2, r1
 80072aa:	4283      	cmp	r3, r0
 80072ac:	6011      	str	r1, [r2, #0]
 80072ae:	d1e0      	bne.n	8007272 <_free_r+0x22>
 80072b0:	6818      	ldr	r0, [r3, #0]
 80072b2:	685b      	ldr	r3, [r3, #4]
 80072b4:	4408      	add	r0, r1
 80072b6:	6010      	str	r0, [r2, #0]
 80072b8:	6053      	str	r3, [r2, #4]
 80072ba:	e7da      	b.n	8007272 <_free_r+0x22>
 80072bc:	d902      	bls.n	80072c4 <_free_r+0x74>
 80072be:	230c      	movs	r3, #12
 80072c0:	602b      	str	r3, [r5, #0]
 80072c2:	e7d6      	b.n	8007272 <_free_r+0x22>
 80072c4:	6820      	ldr	r0, [r4, #0]
 80072c6:	1821      	adds	r1, r4, r0
 80072c8:	428b      	cmp	r3, r1
 80072ca:	bf01      	itttt	eq
 80072cc:	6819      	ldreq	r1, [r3, #0]
 80072ce:	685b      	ldreq	r3, [r3, #4]
 80072d0:	1809      	addeq	r1, r1, r0
 80072d2:	6021      	streq	r1, [r4, #0]
 80072d4:	6063      	str	r3, [r4, #4]
 80072d6:	6054      	str	r4, [r2, #4]
 80072d8:	e7cb      	b.n	8007272 <_free_r+0x22>
 80072da:	bd38      	pop	{r3, r4, r5, pc}
 80072dc:	20000524 	.word	0x20000524

080072e0 <__ascii_mbtowc>:
 80072e0:	b082      	sub	sp, #8
 80072e2:	b901      	cbnz	r1, 80072e6 <__ascii_mbtowc+0x6>
 80072e4:	a901      	add	r1, sp, #4
 80072e6:	b142      	cbz	r2, 80072fa <__ascii_mbtowc+0x1a>
 80072e8:	b14b      	cbz	r3, 80072fe <__ascii_mbtowc+0x1e>
 80072ea:	7813      	ldrb	r3, [r2, #0]
 80072ec:	600b      	str	r3, [r1, #0]
 80072ee:	7812      	ldrb	r2, [r2, #0]
 80072f0:	1e10      	subs	r0, r2, #0
 80072f2:	bf18      	it	ne
 80072f4:	2001      	movne	r0, #1
 80072f6:	b002      	add	sp, #8
 80072f8:	4770      	bx	lr
 80072fa:	4610      	mov	r0, r2
 80072fc:	e7fb      	b.n	80072f6 <__ascii_mbtowc+0x16>
 80072fe:	f06f 0001 	mvn.w	r0, #1
 8007302:	e7f8      	b.n	80072f6 <__ascii_mbtowc+0x16>

08007304 <_Balloc>:
 8007304:	b570      	push	{r4, r5, r6, lr}
 8007306:	69c6      	ldr	r6, [r0, #28]
 8007308:	4604      	mov	r4, r0
 800730a:	460d      	mov	r5, r1
 800730c:	b976      	cbnz	r6, 800732c <_Balloc+0x28>
 800730e:	2010      	movs	r0, #16
 8007310:	f7fe f966 	bl	80055e0 <malloc>
 8007314:	4602      	mov	r2, r0
 8007316:	61e0      	str	r0, [r4, #28]
 8007318:	b920      	cbnz	r0, 8007324 <_Balloc+0x20>
 800731a:	216b      	movs	r1, #107	@ 0x6b
 800731c:	4b17      	ldr	r3, [pc, #92]	@ (800737c <_Balloc+0x78>)
 800731e:	4818      	ldr	r0, [pc, #96]	@ (8007380 <_Balloc+0x7c>)
 8007320:	f7ff f926 	bl	8006570 <__assert_func>
 8007324:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8007328:	6006      	str	r6, [r0, #0]
 800732a:	60c6      	str	r6, [r0, #12]
 800732c:	69e6      	ldr	r6, [r4, #28]
 800732e:	68f3      	ldr	r3, [r6, #12]
 8007330:	b183      	cbz	r3, 8007354 <_Balloc+0x50>
 8007332:	69e3      	ldr	r3, [r4, #28]
 8007334:	68db      	ldr	r3, [r3, #12]
 8007336:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800733a:	b9b8      	cbnz	r0, 800736c <_Balloc+0x68>
 800733c:	2101      	movs	r1, #1
 800733e:	fa01 f605 	lsl.w	r6, r1, r5
 8007342:	1d72      	adds	r2, r6, #5
 8007344:	4620      	mov	r0, r4
 8007346:	0092      	lsls	r2, r2, #2
 8007348:	f000 fded 	bl	8007f26 <_calloc_r>
 800734c:	b160      	cbz	r0, 8007368 <_Balloc+0x64>
 800734e:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8007352:	e00e      	b.n	8007372 <_Balloc+0x6e>
 8007354:	2221      	movs	r2, #33	@ 0x21
 8007356:	2104      	movs	r1, #4
 8007358:	4620      	mov	r0, r4
 800735a:	f000 fde4 	bl	8007f26 <_calloc_r>
 800735e:	69e3      	ldr	r3, [r4, #28]
 8007360:	60f0      	str	r0, [r6, #12]
 8007362:	68db      	ldr	r3, [r3, #12]
 8007364:	2b00      	cmp	r3, #0
 8007366:	d1e4      	bne.n	8007332 <_Balloc+0x2e>
 8007368:	2000      	movs	r0, #0
 800736a:	bd70      	pop	{r4, r5, r6, pc}
 800736c:	6802      	ldr	r2, [r0, #0]
 800736e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8007372:	2300      	movs	r3, #0
 8007374:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8007378:	e7f7      	b.n	800736a <_Balloc+0x66>
 800737a:	bf00      	nop
 800737c:	08008395 	.word	0x08008395
 8007380:	08008415 	.word	0x08008415

08007384 <_Bfree>:
 8007384:	b570      	push	{r4, r5, r6, lr}
 8007386:	69c6      	ldr	r6, [r0, #28]
 8007388:	4605      	mov	r5, r0
 800738a:	460c      	mov	r4, r1
 800738c:	b976      	cbnz	r6, 80073ac <_Bfree+0x28>
 800738e:	2010      	movs	r0, #16
 8007390:	f7fe f926 	bl	80055e0 <malloc>
 8007394:	4602      	mov	r2, r0
 8007396:	61e8      	str	r0, [r5, #28]
 8007398:	b920      	cbnz	r0, 80073a4 <_Bfree+0x20>
 800739a:	218f      	movs	r1, #143	@ 0x8f
 800739c:	4b08      	ldr	r3, [pc, #32]	@ (80073c0 <_Bfree+0x3c>)
 800739e:	4809      	ldr	r0, [pc, #36]	@ (80073c4 <_Bfree+0x40>)
 80073a0:	f7ff f8e6 	bl	8006570 <__assert_func>
 80073a4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80073a8:	6006      	str	r6, [r0, #0]
 80073aa:	60c6      	str	r6, [r0, #12]
 80073ac:	b13c      	cbz	r4, 80073be <_Bfree+0x3a>
 80073ae:	69eb      	ldr	r3, [r5, #28]
 80073b0:	6862      	ldr	r2, [r4, #4]
 80073b2:	68db      	ldr	r3, [r3, #12]
 80073b4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80073b8:	6021      	str	r1, [r4, #0]
 80073ba:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80073be:	bd70      	pop	{r4, r5, r6, pc}
 80073c0:	08008395 	.word	0x08008395
 80073c4:	08008415 	.word	0x08008415

080073c8 <__multadd>:
 80073c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80073cc:	4607      	mov	r7, r0
 80073ce:	460c      	mov	r4, r1
 80073d0:	461e      	mov	r6, r3
 80073d2:	2000      	movs	r0, #0
 80073d4:	690d      	ldr	r5, [r1, #16]
 80073d6:	f101 0c14 	add.w	ip, r1, #20
 80073da:	f8dc 3000 	ldr.w	r3, [ip]
 80073de:	3001      	adds	r0, #1
 80073e0:	b299      	uxth	r1, r3
 80073e2:	fb02 6101 	mla	r1, r2, r1, r6
 80073e6:	0c1e      	lsrs	r6, r3, #16
 80073e8:	0c0b      	lsrs	r3, r1, #16
 80073ea:	fb02 3306 	mla	r3, r2, r6, r3
 80073ee:	b289      	uxth	r1, r1
 80073f0:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80073f4:	4285      	cmp	r5, r0
 80073f6:	ea4f 4613 	mov.w	r6, r3, lsr #16
 80073fa:	f84c 1b04 	str.w	r1, [ip], #4
 80073fe:	dcec      	bgt.n	80073da <__multadd+0x12>
 8007400:	b30e      	cbz	r6, 8007446 <__multadd+0x7e>
 8007402:	68a3      	ldr	r3, [r4, #8]
 8007404:	42ab      	cmp	r3, r5
 8007406:	dc19      	bgt.n	800743c <__multadd+0x74>
 8007408:	6861      	ldr	r1, [r4, #4]
 800740a:	4638      	mov	r0, r7
 800740c:	3101      	adds	r1, #1
 800740e:	f7ff ff79 	bl	8007304 <_Balloc>
 8007412:	4680      	mov	r8, r0
 8007414:	b928      	cbnz	r0, 8007422 <__multadd+0x5a>
 8007416:	4602      	mov	r2, r0
 8007418:	21ba      	movs	r1, #186	@ 0xba
 800741a:	4b0c      	ldr	r3, [pc, #48]	@ (800744c <__multadd+0x84>)
 800741c:	480c      	ldr	r0, [pc, #48]	@ (8007450 <__multadd+0x88>)
 800741e:	f7ff f8a7 	bl	8006570 <__assert_func>
 8007422:	6922      	ldr	r2, [r4, #16]
 8007424:	f104 010c 	add.w	r1, r4, #12
 8007428:	3202      	adds	r2, #2
 800742a:	0092      	lsls	r2, r2, #2
 800742c:	300c      	adds	r0, #12
 800742e:	f7ff f890 	bl	8006552 <memcpy>
 8007432:	4621      	mov	r1, r4
 8007434:	4638      	mov	r0, r7
 8007436:	f7ff ffa5 	bl	8007384 <_Bfree>
 800743a:	4644      	mov	r4, r8
 800743c:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8007440:	3501      	adds	r5, #1
 8007442:	615e      	str	r6, [r3, #20]
 8007444:	6125      	str	r5, [r4, #16]
 8007446:	4620      	mov	r0, r4
 8007448:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800744c:	08008404 	.word	0x08008404
 8007450:	08008415 	.word	0x08008415

08007454 <__hi0bits>:
 8007454:	4603      	mov	r3, r0
 8007456:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 800745a:	bf3a      	itte	cc
 800745c:	0403      	lslcc	r3, r0, #16
 800745e:	2010      	movcc	r0, #16
 8007460:	2000      	movcs	r0, #0
 8007462:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8007466:	bf3c      	itt	cc
 8007468:	021b      	lslcc	r3, r3, #8
 800746a:	3008      	addcc	r0, #8
 800746c:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8007470:	bf3c      	itt	cc
 8007472:	011b      	lslcc	r3, r3, #4
 8007474:	3004      	addcc	r0, #4
 8007476:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800747a:	bf3c      	itt	cc
 800747c:	009b      	lslcc	r3, r3, #2
 800747e:	3002      	addcc	r0, #2
 8007480:	2b00      	cmp	r3, #0
 8007482:	db05      	blt.n	8007490 <__hi0bits+0x3c>
 8007484:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8007488:	f100 0001 	add.w	r0, r0, #1
 800748c:	bf08      	it	eq
 800748e:	2020      	moveq	r0, #32
 8007490:	4770      	bx	lr

08007492 <__lo0bits>:
 8007492:	6803      	ldr	r3, [r0, #0]
 8007494:	4602      	mov	r2, r0
 8007496:	f013 0007 	ands.w	r0, r3, #7
 800749a:	d00b      	beq.n	80074b4 <__lo0bits+0x22>
 800749c:	07d9      	lsls	r1, r3, #31
 800749e:	d421      	bmi.n	80074e4 <__lo0bits+0x52>
 80074a0:	0798      	lsls	r0, r3, #30
 80074a2:	bf49      	itett	mi
 80074a4:	085b      	lsrmi	r3, r3, #1
 80074a6:	089b      	lsrpl	r3, r3, #2
 80074a8:	2001      	movmi	r0, #1
 80074aa:	6013      	strmi	r3, [r2, #0]
 80074ac:	bf5c      	itt	pl
 80074ae:	2002      	movpl	r0, #2
 80074b0:	6013      	strpl	r3, [r2, #0]
 80074b2:	4770      	bx	lr
 80074b4:	b299      	uxth	r1, r3
 80074b6:	b909      	cbnz	r1, 80074bc <__lo0bits+0x2a>
 80074b8:	2010      	movs	r0, #16
 80074ba:	0c1b      	lsrs	r3, r3, #16
 80074bc:	b2d9      	uxtb	r1, r3
 80074be:	b909      	cbnz	r1, 80074c4 <__lo0bits+0x32>
 80074c0:	3008      	adds	r0, #8
 80074c2:	0a1b      	lsrs	r3, r3, #8
 80074c4:	0719      	lsls	r1, r3, #28
 80074c6:	bf04      	itt	eq
 80074c8:	091b      	lsreq	r3, r3, #4
 80074ca:	3004      	addeq	r0, #4
 80074cc:	0799      	lsls	r1, r3, #30
 80074ce:	bf04      	itt	eq
 80074d0:	089b      	lsreq	r3, r3, #2
 80074d2:	3002      	addeq	r0, #2
 80074d4:	07d9      	lsls	r1, r3, #31
 80074d6:	d403      	bmi.n	80074e0 <__lo0bits+0x4e>
 80074d8:	085b      	lsrs	r3, r3, #1
 80074da:	f100 0001 	add.w	r0, r0, #1
 80074de:	d003      	beq.n	80074e8 <__lo0bits+0x56>
 80074e0:	6013      	str	r3, [r2, #0]
 80074e2:	4770      	bx	lr
 80074e4:	2000      	movs	r0, #0
 80074e6:	4770      	bx	lr
 80074e8:	2020      	movs	r0, #32
 80074ea:	4770      	bx	lr

080074ec <__i2b>:
 80074ec:	b510      	push	{r4, lr}
 80074ee:	460c      	mov	r4, r1
 80074f0:	2101      	movs	r1, #1
 80074f2:	f7ff ff07 	bl	8007304 <_Balloc>
 80074f6:	4602      	mov	r2, r0
 80074f8:	b928      	cbnz	r0, 8007506 <__i2b+0x1a>
 80074fa:	f240 1145 	movw	r1, #325	@ 0x145
 80074fe:	4b04      	ldr	r3, [pc, #16]	@ (8007510 <__i2b+0x24>)
 8007500:	4804      	ldr	r0, [pc, #16]	@ (8007514 <__i2b+0x28>)
 8007502:	f7ff f835 	bl	8006570 <__assert_func>
 8007506:	2301      	movs	r3, #1
 8007508:	6144      	str	r4, [r0, #20]
 800750a:	6103      	str	r3, [r0, #16]
 800750c:	bd10      	pop	{r4, pc}
 800750e:	bf00      	nop
 8007510:	08008404 	.word	0x08008404
 8007514:	08008415 	.word	0x08008415

08007518 <__multiply>:
 8007518:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800751c:	4614      	mov	r4, r2
 800751e:	690a      	ldr	r2, [r1, #16]
 8007520:	6923      	ldr	r3, [r4, #16]
 8007522:	460f      	mov	r7, r1
 8007524:	429a      	cmp	r2, r3
 8007526:	bfa2      	ittt	ge
 8007528:	4623      	movge	r3, r4
 800752a:	460c      	movge	r4, r1
 800752c:	461f      	movge	r7, r3
 800752e:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8007532:	f8d7 9010 	ldr.w	r9, [r7, #16]
 8007536:	68a3      	ldr	r3, [r4, #8]
 8007538:	6861      	ldr	r1, [r4, #4]
 800753a:	eb0a 0609 	add.w	r6, sl, r9
 800753e:	42b3      	cmp	r3, r6
 8007540:	b085      	sub	sp, #20
 8007542:	bfb8      	it	lt
 8007544:	3101      	addlt	r1, #1
 8007546:	f7ff fedd 	bl	8007304 <_Balloc>
 800754a:	b930      	cbnz	r0, 800755a <__multiply+0x42>
 800754c:	4602      	mov	r2, r0
 800754e:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8007552:	4b43      	ldr	r3, [pc, #268]	@ (8007660 <__multiply+0x148>)
 8007554:	4843      	ldr	r0, [pc, #268]	@ (8007664 <__multiply+0x14c>)
 8007556:	f7ff f80b 	bl	8006570 <__assert_func>
 800755a:	f100 0514 	add.w	r5, r0, #20
 800755e:	462b      	mov	r3, r5
 8007560:	2200      	movs	r2, #0
 8007562:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8007566:	4543      	cmp	r3, r8
 8007568:	d321      	bcc.n	80075ae <__multiply+0x96>
 800756a:	f107 0114 	add.w	r1, r7, #20
 800756e:	f104 0214 	add.w	r2, r4, #20
 8007572:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 8007576:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 800757a:	9302      	str	r3, [sp, #8]
 800757c:	1b13      	subs	r3, r2, r4
 800757e:	3b15      	subs	r3, #21
 8007580:	f023 0303 	bic.w	r3, r3, #3
 8007584:	3304      	adds	r3, #4
 8007586:	f104 0715 	add.w	r7, r4, #21
 800758a:	42ba      	cmp	r2, r7
 800758c:	bf38      	it	cc
 800758e:	2304      	movcc	r3, #4
 8007590:	9301      	str	r3, [sp, #4]
 8007592:	9b02      	ldr	r3, [sp, #8]
 8007594:	9103      	str	r1, [sp, #12]
 8007596:	428b      	cmp	r3, r1
 8007598:	d80c      	bhi.n	80075b4 <__multiply+0x9c>
 800759a:	2e00      	cmp	r6, #0
 800759c:	dd03      	ble.n	80075a6 <__multiply+0x8e>
 800759e:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80075a2:	2b00      	cmp	r3, #0
 80075a4:	d05a      	beq.n	800765c <__multiply+0x144>
 80075a6:	6106      	str	r6, [r0, #16]
 80075a8:	b005      	add	sp, #20
 80075aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80075ae:	f843 2b04 	str.w	r2, [r3], #4
 80075b2:	e7d8      	b.n	8007566 <__multiply+0x4e>
 80075b4:	f8b1 a000 	ldrh.w	sl, [r1]
 80075b8:	f1ba 0f00 	cmp.w	sl, #0
 80075bc:	d023      	beq.n	8007606 <__multiply+0xee>
 80075be:	46a9      	mov	r9, r5
 80075c0:	f04f 0c00 	mov.w	ip, #0
 80075c4:	f104 0e14 	add.w	lr, r4, #20
 80075c8:	f85e 7b04 	ldr.w	r7, [lr], #4
 80075cc:	f8d9 3000 	ldr.w	r3, [r9]
 80075d0:	fa1f fb87 	uxth.w	fp, r7
 80075d4:	b29b      	uxth	r3, r3
 80075d6:	fb0a 330b 	mla	r3, sl, fp, r3
 80075da:	4463      	add	r3, ip
 80075dc:	f8d9 c000 	ldr.w	ip, [r9]
 80075e0:	0c3f      	lsrs	r7, r7, #16
 80075e2:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 80075e6:	fb0a c707 	mla	r7, sl, r7, ip
 80075ea:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 80075ee:	b29b      	uxth	r3, r3
 80075f0:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 80075f4:	4572      	cmp	r2, lr
 80075f6:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 80075fa:	f849 3b04 	str.w	r3, [r9], #4
 80075fe:	d8e3      	bhi.n	80075c8 <__multiply+0xb0>
 8007600:	9b01      	ldr	r3, [sp, #4]
 8007602:	f845 c003 	str.w	ip, [r5, r3]
 8007606:	9b03      	ldr	r3, [sp, #12]
 8007608:	3104      	adds	r1, #4
 800760a:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 800760e:	f1b9 0f00 	cmp.w	r9, #0
 8007612:	d021      	beq.n	8007658 <__multiply+0x140>
 8007614:	46ae      	mov	lr, r5
 8007616:	f04f 0a00 	mov.w	sl, #0
 800761a:	682b      	ldr	r3, [r5, #0]
 800761c:	f104 0c14 	add.w	ip, r4, #20
 8007620:	f8bc b000 	ldrh.w	fp, [ip]
 8007624:	f8be 7002 	ldrh.w	r7, [lr, #2]
 8007628:	b29b      	uxth	r3, r3
 800762a:	fb09 770b 	mla	r7, r9, fp, r7
 800762e:	4457      	add	r7, sl
 8007630:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8007634:	f84e 3b04 	str.w	r3, [lr], #4
 8007638:	f85c 3b04 	ldr.w	r3, [ip], #4
 800763c:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8007640:	f8be 3000 	ldrh.w	r3, [lr]
 8007644:	4562      	cmp	r2, ip
 8007646:	fb09 330a 	mla	r3, r9, sl, r3
 800764a:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 800764e:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8007652:	d8e5      	bhi.n	8007620 <__multiply+0x108>
 8007654:	9f01      	ldr	r7, [sp, #4]
 8007656:	51eb      	str	r3, [r5, r7]
 8007658:	3504      	adds	r5, #4
 800765a:	e79a      	b.n	8007592 <__multiply+0x7a>
 800765c:	3e01      	subs	r6, #1
 800765e:	e79c      	b.n	800759a <__multiply+0x82>
 8007660:	08008404 	.word	0x08008404
 8007664:	08008415 	.word	0x08008415

08007668 <__pow5mult>:
 8007668:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800766c:	4615      	mov	r5, r2
 800766e:	f012 0203 	ands.w	r2, r2, #3
 8007672:	4607      	mov	r7, r0
 8007674:	460e      	mov	r6, r1
 8007676:	d007      	beq.n	8007688 <__pow5mult+0x20>
 8007678:	4c25      	ldr	r4, [pc, #148]	@ (8007710 <__pow5mult+0xa8>)
 800767a:	3a01      	subs	r2, #1
 800767c:	2300      	movs	r3, #0
 800767e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8007682:	f7ff fea1 	bl	80073c8 <__multadd>
 8007686:	4606      	mov	r6, r0
 8007688:	10ad      	asrs	r5, r5, #2
 800768a:	d03d      	beq.n	8007708 <__pow5mult+0xa0>
 800768c:	69fc      	ldr	r4, [r7, #28]
 800768e:	b97c      	cbnz	r4, 80076b0 <__pow5mult+0x48>
 8007690:	2010      	movs	r0, #16
 8007692:	f7fd ffa5 	bl	80055e0 <malloc>
 8007696:	4602      	mov	r2, r0
 8007698:	61f8      	str	r0, [r7, #28]
 800769a:	b928      	cbnz	r0, 80076a8 <__pow5mult+0x40>
 800769c:	f240 11b3 	movw	r1, #435	@ 0x1b3
 80076a0:	4b1c      	ldr	r3, [pc, #112]	@ (8007714 <__pow5mult+0xac>)
 80076a2:	481d      	ldr	r0, [pc, #116]	@ (8007718 <__pow5mult+0xb0>)
 80076a4:	f7fe ff64 	bl	8006570 <__assert_func>
 80076a8:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80076ac:	6004      	str	r4, [r0, #0]
 80076ae:	60c4      	str	r4, [r0, #12]
 80076b0:	f8d7 801c 	ldr.w	r8, [r7, #28]
 80076b4:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80076b8:	b94c      	cbnz	r4, 80076ce <__pow5mult+0x66>
 80076ba:	f240 2171 	movw	r1, #625	@ 0x271
 80076be:	4638      	mov	r0, r7
 80076c0:	f7ff ff14 	bl	80074ec <__i2b>
 80076c4:	2300      	movs	r3, #0
 80076c6:	4604      	mov	r4, r0
 80076c8:	f8c8 0008 	str.w	r0, [r8, #8]
 80076cc:	6003      	str	r3, [r0, #0]
 80076ce:	f04f 0900 	mov.w	r9, #0
 80076d2:	07eb      	lsls	r3, r5, #31
 80076d4:	d50a      	bpl.n	80076ec <__pow5mult+0x84>
 80076d6:	4631      	mov	r1, r6
 80076d8:	4622      	mov	r2, r4
 80076da:	4638      	mov	r0, r7
 80076dc:	f7ff ff1c 	bl	8007518 <__multiply>
 80076e0:	4680      	mov	r8, r0
 80076e2:	4631      	mov	r1, r6
 80076e4:	4638      	mov	r0, r7
 80076e6:	f7ff fe4d 	bl	8007384 <_Bfree>
 80076ea:	4646      	mov	r6, r8
 80076ec:	106d      	asrs	r5, r5, #1
 80076ee:	d00b      	beq.n	8007708 <__pow5mult+0xa0>
 80076f0:	6820      	ldr	r0, [r4, #0]
 80076f2:	b938      	cbnz	r0, 8007704 <__pow5mult+0x9c>
 80076f4:	4622      	mov	r2, r4
 80076f6:	4621      	mov	r1, r4
 80076f8:	4638      	mov	r0, r7
 80076fa:	f7ff ff0d 	bl	8007518 <__multiply>
 80076fe:	6020      	str	r0, [r4, #0]
 8007700:	f8c0 9000 	str.w	r9, [r0]
 8007704:	4604      	mov	r4, r0
 8007706:	e7e4      	b.n	80076d2 <__pow5mult+0x6a>
 8007708:	4630      	mov	r0, r6
 800770a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800770e:	bf00      	nop
 8007710:	08008470 	.word	0x08008470
 8007714:	08008395 	.word	0x08008395
 8007718:	08008415 	.word	0x08008415

0800771c <__lshift>:
 800771c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007720:	460c      	mov	r4, r1
 8007722:	4607      	mov	r7, r0
 8007724:	4691      	mov	r9, r2
 8007726:	6923      	ldr	r3, [r4, #16]
 8007728:	6849      	ldr	r1, [r1, #4]
 800772a:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800772e:	68a3      	ldr	r3, [r4, #8]
 8007730:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8007734:	f108 0601 	add.w	r6, r8, #1
 8007738:	42b3      	cmp	r3, r6
 800773a:	db0b      	blt.n	8007754 <__lshift+0x38>
 800773c:	4638      	mov	r0, r7
 800773e:	f7ff fde1 	bl	8007304 <_Balloc>
 8007742:	4605      	mov	r5, r0
 8007744:	b948      	cbnz	r0, 800775a <__lshift+0x3e>
 8007746:	4602      	mov	r2, r0
 8007748:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 800774c:	4b27      	ldr	r3, [pc, #156]	@ (80077ec <__lshift+0xd0>)
 800774e:	4828      	ldr	r0, [pc, #160]	@ (80077f0 <__lshift+0xd4>)
 8007750:	f7fe ff0e 	bl	8006570 <__assert_func>
 8007754:	3101      	adds	r1, #1
 8007756:	005b      	lsls	r3, r3, #1
 8007758:	e7ee      	b.n	8007738 <__lshift+0x1c>
 800775a:	2300      	movs	r3, #0
 800775c:	f100 0114 	add.w	r1, r0, #20
 8007760:	f100 0210 	add.w	r2, r0, #16
 8007764:	4618      	mov	r0, r3
 8007766:	4553      	cmp	r3, sl
 8007768:	db33      	blt.n	80077d2 <__lshift+0xb6>
 800776a:	6920      	ldr	r0, [r4, #16]
 800776c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8007770:	f104 0314 	add.w	r3, r4, #20
 8007774:	f019 091f 	ands.w	r9, r9, #31
 8007778:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800777c:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8007780:	d02b      	beq.n	80077da <__lshift+0xbe>
 8007782:	468a      	mov	sl, r1
 8007784:	2200      	movs	r2, #0
 8007786:	f1c9 0e20 	rsb	lr, r9, #32
 800778a:	6818      	ldr	r0, [r3, #0]
 800778c:	fa00 f009 	lsl.w	r0, r0, r9
 8007790:	4310      	orrs	r0, r2
 8007792:	f84a 0b04 	str.w	r0, [sl], #4
 8007796:	f853 2b04 	ldr.w	r2, [r3], #4
 800779a:	459c      	cmp	ip, r3
 800779c:	fa22 f20e 	lsr.w	r2, r2, lr
 80077a0:	d8f3      	bhi.n	800778a <__lshift+0x6e>
 80077a2:	ebac 0304 	sub.w	r3, ip, r4
 80077a6:	3b15      	subs	r3, #21
 80077a8:	f023 0303 	bic.w	r3, r3, #3
 80077ac:	3304      	adds	r3, #4
 80077ae:	f104 0015 	add.w	r0, r4, #21
 80077b2:	4584      	cmp	ip, r0
 80077b4:	bf38      	it	cc
 80077b6:	2304      	movcc	r3, #4
 80077b8:	50ca      	str	r2, [r1, r3]
 80077ba:	b10a      	cbz	r2, 80077c0 <__lshift+0xa4>
 80077bc:	f108 0602 	add.w	r6, r8, #2
 80077c0:	3e01      	subs	r6, #1
 80077c2:	4638      	mov	r0, r7
 80077c4:	4621      	mov	r1, r4
 80077c6:	612e      	str	r6, [r5, #16]
 80077c8:	f7ff fddc 	bl	8007384 <_Bfree>
 80077cc:	4628      	mov	r0, r5
 80077ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80077d2:	f842 0f04 	str.w	r0, [r2, #4]!
 80077d6:	3301      	adds	r3, #1
 80077d8:	e7c5      	b.n	8007766 <__lshift+0x4a>
 80077da:	3904      	subs	r1, #4
 80077dc:	f853 2b04 	ldr.w	r2, [r3], #4
 80077e0:	459c      	cmp	ip, r3
 80077e2:	f841 2f04 	str.w	r2, [r1, #4]!
 80077e6:	d8f9      	bhi.n	80077dc <__lshift+0xc0>
 80077e8:	e7ea      	b.n	80077c0 <__lshift+0xa4>
 80077ea:	bf00      	nop
 80077ec:	08008404 	.word	0x08008404
 80077f0:	08008415 	.word	0x08008415

080077f4 <__mcmp>:
 80077f4:	4603      	mov	r3, r0
 80077f6:	690a      	ldr	r2, [r1, #16]
 80077f8:	6900      	ldr	r0, [r0, #16]
 80077fa:	b530      	push	{r4, r5, lr}
 80077fc:	1a80      	subs	r0, r0, r2
 80077fe:	d10e      	bne.n	800781e <__mcmp+0x2a>
 8007800:	3314      	adds	r3, #20
 8007802:	3114      	adds	r1, #20
 8007804:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8007808:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800780c:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8007810:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8007814:	4295      	cmp	r5, r2
 8007816:	d003      	beq.n	8007820 <__mcmp+0x2c>
 8007818:	d205      	bcs.n	8007826 <__mcmp+0x32>
 800781a:	f04f 30ff 	mov.w	r0, #4294967295
 800781e:	bd30      	pop	{r4, r5, pc}
 8007820:	42a3      	cmp	r3, r4
 8007822:	d3f3      	bcc.n	800780c <__mcmp+0x18>
 8007824:	e7fb      	b.n	800781e <__mcmp+0x2a>
 8007826:	2001      	movs	r0, #1
 8007828:	e7f9      	b.n	800781e <__mcmp+0x2a>
	...

0800782c <__mdiff>:
 800782c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007830:	4689      	mov	r9, r1
 8007832:	4606      	mov	r6, r0
 8007834:	4611      	mov	r1, r2
 8007836:	4648      	mov	r0, r9
 8007838:	4614      	mov	r4, r2
 800783a:	f7ff ffdb 	bl	80077f4 <__mcmp>
 800783e:	1e05      	subs	r5, r0, #0
 8007840:	d112      	bne.n	8007868 <__mdiff+0x3c>
 8007842:	4629      	mov	r1, r5
 8007844:	4630      	mov	r0, r6
 8007846:	f7ff fd5d 	bl	8007304 <_Balloc>
 800784a:	4602      	mov	r2, r0
 800784c:	b928      	cbnz	r0, 800785a <__mdiff+0x2e>
 800784e:	f240 2137 	movw	r1, #567	@ 0x237
 8007852:	4b3e      	ldr	r3, [pc, #248]	@ (800794c <__mdiff+0x120>)
 8007854:	483e      	ldr	r0, [pc, #248]	@ (8007950 <__mdiff+0x124>)
 8007856:	f7fe fe8b 	bl	8006570 <__assert_func>
 800785a:	2301      	movs	r3, #1
 800785c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8007860:	4610      	mov	r0, r2
 8007862:	b003      	add	sp, #12
 8007864:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007868:	bfbc      	itt	lt
 800786a:	464b      	movlt	r3, r9
 800786c:	46a1      	movlt	r9, r4
 800786e:	4630      	mov	r0, r6
 8007870:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8007874:	bfba      	itte	lt
 8007876:	461c      	movlt	r4, r3
 8007878:	2501      	movlt	r5, #1
 800787a:	2500      	movge	r5, #0
 800787c:	f7ff fd42 	bl	8007304 <_Balloc>
 8007880:	4602      	mov	r2, r0
 8007882:	b918      	cbnz	r0, 800788c <__mdiff+0x60>
 8007884:	f240 2145 	movw	r1, #581	@ 0x245
 8007888:	4b30      	ldr	r3, [pc, #192]	@ (800794c <__mdiff+0x120>)
 800788a:	e7e3      	b.n	8007854 <__mdiff+0x28>
 800788c:	f100 0b14 	add.w	fp, r0, #20
 8007890:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8007894:	f109 0310 	add.w	r3, r9, #16
 8007898:	60c5      	str	r5, [r0, #12]
 800789a:	f04f 0c00 	mov.w	ip, #0
 800789e:	f109 0514 	add.w	r5, r9, #20
 80078a2:	46d9      	mov	r9, fp
 80078a4:	6926      	ldr	r6, [r4, #16]
 80078a6:	f104 0e14 	add.w	lr, r4, #20
 80078aa:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 80078ae:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 80078b2:	9301      	str	r3, [sp, #4]
 80078b4:	9b01      	ldr	r3, [sp, #4]
 80078b6:	f85e 0b04 	ldr.w	r0, [lr], #4
 80078ba:	f853 af04 	ldr.w	sl, [r3, #4]!
 80078be:	b281      	uxth	r1, r0
 80078c0:	9301      	str	r3, [sp, #4]
 80078c2:	fa1f f38a 	uxth.w	r3, sl
 80078c6:	1a5b      	subs	r3, r3, r1
 80078c8:	0c00      	lsrs	r0, r0, #16
 80078ca:	4463      	add	r3, ip
 80078cc:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 80078d0:	eb00 4023 	add.w	r0, r0, r3, asr #16
 80078d4:	b29b      	uxth	r3, r3
 80078d6:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 80078da:	4576      	cmp	r6, lr
 80078dc:	ea4f 4c20 	mov.w	ip, r0, asr #16
 80078e0:	f849 3b04 	str.w	r3, [r9], #4
 80078e4:	d8e6      	bhi.n	80078b4 <__mdiff+0x88>
 80078e6:	1b33      	subs	r3, r6, r4
 80078e8:	3b15      	subs	r3, #21
 80078ea:	f023 0303 	bic.w	r3, r3, #3
 80078ee:	3415      	adds	r4, #21
 80078f0:	3304      	adds	r3, #4
 80078f2:	42a6      	cmp	r6, r4
 80078f4:	bf38      	it	cc
 80078f6:	2304      	movcc	r3, #4
 80078f8:	441d      	add	r5, r3
 80078fa:	445b      	add	r3, fp
 80078fc:	461e      	mov	r6, r3
 80078fe:	462c      	mov	r4, r5
 8007900:	4544      	cmp	r4, r8
 8007902:	d30e      	bcc.n	8007922 <__mdiff+0xf6>
 8007904:	f108 0103 	add.w	r1, r8, #3
 8007908:	1b49      	subs	r1, r1, r5
 800790a:	f021 0103 	bic.w	r1, r1, #3
 800790e:	3d03      	subs	r5, #3
 8007910:	45a8      	cmp	r8, r5
 8007912:	bf38      	it	cc
 8007914:	2100      	movcc	r1, #0
 8007916:	440b      	add	r3, r1
 8007918:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800791c:	b199      	cbz	r1, 8007946 <__mdiff+0x11a>
 800791e:	6117      	str	r7, [r2, #16]
 8007920:	e79e      	b.n	8007860 <__mdiff+0x34>
 8007922:	46e6      	mov	lr, ip
 8007924:	f854 1b04 	ldr.w	r1, [r4], #4
 8007928:	fa1f fc81 	uxth.w	ip, r1
 800792c:	44f4      	add	ip, lr
 800792e:	0c08      	lsrs	r0, r1, #16
 8007930:	4471      	add	r1, lr
 8007932:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8007936:	b289      	uxth	r1, r1
 8007938:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800793c:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8007940:	f846 1b04 	str.w	r1, [r6], #4
 8007944:	e7dc      	b.n	8007900 <__mdiff+0xd4>
 8007946:	3f01      	subs	r7, #1
 8007948:	e7e6      	b.n	8007918 <__mdiff+0xec>
 800794a:	bf00      	nop
 800794c:	08008404 	.word	0x08008404
 8007950:	08008415 	.word	0x08008415

08007954 <__d2b>:
 8007954:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
 8007958:	2101      	movs	r1, #1
 800795a:	4690      	mov	r8, r2
 800795c:	4699      	mov	r9, r3
 800795e:	9e08      	ldr	r6, [sp, #32]
 8007960:	f7ff fcd0 	bl	8007304 <_Balloc>
 8007964:	4604      	mov	r4, r0
 8007966:	b930      	cbnz	r0, 8007976 <__d2b+0x22>
 8007968:	4602      	mov	r2, r0
 800796a:	f240 310f 	movw	r1, #783	@ 0x30f
 800796e:	4b23      	ldr	r3, [pc, #140]	@ (80079fc <__d2b+0xa8>)
 8007970:	4823      	ldr	r0, [pc, #140]	@ (8007a00 <__d2b+0xac>)
 8007972:	f7fe fdfd 	bl	8006570 <__assert_func>
 8007976:	f3c9 550a 	ubfx	r5, r9, #20, #11
 800797a:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800797e:	b10d      	cbz	r5, 8007984 <__d2b+0x30>
 8007980:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8007984:	9301      	str	r3, [sp, #4]
 8007986:	f1b8 0300 	subs.w	r3, r8, #0
 800798a:	d024      	beq.n	80079d6 <__d2b+0x82>
 800798c:	4668      	mov	r0, sp
 800798e:	9300      	str	r3, [sp, #0]
 8007990:	f7ff fd7f 	bl	8007492 <__lo0bits>
 8007994:	e9dd 1200 	ldrd	r1, r2, [sp]
 8007998:	b1d8      	cbz	r0, 80079d2 <__d2b+0x7e>
 800799a:	f1c0 0320 	rsb	r3, r0, #32
 800799e:	fa02 f303 	lsl.w	r3, r2, r3
 80079a2:	430b      	orrs	r3, r1
 80079a4:	40c2      	lsrs	r2, r0
 80079a6:	6163      	str	r3, [r4, #20]
 80079a8:	9201      	str	r2, [sp, #4]
 80079aa:	9b01      	ldr	r3, [sp, #4]
 80079ac:	2b00      	cmp	r3, #0
 80079ae:	bf0c      	ite	eq
 80079b0:	2201      	moveq	r2, #1
 80079b2:	2202      	movne	r2, #2
 80079b4:	61a3      	str	r3, [r4, #24]
 80079b6:	6122      	str	r2, [r4, #16]
 80079b8:	b1ad      	cbz	r5, 80079e6 <__d2b+0x92>
 80079ba:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 80079be:	4405      	add	r5, r0
 80079c0:	6035      	str	r5, [r6, #0]
 80079c2:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 80079c6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80079c8:	6018      	str	r0, [r3, #0]
 80079ca:	4620      	mov	r0, r4
 80079cc:	b002      	add	sp, #8
 80079ce:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 80079d2:	6161      	str	r1, [r4, #20]
 80079d4:	e7e9      	b.n	80079aa <__d2b+0x56>
 80079d6:	a801      	add	r0, sp, #4
 80079d8:	f7ff fd5b 	bl	8007492 <__lo0bits>
 80079dc:	9b01      	ldr	r3, [sp, #4]
 80079de:	2201      	movs	r2, #1
 80079e0:	6163      	str	r3, [r4, #20]
 80079e2:	3020      	adds	r0, #32
 80079e4:	e7e7      	b.n	80079b6 <__d2b+0x62>
 80079e6:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 80079ea:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80079ee:	6030      	str	r0, [r6, #0]
 80079f0:	6918      	ldr	r0, [r3, #16]
 80079f2:	f7ff fd2f 	bl	8007454 <__hi0bits>
 80079f6:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 80079fa:	e7e4      	b.n	80079c6 <__d2b+0x72>
 80079fc:	08008404 	.word	0x08008404
 8007a00:	08008415 	.word	0x08008415

08007a04 <__ascii_wctomb>:
 8007a04:	4603      	mov	r3, r0
 8007a06:	4608      	mov	r0, r1
 8007a08:	b141      	cbz	r1, 8007a1c <__ascii_wctomb+0x18>
 8007a0a:	2aff      	cmp	r2, #255	@ 0xff
 8007a0c:	d904      	bls.n	8007a18 <__ascii_wctomb+0x14>
 8007a0e:	228a      	movs	r2, #138	@ 0x8a
 8007a10:	f04f 30ff 	mov.w	r0, #4294967295
 8007a14:	601a      	str	r2, [r3, #0]
 8007a16:	4770      	bx	lr
 8007a18:	2001      	movs	r0, #1
 8007a1a:	700a      	strb	r2, [r1, #0]
 8007a1c:	4770      	bx	lr

08007a1e <__sfputc_r>:
 8007a1e:	6893      	ldr	r3, [r2, #8]
 8007a20:	b410      	push	{r4}
 8007a22:	3b01      	subs	r3, #1
 8007a24:	2b00      	cmp	r3, #0
 8007a26:	6093      	str	r3, [r2, #8]
 8007a28:	da07      	bge.n	8007a3a <__sfputc_r+0x1c>
 8007a2a:	6994      	ldr	r4, [r2, #24]
 8007a2c:	42a3      	cmp	r3, r4
 8007a2e:	db01      	blt.n	8007a34 <__sfputc_r+0x16>
 8007a30:	290a      	cmp	r1, #10
 8007a32:	d102      	bne.n	8007a3a <__sfputc_r+0x1c>
 8007a34:	bc10      	pop	{r4}
 8007a36:	f7fe bc5a 	b.w	80062ee <__swbuf_r>
 8007a3a:	6813      	ldr	r3, [r2, #0]
 8007a3c:	1c58      	adds	r0, r3, #1
 8007a3e:	6010      	str	r0, [r2, #0]
 8007a40:	7019      	strb	r1, [r3, #0]
 8007a42:	4608      	mov	r0, r1
 8007a44:	bc10      	pop	{r4}
 8007a46:	4770      	bx	lr

08007a48 <__sfputs_r>:
 8007a48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007a4a:	4606      	mov	r6, r0
 8007a4c:	460f      	mov	r7, r1
 8007a4e:	4614      	mov	r4, r2
 8007a50:	18d5      	adds	r5, r2, r3
 8007a52:	42ac      	cmp	r4, r5
 8007a54:	d101      	bne.n	8007a5a <__sfputs_r+0x12>
 8007a56:	2000      	movs	r0, #0
 8007a58:	e007      	b.n	8007a6a <__sfputs_r+0x22>
 8007a5a:	463a      	mov	r2, r7
 8007a5c:	4630      	mov	r0, r6
 8007a5e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007a62:	f7ff ffdc 	bl	8007a1e <__sfputc_r>
 8007a66:	1c43      	adds	r3, r0, #1
 8007a68:	d1f3      	bne.n	8007a52 <__sfputs_r+0xa>
 8007a6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08007a6c <_vfiprintf_r>:
 8007a6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007a70:	460d      	mov	r5, r1
 8007a72:	4614      	mov	r4, r2
 8007a74:	4698      	mov	r8, r3
 8007a76:	4606      	mov	r6, r0
 8007a78:	b09d      	sub	sp, #116	@ 0x74
 8007a7a:	b118      	cbz	r0, 8007a84 <_vfiprintf_r+0x18>
 8007a7c:	6a03      	ldr	r3, [r0, #32]
 8007a7e:	b90b      	cbnz	r3, 8007a84 <_vfiprintf_r+0x18>
 8007a80:	f7fe fb4c 	bl	800611c <__sinit>
 8007a84:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8007a86:	07d9      	lsls	r1, r3, #31
 8007a88:	d405      	bmi.n	8007a96 <_vfiprintf_r+0x2a>
 8007a8a:	89ab      	ldrh	r3, [r5, #12]
 8007a8c:	059a      	lsls	r2, r3, #22
 8007a8e:	d402      	bmi.n	8007a96 <_vfiprintf_r+0x2a>
 8007a90:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8007a92:	f7fe fd4e 	bl	8006532 <__retarget_lock_acquire_recursive>
 8007a96:	89ab      	ldrh	r3, [r5, #12]
 8007a98:	071b      	lsls	r3, r3, #28
 8007a9a:	d501      	bpl.n	8007aa0 <_vfiprintf_r+0x34>
 8007a9c:	692b      	ldr	r3, [r5, #16]
 8007a9e:	b99b      	cbnz	r3, 8007ac8 <_vfiprintf_r+0x5c>
 8007aa0:	4629      	mov	r1, r5
 8007aa2:	4630      	mov	r0, r6
 8007aa4:	f7fe fc62 	bl	800636c <__swsetup_r>
 8007aa8:	b170      	cbz	r0, 8007ac8 <_vfiprintf_r+0x5c>
 8007aaa:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8007aac:	07dc      	lsls	r4, r3, #31
 8007aae:	d504      	bpl.n	8007aba <_vfiprintf_r+0x4e>
 8007ab0:	f04f 30ff 	mov.w	r0, #4294967295
 8007ab4:	b01d      	add	sp, #116	@ 0x74
 8007ab6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007aba:	89ab      	ldrh	r3, [r5, #12]
 8007abc:	0598      	lsls	r0, r3, #22
 8007abe:	d4f7      	bmi.n	8007ab0 <_vfiprintf_r+0x44>
 8007ac0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8007ac2:	f7fe fd37 	bl	8006534 <__retarget_lock_release_recursive>
 8007ac6:	e7f3      	b.n	8007ab0 <_vfiprintf_r+0x44>
 8007ac8:	2300      	movs	r3, #0
 8007aca:	9309      	str	r3, [sp, #36]	@ 0x24
 8007acc:	2320      	movs	r3, #32
 8007ace:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8007ad2:	2330      	movs	r3, #48	@ 0x30
 8007ad4:	f04f 0901 	mov.w	r9, #1
 8007ad8:	f8cd 800c 	str.w	r8, [sp, #12]
 8007adc:	f8df 81a8 	ldr.w	r8, [pc, #424]	@ 8007c88 <_vfiprintf_r+0x21c>
 8007ae0:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8007ae4:	4623      	mov	r3, r4
 8007ae6:	469a      	mov	sl, r3
 8007ae8:	f813 2b01 	ldrb.w	r2, [r3], #1
 8007aec:	b10a      	cbz	r2, 8007af2 <_vfiprintf_r+0x86>
 8007aee:	2a25      	cmp	r2, #37	@ 0x25
 8007af0:	d1f9      	bne.n	8007ae6 <_vfiprintf_r+0x7a>
 8007af2:	ebba 0b04 	subs.w	fp, sl, r4
 8007af6:	d00b      	beq.n	8007b10 <_vfiprintf_r+0xa4>
 8007af8:	465b      	mov	r3, fp
 8007afa:	4622      	mov	r2, r4
 8007afc:	4629      	mov	r1, r5
 8007afe:	4630      	mov	r0, r6
 8007b00:	f7ff ffa2 	bl	8007a48 <__sfputs_r>
 8007b04:	3001      	adds	r0, #1
 8007b06:	f000 80a7 	beq.w	8007c58 <_vfiprintf_r+0x1ec>
 8007b0a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8007b0c:	445a      	add	r2, fp
 8007b0e:	9209      	str	r2, [sp, #36]	@ 0x24
 8007b10:	f89a 3000 	ldrb.w	r3, [sl]
 8007b14:	2b00      	cmp	r3, #0
 8007b16:	f000 809f 	beq.w	8007c58 <_vfiprintf_r+0x1ec>
 8007b1a:	2300      	movs	r3, #0
 8007b1c:	f04f 32ff 	mov.w	r2, #4294967295
 8007b20:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8007b24:	f10a 0a01 	add.w	sl, sl, #1
 8007b28:	9304      	str	r3, [sp, #16]
 8007b2a:	9307      	str	r3, [sp, #28]
 8007b2c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8007b30:	931a      	str	r3, [sp, #104]	@ 0x68
 8007b32:	4654      	mov	r4, sl
 8007b34:	2205      	movs	r2, #5
 8007b36:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007b3a:	4853      	ldr	r0, [pc, #332]	@ (8007c88 <_vfiprintf_r+0x21c>)
 8007b3c:	f7fe fcfb 	bl	8006536 <memchr>
 8007b40:	9a04      	ldr	r2, [sp, #16]
 8007b42:	b9d8      	cbnz	r0, 8007b7c <_vfiprintf_r+0x110>
 8007b44:	06d1      	lsls	r1, r2, #27
 8007b46:	bf44      	itt	mi
 8007b48:	2320      	movmi	r3, #32
 8007b4a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8007b4e:	0713      	lsls	r3, r2, #28
 8007b50:	bf44      	itt	mi
 8007b52:	232b      	movmi	r3, #43	@ 0x2b
 8007b54:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8007b58:	f89a 3000 	ldrb.w	r3, [sl]
 8007b5c:	2b2a      	cmp	r3, #42	@ 0x2a
 8007b5e:	d015      	beq.n	8007b8c <_vfiprintf_r+0x120>
 8007b60:	4654      	mov	r4, sl
 8007b62:	2000      	movs	r0, #0
 8007b64:	f04f 0c0a 	mov.w	ip, #10
 8007b68:	9a07      	ldr	r2, [sp, #28]
 8007b6a:	4621      	mov	r1, r4
 8007b6c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8007b70:	3b30      	subs	r3, #48	@ 0x30
 8007b72:	2b09      	cmp	r3, #9
 8007b74:	d94b      	bls.n	8007c0e <_vfiprintf_r+0x1a2>
 8007b76:	b1b0      	cbz	r0, 8007ba6 <_vfiprintf_r+0x13a>
 8007b78:	9207      	str	r2, [sp, #28]
 8007b7a:	e014      	b.n	8007ba6 <_vfiprintf_r+0x13a>
 8007b7c:	eba0 0308 	sub.w	r3, r0, r8
 8007b80:	fa09 f303 	lsl.w	r3, r9, r3
 8007b84:	4313      	orrs	r3, r2
 8007b86:	46a2      	mov	sl, r4
 8007b88:	9304      	str	r3, [sp, #16]
 8007b8a:	e7d2      	b.n	8007b32 <_vfiprintf_r+0xc6>
 8007b8c:	9b03      	ldr	r3, [sp, #12]
 8007b8e:	1d19      	adds	r1, r3, #4
 8007b90:	681b      	ldr	r3, [r3, #0]
 8007b92:	9103      	str	r1, [sp, #12]
 8007b94:	2b00      	cmp	r3, #0
 8007b96:	bfbb      	ittet	lt
 8007b98:	425b      	neglt	r3, r3
 8007b9a:	f042 0202 	orrlt.w	r2, r2, #2
 8007b9e:	9307      	strge	r3, [sp, #28]
 8007ba0:	9307      	strlt	r3, [sp, #28]
 8007ba2:	bfb8      	it	lt
 8007ba4:	9204      	strlt	r2, [sp, #16]
 8007ba6:	7823      	ldrb	r3, [r4, #0]
 8007ba8:	2b2e      	cmp	r3, #46	@ 0x2e
 8007baa:	d10a      	bne.n	8007bc2 <_vfiprintf_r+0x156>
 8007bac:	7863      	ldrb	r3, [r4, #1]
 8007bae:	2b2a      	cmp	r3, #42	@ 0x2a
 8007bb0:	d132      	bne.n	8007c18 <_vfiprintf_r+0x1ac>
 8007bb2:	9b03      	ldr	r3, [sp, #12]
 8007bb4:	3402      	adds	r4, #2
 8007bb6:	1d1a      	adds	r2, r3, #4
 8007bb8:	681b      	ldr	r3, [r3, #0]
 8007bba:	9203      	str	r2, [sp, #12]
 8007bbc:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8007bc0:	9305      	str	r3, [sp, #20]
 8007bc2:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8007c8c <_vfiprintf_r+0x220>
 8007bc6:	2203      	movs	r2, #3
 8007bc8:	4650      	mov	r0, sl
 8007bca:	7821      	ldrb	r1, [r4, #0]
 8007bcc:	f7fe fcb3 	bl	8006536 <memchr>
 8007bd0:	b138      	cbz	r0, 8007be2 <_vfiprintf_r+0x176>
 8007bd2:	2240      	movs	r2, #64	@ 0x40
 8007bd4:	9b04      	ldr	r3, [sp, #16]
 8007bd6:	eba0 000a 	sub.w	r0, r0, sl
 8007bda:	4082      	lsls	r2, r0
 8007bdc:	4313      	orrs	r3, r2
 8007bde:	3401      	adds	r4, #1
 8007be0:	9304      	str	r3, [sp, #16]
 8007be2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007be6:	2206      	movs	r2, #6
 8007be8:	4829      	ldr	r0, [pc, #164]	@ (8007c90 <_vfiprintf_r+0x224>)
 8007bea:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8007bee:	f7fe fca2 	bl	8006536 <memchr>
 8007bf2:	2800      	cmp	r0, #0
 8007bf4:	d03f      	beq.n	8007c76 <_vfiprintf_r+0x20a>
 8007bf6:	4b27      	ldr	r3, [pc, #156]	@ (8007c94 <_vfiprintf_r+0x228>)
 8007bf8:	bb1b      	cbnz	r3, 8007c42 <_vfiprintf_r+0x1d6>
 8007bfa:	9b03      	ldr	r3, [sp, #12]
 8007bfc:	3307      	adds	r3, #7
 8007bfe:	f023 0307 	bic.w	r3, r3, #7
 8007c02:	3308      	adds	r3, #8
 8007c04:	9303      	str	r3, [sp, #12]
 8007c06:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007c08:	443b      	add	r3, r7
 8007c0a:	9309      	str	r3, [sp, #36]	@ 0x24
 8007c0c:	e76a      	b.n	8007ae4 <_vfiprintf_r+0x78>
 8007c0e:	460c      	mov	r4, r1
 8007c10:	2001      	movs	r0, #1
 8007c12:	fb0c 3202 	mla	r2, ip, r2, r3
 8007c16:	e7a8      	b.n	8007b6a <_vfiprintf_r+0xfe>
 8007c18:	2300      	movs	r3, #0
 8007c1a:	f04f 0c0a 	mov.w	ip, #10
 8007c1e:	4619      	mov	r1, r3
 8007c20:	3401      	adds	r4, #1
 8007c22:	9305      	str	r3, [sp, #20]
 8007c24:	4620      	mov	r0, r4
 8007c26:	f810 2b01 	ldrb.w	r2, [r0], #1
 8007c2a:	3a30      	subs	r2, #48	@ 0x30
 8007c2c:	2a09      	cmp	r2, #9
 8007c2e:	d903      	bls.n	8007c38 <_vfiprintf_r+0x1cc>
 8007c30:	2b00      	cmp	r3, #0
 8007c32:	d0c6      	beq.n	8007bc2 <_vfiprintf_r+0x156>
 8007c34:	9105      	str	r1, [sp, #20]
 8007c36:	e7c4      	b.n	8007bc2 <_vfiprintf_r+0x156>
 8007c38:	4604      	mov	r4, r0
 8007c3a:	2301      	movs	r3, #1
 8007c3c:	fb0c 2101 	mla	r1, ip, r1, r2
 8007c40:	e7f0      	b.n	8007c24 <_vfiprintf_r+0x1b8>
 8007c42:	ab03      	add	r3, sp, #12
 8007c44:	9300      	str	r3, [sp, #0]
 8007c46:	462a      	mov	r2, r5
 8007c48:	4630      	mov	r0, r6
 8007c4a:	4b13      	ldr	r3, [pc, #76]	@ (8007c98 <_vfiprintf_r+0x22c>)
 8007c4c:	a904      	add	r1, sp, #16
 8007c4e:	f7fd fe1b 	bl	8005888 <_printf_float>
 8007c52:	4607      	mov	r7, r0
 8007c54:	1c78      	adds	r0, r7, #1
 8007c56:	d1d6      	bne.n	8007c06 <_vfiprintf_r+0x19a>
 8007c58:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8007c5a:	07d9      	lsls	r1, r3, #31
 8007c5c:	d405      	bmi.n	8007c6a <_vfiprintf_r+0x1fe>
 8007c5e:	89ab      	ldrh	r3, [r5, #12]
 8007c60:	059a      	lsls	r2, r3, #22
 8007c62:	d402      	bmi.n	8007c6a <_vfiprintf_r+0x1fe>
 8007c64:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8007c66:	f7fe fc65 	bl	8006534 <__retarget_lock_release_recursive>
 8007c6a:	89ab      	ldrh	r3, [r5, #12]
 8007c6c:	065b      	lsls	r3, r3, #25
 8007c6e:	f53f af1f 	bmi.w	8007ab0 <_vfiprintf_r+0x44>
 8007c72:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8007c74:	e71e      	b.n	8007ab4 <_vfiprintf_r+0x48>
 8007c76:	ab03      	add	r3, sp, #12
 8007c78:	9300      	str	r3, [sp, #0]
 8007c7a:	462a      	mov	r2, r5
 8007c7c:	4630      	mov	r0, r6
 8007c7e:	4b06      	ldr	r3, [pc, #24]	@ (8007c98 <_vfiprintf_r+0x22c>)
 8007c80:	a904      	add	r1, sp, #16
 8007c82:	f7fe f89f 	bl	8005dc4 <_printf_i>
 8007c86:	e7e4      	b.n	8007c52 <_vfiprintf_r+0x1e6>
 8007c88:	08008671 	.word	0x08008671
 8007c8c:	08008677 	.word	0x08008677
 8007c90:	0800867b 	.word	0x0800867b
 8007c94:	08005889 	.word	0x08005889
 8007c98:	08007a49 	.word	0x08007a49

08007c9c <__sflush_r>:
 8007c9c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8007ca0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007ca2:	0716      	lsls	r6, r2, #28
 8007ca4:	4605      	mov	r5, r0
 8007ca6:	460c      	mov	r4, r1
 8007ca8:	d454      	bmi.n	8007d54 <__sflush_r+0xb8>
 8007caa:	684b      	ldr	r3, [r1, #4]
 8007cac:	2b00      	cmp	r3, #0
 8007cae:	dc02      	bgt.n	8007cb6 <__sflush_r+0x1a>
 8007cb0:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8007cb2:	2b00      	cmp	r3, #0
 8007cb4:	dd48      	ble.n	8007d48 <__sflush_r+0xac>
 8007cb6:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8007cb8:	2e00      	cmp	r6, #0
 8007cba:	d045      	beq.n	8007d48 <__sflush_r+0xac>
 8007cbc:	2300      	movs	r3, #0
 8007cbe:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8007cc2:	682f      	ldr	r7, [r5, #0]
 8007cc4:	6a21      	ldr	r1, [r4, #32]
 8007cc6:	602b      	str	r3, [r5, #0]
 8007cc8:	d030      	beq.n	8007d2c <__sflush_r+0x90>
 8007cca:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8007ccc:	89a3      	ldrh	r3, [r4, #12]
 8007cce:	0759      	lsls	r1, r3, #29
 8007cd0:	d505      	bpl.n	8007cde <__sflush_r+0x42>
 8007cd2:	6863      	ldr	r3, [r4, #4]
 8007cd4:	1ad2      	subs	r2, r2, r3
 8007cd6:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8007cd8:	b10b      	cbz	r3, 8007cde <__sflush_r+0x42>
 8007cda:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8007cdc:	1ad2      	subs	r2, r2, r3
 8007cde:	2300      	movs	r3, #0
 8007ce0:	4628      	mov	r0, r5
 8007ce2:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8007ce4:	6a21      	ldr	r1, [r4, #32]
 8007ce6:	47b0      	blx	r6
 8007ce8:	1c43      	adds	r3, r0, #1
 8007cea:	89a3      	ldrh	r3, [r4, #12]
 8007cec:	d106      	bne.n	8007cfc <__sflush_r+0x60>
 8007cee:	6829      	ldr	r1, [r5, #0]
 8007cf0:	291d      	cmp	r1, #29
 8007cf2:	d82b      	bhi.n	8007d4c <__sflush_r+0xb0>
 8007cf4:	4a28      	ldr	r2, [pc, #160]	@ (8007d98 <__sflush_r+0xfc>)
 8007cf6:	410a      	asrs	r2, r1
 8007cf8:	07d6      	lsls	r6, r2, #31
 8007cfa:	d427      	bmi.n	8007d4c <__sflush_r+0xb0>
 8007cfc:	2200      	movs	r2, #0
 8007cfe:	6062      	str	r2, [r4, #4]
 8007d00:	6922      	ldr	r2, [r4, #16]
 8007d02:	04d9      	lsls	r1, r3, #19
 8007d04:	6022      	str	r2, [r4, #0]
 8007d06:	d504      	bpl.n	8007d12 <__sflush_r+0x76>
 8007d08:	1c42      	adds	r2, r0, #1
 8007d0a:	d101      	bne.n	8007d10 <__sflush_r+0x74>
 8007d0c:	682b      	ldr	r3, [r5, #0]
 8007d0e:	b903      	cbnz	r3, 8007d12 <__sflush_r+0x76>
 8007d10:	6560      	str	r0, [r4, #84]	@ 0x54
 8007d12:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8007d14:	602f      	str	r7, [r5, #0]
 8007d16:	b1b9      	cbz	r1, 8007d48 <__sflush_r+0xac>
 8007d18:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8007d1c:	4299      	cmp	r1, r3
 8007d1e:	d002      	beq.n	8007d26 <__sflush_r+0x8a>
 8007d20:	4628      	mov	r0, r5
 8007d22:	f7ff fa95 	bl	8007250 <_free_r>
 8007d26:	2300      	movs	r3, #0
 8007d28:	6363      	str	r3, [r4, #52]	@ 0x34
 8007d2a:	e00d      	b.n	8007d48 <__sflush_r+0xac>
 8007d2c:	2301      	movs	r3, #1
 8007d2e:	4628      	mov	r0, r5
 8007d30:	47b0      	blx	r6
 8007d32:	4602      	mov	r2, r0
 8007d34:	1c50      	adds	r0, r2, #1
 8007d36:	d1c9      	bne.n	8007ccc <__sflush_r+0x30>
 8007d38:	682b      	ldr	r3, [r5, #0]
 8007d3a:	2b00      	cmp	r3, #0
 8007d3c:	d0c6      	beq.n	8007ccc <__sflush_r+0x30>
 8007d3e:	2b1d      	cmp	r3, #29
 8007d40:	d001      	beq.n	8007d46 <__sflush_r+0xaa>
 8007d42:	2b16      	cmp	r3, #22
 8007d44:	d11d      	bne.n	8007d82 <__sflush_r+0xe6>
 8007d46:	602f      	str	r7, [r5, #0]
 8007d48:	2000      	movs	r0, #0
 8007d4a:	e021      	b.n	8007d90 <__sflush_r+0xf4>
 8007d4c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8007d50:	b21b      	sxth	r3, r3
 8007d52:	e01a      	b.n	8007d8a <__sflush_r+0xee>
 8007d54:	690f      	ldr	r7, [r1, #16]
 8007d56:	2f00      	cmp	r7, #0
 8007d58:	d0f6      	beq.n	8007d48 <__sflush_r+0xac>
 8007d5a:	0793      	lsls	r3, r2, #30
 8007d5c:	bf18      	it	ne
 8007d5e:	2300      	movne	r3, #0
 8007d60:	680e      	ldr	r6, [r1, #0]
 8007d62:	bf08      	it	eq
 8007d64:	694b      	ldreq	r3, [r1, #20]
 8007d66:	1bf6      	subs	r6, r6, r7
 8007d68:	600f      	str	r7, [r1, #0]
 8007d6a:	608b      	str	r3, [r1, #8]
 8007d6c:	2e00      	cmp	r6, #0
 8007d6e:	ddeb      	ble.n	8007d48 <__sflush_r+0xac>
 8007d70:	4633      	mov	r3, r6
 8007d72:	463a      	mov	r2, r7
 8007d74:	4628      	mov	r0, r5
 8007d76:	6a21      	ldr	r1, [r4, #32]
 8007d78:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 8007d7c:	47e0      	blx	ip
 8007d7e:	2800      	cmp	r0, #0
 8007d80:	dc07      	bgt.n	8007d92 <__sflush_r+0xf6>
 8007d82:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8007d86:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8007d8a:	f04f 30ff 	mov.w	r0, #4294967295
 8007d8e:	81a3      	strh	r3, [r4, #12]
 8007d90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007d92:	4407      	add	r7, r0
 8007d94:	1a36      	subs	r6, r6, r0
 8007d96:	e7e9      	b.n	8007d6c <__sflush_r+0xd0>
 8007d98:	dfbffffe 	.word	0xdfbffffe

08007d9c <_fflush_r>:
 8007d9c:	b538      	push	{r3, r4, r5, lr}
 8007d9e:	690b      	ldr	r3, [r1, #16]
 8007da0:	4605      	mov	r5, r0
 8007da2:	460c      	mov	r4, r1
 8007da4:	b913      	cbnz	r3, 8007dac <_fflush_r+0x10>
 8007da6:	2500      	movs	r5, #0
 8007da8:	4628      	mov	r0, r5
 8007daa:	bd38      	pop	{r3, r4, r5, pc}
 8007dac:	b118      	cbz	r0, 8007db6 <_fflush_r+0x1a>
 8007dae:	6a03      	ldr	r3, [r0, #32]
 8007db0:	b90b      	cbnz	r3, 8007db6 <_fflush_r+0x1a>
 8007db2:	f7fe f9b3 	bl	800611c <__sinit>
 8007db6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8007dba:	2b00      	cmp	r3, #0
 8007dbc:	d0f3      	beq.n	8007da6 <_fflush_r+0xa>
 8007dbe:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8007dc0:	07d0      	lsls	r0, r2, #31
 8007dc2:	d404      	bmi.n	8007dce <_fflush_r+0x32>
 8007dc4:	0599      	lsls	r1, r3, #22
 8007dc6:	d402      	bmi.n	8007dce <_fflush_r+0x32>
 8007dc8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8007dca:	f7fe fbb2 	bl	8006532 <__retarget_lock_acquire_recursive>
 8007dce:	4628      	mov	r0, r5
 8007dd0:	4621      	mov	r1, r4
 8007dd2:	f7ff ff63 	bl	8007c9c <__sflush_r>
 8007dd6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8007dd8:	4605      	mov	r5, r0
 8007dda:	07da      	lsls	r2, r3, #31
 8007ddc:	d4e4      	bmi.n	8007da8 <_fflush_r+0xc>
 8007dde:	89a3      	ldrh	r3, [r4, #12]
 8007de0:	059b      	lsls	r3, r3, #22
 8007de2:	d4e1      	bmi.n	8007da8 <_fflush_r+0xc>
 8007de4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8007de6:	f7fe fba5 	bl	8006534 <__retarget_lock_release_recursive>
 8007dea:	e7dd      	b.n	8007da8 <_fflush_r+0xc>

08007dec <fiprintf>:
 8007dec:	b40e      	push	{r1, r2, r3}
 8007dee:	b503      	push	{r0, r1, lr}
 8007df0:	4601      	mov	r1, r0
 8007df2:	ab03      	add	r3, sp, #12
 8007df4:	4805      	ldr	r0, [pc, #20]	@ (8007e0c <fiprintf+0x20>)
 8007df6:	f853 2b04 	ldr.w	r2, [r3], #4
 8007dfa:	6800      	ldr	r0, [r0, #0]
 8007dfc:	9301      	str	r3, [sp, #4]
 8007dfe:	f7ff fe35 	bl	8007a6c <_vfiprintf_r>
 8007e02:	b002      	add	sp, #8
 8007e04:	f85d eb04 	ldr.w	lr, [sp], #4
 8007e08:	b003      	add	sp, #12
 8007e0a:	4770      	bx	lr
 8007e0c:	20000198 	.word	0x20000198

08007e10 <__swhatbuf_r>:
 8007e10:	b570      	push	{r4, r5, r6, lr}
 8007e12:	460c      	mov	r4, r1
 8007e14:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007e18:	4615      	mov	r5, r2
 8007e1a:	2900      	cmp	r1, #0
 8007e1c:	461e      	mov	r6, r3
 8007e1e:	b096      	sub	sp, #88	@ 0x58
 8007e20:	da0c      	bge.n	8007e3c <__swhatbuf_r+0x2c>
 8007e22:	89a3      	ldrh	r3, [r4, #12]
 8007e24:	2100      	movs	r1, #0
 8007e26:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8007e2a:	bf14      	ite	ne
 8007e2c:	2340      	movne	r3, #64	@ 0x40
 8007e2e:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8007e32:	2000      	movs	r0, #0
 8007e34:	6031      	str	r1, [r6, #0]
 8007e36:	602b      	str	r3, [r5, #0]
 8007e38:	b016      	add	sp, #88	@ 0x58
 8007e3a:	bd70      	pop	{r4, r5, r6, pc}
 8007e3c:	466a      	mov	r2, sp
 8007e3e:	f000 f849 	bl	8007ed4 <_fstat_r>
 8007e42:	2800      	cmp	r0, #0
 8007e44:	dbed      	blt.n	8007e22 <__swhatbuf_r+0x12>
 8007e46:	9901      	ldr	r1, [sp, #4]
 8007e48:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8007e4c:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8007e50:	4259      	negs	r1, r3
 8007e52:	4159      	adcs	r1, r3
 8007e54:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8007e58:	e7eb      	b.n	8007e32 <__swhatbuf_r+0x22>

08007e5a <__smakebuf_r>:
 8007e5a:	898b      	ldrh	r3, [r1, #12]
 8007e5c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007e5e:	079d      	lsls	r5, r3, #30
 8007e60:	4606      	mov	r6, r0
 8007e62:	460c      	mov	r4, r1
 8007e64:	d507      	bpl.n	8007e76 <__smakebuf_r+0x1c>
 8007e66:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8007e6a:	6023      	str	r3, [r4, #0]
 8007e6c:	6123      	str	r3, [r4, #16]
 8007e6e:	2301      	movs	r3, #1
 8007e70:	6163      	str	r3, [r4, #20]
 8007e72:	b003      	add	sp, #12
 8007e74:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007e76:	466a      	mov	r2, sp
 8007e78:	ab01      	add	r3, sp, #4
 8007e7a:	f7ff ffc9 	bl	8007e10 <__swhatbuf_r>
 8007e7e:	9f00      	ldr	r7, [sp, #0]
 8007e80:	4605      	mov	r5, r0
 8007e82:	4639      	mov	r1, r7
 8007e84:	4630      	mov	r0, r6
 8007e86:	f7fd fbd5 	bl	8005634 <_malloc_r>
 8007e8a:	b948      	cbnz	r0, 8007ea0 <__smakebuf_r+0x46>
 8007e8c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8007e90:	059a      	lsls	r2, r3, #22
 8007e92:	d4ee      	bmi.n	8007e72 <__smakebuf_r+0x18>
 8007e94:	f023 0303 	bic.w	r3, r3, #3
 8007e98:	f043 0302 	orr.w	r3, r3, #2
 8007e9c:	81a3      	strh	r3, [r4, #12]
 8007e9e:	e7e2      	b.n	8007e66 <__smakebuf_r+0xc>
 8007ea0:	89a3      	ldrh	r3, [r4, #12]
 8007ea2:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8007ea6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8007eaa:	81a3      	strh	r3, [r4, #12]
 8007eac:	9b01      	ldr	r3, [sp, #4]
 8007eae:	6020      	str	r0, [r4, #0]
 8007eb0:	b15b      	cbz	r3, 8007eca <__smakebuf_r+0x70>
 8007eb2:	4630      	mov	r0, r6
 8007eb4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8007eb8:	f000 f81e 	bl	8007ef8 <_isatty_r>
 8007ebc:	b128      	cbz	r0, 8007eca <__smakebuf_r+0x70>
 8007ebe:	89a3      	ldrh	r3, [r4, #12]
 8007ec0:	f023 0303 	bic.w	r3, r3, #3
 8007ec4:	f043 0301 	orr.w	r3, r3, #1
 8007ec8:	81a3      	strh	r3, [r4, #12]
 8007eca:	89a3      	ldrh	r3, [r4, #12]
 8007ecc:	431d      	orrs	r5, r3
 8007ece:	81a5      	strh	r5, [r4, #12]
 8007ed0:	e7cf      	b.n	8007e72 <__smakebuf_r+0x18>
	...

08007ed4 <_fstat_r>:
 8007ed4:	b538      	push	{r3, r4, r5, lr}
 8007ed6:	2300      	movs	r3, #0
 8007ed8:	4d06      	ldr	r5, [pc, #24]	@ (8007ef4 <_fstat_r+0x20>)
 8007eda:	4604      	mov	r4, r0
 8007edc:	4608      	mov	r0, r1
 8007ede:	4611      	mov	r1, r2
 8007ee0:	602b      	str	r3, [r5, #0]
 8007ee2:	f7fa fdc6 	bl	8002a72 <_fstat>
 8007ee6:	1c43      	adds	r3, r0, #1
 8007ee8:	d102      	bne.n	8007ef0 <_fstat_r+0x1c>
 8007eea:	682b      	ldr	r3, [r5, #0]
 8007eec:	b103      	cbz	r3, 8007ef0 <_fstat_r+0x1c>
 8007eee:	6023      	str	r3, [r4, #0]
 8007ef0:	bd38      	pop	{r3, r4, r5, pc}
 8007ef2:	bf00      	nop
 8007ef4:	20000664 	.word	0x20000664

08007ef8 <_isatty_r>:
 8007ef8:	b538      	push	{r3, r4, r5, lr}
 8007efa:	2300      	movs	r3, #0
 8007efc:	4d05      	ldr	r5, [pc, #20]	@ (8007f14 <_isatty_r+0x1c>)
 8007efe:	4604      	mov	r4, r0
 8007f00:	4608      	mov	r0, r1
 8007f02:	602b      	str	r3, [r5, #0]
 8007f04:	f7fa fdba 	bl	8002a7c <_isatty>
 8007f08:	1c43      	adds	r3, r0, #1
 8007f0a:	d102      	bne.n	8007f12 <_isatty_r+0x1a>
 8007f0c:	682b      	ldr	r3, [r5, #0]
 8007f0e:	b103      	cbz	r3, 8007f12 <_isatty_r+0x1a>
 8007f10:	6023      	str	r3, [r4, #0]
 8007f12:	bd38      	pop	{r3, r4, r5, pc}
 8007f14:	20000664 	.word	0x20000664

08007f18 <abort>:
 8007f18:	2006      	movs	r0, #6
 8007f1a:	b508      	push	{r3, lr}
 8007f1c:	f000 f840 	bl	8007fa0 <raise>
 8007f20:	2001      	movs	r0, #1
 8007f22:	f7fa fd8d 	bl	8002a40 <_exit>

08007f26 <_calloc_r>:
 8007f26:	b570      	push	{r4, r5, r6, lr}
 8007f28:	fba1 5402 	umull	r5, r4, r1, r2
 8007f2c:	b93c      	cbnz	r4, 8007f3e <_calloc_r+0x18>
 8007f2e:	4629      	mov	r1, r5
 8007f30:	f7fd fb80 	bl	8005634 <_malloc_r>
 8007f34:	4606      	mov	r6, r0
 8007f36:	b928      	cbnz	r0, 8007f44 <_calloc_r+0x1e>
 8007f38:	2600      	movs	r6, #0
 8007f3a:	4630      	mov	r0, r6
 8007f3c:	bd70      	pop	{r4, r5, r6, pc}
 8007f3e:	220c      	movs	r2, #12
 8007f40:	6002      	str	r2, [r0, #0]
 8007f42:	e7f9      	b.n	8007f38 <_calloc_r+0x12>
 8007f44:	462a      	mov	r2, r5
 8007f46:	4621      	mov	r1, r4
 8007f48:	f7fe fa66 	bl	8006418 <memset>
 8007f4c:	e7f5      	b.n	8007f3a <_calloc_r+0x14>

08007f4e <_raise_r>:
 8007f4e:	291f      	cmp	r1, #31
 8007f50:	b538      	push	{r3, r4, r5, lr}
 8007f52:	4605      	mov	r5, r0
 8007f54:	460c      	mov	r4, r1
 8007f56:	d904      	bls.n	8007f62 <_raise_r+0x14>
 8007f58:	2316      	movs	r3, #22
 8007f5a:	6003      	str	r3, [r0, #0]
 8007f5c:	f04f 30ff 	mov.w	r0, #4294967295
 8007f60:	bd38      	pop	{r3, r4, r5, pc}
 8007f62:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8007f64:	b112      	cbz	r2, 8007f6c <_raise_r+0x1e>
 8007f66:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8007f6a:	b94b      	cbnz	r3, 8007f80 <_raise_r+0x32>
 8007f6c:	4628      	mov	r0, r5
 8007f6e:	f000 f831 	bl	8007fd4 <_getpid_r>
 8007f72:	4622      	mov	r2, r4
 8007f74:	4601      	mov	r1, r0
 8007f76:	4628      	mov	r0, r5
 8007f78:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007f7c:	f000 b818 	b.w	8007fb0 <_kill_r>
 8007f80:	2b01      	cmp	r3, #1
 8007f82:	d00a      	beq.n	8007f9a <_raise_r+0x4c>
 8007f84:	1c59      	adds	r1, r3, #1
 8007f86:	d103      	bne.n	8007f90 <_raise_r+0x42>
 8007f88:	2316      	movs	r3, #22
 8007f8a:	6003      	str	r3, [r0, #0]
 8007f8c:	2001      	movs	r0, #1
 8007f8e:	e7e7      	b.n	8007f60 <_raise_r+0x12>
 8007f90:	2100      	movs	r1, #0
 8007f92:	4620      	mov	r0, r4
 8007f94:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8007f98:	4798      	blx	r3
 8007f9a:	2000      	movs	r0, #0
 8007f9c:	e7e0      	b.n	8007f60 <_raise_r+0x12>
	...

08007fa0 <raise>:
 8007fa0:	4b02      	ldr	r3, [pc, #8]	@ (8007fac <raise+0xc>)
 8007fa2:	4601      	mov	r1, r0
 8007fa4:	6818      	ldr	r0, [r3, #0]
 8007fa6:	f7ff bfd2 	b.w	8007f4e <_raise_r>
 8007faa:	bf00      	nop
 8007fac:	20000198 	.word	0x20000198

08007fb0 <_kill_r>:
 8007fb0:	b538      	push	{r3, r4, r5, lr}
 8007fb2:	2300      	movs	r3, #0
 8007fb4:	4d06      	ldr	r5, [pc, #24]	@ (8007fd0 <_kill_r+0x20>)
 8007fb6:	4604      	mov	r4, r0
 8007fb8:	4608      	mov	r0, r1
 8007fba:	4611      	mov	r1, r2
 8007fbc:	602b      	str	r3, [r5, #0]
 8007fbe:	f7fa fd37 	bl	8002a30 <_kill>
 8007fc2:	1c43      	adds	r3, r0, #1
 8007fc4:	d102      	bne.n	8007fcc <_kill_r+0x1c>
 8007fc6:	682b      	ldr	r3, [r5, #0]
 8007fc8:	b103      	cbz	r3, 8007fcc <_kill_r+0x1c>
 8007fca:	6023      	str	r3, [r4, #0]
 8007fcc:	bd38      	pop	{r3, r4, r5, pc}
 8007fce:	bf00      	nop
 8007fd0:	20000664 	.word	0x20000664

08007fd4 <_getpid_r>:
 8007fd4:	f7fa bd2a 	b.w	8002a2c <_getpid>

08007fd8 <_init>:
 8007fd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007fda:	bf00      	nop
 8007fdc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007fde:	bc08      	pop	{r3}
 8007fe0:	469e      	mov	lr, r3
 8007fe2:	4770      	bx	lr

08007fe4 <_fini>:
 8007fe4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007fe6:	bf00      	nop
 8007fe8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007fea:	bc08      	pop	{r3}
 8007fec:	469e      	mov	lr, r3
 8007fee:	4770      	bx	lr
