
ODB1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000b99c  08000110  08000110  00001110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000948  0800bab0  0800bab0  0000cab0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800c3f8  0800c3f8  0000e200  2**0
                  CONTENTS
  4 .ARM          00000008  0800c3f8  0800c3f8  0000d3f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800c400  0800c400  0000e200  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800c400  0800c400  0000d400  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800c404  0800c404  0000d404  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000200  20000000  0800c408  0000e000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000474  20000200  0800c608  0000e200  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000674  0800c608  0000e674  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0000e200  2**0
                  CONTENTS, READONLY
 12 .debug_info   00008d77  00000000  00000000  0000e229  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001eff  00000000  00000000  00016fa0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loclists 00001264  00000000  00000000  00018e9f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000480  00000000  00000000  0001a103  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000033d  00000000  00000000  0001a583  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001a851  00000000  00000000  0001a8c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000bad1  00000000  00000000  00035111  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00094b9d  00000000  00000000  00040be2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000d577f  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000023e4  00000000  00000000  000d57c4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	@ (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	@ (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	20000200 	.word	0x20000200
 800012c:	00000000 	.word	0x00000000
 8000130:	0800ba94 	.word	0x0800ba94

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	@ (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	@ (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	@ (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	20000204 	.word	0x20000204
 800014c:	0800ba94 	.word	0x0800ba94

08000150 <strcmp>:
 8000150:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000154:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000158:	2a01      	cmp	r2, #1
 800015a:	bf28      	it	cs
 800015c:	429a      	cmpcs	r2, r3
 800015e:	d0f7      	beq.n	8000150 <strcmp>
 8000160:	1ad0      	subs	r0, r2, r3
 8000162:	4770      	bx	lr

08000164 <strlen>:
 8000164:	4603      	mov	r3, r0
 8000166:	f813 2b01 	ldrb.w	r2, [r3], #1
 800016a:	2a00      	cmp	r2, #0
 800016c:	d1fb      	bne.n	8000166 <strlen+0x2>
 800016e:	1a18      	subs	r0, r3, r0
 8000170:	3801      	subs	r0, #1
 8000172:	4770      	bx	lr

08000174 <__aeabi_drsub>:
 8000174:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000178:	e002      	b.n	8000180 <__adddf3>
 800017a:	bf00      	nop

0800017c <__aeabi_dsub>:
 800017c:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

08000180 <__adddf3>:
 8000180:	b530      	push	{r4, r5, lr}
 8000182:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000186:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800018a:	ea94 0f05 	teq	r4, r5
 800018e:	bf08      	it	eq
 8000190:	ea90 0f02 	teqeq	r0, r2
 8000194:	bf1f      	itttt	ne
 8000196:	ea54 0c00 	orrsne.w	ip, r4, r0
 800019a:	ea55 0c02 	orrsne.w	ip, r5, r2
 800019e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80001a2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80001a6:	f000 80e2 	beq.w	800036e <__adddf3+0x1ee>
 80001aa:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80001ae:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80001b2:	bfb8      	it	lt
 80001b4:	426d      	neglt	r5, r5
 80001b6:	dd0c      	ble.n	80001d2 <__adddf3+0x52>
 80001b8:	442c      	add	r4, r5
 80001ba:	ea80 0202 	eor.w	r2, r0, r2
 80001be:	ea81 0303 	eor.w	r3, r1, r3
 80001c2:	ea82 0000 	eor.w	r0, r2, r0
 80001c6:	ea83 0101 	eor.w	r1, r3, r1
 80001ca:	ea80 0202 	eor.w	r2, r0, r2
 80001ce:	ea81 0303 	eor.w	r3, r1, r3
 80001d2:	2d36      	cmp	r5, #54	@ 0x36
 80001d4:	bf88      	it	hi
 80001d6:	bd30      	pophi	{r4, r5, pc}
 80001d8:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80001dc:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001e0:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80001e4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001e8:	d002      	beq.n	80001f0 <__adddf3+0x70>
 80001ea:	4240      	negs	r0, r0
 80001ec:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001f0:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 80001f4:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001f8:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001fc:	d002      	beq.n	8000204 <__adddf3+0x84>
 80001fe:	4252      	negs	r2, r2
 8000200:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000204:	ea94 0f05 	teq	r4, r5
 8000208:	f000 80a7 	beq.w	800035a <__adddf3+0x1da>
 800020c:	f1a4 0401 	sub.w	r4, r4, #1
 8000210:	f1d5 0e20 	rsbs	lr, r5, #32
 8000214:	db0d      	blt.n	8000232 <__adddf3+0xb2>
 8000216:	fa02 fc0e 	lsl.w	ip, r2, lr
 800021a:	fa22 f205 	lsr.w	r2, r2, r5
 800021e:	1880      	adds	r0, r0, r2
 8000220:	f141 0100 	adc.w	r1, r1, #0
 8000224:	fa03 f20e 	lsl.w	r2, r3, lr
 8000228:	1880      	adds	r0, r0, r2
 800022a:	fa43 f305 	asr.w	r3, r3, r5
 800022e:	4159      	adcs	r1, r3
 8000230:	e00e      	b.n	8000250 <__adddf3+0xd0>
 8000232:	f1a5 0520 	sub.w	r5, r5, #32
 8000236:	f10e 0e20 	add.w	lr, lr, #32
 800023a:	2a01      	cmp	r2, #1
 800023c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000240:	bf28      	it	cs
 8000242:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000246:	fa43 f305 	asr.w	r3, r3, r5
 800024a:	18c0      	adds	r0, r0, r3
 800024c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000250:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000254:	d507      	bpl.n	8000266 <__adddf3+0xe6>
 8000256:	f04f 0e00 	mov.w	lr, #0
 800025a:	f1dc 0c00 	rsbs	ip, ip, #0
 800025e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000262:	eb6e 0101 	sbc.w	r1, lr, r1
 8000266:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 800026a:	d31b      	bcc.n	80002a4 <__adddf3+0x124>
 800026c:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 8000270:	d30c      	bcc.n	800028c <__adddf3+0x10c>
 8000272:	0849      	lsrs	r1, r1, #1
 8000274:	ea5f 0030 	movs.w	r0, r0, rrx
 8000278:	ea4f 0c3c 	mov.w	ip, ip, rrx
 800027c:	f104 0401 	add.w	r4, r4, #1
 8000280:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000284:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000288:	f080 809a 	bcs.w	80003c0 <__adddf3+0x240>
 800028c:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000290:	bf08      	it	eq
 8000292:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000296:	f150 0000 	adcs.w	r0, r0, #0
 800029a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800029e:	ea41 0105 	orr.w	r1, r1, r5
 80002a2:	bd30      	pop	{r4, r5, pc}
 80002a4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80002a8:	4140      	adcs	r0, r0
 80002aa:	eb41 0101 	adc.w	r1, r1, r1
 80002ae:	3c01      	subs	r4, #1
 80002b0:	bf28      	it	cs
 80002b2:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80002b6:	d2e9      	bcs.n	800028c <__adddf3+0x10c>
 80002b8:	f091 0f00 	teq	r1, #0
 80002bc:	bf04      	itt	eq
 80002be:	4601      	moveq	r1, r0
 80002c0:	2000      	moveq	r0, #0
 80002c2:	fab1 f381 	clz	r3, r1
 80002c6:	bf08      	it	eq
 80002c8:	3320      	addeq	r3, #32
 80002ca:	f1a3 030b 	sub.w	r3, r3, #11
 80002ce:	f1b3 0220 	subs.w	r2, r3, #32
 80002d2:	da0c      	bge.n	80002ee <__adddf3+0x16e>
 80002d4:	320c      	adds	r2, #12
 80002d6:	dd08      	ble.n	80002ea <__adddf3+0x16a>
 80002d8:	f102 0c14 	add.w	ip, r2, #20
 80002dc:	f1c2 020c 	rsb	r2, r2, #12
 80002e0:	fa01 f00c 	lsl.w	r0, r1, ip
 80002e4:	fa21 f102 	lsr.w	r1, r1, r2
 80002e8:	e00c      	b.n	8000304 <__adddf3+0x184>
 80002ea:	f102 0214 	add.w	r2, r2, #20
 80002ee:	bfd8      	it	le
 80002f0:	f1c2 0c20 	rsble	ip, r2, #32
 80002f4:	fa01 f102 	lsl.w	r1, r1, r2
 80002f8:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002fc:	bfdc      	itt	le
 80002fe:	ea41 010c 	orrle.w	r1, r1, ip
 8000302:	4090      	lslle	r0, r2
 8000304:	1ae4      	subs	r4, r4, r3
 8000306:	bfa2      	ittt	ge
 8000308:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800030c:	4329      	orrge	r1, r5
 800030e:	bd30      	popge	{r4, r5, pc}
 8000310:	ea6f 0404 	mvn.w	r4, r4
 8000314:	3c1f      	subs	r4, #31
 8000316:	da1c      	bge.n	8000352 <__adddf3+0x1d2>
 8000318:	340c      	adds	r4, #12
 800031a:	dc0e      	bgt.n	800033a <__adddf3+0x1ba>
 800031c:	f104 0414 	add.w	r4, r4, #20
 8000320:	f1c4 0220 	rsb	r2, r4, #32
 8000324:	fa20 f004 	lsr.w	r0, r0, r4
 8000328:	fa01 f302 	lsl.w	r3, r1, r2
 800032c:	ea40 0003 	orr.w	r0, r0, r3
 8000330:	fa21 f304 	lsr.w	r3, r1, r4
 8000334:	ea45 0103 	orr.w	r1, r5, r3
 8000338:	bd30      	pop	{r4, r5, pc}
 800033a:	f1c4 040c 	rsb	r4, r4, #12
 800033e:	f1c4 0220 	rsb	r2, r4, #32
 8000342:	fa20 f002 	lsr.w	r0, r0, r2
 8000346:	fa01 f304 	lsl.w	r3, r1, r4
 800034a:	ea40 0003 	orr.w	r0, r0, r3
 800034e:	4629      	mov	r1, r5
 8000350:	bd30      	pop	{r4, r5, pc}
 8000352:	fa21 f004 	lsr.w	r0, r1, r4
 8000356:	4629      	mov	r1, r5
 8000358:	bd30      	pop	{r4, r5, pc}
 800035a:	f094 0f00 	teq	r4, #0
 800035e:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 8000362:	bf06      	itte	eq
 8000364:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000368:	3401      	addeq	r4, #1
 800036a:	3d01      	subne	r5, #1
 800036c:	e74e      	b.n	800020c <__adddf3+0x8c>
 800036e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000372:	bf18      	it	ne
 8000374:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000378:	d029      	beq.n	80003ce <__adddf3+0x24e>
 800037a:	ea94 0f05 	teq	r4, r5
 800037e:	bf08      	it	eq
 8000380:	ea90 0f02 	teqeq	r0, r2
 8000384:	d005      	beq.n	8000392 <__adddf3+0x212>
 8000386:	ea54 0c00 	orrs.w	ip, r4, r0
 800038a:	bf04      	itt	eq
 800038c:	4619      	moveq	r1, r3
 800038e:	4610      	moveq	r0, r2
 8000390:	bd30      	pop	{r4, r5, pc}
 8000392:	ea91 0f03 	teq	r1, r3
 8000396:	bf1e      	ittt	ne
 8000398:	2100      	movne	r1, #0
 800039a:	2000      	movne	r0, #0
 800039c:	bd30      	popne	{r4, r5, pc}
 800039e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80003a2:	d105      	bne.n	80003b0 <__adddf3+0x230>
 80003a4:	0040      	lsls	r0, r0, #1
 80003a6:	4149      	adcs	r1, r1
 80003a8:	bf28      	it	cs
 80003aa:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80003b4:	bf3c      	itt	cc
 80003b6:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80003ba:	bd30      	popcc	{r4, r5, pc}
 80003bc:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003c0:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80003c4:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80003c8:	f04f 0000 	mov.w	r0, #0
 80003cc:	bd30      	pop	{r4, r5, pc}
 80003ce:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003d2:	bf1a      	itte	ne
 80003d4:	4619      	movne	r1, r3
 80003d6:	4610      	movne	r0, r2
 80003d8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003dc:	bf1c      	itt	ne
 80003de:	460b      	movne	r3, r1
 80003e0:	4602      	movne	r2, r0
 80003e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003e6:	bf06      	itte	eq
 80003e8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003ec:	ea91 0f03 	teqeq	r1, r3
 80003f0:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 80003f4:	bd30      	pop	{r4, r5, pc}
 80003f6:	bf00      	nop

080003f8 <__aeabi_ui2d>:
 80003f8:	f090 0f00 	teq	r0, #0
 80003fc:	bf04      	itt	eq
 80003fe:	2100      	moveq	r1, #0
 8000400:	4770      	bxeq	lr
 8000402:	b530      	push	{r4, r5, lr}
 8000404:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000408:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800040c:	f04f 0500 	mov.w	r5, #0
 8000410:	f04f 0100 	mov.w	r1, #0
 8000414:	e750      	b.n	80002b8 <__adddf3+0x138>
 8000416:	bf00      	nop

08000418 <__aeabi_i2d>:
 8000418:	f090 0f00 	teq	r0, #0
 800041c:	bf04      	itt	eq
 800041e:	2100      	moveq	r1, #0
 8000420:	4770      	bxeq	lr
 8000422:	b530      	push	{r4, r5, lr}
 8000424:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000428:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800042c:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 8000430:	bf48      	it	mi
 8000432:	4240      	negmi	r0, r0
 8000434:	f04f 0100 	mov.w	r1, #0
 8000438:	e73e      	b.n	80002b8 <__adddf3+0x138>
 800043a:	bf00      	nop

0800043c <__aeabi_f2d>:
 800043c:	0042      	lsls	r2, r0, #1
 800043e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000442:	ea4f 0131 	mov.w	r1, r1, rrx
 8000446:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800044a:	bf1f      	itttt	ne
 800044c:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 8000450:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000454:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000458:	4770      	bxne	lr
 800045a:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800045e:	bf08      	it	eq
 8000460:	4770      	bxeq	lr
 8000462:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000466:	bf04      	itt	eq
 8000468:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 800046c:	4770      	bxeq	lr
 800046e:	b530      	push	{r4, r5, lr}
 8000470:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000474:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000478:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 800047c:	e71c      	b.n	80002b8 <__adddf3+0x138>
 800047e:	bf00      	nop

08000480 <__aeabi_ul2d>:
 8000480:	ea50 0201 	orrs.w	r2, r0, r1
 8000484:	bf08      	it	eq
 8000486:	4770      	bxeq	lr
 8000488:	b530      	push	{r4, r5, lr}
 800048a:	f04f 0500 	mov.w	r5, #0
 800048e:	e00a      	b.n	80004a6 <__aeabi_l2d+0x16>

08000490 <__aeabi_l2d>:
 8000490:	ea50 0201 	orrs.w	r2, r0, r1
 8000494:	bf08      	it	eq
 8000496:	4770      	bxeq	lr
 8000498:	b530      	push	{r4, r5, lr}
 800049a:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 800049e:	d502      	bpl.n	80004a6 <__aeabi_l2d+0x16>
 80004a0:	4240      	negs	r0, r0
 80004a2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80004a6:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80004aa:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80004ae:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80004b2:	f43f aed8 	beq.w	8000266 <__adddf3+0xe6>
 80004b6:	f04f 0203 	mov.w	r2, #3
 80004ba:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004be:	bf18      	it	ne
 80004c0:	3203      	addne	r2, #3
 80004c2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004c6:	bf18      	it	ne
 80004c8:	3203      	addne	r2, #3
 80004ca:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004ce:	f1c2 0320 	rsb	r3, r2, #32
 80004d2:	fa00 fc03 	lsl.w	ip, r0, r3
 80004d6:	fa20 f002 	lsr.w	r0, r0, r2
 80004da:	fa01 fe03 	lsl.w	lr, r1, r3
 80004de:	ea40 000e 	orr.w	r0, r0, lr
 80004e2:	fa21 f102 	lsr.w	r1, r1, r2
 80004e6:	4414      	add	r4, r2
 80004e8:	e6bd      	b.n	8000266 <__adddf3+0xe6>
 80004ea:	bf00      	nop

080004ec <__aeabi_dmul>:
 80004ec:	b570      	push	{r4, r5, r6, lr}
 80004ee:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80004f2:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80004f6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004fa:	bf1d      	ittte	ne
 80004fc:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000500:	ea94 0f0c 	teqne	r4, ip
 8000504:	ea95 0f0c 	teqne	r5, ip
 8000508:	f000 f8de 	bleq	80006c8 <__aeabi_dmul+0x1dc>
 800050c:	442c      	add	r4, r5
 800050e:	ea81 0603 	eor.w	r6, r1, r3
 8000512:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000516:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800051a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800051e:	bf18      	it	ne
 8000520:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000524:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000528:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800052c:	d038      	beq.n	80005a0 <__aeabi_dmul+0xb4>
 800052e:	fba0 ce02 	umull	ip, lr, r0, r2
 8000532:	f04f 0500 	mov.w	r5, #0
 8000536:	fbe1 e502 	umlal	lr, r5, r1, r2
 800053a:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800053e:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000542:	f04f 0600 	mov.w	r6, #0
 8000546:	fbe1 5603 	umlal	r5, r6, r1, r3
 800054a:	f09c 0f00 	teq	ip, #0
 800054e:	bf18      	it	ne
 8000550:	f04e 0e01 	orrne.w	lr, lr, #1
 8000554:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000558:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 800055c:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 8000560:	d204      	bcs.n	800056c <__aeabi_dmul+0x80>
 8000562:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000566:	416d      	adcs	r5, r5
 8000568:	eb46 0606 	adc.w	r6, r6, r6
 800056c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000570:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000574:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000578:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 800057c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000580:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000584:	bf88      	it	hi
 8000586:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 800058a:	d81e      	bhi.n	80005ca <__aeabi_dmul+0xde>
 800058c:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 8000590:	bf08      	it	eq
 8000592:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000596:	f150 0000 	adcs.w	r0, r0, #0
 800059a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800059e:	bd70      	pop	{r4, r5, r6, pc}
 80005a0:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80005a4:	ea46 0101 	orr.w	r1, r6, r1
 80005a8:	ea40 0002 	orr.w	r0, r0, r2
 80005ac:	ea81 0103 	eor.w	r1, r1, r3
 80005b0:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005b4:	bfc2      	ittt	gt
 80005b6:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005ba:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005be:	bd70      	popgt	{r4, r5, r6, pc}
 80005c0:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80005c4:	f04f 0e00 	mov.w	lr, #0
 80005c8:	3c01      	subs	r4, #1
 80005ca:	f300 80ab 	bgt.w	8000724 <__aeabi_dmul+0x238>
 80005ce:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80005d2:	bfde      	ittt	le
 80005d4:	2000      	movle	r0, #0
 80005d6:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80005da:	bd70      	pople	{r4, r5, r6, pc}
 80005dc:	f1c4 0400 	rsb	r4, r4, #0
 80005e0:	3c20      	subs	r4, #32
 80005e2:	da35      	bge.n	8000650 <__aeabi_dmul+0x164>
 80005e4:	340c      	adds	r4, #12
 80005e6:	dc1b      	bgt.n	8000620 <__aeabi_dmul+0x134>
 80005e8:	f104 0414 	add.w	r4, r4, #20
 80005ec:	f1c4 0520 	rsb	r5, r4, #32
 80005f0:	fa00 f305 	lsl.w	r3, r0, r5
 80005f4:	fa20 f004 	lsr.w	r0, r0, r4
 80005f8:	fa01 f205 	lsl.w	r2, r1, r5
 80005fc:	ea40 0002 	orr.w	r0, r0, r2
 8000600:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000604:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000608:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800060c:	fa21 f604 	lsr.w	r6, r1, r4
 8000610:	eb42 0106 	adc.w	r1, r2, r6
 8000614:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000618:	bf08      	it	eq
 800061a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800061e:	bd70      	pop	{r4, r5, r6, pc}
 8000620:	f1c4 040c 	rsb	r4, r4, #12
 8000624:	f1c4 0520 	rsb	r5, r4, #32
 8000628:	fa00 f304 	lsl.w	r3, r0, r4
 800062c:	fa20 f005 	lsr.w	r0, r0, r5
 8000630:	fa01 f204 	lsl.w	r2, r1, r4
 8000634:	ea40 0002 	orr.w	r0, r0, r2
 8000638:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800063c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000640:	f141 0100 	adc.w	r1, r1, #0
 8000644:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000648:	bf08      	it	eq
 800064a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800064e:	bd70      	pop	{r4, r5, r6, pc}
 8000650:	f1c4 0520 	rsb	r5, r4, #32
 8000654:	fa00 f205 	lsl.w	r2, r0, r5
 8000658:	ea4e 0e02 	orr.w	lr, lr, r2
 800065c:	fa20 f304 	lsr.w	r3, r0, r4
 8000660:	fa01 f205 	lsl.w	r2, r1, r5
 8000664:	ea43 0302 	orr.w	r3, r3, r2
 8000668:	fa21 f004 	lsr.w	r0, r1, r4
 800066c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000670:	fa21 f204 	lsr.w	r2, r1, r4
 8000674:	ea20 0002 	bic.w	r0, r0, r2
 8000678:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 800067c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000680:	bf08      	it	eq
 8000682:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000686:	bd70      	pop	{r4, r5, r6, pc}
 8000688:	f094 0f00 	teq	r4, #0
 800068c:	d10f      	bne.n	80006ae <__aeabi_dmul+0x1c2>
 800068e:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 8000692:	0040      	lsls	r0, r0, #1
 8000694:	eb41 0101 	adc.w	r1, r1, r1
 8000698:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 800069c:	bf08      	it	eq
 800069e:	3c01      	subeq	r4, #1
 80006a0:	d0f7      	beq.n	8000692 <__aeabi_dmul+0x1a6>
 80006a2:	ea41 0106 	orr.w	r1, r1, r6
 80006a6:	f095 0f00 	teq	r5, #0
 80006aa:	bf18      	it	ne
 80006ac:	4770      	bxne	lr
 80006ae:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80006b2:	0052      	lsls	r2, r2, #1
 80006b4:	eb43 0303 	adc.w	r3, r3, r3
 80006b8:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80006bc:	bf08      	it	eq
 80006be:	3d01      	subeq	r5, #1
 80006c0:	d0f7      	beq.n	80006b2 <__aeabi_dmul+0x1c6>
 80006c2:	ea43 0306 	orr.w	r3, r3, r6
 80006c6:	4770      	bx	lr
 80006c8:	ea94 0f0c 	teq	r4, ip
 80006cc:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006d0:	bf18      	it	ne
 80006d2:	ea95 0f0c 	teqne	r5, ip
 80006d6:	d00c      	beq.n	80006f2 <__aeabi_dmul+0x206>
 80006d8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006dc:	bf18      	it	ne
 80006de:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006e2:	d1d1      	bne.n	8000688 <__aeabi_dmul+0x19c>
 80006e4:	ea81 0103 	eor.w	r1, r1, r3
 80006e8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80006ec:	f04f 0000 	mov.w	r0, #0
 80006f0:	bd70      	pop	{r4, r5, r6, pc}
 80006f2:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006f6:	bf06      	itte	eq
 80006f8:	4610      	moveq	r0, r2
 80006fa:	4619      	moveq	r1, r3
 80006fc:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000700:	d019      	beq.n	8000736 <__aeabi_dmul+0x24a>
 8000702:	ea94 0f0c 	teq	r4, ip
 8000706:	d102      	bne.n	800070e <__aeabi_dmul+0x222>
 8000708:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 800070c:	d113      	bne.n	8000736 <__aeabi_dmul+0x24a>
 800070e:	ea95 0f0c 	teq	r5, ip
 8000712:	d105      	bne.n	8000720 <__aeabi_dmul+0x234>
 8000714:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000718:	bf1c      	itt	ne
 800071a:	4610      	movne	r0, r2
 800071c:	4619      	movne	r1, r3
 800071e:	d10a      	bne.n	8000736 <__aeabi_dmul+0x24a>
 8000720:	ea81 0103 	eor.w	r1, r1, r3
 8000724:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000728:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 800072c:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000730:	f04f 0000 	mov.w	r0, #0
 8000734:	bd70      	pop	{r4, r5, r6, pc}
 8000736:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 800073a:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800073e:	bd70      	pop	{r4, r5, r6, pc}

08000740 <__aeabi_ddiv>:
 8000740:	b570      	push	{r4, r5, r6, lr}
 8000742:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000746:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 800074a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800074e:	bf1d      	ittte	ne
 8000750:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000754:	ea94 0f0c 	teqne	r4, ip
 8000758:	ea95 0f0c 	teqne	r5, ip
 800075c:	f000 f8a7 	bleq	80008ae <__aeabi_ddiv+0x16e>
 8000760:	eba4 0405 	sub.w	r4, r4, r5
 8000764:	ea81 0e03 	eor.w	lr, r1, r3
 8000768:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800076c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000770:	f000 8088 	beq.w	8000884 <__aeabi_ddiv+0x144>
 8000774:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000778:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 800077c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000780:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000784:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000788:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 800078c:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000790:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000794:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 8000798:	429d      	cmp	r5, r3
 800079a:	bf08      	it	eq
 800079c:	4296      	cmpeq	r6, r2
 800079e:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80007a2:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80007a6:	d202      	bcs.n	80007ae <__aeabi_ddiv+0x6e>
 80007a8:	085b      	lsrs	r3, r3, #1
 80007aa:	ea4f 0232 	mov.w	r2, r2, rrx
 80007ae:	1ab6      	subs	r6, r6, r2
 80007b0:	eb65 0503 	sbc.w	r5, r5, r3
 80007b4:	085b      	lsrs	r3, r3, #1
 80007b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80007ba:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80007be:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80007c2:	ebb6 0e02 	subs.w	lr, r6, r2
 80007c6:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ca:	bf22      	ittt	cs
 80007cc:	1ab6      	subcs	r6, r6, r2
 80007ce:	4675      	movcs	r5, lr
 80007d0:	ea40 000c 	orrcs.w	r0, r0, ip
 80007d4:	085b      	lsrs	r3, r3, #1
 80007d6:	ea4f 0232 	mov.w	r2, r2, rrx
 80007da:	ebb6 0e02 	subs.w	lr, r6, r2
 80007de:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007e2:	bf22      	ittt	cs
 80007e4:	1ab6      	subcs	r6, r6, r2
 80007e6:	4675      	movcs	r5, lr
 80007e8:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007ec:	085b      	lsrs	r3, r3, #1
 80007ee:	ea4f 0232 	mov.w	r2, r2, rrx
 80007f2:	ebb6 0e02 	subs.w	lr, r6, r2
 80007f6:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007fa:	bf22      	ittt	cs
 80007fc:	1ab6      	subcs	r6, r6, r2
 80007fe:	4675      	movcs	r5, lr
 8000800:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000804:	085b      	lsrs	r3, r3, #1
 8000806:	ea4f 0232 	mov.w	r2, r2, rrx
 800080a:	ebb6 0e02 	subs.w	lr, r6, r2
 800080e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000812:	bf22      	ittt	cs
 8000814:	1ab6      	subcs	r6, r6, r2
 8000816:	4675      	movcs	r5, lr
 8000818:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 800081c:	ea55 0e06 	orrs.w	lr, r5, r6
 8000820:	d018      	beq.n	8000854 <__aeabi_ddiv+0x114>
 8000822:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000826:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800082a:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800082e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000832:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000836:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800083a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800083e:	d1c0      	bne.n	80007c2 <__aeabi_ddiv+0x82>
 8000840:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000844:	d10b      	bne.n	800085e <__aeabi_ddiv+0x11e>
 8000846:	ea41 0100 	orr.w	r1, r1, r0
 800084a:	f04f 0000 	mov.w	r0, #0
 800084e:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 8000852:	e7b6      	b.n	80007c2 <__aeabi_ddiv+0x82>
 8000854:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000858:	bf04      	itt	eq
 800085a:	4301      	orreq	r1, r0
 800085c:	2000      	moveq	r0, #0
 800085e:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000862:	bf88      	it	hi
 8000864:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000868:	f63f aeaf 	bhi.w	80005ca <__aeabi_dmul+0xde>
 800086c:	ebb5 0c03 	subs.w	ip, r5, r3
 8000870:	bf04      	itt	eq
 8000872:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000876:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800087a:	f150 0000 	adcs.w	r0, r0, #0
 800087e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000882:	bd70      	pop	{r4, r5, r6, pc}
 8000884:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000888:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 800088c:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000890:	bfc2      	ittt	gt
 8000892:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000896:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800089a:	bd70      	popgt	{r4, r5, r6, pc}
 800089c:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80008a0:	f04f 0e00 	mov.w	lr, #0
 80008a4:	3c01      	subs	r4, #1
 80008a6:	e690      	b.n	80005ca <__aeabi_dmul+0xde>
 80008a8:	ea45 0e06 	orr.w	lr, r5, r6
 80008ac:	e68d      	b.n	80005ca <__aeabi_dmul+0xde>
 80008ae:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80008b2:	ea94 0f0c 	teq	r4, ip
 80008b6:	bf08      	it	eq
 80008b8:	ea95 0f0c 	teqeq	r5, ip
 80008bc:	f43f af3b 	beq.w	8000736 <__aeabi_dmul+0x24a>
 80008c0:	ea94 0f0c 	teq	r4, ip
 80008c4:	d10a      	bne.n	80008dc <__aeabi_ddiv+0x19c>
 80008c6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008ca:	f47f af34 	bne.w	8000736 <__aeabi_dmul+0x24a>
 80008ce:	ea95 0f0c 	teq	r5, ip
 80008d2:	f47f af25 	bne.w	8000720 <__aeabi_dmul+0x234>
 80008d6:	4610      	mov	r0, r2
 80008d8:	4619      	mov	r1, r3
 80008da:	e72c      	b.n	8000736 <__aeabi_dmul+0x24a>
 80008dc:	ea95 0f0c 	teq	r5, ip
 80008e0:	d106      	bne.n	80008f0 <__aeabi_ddiv+0x1b0>
 80008e2:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008e6:	f43f aefd 	beq.w	80006e4 <__aeabi_dmul+0x1f8>
 80008ea:	4610      	mov	r0, r2
 80008ec:	4619      	mov	r1, r3
 80008ee:	e722      	b.n	8000736 <__aeabi_dmul+0x24a>
 80008f0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008f4:	bf18      	it	ne
 80008f6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008fa:	f47f aec5 	bne.w	8000688 <__aeabi_dmul+0x19c>
 80008fe:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000902:	f47f af0d 	bne.w	8000720 <__aeabi_dmul+0x234>
 8000906:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 800090a:	f47f aeeb 	bne.w	80006e4 <__aeabi_dmul+0x1f8>
 800090e:	e712      	b.n	8000736 <__aeabi_dmul+0x24a>

08000910 <__gedf2>:
 8000910:	f04f 3cff 	mov.w	ip, #4294967295
 8000914:	e006      	b.n	8000924 <__cmpdf2+0x4>
 8000916:	bf00      	nop

08000918 <__ledf2>:
 8000918:	f04f 0c01 	mov.w	ip, #1
 800091c:	e002      	b.n	8000924 <__cmpdf2+0x4>
 800091e:	bf00      	nop

08000920 <__cmpdf2>:
 8000920:	f04f 0c01 	mov.w	ip, #1
 8000924:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000928:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 800092c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000930:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000934:	bf18      	it	ne
 8000936:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 800093a:	d01b      	beq.n	8000974 <__cmpdf2+0x54>
 800093c:	b001      	add	sp, #4
 800093e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000942:	bf0c      	ite	eq
 8000944:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000948:	ea91 0f03 	teqne	r1, r3
 800094c:	bf02      	ittt	eq
 800094e:	ea90 0f02 	teqeq	r0, r2
 8000952:	2000      	moveq	r0, #0
 8000954:	4770      	bxeq	lr
 8000956:	f110 0f00 	cmn.w	r0, #0
 800095a:	ea91 0f03 	teq	r1, r3
 800095e:	bf58      	it	pl
 8000960:	4299      	cmppl	r1, r3
 8000962:	bf08      	it	eq
 8000964:	4290      	cmpeq	r0, r2
 8000966:	bf2c      	ite	cs
 8000968:	17d8      	asrcs	r0, r3, #31
 800096a:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800096e:	f040 0001 	orr.w	r0, r0, #1
 8000972:	4770      	bx	lr
 8000974:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000978:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800097c:	d102      	bne.n	8000984 <__cmpdf2+0x64>
 800097e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000982:	d107      	bne.n	8000994 <__cmpdf2+0x74>
 8000984:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000988:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800098c:	d1d6      	bne.n	800093c <__cmpdf2+0x1c>
 800098e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000992:	d0d3      	beq.n	800093c <__cmpdf2+0x1c>
 8000994:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000998:	4770      	bx	lr
 800099a:	bf00      	nop

0800099c <__aeabi_cdrcmple>:
 800099c:	4684      	mov	ip, r0
 800099e:	4610      	mov	r0, r2
 80009a0:	4662      	mov	r2, ip
 80009a2:	468c      	mov	ip, r1
 80009a4:	4619      	mov	r1, r3
 80009a6:	4663      	mov	r3, ip
 80009a8:	e000      	b.n	80009ac <__aeabi_cdcmpeq>
 80009aa:	bf00      	nop

080009ac <__aeabi_cdcmpeq>:
 80009ac:	b501      	push	{r0, lr}
 80009ae:	f7ff ffb7 	bl	8000920 <__cmpdf2>
 80009b2:	2800      	cmp	r0, #0
 80009b4:	bf48      	it	mi
 80009b6:	f110 0f00 	cmnmi.w	r0, #0
 80009ba:	bd01      	pop	{r0, pc}

080009bc <__aeabi_dcmpeq>:
 80009bc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009c0:	f7ff fff4 	bl	80009ac <__aeabi_cdcmpeq>
 80009c4:	bf0c      	ite	eq
 80009c6:	2001      	moveq	r0, #1
 80009c8:	2000      	movne	r0, #0
 80009ca:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ce:	bf00      	nop

080009d0 <__aeabi_dcmplt>:
 80009d0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009d4:	f7ff ffea 	bl	80009ac <__aeabi_cdcmpeq>
 80009d8:	bf34      	ite	cc
 80009da:	2001      	movcc	r0, #1
 80009dc:	2000      	movcs	r0, #0
 80009de:	f85d fb08 	ldr.w	pc, [sp], #8
 80009e2:	bf00      	nop

080009e4 <__aeabi_dcmple>:
 80009e4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e8:	f7ff ffe0 	bl	80009ac <__aeabi_cdcmpeq>
 80009ec:	bf94      	ite	ls
 80009ee:	2001      	movls	r0, #1
 80009f0:	2000      	movhi	r0, #0
 80009f2:	f85d fb08 	ldr.w	pc, [sp], #8
 80009f6:	bf00      	nop

080009f8 <__aeabi_dcmpge>:
 80009f8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009fc:	f7ff ffce 	bl	800099c <__aeabi_cdrcmple>
 8000a00:	bf94      	ite	ls
 8000a02:	2001      	movls	r0, #1
 8000a04:	2000      	movhi	r0, #0
 8000a06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a0a:	bf00      	nop

08000a0c <__aeabi_dcmpgt>:
 8000a0c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a10:	f7ff ffc4 	bl	800099c <__aeabi_cdrcmple>
 8000a14:	bf34      	ite	cc
 8000a16:	2001      	movcc	r0, #1
 8000a18:	2000      	movcs	r0, #0
 8000a1a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a1e:	bf00      	nop

08000a20 <__aeabi_dcmpun>:
 8000a20:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a24:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a28:	d102      	bne.n	8000a30 <__aeabi_dcmpun+0x10>
 8000a2a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a2e:	d10a      	bne.n	8000a46 <__aeabi_dcmpun+0x26>
 8000a30:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a34:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a38:	d102      	bne.n	8000a40 <__aeabi_dcmpun+0x20>
 8000a3a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a3e:	d102      	bne.n	8000a46 <__aeabi_dcmpun+0x26>
 8000a40:	f04f 0000 	mov.w	r0, #0
 8000a44:	4770      	bx	lr
 8000a46:	f04f 0001 	mov.w	r0, #1
 8000a4a:	4770      	bx	lr

08000a4c <__aeabi_d2iz>:
 8000a4c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a50:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000a54:	d215      	bcs.n	8000a82 <__aeabi_d2iz+0x36>
 8000a56:	d511      	bpl.n	8000a7c <__aeabi_d2iz+0x30>
 8000a58:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000a5c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a60:	d912      	bls.n	8000a88 <__aeabi_d2iz+0x3c>
 8000a62:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a66:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000a6a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a6e:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000a72:	fa23 f002 	lsr.w	r0, r3, r2
 8000a76:	bf18      	it	ne
 8000a78:	4240      	negne	r0, r0
 8000a7a:	4770      	bx	lr
 8000a7c:	f04f 0000 	mov.w	r0, #0
 8000a80:	4770      	bx	lr
 8000a82:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a86:	d105      	bne.n	8000a94 <__aeabi_d2iz+0x48>
 8000a88:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000a8c:	bf08      	it	eq
 8000a8e:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000a92:	4770      	bx	lr
 8000a94:	f04f 0000 	mov.w	r0, #0
 8000a98:	4770      	bx	lr
 8000a9a:	bf00      	nop

08000a9c <__aeabi_d2uiz>:
 8000a9c:	004a      	lsls	r2, r1, #1
 8000a9e:	d211      	bcs.n	8000ac4 <__aeabi_d2uiz+0x28>
 8000aa0:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000aa4:	d211      	bcs.n	8000aca <__aeabi_d2uiz+0x2e>
 8000aa6:	d50d      	bpl.n	8000ac4 <__aeabi_d2uiz+0x28>
 8000aa8:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000aac:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000ab0:	d40e      	bmi.n	8000ad0 <__aeabi_d2uiz+0x34>
 8000ab2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ab6:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000aba:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000abe:	fa23 f002 	lsr.w	r0, r3, r2
 8000ac2:	4770      	bx	lr
 8000ac4:	f04f 0000 	mov.w	r0, #0
 8000ac8:	4770      	bx	lr
 8000aca:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ace:	d102      	bne.n	8000ad6 <__aeabi_d2uiz+0x3a>
 8000ad0:	f04f 30ff 	mov.w	r0, #4294967295
 8000ad4:	4770      	bx	lr
 8000ad6:	f04f 0000 	mov.w	r0, #0
 8000ada:	4770      	bx	lr

08000adc <__aeabi_d2f>:
 8000adc:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000ae0:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000ae4:	bf24      	itt	cs
 8000ae6:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000aea:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000aee:	d90d      	bls.n	8000b0c <__aeabi_d2f+0x30>
 8000af0:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000af4:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000af8:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000afc:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000b00:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b04:	bf08      	it	eq
 8000b06:	f020 0001 	biceq.w	r0, r0, #1
 8000b0a:	4770      	bx	lr
 8000b0c:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000b10:	d121      	bne.n	8000b56 <__aeabi_d2f+0x7a>
 8000b12:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000b16:	bfbc      	itt	lt
 8000b18:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000b1c:	4770      	bxlt	lr
 8000b1e:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000b22:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b26:	f1c2 0218 	rsb	r2, r2, #24
 8000b2a:	f1c2 0c20 	rsb	ip, r2, #32
 8000b2e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b32:	fa20 f002 	lsr.w	r0, r0, r2
 8000b36:	bf18      	it	ne
 8000b38:	f040 0001 	orrne.w	r0, r0, #1
 8000b3c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b40:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b44:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b48:	ea40 000c 	orr.w	r0, r0, ip
 8000b4c:	fa23 f302 	lsr.w	r3, r3, r2
 8000b50:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b54:	e7cc      	b.n	8000af0 <__aeabi_d2f+0x14>
 8000b56:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b5a:	d107      	bne.n	8000b6c <__aeabi_d2f+0x90>
 8000b5c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b60:	bf1e      	ittt	ne
 8000b62:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000b66:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000b6a:	4770      	bxne	lr
 8000b6c:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000b70:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000b74:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000b78:	4770      	bx	lr
 8000b7a:	bf00      	nop

08000b7c <__aeabi_frsub>:
 8000b7c:	f080 4000 	eor.w	r0, r0, #2147483648	@ 0x80000000
 8000b80:	e002      	b.n	8000b88 <__addsf3>
 8000b82:	bf00      	nop

08000b84 <__aeabi_fsub>:
 8000b84:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000

08000b88 <__addsf3>:
 8000b88:	0042      	lsls	r2, r0, #1
 8000b8a:	bf1f      	itttt	ne
 8000b8c:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000b90:	ea92 0f03 	teqne	r2, r3
 8000b94:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000b98:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000b9c:	d06a      	beq.n	8000c74 <__addsf3+0xec>
 8000b9e:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000ba2:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000ba6:	bfc1      	itttt	gt
 8000ba8:	18d2      	addgt	r2, r2, r3
 8000baa:	4041      	eorgt	r1, r0
 8000bac:	4048      	eorgt	r0, r1
 8000bae:	4041      	eorgt	r1, r0
 8000bb0:	bfb8      	it	lt
 8000bb2:	425b      	neglt	r3, r3
 8000bb4:	2b19      	cmp	r3, #25
 8000bb6:	bf88      	it	hi
 8000bb8:	4770      	bxhi	lr
 8000bba:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 8000bbe:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000bc2:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
 8000bc6:	bf18      	it	ne
 8000bc8:	4240      	negne	r0, r0
 8000bca:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000bce:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8000bd2:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8000bd6:	bf18      	it	ne
 8000bd8:	4249      	negne	r1, r1
 8000bda:	ea92 0f03 	teq	r2, r3
 8000bde:	d03f      	beq.n	8000c60 <__addsf3+0xd8>
 8000be0:	f1a2 0201 	sub.w	r2, r2, #1
 8000be4:	fa41 fc03 	asr.w	ip, r1, r3
 8000be8:	eb10 000c 	adds.w	r0, r0, ip
 8000bec:	f1c3 0320 	rsb	r3, r3, #32
 8000bf0:	fa01 f103 	lsl.w	r1, r1, r3
 8000bf4:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000bf8:	d502      	bpl.n	8000c00 <__addsf3+0x78>
 8000bfa:	4249      	negs	r1, r1
 8000bfc:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000c00:	f5b0 0f00 	cmp.w	r0, #8388608	@ 0x800000
 8000c04:	d313      	bcc.n	8000c2e <__addsf3+0xa6>
 8000c06:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8000c0a:	d306      	bcc.n	8000c1a <__addsf3+0x92>
 8000c0c:	0840      	lsrs	r0, r0, #1
 8000c0e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000c12:	f102 0201 	add.w	r2, r2, #1
 8000c16:	2afe      	cmp	r2, #254	@ 0xfe
 8000c18:	d251      	bcs.n	8000cbe <__addsf3+0x136>
 8000c1a:	f1b1 4f00 	cmp.w	r1, #2147483648	@ 0x80000000
 8000c1e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000c22:	bf08      	it	eq
 8000c24:	f020 0001 	biceq.w	r0, r0, #1
 8000c28:	ea40 0003 	orr.w	r0, r0, r3
 8000c2c:	4770      	bx	lr
 8000c2e:	0049      	lsls	r1, r1, #1
 8000c30:	eb40 0000 	adc.w	r0, r0, r0
 8000c34:	3a01      	subs	r2, #1
 8000c36:	bf28      	it	cs
 8000c38:	f5b0 0f00 	cmpcs.w	r0, #8388608	@ 0x800000
 8000c3c:	d2ed      	bcs.n	8000c1a <__addsf3+0x92>
 8000c3e:	fab0 fc80 	clz	ip, r0
 8000c42:	f1ac 0c08 	sub.w	ip, ip, #8
 8000c46:	ebb2 020c 	subs.w	r2, r2, ip
 8000c4a:	fa00 f00c 	lsl.w	r0, r0, ip
 8000c4e:	bfaa      	itet	ge
 8000c50:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000c54:	4252      	neglt	r2, r2
 8000c56:	4318      	orrge	r0, r3
 8000c58:	bfbc      	itt	lt
 8000c5a:	40d0      	lsrlt	r0, r2
 8000c5c:	4318      	orrlt	r0, r3
 8000c5e:	4770      	bx	lr
 8000c60:	f092 0f00 	teq	r2, #0
 8000c64:	f481 0100 	eor.w	r1, r1, #8388608	@ 0x800000
 8000c68:	bf06      	itte	eq
 8000c6a:	f480 0000 	eoreq.w	r0, r0, #8388608	@ 0x800000
 8000c6e:	3201      	addeq	r2, #1
 8000c70:	3b01      	subne	r3, #1
 8000c72:	e7b5      	b.n	8000be0 <__addsf3+0x58>
 8000c74:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000c78:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000c7c:	bf18      	it	ne
 8000c7e:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000c82:	d021      	beq.n	8000cc8 <__addsf3+0x140>
 8000c84:	ea92 0f03 	teq	r2, r3
 8000c88:	d004      	beq.n	8000c94 <__addsf3+0x10c>
 8000c8a:	f092 0f00 	teq	r2, #0
 8000c8e:	bf08      	it	eq
 8000c90:	4608      	moveq	r0, r1
 8000c92:	4770      	bx	lr
 8000c94:	ea90 0f01 	teq	r0, r1
 8000c98:	bf1c      	itt	ne
 8000c9a:	2000      	movne	r0, #0
 8000c9c:	4770      	bxne	lr
 8000c9e:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8000ca2:	d104      	bne.n	8000cae <__addsf3+0x126>
 8000ca4:	0040      	lsls	r0, r0, #1
 8000ca6:	bf28      	it	cs
 8000ca8:	f040 4000 	orrcs.w	r0, r0, #2147483648	@ 0x80000000
 8000cac:	4770      	bx	lr
 8000cae:	f112 7200 	adds.w	r2, r2, #33554432	@ 0x2000000
 8000cb2:	bf3c      	itt	cc
 8000cb4:	f500 0000 	addcc.w	r0, r0, #8388608	@ 0x800000
 8000cb8:	4770      	bxcc	lr
 8000cba:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000cbe:	f043 40fe 	orr.w	r0, r3, #2130706432	@ 0x7f000000
 8000cc2:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000cc6:	4770      	bx	lr
 8000cc8:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000ccc:	bf16      	itet	ne
 8000cce:	4608      	movne	r0, r1
 8000cd0:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000cd4:	4601      	movne	r1, r0
 8000cd6:	0242      	lsls	r2, r0, #9
 8000cd8:	bf06      	itte	eq
 8000cda:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000cde:	ea90 0f01 	teqeq	r0, r1
 8000ce2:	f440 0080 	orrne.w	r0, r0, #4194304	@ 0x400000
 8000ce6:	4770      	bx	lr

08000ce8 <__aeabi_ui2f>:
 8000ce8:	f04f 0300 	mov.w	r3, #0
 8000cec:	e004      	b.n	8000cf8 <__aeabi_i2f+0x8>
 8000cee:	bf00      	nop

08000cf0 <__aeabi_i2f>:
 8000cf0:	f010 4300 	ands.w	r3, r0, #2147483648	@ 0x80000000
 8000cf4:	bf48      	it	mi
 8000cf6:	4240      	negmi	r0, r0
 8000cf8:	ea5f 0c00 	movs.w	ip, r0
 8000cfc:	bf08      	it	eq
 8000cfe:	4770      	bxeq	lr
 8000d00:	f043 4396 	orr.w	r3, r3, #1258291200	@ 0x4b000000
 8000d04:	4601      	mov	r1, r0
 8000d06:	f04f 0000 	mov.w	r0, #0
 8000d0a:	e01c      	b.n	8000d46 <__aeabi_l2f+0x2a>

08000d0c <__aeabi_ul2f>:
 8000d0c:	ea50 0201 	orrs.w	r2, r0, r1
 8000d10:	bf08      	it	eq
 8000d12:	4770      	bxeq	lr
 8000d14:	f04f 0300 	mov.w	r3, #0
 8000d18:	e00a      	b.n	8000d30 <__aeabi_l2f+0x14>
 8000d1a:	bf00      	nop

08000d1c <__aeabi_l2f>:
 8000d1c:	ea50 0201 	orrs.w	r2, r0, r1
 8000d20:	bf08      	it	eq
 8000d22:	4770      	bxeq	lr
 8000d24:	f011 4300 	ands.w	r3, r1, #2147483648	@ 0x80000000
 8000d28:	d502      	bpl.n	8000d30 <__aeabi_l2f+0x14>
 8000d2a:	4240      	negs	r0, r0
 8000d2c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d30:	ea5f 0c01 	movs.w	ip, r1
 8000d34:	bf02      	ittt	eq
 8000d36:	4684      	moveq	ip, r0
 8000d38:	4601      	moveq	r1, r0
 8000d3a:	2000      	moveq	r0, #0
 8000d3c:	f043 43b6 	orr.w	r3, r3, #1526726656	@ 0x5b000000
 8000d40:	bf08      	it	eq
 8000d42:	f1a3 5380 	subeq.w	r3, r3, #268435456	@ 0x10000000
 8000d46:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 8000d4a:	fabc f28c 	clz	r2, ip
 8000d4e:	3a08      	subs	r2, #8
 8000d50:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000d54:	db10      	blt.n	8000d78 <__aeabi_l2f+0x5c>
 8000d56:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d5a:	4463      	add	r3, ip
 8000d5c:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d60:	f1c2 0220 	rsb	r2, r2, #32
 8000d64:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000d68:	fa20 f202 	lsr.w	r2, r0, r2
 8000d6c:	eb43 0002 	adc.w	r0, r3, r2
 8000d70:	bf08      	it	eq
 8000d72:	f020 0001 	biceq.w	r0, r0, #1
 8000d76:	4770      	bx	lr
 8000d78:	f102 0220 	add.w	r2, r2, #32
 8000d7c:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d80:	f1c2 0220 	rsb	r2, r2, #32
 8000d84:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000d88:	fa21 f202 	lsr.w	r2, r1, r2
 8000d8c:	eb43 0002 	adc.w	r0, r3, r2
 8000d90:	bf08      	it	eq
 8000d92:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000d96:	4770      	bx	lr

08000d98 <__aeabi_fmul>:
 8000d98:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000d9c:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000da0:	bf1e      	ittt	ne
 8000da2:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000da6:	ea92 0f0c 	teqne	r2, ip
 8000daa:	ea93 0f0c 	teqne	r3, ip
 8000dae:	d06f      	beq.n	8000e90 <__aeabi_fmul+0xf8>
 8000db0:	441a      	add	r2, r3
 8000db2:	ea80 0c01 	eor.w	ip, r0, r1
 8000db6:	0240      	lsls	r0, r0, #9
 8000db8:	bf18      	it	ne
 8000dba:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000dbe:	d01e      	beq.n	8000dfe <__aeabi_fmul+0x66>
 8000dc0:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8000dc4:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000dc8:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000dcc:	fba0 3101 	umull	r3, r1, r0, r1
 8000dd0:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000dd4:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
 8000dd8:	bf3e      	ittt	cc
 8000dda:	0049      	lslcc	r1, r1, #1
 8000ddc:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000de0:	005b      	lslcc	r3, r3, #1
 8000de2:	ea40 0001 	orr.w	r0, r0, r1
 8000de6:	f162 027f 	sbc.w	r2, r2, #127	@ 0x7f
 8000dea:	2afd      	cmp	r2, #253	@ 0xfd
 8000dec:	d81d      	bhi.n	8000e2a <__aeabi_fmul+0x92>
 8000dee:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8000df2:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000df6:	bf08      	it	eq
 8000df8:	f020 0001 	biceq.w	r0, r0, #1
 8000dfc:	4770      	bx	lr
 8000dfe:	f090 0f00 	teq	r0, #0
 8000e02:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000e06:	bf08      	it	eq
 8000e08:	0249      	lsleq	r1, r1, #9
 8000e0a:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000e0e:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000e12:	3a7f      	subs	r2, #127	@ 0x7f
 8000e14:	bfc2      	ittt	gt
 8000e16:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000e1a:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000e1e:	4770      	bxgt	lr
 8000e20:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000e24:	f04f 0300 	mov.w	r3, #0
 8000e28:	3a01      	subs	r2, #1
 8000e2a:	dc5d      	bgt.n	8000ee8 <__aeabi_fmul+0x150>
 8000e2c:	f112 0f19 	cmn.w	r2, #25
 8000e30:	bfdc      	itt	le
 8000e32:	f000 4000 	andle.w	r0, r0, #2147483648	@ 0x80000000
 8000e36:	4770      	bxle	lr
 8000e38:	f1c2 0200 	rsb	r2, r2, #0
 8000e3c:	0041      	lsls	r1, r0, #1
 8000e3e:	fa21 f102 	lsr.w	r1, r1, r2
 8000e42:	f1c2 0220 	rsb	r2, r2, #32
 8000e46:	fa00 fc02 	lsl.w	ip, r0, r2
 8000e4a:	ea5f 0031 	movs.w	r0, r1, rrx
 8000e4e:	f140 0000 	adc.w	r0, r0, #0
 8000e52:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000e56:	bf08      	it	eq
 8000e58:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e5c:	4770      	bx	lr
 8000e5e:	f092 0f00 	teq	r2, #0
 8000e62:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000e66:	bf02      	ittt	eq
 8000e68:	0040      	lsleq	r0, r0, #1
 8000e6a:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000e6e:	3a01      	subeq	r2, #1
 8000e70:	d0f9      	beq.n	8000e66 <__aeabi_fmul+0xce>
 8000e72:	ea40 000c 	orr.w	r0, r0, ip
 8000e76:	f093 0f00 	teq	r3, #0
 8000e7a:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000e7e:	bf02      	ittt	eq
 8000e80:	0049      	lsleq	r1, r1, #1
 8000e82:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000e86:	3b01      	subeq	r3, #1
 8000e88:	d0f9      	beq.n	8000e7e <__aeabi_fmul+0xe6>
 8000e8a:	ea41 010c 	orr.w	r1, r1, ip
 8000e8e:	e78f      	b.n	8000db0 <__aeabi_fmul+0x18>
 8000e90:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000e94:	ea92 0f0c 	teq	r2, ip
 8000e98:	bf18      	it	ne
 8000e9a:	ea93 0f0c 	teqne	r3, ip
 8000e9e:	d00a      	beq.n	8000eb6 <__aeabi_fmul+0x11e>
 8000ea0:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8000ea4:	bf18      	it	ne
 8000ea6:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 8000eaa:	d1d8      	bne.n	8000e5e <__aeabi_fmul+0xc6>
 8000eac:	ea80 0001 	eor.w	r0, r0, r1
 8000eb0:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000eb4:	4770      	bx	lr
 8000eb6:	f090 0f00 	teq	r0, #0
 8000eba:	bf17      	itett	ne
 8000ebc:	f090 4f00 	teqne	r0, #2147483648	@ 0x80000000
 8000ec0:	4608      	moveq	r0, r1
 8000ec2:	f091 0f00 	teqne	r1, #0
 8000ec6:	f091 4f00 	teqne	r1, #2147483648	@ 0x80000000
 8000eca:	d014      	beq.n	8000ef6 <__aeabi_fmul+0x15e>
 8000ecc:	ea92 0f0c 	teq	r2, ip
 8000ed0:	d101      	bne.n	8000ed6 <__aeabi_fmul+0x13e>
 8000ed2:	0242      	lsls	r2, r0, #9
 8000ed4:	d10f      	bne.n	8000ef6 <__aeabi_fmul+0x15e>
 8000ed6:	ea93 0f0c 	teq	r3, ip
 8000eda:	d103      	bne.n	8000ee4 <__aeabi_fmul+0x14c>
 8000edc:	024b      	lsls	r3, r1, #9
 8000ede:	bf18      	it	ne
 8000ee0:	4608      	movne	r0, r1
 8000ee2:	d108      	bne.n	8000ef6 <__aeabi_fmul+0x15e>
 8000ee4:	ea80 0001 	eor.w	r0, r0, r1
 8000ee8:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000eec:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000ef0:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000ef4:	4770      	bx	lr
 8000ef6:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000efa:	f440 0040 	orr.w	r0, r0, #12582912	@ 0xc00000
 8000efe:	4770      	bx	lr

08000f00 <__aeabi_fdiv>:
 8000f00:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000f04:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000f08:	bf1e      	ittt	ne
 8000f0a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000f0e:	ea92 0f0c 	teqne	r2, ip
 8000f12:	ea93 0f0c 	teqne	r3, ip
 8000f16:	d069      	beq.n	8000fec <__aeabi_fdiv+0xec>
 8000f18:	eba2 0203 	sub.w	r2, r2, r3
 8000f1c:	ea80 0c01 	eor.w	ip, r0, r1
 8000f20:	0249      	lsls	r1, r1, #9
 8000f22:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000f26:	d037      	beq.n	8000f98 <__aeabi_fdiv+0x98>
 8000f28:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
 8000f2c:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000f30:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000f34:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000f38:	428b      	cmp	r3, r1
 8000f3a:	bf38      	it	cc
 8000f3c:	005b      	lslcc	r3, r3, #1
 8000f3e:	f142 027d 	adc.w	r2, r2, #125	@ 0x7d
 8000f42:	f44f 0c00 	mov.w	ip, #8388608	@ 0x800000
 8000f46:	428b      	cmp	r3, r1
 8000f48:	bf24      	itt	cs
 8000f4a:	1a5b      	subcs	r3, r3, r1
 8000f4c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000f50:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000f54:	bf24      	itt	cs
 8000f56:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000f5a:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000f5e:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000f62:	bf24      	itt	cs
 8000f64:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000f68:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000f6c:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000f70:	bf24      	itt	cs
 8000f72:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000f76:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000f7a:	011b      	lsls	r3, r3, #4
 8000f7c:	bf18      	it	ne
 8000f7e:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000f82:	d1e0      	bne.n	8000f46 <__aeabi_fdiv+0x46>
 8000f84:	2afd      	cmp	r2, #253	@ 0xfd
 8000f86:	f63f af50 	bhi.w	8000e2a <__aeabi_fmul+0x92>
 8000f8a:	428b      	cmp	r3, r1
 8000f8c:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000f90:	bf08      	it	eq
 8000f92:	f020 0001 	biceq.w	r0, r0, #1
 8000f96:	4770      	bx	lr
 8000f98:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000f9c:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000fa0:	327f      	adds	r2, #127	@ 0x7f
 8000fa2:	bfc2      	ittt	gt
 8000fa4:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000fa8:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000fac:	4770      	bxgt	lr
 8000fae:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000fb2:	f04f 0300 	mov.w	r3, #0
 8000fb6:	3a01      	subs	r2, #1
 8000fb8:	e737      	b.n	8000e2a <__aeabi_fmul+0x92>
 8000fba:	f092 0f00 	teq	r2, #0
 8000fbe:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000fc2:	bf02      	ittt	eq
 8000fc4:	0040      	lsleq	r0, r0, #1
 8000fc6:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000fca:	3a01      	subeq	r2, #1
 8000fcc:	d0f9      	beq.n	8000fc2 <__aeabi_fdiv+0xc2>
 8000fce:	ea40 000c 	orr.w	r0, r0, ip
 8000fd2:	f093 0f00 	teq	r3, #0
 8000fd6:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000fda:	bf02      	ittt	eq
 8000fdc:	0049      	lsleq	r1, r1, #1
 8000fde:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000fe2:	3b01      	subeq	r3, #1
 8000fe4:	d0f9      	beq.n	8000fda <__aeabi_fdiv+0xda>
 8000fe6:	ea41 010c 	orr.w	r1, r1, ip
 8000fea:	e795      	b.n	8000f18 <__aeabi_fdiv+0x18>
 8000fec:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000ff0:	ea92 0f0c 	teq	r2, ip
 8000ff4:	d108      	bne.n	8001008 <__aeabi_fdiv+0x108>
 8000ff6:	0242      	lsls	r2, r0, #9
 8000ff8:	f47f af7d 	bne.w	8000ef6 <__aeabi_fmul+0x15e>
 8000ffc:	ea93 0f0c 	teq	r3, ip
 8001000:	f47f af70 	bne.w	8000ee4 <__aeabi_fmul+0x14c>
 8001004:	4608      	mov	r0, r1
 8001006:	e776      	b.n	8000ef6 <__aeabi_fmul+0x15e>
 8001008:	ea93 0f0c 	teq	r3, ip
 800100c:	d104      	bne.n	8001018 <__aeabi_fdiv+0x118>
 800100e:	024b      	lsls	r3, r1, #9
 8001010:	f43f af4c 	beq.w	8000eac <__aeabi_fmul+0x114>
 8001014:	4608      	mov	r0, r1
 8001016:	e76e      	b.n	8000ef6 <__aeabi_fmul+0x15e>
 8001018:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 800101c:	bf18      	it	ne
 800101e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 8001022:	d1ca      	bne.n	8000fba <__aeabi_fdiv+0xba>
 8001024:	f030 4200 	bics.w	r2, r0, #2147483648	@ 0x80000000
 8001028:	f47f af5c 	bne.w	8000ee4 <__aeabi_fmul+0x14c>
 800102c:	f031 4300 	bics.w	r3, r1, #2147483648	@ 0x80000000
 8001030:	f47f af3c 	bne.w	8000eac <__aeabi_fmul+0x114>
 8001034:	e75f      	b.n	8000ef6 <__aeabi_fmul+0x15e>
 8001036:	bf00      	nop

08001038 <__aeabi_f2iz>:
 8001038:	ea4f 0240 	mov.w	r2, r0, lsl #1
 800103c:	f1b2 4ffe 	cmp.w	r2, #2130706432	@ 0x7f000000
 8001040:	d30f      	bcc.n	8001062 <__aeabi_f2iz+0x2a>
 8001042:	f04f 039e 	mov.w	r3, #158	@ 0x9e
 8001046:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 800104a:	d90d      	bls.n	8001068 <__aeabi_f2iz+0x30>
 800104c:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8001050:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8001054:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 8001058:	fa23 f002 	lsr.w	r0, r3, r2
 800105c:	bf18      	it	ne
 800105e:	4240      	negne	r0, r0
 8001060:	4770      	bx	lr
 8001062:	f04f 0000 	mov.w	r0, #0
 8001066:	4770      	bx	lr
 8001068:	f112 0f61 	cmn.w	r2, #97	@ 0x61
 800106c:	d101      	bne.n	8001072 <__aeabi_f2iz+0x3a>
 800106e:	0242      	lsls	r2, r0, #9
 8001070:	d105      	bne.n	800107e <__aeabi_f2iz+0x46>
 8001072:	f010 4000 	ands.w	r0, r0, #2147483648	@ 0x80000000
 8001076:	bf08      	it	eq
 8001078:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 800107c:	4770      	bx	lr
 800107e:	f04f 0000 	mov.w	r0, #0
 8001082:	4770      	bx	lr

08001084 <__aeabi_f2uiz>:
 8001084:	0042      	lsls	r2, r0, #1
 8001086:	d20e      	bcs.n	80010a6 <__aeabi_f2uiz+0x22>
 8001088:	f1b2 4ffe 	cmp.w	r2, #2130706432	@ 0x7f000000
 800108c:	d30b      	bcc.n	80010a6 <__aeabi_f2uiz+0x22>
 800108e:	f04f 039e 	mov.w	r3, #158	@ 0x9e
 8001092:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8001096:	d409      	bmi.n	80010ac <__aeabi_f2uiz+0x28>
 8001098:	ea4f 2300 	mov.w	r3, r0, lsl #8
 800109c:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 80010a0:	fa23 f002 	lsr.w	r0, r3, r2
 80010a4:	4770      	bx	lr
 80010a6:	f04f 0000 	mov.w	r0, #0
 80010aa:	4770      	bx	lr
 80010ac:	f112 0f61 	cmn.w	r2, #97	@ 0x61
 80010b0:	d101      	bne.n	80010b6 <__aeabi_f2uiz+0x32>
 80010b2:	0242      	lsls	r2, r0, #9
 80010b4:	d102      	bne.n	80010bc <__aeabi_f2uiz+0x38>
 80010b6:	f04f 30ff 	mov.w	r0, #4294967295
 80010ba:	4770      	bx	lr
 80010bc:	f04f 0000 	mov.w	r0, #0
 80010c0:	4770      	bx	lr
 80010c2:	bf00      	nop

080010c4 <__aeabi_ldivmod>:
 80010c4:	b97b      	cbnz	r3, 80010e6 <__aeabi_ldivmod+0x22>
 80010c6:	b972      	cbnz	r2, 80010e6 <__aeabi_ldivmod+0x22>
 80010c8:	2900      	cmp	r1, #0
 80010ca:	bfbe      	ittt	lt
 80010cc:	2000      	movlt	r0, #0
 80010ce:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
 80010d2:	e006      	blt.n	80010e2 <__aeabi_ldivmod+0x1e>
 80010d4:	bf08      	it	eq
 80010d6:	2800      	cmpeq	r0, #0
 80010d8:	bf1c      	itt	ne
 80010da:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
 80010de:	f04f 30ff 	movne.w	r0, #4294967295
 80010e2:	f000 b9d1 	b.w	8001488 <__aeabi_idiv0>
 80010e6:	f1ad 0c08 	sub.w	ip, sp, #8
 80010ea:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80010ee:	2900      	cmp	r1, #0
 80010f0:	db09      	blt.n	8001106 <__aeabi_ldivmod+0x42>
 80010f2:	2b00      	cmp	r3, #0
 80010f4:	db1a      	blt.n	800112c <__aeabi_ldivmod+0x68>
 80010f6:	f000 f86b 	bl	80011d0 <__udivmoddi4>
 80010fa:	f8dd e004 	ldr.w	lr, [sp, #4]
 80010fe:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8001102:	b004      	add	sp, #16
 8001104:	4770      	bx	lr
 8001106:	4240      	negs	r0, r0
 8001108:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800110c:	2b00      	cmp	r3, #0
 800110e:	db1b      	blt.n	8001148 <__aeabi_ldivmod+0x84>
 8001110:	f000 f85e 	bl	80011d0 <__udivmoddi4>
 8001114:	f8dd e004 	ldr.w	lr, [sp, #4]
 8001118:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800111c:	b004      	add	sp, #16
 800111e:	4240      	negs	r0, r0
 8001120:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8001124:	4252      	negs	r2, r2
 8001126:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800112a:	4770      	bx	lr
 800112c:	4252      	negs	r2, r2
 800112e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8001132:	f000 f84d 	bl	80011d0 <__udivmoddi4>
 8001136:	f8dd e004 	ldr.w	lr, [sp, #4]
 800113a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800113e:	b004      	add	sp, #16
 8001140:	4240      	negs	r0, r0
 8001142:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8001146:	4770      	bx	lr
 8001148:	4252      	negs	r2, r2
 800114a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800114e:	f000 f83f 	bl	80011d0 <__udivmoddi4>
 8001152:	f8dd e004 	ldr.w	lr, [sp, #4]
 8001156:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800115a:	b004      	add	sp, #16
 800115c:	4252      	negs	r2, r2
 800115e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8001162:	4770      	bx	lr

08001164 <__aeabi_d2lz>:
 8001164:	b538      	push	{r3, r4, r5, lr}
 8001166:	2200      	movs	r2, #0
 8001168:	2300      	movs	r3, #0
 800116a:	4604      	mov	r4, r0
 800116c:	460d      	mov	r5, r1
 800116e:	f7ff fc2f 	bl	80009d0 <__aeabi_dcmplt>
 8001172:	b928      	cbnz	r0, 8001180 <__aeabi_d2lz+0x1c>
 8001174:	4620      	mov	r0, r4
 8001176:	4629      	mov	r1, r5
 8001178:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800117c:	f000 b80a 	b.w	8001194 <__aeabi_d2ulz>
 8001180:	4620      	mov	r0, r4
 8001182:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
 8001186:	f000 f805 	bl	8001194 <__aeabi_d2ulz>
 800118a:	4240      	negs	r0, r0
 800118c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8001190:	bd38      	pop	{r3, r4, r5, pc}
 8001192:	bf00      	nop

08001194 <__aeabi_d2ulz>:
 8001194:	b5d0      	push	{r4, r6, r7, lr}
 8001196:	2200      	movs	r2, #0
 8001198:	4b0b      	ldr	r3, [pc, #44]	@ (80011c8 <__aeabi_d2ulz+0x34>)
 800119a:	4606      	mov	r6, r0
 800119c:	460f      	mov	r7, r1
 800119e:	f7ff f9a5 	bl	80004ec <__aeabi_dmul>
 80011a2:	f7ff fc7b 	bl	8000a9c <__aeabi_d2uiz>
 80011a6:	4604      	mov	r4, r0
 80011a8:	f7ff f926 	bl	80003f8 <__aeabi_ui2d>
 80011ac:	2200      	movs	r2, #0
 80011ae:	4b07      	ldr	r3, [pc, #28]	@ (80011cc <__aeabi_d2ulz+0x38>)
 80011b0:	f7ff f99c 	bl	80004ec <__aeabi_dmul>
 80011b4:	4602      	mov	r2, r0
 80011b6:	460b      	mov	r3, r1
 80011b8:	4630      	mov	r0, r6
 80011ba:	4639      	mov	r1, r7
 80011bc:	f7fe ffde 	bl	800017c <__aeabi_dsub>
 80011c0:	f7ff fc6c 	bl	8000a9c <__aeabi_d2uiz>
 80011c4:	4621      	mov	r1, r4
 80011c6:	bdd0      	pop	{r4, r6, r7, pc}
 80011c8:	3df00000 	.word	0x3df00000
 80011cc:	41f00000 	.word	0x41f00000

080011d0 <__udivmoddi4>:
 80011d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80011d4:	9d08      	ldr	r5, [sp, #32]
 80011d6:	460c      	mov	r4, r1
 80011d8:	2b00      	cmp	r3, #0
 80011da:	d14e      	bne.n	800127a <__udivmoddi4+0xaa>
 80011dc:	4694      	mov	ip, r2
 80011de:	458c      	cmp	ip, r1
 80011e0:	4686      	mov	lr, r0
 80011e2:	fab2 f282 	clz	r2, r2
 80011e6:	d962      	bls.n	80012ae <__udivmoddi4+0xde>
 80011e8:	b14a      	cbz	r2, 80011fe <__udivmoddi4+0x2e>
 80011ea:	f1c2 0320 	rsb	r3, r2, #32
 80011ee:	4091      	lsls	r1, r2
 80011f0:	fa20 f303 	lsr.w	r3, r0, r3
 80011f4:	fa0c fc02 	lsl.w	ip, ip, r2
 80011f8:	4319      	orrs	r1, r3
 80011fa:	fa00 fe02 	lsl.w	lr, r0, r2
 80011fe:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8001202:	fbb1 f4f7 	udiv	r4, r1, r7
 8001206:	fb07 1114 	mls	r1, r7, r4, r1
 800120a:	fa1f f68c 	uxth.w	r6, ip
 800120e:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8001212:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8001216:	fb04 f106 	mul.w	r1, r4, r6
 800121a:	4299      	cmp	r1, r3
 800121c:	d90a      	bls.n	8001234 <__udivmoddi4+0x64>
 800121e:	eb1c 0303 	adds.w	r3, ip, r3
 8001222:	f104 30ff 	add.w	r0, r4, #4294967295
 8001226:	f080 8110 	bcs.w	800144a <__udivmoddi4+0x27a>
 800122a:	4299      	cmp	r1, r3
 800122c:	f240 810d 	bls.w	800144a <__udivmoddi4+0x27a>
 8001230:	3c02      	subs	r4, #2
 8001232:	4463      	add	r3, ip
 8001234:	1a59      	subs	r1, r3, r1
 8001236:	fbb1 f0f7 	udiv	r0, r1, r7
 800123a:	fb07 1110 	mls	r1, r7, r0, r1
 800123e:	fb00 f606 	mul.w	r6, r0, r6
 8001242:	fa1f f38e 	uxth.w	r3, lr
 8001246:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800124a:	429e      	cmp	r6, r3
 800124c:	d90a      	bls.n	8001264 <__udivmoddi4+0x94>
 800124e:	eb1c 0303 	adds.w	r3, ip, r3
 8001252:	f100 31ff 	add.w	r1, r0, #4294967295
 8001256:	f080 80fa 	bcs.w	800144e <__udivmoddi4+0x27e>
 800125a:	429e      	cmp	r6, r3
 800125c:	f240 80f7 	bls.w	800144e <__udivmoddi4+0x27e>
 8001260:	4463      	add	r3, ip
 8001262:	3802      	subs	r0, #2
 8001264:	2100      	movs	r1, #0
 8001266:	1b9b      	subs	r3, r3, r6
 8001268:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800126c:	b11d      	cbz	r5, 8001276 <__udivmoddi4+0xa6>
 800126e:	40d3      	lsrs	r3, r2
 8001270:	2200      	movs	r2, #0
 8001272:	e9c5 3200 	strd	r3, r2, [r5]
 8001276:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800127a:	428b      	cmp	r3, r1
 800127c:	d905      	bls.n	800128a <__udivmoddi4+0xba>
 800127e:	b10d      	cbz	r5, 8001284 <__udivmoddi4+0xb4>
 8001280:	e9c5 0100 	strd	r0, r1, [r5]
 8001284:	2100      	movs	r1, #0
 8001286:	4608      	mov	r0, r1
 8001288:	e7f5      	b.n	8001276 <__udivmoddi4+0xa6>
 800128a:	fab3 f183 	clz	r1, r3
 800128e:	2900      	cmp	r1, #0
 8001290:	d146      	bne.n	8001320 <__udivmoddi4+0x150>
 8001292:	42a3      	cmp	r3, r4
 8001294:	d302      	bcc.n	800129c <__udivmoddi4+0xcc>
 8001296:	4290      	cmp	r0, r2
 8001298:	f0c0 80ee 	bcc.w	8001478 <__udivmoddi4+0x2a8>
 800129c:	1a86      	subs	r6, r0, r2
 800129e:	eb64 0303 	sbc.w	r3, r4, r3
 80012a2:	2001      	movs	r0, #1
 80012a4:	2d00      	cmp	r5, #0
 80012a6:	d0e6      	beq.n	8001276 <__udivmoddi4+0xa6>
 80012a8:	e9c5 6300 	strd	r6, r3, [r5]
 80012ac:	e7e3      	b.n	8001276 <__udivmoddi4+0xa6>
 80012ae:	2a00      	cmp	r2, #0
 80012b0:	f040 808f 	bne.w	80013d2 <__udivmoddi4+0x202>
 80012b4:	eba1 040c 	sub.w	r4, r1, ip
 80012b8:	2101      	movs	r1, #1
 80012ba:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80012be:	fa1f f78c 	uxth.w	r7, ip
 80012c2:	fbb4 f6f8 	udiv	r6, r4, r8
 80012c6:	fb08 4416 	mls	r4, r8, r6, r4
 80012ca:	fb07 f006 	mul.w	r0, r7, r6
 80012ce:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80012d2:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80012d6:	4298      	cmp	r0, r3
 80012d8:	d908      	bls.n	80012ec <__udivmoddi4+0x11c>
 80012da:	eb1c 0303 	adds.w	r3, ip, r3
 80012de:	f106 34ff 	add.w	r4, r6, #4294967295
 80012e2:	d202      	bcs.n	80012ea <__udivmoddi4+0x11a>
 80012e4:	4298      	cmp	r0, r3
 80012e6:	f200 80cb 	bhi.w	8001480 <__udivmoddi4+0x2b0>
 80012ea:	4626      	mov	r6, r4
 80012ec:	1a1c      	subs	r4, r3, r0
 80012ee:	fbb4 f0f8 	udiv	r0, r4, r8
 80012f2:	fb08 4410 	mls	r4, r8, r0, r4
 80012f6:	fb00 f707 	mul.w	r7, r0, r7
 80012fa:	fa1f f38e 	uxth.w	r3, lr
 80012fe:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8001302:	429f      	cmp	r7, r3
 8001304:	d908      	bls.n	8001318 <__udivmoddi4+0x148>
 8001306:	eb1c 0303 	adds.w	r3, ip, r3
 800130a:	f100 34ff 	add.w	r4, r0, #4294967295
 800130e:	d202      	bcs.n	8001316 <__udivmoddi4+0x146>
 8001310:	429f      	cmp	r7, r3
 8001312:	f200 80ae 	bhi.w	8001472 <__udivmoddi4+0x2a2>
 8001316:	4620      	mov	r0, r4
 8001318:	1bdb      	subs	r3, r3, r7
 800131a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800131e:	e7a5      	b.n	800126c <__udivmoddi4+0x9c>
 8001320:	f1c1 0720 	rsb	r7, r1, #32
 8001324:	408b      	lsls	r3, r1
 8001326:	fa22 fc07 	lsr.w	ip, r2, r7
 800132a:	ea4c 0c03 	orr.w	ip, ip, r3
 800132e:	fa24 f607 	lsr.w	r6, r4, r7
 8001332:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8001336:	fbb6 f8f9 	udiv	r8, r6, r9
 800133a:	fa1f fe8c 	uxth.w	lr, ip
 800133e:	fb09 6618 	mls	r6, r9, r8, r6
 8001342:	fa20 f307 	lsr.w	r3, r0, r7
 8001346:	408c      	lsls	r4, r1
 8001348:	fa00 fa01 	lsl.w	sl, r0, r1
 800134c:	fb08 f00e 	mul.w	r0, r8, lr
 8001350:	431c      	orrs	r4, r3
 8001352:	0c23      	lsrs	r3, r4, #16
 8001354:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8001358:	4298      	cmp	r0, r3
 800135a:	fa02 f201 	lsl.w	r2, r2, r1
 800135e:	d90a      	bls.n	8001376 <__udivmoddi4+0x1a6>
 8001360:	eb1c 0303 	adds.w	r3, ip, r3
 8001364:	f108 36ff 	add.w	r6, r8, #4294967295
 8001368:	f080 8081 	bcs.w	800146e <__udivmoddi4+0x29e>
 800136c:	4298      	cmp	r0, r3
 800136e:	d97e      	bls.n	800146e <__udivmoddi4+0x29e>
 8001370:	f1a8 0802 	sub.w	r8, r8, #2
 8001374:	4463      	add	r3, ip
 8001376:	1a1e      	subs	r6, r3, r0
 8001378:	fbb6 f3f9 	udiv	r3, r6, r9
 800137c:	fb09 6613 	mls	r6, r9, r3, r6
 8001380:	fb03 fe0e 	mul.w	lr, r3, lr
 8001384:	b2a4      	uxth	r4, r4
 8001386:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 800138a:	45a6      	cmp	lr, r4
 800138c:	d908      	bls.n	80013a0 <__udivmoddi4+0x1d0>
 800138e:	eb1c 0404 	adds.w	r4, ip, r4
 8001392:	f103 30ff 	add.w	r0, r3, #4294967295
 8001396:	d266      	bcs.n	8001466 <__udivmoddi4+0x296>
 8001398:	45a6      	cmp	lr, r4
 800139a:	d964      	bls.n	8001466 <__udivmoddi4+0x296>
 800139c:	3b02      	subs	r3, #2
 800139e:	4464      	add	r4, ip
 80013a0:	ea43 4008 	orr.w	r0, r3, r8, lsl #16
 80013a4:	fba0 8302 	umull	r8, r3, r0, r2
 80013a8:	eba4 040e 	sub.w	r4, r4, lr
 80013ac:	429c      	cmp	r4, r3
 80013ae:	46c6      	mov	lr, r8
 80013b0:	461e      	mov	r6, r3
 80013b2:	d350      	bcc.n	8001456 <__udivmoddi4+0x286>
 80013b4:	d04d      	beq.n	8001452 <__udivmoddi4+0x282>
 80013b6:	b155      	cbz	r5, 80013ce <__udivmoddi4+0x1fe>
 80013b8:	ebba 030e 	subs.w	r3, sl, lr
 80013bc:	eb64 0406 	sbc.w	r4, r4, r6
 80013c0:	fa04 f707 	lsl.w	r7, r4, r7
 80013c4:	40cb      	lsrs	r3, r1
 80013c6:	431f      	orrs	r7, r3
 80013c8:	40cc      	lsrs	r4, r1
 80013ca:	e9c5 7400 	strd	r7, r4, [r5]
 80013ce:	2100      	movs	r1, #0
 80013d0:	e751      	b.n	8001276 <__udivmoddi4+0xa6>
 80013d2:	fa0c fc02 	lsl.w	ip, ip, r2
 80013d6:	f1c2 0320 	rsb	r3, r2, #32
 80013da:	40d9      	lsrs	r1, r3
 80013dc:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80013e0:	fa20 f303 	lsr.w	r3, r0, r3
 80013e4:	fa00 fe02 	lsl.w	lr, r0, r2
 80013e8:	fbb1 f0f8 	udiv	r0, r1, r8
 80013ec:	fb08 1110 	mls	r1, r8, r0, r1
 80013f0:	4094      	lsls	r4, r2
 80013f2:	431c      	orrs	r4, r3
 80013f4:	fa1f f78c 	uxth.w	r7, ip
 80013f8:	0c23      	lsrs	r3, r4, #16
 80013fa:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80013fe:	fb00 f107 	mul.w	r1, r0, r7
 8001402:	4299      	cmp	r1, r3
 8001404:	d908      	bls.n	8001418 <__udivmoddi4+0x248>
 8001406:	eb1c 0303 	adds.w	r3, ip, r3
 800140a:	f100 36ff 	add.w	r6, r0, #4294967295
 800140e:	d22c      	bcs.n	800146a <__udivmoddi4+0x29a>
 8001410:	4299      	cmp	r1, r3
 8001412:	d92a      	bls.n	800146a <__udivmoddi4+0x29a>
 8001414:	3802      	subs	r0, #2
 8001416:	4463      	add	r3, ip
 8001418:	1a5b      	subs	r3, r3, r1
 800141a:	fbb3 f1f8 	udiv	r1, r3, r8
 800141e:	fb08 3311 	mls	r3, r8, r1, r3
 8001422:	b2a4      	uxth	r4, r4
 8001424:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8001428:	fb01 f307 	mul.w	r3, r1, r7
 800142c:	42a3      	cmp	r3, r4
 800142e:	d908      	bls.n	8001442 <__udivmoddi4+0x272>
 8001430:	eb1c 0404 	adds.w	r4, ip, r4
 8001434:	f101 36ff 	add.w	r6, r1, #4294967295
 8001438:	d213      	bcs.n	8001462 <__udivmoddi4+0x292>
 800143a:	42a3      	cmp	r3, r4
 800143c:	d911      	bls.n	8001462 <__udivmoddi4+0x292>
 800143e:	3902      	subs	r1, #2
 8001440:	4464      	add	r4, ip
 8001442:	1ae4      	subs	r4, r4, r3
 8001444:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8001448:	e73b      	b.n	80012c2 <__udivmoddi4+0xf2>
 800144a:	4604      	mov	r4, r0
 800144c:	e6f2      	b.n	8001234 <__udivmoddi4+0x64>
 800144e:	4608      	mov	r0, r1
 8001450:	e708      	b.n	8001264 <__udivmoddi4+0x94>
 8001452:	45c2      	cmp	sl, r8
 8001454:	d2af      	bcs.n	80013b6 <__udivmoddi4+0x1e6>
 8001456:	ebb8 0e02 	subs.w	lr, r8, r2
 800145a:	eb63 060c 	sbc.w	r6, r3, ip
 800145e:	3801      	subs	r0, #1
 8001460:	e7a9      	b.n	80013b6 <__udivmoddi4+0x1e6>
 8001462:	4631      	mov	r1, r6
 8001464:	e7ed      	b.n	8001442 <__udivmoddi4+0x272>
 8001466:	4603      	mov	r3, r0
 8001468:	e79a      	b.n	80013a0 <__udivmoddi4+0x1d0>
 800146a:	4630      	mov	r0, r6
 800146c:	e7d4      	b.n	8001418 <__udivmoddi4+0x248>
 800146e:	46b0      	mov	r8, r6
 8001470:	e781      	b.n	8001376 <__udivmoddi4+0x1a6>
 8001472:	4463      	add	r3, ip
 8001474:	3802      	subs	r0, #2
 8001476:	e74f      	b.n	8001318 <__udivmoddi4+0x148>
 8001478:	4606      	mov	r6, r0
 800147a:	4623      	mov	r3, r4
 800147c:	4608      	mov	r0, r1
 800147e:	e711      	b.n	80012a4 <__udivmoddi4+0xd4>
 8001480:	3e02      	subs	r6, #2
 8001482:	4463      	add	r3, ip
 8001484:	e732      	b.n	80012ec <__udivmoddi4+0x11c>
 8001486:	bf00      	nop

08001488 <__aeabi_idiv0>:
 8001488:	4770      	bx	lr
 800148a:	bf00      	nop
 800148c:	0000      	movs	r0, r0
	...

08001490 <BMP280_PressureToAltitude>:
	devBMP->pressure_ref = BMP280_ReadPressure(devBMP) - press_ref;

	return 1; // OK
}

float BMP280_PressureToAltitude(float pressure) {
 8001490:	b508      	push	{r3, lr}

    float altitude = (T0 / alpha) * (1 - pow((pressure / P0), (1 / beta)));
 8001492:	f7fe ffd3 	bl	800043c <__aeabi_f2d>
 8001496:	a30c      	add	r3, pc, #48	@ (adr r3, 80014c8 <BMP280_PressureToAltitude+0x38>)
 8001498:	e9d3 2300 	ldrd	r2, r3, [r3]
 800149c:	f7ff f950 	bl	8000740 <__aeabi_ddiv>
 80014a0:	a30b      	add	r3, pc, #44	@ (adr r3, 80014d0 <BMP280_PressureToAltitude+0x40>)
 80014a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80014a6:	f009 fa33 	bl	800a910 <pow>
 80014aa:	4602      	mov	r2, r0
 80014ac:	460b      	mov	r3, r1
 80014ae:	2000      	movs	r0, #0
 80014b0:	490b      	ldr	r1, [pc, #44]	@ (80014e0 <BMP280_PressureToAltitude+0x50>)
 80014b2:	f7fe fe63 	bl	800017c <__aeabi_dsub>
 80014b6:	a308      	add	r3, pc, #32	@ (adr r3, 80014d8 <BMP280_PressureToAltitude+0x48>)
 80014b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80014bc:	f7ff f816 	bl	80004ec <__aeabi_dmul>
 80014c0:	f7ff fb0c 	bl	8000adc <__aeabi_d2f>
    return altitude;
}
 80014c4:	bd08      	pop	{r3, pc}
 80014c6:	bf00      	nop
 80014c8:	00000000 	.word	0x00000000
 80014cc:	40f8bcd0 	.word	0x40f8bcd0
 80014d0:	169985a6 	.word	0x169985a6
 80014d4:	3fc85a66 	.word	0x3fc85a66
 80014d8:	9d89d89d 	.word	0x9d89d89d
 80014dc:	40e5a558 	.word	0x40e5a558
 80014e0:	3ff00000 	.word	0x3ff00000

080014e4 <BMP280_ReadRegister>:

uint8_t BMP280_ReadRegister(uint8_t reg) {
 80014e4:	b500      	push	{lr}
 80014e6:	b085      	sub	sp, #20
 80014e8:	f88d 0007 	strb.w	r0, [sp, #7]

    uint8_t received_data;
    Write_GPIO(PA, 8, LOW); // Disable CS
 80014ec:	2200      	movs	r2, #0
 80014ee:	2108      	movs	r1, #8
 80014f0:	2001      	movs	r0, #1
 80014f2:	f001 f80d 	bl	8002510 <Write_GPIO>
    SPI2_TX(&reg, 1);
 80014f6:	2101      	movs	r1, #1
 80014f8:	f10d 0007 	add.w	r0, sp, #7
 80014fc:	f001 f88c 	bl	8002618 <SPI2_TX>
    SPI2_RX(&received_data, 1);
 8001500:	2101      	movs	r1, #1
 8001502:	f10d 000f 	add.w	r0, sp, #15
 8001506:	f001 f8a5 	bl	8002654 <SPI2_RX>
    Write_GPIO(PA, 8, HIGH); // Enable CS
 800150a:	2201      	movs	r2, #1
 800150c:	2108      	movs	r1, #8
 800150e:	4610      	mov	r0, r2
 8001510:	f000 fffe 	bl	8002510 <Write_GPIO>
    return received_data;
}
 8001514:	f89d 000f 	ldrb.w	r0, [sp, #15]
 8001518:	b005      	add	sp, #20
 800151a:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08001520 <BMP280_ReadTemperature>:
uint8_t BMP280_ReadTemperature(BMP280 *devBMP) {
 8001520:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001522:	4604      	mov	r4, r0
    int32_t adc_T = (BMP280_ReadRegister(BMP280_REG_TEMP_MSB) << 12) |
 8001524:	20fa      	movs	r0, #250	@ 0xfa
 8001526:	f7ff ffdd 	bl	80014e4 <BMP280_ReadRegister>
 800152a:	0305      	lsls	r5, r0, #12
                    (BMP280_ReadRegister(BMP280_REG_TEMP_LSB) << 4) |
 800152c:	20fb      	movs	r0, #251	@ 0xfb
 800152e:	f7ff ffd9 	bl	80014e4 <BMP280_ReadRegister>
    int32_t adc_T = (BMP280_ReadRegister(BMP280_REG_TEMP_MSB) << 12) |
 8001532:	ea45 1500 	orr.w	r5, r5, r0, lsl #4
                    (BMP280_ReadRegister(BMP280_REG_TEMP_XLSB) >> 4);
 8001536:	20fc      	movs	r0, #252	@ 0xfc
 8001538:	f7ff ffd4 	bl	80014e4 <BMP280_ReadRegister>
 800153c:	f3c0 1007 	ubfx	r0, r0, #4, #8
    int32_t adc_T = (BMP280_ReadRegister(BMP280_REG_TEMP_MSB) << 12) |
 8001540:	4328      	orrs	r0, r5
    int32_t var1 = ((((adc_T >> 3) - ((int32_t)devBMP->calib_data.dig_T1 << 1))) * ((int32_t)devBMP->calib_data.dig_T2)) >> 11;
 8001542:	8923      	ldrh	r3, [r4, #8]
 8001544:	005a      	lsls	r2, r3, #1
 8001546:	ebc2 02e0 	rsb	r2, r2, r0, asr #3
 800154a:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800154e:	fb01 f202 	mul.w	r2, r1, r2
    int32_t var2 = (((((adc_T >> 4) - ((int32_t)devBMP->calib_data.dig_T1)) * ((adc_T >> 4) - ((int32_t)devBMP->calib_data.dig_T1))) >> 12) * ((int32_t)devBMP->calib_data.dig_T3)) >> 14;
 8001552:	ebc3 1320 	rsb	r3, r3, r0, asr #4
 8001556:	fb03 f303 	mul.w	r3, r3, r3
 800155a:	131b      	asrs	r3, r3, #12
 800155c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8001560:	fb01 f303 	mul.w	r3, r1, r3
 8001564:	139b      	asrs	r3, r3, #14
    devBMP->t_fine = var1 + var2;
 8001566:	eb03 23e2 	add.w	r3, r3, r2, asr #11
 800156a:	6223      	str	r3, [r4, #32]
    float T = (devBMP->t_fine * 5 + 128) >> 8;
 800156c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8001570:	3380      	adds	r3, #128	@ 0x80
 8001572:	1218      	asrs	r0, r3, #8
 8001574:	f7ff fbbc 	bl	8000cf0 <__aeabi_i2f>
    devBMP->temp_C = (T / 100.0) + devBMP->temperature_ref;
 8001578:	f7fe ff60 	bl	800043c <__aeabi_f2d>
 800157c:	2200      	movs	r2, #0
 800157e:	4b09      	ldr	r3, [pc, #36]	@ (80015a4 <BMP280_ReadTemperature+0x84>)
 8001580:	f7ff f8de 	bl	8000740 <__aeabi_ddiv>
 8001584:	4606      	mov	r6, r0
 8001586:	460f      	mov	r7, r1
 8001588:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800158a:	f7fe ff57 	bl	800043c <__aeabi_f2d>
 800158e:	4602      	mov	r2, r0
 8001590:	460b      	mov	r3, r1
 8001592:	4630      	mov	r0, r6
 8001594:	4639      	mov	r1, r7
 8001596:	f7fe fdf3 	bl	8000180 <__adddf3>
 800159a:	f7ff fa9f 	bl	8000adc <__aeabi_d2f>
 800159e:	6060      	str	r0, [r4, #4]
}
 80015a0:	2001      	movs	r0, #1
 80015a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80015a4:	40590000 	.word	0x40590000

080015a8 <BMP280_ReadPressure>:
uint8_t BMP280_ReadPressure(BMP280 *devBMP) {
 80015a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80015ac:	4605      	mov	r5, r0
	while((BMP280_ReadRegister(BMP280_REG_STATUS) & 0x04) != 0);
 80015ae:	20f3      	movs	r0, #243	@ 0xf3
 80015b0:	f7ff ff98 	bl	80014e4 <BMP280_ReadRegister>
 80015b4:	f010 0404 	ands.w	r4, r0, #4
 80015b8:	d1f9      	bne.n	80015ae <BMP280_ReadPressure+0x6>
    int32_t adc_P = (BMP280_ReadRegister(BMP280_REG_PRESS_MSB) << 12) |
 80015ba:	20f7      	movs	r0, #247	@ 0xf7
 80015bc:	f7ff ff92 	bl	80014e4 <BMP280_ReadRegister>
 80015c0:	0306      	lsls	r6, r0, #12
                    (BMP280_ReadRegister(BMP280_REG_PRESS_LSB) << 4) |
 80015c2:	20f8      	movs	r0, #248	@ 0xf8
 80015c4:	f7ff ff8e 	bl	80014e4 <BMP280_ReadRegister>
    int32_t adc_P = (BMP280_ReadRegister(BMP280_REG_PRESS_MSB) << 12) |
 80015c8:	ea46 1600 	orr.w	r6, r6, r0, lsl #4
                    (BMP280_ReadRegister(BMP280_REG_PRESS_XLSB) >> 4);
 80015cc:	20f9      	movs	r0, #249	@ 0xf9
 80015ce:	f7ff ff89 	bl	80014e4 <BMP280_ReadRegister>
 80015d2:	f3c0 1007 	ubfx	r0, r0, #4, #8
    int32_t adc_P = (BMP280_ReadRegister(BMP280_REG_PRESS_MSB) << 12) |
 80015d6:	ea46 0100 	orr.w	r1, r6, r0
    int64_t var1 = ((int64_t)devBMP->t_fine) - 128000;
 80015da:	6a28      	ldr	r0, [r5, #32]
 80015dc:	17c3      	asrs	r3, r0, #31
 80015de:	f5b0 30fa 	subs.w	r0, r0, #128000	@ 0x1f400
 80015e2:	f143 33ff 	adc.w	r3, r3, #4294967295
    int64_t var2 = var1 * var1 * (int64_t)devBMP->calib_data.dig_P6;
 80015e6:	fb00 f603 	mul.w	r6, r0, r3
 80015ea:	fba0 2700 	umull	r2, r7, r0, r0
 80015ee:	eb07 0746 	add.w	r7, r7, r6, lsl #1
 80015f2:	f9b5 6018 	ldrsh.w	r6, [r5, #24]
 80015f6:	ea4f 7ee6 	mov.w	lr, r6, asr #31
 80015fa:	fb02 fe0e 	mul.w	lr, r2, lr
 80015fe:	fb06 ee07 	mla	lr, r6, r7, lr
 8001602:	fba2 8606 	umull	r8, r6, r2, r6
 8001606:	44b6      	add	lr, r6
    var2 = var2 + ((var1 * (int64_t)devBMP->calib_data.dig_P5) << 17);
 8001608:	f9b5 c016 	ldrsh.w	ip, [r5, #22]
 800160c:	ea4f 79ec 	mov.w	r9, ip, asr #31
 8001610:	fb0c f603 	mul.w	r6, ip, r3
 8001614:	fb00 6609 	mla	r6, r0, r9, r6
 8001618:	fbac c900 	umull	ip, r9, ip, r0
 800161c:	444e      	add	r6, r9
 800161e:	0476      	lsls	r6, r6, #17
 8001620:	ea46 36dc 	orr.w	r6, r6, ip, lsr #15
 8001624:	ea4f 4c4c 	mov.w	ip, ip, lsl #17
 8001628:	eb1c 0c08 	adds.w	ip, ip, r8
 800162c:	eb4e 0e06 	adc.w	lr, lr, r6
    var2 = var2 + (((int64_t)devBMP->calib_data.dig_P4) << 35);
 8001630:	f9b5 6014 	ldrsh.w	r6, [r5, #20]
 8001634:	eb0e 0ec6 	add.w	lr, lr, r6, lsl #3
    var1 = ((var1 * var1 * (int64_t)devBMP->calib_data.dig_P3) >> 8) + ((var1 * (int64_t)devBMP->calib_data.dig_P2) << 12);
 8001638:	f9b5 8012 	ldrsh.w	r8, [r5, #18]
 800163c:	ea4f 76e8 	mov.w	r6, r8, asr #31
 8001640:	fb02 f606 	mul.w	r6, r2, r6
 8001644:	fb08 6607 	mla	r6, r8, r7, r6
 8001648:	fba2 2808 	umull	r2, r8, r2, r8
 800164c:	4446      	add	r6, r8
 800164e:	0a12      	lsrs	r2, r2, #8
 8001650:	ea42 6206 	orr.w	r2, r2, r6, lsl #24
 8001654:	f9b5 7010 	ldrsh.w	r7, [r5, #16]
 8001658:	ea4f 78e7 	mov.w	r8, r7, asr #31
 800165c:	fb07 f303 	mul.w	r3, r7, r3
 8001660:	fb00 3308 	mla	r3, r0, r8, r3
 8001664:	fba7 7000 	umull	r7, r0, r7, r0
 8001668:	4403      	add	r3, r0
 800166a:	031b      	lsls	r3, r3, #12
 800166c:	ea43 5317 	orr.w	r3, r3, r7, lsr #20
 8001670:	033f      	lsls	r7, r7, #12
 8001672:	19d2      	adds	r2, r2, r7
 8001674:	eb43 2326 	adc.w	r3, r3, r6, asr #8
    var1 = (((((int64_t)1) << 47) + var1)) * ((int64_t)devBMP->calib_data.dig_P1) >> 33;
 8001678:	f503 4300 	add.w	r3, r3, #32768	@ 0x8000
 800167c:	89ee      	ldrh	r6, [r5, #14]
 800167e:	fba2 2006 	umull	r2, r0, r2, r6
 8001682:	fb06 0003 	mla	r0, r6, r3, r0
 8001686:	1042      	asrs	r2, r0, #1
 8001688:	17c3      	asrs	r3, r0, #31
    if (var1 == 0) {
 800168a:	ea53 0060 	orrs.w	r0, r3, r0, asr #1
 800168e:	d077      	beq.n	8001780 <BMP280_ReadPressure+0x1d8>
    int64_t p = 1048576 - adc_P;
 8001690:	f5c1 1680 	rsb	r6, r1, #1048576	@ 0x100000
    p = (((p << 31) - var2) * 3125) / var1;
 8001694:	1071      	asrs	r1, r6, #1
 8001696:	07f6      	lsls	r6, r6, #31
 8001698:	ebb6 060c 	subs.w	r6, r6, ip
 800169c:	eb61 0e0e 	sbc.w	lr, r1, lr
 80016a0:	19b4      	adds	r4, r6, r6
 80016a2:	eb4e 010e 	adc.w	r1, lr, lr
 80016a6:	19a4      	adds	r4, r4, r6
 80016a8:	eb4e 0101 	adc.w	r1, lr, r1
 80016ac:	0188      	lsls	r0, r1, #6
 80016ae:	ea40 6094 	orr.w	r0, r0, r4, lsr #26
 80016b2:	01a7      	lsls	r7, r4, #6
 80016b4:	19e4      	adds	r4, r4, r7
 80016b6:	eb41 0100 	adc.w	r1, r1, r0
 80016ba:	0089      	lsls	r1, r1, #2
 80016bc:	ea41 7194 	orr.w	r1, r1, r4, lsr #30
 80016c0:	00a4      	lsls	r4, r4, #2
 80016c2:	19a0      	adds	r0, r4, r6
 80016c4:	eb4e 0101 	adc.w	r1, lr, r1
 80016c8:	0089      	lsls	r1, r1, #2
 80016ca:	ea41 7190 	orr.w	r1, r1, r0, lsr #30
 80016ce:	0080      	lsls	r0, r0, #2
 80016d0:	1980      	adds	r0, r0, r6
 80016d2:	eb4e 0101 	adc.w	r1, lr, r1
 80016d6:	f7ff fcf5 	bl	80010c4 <__aeabi_ldivmod>
 80016da:	4603      	mov	r3, r0
    var1 = (((int64_t)devBMP->calib_data.dig_P9) * (p >> 13) * (p >> 13)) >> 25;
 80016dc:	f9b5 401e 	ldrsh.w	r4, [r5, #30]
 80016e0:	17e6      	asrs	r6, r4, #31
 80016e2:	0b42      	lsrs	r2, r0, #13
 80016e4:	ea42 42c1 	orr.w	r2, r2, r1, lsl #19
 80016e8:	ea4f 3c61 	mov.w	ip, r1, asr #13
 80016ec:	fb04 f70c 	mul.w	r7, r4, ip
 80016f0:	fb02 7706 	mla	r7, r2, r6, r7
 80016f4:	fba4 6402 	umull	r6, r4, r4, r2
 80016f8:	443c      	add	r4, r7
 80016fa:	fb02 f404 	mul.w	r4, r2, r4
 80016fe:	fb06 440c 	mla	r4, r6, ip, r4
 8001702:	fba2 2606 	umull	r2, r6, r2, r6
 8001706:	4434      	add	r4, r6
 8001708:	0e52      	lsrs	r2, r2, #25
 800170a:	ea42 12c4 	orr.w	r2, r2, r4, lsl #7
    var2 = (((int64_t)devBMP->calib_data.dig_P8) * p) >> 19;
 800170e:	f9b5 601c 	ldrsh.w	r6, [r5, #28]
 8001712:	ea4f 7ce6 	mov.w	ip, r6, asr #31
 8001716:	fb06 f701 	mul.w	r7, r6, r1
 800171a:	fb0c 7000 	mla	r0, ip, r0, r7
 800171e:	fba6 6703 	umull	r6, r7, r6, r3
 8001722:	4438      	add	r0, r7
 8001724:	0cf6      	lsrs	r6, r6, #19
 8001726:	ea46 3640 	orr.w	r6, r6, r0, lsl #13
    p = ((p + var1 + var2) >> 8) + (((int64_t)devBMP->calib_data.dig_P7) << 4);
 800172a:	189b      	adds	r3, r3, r2
 800172c:	eb41 6164 	adc.w	r1, r1, r4, asr #25
 8001730:	199b      	adds	r3, r3, r6
 8001732:	eb41 42e0 	adc.w	r2, r1, r0, asr #19
 8001736:	0a18      	lsrs	r0, r3, #8
 8001738:	ea40 6002 	orr.w	r0, r0, r2, lsl #24
 800173c:	f9b5 301a 	ldrsh.w	r3, [r5, #26]
 8001740:	17d9      	asrs	r1, r3, #31
 8001742:	0109      	lsls	r1, r1, #4
 8001744:	ea41 7113 	orr.w	r1, r1, r3, lsr #28
 8001748:	011b      	lsls	r3, r3, #4
 800174a:	18c0      	adds	r0, r0, r3
    devBMP->pressure_Pa = ((float)p / 256.09) + devBMP->pressure_ref;
 800174c:	eb41 2122 	adc.w	r1, r1, r2, asr #8
 8001750:	f7ff fae4 	bl	8000d1c <__aeabi_l2f>
 8001754:	f7fe fe72 	bl	800043c <__aeabi_f2d>
 8001758:	a30b      	add	r3, pc, #44	@ (adr r3, 8001788 <BMP280_ReadPressure+0x1e0>)
 800175a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800175e:	f7fe ffef 	bl	8000740 <__aeabi_ddiv>
 8001762:	4606      	mov	r6, r0
 8001764:	460f      	mov	r7, r1
 8001766:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 8001768:	f7fe fe68 	bl	800043c <__aeabi_f2d>
 800176c:	4602      	mov	r2, r0
 800176e:	460b      	mov	r3, r1
 8001770:	4630      	mov	r0, r6
 8001772:	4639      	mov	r1, r7
 8001774:	f7fe fd04 	bl	8000180 <__adddf3>
 8001778:	f7ff f9b0 	bl	8000adc <__aeabi_d2f>
 800177c:	6028      	str	r0, [r5, #0]
    return 1; // OK
 800177e:	2401      	movs	r4, #1
}
 8001780:	4620      	mov	r0, r4
 8001782:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001786:	bf00      	nop
 8001788:	a3d70a3d 	.word	0xa3d70a3d
 800178c:	40700170 	.word	0x40700170

08001790 <BMP280_MeasureReference>:
uint8_t BMP280_MeasureReference(BMP280 *devBMP, float temp_ref, float press_ref) {
 8001790:	b570      	push	{r4, r5, r6, lr}
 8001792:	4604      	mov	r4, r0
 8001794:	460e      	mov	r6, r1
 8001796:	4615      	mov	r5, r2
	devBMP->temperature_ref = BMP280_ReadTemperature(devBMP) - temp_ref;
 8001798:	f7ff fec2 	bl	8001520 <BMP280_ReadTemperature>
 800179c:	f7ff faa8 	bl	8000cf0 <__aeabi_i2f>
 80017a0:	4631      	mov	r1, r6
 80017a2:	f7ff f9ef 	bl	8000b84 <__aeabi_fsub>
 80017a6:	6260      	str	r0, [r4, #36]	@ 0x24
	devBMP->pressure_ref = BMP280_ReadPressure(devBMP) - press_ref;
 80017a8:	4620      	mov	r0, r4
 80017aa:	f7ff fefd 	bl	80015a8 <BMP280_ReadPressure>
 80017ae:	f7ff fa9f 	bl	8000cf0 <__aeabi_i2f>
 80017b2:	4629      	mov	r1, r5
 80017b4:	f7ff f9e6 	bl	8000b84 <__aeabi_fsub>
 80017b8:	62a0      	str	r0, [r4, #40]	@ 0x28
}
 80017ba:	2001      	movs	r0, #1
 80017bc:	bd70      	pop	{r4, r5, r6, pc}

080017be <BMP280_ReadCalibrationData>:
void BMP280_ReadCalibrationData(BMP280 *devBMP) {
 80017be:	b530      	push	{r4, r5, lr}
 80017c0:	b089      	sub	sp, #36	@ 0x24
 80017c2:	4605      	mov	r5, r0
	while((BMP280_ReadRegister(BMP280_REG_STATUS) & 0x04) != 0);
 80017c4:	20f3      	movs	r0, #243	@ 0xf3
 80017c6:	f7ff fe8d 	bl	80014e4 <BMP280_ReadRegister>
 80017ca:	f010 0f04 	tst.w	r0, #4
 80017ce:	d1f9      	bne.n	80017c4 <BMP280_ReadCalibrationData+0x6>
    for (int i = 0; i < 26; i++) {
 80017d0:	2400      	movs	r4, #0
 80017d2:	e00a      	b.n	80017ea <BMP280_ReadCalibrationData+0x2c>
        calib[i] = BMP280_ReadRegister(BMP280_REG_CALIB_00 + i);
 80017d4:	f1a4 0078 	sub.w	r0, r4, #120	@ 0x78
 80017d8:	b2c0      	uxtb	r0, r0
 80017da:	f7ff fe83 	bl	80014e4 <BMP280_ReadRegister>
 80017de:	f104 0320 	add.w	r3, r4, #32
 80017e2:	446b      	add	r3, sp
 80017e4:	f803 0c1c 	strb.w	r0, [r3, #-28]
    for (int i = 0; i < 26; i++) {
 80017e8:	3401      	adds	r4, #1
 80017ea:	2c19      	cmp	r4, #25
 80017ec:	ddf2      	ble.n	80017d4 <BMP280_ReadCalibrationData+0x16>
    devBMP->calib_data.dig_T1 = (calib[1] << 8) | calib[0];
 80017ee:	f89d 2005 	ldrb.w	r2, [sp, #5]
 80017f2:	f89d 3004 	ldrb.w	r3, [sp, #4]
 80017f6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80017fa:	812b      	strh	r3, [r5, #8]
    devBMP->calib_data.dig_T2 = (calib[3] << 8) | calib[2];
 80017fc:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8001800:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8001804:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001808:	816b      	strh	r3, [r5, #10]
    devBMP->calib_data.dig_T3 = (calib[5] << 8) | calib[4];
 800180a:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800180e:	f89d 3008 	ldrb.w	r3, [sp, #8]
 8001812:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001816:	81ab      	strh	r3, [r5, #12]
    devBMP->calib_data.dig_P1 = (calib[7] << 8) | calib[6];
 8001818:	f89d 200b 	ldrb.w	r2, [sp, #11]
 800181c:	f89d 300a 	ldrb.w	r3, [sp, #10]
 8001820:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001824:	81eb      	strh	r3, [r5, #14]
    devBMP->calib_data.dig_P2 = (calib[9] << 8) | calib[8];
 8001826:	f89d 200d 	ldrb.w	r2, [sp, #13]
 800182a:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800182e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001832:	822b      	strh	r3, [r5, #16]
    devBMP->calib_data.dig_P3 = (calib[11] << 8) | calib[10];
 8001834:	f89d 200f 	ldrb.w	r2, [sp, #15]
 8001838:	f89d 300e 	ldrb.w	r3, [sp, #14]
 800183c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001840:	826b      	strh	r3, [r5, #18]
    devBMP->calib_data.dig_P4 = (calib[13] << 8) | calib[12];
 8001842:	f89d 2011 	ldrb.w	r2, [sp, #17]
 8001846:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800184a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800184e:	82ab      	strh	r3, [r5, #20]
    devBMP->calib_data.dig_P5 = (calib[15] << 8) | calib[14];
 8001850:	f89d 2013 	ldrb.w	r2, [sp, #19]
 8001854:	f89d 3012 	ldrb.w	r3, [sp, #18]
 8001858:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800185c:	82eb      	strh	r3, [r5, #22]
    devBMP->calib_data.dig_P6 = (calib[17] << 8) | calib[16];
 800185e:	f89d 2015 	ldrb.w	r2, [sp, #21]
 8001862:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8001866:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800186a:	832b      	strh	r3, [r5, #24]
    devBMP->calib_data.dig_P7 = (calib[19] << 8) | calib[18];
 800186c:	f89d 2017 	ldrb.w	r2, [sp, #23]
 8001870:	f89d 3016 	ldrb.w	r3, [sp, #22]
 8001874:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001878:	836b      	strh	r3, [r5, #26]
    devBMP->calib_data.dig_P8 = (calib[21] << 8) | calib[20];
 800187a:	f89d 2019 	ldrb.w	r2, [sp, #25]
 800187e:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8001882:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001886:	83ab      	strh	r3, [r5, #28]
    devBMP->calib_data.dig_P9 = (calib[23] << 8) | calib[22];
 8001888:	f89d 201b 	ldrb.w	r2, [sp, #27]
 800188c:	f89d 301a 	ldrb.w	r3, [sp, #26]
 8001890:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001894:	83eb      	strh	r3, [r5, #30]
}
 8001896:	b009      	add	sp, #36	@ 0x24
 8001898:	bd30      	pop	{r4, r5, pc}

0800189a <BMP280_WriteRegister>:

uint8_t BMP280_WriteRegister(uint8_t reg, uint8_t value) {
 800189a:	b500      	push	{lr}
 800189c:	b083      	sub	sp, #12

    uint8_t data[2] = {reg, value};
 800189e:	f88d 0004 	strb.w	r0, [sp, #4]
 80018a2:	f88d 1005 	strb.w	r1, [sp, #5]
    Write_GPIO(PA, 8, LOW); // Disable CS
 80018a6:	2200      	movs	r2, #0
 80018a8:	2108      	movs	r1, #8
 80018aa:	2001      	movs	r0, #1
 80018ac:	f000 fe30 	bl	8002510 <Write_GPIO>
    SPI2_TX(data, 2);
 80018b0:	2102      	movs	r1, #2
 80018b2:	a801      	add	r0, sp, #4
 80018b4:	f000 feb0 	bl	8002618 <SPI2_TX>
    Write_GPIO(PA, 8, HIGH); // Enable CS
 80018b8:	2201      	movs	r2, #1
 80018ba:	2108      	movs	r1, #8
 80018bc:	4610      	mov	r0, r2
 80018be:	f000 fe27 	bl	8002510 <Write_GPIO>
    return 1; // OK
}
 80018c2:	2001      	movs	r0, #1
 80018c4:	b003      	add	sp, #12
 80018c6:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080018cc <BMP280_Init>:
uint8_t BMP280_Init(BMP280 *devBMP, unsigned short spi_port) {
 80018cc:	b510      	push	{r4, lr}
 80018ce:	4604      	mov	r4, r0
	SPI_Init(spi_port);
 80018d0:	4608      	mov	r0, r1
 80018d2:	f000 fe3d 	bl	8002550 <SPI_Init>
    BMP280_WriteRegister(BMP280_REG_RESET, BMP280_RESET_WORD); // Reset
 80018d6:	21b6      	movs	r1, #182	@ 0xb6
 80018d8:	20e0      	movs	r0, #224	@ 0xe0
 80018da:	f7ff ffde 	bl	800189a <BMP280_WriteRegister>
    if (BMP280_ReadRegister(BMP280_REG_ID) != BMP280_DEVICE_ID) {
 80018de:	20d0      	movs	r0, #208	@ 0xd0
 80018e0:	f7ff fe00 	bl	80014e4 <BMP280_ReadRegister>
 80018e4:	2858      	cmp	r0, #88	@ 0x58
 80018e6:	d001      	beq.n	80018ec <BMP280_Init+0x20>
        return 0; // Error
 80018e8:	2000      	movs	r0, #0
}
 80018ea:	bd10      	pop	{r4, pc}
    BMP280_ReadCalibrationData(devBMP);
 80018ec:	4620      	mov	r0, r4
 80018ee:	f7ff ff66 	bl	80017be <BMP280_ReadCalibrationData>
    BMP280_WriteRegister(BMP280_REG_CTRL_MEAS, BMP280_SETTING_CTRL_MEAS_NORMAL);
 80018f2:	2157      	movs	r1, #87	@ 0x57
 80018f4:	20f4      	movs	r0, #244	@ 0xf4
 80018f6:	f7ff ffd0 	bl	800189a <BMP280_WriteRegister>
    BMP280_WriteRegister(BMP280_REG_CONFIG, BMP280_SETTING_CONFIG);
 80018fa:	2108      	movs	r1, #8
 80018fc:	20f5      	movs	r0, #245	@ 0xf5
 80018fe:	f7ff ffcc 	bl	800189a <BMP280_WriteRegister>
    BMP280_MeasureReference(devBMP, T0, 101325.0);
 8001902:	4a03      	ldr	r2, [pc, #12]	@ (8001910 <BMP280_Init+0x44>)
 8001904:	4903      	ldr	r1, [pc, #12]	@ (8001914 <BMP280_Init+0x48>)
 8001906:	4620      	mov	r0, r4
 8001908:	f7ff ff42 	bl	8001790 <BMP280_MeasureReference>
    return 1;
 800190c:	2001      	movs	r0, #1
 800190e:	e7ec      	b.n	80018ea <BMP280_Init+0x1e>
 8001910:	47c5e680 	.word	0x47c5e680
 8001914:	43901333 	.word	0x43901333

08001918 <BMP280_SwapMode>:
uint8_t BMP280_SwapMode(uint8_t mode) {
 8001918:	b510      	push	{r4, lr}
 800191a:	4604      	mov	r4, r0
	if(BMP280_ReadRegister(BMP280_REG_CTRL_MEAS) != mode) {
 800191c:	20f4      	movs	r0, #244	@ 0xf4
 800191e:	f7ff fde1 	bl	80014e4 <BMP280_ReadRegister>
 8001922:	42a0      	cmp	r0, r4
 8001924:	d009      	beq.n	800193a <BMP280_SwapMode+0x22>
		BMP280_WriteRegister(BMP280_REG_CTRL_MEAS, mode); // BMP280_SETTING_CTRL_MEAS_NORMAL (0x57) ou BMP280_SETTING_CTRL_MEAS_LOW (0x54)
 8001926:	4621      	mov	r1, r4
 8001928:	20f4      	movs	r0, #244	@ 0xf4
 800192a:	f7ff ffb6 	bl	800189a <BMP280_WriteRegister>
		printf("BMP mode set to: %i/n", BMP280_SETTING_CTRL_MEAS_NORMAL);
 800192e:	2157      	movs	r1, #87	@ 0x57
 8001930:	4804      	ldr	r0, [pc, #16]	@ (8001944 <BMP280_SwapMode+0x2c>)
 8001932:	f006 fbd7 	bl	80080e4 <iprintf>
		return 1; // OK
 8001936:	2001      	movs	r0, #1
}
 8001938:	bd10      	pop	{r4, pc}
		printf("BMP mode set error...");
 800193a:	4803      	ldr	r0, [pc, #12]	@ (8001948 <BMP280_SwapMode+0x30>)
 800193c:	f006 fbd2 	bl	80080e4 <iprintf>
		return 0; // Error (no change)
 8001940:	2000      	movs	r0, #0
 8001942:	e7f9      	b.n	8001938 <BMP280_SwapMode+0x20>
 8001944:	0800bab0 	.word	0x0800bab0
 8001948:	0800bac8 	.word	0x0800bac8

0800194c <CD74HC4051_Init>:

uint32_t ADC_Sampling (ADC_HandleTypeDef *hadc);

uint8_t CD74HC4051_Init (ADC_HandleTypeDef *hadc) {

	if (hadc == NULL) {
 800194c:	b370      	cbz	r0, 80019ac <CD74HC4051_Init+0x60>
uint8_t CD74HC4051_Init (ADC_HandleTypeDef *hadc) {
 800194e:	b510      	push	{r4, lr}
 8001950:	4604      	mov	r4, r0
		return 0; // Error
	}
	// Read pin
	Init_GPIO(PA, 0, IN, I_AN); // MUL_AN
 8001952:	2300      	movs	r3, #0
 8001954:	461a      	mov	r2, r3
 8001956:	4619      	mov	r1, r3
 8001958:	2001      	movs	r0, #1
 800195a:	f000 fd8f 	bl	800247c <Init_GPIO>
	// Batteries
	Init_GPIO(PC, 13, OUT2, O_GP_PP); // MUL_S0
 800195e:	2300      	movs	r3, #0
 8001960:	2202      	movs	r2, #2
 8001962:	210d      	movs	r1, #13
 8001964:	2003      	movs	r0, #3
 8001966:	f000 fd89 	bl	800247c <Init_GPIO>
	Init_GPIO(PC, 14, OUT2, O_GP_PP); // MUL_S1
 800196a:	2300      	movs	r3, #0
 800196c:	2202      	movs	r2, #2
 800196e:	210e      	movs	r1, #14
 8001970:	2003      	movs	r0, #3
 8001972:	f000 fd83 	bl	800247c <Init_GPIO>
	Init_GPIO(PC, 15, OUT2, O_GP_PP); // MUL_S2
 8001976:	2300      	movs	r3, #0
 8001978:	2202      	movs	r2, #2
 800197a:	210f      	movs	r1, #15
 800197c:	2003      	movs	r0, #3
 800197e:	f000 fd7d 	bl	800247c <Init_GPIO>
	Init_GPIO(PB, 8, OUT2, O_GP_PP); // MUL_E~
 8001982:	2300      	movs	r3, #0
 8001984:	2202      	movs	r2, #2
 8001986:	2108      	movs	r1, #8
 8001988:	4610      	mov	r0, r2
 800198a:	f000 fd77 	bl	800247c <Init_GPIO>
	// Set MUL_E~ (inverse)
	Write_GPIO(PB, 8, HIGH);
 800198e:	2201      	movs	r2, #1
 8001990:	2108      	movs	r1, #8
 8001992:	2002      	movs	r0, #2
 8001994:	f000 fdbc 	bl	8002510 <Write_GPIO>
	// Pyros
	Pyro_Init();
 8001998:	f000 fc5e 	bl	8002258 <Pyro_Init>

	//ADC calibration
	ADC_Stop(hadc);
 800199c:	4620      	mov	r0, r4
 800199e:	f000 fd21 	bl	80023e4 <ADC_Stop>
	ADC_Calibration(hadc);
 80019a2:	4620      	mov	r0, r4
 80019a4:	f000 fd19 	bl	80023da <ADC_Calibration>

	return 1; // OK
 80019a8:	2001      	movs	r0, #1
}
 80019aa:	bd10      	pop	{r4, pc}
		return 0; // Error
 80019ac:	2000      	movs	r0, #0
}
 80019ae:	4770      	bx	lr

080019b0 <CD74HC4051_AnRead>:

uint16_t CD74HC4051_AnRead(ADC_HandleTypeDef *hadc, uint8_t channel, uint8_t pyro_channel, float vref) {

	if (hadc == NULL) {
 80019b0:	2800      	cmp	r0, #0
 80019b2:	d060      	beq.n	8001a76 <CD74HC4051_AnRead+0xc6>
uint16_t CD74HC4051_AnRead(ADC_HandleTypeDef *hadc, uint8_t channel, uint8_t pyro_channel, float vref) {
 80019b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80019b6:	460c      	mov	r4, r1
 80019b8:	4615      	mov	r5, r2
 80019ba:	461e      	mov	r6, r3
 80019bc:	4607      	mov	r7, r0
		return 0;
	}
	if(channel == CHANNEL_1 || channel == CHANNEL_7) {
 80019be:	2901      	cmp	r1, #1
 80019c0:	d05b      	beq.n	8001a7a <CD74HC4051_AnRead+0xca>
		return 0;
	}

	ADC_Start(hadc);
 80019c2:	f000 fd05 	bl	80023d0 <ADC_Start>

	Write_GPIO(PB, 8, HIGH); // MUL_E~ (inverse)
 80019c6:	2201      	movs	r2, #1
 80019c8:	2108      	movs	r1, #8
 80019ca:	2002      	movs	r0, #2
 80019cc:	f000 fda0 	bl	8002510 <Write_GPIO>
	Write_GPIO(PA, 15, LOW); // Pyro_Test (inverse)
 80019d0:	2200      	movs	r2, #0
 80019d2:	210f      	movs	r1, #15
 80019d4:	2001      	movs	r0, #1
 80019d6:	f000 fd9b 	bl	8002510 <Write_GPIO>
	if(channel == CHANNEL_0) {
 80019da:	b98c      	cbnz	r4, 8001a00 <CD74HC4051_AnRead+0x50>
		if(pyro_channel == PYRO_CHANNEL_0) {
 80019dc:	2d01      	cmp	r5, #1
 80019de:	d003      	beq.n	80019e8 <CD74HC4051_AnRead+0x38>
			Write_GPIO(PB, 4, HIGH); // Pyro_ON0
		} else if (pyro_channel == PYRO_CHANNEL_1) {
 80019e0:	2d02      	cmp	r5, #2
 80019e2:	d007      	beq.n	80019f4 <CD74HC4051_AnRead+0x44>
			Write_GPIO(PB, 5, HIGH); // Pyro_ON1
		} else {
			return 0;
 80019e4:	2000      	movs	r0, #0
 80019e6:	e045      	b.n	8001a74 <CD74HC4051_AnRead+0xc4>
			Write_GPIO(PB, 4, HIGH); // Pyro_ON0
 80019e8:	2201      	movs	r2, #1
 80019ea:	2104      	movs	r1, #4
 80019ec:	2002      	movs	r0, #2
 80019ee:	f000 fd8f 	bl	8002510 <Write_GPIO>
 80019f2:	e017      	b.n	8001a24 <CD74HC4051_AnRead+0x74>
			Write_GPIO(PB, 5, HIGH); // Pyro_ON1
 80019f4:	2201      	movs	r2, #1
 80019f6:	2105      	movs	r1, #5
 80019f8:	2002      	movs	r0, #2
 80019fa:	f000 fd89 	bl	8002510 <Write_GPIO>
 80019fe:	e011      	b.n	8001a24 <CD74HC4051_AnRead+0x74>
		}
	} else {
		// Set channel
		Write_GPIO(PC, 13, (channel & 0x01) ? HIGH : LOW);
 8001a00:	f004 0201 	and.w	r2, r4, #1
 8001a04:	210d      	movs	r1, #13
 8001a06:	2003      	movs	r0, #3
 8001a08:	f000 fd82 	bl	8002510 <Write_GPIO>
		Write_GPIO(PC, 14, (channel & 0x02) ? HIGH : LOW);
 8001a0c:	f3c4 0240 	ubfx	r2, r4, #1, #1
 8001a10:	210e      	movs	r1, #14
 8001a12:	2003      	movs	r0, #3
 8001a14:	f000 fd7c 	bl	8002510 <Write_GPIO>
		Write_GPIO(PC, 15, (channel & 0x04) ? HIGH : LOW);
 8001a18:	f3c4 0280 	ubfx	r2, r4, #2, #1
 8001a1c:	210f      	movs	r1, #15
 8001a1e:	2003      	movs	r0, #3
 8001a20:	f000 fd76 	bl	8002510 <Write_GPIO>
	}
	// Reactiver multiplexer pour lecture
	Write_GPIO(PB, 8, LOW); // MUL_E~ (inverse)
 8001a24:	2200      	movs	r2, #0
 8001a26:	2108      	movs	r1, #8
 8001a28:	2002      	movs	r0, #2
 8001a2a:	f000 fd71 	bl	8002510 <Write_GPIO>
	// Lecture
	uint32_t adc_value = ADC_Sampling(hadc);
 8001a2e:	4638      	mov	r0, r7
 8001a30:	f000 fcde 	bl	80023f0 <ADC_Sampling>
 8001a34:	4604      	mov	r4, r0
	// Desactiver pyros (ordre important)
	Write_GPIO(PB, 4, LOW); // Pyro_ON0
 8001a36:	2200      	movs	r2, #0
 8001a38:	2104      	movs	r1, #4
 8001a3a:	2002      	movs	r0, #2
 8001a3c:	f000 fd68 	bl	8002510 <Write_GPIO>
	Write_GPIO(PB, 5, LOW); // Pyro_ON1
 8001a40:	2200      	movs	r2, #0
 8001a42:	2105      	movs	r1, #5
 8001a44:	2002      	movs	r0, #2
 8001a46:	f000 fd63 	bl	8002510 <Write_GPIO>
	Write_GPIO(PA, 15, HIGH); // Pyro_Test~
 8001a4a:	2201      	movs	r2, #1
 8001a4c:	210f      	movs	r1, #15
 8001a4e:	4610      	mov	r0, r2
 8001a50:	f000 fd5e 	bl	8002510 <Write_GPIO>

	return (uint16_t)((adc_value * vref / 4096) * 1000);
 8001a54:	4620      	mov	r0, r4
 8001a56:	f7ff f947 	bl	8000ce8 <__aeabi_ui2f>
 8001a5a:	4631      	mov	r1, r6
 8001a5c:	f7ff f99c 	bl	8000d98 <__aeabi_fmul>
 8001a60:	f04f 5166 	mov.w	r1, #964689920	@ 0x39800000
 8001a64:	f7ff f998 	bl	8000d98 <__aeabi_fmul>
 8001a68:	4905      	ldr	r1, [pc, #20]	@ (8001a80 <CD74HC4051_AnRead+0xd0>)
 8001a6a:	f7ff f995 	bl	8000d98 <__aeabi_fmul>
 8001a6e:	f7ff fb09 	bl	8001084 <__aeabi_f2uiz>
 8001a72:	b280      	uxth	r0, r0
}
 8001a74:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		return 0;
 8001a76:	2000      	movs	r0, #0
}
 8001a78:	4770      	bx	lr
		return 0;
 8001a7a:	2000      	movs	r0, #0
 8001a7c:	e7fa      	b.n	8001a74 <CD74HC4051_AnRead+0xc4>
 8001a7e:	bf00      	nop
 8001a80:	447a0000 	.word	0x447a0000

08001a84 <HM10BLE_Read>:


	return 1; // OK
}

uint8_t HM10BLE_Read(unsigned short usart_port, uint8_t *response, uint8_t size) {
 8001a84:	b508      	push	{r3, lr}

	USART_RX(usart_port, response, sizeof(response));
 8001a86:	2204      	movs	r2, #4
 8001a88:	f000 feba 	bl	8002800 <USART_RX>
	return 1; // OK
}
 8001a8c:	2001      	movs	r0, #1
 8001a8e:	bd08      	pop	{r3, pc}

08001a90 <HM10BLE_Send>:

uint8_t HM10BLE_Send(unsigned short usart_port, uint8_t *message, uint8_t size) {
 8001a90:	b508      	push	{r3, lr}

	USART_TX(usart_port, message, sizeof(message));
 8001a92:	2204      	movs	r2, #4
 8001a94:	f000 fe6e 	bl	8002774 <USART_TX>
	return 1; // OK
}
 8001a98:	2001      	movs	r0, #1
 8001a9a:	bd08      	pop	{r3, pc}

08001a9c <HM10BLE_Init>:
uint8_t HM10BLE_Init(HM10BLE *devHM10, unsigned short usart_port) {
 8001a9c:	b538      	push	{r3, r4, r5, lr}
 8001a9e:	4604      	mov	r4, r0
 8001aa0:	460d      	mov	r5, r1
	HM10BLE_Send(usart_port, (uint8_t *)"AT\n", strlen("AT\n"));							// Awake
 8001aa2:	2203      	movs	r2, #3
 8001aa4:	490b      	ldr	r1, [pc, #44]	@ (8001ad4 <HM10BLE_Init+0x38>)
 8001aa6:	4628      	mov	r0, r5
 8001aa8:	f7ff fff2 	bl	8001a90 <HM10BLE_Send>
	HM10BLE_Send(usart_port, (uint8_t *)"AT+NAMEBulldogs\n", strlen("AT+NAMEMerope\n"));	// Name device
 8001aac:	220e      	movs	r2, #14
 8001aae:	490a      	ldr	r1, [pc, #40]	@ (8001ad8 <HM10BLE_Init+0x3c>)
 8001ab0:	4628      	mov	r0, r5
 8001ab2:	f7ff ffed 	bl	8001a90 <HM10BLE_Send>
	HM10BLE_Send(usart_port, (uint8_t *)"AT+IMME1\n", strlen("AT+IMME1\n"));				// Start
 8001ab6:	2209      	movs	r2, #9
 8001ab8:	4908      	ldr	r1, [pc, #32]	@ (8001adc <HM10BLE_Init+0x40>)
 8001aba:	4628      	mov	r0, r5
 8001abc:	f7ff ffe8 	bl	8001a90 <HM10BLE_Send>
	devHM10->hm10_status = false;
 8001ac0:	2300      	movs	r3, #0
 8001ac2:	7023      	strb	r3, [r4, #0]
	devHM10->rfd_status = false;
 8001ac4:	7063      	strb	r3, [r4, #1]
	devHM10->icm_status = false;
 8001ac6:	70a3      	strb	r3, [r4, #2]
	devHM10->l76lm33_status = false;
 8001ac8:	70e3      	strb	r3, [r4, #3]
	devHM10->bmp_status = false;
 8001aca:	7123      	strb	r3, [r4, #4]
	devHM10->bat_status = 0x00;
 8001acc:	7163      	strb	r3, [r4, #5]
	devHM10->sd_status = false;
 8001ace:	71a3      	strb	r3, [r4, #6]
}
 8001ad0:	2001      	movs	r0, #1
 8001ad2:	bd38      	pop	{r3, r4, r5, pc}
 8001ad4:	0800bae0 	.word	0x0800bae0
 8001ad8:	0800bae4 	.word	0x0800bae4
 8001adc:	0800baf8 	.word	0x0800baf8

08001ae0 <HM10BLE_Connection>:
uint8_t HM10BLE_Connection(HM10BLE *devHM10, unsigned short usart_port, uint8_t *rx_buffer) {
 8001ae0:	b570      	push	{r4, r5, r6, lr}
 8001ae2:	4606      	mov	r6, r0
 8001ae4:	460c      	mov	r4, r1
 8001ae6:	4615      	mov	r5, r2
	HM10BLE_Send(usart_port, (uint8_t *)"AT\n", strlen("AT\n"));
 8001ae8:	2203      	movs	r2, #3
 8001aea:	490b      	ldr	r1, [pc, #44]	@ (8001b18 <HM10BLE_Connection+0x38>)
 8001aec:	4620      	mov	r0, r4
 8001aee:	f7ff ffcf 	bl	8001a90 <HM10BLE_Send>
	HM10BLE_Read(usart_port, rx_buffer, strlen("AT\n"));
 8001af2:	2203      	movs	r2, #3
 8001af4:	4629      	mov	r1, r5
 8001af6:	4620      	mov	r0, r4
 8001af8:	f7ff ffc4 	bl	8001a84 <HM10BLE_Read>
	if(rx_buffer == (uint8_t *)"OK"){
 8001afc:	4b07      	ldr	r3, [pc, #28]	@ (8001b1c <HM10BLE_Connection+0x3c>)
 8001afe:	429d      	cmp	r5, r3
 8001b00:	d002      	beq.n	8001b08 <HM10BLE_Connection+0x28>
		devHM10->hm10_status = false;
 8001b02:	2000      	movs	r0, #0
 8001b04:	7030      	strb	r0, [r6, #0]
}
 8001b06:	bd70      	pop	{r4, r5, r6, pc}
		HM10BLE_Send(usart_port, (uint8_t *)"(+) HM10BLE's STM32 connected...\r\n", strlen("(+) HM10BLE's STM32 connected...\r\n"));
 8001b08:	2222      	movs	r2, #34	@ 0x22
 8001b0a:	4905      	ldr	r1, [pc, #20]	@ (8001b20 <HM10BLE_Connection+0x40>)
 8001b0c:	4620      	mov	r0, r4
 8001b0e:	f7ff ffbf 	bl	8001a90 <HM10BLE_Send>
		devHM10->hm10_status = true;
 8001b12:	2001      	movs	r0, #1
 8001b14:	7030      	strb	r0, [r6, #0]
		return 1; // OK
 8001b16:	e7f6      	b.n	8001b06 <HM10BLE_Connection+0x26>
 8001b18:	0800bae0 	.word	0x0800bae0
 8001b1c:	0800bb04 	.word	0x0800bb04
 8001b20:	0800bb08 	.word	0x0800bb08

08001b24 <ICM20602_Read>:
{
	return Read_GPIO(PA, 10);
}

void ICM20602_Read(uint8_t address, uint8_t rxData[], uint8_t size)
{
 8001b24:	b530      	push	{r4, r5, lr}
 8001b26:	b083      	sub	sp, #12
 8001b28:	460c      	mov	r4, r1
 8001b2a:	4615      	mov	r5, r2
 8001b2c:	f88d 0007 	strb.w	r0, [sp, #7]
	address |= 0x80;  // read operation
 8001b30:	b2c3      	uxtb	r3, r0
 8001b32:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8001b36:	f88d 3007 	strb.w	r3, [sp, #7]

	Write_GPIO(PB, 12, LOW);
 8001b3a:	2200      	movs	r2, #0
 8001b3c:	210c      	movs	r1, #12
 8001b3e:	2002      	movs	r0, #2
 8001b40:	f000 fce6 	bl	8002510 <Write_GPIO>
	SPI2_TX(&address, 1);  // send address
 8001b44:	2101      	movs	r1, #1
 8001b46:	f10d 0007 	add.w	r0, sp, #7
 8001b4a:	f000 fd65 	bl	8002618 <SPI2_TX>
	SPI2_RX(rxData, size);  // receive 6 bytes data
 8001b4e:	4629      	mov	r1, r5
 8001b50:	4620      	mov	r0, r4
 8001b52:	f000 fd7f 	bl	8002654 <SPI2_RX>
	Write_GPIO(PB, 12, HIGH);
 8001b56:	2201      	movs	r2, #1
 8001b58:	210c      	movs	r1, #12
 8001b5a:	2002      	movs	r0, #2
 8001b5c:	f000 fcd8 	bl	8002510 <Write_GPIO>
}
 8001b60:	b003      	add	sp, #12
 8001b62:	bd30      	pop	{r4, r5, pc}
 8001b64:	0000      	movs	r0, r0
	...

08001b68 <ICM20602_Update_All>:
{
 8001b68:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001b6c:	b084      	sub	sp, #16
 8001b6e:	4604      	mov	r4, r0
	ICM20602_Read(ICM20602_REG_ACCEL_XOUT_H, rxData, 14);
 8001b70:	220e      	movs	r2, #14
 8001b72:	4669      	mov	r1, sp
 8001b74:	203b      	movs	r0, #59	@ 0x3b
 8001b76:	f7ff ffd5 	bl	8001b24 <ICM20602_Read>
	dev->accXRaw = (rxData[0] << 8) | rxData[1];
 8001b7a:	f89d 3000 	ldrb.w	r3, [sp]
 8001b7e:	f89d 6001 	ldrb.w	r6, [sp, #1]
 8001b82:	ea46 2603 	orr.w	r6, r6, r3, lsl #8
 8001b86:	b236      	sxth	r6, r6
 8001b88:	80e6      	strh	r6, [r4, #6]
	dev->accYRaw = (rxData[2] << 8) | rxData[3];
 8001b8a:	f89d 3002 	ldrb.w	r3, [sp, #2]
 8001b8e:	f89d 5003 	ldrb.w	r5, [sp, #3]
 8001b92:	ea45 2503 	orr.w	r5, r5, r3, lsl #8
 8001b96:	b22d      	sxth	r5, r5
 8001b98:	8125      	strh	r5, [r4, #8]
	dev->accZRaw = (rxData[4] << 8) | rxData[5];
 8001b9a:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8001b9e:	f89d 7005 	ldrb.w	r7, [sp, #5]
 8001ba2:	ea47 2703 	orr.w	r7, r7, r3, lsl #8
 8001ba6:	b23f      	sxth	r7, r7
 8001ba8:	8167      	strh	r7, [r4, #10]
	dev->temperatureC = ((rxData[6] << 8) | rxData[7])/326.8f + 25;
 8001baa:	f89d 0006 	ldrb.w	r0, [sp, #6]
 8001bae:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8001bb2:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
 8001bb6:	f7ff f89b 	bl	8000cf0 <__aeabi_i2f>
 8001bba:	495f      	ldr	r1, [pc, #380]	@ (8001d38 <ICM20602_Update_All+0x1d0>)
 8001bbc:	f7ff f9a0 	bl	8000f00 <__aeabi_fdiv>
 8001bc0:	495e      	ldr	r1, [pc, #376]	@ (8001d3c <ICM20602_Update_All+0x1d4>)
 8001bc2:	f7fe ffe1 	bl	8000b88 <__addsf3>
 8001bc6:	6260      	str	r0, [r4, #36]	@ 0x24
	dev->gyroXRaw = (rxData[ 8] << 8) | rxData[ 9];
 8001bc8:	f89d 3008 	ldrb.w	r3, [sp, #8]
 8001bcc:	f89d 0009 	ldrb.w	r0, [sp, #9]
 8001bd0:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
 8001bd4:	b200      	sxth	r0, r0
 8001bd6:	8020      	strh	r0, [r4, #0]
	dev->gyroYRaw = (rxData[10] << 8) | rxData[11];
 8001bd8:	f89d 300a 	ldrb.w	r3, [sp, #10]
 8001bdc:	f89d 900b 	ldrb.w	r9, [sp, #11]
 8001be0:	ea49 2903 	orr.w	r9, r9, r3, lsl #8
 8001be4:	fa0f f989 	sxth.w	r9, r9
 8001be8:	f8a4 9002 	strh.w	r9, [r4, #2]
	dev->gyroZRaw = (rxData[12] << 8) | rxData[13];
 8001bec:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8001bf0:	f89d 800d 	ldrb.w	r8, [sp, #13]
 8001bf4:	ea48 2803 	orr.w	r8, r8, r3, lsl #8
 8001bf8:	fa0f f888 	sxth.w	r8, r8
 8001bfc:	f8a4 8004 	strh.w	r8, [r4, #4]
	dev->gyroX = dev->gyroXRaw * 2000.f / 32768.f;
 8001c00:	f7ff f876 	bl	8000cf0 <__aeabi_i2f>
 8001c04:	494e      	ldr	r1, [pc, #312]	@ (8001d40 <ICM20602_Update_All+0x1d8>)
 8001c06:	f7ff f8c7 	bl	8000d98 <__aeabi_fmul>
 8001c0a:	f04f 5160 	mov.w	r1, #939524096	@ 0x38000000
 8001c0e:	f7ff f8c3 	bl	8000d98 <__aeabi_fmul>
 8001c12:	60e0      	str	r0, [r4, #12]
	dev->gyroY = dev->gyroYRaw * 2000.f / 32768.f;
 8001c14:	4648      	mov	r0, r9
 8001c16:	f7ff f86b 	bl	8000cf0 <__aeabi_i2f>
 8001c1a:	4949      	ldr	r1, [pc, #292]	@ (8001d40 <ICM20602_Update_All+0x1d8>)
 8001c1c:	f7ff f8bc 	bl	8000d98 <__aeabi_fmul>
 8001c20:	f04f 5160 	mov.w	r1, #939524096	@ 0x38000000
 8001c24:	f7ff f8b8 	bl	8000d98 <__aeabi_fmul>
 8001c28:	6120      	str	r0, [r4, #16]
	dev->gyroZ = dev->gyroZRaw * 2000.f / 32768.f;
 8001c2a:	4640      	mov	r0, r8
 8001c2c:	f7ff f860 	bl	8000cf0 <__aeabi_i2f>
 8001c30:	4943      	ldr	r1, [pc, #268]	@ (8001d40 <ICM20602_Update_All+0x1d8>)
 8001c32:	f7ff f8b1 	bl	8000d98 <__aeabi_fmul>
 8001c36:	f04f 5160 	mov.w	r1, #939524096	@ 0x38000000
 8001c3a:	f7ff f8ad 	bl	8000d98 <__aeabi_fmul>
 8001c3e:	6160      	str	r0, [r4, #20]
	dev->accX = dev->accXRaw * 16.f / 32768.f;
 8001c40:	4630      	mov	r0, r6
 8001c42:	f7ff f855 	bl	8000cf0 <__aeabi_i2f>
 8001c46:	f04f 4183 	mov.w	r1, #1098907648	@ 0x41800000
 8001c4a:	f7ff f8a5 	bl	8000d98 <__aeabi_fmul>
 8001c4e:	f04f 5160 	mov.w	r1, #939524096	@ 0x38000000
 8001c52:	f7ff f8a1 	bl	8000d98 <__aeabi_fmul>
 8001c56:	4606      	mov	r6, r0
 8001c58:	61a0      	str	r0, [r4, #24]
	dev->accY = dev->accYRaw * 16.f / 32768.f;
 8001c5a:	4628      	mov	r0, r5
 8001c5c:	f7ff f848 	bl	8000cf0 <__aeabi_i2f>
 8001c60:	f04f 4183 	mov.w	r1, #1098907648	@ 0x41800000
 8001c64:	f7ff f898 	bl	8000d98 <__aeabi_fmul>
 8001c68:	f04f 5160 	mov.w	r1, #939524096	@ 0x38000000
 8001c6c:	f7ff f894 	bl	8000d98 <__aeabi_fmul>
 8001c70:	4605      	mov	r5, r0
 8001c72:	61e0      	str	r0, [r4, #28]
	dev->accZ = dev->accZRaw * 16.f / 32768.f;
 8001c74:	4638      	mov	r0, r7
 8001c76:	f7ff f83b 	bl	8000cf0 <__aeabi_i2f>
 8001c7a:	f04f 4183 	mov.w	r1, #1098907648	@ 0x41800000
 8001c7e:	f7ff f88b 	bl	8000d98 <__aeabi_fmul>
 8001c82:	f04f 5160 	mov.w	r1, #939524096	@ 0x38000000
 8001c86:	f7ff f887 	bl	8000d98 <__aeabi_fmul>
 8001c8a:	4607      	mov	r7, r0
 8001c8c:	6220      	str	r0, [r4, #32]
	dev->angleRoll = atan(dev->accY/sqrt(dev->accX*dev->accX+dev->accZ*dev->accZ))*1/(3.142/180);
 8001c8e:	4628      	mov	r0, r5
 8001c90:	f7fe fbd4 	bl	800043c <__aeabi_f2d>
 8001c94:	4680      	mov	r8, r0
 8001c96:	4689      	mov	r9, r1
 8001c98:	4631      	mov	r1, r6
 8001c9a:	4630      	mov	r0, r6
 8001c9c:	f7ff f87c 	bl	8000d98 <__aeabi_fmul>
 8001ca0:	4682      	mov	sl, r0
 8001ca2:	4639      	mov	r1, r7
 8001ca4:	4638      	mov	r0, r7
 8001ca6:	f7ff f877 	bl	8000d98 <__aeabi_fmul>
 8001caa:	4607      	mov	r7, r0
 8001cac:	4601      	mov	r1, r0
 8001cae:	4650      	mov	r0, sl
 8001cb0:	f7fe ff6a 	bl	8000b88 <__addsf3>
 8001cb4:	f7fe fbc2 	bl	800043c <__aeabi_f2d>
 8001cb8:	f008 fe92 	bl	800a9e0 <sqrt>
 8001cbc:	4602      	mov	r2, r0
 8001cbe:	460b      	mov	r3, r1
 8001cc0:	4640      	mov	r0, r8
 8001cc2:	4649      	mov	r1, r9
 8001cc4:	f7fe fd3c 	bl	8000740 <__aeabi_ddiv>
 8001cc8:	f008 feae 	bl	800aa28 <atan>
 8001ccc:	a318      	add	r3, pc, #96	@ (adr r3, 8001d30 <ICM20602_Update_All+0x1c8>)
 8001cce:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001cd2:	f7fe fd35 	bl	8000740 <__aeabi_ddiv>
 8001cd6:	f7fe ff01 	bl	8000adc <__aeabi_d2f>
 8001cda:	62a0      	str	r0, [r4, #40]	@ 0x28
	dev->anglePitch = -atan(dev->accX/sqrt(dev->accY*dev->accY+dev->accZ*dev->accZ))*1/(3.142/180);
 8001cdc:	4630      	mov	r0, r6
 8001cde:	f7fe fbad 	bl	800043c <__aeabi_f2d>
 8001ce2:	4680      	mov	r8, r0
 8001ce4:	4689      	mov	r9, r1
 8001ce6:	4629      	mov	r1, r5
 8001ce8:	4628      	mov	r0, r5
 8001cea:	f7ff f855 	bl	8000d98 <__aeabi_fmul>
 8001cee:	4601      	mov	r1, r0
 8001cf0:	4638      	mov	r0, r7
 8001cf2:	f7fe ff49 	bl	8000b88 <__addsf3>
 8001cf6:	f7fe fba1 	bl	800043c <__aeabi_f2d>
 8001cfa:	f008 fe71 	bl	800a9e0 <sqrt>
 8001cfe:	4602      	mov	r2, r0
 8001d00:	460b      	mov	r3, r1
 8001d02:	4640      	mov	r0, r8
 8001d04:	4649      	mov	r1, r9
 8001d06:	f7fe fd1b 	bl	8000740 <__aeabi_ddiv>
 8001d0a:	f008 fe8d 	bl	800aa28 <atan>
 8001d0e:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 8001d12:	a307      	add	r3, pc, #28	@ (adr r3, 8001d30 <ICM20602_Update_All+0x1c8>)
 8001d14:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d18:	f7fe fd12 	bl	8000740 <__aeabi_ddiv>
 8001d1c:	f7fe fede 	bl	8000adc <__aeabi_d2f>
 8001d20:	62e0      	str	r0, [r4, #44]	@ 0x2c
	getRollPitch(dev);
 8001d22:	4620      	mov	r0, r4
 8001d24:	f000 f95c 	bl	8001fe0 <getRollPitch>
}
 8001d28:	b004      	add	sp, #16
 8001d2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001d2e:	bf00      	nop
 8001d30:	80fa7e3f 	.word	0x80fa7e3f
 8001d34:	3f91dfde 	.word	0x3f91dfde
 8001d38:	43a36666 	.word	0x43a36666
 8001d3c:	41c80000 	.word	0x41c80000
 8001d40:	44fa0000 	.word	0x44fa0000

08001d44 <ICM20602_Write>:

void ICM20602_Write(uint8_t address, uint8_t value)
{
 8001d44:	b500      	push	{lr}
 8001d46:	b083      	sub	sp, #12
 8001d48:	f88d 0007 	strb.w	r0, [sp, #7]
 8001d4c:	f88d 1006 	strb.w	r1, [sp, #6]
	Write_GPIO(PB, 12, LOW);
 8001d50:	2200      	movs	r2, #0
 8001d52:	210c      	movs	r1, #12
 8001d54:	2002      	movs	r0, #2
 8001d56:	f000 fbdb 	bl	8002510 <Write_GPIO>
	SPI2_TX(&address, 1);  // send address
 8001d5a:	2101      	movs	r1, #1
 8001d5c:	f10d 0007 	add.w	r0, sp, #7
 8001d60:	f000 fc5a 	bl	8002618 <SPI2_TX>
	SPI2_TX(&value, 1);  // send value
 8001d64:	2101      	movs	r1, #1
 8001d66:	f10d 0006 	add.w	r0, sp, #6
 8001d6a:	f000 fc55 	bl	8002618 <SPI2_TX>
	Write_GPIO(PB, 12, HIGH);
 8001d6e:	2201      	movs	r2, #1
 8001d70:	210c      	movs	r1, #12
 8001d72:	2002      	movs	r0, #2
 8001d74:	f000 fbcc 	bl	8002510 <Write_GPIO>
	HAL_Delay(20);
 8001d78:	2014      	movs	r0, #20
 8001d7a:	f001 fcc9 	bl	8003710 <HAL_Delay>
}
 8001d7e:	b003      	add	sp, #12
 8001d80:	f85d fb04 	ldr.w	pc, [sp], #4

08001d84 <ICM20602_Remove_DC_Offset>:
{
 8001d84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001d88:	b084      	sub	sp, #16
 8001d8a:	460d      	mov	r5, r1
	int16_t offset[3] = {0,0,0};
 8001d8c:	2400      	movs	r4, #0
 8001d8e:	f8ad 4008 	strh.w	r4, [sp, #8]
 8001d92:	f8ad 400a 	strh.w	r4, [sp, #10]
 8001d96:	f8ad 400c 	strh.w	r4, [sp, #12]
	for(i = 0; i < mean; i++)
 8001d9a:	e027      	b.n	8001dec <ICM20602_Remove_DC_Offset+0x68>
		ICM20602_Read(ICM20602_REG_GYRO_XOUT_H, rxData, 6);
 8001d9c:	2206      	movs	r2, #6
 8001d9e:	4669      	mov	r1, sp
 8001da0:	2043      	movs	r0, #67	@ 0x43
 8001da2:	f7ff febf 	bl	8001b24 <ICM20602_Read>
		offset[0] += (rxData[0] << 8) | rxData[1];
 8001da6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8001daa:	f89d 1000 	ldrb.w	r1, [sp]
 8001dae:	f89d 2001 	ldrb.w	r2, [sp, #1]
 8001db2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8001db6:	4413      	add	r3, r2
 8001db8:	f8ad 3008 	strh.w	r3, [sp, #8]
		offset[1] += (rxData[2] << 8) | rxData[3];
 8001dbc:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8001dc0:	f89d 1002 	ldrb.w	r1, [sp, #2]
 8001dc4:	f89d 2003 	ldrb.w	r2, [sp, #3]
 8001dc8:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8001dcc:	4413      	add	r3, r2
 8001dce:	f8ad 300a 	strh.w	r3, [sp, #10]
		offset[2] += (rxData[4] << 8) | rxData[5];
 8001dd2:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8001dd6:	f89d 1004 	ldrb.w	r1, [sp, #4]
 8001dda:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8001dde:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8001de2:	4413      	add	r3, r2
 8001de4:	f8ad 300c 	strh.w	r3, [sp, #12]
	for(i = 0; i < mean; i++)
 8001de8:	3401      	adds	r4, #1
 8001dea:	b264      	sxtb	r4, r4
 8001dec:	42ac      	cmp	r4, r5
 8001dee:	dbd5      	blt.n	8001d9c <ICM20602_Remove_DC_Offset+0x18>
	offset[0] /= mean;
 8001df0:	f9bd 7008 	ldrsh.w	r7, [sp, #8]
 8001df4:	fb97 f7f5 	sdiv	r7, r7, r5
 8001df8:	b239      	sxth	r1, r7
 8001dfa:	f8ad 1008 	strh.w	r1, [sp, #8]
	offset[1] /= mean;
 8001dfe:	f9bd 600a 	ldrsh.w	r6, [sp, #10]
 8001e02:	fb96 f6f5 	sdiv	r6, r6, r5
 8001e06:	fa0f f886 	sxth.w	r8, r6
 8001e0a:	f8ad 800a 	strh.w	r8, [sp, #10]
	offset[2] /= mean;
 8001e0e:	f9bd 400c 	ldrsh.w	r4, [sp, #12]
 8001e12:	fb94 f4f5 	sdiv	r4, r4, r5
 8001e16:	b225      	sxth	r5, r4
 8001e18:	f8ad 500c 	strh.w	r5, [sp, #12]
	ICM20602_Write(ICM20602_REG_XG_OFFS_USRH, (offset[0]*-2)>>8);
 8001e1c:	ebc1 71c1 	rsb	r1, r1, r1, lsl #31
 8001e20:	f3c1 11c7 	ubfx	r1, r1, #7, #8
 8001e24:	2013      	movs	r0, #19
 8001e26:	f7ff ff8d 	bl	8001d44 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_XG_OFFS_USRL, offset[0]*-2);
 8001e2a:	ebc7 17c7 	rsb	r7, r7, r7, lsl #7
 8001e2e:	0079      	lsls	r1, r7, #1
 8001e30:	f001 01fe 	and.w	r1, r1, #254	@ 0xfe
 8001e34:	2014      	movs	r0, #20
 8001e36:	f7ff ff85 	bl	8001d44 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_YG_OFFS_USRH, (offset[1]*-2)>>8);
 8001e3a:	ebc8 78c8 	rsb	r8, r8, r8, lsl #31
 8001e3e:	f3c8 11c7 	ubfx	r1, r8, #7, #8
 8001e42:	2015      	movs	r0, #21
 8001e44:	f7ff ff7e 	bl	8001d44 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_YG_OFFS_USRL, offset[1]*-2);
 8001e48:	ebc6 16c6 	rsb	r6, r6, r6, lsl #7
 8001e4c:	0071      	lsls	r1, r6, #1
 8001e4e:	f001 01fe 	and.w	r1, r1, #254	@ 0xfe
 8001e52:	2016      	movs	r0, #22
 8001e54:	f7ff ff76 	bl	8001d44 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_ZG_OFFS_USRH, (offset[2]*-2)>>8);
 8001e58:	ebc5 75c5 	rsb	r5, r5, r5, lsl #31
 8001e5c:	f3c5 11c7 	ubfx	r1, r5, #7, #8
 8001e60:	2017      	movs	r0, #23
 8001e62:	f7ff ff6f 	bl	8001d44 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_ZG_OFFS_USRL, offset[2]*-2);
 8001e66:	ebc4 14c4 	rsb	r4, r4, r4, lsl #7
 8001e6a:	0061      	lsls	r1, r4, #1
 8001e6c:	f001 01fe 	and.w	r1, r1, #254	@ 0xfe
 8001e70:	2018      	movs	r0, #24
 8001e72:	f7ff ff67 	bl	8001d44 <ICM20602_Write>
}
 8001e76:	b004      	add	sp, #16
 8001e78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08001e7c <ICM20602_Init>:
{
 8001e7c:	b530      	push	{r4, r5, lr}
 8001e7e:	b083      	sub	sp, #12
 8001e80:	4604      	mov	r4, r0
	dev->gyroXRaw = 	0.0f;
 8001e82:	2500      	movs	r5, #0
 8001e84:	8005      	strh	r5, [r0, #0]
	dev->gyroYRaw = 	0.0f;
 8001e86:	8045      	strh	r5, [r0, #2]
	dev->gyroZRaw = 	0.0f;
 8001e88:	8085      	strh	r5, [r0, #4]
	dev->accXRaw = 		0.0f;
 8001e8a:	80c5      	strh	r5, [r0, #6]
	dev->accYRaw = 		0.0f;
 8001e8c:	8105      	strh	r5, [r0, #8]
	dev->accZRaw = 		0.0f;
 8001e8e:	8145      	strh	r5, [r0, #10]
	dev->temperatureC = 0.0f;
 8001e90:	2300      	movs	r3, #0
 8001e92:	6243      	str	r3, [r0, #36]	@ 0x24
	Init_GPIO(PA,  10, IN, I_PP); // Init GPIO for the interrupt
 8001e94:	2302      	movs	r3, #2
 8001e96:	462a      	mov	r2, r5
 8001e98:	210a      	movs	r1, #10
 8001e9a:	2001      	movs	r0, #1
 8001e9c:	f000 faee 	bl	800247c <Init_GPIO>
	ICM20602_Write(ICM20602_REG_PWR_MGMT_1, 0x80);
 8001ea0:	2180      	movs	r1, #128	@ 0x80
 8001ea2:	206b      	movs	r0, #107	@ 0x6b
 8001ea4:	f7ff ff4e 	bl	8001d44 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_I2C_IF, 0x40);
 8001ea8:	2140      	movs	r1, #64	@ 0x40
 8001eaa:	2070      	movs	r0, #112	@ 0x70
 8001eac:	f7ff ff4a 	bl	8001d44 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_PWR_MGMT_1, 0x01);
 8001eb0:	2101      	movs	r1, #1
 8001eb2:	206b      	movs	r0, #107	@ 0x6b
 8001eb4:	f7ff ff46 	bl	8001d44 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_SMPLRT_DIV, 0x00);
 8001eb8:	4629      	mov	r1, r5
 8001eba:	2019      	movs	r0, #25
 8001ebc:	f7ff ff42 	bl	8001d44 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_CONFIG, 0x05);
 8001ec0:	2105      	movs	r1, #5
 8001ec2:	201a      	movs	r0, #26
 8001ec4:	f7ff ff3e 	bl	8001d44 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_GYRO_CONFIG, 0x018);
 8001ec8:	2118      	movs	r1, #24
 8001eca:	201b      	movs	r0, #27
 8001ecc:	f7ff ff3a 	bl	8001d44 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_ACCEL_CONFIG, 0x18);
 8001ed0:	2118      	movs	r1, #24
 8001ed2:	201c      	movs	r0, #28
 8001ed4:	f7ff ff36 	bl	8001d44 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_ACCEL_CONFIG2, 0x03); // Acc FCHOICE 1kHz(bit3-0), DLPF fc 44.8Hz(bit2:0-011)
 8001ed8:	2103      	movs	r1, #3
 8001eda:	201d      	movs	r0, #29
 8001edc:	f7ff ff32 	bl	8001d44 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_INT_ENABLE, 0x01);
 8001ee0:	2101      	movs	r1, #1
 8001ee2:	2038      	movs	r0, #56	@ 0x38
 8001ee4:	f7ff ff2e 	bl	8001d44 <ICM20602_Write>
	ICM20602_Read(ICM20602_REG_WHO_AM_I, rxData, 1);
 8001ee8:	2201      	movs	r2, #1
 8001eea:	a901      	add	r1, sp, #4
 8001eec:	2075      	movs	r0, #117	@ 0x75
 8001eee:	f7ff fe19 	bl	8001b24 <ICM20602_Read>
	ICM20602_Read(ICM20602_REG_I2C_IF, rxData, 1);
 8001ef2:	2201      	movs	r2, #1
 8001ef4:	a901      	add	r1, sp, #4
 8001ef6:	2070      	movs	r0, #112	@ 0x70
 8001ef8:	f7ff fe14 	bl	8001b24 <ICM20602_Read>
	ICM20602_Read(ICM20602_REG_PWR_MGMT_1, rxData, 1);
 8001efc:	2201      	movs	r2, #1
 8001efe:	a901      	add	r1, sp, #4
 8001f00:	206b      	movs	r0, #107	@ 0x6b
 8001f02:	f7ff fe0f 	bl	8001b24 <ICM20602_Read>
	ICM20602_Read(ICM20602_REG_SMPLRT_DIV, rxData, 1);
 8001f06:	2201      	movs	r2, #1
 8001f08:	a901      	add	r1, sp, #4
 8001f0a:	2019      	movs	r0, #25
 8001f0c:	f7ff fe0a 	bl	8001b24 <ICM20602_Read>
	ICM20602_Read(ICM20602_REG_CONFIG, rxData, 1);
 8001f10:	2201      	movs	r2, #1
 8001f12:	a901      	add	r1, sp, #4
 8001f14:	201a      	movs	r0, #26
 8001f16:	f7ff fe05 	bl	8001b24 <ICM20602_Read>
	ICM20602_Read(ICM20602_REG_ACCEL_CONFIG, rxData, 1);
 8001f1a:	2201      	movs	r2, #1
 8001f1c:	a901      	add	r1, sp, #4
 8001f1e:	201c      	movs	r0, #28
 8001f20:	f7ff fe00 	bl	8001b24 <ICM20602_Read>
	ICM20602_Read(ICM20602_REG_ACCEL_CONFIG2, rxData, 1);
 8001f24:	2201      	movs	r2, #1
 8001f26:	a901      	add	r1, sp, #4
 8001f28:	201d      	movs	r0, #29
 8001f2a:	f7ff fdfb 	bl	8001b24 <ICM20602_Read>
	ICM20602_Remove_DC_Offset(dev,2);
 8001f2e:	2102      	movs	r1, #2
 8001f30:	4620      	mov	r0, r4
 8001f32:	f7ff ff27 	bl	8001d84 <ICM20602_Remove_DC_Offset>
}
 8001f36:	4628      	mov	r0, r5
 8001f38:	b003      	add	sp, #12
 8001f3a:	bd30      	pop	{r4, r5, pc}
 8001f3c:	0000      	movs	r0, r0
	...

08001f40 <kalman1D>:
float kalmanUncertaintyAnglePitch =		2*2;

float kalman1DOutput[] = 				{0,0};

void kalman1D(float kalmanState, float kalmanUncertainty, float kalmanInput, float kalmanMeasurment)
{
 8001f40:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001f44:	4605      	mov	r5, r0
 8001f46:	460c      	mov	r4, r1
 8001f48:	461f      	mov	r7, r3
	kalmanState += kalmanInput*0.004;
 8001f4a:	4610      	mov	r0, r2
 8001f4c:	f7fe fa76 	bl	800043c <__aeabi_f2d>
 8001f50:	a31d      	add	r3, pc, #116	@ (adr r3, 8001fc8 <kalman1D+0x88>)
 8001f52:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f56:	f7fe fac9 	bl	80004ec <__aeabi_dmul>
 8001f5a:	4680      	mov	r8, r0
 8001f5c:	4689      	mov	r9, r1
 8001f5e:	4628      	mov	r0, r5
 8001f60:	f7fe fa6c 	bl	800043c <__aeabi_f2d>
 8001f64:	4642      	mov	r2, r8
 8001f66:	464b      	mov	r3, r9
 8001f68:	f7fe f90a 	bl	8000180 <__adddf3>
 8001f6c:	f7fe fdb6 	bl	8000adc <__aeabi_d2f>
 8001f70:	4606      	mov	r6, r0
	kalmanUncertainty += 0.004 * 0.004 * 4 * 4;
 8001f72:	4620      	mov	r0, r4
 8001f74:	f7fe fa62 	bl	800043c <__aeabi_f2d>
 8001f78:	a315      	add	r3, pc, #84	@ (adr r3, 8001fd0 <kalman1D+0x90>)
 8001f7a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f7e:	f7fe f8ff 	bl	8000180 <__adddf3>
 8001f82:	f7fe fdab 	bl	8000adc <__aeabi_d2f>
 8001f86:	4604      	mov	r4, r0
	float kalmanGain = kalmanUncertainty * 1 / (1 * kalmanUncertainty + 3 * 3);
 8001f88:	4913      	ldr	r1, [pc, #76]	@ (8001fd8 <kalman1D+0x98>)
 8001f8a:	f7fe fdfd 	bl	8000b88 <__addsf3>
 8001f8e:	4601      	mov	r1, r0
 8001f90:	4620      	mov	r0, r4
 8001f92:	f7fe ffb5 	bl	8000f00 <__aeabi_fdiv>
 8001f96:	4605      	mov	r5, r0
	kalmanState += kalmanGain * (kalmanMeasurment - kalmanState);
 8001f98:	4631      	mov	r1, r6
 8001f9a:	4638      	mov	r0, r7
 8001f9c:	f7fe fdf2 	bl	8000b84 <__aeabi_fsub>
 8001fa0:	4629      	mov	r1, r5
 8001fa2:	f7fe fef9 	bl	8000d98 <__aeabi_fmul>
 8001fa6:	4631      	mov	r1, r6
 8001fa8:	f7fe fdee 	bl	8000b88 <__addsf3>
 8001fac:	4606      	mov	r6, r0
	kalmanUncertainty = (1-kalmanGain) * kalmanUncertainty;
 8001fae:	4629      	mov	r1, r5
 8001fb0:	f04f 507e 	mov.w	r0, #1065353216	@ 0x3f800000
 8001fb4:	f7fe fde6 	bl	8000b84 <__aeabi_fsub>
 8001fb8:	4621      	mov	r1, r4
 8001fba:	f7fe feed 	bl	8000d98 <__aeabi_fmul>

	kalman1DOutput[0] = kalmanState;
 8001fbe:	4b07      	ldr	r3, [pc, #28]	@ (8001fdc <kalman1D+0x9c>)
 8001fc0:	601e      	str	r6, [r3, #0]
	kalman1DOutput[1] = kalmanUncertainty;
 8001fc2:	6058      	str	r0, [r3, #4]
}
 8001fc4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001fc8:	d2f1a9fc 	.word	0xd2f1a9fc
 8001fcc:	3f70624d 	.word	0x3f70624d
 8001fd0:	a0b5ed8d 	.word	0xa0b5ed8d
 8001fd4:	3f30c6f7 	.word	0x3f30c6f7
 8001fd8:	41100000 	.word	0x41100000
 8001fdc:	2000021c 	.word	0x2000021c

08001fe0 <getRollPitch>:

void getRollPitch(ICM20602 *dev)
{
 8001fe0:	b570      	push	{r4, r5, r6, lr}
 8001fe2:	4604      	mov	r4, r0
	  kalman1D(dev->kalmanAngleRoll, kalmanUncertaintyAngleRoll, dev->gyroX, dev->angleRoll);
 8001fe4:	4e0b      	ldr	r6, [pc, #44]	@ (8002014 <getRollPitch+0x34>)
 8001fe6:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8001fe8:	68c2      	ldr	r2, [r0, #12]
 8001fea:	6831      	ldr	r1, [r6, #0]
 8001fec:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8001fee:	f7ff ffa7 	bl	8001f40 <kalman1D>
	  dev->kalmanAngleRoll = kalman1DOutput[0];
 8001ff2:	4d09      	ldr	r5, [pc, #36]	@ (8002018 <getRollPitch+0x38>)
 8001ff4:	682b      	ldr	r3, [r5, #0]
 8001ff6:	6323      	str	r3, [r4, #48]	@ 0x30
	  kalmanUncertaintyAngleRoll = kalman1DOutput[1];
 8001ff8:	686b      	ldr	r3, [r5, #4]
 8001ffa:	6033      	str	r3, [r6, #0]
	  kalman1D(dev->kalmanAnglePitch, kalmanUncertaintyAnglePitch, dev->gyroY, dev->anglePitch);
 8001ffc:	4e07      	ldr	r6, [pc, #28]	@ (800201c <getRollPitch+0x3c>)
 8001ffe:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8002000:	6922      	ldr	r2, [r4, #16]
 8002002:	6831      	ldr	r1, [r6, #0]
 8002004:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 8002006:	f7ff ff9b 	bl	8001f40 <kalman1D>
	  dev->kalmanAnglePitch = kalman1DOutput[0];
 800200a:	682b      	ldr	r3, [r5, #0]
 800200c:	6363      	str	r3, [r4, #52]	@ 0x34
	  kalmanUncertaintyAnglePitch = kalman1DOutput[1];
 800200e:	686b      	ldr	r3, [r5, #4]
 8002010:	6033      	str	r3, [r6, #0]
}
 8002012:	bd70      	pop	{r4, r5, r6, pc}
 8002014:	20000004 	.word	0x20000004
 8002018:	2000021c 	.word	0x2000021c
 800201c:	20000000 	.word	0x20000000

08002020 <L76LM33_SendCommand>:
	return 1; // OK
}

uint8_t L76LM33_SendCommand(unsigned short usart_port, char *command) {

    if (command == NULL) {
 8002020:	b161      	cbz	r1, 800203c <L76LM33_SendCommand+0x1c>
uint8_t L76LM33_SendCommand(unsigned short usart_port, char *command) {
 8002022:	b538      	push	{r3, r4, r5, lr}
 8002024:	4604      	mov	r4, r0
 8002026:	460d      	mov	r5, r1
        return 0; // Error
    }
    USART_TX(usart_port, (uint8_t*)command, strlen(command));
 8002028:	4608      	mov	r0, r1
 800202a:	f7fe f89b 	bl	8000164 <strlen>
 800202e:	4602      	mov	r2, r0
 8002030:	4629      	mov	r1, r5
 8002032:	4620      	mov	r0, r4
 8002034:	f000 fb9e 	bl	8002774 <USART_TX>
    return 1; // OK
 8002038:	2001      	movs	r0, #1
}
 800203a:	bd38      	pop	{r3, r4, r5, pc}
        return 0; // Error
 800203c:	2000      	movs	r0, #0
}
 800203e:	4770      	bx	lr

08002040 <L76LM33_Init>:
uint8_t L76LM33_Init (unsigned short usart_port) {
 8002040:	b570      	push	{r4, r5, r6, lr}
 8002042:	b09a      	sub	sp, #104	@ 0x68
 8002044:	4606      	mov	r6, r0
	char PROTOCOL_SETRMS[] = "$PMTK314,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0*35\r\n";
 8002046:	f10d 0c2c 	add.w	ip, sp, #44	@ 0x2c
 800204a:	4c17      	ldr	r4, [pc, #92]	@ (80020a8 <L76LM33_Init+0x68>)
 800204c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800204e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8002052:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002054:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8002058:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800205a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800205e:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8002062:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8002066:	f8ac 2000 	strh.w	r2, [ip]
	char PROTOCOL_GPSSEARCHONLY[] = "$PMTK353,1,0,0,0,0*2A\r\n";
 800206a:	ac05      	add	r4, sp, #20
 800206c:	4d0f      	ldr	r5, [pc, #60]	@ (80020ac <L76LM33_Init+0x6c>)
 800206e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002070:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002072:	e895 0003 	ldmia.w	r5, {r0, r1}
 8002076:	e884 0003 	stmia.w	r4, {r0, r1}
	char PROTOCOL_NAVMODE[] = "PMTK886,2*2A\r\n";
 800207a:	4b0d      	ldr	r3, [pc, #52]	@ (80020b0 <L76LM33_Init+0x70>)
 800207c:	ac01      	add	r4, sp, #4
 800207e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8002080:	c407      	stmia	r4!, {r0, r1, r2}
 8002082:	f824 3b02 	strh.w	r3, [r4], #2
 8002086:	0c1b      	lsrs	r3, r3, #16
 8002088:	7023      	strb	r3, [r4, #0]
	L76LM33_SendCommand(usart_port, PROTOCOL_SETRMS);
 800208a:	a90b      	add	r1, sp, #44	@ 0x2c
 800208c:	4630      	mov	r0, r6
 800208e:	f7ff ffc7 	bl	8002020 <L76LM33_SendCommand>
	L76LM33_SendCommand(usart_port, PROTOCOL_GPSSEARCHONLY);
 8002092:	a905      	add	r1, sp, #20
 8002094:	4630      	mov	r0, r6
 8002096:	f7ff ffc3 	bl	8002020 <L76LM33_SendCommand>
	L76LM33_SendCommand(usart_port, PROTOCOL_NAVMODE);
 800209a:	a901      	add	r1, sp, #4
 800209c:	4630      	mov	r0, r6
 800209e:	f7ff ffbf 	bl	8002020 <L76LM33_SendCommand>
}
 80020a2:	2001      	movs	r0, #1
 80020a4:	b01a      	add	sp, #104	@ 0x68
 80020a6:	bd70      	pop	{r4, r5, r6, pc}
 80020a8:	0800bb2c 	.word	0x0800bb2c
 80020ac:	0800bb68 	.word	0x0800bb68
 80020b0:	0800bb80 	.word	0x0800bb80

080020b4 <L76LM33_Read>:

uint8_t L76LM33_Read(unsigned short usart_port, char *rx_data, GPS_Data *gps_data) {
 80020b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

    if (rx_data == NULL || gps_data == NULL) {
 80020b6:	2900      	cmp	r1, #0
 80020b8:	d037      	beq.n	800212a <L76LM33_Read+0x76>
 80020ba:	4605      	mov	r5, r0
 80020bc:	4614      	mov	r4, r2
 80020be:	460e      	mov	r6, r1
 80020c0:	2a00      	cmp	r2, #0
 80020c2:	d034      	beq.n	800212e <L76LM33_Read+0x7a>
        return 0; // Error
    }
    memset(rx_data, 0, NMEA_TRAME_RMC_SIZE);
 80020c4:	2744      	movs	r7, #68	@ 0x44
 80020c6:	463a      	mov	r2, r7
 80020c8:	2100      	movs	r1, #0
 80020ca:	4630      	mov	r0, r6
 80020cc:	f006 f952 	bl	8008374 <memset>
    USART_RX(usart_port, (uint8_t*)rx_data, NMEA_TRAME_RMC_SIZE);
 80020d0:	463a      	mov	r2, r7
 80020d2:	4631      	mov	r1, r6
 80020d4:	4628      	mov	r0, r5
 80020d6:	f000 fb93 	bl	8002800 <USART_RX>
    printf("NMEA sentence: %s\n", rx_data);
 80020da:	4631      	mov	r1, r6
 80020dc:	4815      	ldr	r0, [pc, #84]	@ (8002134 <L76LM33_Read+0x80>)
 80020de:	f006 f801 	bl	80080e4 <iprintf>
    if (NMEA_Decode_GPRMC(rx_data, gps_data) == 1) {
 80020e2:	4621      	mov	r1, r4
 80020e4:	4630      	mov	r0, r6
 80020e6:	f000 f83d 	bl	8002164 <NMEA_Decode_GPRMC>
 80020ea:	4605      	mov	r5, r0
 80020ec:	2801      	cmp	r0, #1
 80020ee:	d005      	beq.n	80020fc <L76LM33_Read+0x48>
        printf("Longitude: %ld %c\n", gps_data->longitude, (char)gps_data->longitude_indicator);
        printf("Speed: %ld\n", gps_data->speed_knots);
        printf("Angle: %ld\n", gps_data->track_angle);
        return 1; // OK
    } else {
        printf(" -> Failed to decode NMEA sentence.\n");
 80020f0:	4811      	ldr	r0, [pc, #68]	@ (8002138 <L76LM33_Read+0x84>)
 80020f2:	f006 f85f 	bl	80081b4 <puts>
        return 0; // Error
 80020f6:	2500      	movs	r5, #0
    }
}
 80020f8:	4628      	mov	r0, r5
 80020fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        printf("Time: %ld\n", gps_data->time);
 80020fc:	6821      	ldr	r1, [r4, #0]
 80020fe:	480f      	ldr	r0, [pc, #60]	@ (800213c <L76LM33_Read+0x88>)
 8002100:	f005 fff0 	bl	80080e4 <iprintf>
        printf("Latitude: %ld %c\n", gps_data->latitude, (char)gps_data->latitude_indicator);
 8002104:	7a22      	ldrb	r2, [r4, #8]
 8002106:	6861      	ldr	r1, [r4, #4]
 8002108:	480d      	ldr	r0, [pc, #52]	@ (8002140 <L76LM33_Read+0x8c>)
 800210a:	f005 ffeb 	bl	80080e4 <iprintf>
        printf("Longitude: %ld %c\n", gps_data->longitude, (char)gps_data->longitude_indicator);
 800210e:	7c22      	ldrb	r2, [r4, #16]
 8002110:	68e1      	ldr	r1, [r4, #12]
 8002112:	480c      	ldr	r0, [pc, #48]	@ (8002144 <L76LM33_Read+0x90>)
 8002114:	f005 ffe6 	bl	80080e4 <iprintf>
        printf("Speed: %ld\n", gps_data->speed_knots);
 8002118:	6961      	ldr	r1, [r4, #20]
 800211a:	480b      	ldr	r0, [pc, #44]	@ (8002148 <L76LM33_Read+0x94>)
 800211c:	f005 ffe2 	bl	80080e4 <iprintf>
        printf("Angle: %ld\n", gps_data->track_angle);
 8002120:	69a1      	ldr	r1, [r4, #24]
 8002122:	480a      	ldr	r0, [pc, #40]	@ (800214c <L76LM33_Read+0x98>)
 8002124:	f005 ffde 	bl	80080e4 <iprintf>
        return 1; // OK
 8002128:	e7e6      	b.n	80020f8 <L76LM33_Read+0x44>
        return 0; // Error
 800212a:	2500      	movs	r5, #0
 800212c:	e7e4      	b.n	80020f8 <L76LM33_Read+0x44>
 800212e:	2500      	movs	r5, #0
 8002130:	e7e2      	b.n	80020f8 <L76LM33_Read+0x44>
 8002132:	bf00      	nop
 8002134:	0800bb90 	.word	0x0800bb90
 8002138:	0800bbf0 	.word	0x0800bbf0
 800213c:	0800bba4 	.word	0x0800bba4
 8002140:	0800bbb0 	.word	0x0800bbb0
 8002144:	0800bbc4 	.word	0x0800bbc4
 8002148:	0800bbd8 	.word	0x0800bbd8
 800214c:	0800bbe4 	.word	0x0800bbe4

08002150 <NMEA_FloatToBytes>:
 */

#include "GAUL_Drivers/NMEA.h"

// Fonction pour convertir un float en tableau de uint8_t
int32_t NMEA_FloatToBytes(float value) {
 8002150:	b508      	push	{r3, lr}

    return (int32_t)value;
 8002152:	f7fe ff71 	bl	8001038 <__aeabi_f2iz>
}
 8002156:	bd08      	pop	{r3, pc}

08002158 <NMEA_CharToFloat>:

// Fonction pour convertir une chaîne de caractères en float
float NMEA_CharToFloat(char *data) {
 8002158:	b508      	push	{r3, lr}

    return (float)atof(data);
 800215a:	f004 fbde 	bl	800691a <atof>
 800215e:	f7fe fcbd 	bl	8000adc <__aeabi_d2f>
}
 8002162:	bd08      	pop	{r3, pc}

08002164 <NMEA_Decode_GPRMC>:

// Fonction pour décoder une trame NMEA GPRMC
uint8_t NMEA_Decode_GPRMC(const char *nmea_sentence, GPS_Data *gps_data) {

    if (!nmea_sentence || !gps_data) {
 8002164:	2800      	cmp	r0, #0
 8002166:	d06b      	beq.n	8002240 <NMEA_Decode_GPRMC+0xdc>
uint8_t NMEA_Decode_GPRMC(const char *nmea_sentence, GPS_Data *gps_data) {
 8002168:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800216a:	460d      	mov	r5, r1
    if (!nmea_sentence || !gps_data) {
 800216c:	2900      	cmp	r1, #0
 800216e:	d069      	beq.n	8002244 <NMEA_Decode_GPRMC+0xe0>
        return 0;
    }

    char *copy = strdup(nmea_sentence);
 8002170:	f006 f908 	bl	8008384 <strdup>
    if (!copy) {
 8002174:	4606      	mov	r6, r0
 8002176:	2800      	cmp	r0, #0
 8002178:	d066      	beq.n	8002248 <NMEA_Decode_GPRMC+0xe4>
    char *token;
    int field_index = 0;
    int valid = 1;

    // Valeurs par default
	gps_data->latitude = DEFAULT_LATITUDE;
 800217a:	2400      	movs	r4, #0
 800217c:	606c      	str	r4, [r5, #4]
	gps_data->latitude_indicator = DEFAULT_INDICATOR;
 800217e:	2338      	movs	r3, #56	@ 0x38
 8002180:	722b      	strb	r3, [r5, #8]
	gps_data->longitude = DEFAULT_LONGITUDE;
 8002182:	60ec      	str	r4, [r5, #12]
	gps_data->longitude_indicator = DEFAULT_INDICATOR;
 8002184:	742b      	strb	r3, [r5, #16]
	gps_data->speed_knots = DEFAULT_SPEED;
 8002186:	616c      	str	r4, [r5, #20]
	gps_data->track_angle = DEFAULT_ANGLE;
 8002188:	61ac      	str	r4, [r5, #24]

    // Extraire chaque champ de la trame
    token = strtok(copy, ",");
 800218a:	4930      	ldr	r1, [pc, #192]	@ (800224c <NMEA_Decode_GPRMC+0xe8>)
 800218c:	f006 f928 	bl	80083e0 <strtok>
    int valid = 1;
 8002190:	2701      	movs	r7, #1
    while (token != NULL && valid) {
 8002192:	e00f      	b.n	80021b4 <NMEA_Decode_GPRMC+0x50>
        switch (field_index) {
            case 0:
                if (strcmp(token, "$GPRMC") != 0) {
 8002194:	492e      	ldr	r1, [pc, #184]	@ (8002250 <NMEA_Decode_GPRMC+0xec>)
 8002196:	f7fd ffdb 	bl	8000150 <strcmp>
 800219a:	b130      	cbz	r0, 80021aa <NMEA_Decode_GPRMC+0x46>
                    valid = 0;
 800219c:	4627      	mov	r7, r4
 800219e:	e004      	b.n	80021aa <NMEA_Decode_GPRMC+0x46>
                }
                break;
            case 1:
            	gps_data->time = NMEA_FloatToBytes(NMEA_CharToFloat(token));
 80021a0:	f7ff ffda 	bl	8002158 <NMEA_CharToFloat>
 80021a4:	f7ff ffd4 	bl	8002150 <NMEA_FloatToBytes>
 80021a8:	6028      	str	r0, [r5, #0]
                break;
            case 8:
                gps_data->track_angle = NMEA_FloatToBytes(NMEA_CharToFloat(token));
                break;
        }
        token = strtok(NULL, ",");
 80021aa:	4928      	ldr	r1, [pc, #160]	@ (800224c <NMEA_Decode_GPRMC+0xe8>)
 80021ac:	2000      	movs	r0, #0
 80021ae:	f006 f917 	bl	80083e0 <strtok>
        field_index++;
 80021b2:	3401      	adds	r4, #1
    while (token != NULL && valid) {
 80021b4:	2800      	cmp	r0, #0
 80021b6:	d03e      	beq.n	8002236 <NMEA_Decode_GPRMC+0xd2>
 80021b8:	2f00      	cmp	r7, #0
 80021ba:	d03c      	beq.n	8002236 <NMEA_Decode_GPRMC+0xd2>
        switch (field_index) {
 80021bc:	2c08      	cmp	r4, #8
 80021be:	d8f4      	bhi.n	80021aa <NMEA_Decode_GPRMC+0x46>
 80021c0:	a301      	add	r3, pc, #4	@ (adr r3, 80021c8 <NMEA_Decode_GPRMC+0x64>)
 80021c2:	f853 f024 	ldr.w	pc, [r3, r4, lsl #2]
 80021c6:	bf00      	nop
 80021c8:	08002195 	.word	0x08002195
 80021cc:	080021a1 	.word	0x080021a1
 80021d0:	080021ed 	.word	0x080021ed
 80021d4:	080021fb 	.word	0x080021fb
 80021d8:	08002207 	.word	0x08002207
 80021dc:	0800220d 	.word	0x0800220d
 80021e0:	08002219 	.word	0x08002219
 80021e4:	0800221f 	.word	0x0800221f
 80021e8:	0800222b 	.word	0x0800222b
                if (strcmp(token, "A") != 0) {
 80021ec:	4919      	ldr	r1, [pc, #100]	@ (8002254 <NMEA_Decode_GPRMC+0xf0>)
 80021ee:	f7fd ffaf 	bl	8000150 <strcmp>
 80021f2:	2800      	cmp	r0, #0
 80021f4:	d0d9      	beq.n	80021aa <NMEA_Decode_GPRMC+0x46>
                    valid = 0;
 80021f6:	2700      	movs	r7, #0
 80021f8:	e7d7      	b.n	80021aa <NMEA_Decode_GPRMC+0x46>
            	gps_data->latitude = NMEA_FloatToBytes(NMEA_CharToFloat(token));
 80021fa:	f7ff ffad 	bl	8002158 <NMEA_CharToFloat>
 80021fe:	f7ff ffa7 	bl	8002150 <NMEA_FloatToBytes>
 8002202:	6068      	str	r0, [r5, #4]
                break;
 8002204:	e7d1      	b.n	80021aa <NMEA_Decode_GPRMC+0x46>
                gps_data->latitude_indicator = (uint8_t)token[0];
 8002206:	7803      	ldrb	r3, [r0, #0]
 8002208:	722b      	strb	r3, [r5, #8]
                break;
 800220a:	e7ce      	b.n	80021aa <NMEA_Decode_GPRMC+0x46>
                gps_data->longitude = NMEA_FloatToBytes(NMEA_CharToFloat(token));
 800220c:	f7ff ffa4 	bl	8002158 <NMEA_CharToFloat>
 8002210:	f7ff ff9e 	bl	8002150 <NMEA_FloatToBytes>
 8002214:	60e8      	str	r0, [r5, #12]
                break;
 8002216:	e7c8      	b.n	80021aa <NMEA_Decode_GPRMC+0x46>
                gps_data->longitude_indicator = (uint8_t)token[0];
 8002218:	7803      	ldrb	r3, [r0, #0]
 800221a:	742b      	strb	r3, [r5, #16]
                break;
 800221c:	e7c5      	b.n	80021aa <NMEA_Decode_GPRMC+0x46>
                gps_data->speed_knots = NMEA_FloatToBytes(NMEA_CharToFloat(token));
 800221e:	f7ff ff9b 	bl	8002158 <NMEA_CharToFloat>
 8002222:	f7ff ff95 	bl	8002150 <NMEA_FloatToBytes>
 8002226:	6168      	str	r0, [r5, #20]
                break;
 8002228:	e7bf      	b.n	80021aa <NMEA_Decode_GPRMC+0x46>
                gps_data->track_angle = NMEA_FloatToBytes(NMEA_CharToFloat(token));
 800222a:	f7ff ff95 	bl	8002158 <NMEA_CharToFloat>
 800222e:	f7ff ff8f 	bl	8002150 <NMEA_FloatToBytes>
 8002232:	61a8      	str	r0, [r5, #24]
                break;
 8002234:	e7b9      	b.n	80021aa <NMEA_Decode_GPRMC+0x46>
    }

    free(copy);
 8002236:	4630      	mov	r0, r6
 8002238:	f004 fb7a 	bl	8006930 <free>
    return valid;
 800223c:	b2f8      	uxtb	r0, r7
}
 800223e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return 0;
 8002240:	2000      	movs	r0, #0
}
 8002242:	4770      	bx	lr
        return 0;
 8002244:	2000      	movs	r0, #0
 8002246:	e7fa      	b.n	800223e <NMEA_Decode_GPRMC+0xda>
        return 0;
 8002248:	2000      	movs	r0, #0
 800224a:	e7f8      	b.n	800223e <NMEA_Decode_GPRMC+0xda>
 800224c:	0800bc14 	.word	0x0800bc14
 8002250:	0800bc18 	.word	0x0800bc18
 8002254:	0800bc20 	.word	0x0800bc20

08002258 <Pyro_Init>:
 *      Author: gagno
 */

#include "GAUL_Drivers/Pyros.h"

void Pyro_Init(void) {
 8002258:	b508      	push	{r3, lr}
	// Pyros
	Init_GPIO(PB, 4, OUT2, O_GP_PP); // PyroON0
 800225a:	2300      	movs	r3, #0
 800225c:	2202      	movs	r2, #2
 800225e:	2104      	movs	r1, #4
 8002260:	4610      	mov	r0, r2
 8002262:	f000 f90b 	bl	800247c <Init_GPIO>
	Init_GPIO(PB, 5, OUT2, O_GP_PP); // PyroON1
 8002266:	2300      	movs	r3, #0
 8002268:	2202      	movs	r2, #2
 800226a:	2105      	movs	r1, #5
 800226c:	4610      	mov	r0, r2
 800226e:	f000 f905 	bl	800247c <Init_GPIO>
	Init_GPIO(PA, 15, OUT2, O_GP_PP); // Pyro_Test~
 8002272:	2300      	movs	r3, #0
 8002274:	2202      	movs	r2, #2
 8002276:	210f      	movs	r1, #15
 8002278:	2001      	movs	r0, #1
 800227a:	f000 f8ff 	bl	800247c <Init_GPIO>
	// Set Pyro_Test~ (inverse) et Pyros_ON LOW
	Write_GPIO(PA, 15, HIGH);
 800227e:	2201      	movs	r2, #1
 8002280:	210f      	movs	r1, #15
 8002282:	4610      	mov	r0, r2
 8002284:	f000 f944 	bl	8002510 <Write_GPIO>
	Write_GPIO(PB, 4, LOW);
 8002288:	2200      	movs	r2, #0
 800228a:	2104      	movs	r1, #4
 800228c:	2002      	movs	r0, #2
 800228e:	f000 f93f 	bl	8002510 <Write_GPIO>
	Write_GPIO(PB, 5, LOW);
 8002292:	2200      	movs	r2, #0
 8002294:	2105      	movs	r1, #5
 8002296:	2002      	movs	r0, #2
 8002298:	f000 f93a 	bl	8002510 <Write_GPIO>
}
 800229c:	bd08      	pop	{r3, pc}

0800229e <RFD900_Send>:
    devRFD->data = NULL;
    devRFD->crc = 0x00;
    devRFD->size = 0x00;
}

uint8_t RFD900_Send(RFD900 *devRFD, unsigned short usart_port) {
 800229e:	b530      	push	{r4, r5, lr}
 80022a0:	b083      	sub	sp, #12
 80022a2:	4605      	mov	r5, r0
 80022a4:	460c      	mov	r4, r1

	uint8_t delim = 0x24;
 80022a6:	2324      	movs	r3, #36	@ 0x24
 80022a8:	f88d 3007 	strb.w	r3, [sp, #7]
	uint8_t crc_delim = 0x2a;
 80022ac:	232a      	movs	r3, #42	@ 0x2a
 80022ae:	f88d 3006 	strb.w	r3, [sp, #6]

	USART_TX(usart_port, &delim, 1); // Start
 80022b2:	2201      	movs	r2, #1
 80022b4:	f10d 0107 	add.w	r1, sp, #7
 80022b8:	4620      	mov	r0, r4
 80022ba:	f000 fa5b 	bl	8002774 <USART_TX>
	USART_TX(usart_port, &devRFD->header, 1);
 80022be:	2201      	movs	r2, #1
 80022c0:	4629      	mov	r1, r5
 80022c2:	4620      	mov	r0, r4
 80022c4:	f000 fa56 	bl	8002774 <USART_TX>
	USART_TX(usart_port, devRFD->data, devRFD->size);
 80022c8:	7b2a      	ldrb	r2, [r5, #12]
 80022ca:	6869      	ldr	r1, [r5, #4]
 80022cc:	4620      	mov	r0, r4
 80022ce:	f000 fa51 	bl	8002774 <USART_TX>
	USART_TX(usart_port, &crc_delim, 1); // CRC
 80022d2:	2201      	movs	r2, #1
 80022d4:	f10d 0106 	add.w	r1, sp, #6
 80022d8:	4620      	mov	r0, r4
 80022da:	f000 fa4b 	bl	8002774 <USART_TX>
	USART_TX(usart_port, devRFD->crc, 2);
 80022de:	2202      	movs	r2, #2
 80022e0:	68a9      	ldr	r1, [r5, #8]
 80022e2:	4620      	mov	r0, r4
 80022e4:	f000 fa46 	bl	8002774 <USART_TX>
	USART_TX(usart_port, &delim, 1); // End
 80022e8:	2201      	movs	r2, #1
 80022ea:	f10d 0107 	add.w	r1, sp, #7
 80022ee:	4620      	mov	r0, r4
 80022f0:	f000 fa40 	bl	8002774 <USART_TX>

	return 1; // OK
}
 80022f4:	2001      	movs	r0, #1
 80022f6:	b003      	add	sp, #12
 80022f8:	bd30      	pop	{r4, r5, pc}
	...

080022fc <ws2812_timer2_init>:
static uint16_t ws2812_gpio_set_bits = 0;
static uint16_t dma_buffer[DMA_BUFFER_SIZE];


static void ws2812_timer2_init(void)
{
 80022fc:	b570      	push	{r4, r5, r6, lr}
 80022fe:	b08e      	sub	sp, #56	@ 0x38
    TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8002300:	2400      	movs	r4, #0
 8002302:	940a      	str	r4, [sp, #40]	@ 0x28
 8002304:	940b      	str	r4, [sp, #44]	@ 0x2c
 8002306:	940c      	str	r4, [sp, #48]	@ 0x30
 8002308:	940d      	str	r4, [sp, #52]	@ 0x34
    TIM_MasterConfigTypeDef sMasterConfig = {0};
 800230a:	9408      	str	r4, [sp, #32]
 800230c:	9409      	str	r4, [sp, #36]	@ 0x24
    TIM_OC_InitTypeDef sConfigOC = {0};
 800230e:	9401      	str	r4, [sp, #4]
 8002310:	9402      	str	r4, [sp, #8]
 8002312:	9403      	str	r4, [sp, #12]
 8002314:	9404      	str	r4, [sp, #16]
 8002316:	9405      	str	r4, [sp, #20]
 8002318:	9406      	str	r4, [sp, #24]
 800231a:	9407      	str	r4, [sp, #28]

    htimer2.Instance = TIM2;
 800231c:	4d1a      	ldr	r5, [pc, #104]	@ (8002388 <ws2812_timer2_init+0x8c>)
 800231e:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8002322:	602b      	str	r3, [r5, #0]
    htimer2.Init.Prescaler = 0;
 8002324:	606c      	str	r4, [r5, #4]
    htimer2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002326:	60ac      	str	r4, [r5, #8]
    htimer2.Init.Period = WS2812_TIMER_PERIOD;
 8002328:	235a      	movs	r3, #90	@ 0x5a
 800232a:	60eb      	str	r3, [r5, #12]

    htimer2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800232c:	612c      	str	r4, [r5, #16]
    htimer2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800232e:	61ac      	str	r4, [r5, #24]
    HAL_TIM_Base_Init(&htimer2);
 8002330:	4628      	mov	r0, r5
 8002332:	f002 fff5 	bl	8005320 <HAL_TIM_Base_Init>

    sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002336:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800233a:	930a      	str	r3, [sp, #40]	@ 0x28
    HAL_TIM_ConfigClockSource(&htimer2, &sClockSourceConfig);
 800233c:	a90a      	add	r1, sp, #40	@ 0x28
 800233e:	4628      	mov	r0, r5
 8002340:	f003 f958 	bl	80055f4 <HAL_TIM_ConfigClockSource>
    HAL_TIM_PWM_Init(&htimer2);
 8002344:	4628      	mov	r0, r5
 8002346:	f003 f83a 	bl	80053be <HAL_TIM_PWM_Init>
    sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800234a:	9408      	str	r4, [sp, #32]
    sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800234c:	9409      	str	r4, [sp, #36]	@ 0x24
    HAL_TIMEx_MasterConfigSynchronization(&htimer2, &sMasterConfig);
 800234e:	a908      	add	r1, sp, #32
 8002350:	4628      	mov	r0, r5
 8002352:	f003 fc97 	bl	8005c84 <HAL_TIMEx_MasterConfigSynchronization>

    sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8002356:	2660      	movs	r6, #96	@ 0x60
 8002358:	9601      	str	r6, [sp, #4]

    sConfigOC.Pulse = WS2812_TIMER_PWM_CH1_TIME;
 800235a:	231c      	movs	r3, #28
 800235c:	9302      	str	r3, [sp, #8]
    sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800235e:	9403      	str	r4, [sp, #12]
    sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8002360:	9405      	str	r4, [sp, #20]
    HAL_TIM_PWM_ConfigChannel(&htimer2, &sConfigOC, TIM_CHANNEL_1);
 8002362:	4622      	mov	r2, r4
 8002364:	a901      	add	r1, sp, #4
 8002366:	4628      	mov	r0, r5
 8002368:	f003 f882 	bl	8005470 <HAL_TIM_PWM_ConfigChannel>
    sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800236c:	9601      	str	r6, [sp, #4]

    sConfigOC.Pulse = WS2812_TIMER_PWM_CH2_TIME;
 800236e:	2339      	movs	r3, #57	@ 0x39
 8002370:	9302      	str	r3, [sp, #8]
    sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8002372:	9403      	str	r4, [sp, #12]
    sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8002374:	9405      	str	r4, [sp, #20]
    HAL_TIM_PWM_ConfigChannel(&htimer2, &sConfigOC, TIM_CHANNEL_2);
 8002376:	2204      	movs	r2, #4
 8002378:	eb0d 0102 	add.w	r1, sp, r2
 800237c:	4628      	mov	r0, r5
 800237e:	f003 f877 	bl	8005470 <HAL_TIM_PWM_ConfigChannel>
}
 8002382:	b00e      	add	sp, #56	@ 0x38
 8002384:	bd70      	pop	{r4, r5, r6, pc}
 8002386:	bf00      	nop
 8002388:	20000224 	.word	0x20000224

0800238c <WS2812_Init>:
	__HAL_DMA_DISABLE(&hdma_tim2_pwm_ch1);
	__HAL_DMA_DISABLE(&hdma_tim2_pwm_ch2);
}

void WS2812_Init()
{
 800238c:	b500      	push	{lr}
 800238e:	b083      	sub	sp, #12
    /* DMA controller clock enable */
    __HAL_RCC_DMA1_CLK_ENABLE();
 8002390:	4b0e      	ldr	r3, [pc, #56]	@ (80023cc <WS2812_Init+0x40>)
 8002392:	695a      	ldr	r2, [r3, #20]
 8002394:	f042 0201 	orr.w	r2, r2, #1
 8002398:	615a      	str	r2, [r3, #20]
 800239a:	695b      	ldr	r3, [r3, #20]
 800239c:	f003 0301 	and.w	r3, r3, #1
 80023a0:	9301      	str	r3, [sp, #4]
 80023a2:	9b01      	ldr	r3, [sp, #4]

    /* DMA interrupt init, not that we're using it... */
    HAL_NVIC_SetPriority(DMA1_Channel2_IRQn, 0, 0);
 80023a4:	2200      	movs	r2, #0
 80023a6:	4611      	mov	r1, r2
 80023a8:	200c      	movs	r0, #12
 80023aa:	f001 ffb2 	bl	8004312 <HAL_NVIC_SetPriority>
    HAL_NVIC_SetPriority(DMA1_Channel5_IRQn, 0, 0);
 80023ae:	2200      	movs	r2, #0
 80023b0:	4611      	mov	r1, r2
 80023b2:	200f      	movs	r0, #15
 80023b4:	f001 ffad 	bl	8004312 <HAL_NVIC_SetPriority>
    HAL_NVIC_SetPriority(DMA1_Channel7_IRQn, 0, 0);
 80023b8:	2200      	movs	r2, #0
 80023ba:	4611      	mov	r1, r2
 80023bc:	2011      	movs	r0, #17
 80023be:	f001 ffa8 	bl	8004312 <HAL_NVIC_SetPriority>

    ws2812_timer2_init();
 80023c2:	f7ff ff9b 	bl	80022fc <ws2812_timer2_init>
}
 80023c6:	b003      	add	sp, #12
 80023c8:	f85d fb04 	ldr.w	pc, [sp], #4
 80023cc:	40021000 	.word	0x40021000

080023d0 <ADC_Start>:


#include "GAUL_Drivers/Low_Level_Drivers/ADC_driver.h"


uint8_t ADC_Start(ADC_HandleTypeDef *hadc) {
 80023d0:	b508      	push	{r3, lr}

	HAL_ADC_Start(hadc);
 80023d2:	f001 fa99 	bl	8003908 <HAL_ADC_Start>
	return 1; // OK
}
 80023d6:	2001      	movs	r0, #1
 80023d8:	bd08      	pop	{r3, pc}

080023da <ADC_Calibration>:

uint8_t ADC_Calibration(ADC_HandleTypeDef *hadc) {
 80023da:	b508      	push	{r3, lr}

	HAL_ADCEx_Calibration_Start(hadc);
 80023dc:	f001 fe14 	bl	8004008 <HAL_ADCEx_Calibration_Start>
	return 1; // OK
}
 80023e0:	2001      	movs	r0, #1
 80023e2:	bd08      	pop	{r3, pc}

080023e4 <ADC_Stop>:

uint8_t ADC_Stop(ADC_HandleTypeDef *hadc) {
 80023e4:	b508      	push	{r3, lr}

	HAL_ADC_Stop(hadc);
 80023e6:	f001 fb3d 	bl	8003a64 <HAL_ADC_Stop>
	return 1; // OK
}
 80023ea:	2001      	movs	r0, #1
 80023ec:	bd08      	pop	{r3, pc}
	...

080023f0 <ADC_Sampling>:

uint32_t ADC_Sampling (ADC_HandleTypeDef *hadc) {
 80023f0:	b538      	push	{r3, r4, r5, lr}

	if (!(ADC1->CR2 & ADC_CR2_ADON)) {
 80023f2:	4b0b      	ldr	r3, [pc, #44]	@ (8002420 <ADC_Sampling+0x30>)
 80023f4:	689b      	ldr	r3, [r3, #8]
 80023f6:	f013 0f01 	tst.w	r3, #1
 80023fa:	d00d      	beq.n	8002418 <ADC_Sampling+0x28>
 80023fc:	4604      	mov	r4, r0
		return 0xFFFF;
	}
	HAL_ADC_PollForConversion(hadc, HAL_MAX_DELAY); // Timeout peut etre ajuste
 80023fe:	f04f 31ff 	mov.w	r1, #4294967295
 8002402:	f001 fb5b 	bl	8003abc <HAL_ADC_PollForConversion>
	uint32_t adc_value = HAL_ADC_GetValue(hadc);
 8002406:	4620      	mov	r0, r4
 8002408:	f001 fc5e 	bl	8003cc8 <HAL_ADC_GetValue>
 800240c:	4605      	mov	r5, r0
	HAL_ADC_Stop(hadc);
 800240e:	4620      	mov	r0, r4
 8002410:	f001 fb28 	bl	8003a64 <HAL_ADC_Stop>

	return adc_value;
}
 8002414:	4628      	mov	r0, r5
 8002416:	bd38      	pop	{r3, r4, r5, pc}
		return 0xFFFF;
 8002418:	f64f 75ff 	movw	r5, #65535	@ 0xffff
 800241c:	e7fa      	b.n	8002414 <ADC_Sampling+0x24>
 800241e:	bf00      	nop
 8002420:	40012400 	.word	0x40012400

08002424 <CRC16_Calculate>:

#include "main.h"
#include "GAUL_Drivers/Low_Level_Drivers/CRC_driver.h"


uint16_t CRC16_Calculate(uint8_t *data, uint8_t size) {
 8002424:	b500      	push	{lr}
 8002426:	4686      	mov	lr, r0

    CRC->CR = CRC_CR_RESET;
 8002428:	4b13      	ldr	r3, [pc, #76]	@ (8002478 <CRC16_Calculate+0x54>)
 800242a:	2201      	movs	r2, #1
 800242c:	609a      	str	r2, [r3, #8]
    CRC->DR = 0xFFFF;
 800242e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8002432:	601a      	str	r2, [r3, #0]

    uint16_t crc = CRC->DR;
 8002434:	6818      	ldr	r0, [r3, #0]
 8002436:	b280      	uxth	r0, r0

    for(uint8_t i = 0; i < size; ++i)
 8002438:	f04f 0c00 	mov.w	ip, #0
 800243c:	e012      	b.n	8002464 <CRC16_Calculate+0x40>
            {
                crc = (crc << 1) ^ POLYNOMIAL_COMPUTATION;
            }
            else
            {
                crc <<= 1;
 800243e:	0040      	lsls	r0, r0, #1
 8002440:	b280      	uxth	r0, r0
        for(uint8_t j = 0; j < 8; ++j)
 8002442:	3301      	adds	r3, #1
 8002444:	b2db      	uxtb	r3, r3
 8002446:	2b07      	cmp	r3, #7
 8002448:	d808      	bhi.n	800245c <CRC16_Calculate+0x38>
            if (crc & 0x8000)
 800244a:	f410 4f00 	tst.w	r0, #32768	@ 0x8000
 800244e:	d0f6      	beq.n	800243e <CRC16_Calculate+0x1a>
                crc = (crc << 1) ^ POLYNOMIAL_COMPUTATION;
 8002450:	f241 0221 	movw	r2, #4129	@ 0x1021
 8002454:	ea82 0040 	eor.w	r0, r2, r0, lsl #1
 8002458:	b280      	uxth	r0, r0
 800245a:	e7f2      	b.n	8002442 <CRC16_Calculate+0x1e>
    for(uint8_t i = 0; i < size; ++i)
 800245c:	f10c 0c01 	add.w	ip, ip, #1
 8002460:	fa5f fc8c 	uxtb.w	ip, ip
 8002464:	458c      	cmp	ip, r1
 8002466:	d205      	bcs.n	8002474 <CRC16_Calculate+0x50>
        crc ^= (uint16_t)(data[i]) << 8;
 8002468:	f81e 300c 	ldrb.w	r3, [lr, ip]
 800246c:	ea80 2003 	eor.w	r0, r0, r3, lsl #8
        for(uint8_t j = 0; j < 8; ++j)
 8002470:	2300      	movs	r3, #0
 8002472:	e7e8      	b.n	8002446 <CRC16_Calculate+0x22>
            }
        }
    }

    return crc;
}
 8002474:	f85d fb04 	ldr.w	pc, [sp], #4
 8002478:	40023000 	.word	0x40023000

0800247c <Init_GPIO>:
#include "GAUL_Drivers/Low_Level_Drivers/GPIO_driver.h"

void Init_GPIO(unsigned short port, unsigned short pin, unsigned short dir, unsigned short opt)
{
 800247c:	b510      	push	{r4, lr}
 volatile unsigned long * CR;
 unsigned short tPIN = pin;
 unsigned short offset = 0x00;

	if(pin > 7)
 800247e:	2907      	cmp	r1, #7
 8002480:	d904      	bls.n	800248c <Init_GPIO+0x10>
		{
			tPIN -= 8;
 8002482:	3908      	subs	r1, #8
 8002484:	b289      	uxth	r1, r1
			offset = 0x01;
 8002486:	f04f 0e01 	mov.w	lr, #1
 800248a:	e001      	b.n	8002490 <Init_GPIO+0x14>
 unsigned short offset = 0x00;
 800248c:	f04f 0e00 	mov.w	lr, #0
		}

	if(port == 1)
 8002490:	2801      	cmp	r0, #1
 8002492:	d00f      	beq.n	80024b4 <Init_GPIO+0x38>
		{
			RCC_APB2ENR |= 4; //// Enabling PORT A
			CR = (volatile unsigned long *) (&GPIO_A + offset);
		}
	else if(port == 2)
 8002494:	2802      	cmp	r0, #2
 8002496:	d02d      	beq.n	80024f4 <Init_GPIO+0x78>
		{
			RCC_APB2ENR |= 8; //// Enabling PORT A
			CR = (volatile unsigned long *) (&GPIO_B + offset);
		}
	else if(port == 3)
 8002498:	2803      	cmp	r0, #3
 800249a:	d116      	bne.n	80024ca <Init_GPIO+0x4e>
		{
			RCC_APB2ENR |= 0x10; //// Enabling PORT A
 800249c:	4c1b      	ldr	r4, [pc, #108]	@ (800250c <Init_GPIO+0x90>)
 800249e:	69a0      	ldr	r0, [r4, #24]
 80024a0:	f040 0010 	orr.w	r0, r0, #16
 80024a4:	61a0      	str	r0, [r4, #24]
			CR = (volatile unsigned long *) (&GPIO_C + offset);
 80024a6:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 80024aa:	f10e 4c80 	add.w	ip, lr, #1073741824	@ 0x40000000
 80024ae:	f50c 3c88 	add.w	ip, ip, #69632	@ 0x11000
 80024b2:	e00a      	b.n	80024ca <Init_GPIO+0x4e>
			RCC_APB2ENR |= 4; //// Enabling PORT A
 80024b4:	4c15      	ldr	r4, [pc, #84]	@ (800250c <Init_GPIO+0x90>)
 80024b6:	69a0      	ldr	r0, [r4, #24]
 80024b8:	f040 0004 	orr.w	r0, r0, #4
 80024bc:	61a0      	str	r0, [r4, #24]
			CR = (volatile unsigned long *) (&GPIO_A + offset);
 80024be:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 80024c2:	f10e 4c80 	add.w	ip, lr, #1073741824	@ 0x40000000
 80024c6:	f50c 3c84 	add.w	ip, ip, #67584	@ 0x10800
		}

		*CR &= ~(0xf<<(tPIN)*4); ///Reset the taget pin
 80024ca:	f8dc 0000 	ldr.w	r0, [ip]
 80024ce:	0089      	lsls	r1, r1, #2
 80024d0:	f04f 0e0f 	mov.w	lr, #15
 80024d4:	fa0e fe01 	lsl.w	lr, lr, r1
 80024d8:	ea20 000e 	bic.w	r0, r0, lr
 80024dc:	f8cc 0000 	str.w	r0, [ip]
		*CR |= ((dir <<(tPIN*4)) | (opt<<(tPIN*4+2))); //// Set up the direction and the option of the PIN
 80024e0:	f8dc 0000 	ldr.w	r0, [ip]
 80024e4:	408a      	lsls	r2, r1
 80024e6:	3102      	adds	r1, #2
 80024e8:	408b      	lsls	r3, r1
 80024ea:	431a      	orrs	r2, r3
 80024ec:	4302      	orrs	r2, r0
 80024ee:	f8cc 2000 	str.w	r2, [ip]
}
 80024f2:	bd10      	pop	{r4, pc}
			RCC_APB2ENR |= 8; //// Enabling PORT A
 80024f4:	4c05      	ldr	r4, [pc, #20]	@ (800250c <Init_GPIO+0x90>)
 80024f6:	69a0      	ldr	r0, [r4, #24]
 80024f8:	f040 0008 	orr.w	r0, r0, #8
 80024fc:	61a0      	str	r0, [r4, #24]
			CR = (volatile unsigned long *) (&GPIO_B + offset);
 80024fe:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8002502:	f10e 4c80 	add.w	ip, lr, #1073741824	@ 0x40000000
 8002506:	f50c 3c86 	add.w	ip, ip, #68608	@ 0x10c00
 800250a:	e7de      	b.n	80024ca <Init_GPIO+0x4e>
 800250c:	40021000 	.word	0x40021000

08002510 <Write_GPIO>:
{
		volatile unsigned long * ODR;
		unsigned long offset = 0x03;


	if(port == 1)
 8002510:	2801      	cmp	r0, #1
 8002512:	d005      	beq.n	8002520 <Write_GPIO+0x10>
		{
			ODR = (volatile unsigned long *) (&GPIO_A + offset);
		}
	else if(port == 2)
 8002514:	2802      	cmp	r0, #2
 8002516:	d00a      	beq.n	800252e <Write_GPIO+0x1e>
		{
			ODR = (volatile unsigned long *) (&GPIO_B + offset);
		}
	else if(port == 3)
 8002518:	2803      	cmp	r0, #3
 800251a:	d102      	bne.n	8002522 <Write_GPIO+0x12>
	{
		ODR = (volatile unsigned long *) (&GPIO_C + offset);
 800251c:	4b09      	ldr	r3, [pc, #36]	@ (8002544 <Write_GPIO+0x34>)
 800251e:	e000      	b.n	8002522 <Write_GPIO+0x12>
			ODR = (volatile unsigned long *) (&GPIO_A + offset);
 8002520:	4b09      	ldr	r3, [pc, #36]	@ (8002548 <Write_GPIO+0x38>)
	}
	state ? (*ODR |= (state<<pin)) : (*ODR &= ~(1<<pin));
 8002522:	b132      	cbz	r2, 8002532 <Write_GPIO+0x22>
 8002524:	6818      	ldr	r0, [r3, #0]
 8002526:	408a      	lsls	r2, r1
 8002528:	4302      	orrs	r2, r0
 800252a:	601a      	str	r2, [r3, #0]
 800252c:	4770      	bx	lr
			ODR = (volatile unsigned long *) (&GPIO_B + offset);
 800252e:	4b07      	ldr	r3, [pc, #28]	@ (800254c <Write_GPIO+0x3c>)
 8002530:	e7f7      	b.n	8002522 <Write_GPIO+0x12>
	state ? (*ODR |= (state<<pin)) : (*ODR &= ~(1<<pin));
 8002532:	681a      	ldr	r2, [r3, #0]
 8002534:	2001      	movs	r0, #1
 8002536:	fa00 f101 	lsl.w	r1, r0, r1
 800253a:	ea22 0201 	bic.w	r2, r2, r1
 800253e:	601a      	str	r2, [r3, #0]
}
 8002540:	4770      	bx	lr
 8002542:	bf00      	nop
 8002544:	4001100c 	.word	0x4001100c
 8002548:	4001080c 	.word	0x4001080c
 800254c:	40010c0c 	.word	0x40010c0c

08002550 <SPI_Init>:

#include "main.h"
#include "GAUL_Drivers/Low_Level_Drivers/GPIO_driver.h"
#include "GAUL_Drivers/Low_Level_Drivers/SPI_driver.h"

void SPI_Init(unsigned short spi) {
 8002550:	b508      	push	{r3, lr}
    if(spi == 1) {
 8002552:	2801      	cmp	r0, #1
 8002554:	d002      	beq.n	800255c <SPI_Init+0xc>
        Init_GPIO(PA, 7, OUT50, O_AF_PP); // MOSI SPI1

        Write_GPIO(PA, 4, HIGH);

        SPI1->CR1 = SPI_CR1_MSTR | SPI_CR1_BR_1 | SPI_CR1_BR_2 | SPI_CR1_SSM | SPI_CR1_SSI | SPI_CR1_SPE;
    } else if(spi == 2) {
 8002556:	2802      	cmp	r0, #2
 8002558:	d026      	beq.n	80025a8 <SPI_Init+0x58>
        Write_GPIO(PA, 8, HIGH);
        Write_GPIO(PB, 12, HIGH);

        SPI2->CR1 = SPI_CR1_MSTR | SPI_CR1_BR_1 | SPI_CR1_BR_2 | SPI_CR1_SSM | SPI_CR1_SSI | SPI_CR1_SPE;
    }
}
 800255a:	bd08      	pop	{r3, pc}
        RCC->APB2ENR |= RCC_APB2ENR_SPI1EN;
 800255c:	4a2b      	ldr	r2, [pc, #172]	@ (800260c <SPI_Init+0xbc>)
 800255e:	6993      	ldr	r3, [r2, #24]
 8002560:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8002564:	6193      	str	r3, [r2, #24]
        Init_GPIO(PA, 4, OUT50, O_GP_PP); // CS
 8002566:	2300      	movs	r3, #0
 8002568:	2203      	movs	r2, #3
 800256a:	2104      	movs	r1, #4
 800256c:	f7ff ff86 	bl	800247c <Init_GPIO>
        Init_GPIO(PA, 5, OUT50, O_AF_PP); // CLK
 8002570:	2302      	movs	r3, #2
 8002572:	2203      	movs	r2, #3
 8002574:	2105      	movs	r1, #5
 8002576:	2001      	movs	r0, #1
 8002578:	f7ff ff80 	bl	800247c <Init_GPIO>
        Init_GPIO(PA, 6, IN, I_PP);    // MISO SPI1
 800257c:	2302      	movs	r3, #2
 800257e:	2200      	movs	r2, #0
 8002580:	2106      	movs	r1, #6
 8002582:	2001      	movs	r0, #1
 8002584:	f7ff ff7a 	bl	800247c <Init_GPIO>
        Init_GPIO(PA, 7, OUT50, O_AF_PP); // MOSI SPI1
 8002588:	2302      	movs	r3, #2
 800258a:	2203      	movs	r2, #3
 800258c:	2107      	movs	r1, #7
 800258e:	2001      	movs	r0, #1
 8002590:	f7ff ff74 	bl	800247c <Init_GPIO>
        Write_GPIO(PA, 4, HIGH);
 8002594:	2201      	movs	r2, #1
 8002596:	2104      	movs	r1, #4
 8002598:	4610      	mov	r0, r2
 800259a:	f7ff ffb9 	bl	8002510 <Write_GPIO>
        SPI1->CR1 = SPI_CR1_MSTR | SPI_CR1_BR_1 | SPI_CR1_BR_2 | SPI_CR1_SSM | SPI_CR1_SSI | SPI_CR1_SPE;
 800259e:	4b1c      	ldr	r3, [pc, #112]	@ (8002610 <SPI_Init+0xc0>)
 80025a0:	f44f 725d 	mov.w	r2, #884	@ 0x374
 80025a4:	601a      	str	r2, [r3, #0]
 80025a6:	e7d8      	b.n	800255a <SPI_Init+0xa>
        RCC->APB1ENR |= RCC_APB1ENR_SPI2EN;
 80025a8:	4a18      	ldr	r2, [pc, #96]	@ (800260c <SPI_Init+0xbc>)
 80025aa:	69d3      	ldr	r3, [r2, #28]
 80025ac:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80025b0:	61d3      	str	r3, [r2, #28]
        Init_GPIO(PA, 8, OUT50, O_GP_PP); // CS (optionnel)
 80025b2:	2300      	movs	r3, #0
 80025b4:	2203      	movs	r2, #3
 80025b6:	2108      	movs	r1, #8
 80025b8:	2001      	movs	r0, #1
 80025ba:	f7ff ff5f 	bl	800247c <Init_GPIO>
        Init_GPIO(PB, 12, OUT50, O_GP_PP); // CS
 80025be:	2300      	movs	r3, #0
 80025c0:	2203      	movs	r2, #3
 80025c2:	210c      	movs	r1, #12
 80025c4:	2002      	movs	r0, #2
 80025c6:	f7ff ff59 	bl	800247c <Init_GPIO>
        Init_GPIO(PB, 13, OUT50, O_AF_PP); // CLK
 80025ca:	2302      	movs	r3, #2
 80025cc:	2203      	movs	r2, #3
 80025ce:	210d      	movs	r1, #13
 80025d0:	4618      	mov	r0, r3
 80025d2:	f7ff ff53 	bl	800247c <Init_GPIO>
        Init_GPIO(PB, 14, IN, I_PP);    // MISO SPI2
 80025d6:	2302      	movs	r3, #2
 80025d8:	2200      	movs	r2, #0
 80025da:	210e      	movs	r1, #14
 80025dc:	4618      	mov	r0, r3
 80025de:	f7ff ff4d 	bl	800247c <Init_GPIO>
        Init_GPIO(PB, 15, OUT50, O_AF_PP); // MOSI SPI2
 80025e2:	2302      	movs	r3, #2
 80025e4:	2203      	movs	r2, #3
 80025e6:	210f      	movs	r1, #15
 80025e8:	4618      	mov	r0, r3
 80025ea:	f7ff ff47 	bl	800247c <Init_GPIO>
        Write_GPIO(PA, 8, HIGH);
 80025ee:	2201      	movs	r2, #1
 80025f0:	2108      	movs	r1, #8
 80025f2:	4610      	mov	r0, r2
 80025f4:	f7ff ff8c 	bl	8002510 <Write_GPIO>
        Write_GPIO(PB, 12, HIGH);
 80025f8:	2201      	movs	r2, #1
 80025fa:	210c      	movs	r1, #12
 80025fc:	2002      	movs	r0, #2
 80025fe:	f7ff ff87 	bl	8002510 <Write_GPIO>
        SPI2->CR1 = SPI_CR1_MSTR | SPI_CR1_BR_1 | SPI_CR1_BR_2 | SPI_CR1_SSM | SPI_CR1_SSI | SPI_CR1_SPE;
 8002602:	4b04      	ldr	r3, [pc, #16]	@ (8002614 <SPI_Init+0xc4>)
 8002604:	f44f 725d 	mov.w	r2, #884	@ 0x374
 8002608:	601a      	str	r2, [r3, #0]
}
 800260a:	e7a6      	b.n	800255a <SPI_Init+0xa>
 800260c:	40021000 	.word	0x40021000
 8002610:	40013000 	.word	0x40013000
 8002614:	40003800 	.word	0x40003800

08002618 <SPI2_TX>:

    uint8_t temp = SPI1->DR;
    temp = SPI1->SR;
}

void SPI2_TX(uint8_t *data, int size) {
 8002618:	468c      	mov	ip, r1

    for (int i = 0; i < size; ++i) {
 800261a:	2200      	movs	r2, #0
 800261c:	e008      	b.n	8002630 <SPI2_TX+0x18>
        while (!(SPI2->SR & SPI_SR_TXE)) {}
 800261e:	4b0c      	ldr	r3, [pc, #48]	@ (8002650 <SPI2_TX+0x38>)
 8002620:	689b      	ldr	r3, [r3, #8]
 8002622:	f013 0f02 	tst.w	r3, #2
 8002626:	d0fa      	beq.n	800261e <SPI2_TX+0x6>
        SPI2->DR = data[i];
 8002628:	5c81      	ldrb	r1, [r0, r2]
 800262a:	4b09      	ldr	r3, [pc, #36]	@ (8002650 <SPI2_TX+0x38>)
 800262c:	60d9      	str	r1, [r3, #12]
    for (int i = 0; i < size; ++i) {
 800262e:	3201      	adds	r2, #1
 8002630:	4562      	cmp	r2, ip
 8002632:	dbf4      	blt.n	800261e <SPI2_TX+0x6>
    }

    while (!(SPI2->SR & SPI_SR_TXE)) {}
 8002634:	4b06      	ldr	r3, [pc, #24]	@ (8002650 <SPI2_TX+0x38>)
 8002636:	689b      	ldr	r3, [r3, #8]
 8002638:	f013 0f02 	tst.w	r3, #2
 800263c:	d0fa      	beq.n	8002634 <SPI2_TX+0x1c>
    while (SPI2->SR & SPI_SR_BSY) {}
 800263e:	4b04      	ldr	r3, [pc, #16]	@ (8002650 <SPI2_TX+0x38>)
 8002640:	689b      	ldr	r3, [r3, #8]
 8002642:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8002646:	d1fa      	bne.n	800263e <SPI2_TX+0x26>

    uint8_t temp = SPI2->DR;
 8002648:	4b01      	ldr	r3, [pc, #4]	@ (8002650 <SPI2_TX+0x38>)
 800264a:	68da      	ldr	r2, [r3, #12]
    temp = SPI2->SR;
 800264c:	689b      	ldr	r3, [r3, #8]
}
 800264e:	4770      	bx	lr
 8002650:	40003800 	.word	0x40003800

08002654 <SPI2_RX>:
    }
}

void SPI2_RX(uint8_t *data, int size) {

    while (size) {
 8002654:	e011      	b.n	800267a <SPI2_RX+0x26>
        while (SPI2->SR & SPI_SR_BSY) {}
 8002656:	4b0a      	ldr	r3, [pc, #40]	@ (8002680 <SPI2_RX+0x2c>)
 8002658:	689b      	ldr	r3, [r3, #8]
 800265a:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800265e:	d1fa      	bne.n	8002656 <SPI2_RX+0x2>
        SPI2->DR = 0;
 8002660:	4b07      	ldr	r3, [pc, #28]	@ (8002680 <SPI2_RX+0x2c>)
 8002662:	2200      	movs	r2, #0
 8002664:	60da      	str	r2, [r3, #12]
        while (!(SPI2->SR & SPI_SR_RXNE)) {}
 8002666:	4b06      	ldr	r3, [pc, #24]	@ (8002680 <SPI2_RX+0x2c>)
 8002668:	689b      	ldr	r3, [r3, #8]
 800266a:	f013 0f01 	tst.w	r3, #1
 800266e:	d0fa      	beq.n	8002666 <SPI2_RX+0x12>
        *data++ = SPI2->DR;
 8002670:	4b03      	ldr	r3, [pc, #12]	@ (8002680 <SPI2_RX+0x2c>)
 8002672:	68db      	ldr	r3, [r3, #12]
 8002674:	f800 3b01 	strb.w	r3, [r0], #1
        --size;
 8002678:	3901      	subs	r1, #1
    while (size) {
 800267a:	2900      	cmp	r1, #0
 800267c:	d1eb      	bne.n	8002656 <SPI2_RX+0x2>
    }
}
 800267e:	4770      	bx	lr
 8002680:	40003800 	.word	0x40003800

08002684 <USART_Init>:
#include "GAUL_Drivers/Low_Level_Drivers/USART_driver.h"
#include "main.h"


void USART_Init(unsigned short usart)
{
 8002684:	b508      	push	{r3, lr}
    if(usart == 1) {
 8002686:	2801      	cmp	r0, #1
 8002688:	d004      	beq.n	8002694 <USART_Init+0x10>
        USART1->CR1 |= USART_CR1_TE; // Activer la transmission
        USART1->CR1 |= USART_CR1_RE; // Activer la réception
        // Activation des interruptions globales pour USART1
        NVIC_EnableIRQ(USART1_IRQn);
    }
    else if(usart == 2) {
 800268a:	2802      	cmp	r0, #2
 800268c:	d024      	beq.n	80026d8 <USART_Init+0x54>
        USART2->CR1 |= USART_CR1_TE; // Activer la transmission
        USART2->CR1 |= USART_CR1_RE; // Activer la réception
        // Activation des interruptions globales pour USART2
        NVIC_EnableIRQ(USART2_IRQn);
    }
    else if(usart == 3) {
 800268e:	2803      	cmp	r0, #3
 8002690:	d044      	beq.n	800271c <USART_Init+0x98>
        USART3->CR1 |= USART_CR1_TE; // Activer la transmission
        USART3->CR1 |= USART_CR1_RE; // Activer la réception
        // Activation des interruptions globales pour USART3
        NVIC_EnableIRQ(USART3_IRQn);
    }
}
 8002692:	bd08      	pop	{r3, pc}
        RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 8002694:	4a32      	ldr	r2, [pc, #200]	@ (8002760 <USART_Init+0xdc>)
 8002696:	6993      	ldr	r3, [r2, #24]
 8002698:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800269c:	6193      	str	r3, [r2, #24]
        Init_GPIO(PB, 6, OUT50, O_AF_PP); // TX
 800269e:	2302      	movs	r3, #2
 80026a0:	2203      	movs	r2, #3
 80026a2:	2106      	movs	r1, #6
 80026a4:	4618      	mov	r0, r3
 80026a6:	f7ff fee9 	bl	800247c <Init_GPIO>
        Init_GPIO(PB, 7, IN, I_PP); // RX
 80026aa:	2302      	movs	r3, #2
 80026ac:	2200      	movs	r2, #0
 80026ae:	2107      	movs	r1, #7
 80026b0:	4618      	mov	r0, r3
 80026b2:	f7ff fee3 	bl	800247c <Init_GPIO>
        USART1->CR1 |= USART_CR1_UE; // Activer USART (0x0C)
 80026b6:	4b2b      	ldr	r3, [pc, #172]	@ (8002764 <USART_Init+0xe0>)
 80026b8:	68da      	ldr	r2, [r3, #12]
 80026ba:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80026be:	60da      	str	r2, [r3, #12]
        USART1->CR1 |= USART_CR1_TE; // Activer la transmission
 80026c0:	68da      	ldr	r2, [r3, #12]
 80026c2:	f042 0208 	orr.w	r2, r2, #8
 80026c6:	60da      	str	r2, [r3, #12]
        USART1->CR1 |= USART_CR1_RE; // Activer la réception
 80026c8:	68da      	ldr	r2, [r3, #12]
 80026ca:	f042 0204 	orr.w	r2, r2, #4
 80026ce:	60da      	str	r2, [r3, #12]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80026d0:	4b25      	ldr	r3, [pc, #148]	@ (8002768 <USART_Init+0xe4>)
 80026d2:	2220      	movs	r2, #32
 80026d4:	605a      	str	r2, [r3, #4]
 80026d6:	e7dc      	b.n	8002692 <USART_Init+0xe>
        RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 80026d8:	4a21      	ldr	r2, [pc, #132]	@ (8002760 <USART_Init+0xdc>)
 80026da:	69d3      	ldr	r3, [r2, #28]
 80026dc:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80026e0:	61d3      	str	r3, [r2, #28]
        Init_GPIO(PA, 2, OUT50, O_AF_PP); // TX
 80026e2:	2302      	movs	r3, #2
 80026e4:	2203      	movs	r2, #3
 80026e6:	4619      	mov	r1, r3
 80026e8:	2001      	movs	r0, #1
 80026ea:	f7ff fec7 	bl	800247c <Init_GPIO>
        Init_GPIO(PA, 3, IN, I_PP); // RX
 80026ee:	2302      	movs	r3, #2
 80026f0:	2200      	movs	r2, #0
 80026f2:	2103      	movs	r1, #3
 80026f4:	2001      	movs	r0, #1
 80026f6:	f7ff fec1 	bl	800247c <Init_GPIO>
        USART2->CR1 |= USART_CR1_UE; // Activer USART (0x10)
 80026fa:	4b1c      	ldr	r3, [pc, #112]	@ (800276c <USART_Init+0xe8>)
 80026fc:	68da      	ldr	r2, [r3, #12]
 80026fe:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8002702:	60da      	str	r2, [r3, #12]
        USART2->CR1 |= USART_CR1_TE; // Activer la transmission
 8002704:	68da      	ldr	r2, [r3, #12]
 8002706:	f042 0208 	orr.w	r2, r2, #8
 800270a:	60da      	str	r2, [r3, #12]
        USART2->CR1 |= USART_CR1_RE; // Activer la réception
 800270c:	68da      	ldr	r2, [r3, #12]
 800270e:	f042 0204 	orr.w	r2, r2, #4
 8002712:	60da      	str	r2, [r3, #12]
 8002714:	4b14      	ldr	r3, [pc, #80]	@ (8002768 <USART_Init+0xe4>)
 8002716:	2240      	movs	r2, #64	@ 0x40
 8002718:	605a      	str	r2, [r3, #4]
 800271a:	e7ba      	b.n	8002692 <USART_Init+0xe>
        RCC->APB1ENR |= RCC_APB1ENR_USART3EN ;
 800271c:	4a10      	ldr	r2, [pc, #64]	@ (8002760 <USART_Init+0xdc>)
 800271e:	69d3      	ldr	r3, [r2, #28]
 8002720:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002724:	61d3      	str	r3, [r2, #28]
        Init_GPIO(PB, 10, OUT50, O_AF_PP); // TX
 8002726:	2302      	movs	r3, #2
 8002728:	2203      	movs	r2, #3
 800272a:	210a      	movs	r1, #10
 800272c:	4618      	mov	r0, r3
 800272e:	f7ff fea5 	bl	800247c <Init_GPIO>
        Init_GPIO(PB, 11, IN, I_PP); // RX
 8002732:	2302      	movs	r3, #2
 8002734:	2200      	movs	r2, #0
 8002736:	210b      	movs	r1, #11
 8002738:	4618      	mov	r0, r3
 800273a:	f7ff fe9f 	bl	800247c <Init_GPIO>
        USART3->CR1 |= USART_CR1_UE; // Activer USART (0x14)
 800273e:	4b0c      	ldr	r3, [pc, #48]	@ (8002770 <USART_Init+0xec>)
 8002740:	68da      	ldr	r2, [r3, #12]
 8002742:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8002746:	60da      	str	r2, [r3, #12]
        USART3->CR1 |= USART_CR1_TE; // Activer la transmission
 8002748:	68da      	ldr	r2, [r3, #12]
 800274a:	f042 0208 	orr.w	r2, r2, #8
 800274e:	60da      	str	r2, [r3, #12]
        USART3->CR1 |= USART_CR1_RE; // Activer la réception
 8002750:	68da      	ldr	r2, [r3, #12]
 8002752:	f042 0204 	orr.w	r2, r2, #4
 8002756:	60da      	str	r2, [r3, #12]
 8002758:	4b03      	ldr	r3, [pc, #12]	@ (8002768 <USART_Init+0xe4>)
 800275a:	2280      	movs	r2, #128	@ 0x80
 800275c:	605a      	str	r2, [r3, #4]
}
 800275e:	e798      	b.n	8002692 <USART_Init+0xe>
 8002760:	40021000 	.word	0x40021000
 8002764:	40013800 	.word	0x40013800
 8002768:	e000e100 	.word	0xe000e100
 800276c:	40004400 	.word	0x40004400
 8002770:	40004800 	.word	0x40004800

08002774 <USART_TX>:

void USART_TX(unsigned short usart, const uint8_t *data, int size) {
 8002774:	b410      	push	{r4}

    if (usart == 1) {
 8002776:	2801      	cmp	r0, #1
 8002778:	d027      	beq.n	80027ca <USART_TX+0x56>
        for (int i = 0; i < size; i++) {
            while (!(USART1->SR & USART_SR_TXE));
            USART1->DR = data[i];
            while (!(USART1->SR & USART_SR_TC));
        }
    } else if (usart == 2) {
 800277a:	2802      	cmp	r0, #2
 800277c:	d038      	beq.n	80027f0 <USART_TX+0x7c>
        for (int i = 0; i < size; i++) {
            while (!(USART2->SR & USART_SR_TXE));
            USART2->DR = data[i];
            while (!(USART2->SR & USART_SR_TC));
        }
    } else if (usart == 3) {
 800277e:	2803      	cmp	r0, #3
 8002780:	d121      	bne.n	80027c6 <USART_TX+0x52>
        for (int i = 0; i < size; i++) {
 8002782:	2000      	movs	r0, #0
 8002784:	4290      	cmp	r0, r2
 8002786:	da1e      	bge.n	80027c6 <USART_TX+0x52>
            while (!(USART3->SR & USART_SR_TXE));
 8002788:	4b1a      	ldr	r3, [pc, #104]	@ (80027f4 <USART_TX+0x80>)
 800278a:	681b      	ldr	r3, [r3, #0]
 800278c:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8002790:	d0fa      	beq.n	8002788 <USART_TX+0x14>
            USART3->DR = data[i];
 8002792:	5c0c      	ldrb	r4, [r1, r0]
 8002794:	4b17      	ldr	r3, [pc, #92]	@ (80027f4 <USART_TX+0x80>)
 8002796:	605c      	str	r4, [r3, #4]
            while (!(USART3->SR & USART_SR_TC));
 8002798:	4b16      	ldr	r3, [pc, #88]	@ (80027f4 <USART_TX+0x80>)
 800279a:	681b      	ldr	r3, [r3, #0]
 800279c:	f013 0f40 	tst.w	r3, #64	@ 0x40
 80027a0:	d0fa      	beq.n	8002798 <USART_TX+0x24>
        for (int i = 0; i < size; i++) {
 80027a2:	3001      	adds	r0, #1
 80027a4:	e7ee      	b.n	8002784 <USART_TX+0x10>
            while (!(USART1->SR & USART_SR_TXE));
 80027a6:	4b14      	ldr	r3, [pc, #80]	@ (80027f8 <USART_TX+0x84>)
 80027a8:	681b      	ldr	r3, [r3, #0]
 80027aa:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80027ae:	d0fa      	beq.n	80027a6 <USART_TX+0x32>
            USART1->DR = data[i];
 80027b0:	5c0c      	ldrb	r4, [r1, r0]
 80027b2:	4b11      	ldr	r3, [pc, #68]	@ (80027f8 <USART_TX+0x84>)
 80027b4:	605c      	str	r4, [r3, #4]
            while (!(USART1->SR & USART_SR_TC));
 80027b6:	4b10      	ldr	r3, [pc, #64]	@ (80027f8 <USART_TX+0x84>)
 80027b8:	681b      	ldr	r3, [r3, #0]
 80027ba:	f013 0f40 	tst.w	r3, #64	@ 0x40
 80027be:	d0fa      	beq.n	80027b6 <USART_TX+0x42>
        for (int i = 0; i < size; i++) {
 80027c0:	3001      	adds	r0, #1
 80027c2:	4290      	cmp	r0, r2
 80027c4:	dbef      	blt.n	80027a6 <USART_TX+0x32>
        }
    }
}
 80027c6:	bc10      	pop	{r4}
 80027c8:	4770      	bx	lr
        for (int i = 0; i < size; i++) {
 80027ca:	2000      	movs	r0, #0
 80027cc:	e7f9      	b.n	80027c2 <USART_TX+0x4e>
            while (!(USART2->SR & USART_SR_TXE));
 80027ce:	4b0b      	ldr	r3, [pc, #44]	@ (80027fc <USART_TX+0x88>)
 80027d0:	681b      	ldr	r3, [r3, #0]
 80027d2:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80027d6:	d0fa      	beq.n	80027ce <USART_TX+0x5a>
            USART2->DR = data[i];
 80027d8:	5c0c      	ldrb	r4, [r1, r0]
 80027da:	4b08      	ldr	r3, [pc, #32]	@ (80027fc <USART_TX+0x88>)
 80027dc:	605c      	str	r4, [r3, #4]
            while (!(USART2->SR & USART_SR_TC));
 80027de:	4b07      	ldr	r3, [pc, #28]	@ (80027fc <USART_TX+0x88>)
 80027e0:	681b      	ldr	r3, [r3, #0]
 80027e2:	f013 0f40 	tst.w	r3, #64	@ 0x40
 80027e6:	d0fa      	beq.n	80027de <USART_TX+0x6a>
        for (int i = 0; i < size; i++) {
 80027e8:	3001      	adds	r0, #1
 80027ea:	4290      	cmp	r0, r2
 80027ec:	dbef      	blt.n	80027ce <USART_TX+0x5a>
 80027ee:	e7ea      	b.n	80027c6 <USART_TX+0x52>
 80027f0:	2000      	movs	r0, #0
 80027f2:	e7fa      	b.n	80027ea <USART_TX+0x76>
 80027f4:	40004800 	.word	0x40004800
 80027f8:	40013800 	.word	0x40013800
 80027fc:	40004400 	.word	0x40004400

08002800 <USART_RX>:

void USART_RX(unsigned short usart, uint8_t *data, int size) {

    if (usart == 1) {
 8002800:	2801      	cmp	r0, #1
 8002802:	d010      	beq.n	8002826 <USART_RX+0x26>
        for (int i = 0; i < size; i++) {
            while (!(USART1->SR & USART_SR_RXNE));
            data[i] = USART1->DR;
        }
    } else if (usart == 2) {
 8002804:	2802      	cmp	r0, #2
 8002806:	d01c      	beq.n	8002842 <USART_RX+0x42>
        for (int i = 0; i < size; i++) {
            while (!(USART2->SR & USART_SR_RXNE));
            data[i] = USART2->DR;
        }
    } else if (usart == 3) {
 8002808:	2803      	cmp	r0, #3
 800280a:	d01c      	beq.n	8002846 <USART_RX+0x46>
        for (int i = 0; i < size; i++) {
            while (!(USART3->SR & USART_SR_RXNE));
            data[i] = USART3->DR;
        }
    }
}
 800280c:	4770      	bx	lr
            while (!(USART1->SR & USART_SR_RXNE));
 800280e:	4b14      	ldr	r3, [pc, #80]	@ (8002860 <USART_RX+0x60>)
 8002810:	681b      	ldr	r3, [r3, #0]
 8002812:	f013 0f20 	tst.w	r3, #32
 8002816:	d0fa      	beq.n	800280e <USART_RX+0xe>
            data[i] = USART1->DR;
 8002818:	4b11      	ldr	r3, [pc, #68]	@ (8002860 <USART_RX+0x60>)
 800281a:	685b      	ldr	r3, [r3, #4]
 800281c:	540b      	strb	r3, [r1, r0]
        for (int i = 0; i < size; i++) {
 800281e:	3001      	adds	r0, #1
 8002820:	4290      	cmp	r0, r2
 8002822:	dbf4      	blt.n	800280e <USART_RX+0xe>
 8002824:	4770      	bx	lr
 8002826:	2000      	movs	r0, #0
 8002828:	e7fa      	b.n	8002820 <USART_RX+0x20>
            while (!(USART2->SR & USART_SR_RXNE));
 800282a:	4b0e      	ldr	r3, [pc, #56]	@ (8002864 <USART_RX+0x64>)
 800282c:	681b      	ldr	r3, [r3, #0]
 800282e:	f013 0f20 	tst.w	r3, #32
 8002832:	d0fa      	beq.n	800282a <USART_RX+0x2a>
            data[i] = USART2->DR;
 8002834:	4b0b      	ldr	r3, [pc, #44]	@ (8002864 <USART_RX+0x64>)
 8002836:	685b      	ldr	r3, [r3, #4]
 8002838:	540b      	strb	r3, [r1, r0]
        for (int i = 0; i < size; i++) {
 800283a:	3001      	adds	r0, #1
 800283c:	4290      	cmp	r0, r2
 800283e:	dbf4      	blt.n	800282a <USART_RX+0x2a>
 8002840:	4770      	bx	lr
 8002842:	2000      	movs	r0, #0
 8002844:	e7fa      	b.n	800283c <USART_RX+0x3c>
        for (int i = 0; i < size; i++) {
 8002846:	2000      	movs	r0, #0
 8002848:	4290      	cmp	r0, r2
 800284a:	dadf      	bge.n	800280c <USART_RX+0xc>
            while (!(USART3->SR & USART_SR_RXNE));
 800284c:	4b06      	ldr	r3, [pc, #24]	@ (8002868 <USART_RX+0x68>)
 800284e:	681b      	ldr	r3, [r3, #0]
 8002850:	f013 0f20 	tst.w	r3, #32
 8002854:	d0fa      	beq.n	800284c <USART_RX+0x4c>
            data[i] = USART3->DR;
 8002856:	4b04      	ldr	r3, [pc, #16]	@ (8002868 <USART_RX+0x68>)
 8002858:	685b      	ldr	r3, [r3, #4]
 800285a:	540b      	strb	r3, [r1, r0]
        for (int i = 0; i < size; i++) {
 800285c:	3001      	adds	r0, #1
 800285e:	e7f3      	b.n	8002848 <USART_RX+0x48>
 8002860:	40013800 	.word	0x40013800
 8002864:	40004400 	.word	0x40004400
 8002868:	40004800 	.word	0x40004800

0800286c <ITM_SendChar>:
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 800286c:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8002870:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	@ 0xe80
 8002874:	f013 0f01 	tst.w	r3, #1
 8002878:	d011      	beq.n	800289e <ITM_SendChar+0x32>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 800287a:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 800287e:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	@ 0xe00
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8002882:	f013 0f01 	tst.w	r3, #1
 8002886:	d101      	bne.n	800288c <ITM_SendChar+0x20>
 8002888:	4770      	bx	lr
  {
    while (ITM->PORT[0U].u32 == 0UL)
    {
      __NOP();
 800288a:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 800288c:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8002890:	681b      	ldr	r3, [r3, #0]
 8002892:	2b00      	cmp	r3, #0
 8002894:	d0f9      	beq.n	800288a <ITM_SendChar+0x1e>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 8002896:	b2c3      	uxtb	r3, r0
 8002898:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 800289c:	7013      	strb	r3, [r2, #0]
  }
  return (ch);
}
 800289e:	4770      	bx	lr

080028a0 <STM32_u16To8>:
uint8_t STM32_ModeRoutine(void);
/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void STM32_u16To8(uint16_t data, STM32_Packet packet, uint8_t index) {
 80028a0:	b084      	sub	sp, #16
 80028a2:	f10d 0c04 	add.w	ip, sp, #4
 80028a6:	e88c 000e 	stmia.w	ip, {r1, r2, r3}
 80028aa:	f89d 3014 	ldrb.w	r3, [sp, #20]

	packet.data[index] = (uint8_t)(data >> 8);
 80028ae:	9a03      	ldr	r2, [sp, #12]
 80028b0:	0a01      	lsrs	r1, r0, #8
 80028b2:	54d1      	strb	r1, [r2, r3]
	packet.data[index + 1] = (uint8_t)(data & 0xFF);
 80028b4:	3301      	adds	r3, #1
 80028b6:	54d0      	strb	r0, [r2, r3]
}
 80028b8:	b004      	add	sp, #16
 80028ba:	4770      	bx	lr

080028bc <STM32_i32To8>:

void STM32_i32To8(int32_t data, STM32_Packet packet, uint8_t index) {
 80028bc:	b084      	sub	sp, #16
 80028be:	f10d 0c04 	add.w	ip, sp, #4
 80028c2:	e88c 000e 	stmia.w	ip, {r1, r2, r3}
 80028c6:	f89d 3014 	ldrb.w	r3, [sp, #20]

	packet.data[index] = (uint8_t)((data >> 24) & 0xFF);
 80028ca:	9a03      	ldr	r2, [sp, #12]
 80028cc:	0e01      	lsrs	r1, r0, #24
 80028ce:	54d1      	strb	r1, [r2, r3]
	packet.data[index + 1] = (uint8_t)((data >> 16) & 0xFF);
 80028d0:	1c59      	adds	r1, r3, #1
 80028d2:	f3c0 4c07 	ubfx	ip, r0, #16, #8
 80028d6:	f802 c001 	strb.w	ip, [r2, r1]
	packet.data[index + 2] = (uint8_t)((data >> 8) & 0xFF);
 80028da:	1c99      	adds	r1, r3, #2
 80028dc:	f3c0 2c07 	ubfx	ip, r0, #8, #8
 80028e0:	f802 c001 	strb.w	ip, [r2, r1]
	packet.data[index + 3] = (uint8_t)(data & 0xFF);
 80028e4:	3303      	adds	r3, #3
 80028e6:	54d0      	strb	r0, [r2, r3]
}
 80028e8:	b004      	add	sp, #16
 80028ea:	4770      	bx	lr

080028ec <STM32_SetMode>:

uint8_t STM32_SetMode(uint8_t mode) {

	if(mode != MODE_PREFLIGHT && mode != MODE_INFLIGHT && mode != MODE_POSTFLIGHT) {
 80028ec:	2802      	cmp	r0, #2
 80028ee:	d803      	bhi.n	80028f8 <STM32_SetMode+0xc>
		return 0;
	}
	packet.header_states.mode = mode;
 80028f0:	4b02      	ldr	r3, [pc, #8]	@ (80028fc <STM32_SetMode+0x10>)
 80028f2:	7018      	strb	r0, [r3, #0]
	return 1; // OK
 80028f4:	2001      	movs	r0, #1
 80028f6:	4770      	bx	lr
		return 0;
 80028f8:	2000      	movs	r0, #0
}
 80028fa:	4770      	bx	lr
 80028fc:	2000026c 	.word	0x2000026c

08002900 <STM32_ModeRoutine>:
	*/
	// Bluetooth
	HM10BLE_Init(&ble_data, BT_USART_PORT);
}

uint8_t STM32_ModeRoutine(void) {
 8002900:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002904:	b082      	sub	sp, #8

	uint8_t check = 0;

    uint8_t header_states = 0x00;
    packet.size = 0;
 8002906:	4b6d      	ldr	r3, [pc, #436]	@ (8002abc <STM32_ModeRoutine+0x1bc>)
 8002908:	2200      	movs	r2, #0
 800290a:	739a      	strb	r2, [r3, #14]
    packet.crc16[0] = 0x00;
 800290c:	731a      	strb	r2, [r3, #12]
    packet.crc16[1] = 0x00;
 800290e:	735a      	strb	r2, [r3, #13]

    switch (packet.header_states.mode) {
 8002910:	781b      	ldrb	r3, [r3, #0]
 8002912:	2b01      	cmp	r3, #1
 8002914:	f000 80e8 	beq.w	8002ae8 <STM32_ModeRoutine+0x1e8>
 8002918:	2b02      	cmp	r3, #2
 800291a:	f000 81ae 	beq.w	8002c7a <STM32_ModeRoutine+0x37a>
 800291e:	b303      	cbz	r3, 8002962 <STM32_ModeRoutine+0x62>
 8002920:	2500      	movs	r5, #0
            break;
        default:
        	check = 0; // Error
    }

    rfd_data.header = header_states;
 8002922:	4e67      	ldr	r6, [pc, #412]	@ (8002ac0 <STM32_ModeRoutine+0x1c0>)
 8002924:	7035      	strb	r5, [r6, #0]
    rfd_data.size = packet.size;
 8002926:	4c65      	ldr	r4, [pc, #404]	@ (8002abc <STM32_ModeRoutine+0x1bc>)
 8002928:	7ba1      	ldrb	r1, [r4, #14]
 800292a:	7331      	strb	r1, [r6, #12]
    rfd_data.data = packet.data;
 800292c:	68a0      	ldr	r0, [r4, #8]
 800292e:	6070      	str	r0, [r6, #4]
    uint16_t crc = CRC16_Calculate(packet.data, packet.size);
 8002930:	f7ff fd78 	bl	8002424 <CRC16_Calculate>
    packet.crc16[0] = (uint8_t)(crc >> 8);
 8002934:	f3c0 2307 	ubfx	r3, r0, #8, #8
 8002938:	7323      	strb	r3, [r4, #12]
    packet.crc16[1] = (uint8_t)(crc & 0xFF);
 800293a:	7360      	strb	r0, [r4, #13]
    rfd_data.crc = (uint8_t *)packet.crc16;
 800293c:	340c      	adds	r4, #12
 800293e:	60b4      	str	r4, [r6, #8]

    // TODO: add MEM2067_Write()

    if(RFD900_Send(&rfd_data, RFD_USART_PORT) == 1) {
 8002940:	2101      	movs	r1, #1
 8002942:	4630      	mov	r0, r6
 8002944:	f7ff fcab 	bl	800229e <RFD900_Send>
 8002948:	4604      	mov	r4, r0
 800294a:	2801      	cmp	r0, #1
 800294c:	f000 8227 	beq.w	8002d9e <STM32_ModeRoutine+0x49e>
    	free(packet.data);
    	check = 1; // OK
    } else {
    	free(packet.data);
 8002950:	4b5a      	ldr	r3, [pc, #360]	@ (8002abc <STM32_ModeRoutine+0x1bc>)
 8002952:	6898      	ldr	r0, [r3, #8]
 8002954:	f003 ffec 	bl	8006930 <free>
    	check = 0; // ERROR
 8002958:	2400      	movs	r4, #0
    }

    return check;
}
 800295a:	4620      	mov	r0, r4
 800295c:	b002      	add	sp, #8
 800295e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        	BMP280_SwapMode(BMP280_SETTING_CTRL_MEAS_NORMAL);
 8002962:	2057      	movs	r0, #87	@ 0x57
 8002964:	f7fe ffd8 	bl	8001918 <BMP280_SwapMode>
        	if (HM10BLE_Connection(&ble_data, BT_USART_PORT, HM10BLE_buffer) == 1) {
 8002968:	4a56      	ldr	r2, [pc, #344]	@ (8002ac4 <STM32_ModeRoutine+0x1c4>)
 800296a:	2103      	movs	r1, #3
 800296c:	4856      	ldr	r0, [pc, #344]	@ (8002ac8 <STM32_ModeRoutine+0x1c8>)
 800296e:	f7ff f8b7 	bl	8001ae0 <HM10BLE_Connection>
 8002972:	2801      	cmp	r0, #1
 8002974:	f000 8097 	beq.w	8002aa6 <STM32_ModeRoutine+0x1a6>
				packet.header_states.ble = 0x00;
 8002978:	4b50      	ldr	r3, [pc, #320]	@ (8002abc <STM32_ModeRoutine+0x1bc>)
 800297a:	2200      	movs	r2, #0
 800297c:	71da      	strb	r2, [r3, #7]
            header_states = (packet.header_states.mode << 6) | (packet.header_states.pyro0 << 5) | (packet.header_states.pyro1 << 4)
 800297e:	4c4f      	ldr	r4, [pc, #316]	@ (8002abc <STM32_ModeRoutine+0x1bc>)
 8002980:	7822      	ldrb	r2, [r4, #0]
 8002982:	7863      	ldrb	r3, [r4, #1]
 8002984:	015b      	lsls	r3, r3, #5
 8002986:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800298a:	b25b      	sxtb	r3, r3
 800298c:	78a2      	ldrb	r2, [r4, #2]
 800298e:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 8002992:	b25b      	sxtb	r3, r3
                            | (packet.header_states.accelerometer << 3) | (packet.header_states.barometer << 2) | (packet.header_states.gps << 1)
 8002994:	78e2      	ldrb	r2, [r4, #3]
 8002996:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800299a:	b25b      	sxtb	r3, r3
 800299c:	7922      	ldrb	r2, [r4, #4]
 800299e:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 80029a2:	b25b      	sxtb	r3, r3
 80029a4:	7962      	ldrb	r2, [r4, #5]
 80029a6:	ea43 0342 	orr.w	r3, r3, r2, lsl #1
 80029aa:	b25b      	sxtb	r3, r3
							| packet.header_states.sd;
 80029ac:	79a5      	ldrb	r5, [r4, #6]
            header_states = (packet.header_states.mode << 6) | (packet.header_states.pyro0 << 5) | (packet.header_states.pyro1 << 4)
 80029ae:	431d      	orrs	r5, r3
 80029b0:	b2ed      	uxtb	r5, r5
            packet.size = PREFLIGHT_DATASIZE;
 80029b2:	201c      	movs	r0, #28
 80029b4:	73a0      	strb	r0, [r4, #14]
            packet.data = (uint8_t *)malloc(packet.size * sizeof(uint8_t));
 80029b6:	f003 ffb3 	bl	8006920 <malloc>
 80029ba:	60a0      	str	r0, [r4, #8]
            BMP280_ReadPressure(&bmp_data);
 80029bc:	4f43      	ldr	r7, [pc, #268]	@ (8002acc <STM32_ModeRoutine+0x1cc>)
 80029be:	4638      	mov	r0, r7
 80029c0:	f7fe fdf2 	bl	80015a8 <BMP280_ReadPressure>
			STM32_i32To8((int32_t)BMP280_PressureToAltitude(bmp_data.pressure_Pa), packet, 0);
 80029c4:	6838      	ldr	r0, [r7, #0]
 80029c6:	f7fe fd63 	bl	8001490 <BMP280_PressureToAltitude>
 80029ca:	f7fe fb35 	bl	8001038 <__aeabi_f2iz>
 80029ce:	2600      	movs	r6, #0
 80029d0:	9601      	str	r6, [sp, #4]
 80029d2:	68e3      	ldr	r3, [r4, #12]
 80029d4:	9300      	str	r3, [sp, #0]
 80029d6:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 80029da:	f7ff ff6f 	bl	80028bc <STM32_i32To8>
			BMP280_ReadTemperature(&bmp_data);
 80029de:	4638      	mov	r0, r7
 80029e0:	f7fe fd9e 	bl	8001520 <BMP280_ReadTemperature>
            STM32_i32To8((int32_t)bmp_data.temp_C, packet, 4);
 80029e4:	6878      	ldr	r0, [r7, #4]
 80029e6:	f7fe fb27 	bl	8001038 <__aeabi_f2iz>
 80029ea:	2304      	movs	r3, #4
 80029ec:	9301      	str	r3, [sp, #4]
 80029ee:	68e3      	ldr	r3, [r4, #12]
 80029f0:	9300      	str	r3, [sp, #0]
 80029f2:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 80029f6:	f7ff ff61 	bl	80028bc <STM32_i32To8>
            ICM20602_Update_All(&icm_data);
 80029fa:	4f35      	ldr	r7, [pc, #212]	@ (8002ad0 <STM32_ModeRoutine+0x1d0>)
 80029fc:	4638      	mov	r0, r7
 80029fe:	f7ff f8b3 	bl	8001b68 <ICM20602_Update_All>
            STM32_i32To8((int32_t)icm_data.kalmanAngleRoll, packet, 8);
 8002a02:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8002a04:	f7fe fb18 	bl	8001038 <__aeabi_f2iz>
 8002a08:	2308      	movs	r3, #8
 8002a0a:	9301      	str	r3, [sp, #4]
 8002a0c:	68e3      	ldr	r3, [r4, #12]
 8002a0e:	9300      	str	r3, [sp, #0]
 8002a10:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002a14:	f7ff ff52 	bl	80028bc <STM32_i32To8>
            STM32_i32To8((int32_t)icm_data.kalmanAnglePitch, packet, 12);
 8002a18:	6b78      	ldr	r0, [r7, #52]	@ 0x34
 8002a1a:	f7fe fb0d 	bl	8001038 <__aeabi_f2iz>
 8002a1e:	230c      	movs	r3, #12
 8002a20:	9301      	str	r3, [sp, #4]
 8002a22:	68e3      	ldr	r3, [r4, #12]
 8002a24:	9300      	str	r3, [sp, #0]
 8002a26:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002a2a:	f7ff ff47 	bl	80028bc <STM32_i32To8>
			STM32_u16To8(CD74HC4051_AnRead(&hadc1, CHANNEL_3, PYRO_CHANNEL_DISABLED, VREF33), packet, 20);
 8002a2e:	f8df 80a4 	ldr.w	r8, [pc, #164]	@ 8002ad4 <STM32_ModeRoutine+0x1d4>
 8002a32:	4f29      	ldr	r7, [pc, #164]	@ (8002ad8 <STM32_ModeRoutine+0x1d8>)
 8002a34:	4643      	mov	r3, r8
 8002a36:	4632      	mov	r2, r6
 8002a38:	2111      	movs	r1, #17
 8002a3a:	4638      	mov	r0, r7
 8002a3c:	f7fe ffb8 	bl	80019b0 <CD74HC4051_AnRead>
 8002a40:	2314      	movs	r3, #20
 8002a42:	9301      	str	r3, [sp, #4]
 8002a44:	68e3      	ldr	r3, [r4, #12]
 8002a46:	9300      	str	r3, [sp, #0]
 8002a48:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002a4c:	f7ff ff28 	bl	80028a0 <STM32_u16To8>
			STM32_u16To8(CD74HC4051_AnRead(&hadc1, CHANNEL_5, PYRO_CHANNEL_DISABLED, VREF33), packet, 22);
 8002a50:	4643      	mov	r3, r8
 8002a52:	4632      	mov	r2, r6
 8002a54:	2101      	movs	r1, #1
 8002a56:	4638      	mov	r0, r7
 8002a58:	f7fe ffaa 	bl	80019b0 <CD74HC4051_AnRead>
 8002a5c:	2316      	movs	r3, #22
 8002a5e:	9301      	str	r3, [sp, #4]
 8002a60:	68e3      	ldr	r3, [r4, #12]
 8002a62:	9300      	str	r3, [sp, #0]
 8002a64:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002a68:	f7ff ff1a 	bl	80028a0 <STM32_u16To8>
			STM32_u16To8(CD74HC4051_AnRead(&hadc1, CHANNEL_2, PYRO_CHANNEL_DISABLED, VREF33), packet, 24);
 8002a6c:	4643      	mov	r3, r8
 8002a6e:	4632      	mov	r2, r6
 8002a70:	2110      	movs	r1, #16
 8002a72:	4638      	mov	r0, r7
 8002a74:	f7fe ff9c 	bl	80019b0 <CD74HC4051_AnRead>
 8002a78:	2318      	movs	r3, #24
 8002a7a:	9301      	str	r3, [sp, #4]
 8002a7c:	68e3      	ldr	r3, [r4, #12]
 8002a7e:	9300      	str	r3, [sp, #0]
 8002a80:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002a84:	f7ff ff0c 	bl	80028a0 <STM32_u16To8>
			STM32_u16To8(CD74HC4051_AnRead(&hadc1, CHANNEL_6, PYRO_CHANNEL_DISABLED, VREF5), packet, 26);
 8002a88:	4b14      	ldr	r3, [pc, #80]	@ (8002adc <STM32_ModeRoutine+0x1dc>)
 8002a8a:	4632      	mov	r2, r6
 8002a8c:	2110      	movs	r1, #16
 8002a8e:	4638      	mov	r0, r7
 8002a90:	f7fe ff8e 	bl	80019b0 <CD74HC4051_AnRead>
 8002a94:	231a      	movs	r3, #26
 8002a96:	9301      	str	r3, [sp, #4]
 8002a98:	68e3      	ldr	r3, [r4, #12]
 8002a9a:	9300      	str	r3, [sp, #0]
 8002a9c:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002aa0:	f7ff fefe 	bl	80028a0 <STM32_u16To8>
            break;
 8002aa4:	e73d      	b.n	8002922 <STM32_ModeRoutine+0x22>
				packet.header_states.ble = 0x01;
 8002aa6:	4b05      	ldr	r3, [pc, #20]	@ (8002abc <STM32_ModeRoutine+0x1bc>)
 8002aa8:	2201      	movs	r2, #1
 8002aaa:	71da      	strb	r2, [r3, #7]
				printf("(+) HM10BLE connection succeeded...\r\n");
 8002aac:	480c      	ldr	r0, [pc, #48]	@ (8002ae0 <STM32_ModeRoutine+0x1e0>)
 8002aae:	f005 fb81 	bl	80081b4 <puts>
				printf(" -> En attente des valeurs de reference pour la temperature et de la pression(t;p)...\r\n");
 8002ab2:	480c      	ldr	r0, [pc, #48]	@ (8002ae4 <STM32_ModeRoutine+0x1e4>)
 8002ab4:	f005 fb7e 	bl	80081b4 <puts>
 8002ab8:	e761      	b.n	800297e <STM32_ModeRoutine+0x7e>
 8002aba:	bf00      	nop
 8002abc:	2000026c 	.word	0x2000026c
 8002ac0:	200002dc 	.word	0x200002dc
 8002ac4:	2000027c 	.word	0x2000027c
 8002ac8:	200002d4 	.word	0x200002d4
 8002acc:	20000324 	.word	0x20000324
 8002ad0:	200002ec 	.word	0x200002ec
 8002ad4:	40533333 	.word	0x40533333
 8002ad8:	200004dc 	.word	0x200004dc
 8002adc:	40a00000 	.word	0x40a00000
 8002ae0:	0800bc24 	.word	0x0800bc24
 8002ae4:	0800bc4c 	.word	0x0800bc4c
        	BMP280_SwapMode(BMP280_SETTING_CTRL_MEAS_NORMAL);
 8002ae8:	2057      	movs	r0, #87	@ 0x57
 8002aea:	f7fe ff15 	bl	8001918 <BMP280_SwapMode>
            header_states = (packet.header_states.mode << 6) | (packet.header_states.pyro0 << 5) | (packet.header_states.pyro1 << 4) | 0x00;
 8002aee:	4cae      	ldr	r4, [pc, #696]	@ (8002da8 <STM32_ModeRoutine+0x4a8>)
 8002af0:	7823      	ldrb	r3, [r4, #0]
 8002af2:	7865      	ldrb	r5, [r4, #1]
 8002af4:	016d      	lsls	r5, r5, #5
 8002af6:	ea45 1583 	orr.w	r5, r5, r3, lsl #6
 8002afa:	b26d      	sxtb	r5, r5
 8002afc:	78a3      	ldrb	r3, [r4, #2]
 8002afe:	ea45 1503 	orr.w	r5, r5, r3, lsl #4
 8002b02:	f005 05f0 	and.w	r5, r5, #240	@ 0xf0
            packet.size = INFLIGHT_DATASIZE;
 8002b06:	203e      	movs	r0, #62	@ 0x3e
 8002b08:	73a0      	strb	r0, [r4, #14]
            packet.data = (uint8_t *)malloc(packet.size * sizeof(uint8_t));
 8002b0a:	f003 ff09 	bl	8006920 <malloc>
 8002b0e:	60a0      	str	r0, [r4, #8]
            BMP280_ReadPressure(&bmp_data);
 8002b10:	4ea6      	ldr	r6, [pc, #664]	@ (8002dac <STM32_ModeRoutine+0x4ac>)
 8002b12:	4630      	mov	r0, r6
 8002b14:	f7fe fd48 	bl	80015a8 <BMP280_ReadPressure>
            STM32_i32To8((int32_t)BMP280_PressureToAltitude(bmp_data.pressure_Pa), packet, 0);
 8002b18:	6830      	ldr	r0, [r6, #0]
 8002b1a:	f7fe fcb9 	bl	8001490 <BMP280_PressureToAltitude>
 8002b1e:	f7fe fa8b 	bl	8001038 <__aeabi_f2iz>
 8002b22:	2300      	movs	r3, #0
 8002b24:	9301      	str	r3, [sp, #4]
 8002b26:	68e3      	ldr	r3, [r4, #12]
 8002b28:	9300      	str	r3, [sp, #0]
 8002b2a:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002b2e:	f7ff fec5 	bl	80028bc <STM32_i32To8>
            BMP280_ReadTemperature(&bmp_data);
 8002b32:	4630      	mov	r0, r6
 8002b34:	f7fe fcf4 	bl	8001520 <BMP280_ReadTemperature>
            STM32_i32To8((int32_t)bmp_data.temp_C, packet, 4);
 8002b38:	6870      	ldr	r0, [r6, #4]
 8002b3a:	f7fe fa7d 	bl	8001038 <__aeabi_f2iz>
 8002b3e:	2304      	movs	r3, #4
 8002b40:	9301      	str	r3, [sp, #4]
 8002b42:	68e3      	ldr	r3, [r4, #12]
 8002b44:	9300      	str	r3, [sp, #0]
 8002b46:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002b4a:	f7ff feb7 	bl	80028bc <STM32_i32To8>
            L76LM33_Read(GPS_USART_PORT, L76LM33_buffer, &gps_data);
 8002b4e:	4e98      	ldr	r6, [pc, #608]	@ (8002db0 <STM32_ModeRoutine+0x4b0>)
 8002b50:	4632      	mov	r2, r6
 8002b52:	4998      	ldr	r1, [pc, #608]	@ (8002db4 <STM32_ModeRoutine+0x4b4>)
 8002b54:	2002      	movs	r0, #2
 8002b56:	f7ff faad 	bl	80020b4 <L76LM33_Read>
            STM32_i32To8(gps_data.time, packet, 8);
 8002b5a:	2308      	movs	r3, #8
 8002b5c:	9301      	str	r3, [sp, #4]
 8002b5e:	68e3      	ldr	r3, [r4, #12]
 8002b60:	9300      	str	r3, [sp, #0]
 8002b62:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002b66:	6830      	ldr	r0, [r6, #0]
 8002b68:	f7ff fea8 	bl	80028bc <STM32_i32To8>
            STM32_i32To8(gps_data.latitude, packet, 12);
 8002b6c:	230c      	movs	r3, #12
 8002b6e:	9301      	str	r3, [sp, #4]
 8002b70:	68e3      	ldr	r3, [r4, #12]
 8002b72:	9300      	str	r3, [sp, #0]
 8002b74:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002b78:	6870      	ldr	r0, [r6, #4]
 8002b7a:	f7ff fe9f 	bl	80028bc <STM32_i32To8>
            packet.data[12] = gps_data.latitude_indicator;
 8002b7e:	68a3      	ldr	r3, [r4, #8]
 8002b80:	7a32      	ldrb	r2, [r6, #8]
 8002b82:	731a      	strb	r2, [r3, #12]
            STM32_i32To8(gps_data.time, packet, 17);
 8002b84:	2311      	movs	r3, #17
 8002b86:	9301      	str	r3, [sp, #4]
 8002b88:	68e3      	ldr	r3, [r4, #12]
 8002b8a:	9300      	str	r3, [sp, #0]
 8002b8c:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002b90:	6830      	ldr	r0, [r6, #0]
 8002b92:	f7ff fe93 	bl	80028bc <STM32_i32To8>
            packet.data[17] = gps_data.longitude_indicator;
 8002b96:	68a3      	ldr	r3, [r4, #8]
 8002b98:	7c32      	ldrb	r2, [r6, #16]
 8002b9a:	745a      	strb	r2, [r3, #17]
            STM32_i32To8(gps_data.speed_knots, packet, 22);
 8002b9c:	2316      	movs	r3, #22
 8002b9e:	9301      	str	r3, [sp, #4]
 8002ba0:	68e3      	ldr	r3, [r4, #12]
 8002ba2:	9300      	str	r3, [sp, #0]
 8002ba4:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002ba8:	6970      	ldr	r0, [r6, #20]
 8002baa:	f7ff fe87 	bl	80028bc <STM32_i32To8>
            STM32_i32To8(gps_data.track_angle, packet, 26);
 8002bae:	231a      	movs	r3, #26
 8002bb0:	9301      	str	r3, [sp, #4]
 8002bb2:	68e3      	ldr	r3, [r4, #12]
 8002bb4:	9300      	str	r3, [sp, #0]
 8002bb6:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002bba:	69b0      	ldr	r0, [r6, #24]
 8002bbc:	f7ff fe7e 	bl	80028bc <STM32_i32To8>
            ICM20602_Update_All(&icm_data);
 8002bc0:	4e7d      	ldr	r6, [pc, #500]	@ (8002db8 <STM32_ModeRoutine+0x4b8>)
 8002bc2:	4630      	mov	r0, r6
 8002bc4:	f7fe ffd0 	bl	8001b68 <ICM20602_Update_All>
            STM32_i32To8((int32_t)icm_data.gyroX, packet, 30);
 8002bc8:	68f0      	ldr	r0, [r6, #12]
 8002bca:	f7fe fa35 	bl	8001038 <__aeabi_f2iz>
 8002bce:	231e      	movs	r3, #30
 8002bd0:	9301      	str	r3, [sp, #4]
 8002bd2:	68e3      	ldr	r3, [r4, #12]
 8002bd4:	9300      	str	r3, [sp, #0]
 8002bd6:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002bda:	f7ff fe6f 	bl	80028bc <STM32_i32To8>
            STM32_i32To8((int32_t)icm_data.gyroY, packet, 34);
 8002bde:	6930      	ldr	r0, [r6, #16]
 8002be0:	f7fe fa2a 	bl	8001038 <__aeabi_f2iz>
 8002be4:	2322      	movs	r3, #34	@ 0x22
 8002be6:	9301      	str	r3, [sp, #4]
 8002be8:	68e3      	ldr	r3, [r4, #12]
 8002bea:	9300      	str	r3, [sp, #0]
 8002bec:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002bf0:	f7ff fe64 	bl	80028bc <STM32_i32To8>
            STM32_i32To8((int32_t)icm_data.gyroZ, packet, 38);
 8002bf4:	6970      	ldr	r0, [r6, #20]
 8002bf6:	f7fe fa1f 	bl	8001038 <__aeabi_f2iz>
 8002bfa:	2326      	movs	r3, #38	@ 0x26
 8002bfc:	9301      	str	r3, [sp, #4]
 8002bfe:	68e3      	ldr	r3, [r4, #12]
 8002c00:	9300      	str	r3, [sp, #0]
 8002c02:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002c06:	f7ff fe59 	bl	80028bc <STM32_i32To8>
            STM32_i32To8((int32_t)icm_data.accX, packet, 42);
 8002c0a:	69b0      	ldr	r0, [r6, #24]
 8002c0c:	f7fe fa14 	bl	8001038 <__aeabi_f2iz>
 8002c10:	232a      	movs	r3, #42	@ 0x2a
 8002c12:	9301      	str	r3, [sp, #4]
 8002c14:	68e3      	ldr	r3, [r4, #12]
 8002c16:	9300      	str	r3, [sp, #0]
 8002c18:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002c1c:	f7ff fe4e 	bl	80028bc <STM32_i32To8>
            STM32_i32To8((int32_t)icm_data.accY, packet, 46);
 8002c20:	69f0      	ldr	r0, [r6, #28]
 8002c22:	f7fe fa09 	bl	8001038 <__aeabi_f2iz>
 8002c26:	232e      	movs	r3, #46	@ 0x2e
 8002c28:	9301      	str	r3, [sp, #4]
 8002c2a:	68e3      	ldr	r3, [r4, #12]
 8002c2c:	9300      	str	r3, [sp, #0]
 8002c2e:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002c32:	f7ff fe43 	bl	80028bc <STM32_i32To8>
            STM32_i32To8((int32_t)icm_data.accZ, packet, 50);
 8002c36:	6a30      	ldr	r0, [r6, #32]
 8002c38:	f7fe f9fe 	bl	8001038 <__aeabi_f2iz>
 8002c3c:	2332      	movs	r3, #50	@ 0x32
 8002c3e:	9301      	str	r3, [sp, #4]
 8002c40:	68e3      	ldr	r3, [r4, #12]
 8002c42:	9300      	str	r3, [sp, #0]
 8002c44:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002c48:	f7ff fe38 	bl	80028bc <STM32_i32To8>
			STM32_i32To8((int32_t)icm_data.kalmanAngleRoll, packet, 54);
 8002c4c:	6b30      	ldr	r0, [r6, #48]	@ 0x30
 8002c4e:	f7fe f9f3 	bl	8001038 <__aeabi_f2iz>
 8002c52:	2336      	movs	r3, #54	@ 0x36
 8002c54:	9301      	str	r3, [sp, #4]
 8002c56:	68e3      	ldr	r3, [r4, #12]
 8002c58:	9300      	str	r3, [sp, #0]
 8002c5a:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002c5e:	f7ff fe2d 	bl	80028bc <STM32_i32To8>
			STM32_i32To8((int32_t)icm_data.kalmanAnglePitch, packet, 58);
 8002c62:	6b70      	ldr	r0, [r6, #52]	@ 0x34
 8002c64:	f7fe f9e8 	bl	8001038 <__aeabi_f2iz>
 8002c68:	233a      	movs	r3, #58	@ 0x3a
 8002c6a:	9301      	str	r3, [sp, #4]
 8002c6c:	68e3      	ldr	r3, [r4, #12]
 8002c6e:	9300      	str	r3, [sp, #0]
 8002c70:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002c74:	f7ff fe22 	bl	80028bc <STM32_i32To8>
            break;
 8002c78:	e653      	b.n	8002922 <STM32_ModeRoutine+0x22>
        	BMP280_SwapMode(BMP280_SETTING_CTRL_MEAS_LOW);
 8002c7a:	2054      	movs	r0, #84	@ 0x54
 8002c7c:	f7fe fe4c 	bl	8001918 <BMP280_SwapMode>
            header_states = (packet.header_states.mode << 6) | 0x00;
 8002c80:	4c49      	ldr	r4, [pc, #292]	@ (8002da8 <STM32_ModeRoutine+0x4a8>)
 8002c82:	7825      	ldrb	r5, [r4, #0]
 8002c84:	01ad      	lsls	r5, r5, #6
 8002c86:	b2ed      	uxtb	r5, r5
            packet.size = POSTFLIGHT_DATASIZE;
 8002c88:	2022      	movs	r0, #34	@ 0x22
 8002c8a:	73a0      	strb	r0, [r4, #14]
            packet.data = (uint8_t *)malloc(packet.size * sizeof(uint8_t));
 8002c8c:	f003 fe48 	bl	8006920 <malloc>
 8002c90:	60a0      	str	r0, [r4, #8]
			BMP280_ReadPressure(&bmp_data);
 8002c92:	4e46      	ldr	r6, [pc, #280]	@ (8002dac <STM32_ModeRoutine+0x4ac>)
 8002c94:	4630      	mov	r0, r6
 8002c96:	f7fe fc87 	bl	80015a8 <BMP280_ReadPressure>
			STM32_i32To8((int32_t)BMP280_PressureToAltitude(bmp_data.pressure_Pa), packet, 0);
 8002c9a:	6830      	ldr	r0, [r6, #0]
 8002c9c:	f7fe fbf8 	bl	8001490 <BMP280_PressureToAltitude>
 8002ca0:	f7fe f9ca 	bl	8001038 <__aeabi_f2iz>
 8002ca4:	2700      	movs	r7, #0
 8002ca6:	9701      	str	r7, [sp, #4]
 8002ca8:	68e3      	ldr	r3, [r4, #12]
 8002caa:	9300      	str	r3, [sp, #0]
 8002cac:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002cb0:	f7ff fe04 	bl	80028bc <STM32_i32To8>
			L76LM33_Read(GPS_USART_PORT, L76LM33_buffer, &gps_data);
 8002cb4:	4e3e      	ldr	r6, [pc, #248]	@ (8002db0 <STM32_ModeRoutine+0x4b0>)
 8002cb6:	4632      	mov	r2, r6
 8002cb8:	493e      	ldr	r1, [pc, #248]	@ (8002db4 <STM32_ModeRoutine+0x4b4>)
 8002cba:	2002      	movs	r0, #2
 8002cbc:	f7ff f9fa 	bl	80020b4 <L76LM33_Read>
			STM32_i32To8(gps_data.time, packet, 4);
 8002cc0:	2304      	movs	r3, #4
 8002cc2:	9301      	str	r3, [sp, #4]
 8002cc4:	68e3      	ldr	r3, [r4, #12]
 8002cc6:	9300      	str	r3, [sp, #0]
 8002cc8:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002ccc:	6830      	ldr	r0, [r6, #0]
 8002cce:	f7ff fdf5 	bl	80028bc <STM32_i32To8>
			STM32_i32To8(gps_data.latitude, packet, 8);
 8002cd2:	2308      	movs	r3, #8
 8002cd4:	9301      	str	r3, [sp, #4]
 8002cd6:	68e3      	ldr	r3, [r4, #12]
 8002cd8:	9300      	str	r3, [sp, #0]
 8002cda:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002cde:	6870      	ldr	r0, [r6, #4]
 8002ce0:	f7ff fdec 	bl	80028bc <STM32_i32To8>
			packet.data[12] = gps_data.latitude_indicator;
 8002ce4:	68a3      	ldr	r3, [r4, #8]
 8002ce6:	7a32      	ldrb	r2, [r6, #8]
 8002ce8:	731a      	strb	r2, [r3, #12]
			STM32_i32To8(gps_data.time, packet, 13);
 8002cea:	230d      	movs	r3, #13
 8002cec:	9301      	str	r3, [sp, #4]
 8002cee:	68e3      	ldr	r3, [r4, #12]
 8002cf0:	9300      	str	r3, [sp, #0]
 8002cf2:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002cf6:	6830      	ldr	r0, [r6, #0]
 8002cf8:	f7ff fde0 	bl	80028bc <STM32_i32To8>
			packet.data[17] = gps_data.longitude_indicator;
 8002cfc:	68a3      	ldr	r3, [r4, #8]
 8002cfe:	7c32      	ldrb	r2, [r6, #16]
 8002d00:	745a      	strb	r2, [r3, #17]
			STM32_i32To8(gps_data.speed_knots, packet, 18);
 8002d02:	2312      	movs	r3, #18
 8002d04:	9301      	str	r3, [sp, #4]
 8002d06:	68e3      	ldr	r3, [r4, #12]
 8002d08:	9300      	str	r3, [sp, #0]
 8002d0a:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002d0e:	6970      	ldr	r0, [r6, #20]
 8002d10:	f7ff fdd4 	bl	80028bc <STM32_i32To8>
			STM32_i32To8(gps_data.track_angle, packet, 22);
 8002d14:	2316      	movs	r3, #22
 8002d16:	9301      	str	r3, [sp, #4]
 8002d18:	68e3      	ldr	r3, [r4, #12]
 8002d1a:	9300      	str	r3, [sp, #0]
 8002d1c:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002d20:	69b0      	ldr	r0, [r6, #24]
 8002d22:	f7ff fdcb 	bl	80028bc <STM32_i32To8>
			STM32_u16To8(CD74HC4051_AnRead(&hadc1, CHANNEL_3, PYRO_CHANNEL_DISABLED, VREF33), packet, 26);
 8002d26:	f8df 8094 	ldr.w	r8, [pc, #148]	@ 8002dbc <STM32_ModeRoutine+0x4bc>
 8002d2a:	4e25      	ldr	r6, [pc, #148]	@ (8002dc0 <STM32_ModeRoutine+0x4c0>)
 8002d2c:	4643      	mov	r3, r8
 8002d2e:	463a      	mov	r2, r7
 8002d30:	2111      	movs	r1, #17
 8002d32:	4630      	mov	r0, r6
 8002d34:	f7fe fe3c 	bl	80019b0 <CD74HC4051_AnRead>
 8002d38:	231a      	movs	r3, #26
 8002d3a:	9301      	str	r3, [sp, #4]
 8002d3c:	68e3      	ldr	r3, [r4, #12]
 8002d3e:	9300      	str	r3, [sp, #0]
 8002d40:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002d44:	f7ff fdac 	bl	80028a0 <STM32_u16To8>
			STM32_u16To8(CD74HC4051_AnRead(&hadc1, CHANNEL_5, PYRO_CHANNEL_DISABLED, VREF33), packet, 28);
 8002d48:	4643      	mov	r3, r8
 8002d4a:	463a      	mov	r2, r7
 8002d4c:	2101      	movs	r1, #1
 8002d4e:	4630      	mov	r0, r6
 8002d50:	f7fe fe2e 	bl	80019b0 <CD74HC4051_AnRead>
 8002d54:	231c      	movs	r3, #28
 8002d56:	9301      	str	r3, [sp, #4]
 8002d58:	68e3      	ldr	r3, [r4, #12]
 8002d5a:	9300      	str	r3, [sp, #0]
 8002d5c:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002d60:	f7ff fd9e 	bl	80028a0 <STM32_u16To8>
			STM32_u16To8(CD74HC4051_AnRead(&hadc1, CHANNEL_2, PYRO_CHANNEL_DISABLED, VREF33), packet, 30);
 8002d64:	4643      	mov	r3, r8
 8002d66:	463a      	mov	r2, r7
 8002d68:	2110      	movs	r1, #16
 8002d6a:	4630      	mov	r0, r6
 8002d6c:	f7fe fe20 	bl	80019b0 <CD74HC4051_AnRead>
 8002d70:	231e      	movs	r3, #30
 8002d72:	9301      	str	r3, [sp, #4]
 8002d74:	68e3      	ldr	r3, [r4, #12]
 8002d76:	9300      	str	r3, [sp, #0]
 8002d78:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002d7c:	f7ff fd90 	bl	80028a0 <STM32_u16To8>
			STM32_u16To8(CD74HC4051_AnRead(&hadc1, CHANNEL_6, PYRO_CHANNEL_DISABLED, VREF5), packet, 32);
 8002d80:	4b10      	ldr	r3, [pc, #64]	@ (8002dc4 <STM32_ModeRoutine+0x4c4>)
 8002d82:	463a      	mov	r2, r7
 8002d84:	2110      	movs	r1, #16
 8002d86:	4630      	mov	r0, r6
 8002d88:	f7fe fe12 	bl	80019b0 <CD74HC4051_AnRead>
 8002d8c:	2320      	movs	r3, #32
 8002d8e:	9301      	str	r3, [sp, #4]
 8002d90:	68e3      	ldr	r3, [r4, #12]
 8002d92:	9300      	str	r3, [sp, #0]
 8002d94:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002d98:	f7ff fd82 	bl	80028a0 <STM32_u16To8>
            break;
 8002d9c:	e5c1      	b.n	8002922 <STM32_ModeRoutine+0x22>
    	free(packet.data);
 8002d9e:	4b02      	ldr	r3, [pc, #8]	@ (8002da8 <STM32_ModeRoutine+0x4a8>)
 8002da0:	6898      	ldr	r0, [r3, #8]
 8002da2:	f003 fdc5 	bl	8006930 <free>
    	check = 1; // OK
 8002da6:	e5d8      	b.n	800295a <STM32_ModeRoutine+0x5a>
 8002da8:	2000026c 	.word	0x2000026c
 8002dac:	20000324 	.word	0x20000324
 8002db0:	20000350 	.word	0x20000350
 8002db4:	20000290 	.word	0x20000290
 8002db8:	200002ec 	.word	0x200002ec
 8002dbc:	40533333 	.word	0x40533333
 8002dc0:	200004dc 	.word	0x200004dc
 8002dc4:	40a00000 	.word	0x40a00000

08002dc8 <_write>:

}

/* USER CODE BEGIN 4 */
int _write(int le, char *ptr, int len)
{
 8002dc8:	b570      	push	{r4, r5, r6, lr}
 8002dca:	460c      	mov	r4, r1
 8002dcc:	4616      	mov	r6, r2
	int DataIdx;
	for(DataIdx = 0; DataIdx < len; DataIdx++)
 8002dce:	2500      	movs	r5, #0
 8002dd0:	e004      	b.n	8002ddc <_write+0x14>
	{
		ITM_SendChar(*ptr++);
 8002dd2:	f814 0b01 	ldrb.w	r0, [r4], #1
 8002dd6:	f7ff fd49 	bl	800286c <ITM_SendChar>
	for(DataIdx = 0; DataIdx < len; DataIdx++)
 8002dda:	3501      	adds	r5, #1
 8002ddc:	42b5      	cmp	r5, r6
 8002dde:	dbf8      	blt.n	8002dd2 <_write+0xa>
	}
	return len;
}
 8002de0:	4630      	mov	r0, r6
 8002de2:	bd70      	pop	{r4, r5, r6, pc}

08002de4 <Error_Handler>:
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002de4:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002de6:	e7fe      	b.n	8002de6 <Error_Handler+0x2>

08002de8 <MX_USART1_UART_Init>:
{
 8002de8:	b508      	push	{r3, lr}
  huart1.Instance = USART1;
 8002dea:	480a      	ldr	r0, [pc, #40]	@ (8002e14 <MX_USART1_UART_Init+0x2c>)
 8002dec:	4b0a      	ldr	r3, [pc, #40]	@ (8002e18 <MX_USART1_UART_Init+0x30>)
 8002dee:	6003      	str	r3, [r0, #0]
  huart1.Init.BaudRate = 9600;
 8002df0:	f44f 5316 	mov.w	r3, #9600	@ 0x2580
 8002df4:	6043      	str	r3, [r0, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8002df6:	2300      	movs	r3, #0
 8002df8:	6083      	str	r3, [r0, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8002dfa:	60c3      	str	r3, [r0, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8002dfc:	6103      	str	r3, [r0, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8002dfe:	220c      	movs	r2, #12
 8002e00:	6142      	str	r2, [r0, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002e02:	6183      	str	r3, [r0, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8002e04:	61c3      	str	r3, [r0, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8002e06:	f002 ff9b 	bl	8005d40 <HAL_UART_Init>
 8002e0a:	b900      	cbnz	r0, 8002e0e <MX_USART1_UART_Init+0x26>
}
 8002e0c:	bd08      	pop	{r3, pc}
    Error_Handler();
 8002e0e:	f7ff ffe9 	bl	8002de4 <Error_Handler>
 8002e12:	bf00      	nop
 8002e14:	200003fc 	.word	0x200003fc
 8002e18:	40013800 	.word	0x40013800

08002e1c <MX_USART2_UART_Init>:
{
 8002e1c:	b508      	push	{r3, lr}
  huart2.Instance = USART2;
 8002e1e:	480a      	ldr	r0, [pc, #40]	@ (8002e48 <MX_USART2_UART_Init+0x2c>)
 8002e20:	4b0a      	ldr	r3, [pc, #40]	@ (8002e4c <MX_USART2_UART_Init+0x30>)
 8002e22:	6003      	str	r3, [r0, #0]
  huart2.Init.BaudRate = 9600;
 8002e24:	f44f 5316 	mov.w	r3, #9600	@ 0x2580
 8002e28:	6043      	str	r3, [r0, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8002e2a:	2300      	movs	r3, #0
 8002e2c:	6083      	str	r3, [r0, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8002e2e:	60c3      	str	r3, [r0, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8002e30:	6103      	str	r3, [r0, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8002e32:	220c      	movs	r2, #12
 8002e34:	6142      	str	r2, [r0, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002e36:	6183      	str	r3, [r0, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8002e38:	61c3      	str	r3, [r0, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8002e3a:	f002 ff81 	bl	8005d40 <HAL_UART_Init>
 8002e3e:	b900      	cbnz	r0, 8002e42 <MX_USART2_UART_Init+0x26>
}
 8002e40:	bd08      	pop	{r3, pc}
    Error_Handler();
 8002e42:	f7ff ffcf 	bl	8002de4 <Error_Handler>
 8002e46:	bf00      	nop
 8002e48:	200003b4 	.word	0x200003b4
 8002e4c:	40004400 	.word	0x40004400

08002e50 <MX_USART3_UART_Init>:
{
 8002e50:	b508      	push	{r3, lr}
  huart3.Instance = USART3;
 8002e52:	480a      	ldr	r0, [pc, #40]	@ (8002e7c <MX_USART3_UART_Init+0x2c>)
 8002e54:	4b0a      	ldr	r3, [pc, #40]	@ (8002e80 <MX_USART3_UART_Init+0x30>)
 8002e56:	6003      	str	r3, [r0, #0]
  huart3.Init.BaudRate = 9600;
 8002e58:	f44f 5316 	mov.w	r3, #9600	@ 0x2580
 8002e5c:	6043      	str	r3, [r0, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 8002e5e:	2300      	movs	r3, #0
 8002e60:	6083      	str	r3, [r0, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 8002e62:	60c3      	str	r3, [r0, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 8002e64:	6103      	str	r3, [r0, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 8002e66:	220c      	movs	r2, #12
 8002e68:	6142      	str	r2, [r0, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002e6a:	6183      	str	r3, [r0, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 8002e6c:	61c3      	str	r3, [r0, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 8002e6e:	f002 ff67 	bl	8005d40 <HAL_UART_Init>
 8002e72:	b900      	cbnz	r0, 8002e76 <MX_USART3_UART_Init+0x26>
}
 8002e74:	bd08      	pop	{r3, pc}
    Error_Handler();
 8002e76:	f7ff ffb5 	bl	8002de4 <Error_Handler>
 8002e7a:	bf00      	nop
 8002e7c:	2000036c 	.word	0x2000036c
 8002e80:	40004800 	.word	0x40004800

08002e84 <MX_TIM3_Init>:
{
 8002e84:	b500      	push	{lr}
 8002e86:	b08f      	sub	sp, #60	@ 0x3c
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8002e88:	2300      	movs	r3, #0
 8002e8a:	930a      	str	r3, [sp, #40]	@ 0x28
 8002e8c:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002e8e:	930c      	str	r3, [sp, #48]	@ 0x30
 8002e90:	930d      	str	r3, [sp, #52]	@ 0x34
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002e92:	9308      	str	r3, [sp, #32]
 8002e94:	9309      	str	r3, [sp, #36]	@ 0x24
  TIM_OC_InitTypeDef sConfigOC = {0};
 8002e96:	9301      	str	r3, [sp, #4]
 8002e98:	9302      	str	r3, [sp, #8]
 8002e9a:	9303      	str	r3, [sp, #12]
 8002e9c:	9304      	str	r3, [sp, #16]
 8002e9e:	9305      	str	r3, [sp, #20]
 8002ea0:	9306      	str	r3, [sp, #24]
 8002ea2:	9307      	str	r3, [sp, #28]
  htim3.Instance = TIM3;
 8002ea4:	481e      	ldr	r0, [pc, #120]	@ (8002f20 <MX_TIM3_Init+0x9c>)
 8002ea6:	4a1f      	ldr	r2, [pc, #124]	@ (8002f24 <MX_TIM3_Init+0xa0>)
 8002ea8:	6002      	str	r2, [r0, #0]
  htim3.Init.Prescaler = 127;
 8002eaa:	227f      	movs	r2, #127	@ 0x7f
 8002eac:	6042      	str	r2, [r0, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002eae:	6083      	str	r3, [r0, #8]
  htim3.Init.Period = 20;
 8002eb0:	2214      	movs	r2, #20
 8002eb2:	60c2      	str	r2, [r0, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002eb4:	6103      	str	r3, [r0, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002eb6:	6183      	str	r3, [r0, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8002eb8:	f002 fa32 	bl	8005320 <HAL_TIM_Base_Init>
 8002ebc:	bb28      	cbnz	r0, 8002f0a <MX_TIM3_Init+0x86>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002ebe:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8002ec2:	930a      	str	r3, [sp, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8002ec4:	a90a      	add	r1, sp, #40	@ 0x28
 8002ec6:	4816      	ldr	r0, [pc, #88]	@ (8002f20 <MX_TIM3_Init+0x9c>)
 8002ec8:	f002 fb94 	bl	80055f4 <HAL_TIM_ConfigClockSource>
 8002ecc:	b9f8      	cbnz	r0, 8002f0e <MX_TIM3_Init+0x8a>
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8002ece:	4814      	ldr	r0, [pc, #80]	@ (8002f20 <MX_TIM3_Init+0x9c>)
 8002ed0:	f002 fa75 	bl	80053be <HAL_TIM_PWM_Init>
 8002ed4:	b9e8      	cbnz	r0, 8002f12 <MX_TIM3_Init+0x8e>
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002ed6:	2300      	movs	r3, #0
 8002ed8:	9308      	str	r3, [sp, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002eda:	9309      	str	r3, [sp, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8002edc:	a908      	add	r1, sp, #32
 8002ede:	4810      	ldr	r0, [pc, #64]	@ (8002f20 <MX_TIM3_Init+0x9c>)
 8002ee0:	f002 fed0 	bl	8005c84 <HAL_TIMEx_MasterConfigSynchronization>
 8002ee4:	b9b8      	cbnz	r0, 8002f16 <MX_TIM3_Init+0x92>
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8002ee6:	2360      	movs	r3, #96	@ 0x60
 8002ee8:	9301      	str	r3, [sp, #4]
  sConfigOC.Pulse = 0;
 8002eea:	2300      	movs	r3, #0
 8002eec:	9302      	str	r3, [sp, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8002eee:	9303      	str	r3, [sp, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8002ef0:	9305      	str	r3, [sp, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8002ef2:	220c      	movs	r2, #12
 8002ef4:	a901      	add	r1, sp, #4
 8002ef6:	480a      	ldr	r0, [pc, #40]	@ (8002f20 <MX_TIM3_Init+0x9c>)
 8002ef8:	f002 faba 	bl	8005470 <HAL_TIM_PWM_ConfigChannel>
 8002efc:	b968      	cbnz	r0, 8002f1a <MX_TIM3_Init+0x96>
  HAL_TIM_MspPostInit(&htim3);
 8002efe:	4808      	ldr	r0, [pc, #32]	@ (8002f20 <MX_TIM3_Init+0x9c>)
 8002f00:	f000 fa28 	bl	8003354 <HAL_TIM_MspPostInit>
}
 8002f04:	b00f      	add	sp, #60	@ 0x3c
 8002f06:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 8002f0a:	f7ff ff6b 	bl	8002de4 <Error_Handler>
    Error_Handler();
 8002f0e:	f7ff ff69 	bl	8002de4 <Error_Handler>
    Error_Handler();
 8002f12:	f7ff ff67 	bl	8002de4 <Error_Handler>
    Error_Handler();
 8002f16:	f7ff ff65 	bl	8002de4 <Error_Handler>
    Error_Handler();
 8002f1a:	f7ff ff63 	bl	8002de4 <Error_Handler>
 8002f1e:	bf00      	nop
 8002f20:	20000444 	.word	0x20000444
 8002f24:	40000400 	.word	0x40000400

08002f28 <MX_TIM2_Init>:
{
 8002f28:	b500      	push	{lr}
 8002f2a:	b087      	sub	sp, #28
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8002f2c:	2300      	movs	r3, #0
 8002f2e:	9302      	str	r3, [sp, #8]
 8002f30:	9303      	str	r3, [sp, #12]
 8002f32:	9304      	str	r3, [sp, #16]
 8002f34:	9305      	str	r3, [sp, #20]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002f36:	9300      	str	r3, [sp, #0]
 8002f38:	9301      	str	r3, [sp, #4]
  htim2.Instance = TIM2;
 8002f3a:	4814      	ldr	r0, [pc, #80]	@ (8002f8c <MX_TIM2_Init+0x64>)
 8002f3c:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8002f40:	6002      	str	r2, [r0, #0]
  htim2.Init.Prescaler = 14400;
 8002f42:	f44f 5261 	mov.w	r2, #14400	@ 0x3840
 8002f46:	6042      	str	r2, [r0, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002f48:	6083      	str	r3, [r0, #8]
  htim2.Init.Period = 65535;
 8002f4a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8002f4e:	60c2      	str	r2, [r0, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002f50:	6103      	str	r3, [r0, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002f52:	6183      	str	r3, [r0, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8002f54:	f002 f9e4 	bl	8005320 <HAL_TIM_Base_Init>
 8002f58:	b990      	cbnz	r0, 8002f80 <MX_TIM2_Init+0x58>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002f5a:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8002f5e:	9302      	str	r3, [sp, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8002f60:	a902      	add	r1, sp, #8
 8002f62:	480a      	ldr	r0, [pc, #40]	@ (8002f8c <MX_TIM2_Init+0x64>)
 8002f64:	f002 fb46 	bl	80055f4 <HAL_TIM_ConfigClockSource>
 8002f68:	b960      	cbnz	r0, 8002f84 <MX_TIM2_Init+0x5c>
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002f6a:	2300      	movs	r3, #0
 8002f6c:	9300      	str	r3, [sp, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002f6e:	9301      	str	r3, [sp, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8002f70:	4669      	mov	r1, sp
 8002f72:	4806      	ldr	r0, [pc, #24]	@ (8002f8c <MX_TIM2_Init+0x64>)
 8002f74:	f002 fe86 	bl	8005c84 <HAL_TIMEx_MasterConfigSynchronization>
 8002f78:	b930      	cbnz	r0, 8002f88 <MX_TIM2_Init+0x60>
}
 8002f7a:	b007      	add	sp, #28
 8002f7c:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 8002f80:	f7ff ff30 	bl	8002de4 <Error_Handler>
    Error_Handler();
 8002f84:	f7ff ff2e 	bl	8002de4 <Error_Handler>
    Error_Handler();
 8002f88:	f7ff ff2c 	bl	8002de4 <Error_Handler>
 8002f8c:	2000048c 	.word	0x2000048c

08002f90 <MX_ADC1_Init>:
{
 8002f90:	b500      	push	{lr}
 8002f92:	b085      	sub	sp, #20
  ADC_ChannelConfTypeDef sConfig = {0};
 8002f94:	2300      	movs	r3, #0
 8002f96:	9301      	str	r3, [sp, #4]
 8002f98:	9302      	str	r3, [sp, #8]
 8002f9a:	9303      	str	r3, [sp, #12]
  hadc1.Instance = ADC1;
 8002f9c:	480f      	ldr	r0, [pc, #60]	@ (8002fdc <MX_ADC1_Init+0x4c>)
 8002f9e:	4a10      	ldr	r2, [pc, #64]	@ (8002fe0 <MX_ADC1_Init+0x50>)
 8002fa0:	6002      	str	r2, [r0, #0]
  hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 8002fa2:	6083      	str	r3, [r0, #8]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8002fa4:	7303      	strb	r3, [r0, #12]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8002fa6:	7503      	strb	r3, [r0, #20]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8002fa8:	f44f 2260 	mov.w	r2, #917504	@ 0xe0000
 8002fac:	61c2      	str	r2, [r0, #28]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8002fae:	6043      	str	r3, [r0, #4]
  hadc1.Init.NbrOfConversion = 1;
 8002fb0:	2301      	movs	r3, #1
 8002fb2:	6103      	str	r3, [r0, #16]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8002fb4:	f000 fbd0 	bl	8003758 <HAL_ADC_Init>
 8002fb8:	b960      	cbnz	r0, 8002fd4 <MX_ADC1_Init+0x44>
  sConfig.Channel = ADC_CHANNEL_0;
 8002fba:	2300      	movs	r3, #0
 8002fbc:	9301      	str	r3, [sp, #4]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8002fbe:	2201      	movs	r2, #1
 8002fc0:	9202      	str	r2, [sp, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 8002fc2:	9303      	str	r3, [sp, #12]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8002fc4:	a901      	add	r1, sp, #4
 8002fc6:	4805      	ldr	r0, [pc, #20]	@ (8002fdc <MX_ADC1_Init+0x4c>)
 8002fc8:	f000 fe8a 	bl	8003ce0 <HAL_ADC_ConfigChannel>
 8002fcc:	b920      	cbnz	r0, 8002fd8 <MX_ADC1_Init+0x48>
}
 8002fce:	b005      	add	sp, #20
 8002fd0:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 8002fd4:	f7ff ff06 	bl	8002de4 <Error_Handler>
    Error_Handler();
 8002fd8:	f7ff ff04 	bl	8002de4 <Error_Handler>
 8002fdc:	200004dc 	.word	0x200004dc
 8002fe0:	40012400 	.word	0x40012400

08002fe4 <MX_CRC_Init>:
{
 8002fe4:	b508      	push	{r3, lr}
  hcrc.Instance = CRC;
 8002fe6:	4804      	ldr	r0, [pc, #16]	@ (8002ff8 <MX_CRC_Init+0x14>)
 8002fe8:	4b04      	ldr	r3, [pc, #16]	@ (8002ffc <MX_CRC_Init+0x18>)
 8002fea:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8002fec:	f001 f9c7 	bl	800437e <HAL_CRC_Init>
 8002ff0:	b900      	cbnz	r0, 8002ff4 <MX_CRC_Init+0x10>
}
 8002ff2:	bd08      	pop	{r3, pc}
    Error_Handler();
 8002ff4:	f7ff fef6 	bl	8002de4 <Error_Handler>
 8002ff8:	200004d4 	.word	0x200004d4
 8002ffc:	40023000 	.word	0x40023000

08003000 <SystemClock_Config>:
{
 8003000:	b500      	push	{lr}
 8003002:	b095      	sub	sp, #84	@ 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8003004:	2228      	movs	r2, #40	@ 0x28
 8003006:	2100      	movs	r1, #0
 8003008:	eb0d 0002 	add.w	r0, sp, r2
 800300c:	f005 f9b2 	bl	8008374 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8003010:	2300      	movs	r3, #0
 8003012:	9305      	str	r3, [sp, #20]
 8003014:	9306      	str	r3, [sp, #24]
 8003016:	9307      	str	r3, [sp, #28]
 8003018:	9308      	str	r3, [sp, #32]
 800301a:	9309      	str	r3, [sp, #36]	@ 0x24
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 800301c:	9301      	str	r3, [sp, #4]
 800301e:	9302      	str	r3, [sp, #8]
 8003020:	9303      	str	r3, [sp, #12]
 8003022:	9304      	str	r3, [sp, #16]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8003024:	2201      	movs	r2, #1
 8003026:	920a      	str	r2, [sp, #40]	@ 0x28
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8003028:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 800302c:	930b      	str	r3, [sp, #44]	@ 0x2c
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV2;
 800302e:	f44f 3100 	mov.w	r1, #131072	@ 0x20000
 8003032:	910c      	str	r1, [sp, #48]	@ 0x30
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8003034:	920e      	str	r2, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8003036:	2202      	movs	r2, #2
 8003038:	9211      	str	r2, [sp, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800303a:	9312      	str	r3, [sp, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 800303c:	f44f 13e0 	mov.w	r3, #1835008	@ 0x1c0000
 8003040:	9313      	str	r3, [sp, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8003042:	a80a      	add	r0, sp, #40	@ 0x28
 8003044:	f001 fbee 	bl	8004824 <HAL_RCC_OscConfig>
 8003048:	b9c8      	cbnz	r0, 800307e <SystemClock_Config+0x7e>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800304a:	230f      	movs	r3, #15
 800304c:	9305      	str	r3, [sp, #20]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800304e:	2102      	movs	r1, #2
 8003050:	9106      	str	r1, [sp, #24]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8003052:	2300      	movs	r3, #0
 8003054:	9307      	str	r3, [sp, #28]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8003056:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800305a:	9208      	str	r2, [sp, #32]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800305c:	9309      	str	r3, [sp, #36]	@ 0x24
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 800305e:	a805      	add	r0, sp, #20
 8003060:	f001 fe62 	bl	8004d28 <HAL_RCC_ClockConfig>
 8003064:	b968      	cbnz	r0, 8003082 <SystemClock_Config+0x82>
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 8003066:	2302      	movs	r3, #2
 8003068:	9301      	str	r3, [sp, #4]
  PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 800306a:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800306e:	9303      	str	r3, [sp, #12]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8003070:	a801      	add	r0, sp, #4
 8003072:	f001 ffe9 	bl	8005048 <HAL_RCCEx_PeriphCLKConfig>
 8003076:	b930      	cbnz	r0, 8003086 <SystemClock_Config+0x86>
}
 8003078:	b015      	add	sp, #84	@ 0x54
 800307a:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 800307e:	f7ff feb1 	bl	8002de4 <Error_Handler>
    Error_Handler();
 8003082:	f7ff feaf 	bl	8002de4 <Error_Handler>
    Error_Handler();
 8003086:	f7ff fead 	bl	8002de4 <Error_Handler>
	...

0800308c <STM32_InitRoutine>:
void STM32_InitRoutine(void) {
 800308c:	b510      	push	{r4, lr}
	HAL_Init();
 800308e:	f000 fadd 	bl	800364c <HAL_Init>
	SystemClock_Config();
 8003092:	f7ff ffb5 	bl	8003000 <SystemClock_Config>
	MX_USART1_UART_Init();
 8003096:	f7ff fea7 	bl	8002de8 <MX_USART1_UART_Init>
	MX_USART2_UART_Init();
 800309a:	f7ff febf 	bl	8002e1c <MX_USART2_UART_Init>
	MX_USART3_UART_Init();
 800309e:	f7ff fed7 	bl	8002e50 <MX_USART3_UART_Init>
	MX_TIM3_Init();
 80030a2:	f7ff feef 	bl	8002e84 <MX_TIM3_Init>
	MX_TIM2_Init();
 80030a6:	f7ff ff3f 	bl	8002f28 <MX_TIM2_Init>
	MX_ADC1_Init();
 80030aa:	f7ff ff71 	bl	8002f90 <MX_ADC1_Init>
	MX_CRC_Init();
 80030ae:	f7ff ff99 	bl	8002fe4 <MX_CRC_Init>
	printf("|----------Starting----------|\r\n");
 80030b2:	483c      	ldr	r0, [pc, #240]	@ (80031a4 <STM32_InitRoutine+0x118>)
 80030b4:	f005 f87e 	bl	80081b4 <puts>
	SPI_Init(1);
 80030b8:	2001      	movs	r0, #1
 80030ba:	f7ff fa49 	bl	8002550 <SPI_Init>
	printf("(+) SPI1 succeeded...\r\n");
 80030be:	483a      	ldr	r0, [pc, #232]	@ (80031a8 <STM32_InitRoutine+0x11c>)
 80030c0:	f005 f878 	bl	80081b4 <puts>
	SPI_Init(2);
 80030c4:	2002      	movs	r0, #2
 80030c6:	f7ff fa43 	bl	8002550 <SPI_Init>
	printf("(+) SPI2 succeeded...\r\n");
 80030ca:	4838      	ldr	r0, [pc, #224]	@ (80031ac <STM32_InitRoutine+0x120>)
 80030cc:	f005 f872 	bl	80081b4 <puts>
	USART_Init(1);
 80030d0:	2001      	movs	r0, #1
 80030d2:	f7ff fad7 	bl	8002684 <USART_Init>
	printf("(+) USART1 succeeded...\r\n");
 80030d6:	4836      	ldr	r0, [pc, #216]	@ (80031b0 <STM32_InitRoutine+0x124>)
 80030d8:	f005 f86c 	bl	80081b4 <puts>
	USART_Init(2);
 80030dc:	2002      	movs	r0, #2
 80030de:	f7ff fad1 	bl	8002684 <USART_Init>
	printf("(+) USART2 succeeded...\r\n");
 80030e2:	4834      	ldr	r0, [pc, #208]	@ (80031b4 <STM32_InitRoutine+0x128>)
 80030e4:	f005 f866 	bl	80081b4 <puts>
	USART_Init(3);
 80030e8:	2003      	movs	r0, #3
 80030ea:	f7ff facb 	bl	8002684 <USART_Init>
	printf("(+) USART3 succeeded...\r\n");
 80030ee:	4832      	ldr	r0, [pc, #200]	@ (80031b8 <STM32_InitRoutine+0x12c>)
 80030f0:	f005 f860 	bl	80081b4 <puts>
	printf("|----------Components initialization----------|\r\n");
 80030f4:	4831      	ldr	r0, [pc, #196]	@ (80031bc <STM32_InitRoutine+0x130>)
 80030f6:	f005 f85d 	bl	80081b4 <puts>
	STM32_SetMode(MODE_PREFLIGHT);
 80030fa:	2000      	movs	r0, #0
 80030fc:	f7ff fbf6 	bl	80028ec <STM32_SetMode>
	printf("(+) Mode flight: %i succeeded...\r\n", packet.header_states.mode);
 8003100:	4b2f      	ldr	r3, [pc, #188]	@ (80031c0 <STM32_InitRoutine+0x134>)
 8003102:	7819      	ldrb	r1, [r3, #0]
 8003104:	482f      	ldr	r0, [pc, #188]	@ (80031c4 <STM32_InitRoutine+0x138>)
 8003106:	f004 ffed 	bl	80080e4 <iprintf>
	WS2812_Init();
 800310a:	f7ff f93f 	bl	800238c <WS2812_Init>
	printf("(+) WS2812 succeeded...\r\n");
 800310e:	482e      	ldr	r0, [pc, #184]	@ (80031c8 <STM32_InitRoutine+0x13c>)
 8003110:	f005 f850 	bl	80081b4 <puts>
	if (CD74HC4051_Init(&hadc1) != 1) {
 8003114:	482d      	ldr	r0, [pc, #180]	@ (80031cc <STM32_InitRoutine+0x140>)
 8003116:	f7fe fc19 	bl	800194c <CD74HC4051_Init>
 800311a:	2801      	cmp	r0, #1
 800311c:	d02e      	beq.n	800317c <STM32_InitRoutine+0xf0>
	  printf("(-) CD74HC4051 failed...\r\n");
 800311e:	482c      	ldr	r0, [pc, #176]	@ (80031d0 <STM32_InitRoutine+0x144>)
 8003120:	f005 f848 	bl	80081b4 <puts>
	packet.header_states.barometer = BMP280_Init(&bmp_data, BMP_SPI_PORT) == 1 ? 0x01 : 0x00;
 8003124:	2102      	movs	r1, #2
 8003126:	482b      	ldr	r0, [pc, #172]	@ (80031d4 <STM32_InitRoutine+0x148>)
 8003128:	f7fe fbd0 	bl	80018cc <BMP280_Init>
 800312c:	2801      	cmp	r0, #1
 800312e:	bf14      	ite	ne
 8003130:	2000      	movne	r0, #0
 8003132:	2001      	moveq	r0, #1
 8003134:	4b22      	ldr	r3, [pc, #136]	@ (80031c0 <STM32_InitRoutine+0x134>)
 8003136:	7118      	strb	r0, [r3, #4]
	printf(packet.header_states.barometer ? "(+) BMP280 succeeded...\r\n" : "(-) BMP280 failed...\r\n");
 8003138:	b368      	cbz	r0, 8003196 <STM32_InitRoutine+0x10a>
 800313a:	4827      	ldr	r0, [pc, #156]	@ (80031d8 <STM32_InitRoutine+0x14c>)
 800313c:	f004 ffd2 	bl	80080e4 <iprintf>
	packet.header_states.accelerometer = ICM20602_Init(&icm_data) == 0 ? 0x01 : 0x00;
 8003140:	4826      	ldr	r0, [pc, #152]	@ (80031dc <STM32_InitRoutine+0x150>)
 8003142:	f7fe fe9b 	bl	8001e7c <ICM20602_Init>
 8003146:	fab0 f080 	clz	r0, r0
 800314a:	0940      	lsrs	r0, r0, #5
 800314c:	4b1c      	ldr	r3, [pc, #112]	@ (80031c0 <STM32_InitRoutine+0x134>)
 800314e:	70d8      	strb	r0, [r3, #3]
	printf(packet.header_states.accelerometer ? "(+) ICM20602 succeeded...\r\n" : "(-) ICM20602 failed...\r\n");
 8003150:	b318      	cbz	r0, 800319a <STM32_InitRoutine+0x10e>
 8003152:	4823      	ldr	r0, [pc, #140]	@ (80031e0 <STM32_InitRoutine+0x154>)
 8003154:	f004 ffc6 	bl	80080e4 <iprintf>
	packet.header_states.gps = L76LM33_Init(GPS_USART_PORT) == 1 ? 0x01 : 0x00;
 8003158:	2002      	movs	r0, #2
 800315a:	f7fe ff71 	bl	8002040 <L76LM33_Init>
 800315e:	2801      	cmp	r0, #1
 8003160:	bf14      	ite	ne
 8003162:	2000      	movne	r0, #0
 8003164:	2001      	moveq	r0, #1
 8003166:	4b16      	ldr	r3, [pc, #88]	@ (80031c0 <STM32_InitRoutine+0x134>)
 8003168:	7158      	strb	r0, [r3, #5]
	printf(packet.header_states.gps ? "(+) L76LM33 succeeded...\r\n" : "(-) L76LM33 failed...\r\n");
 800316a:	b1c0      	cbz	r0, 800319e <STM32_InitRoutine+0x112>
 800316c:	481d      	ldr	r0, [pc, #116]	@ (80031e4 <STM32_InitRoutine+0x158>)
 800316e:	f004 ffb9 	bl	80080e4 <iprintf>
	HM10BLE_Init(&ble_data, BT_USART_PORT);
 8003172:	2103      	movs	r1, #3
 8003174:	481c      	ldr	r0, [pc, #112]	@ (80031e8 <STM32_InitRoutine+0x15c>)
 8003176:	f7fe fc91 	bl	8001a9c <HM10BLE_Init>
}
 800317a:	bd10      	pop	{r4, pc}
		printf(" -> Pyro0 state: %i\r\n", packet.header_states.pyro0);
 800317c:	4c10      	ldr	r4, [pc, #64]	@ (80031c0 <STM32_InitRoutine+0x134>)
 800317e:	7861      	ldrb	r1, [r4, #1]
 8003180:	481a      	ldr	r0, [pc, #104]	@ (80031ec <STM32_InitRoutine+0x160>)
 8003182:	f004 ffaf 	bl	80080e4 <iprintf>
		printf(" -> Pyro1 state: %i\r\n", packet.header_states.pyro1);
 8003186:	78a1      	ldrb	r1, [r4, #2]
 8003188:	4819      	ldr	r0, [pc, #100]	@ (80031f0 <STM32_InitRoutine+0x164>)
 800318a:	f004 ffab 	bl	80080e4 <iprintf>
		printf("(+) CD74HC4051 succeeded...\r\n");
 800318e:	4819      	ldr	r0, [pc, #100]	@ (80031f4 <STM32_InitRoutine+0x168>)
 8003190:	f005 f810 	bl	80081b4 <puts>
 8003194:	e7c6      	b.n	8003124 <STM32_InitRoutine+0x98>
	printf(packet.header_states.barometer ? "(+) BMP280 succeeded...\r\n" : "(-) BMP280 failed...\r\n");
 8003196:	4818      	ldr	r0, [pc, #96]	@ (80031f8 <STM32_InitRoutine+0x16c>)
 8003198:	e7d0      	b.n	800313c <STM32_InitRoutine+0xb0>
	printf(packet.header_states.accelerometer ? "(+) ICM20602 succeeded...\r\n" : "(-) ICM20602 failed...\r\n");
 800319a:	4818      	ldr	r0, [pc, #96]	@ (80031fc <STM32_InitRoutine+0x170>)
 800319c:	e7da      	b.n	8003154 <STM32_InitRoutine+0xc8>
	printf(packet.header_states.gps ? "(+) L76LM33 succeeded...\r\n" : "(-) L76LM33 failed...\r\n");
 800319e:	4818      	ldr	r0, [pc, #96]	@ (8003200 <STM32_InitRoutine+0x174>)
 80031a0:	e7e5      	b.n	800316e <STM32_InitRoutine+0xe2>
 80031a2:	bf00      	nop
 80031a4:	0800bd44 	.word	0x0800bd44
 80031a8:	0800bd64 	.word	0x0800bd64
 80031ac:	0800bd7c 	.word	0x0800bd7c
 80031b0:	0800bd94 	.word	0x0800bd94
 80031b4:	0800bdb0 	.word	0x0800bdb0
 80031b8:	0800bdcc 	.word	0x0800bdcc
 80031bc:	0800bde8 	.word	0x0800bde8
 80031c0:	2000026c 	.word	0x2000026c
 80031c4:	0800be1c 	.word	0x0800be1c
 80031c8:	0800be40 	.word	0x0800be40
 80031cc:	200004dc 	.word	0x200004dc
 80031d0:	0800be5c 	.word	0x0800be5c
 80031d4:	20000324 	.word	0x20000324
 80031d8:	0800bca4 	.word	0x0800bca4
 80031dc:	200002ec 	.word	0x200002ec
 80031e0:	0800bcd8 	.word	0x0800bcd8
 80031e4:	0800bd10 	.word	0x0800bd10
 80031e8:	200002d4 	.word	0x200002d4
 80031ec:	0800be78 	.word	0x0800be78
 80031f0:	0800be90 	.word	0x0800be90
 80031f4:	0800bea8 	.word	0x0800bea8
 80031f8:	0800bcc0 	.word	0x0800bcc0
 80031fc:	0800bcf4 	.word	0x0800bcf4
 8003200:	0800bd2c 	.word	0x0800bd2c

08003204 <main>:
{
 8003204:	b508      	push	{r3, lr}
	STM32_InitRoutine();
 8003206:	f7ff ff41 	bl	800308c <STM32_InitRoutine>
	HAL_Init();
 800320a:	f000 fa1f 	bl	800364c <HAL_Init>
	SystemClock_Config();
 800320e:	f7ff fef7 	bl	8003000 <SystemClock_Config>
	MX_USART1_UART_Init();
 8003212:	f7ff fde9 	bl	8002de8 <MX_USART1_UART_Init>
	MX_USART2_UART_Init();
 8003216:	f7ff fe01 	bl	8002e1c <MX_USART2_UART_Init>
	MX_USART3_UART_Init();
 800321a:	f7ff fe19 	bl	8002e50 <MX_USART3_UART_Init>
	MX_TIM3_Init();
 800321e:	f7ff fe31 	bl	8002e84 <MX_TIM3_Init>
	MX_TIM2_Init();
 8003222:	f7ff fe81 	bl	8002f28 <MX_TIM2_Init>
	MX_ADC1_Init();
 8003226:	f7ff feb3 	bl	8002f90 <MX_ADC1_Init>
	MX_CRC_Init();
 800322a:	f7ff fedb 	bl	8002fe4 <MX_CRC_Init>
	MX_FATFS_Init();
 800322e:	f003 fab9 	bl	80067a4 <MX_FATFS_Init>
		STM32_ModeRoutine();
 8003232:	f7ff fb65 	bl	8002900 <STM32_ModeRoutine>
	while (1)
 8003236:	e7fc      	b.n	8003232 <main+0x2e>

08003238 <HAL_MspInit>:
 8003238:	b082      	sub	sp, #8
 800323a:	4b0e      	ldr	r3, [pc, #56]	@ (8003274 <HAL_MspInit+0x3c>)
 800323c:	699a      	ldr	r2, [r3, #24]
 800323e:	f042 0201 	orr.w	r2, r2, #1
 8003242:	619a      	str	r2, [r3, #24]
 8003244:	699a      	ldr	r2, [r3, #24]
 8003246:	f002 0201 	and.w	r2, r2, #1
 800324a:	9200      	str	r2, [sp, #0]
 800324c:	9a00      	ldr	r2, [sp, #0]
 800324e:	69da      	ldr	r2, [r3, #28]
 8003250:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8003254:	61da      	str	r2, [r3, #28]
 8003256:	69db      	ldr	r3, [r3, #28]
 8003258:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800325c:	9301      	str	r3, [sp, #4]
 800325e:	9b01      	ldr	r3, [sp, #4]
 8003260:	4a05      	ldr	r2, [pc, #20]	@ (8003278 <HAL_MspInit+0x40>)
 8003262:	6853      	ldr	r3, [r2, #4]
 8003264:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 8003268:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 800326c:	6053      	str	r3, [r2, #4]
 800326e:	b002      	add	sp, #8
 8003270:	4770      	bx	lr
 8003272:	bf00      	nop
 8003274:	40021000 	.word	0x40021000
 8003278:	40010000 	.word	0x40010000

0800327c <HAL_ADC_MspInit>:
 800327c:	b500      	push	{lr}
 800327e:	b087      	sub	sp, #28
 8003280:	2300      	movs	r3, #0
 8003282:	9302      	str	r3, [sp, #8]
 8003284:	9303      	str	r3, [sp, #12]
 8003286:	9304      	str	r3, [sp, #16]
 8003288:	9305      	str	r3, [sp, #20]
 800328a:	6802      	ldr	r2, [r0, #0]
 800328c:	4b11      	ldr	r3, [pc, #68]	@ (80032d4 <HAL_ADC_MspInit+0x58>)
 800328e:	429a      	cmp	r2, r3
 8003290:	d002      	beq.n	8003298 <HAL_ADC_MspInit+0x1c>
 8003292:	b007      	add	sp, #28
 8003294:	f85d fb04 	ldr.w	pc, [sp], #4
 8003298:	f503 436c 	add.w	r3, r3, #60416	@ 0xec00
 800329c:	699a      	ldr	r2, [r3, #24]
 800329e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80032a2:	619a      	str	r2, [r3, #24]
 80032a4:	699a      	ldr	r2, [r3, #24]
 80032a6:	f402 7200 	and.w	r2, r2, #512	@ 0x200
 80032aa:	9200      	str	r2, [sp, #0]
 80032ac:	9a00      	ldr	r2, [sp, #0]
 80032ae:	699a      	ldr	r2, [r3, #24]
 80032b0:	f042 0204 	orr.w	r2, r2, #4
 80032b4:	619a      	str	r2, [r3, #24]
 80032b6:	699b      	ldr	r3, [r3, #24]
 80032b8:	f003 0304 	and.w	r3, r3, #4
 80032bc:	9301      	str	r3, [sp, #4]
 80032be:	9b01      	ldr	r3, [sp, #4]
 80032c0:	2301      	movs	r3, #1
 80032c2:	9302      	str	r3, [sp, #8]
 80032c4:	2303      	movs	r3, #3
 80032c6:	9303      	str	r3, [sp, #12]
 80032c8:	a902      	add	r1, sp, #8
 80032ca:	4803      	ldr	r0, [pc, #12]	@ (80032d8 <HAL_ADC_MspInit+0x5c>)
 80032cc:	f001 f926 	bl	800451c <HAL_GPIO_Init>
 80032d0:	e7df      	b.n	8003292 <HAL_ADC_MspInit+0x16>
 80032d2:	bf00      	nop
 80032d4:	40012400 	.word	0x40012400
 80032d8:	40010800 	.word	0x40010800

080032dc <HAL_CRC_MspInit>:
 80032dc:	6802      	ldr	r2, [r0, #0]
 80032de:	4b09      	ldr	r3, [pc, #36]	@ (8003304 <HAL_CRC_MspInit+0x28>)
 80032e0:	429a      	cmp	r2, r3
 80032e2:	d000      	beq.n	80032e6 <HAL_CRC_MspInit+0xa>
 80032e4:	4770      	bx	lr
 80032e6:	b082      	sub	sp, #8
 80032e8:	f5a3 5300 	sub.w	r3, r3, #8192	@ 0x2000
 80032ec:	695a      	ldr	r2, [r3, #20]
 80032ee:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80032f2:	615a      	str	r2, [r3, #20]
 80032f4:	695b      	ldr	r3, [r3, #20]
 80032f6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80032fa:	9301      	str	r3, [sp, #4]
 80032fc:	9b01      	ldr	r3, [sp, #4]
 80032fe:	b002      	add	sp, #8
 8003300:	4770      	bx	lr
 8003302:	bf00      	nop
 8003304:	40023000 	.word	0x40023000

08003308 <HAL_TIM_Base_MspInit>:
 8003308:	b082      	sub	sp, #8
 800330a:	6803      	ldr	r3, [r0, #0]
 800330c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003310:	d004      	beq.n	800331c <HAL_TIM_Base_MspInit+0x14>
 8003312:	4a0e      	ldr	r2, [pc, #56]	@ (800334c <HAL_TIM_Base_MspInit+0x44>)
 8003314:	4293      	cmp	r3, r2
 8003316:	d00d      	beq.n	8003334 <HAL_TIM_Base_MspInit+0x2c>
 8003318:	b002      	add	sp, #8
 800331a:	4770      	bx	lr
 800331c:	f503 3304 	add.w	r3, r3, #135168	@ 0x21000
 8003320:	69da      	ldr	r2, [r3, #28]
 8003322:	f042 0201 	orr.w	r2, r2, #1
 8003326:	61da      	str	r2, [r3, #28]
 8003328:	69db      	ldr	r3, [r3, #28]
 800332a:	f003 0301 	and.w	r3, r3, #1
 800332e:	9300      	str	r3, [sp, #0]
 8003330:	9b00      	ldr	r3, [sp, #0]
 8003332:	e7f1      	b.n	8003318 <HAL_TIM_Base_MspInit+0x10>
 8003334:	4b06      	ldr	r3, [pc, #24]	@ (8003350 <HAL_TIM_Base_MspInit+0x48>)
 8003336:	69da      	ldr	r2, [r3, #28]
 8003338:	f042 0202 	orr.w	r2, r2, #2
 800333c:	61da      	str	r2, [r3, #28]
 800333e:	69db      	ldr	r3, [r3, #28]
 8003340:	f003 0302 	and.w	r3, r3, #2
 8003344:	9301      	str	r3, [sp, #4]
 8003346:	9b01      	ldr	r3, [sp, #4]
 8003348:	e7e6      	b.n	8003318 <HAL_TIM_Base_MspInit+0x10>
 800334a:	bf00      	nop
 800334c:	40000400 	.word	0x40000400
 8003350:	40021000 	.word	0x40021000

08003354 <HAL_TIM_MspPostInit>:
 8003354:	b500      	push	{lr}
 8003356:	b087      	sub	sp, #28
 8003358:	2300      	movs	r3, #0
 800335a:	9302      	str	r3, [sp, #8]
 800335c:	9303      	str	r3, [sp, #12]
 800335e:	9304      	str	r3, [sp, #16]
 8003360:	9305      	str	r3, [sp, #20]
 8003362:	6802      	ldr	r2, [r0, #0]
 8003364:	4b0c      	ldr	r3, [pc, #48]	@ (8003398 <HAL_TIM_MspPostInit+0x44>)
 8003366:	429a      	cmp	r2, r3
 8003368:	d002      	beq.n	8003370 <HAL_TIM_MspPostInit+0x1c>
 800336a:	b007      	add	sp, #28
 800336c:	f85d fb04 	ldr.w	pc, [sp], #4
 8003370:	f503 3303 	add.w	r3, r3, #134144	@ 0x20c00
 8003374:	699a      	ldr	r2, [r3, #24]
 8003376:	f042 0208 	orr.w	r2, r2, #8
 800337a:	619a      	str	r2, [r3, #24]
 800337c:	699b      	ldr	r3, [r3, #24]
 800337e:	f003 0308 	and.w	r3, r3, #8
 8003382:	9301      	str	r3, [sp, #4]
 8003384:	9b01      	ldr	r3, [sp, #4]
 8003386:	2302      	movs	r3, #2
 8003388:	9302      	str	r3, [sp, #8]
 800338a:	9303      	str	r3, [sp, #12]
 800338c:	9305      	str	r3, [sp, #20]
 800338e:	a902      	add	r1, sp, #8
 8003390:	4802      	ldr	r0, [pc, #8]	@ (800339c <HAL_TIM_MspPostInit+0x48>)
 8003392:	f001 f8c3 	bl	800451c <HAL_GPIO_Init>
 8003396:	e7e8      	b.n	800336a <HAL_TIM_MspPostInit+0x16>
 8003398:	40000400 	.word	0x40000400
 800339c:	40010c00 	.word	0x40010c00

080033a0 <HAL_UART_MspInit>:
 80033a0:	b530      	push	{r4, r5, lr}
 80033a2:	b08b      	sub	sp, #44	@ 0x2c
 80033a4:	2300      	movs	r3, #0
 80033a6:	9306      	str	r3, [sp, #24]
 80033a8:	9307      	str	r3, [sp, #28]
 80033aa:	9308      	str	r3, [sp, #32]
 80033ac:	9309      	str	r3, [sp, #36]	@ 0x24
 80033ae:	6803      	ldr	r3, [r0, #0]
 80033b0:	4a51      	ldr	r2, [pc, #324]	@ (80034f8 <HAL_UART_MspInit+0x158>)
 80033b2:	4293      	cmp	r3, r2
 80033b4:	d007      	beq.n	80033c6 <HAL_UART_MspInit+0x26>
 80033b6:	4a51      	ldr	r2, [pc, #324]	@ (80034fc <HAL_UART_MspInit+0x15c>)
 80033b8:	4293      	cmp	r3, r2
 80033ba:	d03b      	beq.n	8003434 <HAL_UART_MspInit+0x94>
 80033bc:	4a50      	ldr	r2, [pc, #320]	@ (8003500 <HAL_UART_MspInit+0x160>)
 80033be:	4293      	cmp	r3, r2
 80033c0:	d068      	beq.n	8003494 <HAL_UART_MspInit+0xf4>
 80033c2:	b00b      	add	sp, #44	@ 0x2c
 80033c4:	bd30      	pop	{r4, r5, pc}
 80033c6:	4b4f      	ldr	r3, [pc, #316]	@ (8003504 <HAL_UART_MspInit+0x164>)
 80033c8:	699a      	ldr	r2, [r3, #24]
 80033ca:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80033ce:	619a      	str	r2, [r3, #24]
 80033d0:	699a      	ldr	r2, [r3, #24]
 80033d2:	f402 4280 	and.w	r2, r2, #16384	@ 0x4000
 80033d6:	9200      	str	r2, [sp, #0]
 80033d8:	9a00      	ldr	r2, [sp, #0]
 80033da:	699a      	ldr	r2, [r3, #24]
 80033dc:	f042 0208 	orr.w	r2, r2, #8
 80033e0:	619a      	str	r2, [r3, #24]
 80033e2:	699b      	ldr	r3, [r3, #24]
 80033e4:	f003 0308 	and.w	r3, r3, #8
 80033e8:	9301      	str	r3, [sp, #4]
 80033ea:	9b01      	ldr	r3, [sp, #4]
 80033ec:	2340      	movs	r3, #64	@ 0x40
 80033ee:	9306      	str	r3, [sp, #24]
 80033f0:	2302      	movs	r3, #2
 80033f2:	9307      	str	r3, [sp, #28]
 80033f4:	2303      	movs	r3, #3
 80033f6:	9309      	str	r3, [sp, #36]	@ 0x24
 80033f8:	4d43      	ldr	r5, [pc, #268]	@ (8003508 <HAL_UART_MspInit+0x168>)
 80033fa:	a906      	add	r1, sp, #24
 80033fc:	4628      	mov	r0, r5
 80033fe:	f001 f88d 	bl	800451c <HAL_GPIO_Init>
 8003402:	2380      	movs	r3, #128	@ 0x80
 8003404:	9306      	str	r3, [sp, #24]
 8003406:	2400      	movs	r4, #0
 8003408:	9407      	str	r4, [sp, #28]
 800340a:	9408      	str	r4, [sp, #32]
 800340c:	a906      	add	r1, sp, #24
 800340e:	4628      	mov	r0, r5
 8003410:	f001 f884 	bl	800451c <HAL_GPIO_Init>
 8003414:	4a3d      	ldr	r2, [pc, #244]	@ (800350c <HAL_UART_MspInit+0x16c>)
 8003416:	6853      	ldr	r3, [r2, #4]
 8003418:	f043 63e0 	orr.w	r3, r3, #117440512	@ 0x7000000
 800341c:	f043 0304 	orr.w	r3, r3, #4
 8003420:	6053      	str	r3, [r2, #4]
 8003422:	4622      	mov	r2, r4
 8003424:	4621      	mov	r1, r4
 8003426:	2025      	movs	r0, #37	@ 0x25
 8003428:	f000 ff73 	bl	8004312 <HAL_NVIC_SetPriority>
 800342c:	2025      	movs	r0, #37	@ 0x25
 800342e:	f000 ff8c 	bl	800434a <HAL_NVIC_EnableIRQ>
 8003432:	e7c6      	b.n	80033c2 <HAL_UART_MspInit+0x22>
 8003434:	4b33      	ldr	r3, [pc, #204]	@ (8003504 <HAL_UART_MspInit+0x164>)
 8003436:	69da      	ldr	r2, [r3, #28]
 8003438:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 800343c:	61da      	str	r2, [r3, #28]
 800343e:	69da      	ldr	r2, [r3, #28]
 8003440:	f402 3200 	and.w	r2, r2, #131072	@ 0x20000
 8003444:	9202      	str	r2, [sp, #8]
 8003446:	9a02      	ldr	r2, [sp, #8]
 8003448:	699a      	ldr	r2, [r3, #24]
 800344a:	f042 0204 	orr.w	r2, r2, #4
 800344e:	619a      	str	r2, [r3, #24]
 8003450:	699b      	ldr	r3, [r3, #24]
 8003452:	f003 0304 	and.w	r3, r3, #4
 8003456:	9303      	str	r3, [sp, #12]
 8003458:	9b03      	ldr	r3, [sp, #12]
 800345a:	2304      	movs	r3, #4
 800345c:	9306      	str	r3, [sp, #24]
 800345e:	2302      	movs	r3, #2
 8003460:	9307      	str	r3, [sp, #28]
 8003462:	2303      	movs	r3, #3
 8003464:	9309      	str	r3, [sp, #36]	@ 0x24
 8003466:	4d2a      	ldr	r5, [pc, #168]	@ (8003510 <HAL_UART_MspInit+0x170>)
 8003468:	a906      	add	r1, sp, #24
 800346a:	4628      	mov	r0, r5
 800346c:	f001 f856 	bl	800451c <HAL_GPIO_Init>
 8003470:	2308      	movs	r3, #8
 8003472:	9306      	str	r3, [sp, #24]
 8003474:	2400      	movs	r4, #0
 8003476:	9407      	str	r4, [sp, #28]
 8003478:	9408      	str	r4, [sp, #32]
 800347a:	a906      	add	r1, sp, #24
 800347c:	4628      	mov	r0, r5
 800347e:	f001 f84d 	bl	800451c <HAL_GPIO_Init>
 8003482:	4622      	mov	r2, r4
 8003484:	4621      	mov	r1, r4
 8003486:	2026      	movs	r0, #38	@ 0x26
 8003488:	f000 ff43 	bl	8004312 <HAL_NVIC_SetPriority>
 800348c:	2026      	movs	r0, #38	@ 0x26
 800348e:	f000 ff5c 	bl	800434a <HAL_NVIC_EnableIRQ>
 8003492:	e796      	b.n	80033c2 <HAL_UART_MspInit+0x22>
 8003494:	4b1b      	ldr	r3, [pc, #108]	@ (8003504 <HAL_UART_MspInit+0x164>)
 8003496:	69da      	ldr	r2, [r3, #28]
 8003498:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 800349c:	61da      	str	r2, [r3, #28]
 800349e:	69da      	ldr	r2, [r3, #28]
 80034a0:	f402 2280 	and.w	r2, r2, #262144	@ 0x40000
 80034a4:	9204      	str	r2, [sp, #16]
 80034a6:	9a04      	ldr	r2, [sp, #16]
 80034a8:	699a      	ldr	r2, [r3, #24]
 80034aa:	f042 0208 	orr.w	r2, r2, #8
 80034ae:	619a      	str	r2, [r3, #24]
 80034b0:	699b      	ldr	r3, [r3, #24]
 80034b2:	f003 0308 	and.w	r3, r3, #8
 80034b6:	9305      	str	r3, [sp, #20]
 80034b8:	9b05      	ldr	r3, [sp, #20]
 80034ba:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80034be:	9306      	str	r3, [sp, #24]
 80034c0:	2302      	movs	r3, #2
 80034c2:	9307      	str	r3, [sp, #28]
 80034c4:	2303      	movs	r3, #3
 80034c6:	9309      	str	r3, [sp, #36]	@ 0x24
 80034c8:	4d0f      	ldr	r5, [pc, #60]	@ (8003508 <HAL_UART_MspInit+0x168>)
 80034ca:	a906      	add	r1, sp, #24
 80034cc:	4628      	mov	r0, r5
 80034ce:	f001 f825 	bl	800451c <HAL_GPIO_Init>
 80034d2:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 80034d6:	9306      	str	r3, [sp, #24]
 80034d8:	2400      	movs	r4, #0
 80034da:	9407      	str	r4, [sp, #28]
 80034dc:	9408      	str	r4, [sp, #32]
 80034de:	a906      	add	r1, sp, #24
 80034e0:	4628      	mov	r0, r5
 80034e2:	f001 f81b 	bl	800451c <HAL_GPIO_Init>
 80034e6:	4622      	mov	r2, r4
 80034e8:	4621      	mov	r1, r4
 80034ea:	2027      	movs	r0, #39	@ 0x27
 80034ec:	f000 ff11 	bl	8004312 <HAL_NVIC_SetPriority>
 80034f0:	2027      	movs	r0, #39	@ 0x27
 80034f2:	f000 ff2a 	bl	800434a <HAL_NVIC_EnableIRQ>
 80034f6:	e764      	b.n	80033c2 <HAL_UART_MspInit+0x22>
 80034f8:	40013800 	.word	0x40013800
 80034fc:	40004400 	.word	0x40004400
 8003500:	40004800 	.word	0x40004800
 8003504:	40021000 	.word	0x40021000
 8003508:	40010c00 	.word	0x40010c00
 800350c:	40010000 	.word	0x40010000
 8003510:	40010800 	.word	0x40010800

08003514 <NMI_Handler>:
 8003514:	e7fe      	b.n	8003514 <NMI_Handler>

08003516 <HardFault_Handler>:
 8003516:	e7fe      	b.n	8003516 <HardFault_Handler>

08003518 <MemManage_Handler>:
 8003518:	e7fe      	b.n	8003518 <MemManage_Handler>

0800351a <BusFault_Handler>:
 800351a:	e7fe      	b.n	800351a <BusFault_Handler>

0800351c <UsageFault_Handler>:
 800351c:	e7fe      	b.n	800351c <UsageFault_Handler>

0800351e <SVC_Handler>:
 800351e:	4770      	bx	lr

08003520 <DebugMon_Handler>:
 8003520:	4770      	bx	lr

08003522 <PendSV_Handler>:
 8003522:	4770      	bx	lr

08003524 <SysTick_Handler>:
 8003524:	b508      	push	{r3, lr}
 8003526:	f000 f8d7 	bl	80036d8 <HAL_IncTick>
 800352a:	bd08      	pop	{r3, pc}

0800352c <USART1_IRQHandler>:
 800352c:	b508      	push	{r3, lr}
 800352e:	4802      	ldr	r0, [pc, #8]	@ (8003538 <USART1_IRQHandler+0xc>)
 8003530:	f002 fc56 	bl	8005de0 <HAL_UART_IRQHandler>
 8003534:	bd08      	pop	{r3, pc}
 8003536:	bf00      	nop
 8003538:	200003fc 	.word	0x200003fc

0800353c <USART2_IRQHandler>:
 800353c:	b508      	push	{r3, lr}
 800353e:	4802      	ldr	r0, [pc, #8]	@ (8003548 <USART2_IRQHandler+0xc>)
 8003540:	f002 fc4e 	bl	8005de0 <HAL_UART_IRQHandler>
 8003544:	bd08      	pop	{r3, pc}
 8003546:	bf00      	nop
 8003548:	200003b4 	.word	0x200003b4

0800354c <USART3_IRQHandler>:
 800354c:	b508      	push	{r3, lr}
 800354e:	4802      	ldr	r0, [pc, #8]	@ (8003558 <USART3_IRQHandler+0xc>)
 8003550:	f002 fc46 	bl	8005de0 <HAL_UART_IRQHandler>
 8003554:	bd08      	pop	{r3, pc}
 8003556:	bf00      	nop
 8003558:	2000036c 	.word	0x2000036c

0800355c <_getpid>:
 800355c:	2001      	movs	r0, #1
 800355e:	4770      	bx	lr

08003560 <_kill>:
 8003560:	b508      	push	{r3, lr}
 8003562:	f004 fff3 	bl	800854c <__errno>
 8003566:	2316      	movs	r3, #22
 8003568:	6003      	str	r3, [r0, #0]
 800356a:	f04f 30ff 	mov.w	r0, #4294967295
 800356e:	bd08      	pop	{r3, pc}

08003570 <_exit>:
 8003570:	b508      	push	{r3, lr}
 8003572:	f04f 31ff 	mov.w	r1, #4294967295
 8003576:	f7ff fff3 	bl	8003560 <_kill>
 800357a:	e7fe      	b.n	800357a <_exit+0xa>

0800357c <_read>:
 800357c:	b570      	push	{r4, r5, r6, lr}
 800357e:	460c      	mov	r4, r1
 8003580:	4616      	mov	r6, r2
 8003582:	2500      	movs	r5, #0
 8003584:	e006      	b.n	8003594 <_read+0x18>
 8003586:	f3af 8000 	nop.w
 800358a:	4621      	mov	r1, r4
 800358c:	f801 0b01 	strb.w	r0, [r1], #1
 8003590:	3501      	adds	r5, #1
 8003592:	460c      	mov	r4, r1
 8003594:	42b5      	cmp	r5, r6
 8003596:	dbf6      	blt.n	8003586 <_read+0xa>
 8003598:	4630      	mov	r0, r6
 800359a:	bd70      	pop	{r4, r5, r6, pc}

0800359c <_close>:
 800359c:	f04f 30ff 	mov.w	r0, #4294967295
 80035a0:	4770      	bx	lr

080035a2 <_fstat>:
 80035a2:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80035a6:	604b      	str	r3, [r1, #4]
 80035a8:	2000      	movs	r0, #0
 80035aa:	4770      	bx	lr

080035ac <_isatty>:
 80035ac:	2001      	movs	r0, #1
 80035ae:	4770      	bx	lr

080035b0 <_lseek>:
 80035b0:	2000      	movs	r0, #0
 80035b2:	4770      	bx	lr

080035b4 <_sbrk>:
 80035b4:	b510      	push	{r4, lr}
 80035b6:	4603      	mov	r3, r0
 80035b8:	4a0c      	ldr	r2, [pc, #48]	@ (80035ec <_sbrk+0x38>)
 80035ba:	490d      	ldr	r1, [pc, #52]	@ (80035f0 <_sbrk+0x3c>)
 80035bc:	480d      	ldr	r0, [pc, #52]	@ (80035f4 <_sbrk+0x40>)
 80035be:	6800      	ldr	r0, [r0, #0]
 80035c0:	b140      	cbz	r0, 80035d4 <_sbrk+0x20>
 80035c2:	480c      	ldr	r0, [pc, #48]	@ (80035f4 <_sbrk+0x40>)
 80035c4:	6800      	ldr	r0, [r0, #0]
 80035c6:	4403      	add	r3, r0
 80035c8:	1a52      	subs	r2, r2, r1
 80035ca:	4293      	cmp	r3, r2
 80035cc:	d806      	bhi.n	80035dc <_sbrk+0x28>
 80035ce:	4a09      	ldr	r2, [pc, #36]	@ (80035f4 <_sbrk+0x40>)
 80035d0:	6013      	str	r3, [r2, #0]
 80035d2:	bd10      	pop	{r4, pc}
 80035d4:	4807      	ldr	r0, [pc, #28]	@ (80035f4 <_sbrk+0x40>)
 80035d6:	4c08      	ldr	r4, [pc, #32]	@ (80035f8 <_sbrk+0x44>)
 80035d8:	6004      	str	r4, [r0, #0]
 80035da:	e7f2      	b.n	80035c2 <_sbrk+0xe>
 80035dc:	f004 ffb6 	bl	800854c <__errno>
 80035e0:	230c      	movs	r3, #12
 80035e2:	6003      	str	r3, [r0, #0]
 80035e4:	f04f 30ff 	mov.w	r0, #4294967295
 80035e8:	e7f3      	b.n	80035d2 <_sbrk+0x1e>
 80035ea:	bf00      	nop
 80035ec:	20005000 	.word	0x20005000
 80035f0:	00000400 	.word	0x00000400
 80035f4:	2000050c 	.word	0x2000050c
 80035f8:	20000678 	.word	0x20000678

080035fc <SystemInit>:
 80035fc:	4770      	bx	lr
	...

08003600 <Reset_Handler>:
 8003600:	f7ff fffc 	bl	80035fc <SystemInit>
 8003604:	480b      	ldr	r0, [pc, #44]	@ (8003634 <LoopFillZerobss+0xe>)
 8003606:	490c      	ldr	r1, [pc, #48]	@ (8003638 <LoopFillZerobss+0x12>)
 8003608:	4a0c      	ldr	r2, [pc, #48]	@ (800363c <LoopFillZerobss+0x16>)
 800360a:	2300      	movs	r3, #0
 800360c:	e002      	b.n	8003614 <LoopCopyDataInit>

0800360e <CopyDataInit>:
 800360e:	58d4      	ldr	r4, [r2, r3]
 8003610:	50c4      	str	r4, [r0, r3]
 8003612:	3304      	adds	r3, #4

08003614 <LoopCopyDataInit>:
 8003614:	18c4      	adds	r4, r0, r3
 8003616:	428c      	cmp	r4, r1
 8003618:	d3f9      	bcc.n	800360e <CopyDataInit>
 800361a:	4a09      	ldr	r2, [pc, #36]	@ (8003640 <LoopFillZerobss+0x1a>)
 800361c:	4c09      	ldr	r4, [pc, #36]	@ (8003644 <LoopFillZerobss+0x1e>)
 800361e:	2300      	movs	r3, #0
 8003620:	e001      	b.n	8003626 <LoopFillZerobss>

08003622 <FillZerobss>:
 8003622:	6013      	str	r3, [r2, #0]
 8003624:	3204      	adds	r2, #4

08003626 <LoopFillZerobss>:
 8003626:	42a2      	cmp	r2, r4
 8003628:	d3fb      	bcc.n	8003622 <FillZerobss>
 800362a:	f004 ff95 	bl	8008558 <__libc_init_array>
 800362e:	f7ff fde9 	bl	8003204 <main>
 8003632:	4770      	bx	lr
 8003634:	20000000 	.word	0x20000000
 8003638:	20000200 	.word	0x20000200
 800363c:	0800c408 	.word	0x0800c408
 8003640:	20000200 	.word	0x20000200
 8003644:	20000674 	.word	0x20000674

08003648 <ADC1_2_IRQHandler>:
 8003648:	e7fe      	b.n	8003648 <ADC1_2_IRQHandler>
	...

0800364c <HAL_Init>:
 800364c:	b580      	push	{r7, lr}
 800364e:	af00      	add	r7, sp, #0
 8003650:	4b08      	ldr	r3, [pc, #32]	@ (8003674 <HAL_Init+0x28>)
 8003652:	681b      	ldr	r3, [r3, #0]
 8003654:	4a07      	ldr	r2, [pc, #28]	@ (8003674 <HAL_Init+0x28>)
 8003656:	f043 0310 	orr.w	r3, r3, #16
 800365a:	6013      	str	r3, [r2, #0]
 800365c:	2003      	movs	r0, #3
 800365e:	f000 fe4d 	bl	80042fc <HAL_NVIC_SetPriorityGrouping>
 8003662:	200f      	movs	r0, #15
 8003664:	f000 f808 	bl	8003678 <HAL_InitTick>
 8003668:	f7ff fde6 	bl	8003238 <HAL_MspInit>
 800366c:	2300      	movs	r3, #0
 800366e:	4618      	mov	r0, r3
 8003670:	bd80      	pop	{r7, pc}
 8003672:	bf00      	nop
 8003674:	40022000 	.word	0x40022000

08003678 <HAL_InitTick>:
 8003678:	b580      	push	{r7, lr}
 800367a:	b082      	sub	sp, #8
 800367c:	af00      	add	r7, sp, #0
 800367e:	6078      	str	r0, [r7, #4]
 8003680:	4b12      	ldr	r3, [pc, #72]	@ (80036cc <HAL_InitTick+0x54>)
 8003682:	681a      	ldr	r2, [r3, #0]
 8003684:	4b12      	ldr	r3, [pc, #72]	@ (80036d0 <HAL_InitTick+0x58>)
 8003686:	781b      	ldrb	r3, [r3, #0]
 8003688:	4619      	mov	r1, r3
 800368a:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800368e:	fbb3 f3f1 	udiv	r3, r3, r1
 8003692:	fbb2 f3f3 	udiv	r3, r2, r3
 8003696:	4618      	mov	r0, r3
 8003698:	f000 fe65 	bl	8004366 <HAL_SYSTICK_Config>
 800369c:	4603      	mov	r3, r0
 800369e:	2b00      	cmp	r3, #0
 80036a0:	d001      	beq.n	80036a6 <HAL_InitTick+0x2e>
 80036a2:	2301      	movs	r3, #1
 80036a4:	e00e      	b.n	80036c4 <HAL_InitTick+0x4c>
 80036a6:	687b      	ldr	r3, [r7, #4]
 80036a8:	2b0f      	cmp	r3, #15
 80036aa:	d80a      	bhi.n	80036c2 <HAL_InitTick+0x4a>
 80036ac:	2200      	movs	r2, #0
 80036ae:	6879      	ldr	r1, [r7, #4]
 80036b0:	f04f 30ff 	mov.w	r0, #4294967295
 80036b4:	f000 fe2d 	bl	8004312 <HAL_NVIC_SetPriority>
 80036b8:	4a06      	ldr	r2, [pc, #24]	@ (80036d4 <HAL_InitTick+0x5c>)
 80036ba:	687b      	ldr	r3, [r7, #4]
 80036bc:	6013      	str	r3, [r2, #0]
 80036be:	2300      	movs	r3, #0
 80036c0:	e000      	b.n	80036c4 <HAL_InitTick+0x4c>
 80036c2:	2301      	movs	r3, #1
 80036c4:	4618      	mov	r0, r3
 80036c6:	3708      	adds	r7, #8
 80036c8:	46bd      	mov	sp, r7
 80036ca:	bd80      	pop	{r7, pc}
 80036cc:	20000008 	.word	0x20000008
 80036d0:	20000010 	.word	0x20000010
 80036d4:	2000000c 	.word	0x2000000c

080036d8 <HAL_IncTick>:
 80036d8:	b480      	push	{r7}
 80036da:	af00      	add	r7, sp, #0
 80036dc:	4b05      	ldr	r3, [pc, #20]	@ (80036f4 <HAL_IncTick+0x1c>)
 80036de:	781b      	ldrb	r3, [r3, #0]
 80036e0:	461a      	mov	r2, r3
 80036e2:	4b05      	ldr	r3, [pc, #20]	@ (80036f8 <HAL_IncTick+0x20>)
 80036e4:	681b      	ldr	r3, [r3, #0]
 80036e6:	4413      	add	r3, r2
 80036e8:	4a03      	ldr	r2, [pc, #12]	@ (80036f8 <HAL_IncTick+0x20>)
 80036ea:	6013      	str	r3, [r2, #0]
 80036ec:	bf00      	nop
 80036ee:	46bd      	mov	sp, r7
 80036f0:	bc80      	pop	{r7}
 80036f2:	4770      	bx	lr
 80036f4:	20000010 	.word	0x20000010
 80036f8:	20000510 	.word	0x20000510

080036fc <HAL_GetTick>:
 80036fc:	b480      	push	{r7}
 80036fe:	af00      	add	r7, sp, #0
 8003700:	4b02      	ldr	r3, [pc, #8]	@ (800370c <HAL_GetTick+0x10>)
 8003702:	681b      	ldr	r3, [r3, #0]
 8003704:	4618      	mov	r0, r3
 8003706:	46bd      	mov	sp, r7
 8003708:	bc80      	pop	{r7}
 800370a:	4770      	bx	lr
 800370c:	20000510 	.word	0x20000510

08003710 <HAL_Delay>:
 8003710:	b580      	push	{r7, lr}
 8003712:	b084      	sub	sp, #16
 8003714:	af00      	add	r7, sp, #0
 8003716:	6078      	str	r0, [r7, #4]
 8003718:	f7ff fff0 	bl	80036fc <HAL_GetTick>
 800371c:	60b8      	str	r0, [r7, #8]
 800371e:	687b      	ldr	r3, [r7, #4]
 8003720:	60fb      	str	r3, [r7, #12]
 8003722:	68fb      	ldr	r3, [r7, #12]
 8003724:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003728:	d005      	beq.n	8003736 <HAL_Delay+0x26>
 800372a:	4b0a      	ldr	r3, [pc, #40]	@ (8003754 <HAL_Delay+0x44>)
 800372c:	781b      	ldrb	r3, [r3, #0]
 800372e:	461a      	mov	r2, r3
 8003730:	68fb      	ldr	r3, [r7, #12]
 8003732:	4413      	add	r3, r2
 8003734:	60fb      	str	r3, [r7, #12]
 8003736:	bf00      	nop
 8003738:	f7ff ffe0 	bl	80036fc <HAL_GetTick>
 800373c:	4602      	mov	r2, r0
 800373e:	68bb      	ldr	r3, [r7, #8]
 8003740:	1ad3      	subs	r3, r2, r3
 8003742:	68fa      	ldr	r2, [r7, #12]
 8003744:	429a      	cmp	r2, r3
 8003746:	d8f7      	bhi.n	8003738 <HAL_Delay+0x28>
 8003748:	bf00      	nop
 800374a:	bf00      	nop
 800374c:	3710      	adds	r7, #16
 800374e:	46bd      	mov	sp, r7
 8003750:	bd80      	pop	{r7, pc}
 8003752:	bf00      	nop
 8003754:	20000010 	.word	0x20000010

08003758 <HAL_ADC_Init>:
 8003758:	b580      	push	{r7, lr}
 800375a:	b086      	sub	sp, #24
 800375c:	af00      	add	r7, sp, #0
 800375e:	6078      	str	r0, [r7, #4]
 8003760:	2300      	movs	r3, #0
 8003762:	75fb      	strb	r3, [r7, #23]
 8003764:	2300      	movs	r3, #0
 8003766:	613b      	str	r3, [r7, #16]
 8003768:	2300      	movs	r3, #0
 800376a:	60bb      	str	r3, [r7, #8]
 800376c:	2300      	movs	r3, #0
 800376e:	60fb      	str	r3, [r7, #12]
 8003770:	687b      	ldr	r3, [r7, #4]
 8003772:	2b00      	cmp	r3, #0
 8003774:	d101      	bne.n	800377a <HAL_ADC_Init+0x22>
 8003776:	2301      	movs	r3, #1
 8003778:	e0be      	b.n	80038f8 <HAL_ADC_Init+0x1a0>
 800377a:	687b      	ldr	r3, [r7, #4]
 800377c:	689b      	ldr	r3, [r3, #8]
 800377e:	2b00      	cmp	r3, #0
 8003780:	687b      	ldr	r3, [r7, #4]
 8003782:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003784:	2b00      	cmp	r3, #0
 8003786:	d109      	bne.n	800379c <HAL_ADC_Init+0x44>
 8003788:	687b      	ldr	r3, [r7, #4]
 800378a:	2200      	movs	r2, #0
 800378c:	62da      	str	r2, [r3, #44]	@ 0x2c
 800378e:	687b      	ldr	r3, [r7, #4]
 8003790:	2200      	movs	r2, #0
 8003792:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8003796:	6878      	ldr	r0, [r7, #4]
 8003798:	f7ff fd70 	bl	800327c <HAL_ADC_MspInit>
 800379c:	6878      	ldr	r0, [r7, #4]
 800379e:	f000 fbf1 	bl	8003f84 <ADC_ConversionStop_Disable>
 80037a2:	4603      	mov	r3, r0
 80037a4:	75fb      	strb	r3, [r7, #23]
 80037a6:	687b      	ldr	r3, [r7, #4]
 80037a8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80037aa:	f003 0310 	and.w	r3, r3, #16
 80037ae:	2b00      	cmp	r3, #0
 80037b0:	f040 8099 	bne.w	80038e6 <HAL_ADC_Init+0x18e>
 80037b4:	7dfb      	ldrb	r3, [r7, #23]
 80037b6:	2b00      	cmp	r3, #0
 80037b8:	f040 8095 	bne.w	80038e6 <HAL_ADC_Init+0x18e>
 80037bc:	687b      	ldr	r3, [r7, #4]
 80037be:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80037c0:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 80037c4:	f023 0302 	bic.w	r3, r3, #2
 80037c8:	f043 0202 	orr.w	r2, r3, #2
 80037cc:	687b      	ldr	r3, [r7, #4]
 80037ce:	629a      	str	r2, [r3, #40]	@ 0x28
 80037d0:	687b      	ldr	r3, [r7, #4]
 80037d2:	685a      	ldr	r2, [r3, #4]
 80037d4:	687b      	ldr	r3, [r7, #4]
 80037d6:	69db      	ldr	r3, [r3, #28]
 80037d8:	431a      	orrs	r2, r3
 80037da:	687b      	ldr	r3, [r7, #4]
 80037dc:	7b1b      	ldrb	r3, [r3, #12]
 80037de:	005b      	lsls	r3, r3, #1
 80037e0:	4313      	orrs	r3, r2
 80037e2:	68ba      	ldr	r2, [r7, #8]
 80037e4:	4313      	orrs	r3, r2
 80037e6:	60bb      	str	r3, [r7, #8]
 80037e8:	687b      	ldr	r3, [r7, #4]
 80037ea:	689b      	ldr	r3, [r3, #8]
 80037ec:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80037f0:	d003      	beq.n	80037fa <HAL_ADC_Init+0xa2>
 80037f2:	687b      	ldr	r3, [r7, #4]
 80037f4:	689b      	ldr	r3, [r3, #8]
 80037f6:	2b01      	cmp	r3, #1
 80037f8:	d102      	bne.n	8003800 <HAL_ADC_Init+0xa8>
 80037fa:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80037fe:	e000      	b.n	8003802 <HAL_ADC_Init+0xaa>
 8003800:	2300      	movs	r3, #0
 8003802:	693a      	ldr	r2, [r7, #16]
 8003804:	4313      	orrs	r3, r2
 8003806:	613b      	str	r3, [r7, #16]
 8003808:	687b      	ldr	r3, [r7, #4]
 800380a:	7d1b      	ldrb	r3, [r3, #20]
 800380c:	2b01      	cmp	r3, #1
 800380e:	d119      	bne.n	8003844 <HAL_ADC_Init+0xec>
 8003810:	687b      	ldr	r3, [r7, #4]
 8003812:	7b1b      	ldrb	r3, [r3, #12]
 8003814:	2b00      	cmp	r3, #0
 8003816:	d109      	bne.n	800382c <HAL_ADC_Init+0xd4>
 8003818:	687b      	ldr	r3, [r7, #4]
 800381a:	699b      	ldr	r3, [r3, #24]
 800381c:	3b01      	subs	r3, #1
 800381e:	035a      	lsls	r2, r3, #13
 8003820:	693b      	ldr	r3, [r7, #16]
 8003822:	4313      	orrs	r3, r2
 8003824:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8003828:	613b      	str	r3, [r7, #16]
 800382a:	e00b      	b.n	8003844 <HAL_ADC_Init+0xec>
 800382c:	687b      	ldr	r3, [r7, #4]
 800382e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003830:	f043 0220 	orr.w	r2, r3, #32
 8003834:	687b      	ldr	r3, [r7, #4]
 8003836:	629a      	str	r2, [r3, #40]	@ 0x28
 8003838:	687b      	ldr	r3, [r7, #4]
 800383a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800383c:	f043 0201 	orr.w	r2, r3, #1
 8003840:	687b      	ldr	r3, [r7, #4]
 8003842:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003844:	687b      	ldr	r3, [r7, #4]
 8003846:	681b      	ldr	r3, [r3, #0]
 8003848:	685b      	ldr	r3, [r3, #4]
 800384a:	f423 4169 	bic.w	r1, r3, #59648	@ 0xe900
 800384e:	687b      	ldr	r3, [r7, #4]
 8003850:	681b      	ldr	r3, [r3, #0]
 8003852:	693a      	ldr	r2, [r7, #16]
 8003854:	430a      	orrs	r2, r1
 8003856:	605a      	str	r2, [r3, #4]
 8003858:	687b      	ldr	r3, [r7, #4]
 800385a:	681b      	ldr	r3, [r3, #0]
 800385c:	689a      	ldr	r2, [r3, #8]
 800385e:	4b28      	ldr	r3, [pc, #160]	@ (8003900 <HAL_ADC_Init+0x1a8>)
 8003860:	4013      	ands	r3, r2
 8003862:	687a      	ldr	r2, [r7, #4]
 8003864:	6812      	ldr	r2, [r2, #0]
 8003866:	68b9      	ldr	r1, [r7, #8]
 8003868:	430b      	orrs	r3, r1
 800386a:	6093      	str	r3, [r2, #8]
 800386c:	687b      	ldr	r3, [r7, #4]
 800386e:	689b      	ldr	r3, [r3, #8]
 8003870:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8003874:	d003      	beq.n	800387e <HAL_ADC_Init+0x126>
 8003876:	687b      	ldr	r3, [r7, #4]
 8003878:	689b      	ldr	r3, [r3, #8]
 800387a:	2b01      	cmp	r3, #1
 800387c:	d104      	bne.n	8003888 <HAL_ADC_Init+0x130>
 800387e:	687b      	ldr	r3, [r7, #4]
 8003880:	691b      	ldr	r3, [r3, #16]
 8003882:	3b01      	subs	r3, #1
 8003884:	051b      	lsls	r3, r3, #20
 8003886:	60fb      	str	r3, [r7, #12]
 8003888:	687b      	ldr	r3, [r7, #4]
 800388a:	681b      	ldr	r3, [r3, #0]
 800388c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800388e:	f423 0170 	bic.w	r1, r3, #15728640	@ 0xf00000
 8003892:	687b      	ldr	r3, [r7, #4]
 8003894:	681b      	ldr	r3, [r3, #0]
 8003896:	68fa      	ldr	r2, [r7, #12]
 8003898:	430a      	orrs	r2, r1
 800389a:	62da      	str	r2, [r3, #44]	@ 0x2c
 800389c:	687b      	ldr	r3, [r7, #4]
 800389e:	681b      	ldr	r3, [r3, #0]
 80038a0:	689a      	ldr	r2, [r3, #8]
 80038a2:	4b18      	ldr	r3, [pc, #96]	@ (8003904 <HAL_ADC_Init+0x1ac>)
 80038a4:	4013      	ands	r3, r2
 80038a6:	68ba      	ldr	r2, [r7, #8]
 80038a8:	429a      	cmp	r2, r3
 80038aa:	d10b      	bne.n	80038c4 <HAL_ADC_Init+0x16c>
 80038ac:	687b      	ldr	r3, [r7, #4]
 80038ae:	2200      	movs	r2, #0
 80038b0:	62da      	str	r2, [r3, #44]	@ 0x2c
 80038b2:	687b      	ldr	r3, [r7, #4]
 80038b4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80038b6:	f023 0303 	bic.w	r3, r3, #3
 80038ba:	f043 0201 	orr.w	r2, r3, #1
 80038be:	687b      	ldr	r3, [r7, #4]
 80038c0:	629a      	str	r2, [r3, #40]	@ 0x28
 80038c2:	e018      	b.n	80038f6 <HAL_ADC_Init+0x19e>
 80038c4:	687b      	ldr	r3, [r7, #4]
 80038c6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80038c8:	f023 0312 	bic.w	r3, r3, #18
 80038cc:	f043 0210 	orr.w	r2, r3, #16
 80038d0:	687b      	ldr	r3, [r7, #4]
 80038d2:	629a      	str	r2, [r3, #40]	@ 0x28
 80038d4:	687b      	ldr	r3, [r7, #4]
 80038d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80038d8:	f043 0201 	orr.w	r2, r3, #1
 80038dc:	687b      	ldr	r3, [r7, #4]
 80038de:	62da      	str	r2, [r3, #44]	@ 0x2c
 80038e0:	2301      	movs	r3, #1
 80038e2:	75fb      	strb	r3, [r7, #23]
 80038e4:	e007      	b.n	80038f6 <HAL_ADC_Init+0x19e>
 80038e6:	687b      	ldr	r3, [r7, #4]
 80038e8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80038ea:	f043 0210 	orr.w	r2, r3, #16
 80038ee:	687b      	ldr	r3, [r7, #4]
 80038f0:	629a      	str	r2, [r3, #40]	@ 0x28
 80038f2:	2301      	movs	r3, #1
 80038f4:	75fb      	strb	r3, [r7, #23]
 80038f6:	7dfb      	ldrb	r3, [r7, #23]
 80038f8:	4618      	mov	r0, r3
 80038fa:	3718      	adds	r7, #24
 80038fc:	46bd      	mov	sp, r7
 80038fe:	bd80      	pop	{r7, pc}
 8003900:	ffe1f7fd 	.word	0xffe1f7fd
 8003904:	ff1f0efe 	.word	0xff1f0efe

08003908 <HAL_ADC_Start>:
 8003908:	b580      	push	{r7, lr}
 800390a:	b084      	sub	sp, #16
 800390c:	af00      	add	r7, sp, #0
 800390e:	6078      	str	r0, [r7, #4]
 8003910:	2300      	movs	r3, #0
 8003912:	73fb      	strb	r3, [r7, #15]
 8003914:	687b      	ldr	r3, [r7, #4]
 8003916:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 800391a:	2b01      	cmp	r3, #1
 800391c:	d101      	bne.n	8003922 <HAL_ADC_Start+0x1a>
 800391e:	2302      	movs	r3, #2
 8003920:	e098      	b.n	8003a54 <HAL_ADC_Start+0x14c>
 8003922:	687b      	ldr	r3, [r7, #4]
 8003924:	2201      	movs	r2, #1
 8003926:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 800392a:	6878      	ldr	r0, [r7, #4]
 800392c:	f000 fad0 	bl	8003ed0 <ADC_Enable>
 8003930:	4603      	mov	r3, r0
 8003932:	73fb      	strb	r3, [r7, #15]
 8003934:	7bfb      	ldrb	r3, [r7, #15]
 8003936:	2b00      	cmp	r3, #0
 8003938:	f040 8087 	bne.w	8003a4a <HAL_ADC_Start+0x142>
 800393c:	687b      	ldr	r3, [r7, #4]
 800393e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003940:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8003944:	f023 0301 	bic.w	r3, r3, #1
 8003948:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 800394c:	687b      	ldr	r3, [r7, #4]
 800394e:	629a      	str	r2, [r3, #40]	@ 0x28
 8003950:	687b      	ldr	r3, [r7, #4]
 8003952:	681b      	ldr	r3, [r3, #0]
 8003954:	4a41      	ldr	r2, [pc, #260]	@ (8003a5c <HAL_ADC_Start+0x154>)
 8003956:	4293      	cmp	r3, r2
 8003958:	d105      	bne.n	8003966 <HAL_ADC_Start+0x5e>
 800395a:	4b41      	ldr	r3, [pc, #260]	@ (8003a60 <HAL_ADC_Start+0x158>)
 800395c:	685b      	ldr	r3, [r3, #4]
 800395e:	f403 2370 	and.w	r3, r3, #983040	@ 0xf0000
 8003962:	2b00      	cmp	r3, #0
 8003964:	d115      	bne.n	8003992 <HAL_ADC_Start+0x8a>
 8003966:	687b      	ldr	r3, [r7, #4]
 8003968:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800396a:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 800396e:	687b      	ldr	r3, [r7, #4]
 8003970:	629a      	str	r2, [r3, #40]	@ 0x28
 8003972:	687b      	ldr	r3, [r7, #4]
 8003974:	681b      	ldr	r3, [r3, #0]
 8003976:	685b      	ldr	r3, [r3, #4]
 8003978:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800397c:	2b00      	cmp	r3, #0
 800397e:	d026      	beq.n	80039ce <HAL_ADC_Start+0xc6>
 8003980:	687b      	ldr	r3, [r7, #4]
 8003982:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003984:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8003988:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 800398c:	687b      	ldr	r3, [r7, #4]
 800398e:	629a      	str	r2, [r3, #40]	@ 0x28
 8003990:	e01d      	b.n	80039ce <HAL_ADC_Start+0xc6>
 8003992:	687b      	ldr	r3, [r7, #4]
 8003994:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003996:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 800399a:	687b      	ldr	r3, [r7, #4]
 800399c:	629a      	str	r2, [r3, #40]	@ 0x28
 800399e:	687b      	ldr	r3, [r7, #4]
 80039a0:	681b      	ldr	r3, [r3, #0]
 80039a2:	4a2f      	ldr	r2, [pc, #188]	@ (8003a60 <HAL_ADC_Start+0x158>)
 80039a4:	4293      	cmp	r3, r2
 80039a6:	d004      	beq.n	80039b2 <HAL_ADC_Start+0xaa>
 80039a8:	687b      	ldr	r3, [r7, #4]
 80039aa:	681b      	ldr	r3, [r3, #0]
 80039ac:	4a2b      	ldr	r2, [pc, #172]	@ (8003a5c <HAL_ADC_Start+0x154>)
 80039ae:	4293      	cmp	r3, r2
 80039b0:	d10d      	bne.n	80039ce <HAL_ADC_Start+0xc6>
 80039b2:	4b2b      	ldr	r3, [pc, #172]	@ (8003a60 <HAL_ADC_Start+0x158>)
 80039b4:	685b      	ldr	r3, [r3, #4]
 80039b6:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80039ba:	2b00      	cmp	r3, #0
 80039bc:	d007      	beq.n	80039ce <HAL_ADC_Start+0xc6>
 80039be:	687b      	ldr	r3, [r7, #4]
 80039c0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80039c2:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 80039c6:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 80039ca:	687b      	ldr	r3, [r7, #4]
 80039cc:	629a      	str	r2, [r3, #40]	@ 0x28
 80039ce:	687b      	ldr	r3, [r7, #4]
 80039d0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80039d2:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80039d6:	2b00      	cmp	r3, #0
 80039d8:	d006      	beq.n	80039e8 <HAL_ADC_Start+0xe0>
 80039da:	687b      	ldr	r3, [r7, #4]
 80039dc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80039de:	f023 0206 	bic.w	r2, r3, #6
 80039e2:	687b      	ldr	r3, [r7, #4]
 80039e4:	62da      	str	r2, [r3, #44]	@ 0x2c
 80039e6:	e002      	b.n	80039ee <HAL_ADC_Start+0xe6>
 80039e8:	687b      	ldr	r3, [r7, #4]
 80039ea:	2200      	movs	r2, #0
 80039ec:	62da      	str	r2, [r3, #44]	@ 0x2c
 80039ee:	687b      	ldr	r3, [r7, #4]
 80039f0:	2200      	movs	r2, #0
 80039f2:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80039f6:	687b      	ldr	r3, [r7, #4]
 80039f8:	681b      	ldr	r3, [r3, #0]
 80039fa:	f06f 0202 	mvn.w	r2, #2
 80039fe:	601a      	str	r2, [r3, #0]
 8003a00:	687b      	ldr	r3, [r7, #4]
 8003a02:	681b      	ldr	r3, [r3, #0]
 8003a04:	689b      	ldr	r3, [r3, #8]
 8003a06:	f403 2360 	and.w	r3, r3, #917504	@ 0xe0000
 8003a0a:	f5b3 2f60 	cmp.w	r3, #917504	@ 0xe0000
 8003a0e:	d113      	bne.n	8003a38 <HAL_ADC_Start+0x130>
 8003a10:	687b      	ldr	r3, [r7, #4]
 8003a12:	681b      	ldr	r3, [r3, #0]
 8003a14:	4a11      	ldr	r2, [pc, #68]	@ (8003a5c <HAL_ADC_Start+0x154>)
 8003a16:	4293      	cmp	r3, r2
 8003a18:	d105      	bne.n	8003a26 <HAL_ADC_Start+0x11e>
 8003a1a:	4b11      	ldr	r3, [pc, #68]	@ (8003a60 <HAL_ADC_Start+0x158>)
 8003a1c:	685b      	ldr	r3, [r3, #4]
 8003a1e:	f403 2370 	and.w	r3, r3, #983040	@ 0xf0000
 8003a22:	2b00      	cmp	r3, #0
 8003a24:	d108      	bne.n	8003a38 <HAL_ADC_Start+0x130>
 8003a26:	687b      	ldr	r3, [r7, #4]
 8003a28:	681b      	ldr	r3, [r3, #0]
 8003a2a:	689a      	ldr	r2, [r3, #8]
 8003a2c:	687b      	ldr	r3, [r7, #4]
 8003a2e:	681b      	ldr	r3, [r3, #0]
 8003a30:	f442 02a0 	orr.w	r2, r2, #5242880	@ 0x500000
 8003a34:	609a      	str	r2, [r3, #8]
 8003a36:	e00c      	b.n	8003a52 <HAL_ADC_Start+0x14a>
 8003a38:	687b      	ldr	r3, [r7, #4]
 8003a3a:	681b      	ldr	r3, [r3, #0]
 8003a3c:	689a      	ldr	r2, [r3, #8]
 8003a3e:	687b      	ldr	r3, [r7, #4]
 8003a40:	681b      	ldr	r3, [r3, #0]
 8003a42:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 8003a46:	609a      	str	r2, [r3, #8]
 8003a48:	e003      	b.n	8003a52 <HAL_ADC_Start+0x14a>
 8003a4a:	687b      	ldr	r3, [r7, #4]
 8003a4c:	2200      	movs	r2, #0
 8003a4e:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8003a52:	7bfb      	ldrb	r3, [r7, #15]
 8003a54:	4618      	mov	r0, r3
 8003a56:	3710      	adds	r7, #16
 8003a58:	46bd      	mov	sp, r7
 8003a5a:	bd80      	pop	{r7, pc}
 8003a5c:	40012800 	.word	0x40012800
 8003a60:	40012400 	.word	0x40012400

08003a64 <HAL_ADC_Stop>:
 8003a64:	b580      	push	{r7, lr}
 8003a66:	b084      	sub	sp, #16
 8003a68:	af00      	add	r7, sp, #0
 8003a6a:	6078      	str	r0, [r7, #4]
 8003a6c:	2300      	movs	r3, #0
 8003a6e:	73fb      	strb	r3, [r7, #15]
 8003a70:	687b      	ldr	r3, [r7, #4]
 8003a72:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8003a76:	2b01      	cmp	r3, #1
 8003a78:	d101      	bne.n	8003a7e <HAL_ADC_Stop+0x1a>
 8003a7a:	2302      	movs	r3, #2
 8003a7c:	e01a      	b.n	8003ab4 <HAL_ADC_Stop+0x50>
 8003a7e:	687b      	ldr	r3, [r7, #4]
 8003a80:	2201      	movs	r2, #1
 8003a82:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8003a86:	6878      	ldr	r0, [r7, #4]
 8003a88:	f000 fa7c 	bl	8003f84 <ADC_ConversionStop_Disable>
 8003a8c:	4603      	mov	r3, r0
 8003a8e:	73fb      	strb	r3, [r7, #15]
 8003a90:	7bfb      	ldrb	r3, [r7, #15]
 8003a92:	2b00      	cmp	r3, #0
 8003a94:	d109      	bne.n	8003aaa <HAL_ADC_Stop+0x46>
 8003a96:	687b      	ldr	r3, [r7, #4]
 8003a98:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003a9a:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8003a9e:	f023 0301 	bic.w	r3, r3, #1
 8003aa2:	f043 0201 	orr.w	r2, r3, #1
 8003aa6:	687b      	ldr	r3, [r7, #4]
 8003aa8:	629a      	str	r2, [r3, #40]	@ 0x28
 8003aaa:	687b      	ldr	r3, [r7, #4]
 8003aac:	2200      	movs	r2, #0
 8003aae:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8003ab2:	7bfb      	ldrb	r3, [r7, #15]
 8003ab4:	4618      	mov	r0, r3
 8003ab6:	3710      	adds	r7, #16
 8003ab8:	46bd      	mov	sp, r7
 8003aba:	bd80      	pop	{r7, pc}

08003abc <HAL_ADC_PollForConversion>:
 8003abc:	b590      	push	{r4, r7, lr}
 8003abe:	b087      	sub	sp, #28
 8003ac0:	af00      	add	r7, sp, #0
 8003ac2:	6078      	str	r0, [r7, #4]
 8003ac4:	6039      	str	r1, [r7, #0]
 8003ac6:	2300      	movs	r3, #0
 8003ac8:	617b      	str	r3, [r7, #20]
 8003aca:	2300      	movs	r3, #0
 8003acc:	60fb      	str	r3, [r7, #12]
 8003ace:	2300      	movs	r3, #0
 8003ad0:	613b      	str	r3, [r7, #16]
 8003ad2:	f7ff fe13 	bl	80036fc <HAL_GetTick>
 8003ad6:	6178      	str	r0, [r7, #20]
 8003ad8:	687b      	ldr	r3, [r7, #4]
 8003ada:	681b      	ldr	r3, [r3, #0]
 8003adc:	689b      	ldr	r3, [r3, #8]
 8003ade:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003ae2:	2b00      	cmp	r3, #0
 8003ae4:	d00b      	beq.n	8003afe <HAL_ADC_PollForConversion+0x42>
 8003ae6:	687b      	ldr	r3, [r7, #4]
 8003ae8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003aea:	f043 0220 	orr.w	r2, r3, #32
 8003aee:	687b      	ldr	r3, [r7, #4]
 8003af0:	629a      	str	r2, [r3, #40]	@ 0x28
 8003af2:	687b      	ldr	r3, [r7, #4]
 8003af4:	2200      	movs	r2, #0
 8003af6:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8003afa:	2301      	movs	r3, #1
 8003afc:	e0d3      	b.n	8003ca6 <HAL_ADC_PollForConversion+0x1ea>
 8003afe:	687b      	ldr	r3, [r7, #4]
 8003b00:	681b      	ldr	r3, [r3, #0]
 8003b02:	685b      	ldr	r3, [r3, #4]
 8003b04:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003b08:	2b00      	cmp	r3, #0
 8003b0a:	d131      	bne.n	8003b70 <HAL_ADC_PollForConversion+0xb4>
 8003b0c:	687b      	ldr	r3, [r7, #4]
 8003b0e:	681b      	ldr	r3, [r3, #0]
 8003b10:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003b12:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
 8003b16:	2b00      	cmp	r3, #0
 8003b18:	d12a      	bne.n	8003b70 <HAL_ADC_PollForConversion+0xb4>
 8003b1a:	e021      	b.n	8003b60 <HAL_ADC_PollForConversion+0xa4>
 8003b1c:	683b      	ldr	r3, [r7, #0]
 8003b1e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003b22:	d01d      	beq.n	8003b60 <HAL_ADC_PollForConversion+0xa4>
 8003b24:	683b      	ldr	r3, [r7, #0]
 8003b26:	2b00      	cmp	r3, #0
 8003b28:	d007      	beq.n	8003b3a <HAL_ADC_PollForConversion+0x7e>
 8003b2a:	f7ff fde7 	bl	80036fc <HAL_GetTick>
 8003b2e:	4602      	mov	r2, r0
 8003b30:	697b      	ldr	r3, [r7, #20]
 8003b32:	1ad3      	subs	r3, r2, r3
 8003b34:	683a      	ldr	r2, [r7, #0]
 8003b36:	429a      	cmp	r2, r3
 8003b38:	d212      	bcs.n	8003b60 <HAL_ADC_PollForConversion+0xa4>
 8003b3a:	687b      	ldr	r3, [r7, #4]
 8003b3c:	681b      	ldr	r3, [r3, #0]
 8003b3e:	681b      	ldr	r3, [r3, #0]
 8003b40:	f003 0302 	and.w	r3, r3, #2
 8003b44:	2b00      	cmp	r3, #0
 8003b46:	d10b      	bne.n	8003b60 <HAL_ADC_PollForConversion+0xa4>
 8003b48:	687b      	ldr	r3, [r7, #4]
 8003b4a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003b4c:	f043 0204 	orr.w	r2, r3, #4
 8003b50:	687b      	ldr	r3, [r7, #4]
 8003b52:	629a      	str	r2, [r3, #40]	@ 0x28
 8003b54:	687b      	ldr	r3, [r7, #4]
 8003b56:	2200      	movs	r2, #0
 8003b58:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8003b5c:	2303      	movs	r3, #3
 8003b5e:	e0a2      	b.n	8003ca6 <HAL_ADC_PollForConversion+0x1ea>
 8003b60:	687b      	ldr	r3, [r7, #4]
 8003b62:	681b      	ldr	r3, [r3, #0]
 8003b64:	681b      	ldr	r3, [r3, #0]
 8003b66:	f003 0302 	and.w	r3, r3, #2
 8003b6a:	2b00      	cmp	r3, #0
 8003b6c:	d0d6      	beq.n	8003b1c <HAL_ADC_PollForConversion+0x60>
 8003b6e:	e070      	b.n	8003c52 <HAL_ADC_PollForConversion+0x196>
 8003b70:	4b4f      	ldr	r3, [pc, #316]	@ (8003cb0 <HAL_ADC_PollForConversion+0x1f4>)
 8003b72:	681c      	ldr	r4, [r3, #0]
 8003b74:	2002      	movs	r0, #2
 8003b76:	f001 fb1d 	bl	80051b4 <HAL_RCCEx_GetPeriphCLKFreq>
 8003b7a:	4603      	mov	r3, r0
 8003b7c:	fbb4 f2f3 	udiv	r2, r4, r3
 8003b80:	687b      	ldr	r3, [r7, #4]
 8003b82:	681b      	ldr	r3, [r3, #0]
 8003b84:	6919      	ldr	r1, [r3, #16]
 8003b86:	4b4b      	ldr	r3, [pc, #300]	@ (8003cb4 <HAL_ADC_PollForConversion+0x1f8>)
 8003b88:	400b      	ands	r3, r1
 8003b8a:	2b00      	cmp	r3, #0
 8003b8c:	d118      	bne.n	8003bc0 <HAL_ADC_PollForConversion+0x104>
 8003b8e:	687b      	ldr	r3, [r7, #4]
 8003b90:	681b      	ldr	r3, [r3, #0]
 8003b92:	68d9      	ldr	r1, [r3, #12]
 8003b94:	4b48      	ldr	r3, [pc, #288]	@ (8003cb8 <HAL_ADC_PollForConversion+0x1fc>)
 8003b96:	400b      	ands	r3, r1
 8003b98:	2b00      	cmp	r3, #0
 8003b9a:	d111      	bne.n	8003bc0 <HAL_ADC_PollForConversion+0x104>
 8003b9c:	687b      	ldr	r3, [r7, #4]
 8003b9e:	681b      	ldr	r3, [r3, #0]
 8003ba0:	6919      	ldr	r1, [r3, #16]
 8003ba2:	4b46      	ldr	r3, [pc, #280]	@ (8003cbc <HAL_ADC_PollForConversion+0x200>)
 8003ba4:	400b      	ands	r3, r1
 8003ba6:	2b00      	cmp	r3, #0
 8003ba8:	d108      	bne.n	8003bbc <HAL_ADC_PollForConversion+0x100>
 8003baa:	687b      	ldr	r3, [r7, #4]
 8003bac:	681b      	ldr	r3, [r3, #0]
 8003bae:	68d9      	ldr	r1, [r3, #12]
 8003bb0:	4b43      	ldr	r3, [pc, #268]	@ (8003cc0 <HAL_ADC_PollForConversion+0x204>)
 8003bb2:	400b      	ands	r3, r1
 8003bb4:	2b00      	cmp	r3, #0
 8003bb6:	d101      	bne.n	8003bbc <HAL_ADC_PollForConversion+0x100>
 8003bb8:	2314      	movs	r3, #20
 8003bba:	e020      	b.n	8003bfe <HAL_ADC_PollForConversion+0x142>
 8003bbc:	2329      	movs	r3, #41	@ 0x29
 8003bbe:	e01e      	b.n	8003bfe <HAL_ADC_PollForConversion+0x142>
 8003bc0:	687b      	ldr	r3, [r7, #4]
 8003bc2:	681b      	ldr	r3, [r3, #0]
 8003bc4:	6919      	ldr	r1, [r3, #16]
 8003bc6:	4b3d      	ldr	r3, [pc, #244]	@ (8003cbc <HAL_ADC_PollForConversion+0x200>)
 8003bc8:	400b      	ands	r3, r1
 8003bca:	2b00      	cmp	r3, #0
 8003bcc:	d106      	bne.n	8003bdc <HAL_ADC_PollForConversion+0x120>
 8003bce:	687b      	ldr	r3, [r7, #4]
 8003bd0:	681b      	ldr	r3, [r3, #0]
 8003bd2:	68d9      	ldr	r1, [r3, #12]
 8003bd4:	4b3a      	ldr	r3, [pc, #232]	@ (8003cc0 <HAL_ADC_PollForConversion+0x204>)
 8003bd6:	400b      	ands	r3, r1
 8003bd8:	2b00      	cmp	r3, #0
 8003bda:	d00d      	beq.n	8003bf8 <HAL_ADC_PollForConversion+0x13c>
 8003bdc:	687b      	ldr	r3, [r7, #4]
 8003bde:	681b      	ldr	r3, [r3, #0]
 8003be0:	6919      	ldr	r1, [r3, #16]
 8003be2:	4b38      	ldr	r3, [pc, #224]	@ (8003cc4 <HAL_ADC_PollForConversion+0x208>)
 8003be4:	400b      	ands	r3, r1
 8003be6:	2b00      	cmp	r3, #0
 8003be8:	d108      	bne.n	8003bfc <HAL_ADC_PollForConversion+0x140>
 8003bea:	687b      	ldr	r3, [r7, #4]
 8003bec:	681b      	ldr	r3, [r3, #0]
 8003bee:	68d9      	ldr	r1, [r3, #12]
 8003bf0:	4b34      	ldr	r3, [pc, #208]	@ (8003cc4 <HAL_ADC_PollForConversion+0x208>)
 8003bf2:	400b      	ands	r3, r1
 8003bf4:	2b00      	cmp	r3, #0
 8003bf6:	d101      	bne.n	8003bfc <HAL_ADC_PollForConversion+0x140>
 8003bf8:	2354      	movs	r3, #84	@ 0x54
 8003bfa:	e000      	b.n	8003bfe <HAL_ADC_PollForConversion+0x142>
 8003bfc:	23fc      	movs	r3, #252	@ 0xfc
 8003bfe:	fb02 f303 	mul.w	r3, r2, r3
 8003c02:	613b      	str	r3, [r7, #16]
 8003c04:	e021      	b.n	8003c4a <HAL_ADC_PollForConversion+0x18e>
 8003c06:	683b      	ldr	r3, [r7, #0]
 8003c08:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003c0c:	d01a      	beq.n	8003c44 <HAL_ADC_PollForConversion+0x188>
 8003c0e:	683b      	ldr	r3, [r7, #0]
 8003c10:	2b00      	cmp	r3, #0
 8003c12:	d007      	beq.n	8003c24 <HAL_ADC_PollForConversion+0x168>
 8003c14:	f7ff fd72 	bl	80036fc <HAL_GetTick>
 8003c18:	4602      	mov	r2, r0
 8003c1a:	697b      	ldr	r3, [r7, #20]
 8003c1c:	1ad3      	subs	r3, r2, r3
 8003c1e:	683a      	ldr	r2, [r7, #0]
 8003c20:	429a      	cmp	r2, r3
 8003c22:	d20f      	bcs.n	8003c44 <HAL_ADC_PollForConversion+0x188>
 8003c24:	68fb      	ldr	r3, [r7, #12]
 8003c26:	693a      	ldr	r2, [r7, #16]
 8003c28:	429a      	cmp	r2, r3
 8003c2a:	d90b      	bls.n	8003c44 <HAL_ADC_PollForConversion+0x188>
 8003c2c:	687b      	ldr	r3, [r7, #4]
 8003c2e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003c30:	f043 0204 	orr.w	r2, r3, #4
 8003c34:	687b      	ldr	r3, [r7, #4]
 8003c36:	629a      	str	r2, [r3, #40]	@ 0x28
 8003c38:	687b      	ldr	r3, [r7, #4]
 8003c3a:	2200      	movs	r2, #0
 8003c3c:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8003c40:	2303      	movs	r3, #3
 8003c42:	e030      	b.n	8003ca6 <HAL_ADC_PollForConversion+0x1ea>
 8003c44:	68fb      	ldr	r3, [r7, #12]
 8003c46:	3301      	adds	r3, #1
 8003c48:	60fb      	str	r3, [r7, #12]
 8003c4a:	68fb      	ldr	r3, [r7, #12]
 8003c4c:	693a      	ldr	r2, [r7, #16]
 8003c4e:	429a      	cmp	r2, r3
 8003c50:	d8d9      	bhi.n	8003c06 <HAL_ADC_PollForConversion+0x14a>
 8003c52:	687b      	ldr	r3, [r7, #4]
 8003c54:	681b      	ldr	r3, [r3, #0]
 8003c56:	f06f 0212 	mvn.w	r2, #18
 8003c5a:	601a      	str	r2, [r3, #0]
 8003c5c:	687b      	ldr	r3, [r7, #4]
 8003c5e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003c60:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8003c64:	687b      	ldr	r3, [r7, #4]
 8003c66:	629a      	str	r2, [r3, #40]	@ 0x28
 8003c68:	687b      	ldr	r3, [r7, #4]
 8003c6a:	681b      	ldr	r3, [r3, #0]
 8003c6c:	689b      	ldr	r3, [r3, #8]
 8003c6e:	f403 2360 	and.w	r3, r3, #917504	@ 0xe0000
 8003c72:	f5b3 2f60 	cmp.w	r3, #917504	@ 0xe0000
 8003c76:	d115      	bne.n	8003ca4 <HAL_ADC_PollForConversion+0x1e8>
 8003c78:	687b      	ldr	r3, [r7, #4]
 8003c7a:	7b1b      	ldrb	r3, [r3, #12]
 8003c7c:	2b00      	cmp	r3, #0
 8003c7e:	d111      	bne.n	8003ca4 <HAL_ADC_PollForConversion+0x1e8>
 8003c80:	687b      	ldr	r3, [r7, #4]
 8003c82:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003c84:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8003c88:	687b      	ldr	r3, [r7, #4]
 8003c8a:	629a      	str	r2, [r3, #40]	@ 0x28
 8003c8c:	687b      	ldr	r3, [r7, #4]
 8003c8e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003c90:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8003c94:	2b00      	cmp	r3, #0
 8003c96:	d105      	bne.n	8003ca4 <HAL_ADC_PollForConversion+0x1e8>
 8003c98:	687b      	ldr	r3, [r7, #4]
 8003c9a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003c9c:	f043 0201 	orr.w	r2, r3, #1
 8003ca0:	687b      	ldr	r3, [r7, #4]
 8003ca2:	629a      	str	r2, [r3, #40]	@ 0x28
 8003ca4:	2300      	movs	r3, #0
 8003ca6:	4618      	mov	r0, r3
 8003ca8:	371c      	adds	r7, #28
 8003caa:	46bd      	mov	sp, r7
 8003cac:	bd90      	pop	{r4, r7, pc}
 8003cae:	bf00      	nop
 8003cb0:	20000008 	.word	0x20000008
 8003cb4:	24924924 	.word	0x24924924
 8003cb8:	00924924 	.word	0x00924924
 8003cbc:	12492492 	.word	0x12492492
 8003cc0:	00492492 	.word	0x00492492
 8003cc4:	00249249 	.word	0x00249249

08003cc8 <HAL_ADC_GetValue>:
 8003cc8:	b480      	push	{r7}
 8003cca:	b083      	sub	sp, #12
 8003ccc:	af00      	add	r7, sp, #0
 8003cce:	6078      	str	r0, [r7, #4]
 8003cd0:	687b      	ldr	r3, [r7, #4]
 8003cd2:	681b      	ldr	r3, [r3, #0]
 8003cd4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003cd6:	4618      	mov	r0, r3
 8003cd8:	370c      	adds	r7, #12
 8003cda:	46bd      	mov	sp, r7
 8003cdc:	bc80      	pop	{r7}
 8003cde:	4770      	bx	lr

08003ce0 <HAL_ADC_ConfigChannel>:
 8003ce0:	b480      	push	{r7}
 8003ce2:	b085      	sub	sp, #20
 8003ce4:	af00      	add	r7, sp, #0
 8003ce6:	6078      	str	r0, [r7, #4]
 8003ce8:	6039      	str	r1, [r7, #0]
 8003cea:	2300      	movs	r3, #0
 8003cec:	73fb      	strb	r3, [r7, #15]
 8003cee:	2300      	movs	r3, #0
 8003cf0:	60bb      	str	r3, [r7, #8]
 8003cf2:	687b      	ldr	r3, [r7, #4]
 8003cf4:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8003cf8:	2b01      	cmp	r3, #1
 8003cfa:	d101      	bne.n	8003d00 <HAL_ADC_ConfigChannel+0x20>
 8003cfc:	2302      	movs	r3, #2
 8003cfe:	e0dc      	b.n	8003eba <HAL_ADC_ConfigChannel+0x1da>
 8003d00:	687b      	ldr	r3, [r7, #4]
 8003d02:	2201      	movs	r2, #1
 8003d04:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8003d08:	683b      	ldr	r3, [r7, #0]
 8003d0a:	685b      	ldr	r3, [r3, #4]
 8003d0c:	2b06      	cmp	r3, #6
 8003d0e:	d81c      	bhi.n	8003d4a <HAL_ADC_ConfigChannel+0x6a>
 8003d10:	687b      	ldr	r3, [r7, #4]
 8003d12:	681b      	ldr	r3, [r3, #0]
 8003d14:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8003d16:	683b      	ldr	r3, [r7, #0]
 8003d18:	685a      	ldr	r2, [r3, #4]
 8003d1a:	4613      	mov	r3, r2
 8003d1c:	009b      	lsls	r3, r3, #2
 8003d1e:	4413      	add	r3, r2
 8003d20:	3b05      	subs	r3, #5
 8003d22:	221f      	movs	r2, #31
 8003d24:	fa02 f303 	lsl.w	r3, r2, r3
 8003d28:	43db      	mvns	r3, r3
 8003d2a:	4019      	ands	r1, r3
 8003d2c:	683b      	ldr	r3, [r7, #0]
 8003d2e:	6818      	ldr	r0, [r3, #0]
 8003d30:	683b      	ldr	r3, [r7, #0]
 8003d32:	685a      	ldr	r2, [r3, #4]
 8003d34:	4613      	mov	r3, r2
 8003d36:	009b      	lsls	r3, r3, #2
 8003d38:	4413      	add	r3, r2
 8003d3a:	3b05      	subs	r3, #5
 8003d3c:	fa00 f203 	lsl.w	r2, r0, r3
 8003d40:	687b      	ldr	r3, [r7, #4]
 8003d42:	681b      	ldr	r3, [r3, #0]
 8003d44:	430a      	orrs	r2, r1
 8003d46:	635a      	str	r2, [r3, #52]	@ 0x34
 8003d48:	e03c      	b.n	8003dc4 <HAL_ADC_ConfigChannel+0xe4>
 8003d4a:	683b      	ldr	r3, [r7, #0]
 8003d4c:	685b      	ldr	r3, [r3, #4]
 8003d4e:	2b0c      	cmp	r3, #12
 8003d50:	d81c      	bhi.n	8003d8c <HAL_ADC_ConfigChannel+0xac>
 8003d52:	687b      	ldr	r3, [r7, #4]
 8003d54:	681b      	ldr	r3, [r3, #0]
 8003d56:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8003d58:	683b      	ldr	r3, [r7, #0]
 8003d5a:	685a      	ldr	r2, [r3, #4]
 8003d5c:	4613      	mov	r3, r2
 8003d5e:	009b      	lsls	r3, r3, #2
 8003d60:	4413      	add	r3, r2
 8003d62:	3b23      	subs	r3, #35	@ 0x23
 8003d64:	221f      	movs	r2, #31
 8003d66:	fa02 f303 	lsl.w	r3, r2, r3
 8003d6a:	43db      	mvns	r3, r3
 8003d6c:	4019      	ands	r1, r3
 8003d6e:	683b      	ldr	r3, [r7, #0]
 8003d70:	6818      	ldr	r0, [r3, #0]
 8003d72:	683b      	ldr	r3, [r7, #0]
 8003d74:	685a      	ldr	r2, [r3, #4]
 8003d76:	4613      	mov	r3, r2
 8003d78:	009b      	lsls	r3, r3, #2
 8003d7a:	4413      	add	r3, r2
 8003d7c:	3b23      	subs	r3, #35	@ 0x23
 8003d7e:	fa00 f203 	lsl.w	r2, r0, r3
 8003d82:	687b      	ldr	r3, [r7, #4]
 8003d84:	681b      	ldr	r3, [r3, #0]
 8003d86:	430a      	orrs	r2, r1
 8003d88:	631a      	str	r2, [r3, #48]	@ 0x30
 8003d8a:	e01b      	b.n	8003dc4 <HAL_ADC_ConfigChannel+0xe4>
 8003d8c:	687b      	ldr	r3, [r7, #4]
 8003d8e:	681b      	ldr	r3, [r3, #0]
 8003d90:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8003d92:	683b      	ldr	r3, [r7, #0]
 8003d94:	685a      	ldr	r2, [r3, #4]
 8003d96:	4613      	mov	r3, r2
 8003d98:	009b      	lsls	r3, r3, #2
 8003d9a:	4413      	add	r3, r2
 8003d9c:	3b41      	subs	r3, #65	@ 0x41
 8003d9e:	221f      	movs	r2, #31
 8003da0:	fa02 f303 	lsl.w	r3, r2, r3
 8003da4:	43db      	mvns	r3, r3
 8003da6:	4019      	ands	r1, r3
 8003da8:	683b      	ldr	r3, [r7, #0]
 8003daa:	6818      	ldr	r0, [r3, #0]
 8003dac:	683b      	ldr	r3, [r7, #0]
 8003dae:	685a      	ldr	r2, [r3, #4]
 8003db0:	4613      	mov	r3, r2
 8003db2:	009b      	lsls	r3, r3, #2
 8003db4:	4413      	add	r3, r2
 8003db6:	3b41      	subs	r3, #65	@ 0x41
 8003db8:	fa00 f203 	lsl.w	r2, r0, r3
 8003dbc:	687b      	ldr	r3, [r7, #4]
 8003dbe:	681b      	ldr	r3, [r3, #0]
 8003dc0:	430a      	orrs	r2, r1
 8003dc2:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003dc4:	683b      	ldr	r3, [r7, #0]
 8003dc6:	681b      	ldr	r3, [r3, #0]
 8003dc8:	2b09      	cmp	r3, #9
 8003dca:	d91c      	bls.n	8003e06 <HAL_ADC_ConfigChannel+0x126>
 8003dcc:	687b      	ldr	r3, [r7, #4]
 8003dce:	681b      	ldr	r3, [r3, #0]
 8003dd0:	68d9      	ldr	r1, [r3, #12]
 8003dd2:	683b      	ldr	r3, [r7, #0]
 8003dd4:	681a      	ldr	r2, [r3, #0]
 8003dd6:	4613      	mov	r3, r2
 8003dd8:	005b      	lsls	r3, r3, #1
 8003dda:	4413      	add	r3, r2
 8003ddc:	3b1e      	subs	r3, #30
 8003dde:	2207      	movs	r2, #7
 8003de0:	fa02 f303 	lsl.w	r3, r2, r3
 8003de4:	43db      	mvns	r3, r3
 8003de6:	4019      	ands	r1, r3
 8003de8:	683b      	ldr	r3, [r7, #0]
 8003dea:	6898      	ldr	r0, [r3, #8]
 8003dec:	683b      	ldr	r3, [r7, #0]
 8003dee:	681a      	ldr	r2, [r3, #0]
 8003df0:	4613      	mov	r3, r2
 8003df2:	005b      	lsls	r3, r3, #1
 8003df4:	4413      	add	r3, r2
 8003df6:	3b1e      	subs	r3, #30
 8003df8:	fa00 f203 	lsl.w	r2, r0, r3
 8003dfc:	687b      	ldr	r3, [r7, #4]
 8003dfe:	681b      	ldr	r3, [r3, #0]
 8003e00:	430a      	orrs	r2, r1
 8003e02:	60da      	str	r2, [r3, #12]
 8003e04:	e019      	b.n	8003e3a <HAL_ADC_ConfigChannel+0x15a>
 8003e06:	687b      	ldr	r3, [r7, #4]
 8003e08:	681b      	ldr	r3, [r3, #0]
 8003e0a:	6919      	ldr	r1, [r3, #16]
 8003e0c:	683b      	ldr	r3, [r7, #0]
 8003e0e:	681a      	ldr	r2, [r3, #0]
 8003e10:	4613      	mov	r3, r2
 8003e12:	005b      	lsls	r3, r3, #1
 8003e14:	4413      	add	r3, r2
 8003e16:	2207      	movs	r2, #7
 8003e18:	fa02 f303 	lsl.w	r3, r2, r3
 8003e1c:	43db      	mvns	r3, r3
 8003e1e:	4019      	ands	r1, r3
 8003e20:	683b      	ldr	r3, [r7, #0]
 8003e22:	6898      	ldr	r0, [r3, #8]
 8003e24:	683b      	ldr	r3, [r7, #0]
 8003e26:	681a      	ldr	r2, [r3, #0]
 8003e28:	4613      	mov	r3, r2
 8003e2a:	005b      	lsls	r3, r3, #1
 8003e2c:	4413      	add	r3, r2
 8003e2e:	fa00 f203 	lsl.w	r2, r0, r3
 8003e32:	687b      	ldr	r3, [r7, #4]
 8003e34:	681b      	ldr	r3, [r3, #0]
 8003e36:	430a      	orrs	r2, r1
 8003e38:	611a      	str	r2, [r3, #16]
 8003e3a:	683b      	ldr	r3, [r7, #0]
 8003e3c:	681b      	ldr	r3, [r3, #0]
 8003e3e:	2b10      	cmp	r3, #16
 8003e40:	d003      	beq.n	8003e4a <HAL_ADC_ConfigChannel+0x16a>
 8003e42:	683b      	ldr	r3, [r7, #0]
 8003e44:	681b      	ldr	r3, [r3, #0]
 8003e46:	2b11      	cmp	r3, #17
 8003e48:	d132      	bne.n	8003eb0 <HAL_ADC_ConfigChannel+0x1d0>
 8003e4a:	687b      	ldr	r3, [r7, #4]
 8003e4c:	681b      	ldr	r3, [r3, #0]
 8003e4e:	4a1d      	ldr	r2, [pc, #116]	@ (8003ec4 <HAL_ADC_ConfigChannel+0x1e4>)
 8003e50:	4293      	cmp	r3, r2
 8003e52:	d125      	bne.n	8003ea0 <HAL_ADC_ConfigChannel+0x1c0>
 8003e54:	687b      	ldr	r3, [r7, #4]
 8003e56:	681b      	ldr	r3, [r3, #0]
 8003e58:	689b      	ldr	r3, [r3, #8]
 8003e5a:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8003e5e:	2b00      	cmp	r3, #0
 8003e60:	d126      	bne.n	8003eb0 <HAL_ADC_ConfigChannel+0x1d0>
 8003e62:	687b      	ldr	r3, [r7, #4]
 8003e64:	681b      	ldr	r3, [r3, #0]
 8003e66:	689a      	ldr	r2, [r3, #8]
 8003e68:	687b      	ldr	r3, [r7, #4]
 8003e6a:	681b      	ldr	r3, [r3, #0]
 8003e6c:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8003e70:	609a      	str	r2, [r3, #8]
 8003e72:	683b      	ldr	r3, [r7, #0]
 8003e74:	681b      	ldr	r3, [r3, #0]
 8003e76:	2b10      	cmp	r3, #16
 8003e78:	d11a      	bne.n	8003eb0 <HAL_ADC_ConfigChannel+0x1d0>
 8003e7a:	4b13      	ldr	r3, [pc, #76]	@ (8003ec8 <HAL_ADC_ConfigChannel+0x1e8>)
 8003e7c:	681b      	ldr	r3, [r3, #0]
 8003e7e:	4a13      	ldr	r2, [pc, #76]	@ (8003ecc <HAL_ADC_ConfigChannel+0x1ec>)
 8003e80:	fba2 2303 	umull	r2, r3, r2, r3
 8003e84:	0c9a      	lsrs	r2, r3, #18
 8003e86:	4613      	mov	r3, r2
 8003e88:	009b      	lsls	r3, r3, #2
 8003e8a:	4413      	add	r3, r2
 8003e8c:	005b      	lsls	r3, r3, #1
 8003e8e:	60bb      	str	r3, [r7, #8]
 8003e90:	e002      	b.n	8003e98 <HAL_ADC_ConfigChannel+0x1b8>
 8003e92:	68bb      	ldr	r3, [r7, #8]
 8003e94:	3b01      	subs	r3, #1
 8003e96:	60bb      	str	r3, [r7, #8]
 8003e98:	68bb      	ldr	r3, [r7, #8]
 8003e9a:	2b00      	cmp	r3, #0
 8003e9c:	d1f9      	bne.n	8003e92 <HAL_ADC_ConfigChannel+0x1b2>
 8003e9e:	e007      	b.n	8003eb0 <HAL_ADC_ConfigChannel+0x1d0>
 8003ea0:	687b      	ldr	r3, [r7, #4]
 8003ea2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003ea4:	f043 0220 	orr.w	r2, r3, #32
 8003ea8:	687b      	ldr	r3, [r7, #4]
 8003eaa:	629a      	str	r2, [r3, #40]	@ 0x28
 8003eac:	2301      	movs	r3, #1
 8003eae:	73fb      	strb	r3, [r7, #15]
 8003eb0:	687b      	ldr	r3, [r7, #4]
 8003eb2:	2200      	movs	r2, #0
 8003eb4:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8003eb8:	7bfb      	ldrb	r3, [r7, #15]
 8003eba:	4618      	mov	r0, r3
 8003ebc:	3714      	adds	r7, #20
 8003ebe:	46bd      	mov	sp, r7
 8003ec0:	bc80      	pop	{r7}
 8003ec2:	4770      	bx	lr
 8003ec4:	40012400 	.word	0x40012400
 8003ec8:	20000008 	.word	0x20000008
 8003ecc:	431bde83 	.word	0x431bde83

08003ed0 <ADC_Enable>:
 8003ed0:	b580      	push	{r7, lr}
 8003ed2:	b084      	sub	sp, #16
 8003ed4:	af00      	add	r7, sp, #0
 8003ed6:	6078      	str	r0, [r7, #4]
 8003ed8:	2300      	movs	r3, #0
 8003eda:	60fb      	str	r3, [r7, #12]
 8003edc:	2300      	movs	r3, #0
 8003ede:	60bb      	str	r3, [r7, #8]
 8003ee0:	687b      	ldr	r3, [r7, #4]
 8003ee2:	681b      	ldr	r3, [r3, #0]
 8003ee4:	689b      	ldr	r3, [r3, #8]
 8003ee6:	f003 0301 	and.w	r3, r3, #1
 8003eea:	2b01      	cmp	r3, #1
 8003eec:	d040      	beq.n	8003f70 <ADC_Enable+0xa0>
 8003eee:	687b      	ldr	r3, [r7, #4]
 8003ef0:	681b      	ldr	r3, [r3, #0]
 8003ef2:	689a      	ldr	r2, [r3, #8]
 8003ef4:	687b      	ldr	r3, [r7, #4]
 8003ef6:	681b      	ldr	r3, [r3, #0]
 8003ef8:	f042 0201 	orr.w	r2, r2, #1
 8003efc:	609a      	str	r2, [r3, #8]
 8003efe:	4b1f      	ldr	r3, [pc, #124]	@ (8003f7c <ADC_Enable+0xac>)
 8003f00:	681b      	ldr	r3, [r3, #0]
 8003f02:	4a1f      	ldr	r2, [pc, #124]	@ (8003f80 <ADC_Enable+0xb0>)
 8003f04:	fba2 2303 	umull	r2, r3, r2, r3
 8003f08:	0c9b      	lsrs	r3, r3, #18
 8003f0a:	60bb      	str	r3, [r7, #8]
 8003f0c:	e002      	b.n	8003f14 <ADC_Enable+0x44>
 8003f0e:	68bb      	ldr	r3, [r7, #8]
 8003f10:	3b01      	subs	r3, #1
 8003f12:	60bb      	str	r3, [r7, #8]
 8003f14:	68bb      	ldr	r3, [r7, #8]
 8003f16:	2b00      	cmp	r3, #0
 8003f18:	d1f9      	bne.n	8003f0e <ADC_Enable+0x3e>
 8003f1a:	f7ff fbef 	bl	80036fc <HAL_GetTick>
 8003f1e:	60f8      	str	r0, [r7, #12]
 8003f20:	e01f      	b.n	8003f62 <ADC_Enable+0x92>
 8003f22:	f7ff fbeb 	bl	80036fc <HAL_GetTick>
 8003f26:	4602      	mov	r2, r0
 8003f28:	68fb      	ldr	r3, [r7, #12]
 8003f2a:	1ad3      	subs	r3, r2, r3
 8003f2c:	2b02      	cmp	r3, #2
 8003f2e:	d918      	bls.n	8003f62 <ADC_Enable+0x92>
 8003f30:	687b      	ldr	r3, [r7, #4]
 8003f32:	681b      	ldr	r3, [r3, #0]
 8003f34:	689b      	ldr	r3, [r3, #8]
 8003f36:	f003 0301 	and.w	r3, r3, #1
 8003f3a:	2b01      	cmp	r3, #1
 8003f3c:	d011      	beq.n	8003f62 <ADC_Enable+0x92>
 8003f3e:	687b      	ldr	r3, [r7, #4]
 8003f40:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003f42:	f043 0210 	orr.w	r2, r3, #16
 8003f46:	687b      	ldr	r3, [r7, #4]
 8003f48:	629a      	str	r2, [r3, #40]	@ 0x28
 8003f4a:	687b      	ldr	r3, [r7, #4]
 8003f4c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003f4e:	f043 0201 	orr.w	r2, r3, #1
 8003f52:	687b      	ldr	r3, [r7, #4]
 8003f54:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003f56:	687b      	ldr	r3, [r7, #4]
 8003f58:	2200      	movs	r2, #0
 8003f5a:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8003f5e:	2301      	movs	r3, #1
 8003f60:	e007      	b.n	8003f72 <ADC_Enable+0xa2>
 8003f62:	687b      	ldr	r3, [r7, #4]
 8003f64:	681b      	ldr	r3, [r3, #0]
 8003f66:	689b      	ldr	r3, [r3, #8]
 8003f68:	f003 0301 	and.w	r3, r3, #1
 8003f6c:	2b01      	cmp	r3, #1
 8003f6e:	d1d8      	bne.n	8003f22 <ADC_Enable+0x52>
 8003f70:	2300      	movs	r3, #0
 8003f72:	4618      	mov	r0, r3
 8003f74:	3710      	adds	r7, #16
 8003f76:	46bd      	mov	sp, r7
 8003f78:	bd80      	pop	{r7, pc}
 8003f7a:	bf00      	nop
 8003f7c:	20000008 	.word	0x20000008
 8003f80:	431bde83 	.word	0x431bde83

08003f84 <ADC_ConversionStop_Disable>:
 8003f84:	b580      	push	{r7, lr}
 8003f86:	b084      	sub	sp, #16
 8003f88:	af00      	add	r7, sp, #0
 8003f8a:	6078      	str	r0, [r7, #4]
 8003f8c:	2300      	movs	r3, #0
 8003f8e:	60fb      	str	r3, [r7, #12]
 8003f90:	687b      	ldr	r3, [r7, #4]
 8003f92:	681b      	ldr	r3, [r3, #0]
 8003f94:	689b      	ldr	r3, [r3, #8]
 8003f96:	f003 0301 	and.w	r3, r3, #1
 8003f9a:	2b01      	cmp	r3, #1
 8003f9c:	d12e      	bne.n	8003ffc <ADC_ConversionStop_Disable+0x78>
 8003f9e:	687b      	ldr	r3, [r7, #4]
 8003fa0:	681b      	ldr	r3, [r3, #0]
 8003fa2:	689a      	ldr	r2, [r3, #8]
 8003fa4:	687b      	ldr	r3, [r7, #4]
 8003fa6:	681b      	ldr	r3, [r3, #0]
 8003fa8:	f022 0201 	bic.w	r2, r2, #1
 8003fac:	609a      	str	r2, [r3, #8]
 8003fae:	f7ff fba5 	bl	80036fc <HAL_GetTick>
 8003fb2:	60f8      	str	r0, [r7, #12]
 8003fb4:	e01b      	b.n	8003fee <ADC_ConversionStop_Disable+0x6a>
 8003fb6:	f7ff fba1 	bl	80036fc <HAL_GetTick>
 8003fba:	4602      	mov	r2, r0
 8003fbc:	68fb      	ldr	r3, [r7, #12]
 8003fbe:	1ad3      	subs	r3, r2, r3
 8003fc0:	2b02      	cmp	r3, #2
 8003fc2:	d914      	bls.n	8003fee <ADC_ConversionStop_Disable+0x6a>
 8003fc4:	687b      	ldr	r3, [r7, #4]
 8003fc6:	681b      	ldr	r3, [r3, #0]
 8003fc8:	689b      	ldr	r3, [r3, #8]
 8003fca:	f003 0301 	and.w	r3, r3, #1
 8003fce:	2b01      	cmp	r3, #1
 8003fd0:	d10d      	bne.n	8003fee <ADC_ConversionStop_Disable+0x6a>
 8003fd2:	687b      	ldr	r3, [r7, #4]
 8003fd4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003fd6:	f043 0210 	orr.w	r2, r3, #16
 8003fda:	687b      	ldr	r3, [r7, #4]
 8003fdc:	629a      	str	r2, [r3, #40]	@ 0x28
 8003fde:	687b      	ldr	r3, [r7, #4]
 8003fe0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003fe2:	f043 0201 	orr.w	r2, r3, #1
 8003fe6:	687b      	ldr	r3, [r7, #4]
 8003fe8:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003fea:	2301      	movs	r3, #1
 8003fec:	e007      	b.n	8003ffe <ADC_ConversionStop_Disable+0x7a>
 8003fee:	687b      	ldr	r3, [r7, #4]
 8003ff0:	681b      	ldr	r3, [r3, #0]
 8003ff2:	689b      	ldr	r3, [r3, #8]
 8003ff4:	f003 0301 	and.w	r3, r3, #1
 8003ff8:	2b01      	cmp	r3, #1
 8003ffa:	d0dc      	beq.n	8003fb6 <ADC_ConversionStop_Disable+0x32>
 8003ffc:	2300      	movs	r3, #0
 8003ffe:	4618      	mov	r0, r3
 8004000:	3710      	adds	r7, #16
 8004002:	46bd      	mov	sp, r7
 8004004:	bd80      	pop	{r7, pc}
	...

08004008 <HAL_ADCEx_Calibration_Start>:
 8004008:	b590      	push	{r4, r7, lr}
 800400a:	b087      	sub	sp, #28
 800400c:	af00      	add	r7, sp, #0
 800400e:	6078      	str	r0, [r7, #4]
 8004010:	2300      	movs	r3, #0
 8004012:	75fb      	strb	r3, [r7, #23]
 8004014:	2300      	movs	r3, #0
 8004016:	60fb      	str	r3, [r7, #12]
 8004018:	687b      	ldr	r3, [r7, #4]
 800401a:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 800401e:	2b01      	cmp	r3, #1
 8004020:	d101      	bne.n	8004026 <HAL_ADCEx_Calibration_Start+0x1e>
 8004022:	2302      	movs	r3, #2
 8004024:	e097      	b.n	8004156 <HAL_ADCEx_Calibration_Start+0x14e>
 8004026:	687b      	ldr	r3, [r7, #4]
 8004028:	2201      	movs	r2, #1
 800402a:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 800402e:	6878      	ldr	r0, [r7, #4]
 8004030:	f7ff ffa8 	bl	8003f84 <ADC_ConversionStop_Disable>
 8004034:	4603      	mov	r3, r0
 8004036:	75fb      	strb	r3, [r7, #23]
 8004038:	6878      	ldr	r0, [r7, #4]
 800403a:	f7ff ff49 	bl	8003ed0 <ADC_Enable>
 800403e:	4603      	mov	r3, r0
 8004040:	75fb      	strb	r3, [r7, #23]
 8004042:	7dfb      	ldrb	r3, [r7, #23]
 8004044:	2b00      	cmp	r3, #0
 8004046:	f040 8081 	bne.w	800414c <HAL_ADCEx_Calibration_Start+0x144>
 800404a:	687b      	ldr	r3, [r7, #4]
 800404c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800404e:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8004052:	f023 0302 	bic.w	r3, r3, #2
 8004056:	f043 0202 	orr.w	r2, r3, #2
 800405a:	687b      	ldr	r3, [r7, #4]
 800405c:	629a      	str	r2, [r3, #40]	@ 0x28
 800405e:	4b40      	ldr	r3, [pc, #256]	@ (8004160 <HAL_ADCEx_Calibration_Start+0x158>)
 8004060:	681c      	ldr	r4, [r3, #0]
 8004062:	2002      	movs	r0, #2
 8004064:	f001 f8a6 	bl	80051b4 <HAL_RCCEx_GetPeriphCLKFreq>
 8004068:	4603      	mov	r3, r0
 800406a:	fbb4 f3f3 	udiv	r3, r4, r3
 800406e:	005b      	lsls	r3, r3, #1
 8004070:	60fb      	str	r3, [r7, #12]
 8004072:	e002      	b.n	800407a <HAL_ADCEx_Calibration_Start+0x72>
 8004074:	68fb      	ldr	r3, [r7, #12]
 8004076:	3b01      	subs	r3, #1
 8004078:	60fb      	str	r3, [r7, #12]
 800407a:	68fb      	ldr	r3, [r7, #12]
 800407c:	2b00      	cmp	r3, #0
 800407e:	d1f9      	bne.n	8004074 <HAL_ADCEx_Calibration_Start+0x6c>
 8004080:	687b      	ldr	r3, [r7, #4]
 8004082:	681b      	ldr	r3, [r3, #0]
 8004084:	689a      	ldr	r2, [r3, #8]
 8004086:	687b      	ldr	r3, [r7, #4]
 8004088:	681b      	ldr	r3, [r3, #0]
 800408a:	f042 0208 	orr.w	r2, r2, #8
 800408e:	609a      	str	r2, [r3, #8]
 8004090:	f7ff fb34 	bl	80036fc <HAL_GetTick>
 8004094:	6138      	str	r0, [r7, #16]
 8004096:	e01b      	b.n	80040d0 <HAL_ADCEx_Calibration_Start+0xc8>
 8004098:	f7ff fb30 	bl	80036fc <HAL_GetTick>
 800409c:	4602      	mov	r2, r0
 800409e:	693b      	ldr	r3, [r7, #16]
 80040a0:	1ad3      	subs	r3, r2, r3
 80040a2:	2b0a      	cmp	r3, #10
 80040a4:	d914      	bls.n	80040d0 <HAL_ADCEx_Calibration_Start+0xc8>
 80040a6:	687b      	ldr	r3, [r7, #4]
 80040a8:	681b      	ldr	r3, [r3, #0]
 80040aa:	689b      	ldr	r3, [r3, #8]
 80040ac:	f003 0308 	and.w	r3, r3, #8
 80040b0:	2b00      	cmp	r3, #0
 80040b2:	d00d      	beq.n	80040d0 <HAL_ADCEx_Calibration_Start+0xc8>
 80040b4:	687b      	ldr	r3, [r7, #4]
 80040b6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80040b8:	f023 0312 	bic.w	r3, r3, #18
 80040bc:	f043 0210 	orr.w	r2, r3, #16
 80040c0:	687b      	ldr	r3, [r7, #4]
 80040c2:	629a      	str	r2, [r3, #40]	@ 0x28
 80040c4:	687b      	ldr	r3, [r7, #4]
 80040c6:	2200      	movs	r2, #0
 80040c8:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80040cc:	2301      	movs	r3, #1
 80040ce:	e042      	b.n	8004156 <HAL_ADCEx_Calibration_Start+0x14e>
 80040d0:	687b      	ldr	r3, [r7, #4]
 80040d2:	681b      	ldr	r3, [r3, #0]
 80040d4:	689b      	ldr	r3, [r3, #8]
 80040d6:	f003 0308 	and.w	r3, r3, #8
 80040da:	2b00      	cmp	r3, #0
 80040dc:	d1dc      	bne.n	8004098 <HAL_ADCEx_Calibration_Start+0x90>
 80040de:	687b      	ldr	r3, [r7, #4]
 80040e0:	681b      	ldr	r3, [r3, #0]
 80040e2:	689a      	ldr	r2, [r3, #8]
 80040e4:	687b      	ldr	r3, [r7, #4]
 80040e6:	681b      	ldr	r3, [r3, #0]
 80040e8:	f042 0204 	orr.w	r2, r2, #4
 80040ec:	609a      	str	r2, [r3, #8]
 80040ee:	f7ff fb05 	bl	80036fc <HAL_GetTick>
 80040f2:	6138      	str	r0, [r7, #16]
 80040f4:	e01b      	b.n	800412e <HAL_ADCEx_Calibration_Start+0x126>
 80040f6:	f7ff fb01 	bl	80036fc <HAL_GetTick>
 80040fa:	4602      	mov	r2, r0
 80040fc:	693b      	ldr	r3, [r7, #16]
 80040fe:	1ad3      	subs	r3, r2, r3
 8004100:	2b0a      	cmp	r3, #10
 8004102:	d914      	bls.n	800412e <HAL_ADCEx_Calibration_Start+0x126>
 8004104:	687b      	ldr	r3, [r7, #4]
 8004106:	681b      	ldr	r3, [r3, #0]
 8004108:	689b      	ldr	r3, [r3, #8]
 800410a:	f003 0304 	and.w	r3, r3, #4
 800410e:	2b00      	cmp	r3, #0
 8004110:	d00d      	beq.n	800412e <HAL_ADCEx_Calibration_Start+0x126>
 8004112:	687b      	ldr	r3, [r7, #4]
 8004114:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004116:	f023 0312 	bic.w	r3, r3, #18
 800411a:	f043 0210 	orr.w	r2, r3, #16
 800411e:	687b      	ldr	r3, [r7, #4]
 8004120:	629a      	str	r2, [r3, #40]	@ 0x28
 8004122:	687b      	ldr	r3, [r7, #4]
 8004124:	2200      	movs	r2, #0
 8004126:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 800412a:	2301      	movs	r3, #1
 800412c:	e013      	b.n	8004156 <HAL_ADCEx_Calibration_Start+0x14e>
 800412e:	687b      	ldr	r3, [r7, #4]
 8004130:	681b      	ldr	r3, [r3, #0]
 8004132:	689b      	ldr	r3, [r3, #8]
 8004134:	f003 0304 	and.w	r3, r3, #4
 8004138:	2b00      	cmp	r3, #0
 800413a:	d1dc      	bne.n	80040f6 <HAL_ADCEx_Calibration_Start+0xee>
 800413c:	687b      	ldr	r3, [r7, #4]
 800413e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004140:	f023 0303 	bic.w	r3, r3, #3
 8004144:	f043 0201 	orr.w	r2, r3, #1
 8004148:	687b      	ldr	r3, [r7, #4]
 800414a:	629a      	str	r2, [r3, #40]	@ 0x28
 800414c:	687b      	ldr	r3, [r7, #4]
 800414e:	2200      	movs	r2, #0
 8004150:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8004154:	7dfb      	ldrb	r3, [r7, #23]
 8004156:	4618      	mov	r0, r3
 8004158:	371c      	adds	r7, #28
 800415a:	46bd      	mov	sp, r7
 800415c:	bd90      	pop	{r4, r7, pc}
 800415e:	bf00      	nop
 8004160:	20000008 	.word	0x20000008

08004164 <__NVIC_SetPriorityGrouping>:
 8004164:	b480      	push	{r7}
 8004166:	b085      	sub	sp, #20
 8004168:	af00      	add	r7, sp, #0
 800416a:	6078      	str	r0, [r7, #4]
 800416c:	687b      	ldr	r3, [r7, #4]
 800416e:	f003 0307 	and.w	r3, r3, #7
 8004172:	60fb      	str	r3, [r7, #12]
 8004174:	4b0c      	ldr	r3, [pc, #48]	@ (80041a8 <__NVIC_SetPriorityGrouping+0x44>)
 8004176:	68db      	ldr	r3, [r3, #12]
 8004178:	60bb      	str	r3, [r7, #8]
 800417a:	68ba      	ldr	r2, [r7, #8]
 800417c:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8004180:	4013      	ands	r3, r2
 8004182:	60bb      	str	r3, [r7, #8]
 8004184:	68fb      	ldr	r3, [r7, #12]
 8004186:	021a      	lsls	r2, r3, #8
 8004188:	68bb      	ldr	r3, [r7, #8]
 800418a:	4313      	orrs	r3, r2
 800418c:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8004190:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8004194:	60bb      	str	r3, [r7, #8]
 8004196:	4a04      	ldr	r2, [pc, #16]	@ (80041a8 <__NVIC_SetPriorityGrouping+0x44>)
 8004198:	68bb      	ldr	r3, [r7, #8]
 800419a:	60d3      	str	r3, [r2, #12]
 800419c:	bf00      	nop
 800419e:	3714      	adds	r7, #20
 80041a0:	46bd      	mov	sp, r7
 80041a2:	bc80      	pop	{r7}
 80041a4:	4770      	bx	lr
 80041a6:	bf00      	nop
 80041a8:	e000ed00 	.word	0xe000ed00

080041ac <__NVIC_GetPriorityGrouping>:
 80041ac:	b480      	push	{r7}
 80041ae:	af00      	add	r7, sp, #0
 80041b0:	4b04      	ldr	r3, [pc, #16]	@ (80041c4 <__NVIC_GetPriorityGrouping+0x18>)
 80041b2:	68db      	ldr	r3, [r3, #12]
 80041b4:	0a1b      	lsrs	r3, r3, #8
 80041b6:	f003 0307 	and.w	r3, r3, #7
 80041ba:	4618      	mov	r0, r3
 80041bc:	46bd      	mov	sp, r7
 80041be:	bc80      	pop	{r7}
 80041c0:	4770      	bx	lr
 80041c2:	bf00      	nop
 80041c4:	e000ed00 	.word	0xe000ed00

080041c8 <__NVIC_EnableIRQ>:
 80041c8:	b480      	push	{r7}
 80041ca:	b083      	sub	sp, #12
 80041cc:	af00      	add	r7, sp, #0
 80041ce:	4603      	mov	r3, r0
 80041d0:	71fb      	strb	r3, [r7, #7]
 80041d2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80041d6:	2b00      	cmp	r3, #0
 80041d8:	db0b      	blt.n	80041f2 <__NVIC_EnableIRQ+0x2a>
 80041da:	79fb      	ldrb	r3, [r7, #7]
 80041dc:	f003 021f 	and.w	r2, r3, #31
 80041e0:	4906      	ldr	r1, [pc, #24]	@ (80041fc <__NVIC_EnableIRQ+0x34>)
 80041e2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80041e6:	095b      	lsrs	r3, r3, #5
 80041e8:	2001      	movs	r0, #1
 80041ea:	fa00 f202 	lsl.w	r2, r0, r2
 80041ee:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80041f2:	bf00      	nop
 80041f4:	370c      	adds	r7, #12
 80041f6:	46bd      	mov	sp, r7
 80041f8:	bc80      	pop	{r7}
 80041fa:	4770      	bx	lr
 80041fc:	e000e100 	.word	0xe000e100

08004200 <__NVIC_SetPriority>:
 8004200:	b480      	push	{r7}
 8004202:	b083      	sub	sp, #12
 8004204:	af00      	add	r7, sp, #0
 8004206:	4603      	mov	r3, r0
 8004208:	6039      	str	r1, [r7, #0]
 800420a:	71fb      	strb	r3, [r7, #7]
 800420c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004210:	2b00      	cmp	r3, #0
 8004212:	db0a      	blt.n	800422a <__NVIC_SetPriority+0x2a>
 8004214:	683b      	ldr	r3, [r7, #0]
 8004216:	b2da      	uxtb	r2, r3
 8004218:	490c      	ldr	r1, [pc, #48]	@ (800424c <__NVIC_SetPriority+0x4c>)
 800421a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800421e:	0112      	lsls	r2, r2, #4
 8004220:	b2d2      	uxtb	r2, r2
 8004222:	440b      	add	r3, r1
 8004224:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8004228:	e00a      	b.n	8004240 <__NVIC_SetPriority+0x40>
 800422a:	683b      	ldr	r3, [r7, #0]
 800422c:	b2da      	uxtb	r2, r3
 800422e:	4908      	ldr	r1, [pc, #32]	@ (8004250 <__NVIC_SetPriority+0x50>)
 8004230:	79fb      	ldrb	r3, [r7, #7]
 8004232:	f003 030f 	and.w	r3, r3, #15
 8004236:	3b04      	subs	r3, #4
 8004238:	0112      	lsls	r2, r2, #4
 800423a:	b2d2      	uxtb	r2, r2
 800423c:	440b      	add	r3, r1
 800423e:	761a      	strb	r2, [r3, #24]
 8004240:	bf00      	nop
 8004242:	370c      	adds	r7, #12
 8004244:	46bd      	mov	sp, r7
 8004246:	bc80      	pop	{r7}
 8004248:	4770      	bx	lr
 800424a:	bf00      	nop
 800424c:	e000e100 	.word	0xe000e100
 8004250:	e000ed00 	.word	0xe000ed00

08004254 <NVIC_EncodePriority>:
 8004254:	b480      	push	{r7}
 8004256:	b089      	sub	sp, #36	@ 0x24
 8004258:	af00      	add	r7, sp, #0
 800425a:	60f8      	str	r0, [r7, #12]
 800425c:	60b9      	str	r1, [r7, #8]
 800425e:	607a      	str	r2, [r7, #4]
 8004260:	68fb      	ldr	r3, [r7, #12]
 8004262:	f003 0307 	and.w	r3, r3, #7
 8004266:	61fb      	str	r3, [r7, #28]
 8004268:	69fb      	ldr	r3, [r7, #28]
 800426a:	f1c3 0307 	rsb	r3, r3, #7
 800426e:	2b04      	cmp	r3, #4
 8004270:	bf28      	it	cs
 8004272:	2304      	movcs	r3, #4
 8004274:	61bb      	str	r3, [r7, #24]
 8004276:	69fb      	ldr	r3, [r7, #28]
 8004278:	3304      	adds	r3, #4
 800427a:	2b06      	cmp	r3, #6
 800427c:	d902      	bls.n	8004284 <NVIC_EncodePriority+0x30>
 800427e:	69fb      	ldr	r3, [r7, #28]
 8004280:	3b03      	subs	r3, #3
 8004282:	e000      	b.n	8004286 <NVIC_EncodePriority+0x32>
 8004284:	2300      	movs	r3, #0
 8004286:	617b      	str	r3, [r7, #20]
 8004288:	f04f 32ff 	mov.w	r2, #4294967295
 800428c:	69bb      	ldr	r3, [r7, #24]
 800428e:	fa02 f303 	lsl.w	r3, r2, r3
 8004292:	43da      	mvns	r2, r3
 8004294:	68bb      	ldr	r3, [r7, #8]
 8004296:	401a      	ands	r2, r3
 8004298:	697b      	ldr	r3, [r7, #20]
 800429a:	409a      	lsls	r2, r3
 800429c:	f04f 31ff 	mov.w	r1, #4294967295
 80042a0:	697b      	ldr	r3, [r7, #20]
 80042a2:	fa01 f303 	lsl.w	r3, r1, r3
 80042a6:	43d9      	mvns	r1, r3
 80042a8:	687b      	ldr	r3, [r7, #4]
 80042aa:	400b      	ands	r3, r1
 80042ac:	4313      	orrs	r3, r2
 80042ae:	4618      	mov	r0, r3
 80042b0:	3724      	adds	r7, #36	@ 0x24
 80042b2:	46bd      	mov	sp, r7
 80042b4:	bc80      	pop	{r7}
 80042b6:	4770      	bx	lr

080042b8 <SysTick_Config>:
 80042b8:	b580      	push	{r7, lr}
 80042ba:	b082      	sub	sp, #8
 80042bc:	af00      	add	r7, sp, #0
 80042be:	6078      	str	r0, [r7, #4]
 80042c0:	687b      	ldr	r3, [r7, #4]
 80042c2:	3b01      	subs	r3, #1
 80042c4:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80042c8:	d301      	bcc.n	80042ce <SysTick_Config+0x16>
 80042ca:	2301      	movs	r3, #1
 80042cc:	e00f      	b.n	80042ee <SysTick_Config+0x36>
 80042ce:	4a0a      	ldr	r2, [pc, #40]	@ (80042f8 <SysTick_Config+0x40>)
 80042d0:	687b      	ldr	r3, [r7, #4]
 80042d2:	3b01      	subs	r3, #1
 80042d4:	6053      	str	r3, [r2, #4]
 80042d6:	210f      	movs	r1, #15
 80042d8:	f04f 30ff 	mov.w	r0, #4294967295
 80042dc:	f7ff ff90 	bl	8004200 <__NVIC_SetPriority>
 80042e0:	4b05      	ldr	r3, [pc, #20]	@ (80042f8 <SysTick_Config+0x40>)
 80042e2:	2200      	movs	r2, #0
 80042e4:	609a      	str	r2, [r3, #8]
 80042e6:	4b04      	ldr	r3, [pc, #16]	@ (80042f8 <SysTick_Config+0x40>)
 80042e8:	2207      	movs	r2, #7
 80042ea:	601a      	str	r2, [r3, #0]
 80042ec:	2300      	movs	r3, #0
 80042ee:	4618      	mov	r0, r3
 80042f0:	3708      	adds	r7, #8
 80042f2:	46bd      	mov	sp, r7
 80042f4:	bd80      	pop	{r7, pc}
 80042f6:	bf00      	nop
 80042f8:	e000e010 	.word	0xe000e010

080042fc <HAL_NVIC_SetPriorityGrouping>:
 80042fc:	b580      	push	{r7, lr}
 80042fe:	b082      	sub	sp, #8
 8004300:	af00      	add	r7, sp, #0
 8004302:	6078      	str	r0, [r7, #4]
 8004304:	6878      	ldr	r0, [r7, #4]
 8004306:	f7ff ff2d 	bl	8004164 <__NVIC_SetPriorityGrouping>
 800430a:	bf00      	nop
 800430c:	3708      	adds	r7, #8
 800430e:	46bd      	mov	sp, r7
 8004310:	bd80      	pop	{r7, pc}

08004312 <HAL_NVIC_SetPriority>:
 8004312:	b580      	push	{r7, lr}
 8004314:	b086      	sub	sp, #24
 8004316:	af00      	add	r7, sp, #0
 8004318:	4603      	mov	r3, r0
 800431a:	60b9      	str	r1, [r7, #8]
 800431c:	607a      	str	r2, [r7, #4]
 800431e:	73fb      	strb	r3, [r7, #15]
 8004320:	2300      	movs	r3, #0
 8004322:	617b      	str	r3, [r7, #20]
 8004324:	f7ff ff42 	bl	80041ac <__NVIC_GetPriorityGrouping>
 8004328:	6178      	str	r0, [r7, #20]
 800432a:	687a      	ldr	r2, [r7, #4]
 800432c:	68b9      	ldr	r1, [r7, #8]
 800432e:	6978      	ldr	r0, [r7, #20]
 8004330:	f7ff ff90 	bl	8004254 <NVIC_EncodePriority>
 8004334:	4602      	mov	r2, r0
 8004336:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800433a:	4611      	mov	r1, r2
 800433c:	4618      	mov	r0, r3
 800433e:	f7ff ff5f 	bl	8004200 <__NVIC_SetPriority>
 8004342:	bf00      	nop
 8004344:	3718      	adds	r7, #24
 8004346:	46bd      	mov	sp, r7
 8004348:	bd80      	pop	{r7, pc}

0800434a <HAL_NVIC_EnableIRQ>:
 800434a:	b580      	push	{r7, lr}
 800434c:	b082      	sub	sp, #8
 800434e:	af00      	add	r7, sp, #0
 8004350:	4603      	mov	r3, r0
 8004352:	71fb      	strb	r3, [r7, #7]
 8004354:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004358:	4618      	mov	r0, r3
 800435a:	f7ff ff35 	bl	80041c8 <__NVIC_EnableIRQ>
 800435e:	bf00      	nop
 8004360:	3708      	adds	r7, #8
 8004362:	46bd      	mov	sp, r7
 8004364:	bd80      	pop	{r7, pc}

08004366 <HAL_SYSTICK_Config>:
 8004366:	b580      	push	{r7, lr}
 8004368:	b082      	sub	sp, #8
 800436a:	af00      	add	r7, sp, #0
 800436c:	6078      	str	r0, [r7, #4]
 800436e:	6878      	ldr	r0, [r7, #4]
 8004370:	f7ff ffa2 	bl	80042b8 <SysTick_Config>
 8004374:	4603      	mov	r3, r0
 8004376:	4618      	mov	r0, r3
 8004378:	3708      	adds	r7, #8
 800437a:	46bd      	mov	sp, r7
 800437c:	bd80      	pop	{r7, pc}

0800437e <HAL_CRC_Init>:
 800437e:	b580      	push	{r7, lr}
 8004380:	b082      	sub	sp, #8
 8004382:	af00      	add	r7, sp, #0
 8004384:	6078      	str	r0, [r7, #4]
 8004386:	687b      	ldr	r3, [r7, #4]
 8004388:	2b00      	cmp	r3, #0
 800438a:	d101      	bne.n	8004390 <HAL_CRC_Init+0x12>
 800438c:	2301      	movs	r3, #1
 800438e:	e00e      	b.n	80043ae <HAL_CRC_Init+0x30>
 8004390:	687b      	ldr	r3, [r7, #4]
 8004392:	795b      	ldrb	r3, [r3, #5]
 8004394:	b2db      	uxtb	r3, r3
 8004396:	2b00      	cmp	r3, #0
 8004398:	d105      	bne.n	80043a6 <HAL_CRC_Init+0x28>
 800439a:	687b      	ldr	r3, [r7, #4]
 800439c:	2200      	movs	r2, #0
 800439e:	711a      	strb	r2, [r3, #4]
 80043a0:	6878      	ldr	r0, [r7, #4]
 80043a2:	f7fe ff9b 	bl	80032dc <HAL_CRC_MspInit>
 80043a6:	687b      	ldr	r3, [r7, #4]
 80043a8:	2201      	movs	r2, #1
 80043aa:	715a      	strb	r2, [r3, #5]
 80043ac:	2300      	movs	r3, #0
 80043ae:	4618      	mov	r0, r3
 80043b0:	3708      	adds	r7, #8
 80043b2:	46bd      	mov	sp, r7
 80043b4:	bd80      	pop	{r7, pc}

080043b6 <HAL_DMA_Abort>:
 80043b6:	b480      	push	{r7}
 80043b8:	b085      	sub	sp, #20
 80043ba:	af00      	add	r7, sp, #0
 80043bc:	6078      	str	r0, [r7, #4]
 80043be:	2300      	movs	r3, #0
 80043c0:	73fb      	strb	r3, [r7, #15]
 80043c2:	687b      	ldr	r3, [r7, #4]
 80043c4:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 80043c8:	b2db      	uxtb	r3, r3
 80043ca:	2b02      	cmp	r3, #2
 80043cc:	d008      	beq.n	80043e0 <HAL_DMA_Abort+0x2a>
 80043ce:	687b      	ldr	r3, [r7, #4]
 80043d0:	2204      	movs	r2, #4
 80043d2:	639a      	str	r2, [r3, #56]	@ 0x38
 80043d4:	687b      	ldr	r3, [r7, #4]
 80043d6:	2200      	movs	r2, #0
 80043d8:	f883 2020 	strb.w	r2, [r3, #32]
 80043dc:	2301      	movs	r3, #1
 80043de:	e020      	b.n	8004422 <HAL_DMA_Abort+0x6c>
 80043e0:	687b      	ldr	r3, [r7, #4]
 80043e2:	681b      	ldr	r3, [r3, #0]
 80043e4:	681a      	ldr	r2, [r3, #0]
 80043e6:	687b      	ldr	r3, [r7, #4]
 80043e8:	681b      	ldr	r3, [r3, #0]
 80043ea:	f022 020e 	bic.w	r2, r2, #14
 80043ee:	601a      	str	r2, [r3, #0]
 80043f0:	687b      	ldr	r3, [r7, #4]
 80043f2:	681b      	ldr	r3, [r3, #0]
 80043f4:	681a      	ldr	r2, [r3, #0]
 80043f6:	687b      	ldr	r3, [r7, #4]
 80043f8:	681b      	ldr	r3, [r3, #0]
 80043fa:	f022 0201 	bic.w	r2, r2, #1
 80043fe:	601a      	str	r2, [r3, #0]
 8004400:	687b      	ldr	r3, [r7, #4]
 8004402:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8004404:	687b      	ldr	r3, [r7, #4]
 8004406:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004408:	2101      	movs	r1, #1
 800440a:	fa01 f202 	lsl.w	r2, r1, r2
 800440e:	605a      	str	r2, [r3, #4]
 8004410:	687b      	ldr	r3, [r7, #4]
 8004412:	2201      	movs	r2, #1
 8004414:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 8004418:	687b      	ldr	r3, [r7, #4]
 800441a:	2200      	movs	r2, #0
 800441c:	f883 2020 	strb.w	r2, [r3, #32]
 8004420:	7bfb      	ldrb	r3, [r7, #15]
 8004422:	4618      	mov	r0, r3
 8004424:	3714      	adds	r7, #20
 8004426:	46bd      	mov	sp, r7
 8004428:	bc80      	pop	{r7}
 800442a:	4770      	bx	lr

0800442c <HAL_DMA_Abort_IT>:
 800442c:	b580      	push	{r7, lr}
 800442e:	b084      	sub	sp, #16
 8004430:	af00      	add	r7, sp, #0
 8004432:	6078      	str	r0, [r7, #4]
 8004434:	2300      	movs	r3, #0
 8004436:	73fb      	strb	r3, [r7, #15]
 8004438:	687b      	ldr	r3, [r7, #4]
 800443a:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 800443e:	b2db      	uxtb	r3, r3
 8004440:	2b02      	cmp	r3, #2
 8004442:	d005      	beq.n	8004450 <HAL_DMA_Abort_IT+0x24>
 8004444:	687b      	ldr	r3, [r7, #4]
 8004446:	2204      	movs	r2, #4
 8004448:	639a      	str	r2, [r3, #56]	@ 0x38
 800444a:	2301      	movs	r3, #1
 800444c:	73fb      	strb	r3, [r7, #15]
 800444e:	e051      	b.n	80044f4 <HAL_DMA_Abort_IT+0xc8>
 8004450:	687b      	ldr	r3, [r7, #4]
 8004452:	681b      	ldr	r3, [r3, #0]
 8004454:	681a      	ldr	r2, [r3, #0]
 8004456:	687b      	ldr	r3, [r7, #4]
 8004458:	681b      	ldr	r3, [r3, #0]
 800445a:	f022 020e 	bic.w	r2, r2, #14
 800445e:	601a      	str	r2, [r3, #0]
 8004460:	687b      	ldr	r3, [r7, #4]
 8004462:	681b      	ldr	r3, [r3, #0]
 8004464:	681a      	ldr	r2, [r3, #0]
 8004466:	687b      	ldr	r3, [r7, #4]
 8004468:	681b      	ldr	r3, [r3, #0]
 800446a:	f022 0201 	bic.w	r2, r2, #1
 800446e:	601a      	str	r2, [r3, #0]
 8004470:	687b      	ldr	r3, [r7, #4]
 8004472:	681b      	ldr	r3, [r3, #0]
 8004474:	4a22      	ldr	r2, [pc, #136]	@ (8004500 <HAL_DMA_Abort_IT+0xd4>)
 8004476:	4293      	cmp	r3, r2
 8004478:	d029      	beq.n	80044ce <HAL_DMA_Abort_IT+0xa2>
 800447a:	687b      	ldr	r3, [r7, #4]
 800447c:	681b      	ldr	r3, [r3, #0]
 800447e:	4a21      	ldr	r2, [pc, #132]	@ (8004504 <HAL_DMA_Abort_IT+0xd8>)
 8004480:	4293      	cmp	r3, r2
 8004482:	d022      	beq.n	80044ca <HAL_DMA_Abort_IT+0x9e>
 8004484:	687b      	ldr	r3, [r7, #4]
 8004486:	681b      	ldr	r3, [r3, #0]
 8004488:	4a1f      	ldr	r2, [pc, #124]	@ (8004508 <HAL_DMA_Abort_IT+0xdc>)
 800448a:	4293      	cmp	r3, r2
 800448c:	d01a      	beq.n	80044c4 <HAL_DMA_Abort_IT+0x98>
 800448e:	687b      	ldr	r3, [r7, #4]
 8004490:	681b      	ldr	r3, [r3, #0]
 8004492:	4a1e      	ldr	r2, [pc, #120]	@ (800450c <HAL_DMA_Abort_IT+0xe0>)
 8004494:	4293      	cmp	r3, r2
 8004496:	d012      	beq.n	80044be <HAL_DMA_Abort_IT+0x92>
 8004498:	687b      	ldr	r3, [r7, #4]
 800449a:	681b      	ldr	r3, [r3, #0]
 800449c:	4a1c      	ldr	r2, [pc, #112]	@ (8004510 <HAL_DMA_Abort_IT+0xe4>)
 800449e:	4293      	cmp	r3, r2
 80044a0:	d00a      	beq.n	80044b8 <HAL_DMA_Abort_IT+0x8c>
 80044a2:	687b      	ldr	r3, [r7, #4]
 80044a4:	681b      	ldr	r3, [r3, #0]
 80044a6:	4a1b      	ldr	r2, [pc, #108]	@ (8004514 <HAL_DMA_Abort_IT+0xe8>)
 80044a8:	4293      	cmp	r3, r2
 80044aa:	d102      	bne.n	80044b2 <HAL_DMA_Abort_IT+0x86>
 80044ac:	f44f 1380 	mov.w	r3, #1048576	@ 0x100000
 80044b0:	e00e      	b.n	80044d0 <HAL_DMA_Abort_IT+0xa4>
 80044b2:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 80044b6:	e00b      	b.n	80044d0 <HAL_DMA_Abort_IT+0xa4>
 80044b8:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80044bc:	e008      	b.n	80044d0 <HAL_DMA_Abort_IT+0xa4>
 80044be:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80044c2:	e005      	b.n	80044d0 <HAL_DMA_Abort_IT+0xa4>
 80044c4:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80044c8:	e002      	b.n	80044d0 <HAL_DMA_Abort_IT+0xa4>
 80044ca:	2310      	movs	r3, #16
 80044cc:	e000      	b.n	80044d0 <HAL_DMA_Abort_IT+0xa4>
 80044ce:	2301      	movs	r3, #1
 80044d0:	4a11      	ldr	r2, [pc, #68]	@ (8004518 <HAL_DMA_Abort_IT+0xec>)
 80044d2:	6053      	str	r3, [r2, #4]
 80044d4:	687b      	ldr	r3, [r7, #4]
 80044d6:	2201      	movs	r2, #1
 80044d8:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 80044dc:	687b      	ldr	r3, [r7, #4]
 80044de:	2200      	movs	r2, #0
 80044e0:	f883 2020 	strb.w	r2, [r3, #32]
 80044e4:	687b      	ldr	r3, [r7, #4]
 80044e6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80044e8:	2b00      	cmp	r3, #0
 80044ea:	d003      	beq.n	80044f4 <HAL_DMA_Abort_IT+0xc8>
 80044ec:	687b      	ldr	r3, [r7, #4]
 80044ee:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80044f0:	6878      	ldr	r0, [r7, #4]
 80044f2:	4798      	blx	r3
 80044f4:	7bfb      	ldrb	r3, [r7, #15]
 80044f6:	4618      	mov	r0, r3
 80044f8:	3710      	adds	r7, #16
 80044fa:	46bd      	mov	sp, r7
 80044fc:	bd80      	pop	{r7, pc}
 80044fe:	bf00      	nop
 8004500:	40020008 	.word	0x40020008
 8004504:	4002001c 	.word	0x4002001c
 8004508:	40020030 	.word	0x40020030
 800450c:	40020044 	.word	0x40020044
 8004510:	40020058 	.word	0x40020058
 8004514:	4002006c 	.word	0x4002006c
 8004518:	40020000 	.word	0x40020000

0800451c <HAL_GPIO_Init>:
 800451c:	b480      	push	{r7}
 800451e:	b08b      	sub	sp, #44	@ 0x2c
 8004520:	af00      	add	r7, sp, #0
 8004522:	6078      	str	r0, [r7, #4]
 8004524:	6039      	str	r1, [r7, #0]
 8004526:	2300      	movs	r3, #0
 8004528:	627b      	str	r3, [r7, #36]	@ 0x24
 800452a:	2300      	movs	r3, #0
 800452c:	623b      	str	r3, [r7, #32]
 800452e:	e169      	b.n	8004804 <HAL_GPIO_Init+0x2e8>
 8004530:	2201      	movs	r2, #1
 8004532:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004534:	fa02 f303 	lsl.w	r3, r2, r3
 8004538:	61fb      	str	r3, [r7, #28]
 800453a:	683b      	ldr	r3, [r7, #0]
 800453c:	681b      	ldr	r3, [r3, #0]
 800453e:	69fa      	ldr	r2, [r7, #28]
 8004540:	4013      	ands	r3, r2
 8004542:	61bb      	str	r3, [r7, #24]
 8004544:	69ba      	ldr	r2, [r7, #24]
 8004546:	69fb      	ldr	r3, [r7, #28]
 8004548:	429a      	cmp	r2, r3
 800454a:	f040 8158 	bne.w	80047fe <HAL_GPIO_Init+0x2e2>
 800454e:	683b      	ldr	r3, [r7, #0]
 8004550:	685b      	ldr	r3, [r3, #4]
 8004552:	4a9a      	ldr	r2, [pc, #616]	@ (80047bc <HAL_GPIO_Init+0x2a0>)
 8004554:	4293      	cmp	r3, r2
 8004556:	d05e      	beq.n	8004616 <HAL_GPIO_Init+0xfa>
 8004558:	4a98      	ldr	r2, [pc, #608]	@ (80047bc <HAL_GPIO_Init+0x2a0>)
 800455a:	4293      	cmp	r3, r2
 800455c:	d875      	bhi.n	800464a <HAL_GPIO_Init+0x12e>
 800455e:	4a98      	ldr	r2, [pc, #608]	@ (80047c0 <HAL_GPIO_Init+0x2a4>)
 8004560:	4293      	cmp	r3, r2
 8004562:	d058      	beq.n	8004616 <HAL_GPIO_Init+0xfa>
 8004564:	4a96      	ldr	r2, [pc, #600]	@ (80047c0 <HAL_GPIO_Init+0x2a4>)
 8004566:	4293      	cmp	r3, r2
 8004568:	d86f      	bhi.n	800464a <HAL_GPIO_Init+0x12e>
 800456a:	4a96      	ldr	r2, [pc, #600]	@ (80047c4 <HAL_GPIO_Init+0x2a8>)
 800456c:	4293      	cmp	r3, r2
 800456e:	d052      	beq.n	8004616 <HAL_GPIO_Init+0xfa>
 8004570:	4a94      	ldr	r2, [pc, #592]	@ (80047c4 <HAL_GPIO_Init+0x2a8>)
 8004572:	4293      	cmp	r3, r2
 8004574:	d869      	bhi.n	800464a <HAL_GPIO_Init+0x12e>
 8004576:	4a94      	ldr	r2, [pc, #592]	@ (80047c8 <HAL_GPIO_Init+0x2ac>)
 8004578:	4293      	cmp	r3, r2
 800457a:	d04c      	beq.n	8004616 <HAL_GPIO_Init+0xfa>
 800457c:	4a92      	ldr	r2, [pc, #584]	@ (80047c8 <HAL_GPIO_Init+0x2ac>)
 800457e:	4293      	cmp	r3, r2
 8004580:	d863      	bhi.n	800464a <HAL_GPIO_Init+0x12e>
 8004582:	4a92      	ldr	r2, [pc, #584]	@ (80047cc <HAL_GPIO_Init+0x2b0>)
 8004584:	4293      	cmp	r3, r2
 8004586:	d046      	beq.n	8004616 <HAL_GPIO_Init+0xfa>
 8004588:	4a90      	ldr	r2, [pc, #576]	@ (80047cc <HAL_GPIO_Init+0x2b0>)
 800458a:	4293      	cmp	r3, r2
 800458c:	d85d      	bhi.n	800464a <HAL_GPIO_Init+0x12e>
 800458e:	2b12      	cmp	r3, #18
 8004590:	d82a      	bhi.n	80045e8 <HAL_GPIO_Init+0xcc>
 8004592:	2b12      	cmp	r3, #18
 8004594:	d859      	bhi.n	800464a <HAL_GPIO_Init+0x12e>
 8004596:	a201      	add	r2, pc, #4	@ (adr r2, 800459c <HAL_GPIO_Init+0x80>)
 8004598:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800459c:	08004617 	.word	0x08004617
 80045a0:	080045f1 	.word	0x080045f1
 80045a4:	08004603 	.word	0x08004603
 80045a8:	08004645 	.word	0x08004645
 80045ac:	0800464b 	.word	0x0800464b
 80045b0:	0800464b 	.word	0x0800464b
 80045b4:	0800464b 	.word	0x0800464b
 80045b8:	0800464b 	.word	0x0800464b
 80045bc:	0800464b 	.word	0x0800464b
 80045c0:	0800464b 	.word	0x0800464b
 80045c4:	0800464b 	.word	0x0800464b
 80045c8:	0800464b 	.word	0x0800464b
 80045cc:	0800464b 	.word	0x0800464b
 80045d0:	0800464b 	.word	0x0800464b
 80045d4:	0800464b 	.word	0x0800464b
 80045d8:	0800464b 	.word	0x0800464b
 80045dc:	0800464b 	.word	0x0800464b
 80045e0:	080045f9 	.word	0x080045f9
 80045e4:	0800460d 	.word	0x0800460d
 80045e8:	4a79      	ldr	r2, [pc, #484]	@ (80047d0 <HAL_GPIO_Init+0x2b4>)
 80045ea:	4293      	cmp	r3, r2
 80045ec:	d013      	beq.n	8004616 <HAL_GPIO_Init+0xfa>
 80045ee:	e02c      	b.n	800464a <HAL_GPIO_Init+0x12e>
 80045f0:	683b      	ldr	r3, [r7, #0]
 80045f2:	68db      	ldr	r3, [r3, #12]
 80045f4:	623b      	str	r3, [r7, #32]
 80045f6:	e029      	b.n	800464c <HAL_GPIO_Init+0x130>
 80045f8:	683b      	ldr	r3, [r7, #0]
 80045fa:	68db      	ldr	r3, [r3, #12]
 80045fc:	3304      	adds	r3, #4
 80045fe:	623b      	str	r3, [r7, #32]
 8004600:	e024      	b.n	800464c <HAL_GPIO_Init+0x130>
 8004602:	683b      	ldr	r3, [r7, #0]
 8004604:	68db      	ldr	r3, [r3, #12]
 8004606:	3308      	adds	r3, #8
 8004608:	623b      	str	r3, [r7, #32]
 800460a:	e01f      	b.n	800464c <HAL_GPIO_Init+0x130>
 800460c:	683b      	ldr	r3, [r7, #0]
 800460e:	68db      	ldr	r3, [r3, #12]
 8004610:	330c      	adds	r3, #12
 8004612:	623b      	str	r3, [r7, #32]
 8004614:	e01a      	b.n	800464c <HAL_GPIO_Init+0x130>
 8004616:	683b      	ldr	r3, [r7, #0]
 8004618:	689b      	ldr	r3, [r3, #8]
 800461a:	2b00      	cmp	r3, #0
 800461c:	d102      	bne.n	8004624 <HAL_GPIO_Init+0x108>
 800461e:	2304      	movs	r3, #4
 8004620:	623b      	str	r3, [r7, #32]
 8004622:	e013      	b.n	800464c <HAL_GPIO_Init+0x130>
 8004624:	683b      	ldr	r3, [r7, #0]
 8004626:	689b      	ldr	r3, [r3, #8]
 8004628:	2b01      	cmp	r3, #1
 800462a:	d105      	bne.n	8004638 <HAL_GPIO_Init+0x11c>
 800462c:	2308      	movs	r3, #8
 800462e:	623b      	str	r3, [r7, #32]
 8004630:	687b      	ldr	r3, [r7, #4]
 8004632:	69fa      	ldr	r2, [r7, #28]
 8004634:	611a      	str	r2, [r3, #16]
 8004636:	e009      	b.n	800464c <HAL_GPIO_Init+0x130>
 8004638:	2308      	movs	r3, #8
 800463a:	623b      	str	r3, [r7, #32]
 800463c:	687b      	ldr	r3, [r7, #4]
 800463e:	69fa      	ldr	r2, [r7, #28]
 8004640:	615a      	str	r2, [r3, #20]
 8004642:	e003      	b.n	800464c <HAL_GPIO_Init+0x130>
 8004644:	2300      	movs	r3, #0
 8004646:	623b      	str	r3, [r7, #32]
 8004648:	e000      	b.n	800464c <HAL_GPIO_Init+0x130>
 800464a:	bf00      	nop
 800464c:	69bb      	ldr	r3, [r7, #24]
 800464e:	2bff      	cmp	r3, #255	@ 0xff
 8004650:	d801      	bhi.n	8004656 <HAL_GPIO_Init+0x13a>
 8004652:	687b      	ldr	r3, [r7, #4]
 8004654:	e001      	b.n	800465a <HAL_GPIO_Init+0x13e>
 8004656:	687b      	ldr	r3, [r7, #4]
 8004658:	3304      	adds	r3, #4
 800465a:	617b      	str	r3, [r7, #20]
 800465c:	69bb      	ldr	r3, [r7, #24]
 800465e:	2bff      	cmp	r3, #255	@ 0xff
 8004660:	d802      	bhi.n	8004668 <HAL_GPIO_Init+0x14c>
 8004662:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004664:	009b      	lsls	r3, r3, #2
 8004666:	e002      	b.n	800466e <HAL_GPIO_Init+0x152>
 8004668:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800466a:	3b08      	subs	r3, #8
 800466c:	009b      	lsls	r3, r3, #2
 800466e:	613b      	str	r3, [r7, #16]
 8004670:	697b      	ldr	r3, [r7, #20]
 8004672:	681a      	ldr	r2, [r3, #0]
 8004674:	210f      	movs	r1, #15
 8004676:	693b      	ldr	r3, [r7, #16]
 8004678:	fa01 f303 	lsl.w	r3, r1, r3
 800467c:	43db      	mvns	r3, r3
 800467e:	401a      	ands	r2, r3
 8004680:	6a39      	ldr	r1, [r7, #32]
 8004682:	693b      	ldr	r3, [r7, #16]
 8004684:	fa01 f303 	lsl.w	r3, r1, r3
 8004688:	431a      	orrs	r2, r3
 800468a:	697b      	ldr	r3, [r7, #20]
 800468c:	601a      	str	r2, [r3, #0]
 800468e:	683b      	ldr	r3, [r7, #0]
 8004690:	685b      	ldr	r3, [r3, #4]
 8004692:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004696:	2b00      	cmp	r3, #0
 8004698:	f000 80b1 	beq.w	80047fe <HAL_GPIO_Init+0x2e2>
 800469c:	4b4d      	ldr	r3, [pc, #308]	@ (80047d4 <HAL_GPIO_Init+0x2b8>)
 800469e:	699b      	ldr	r3, [r3, #24]
 80046a0:	4a4c      	ldr	r2, [pc, #304]	@ (80047d4 <HAL_GPIO_Init+0x2b8>)
 80046a2:	f043 0301 	orr.w	r3, r3, #1
 80046a6:	6193      	str	r3, [r2, #24]
 80046a8:	4b4a      	ldr	r3, [pc, #296]	@ (80047d4 <HAL_GPIO_Init+0x2b8>)
 80046aa:	699b      	ldr	r3, [r3, #24]
 80046ac:	f003 0301 	and.w	r3, r3, #1
 80046b0:	60bb      	str	r3, [r7, #8]
 80046b2:	68bb      	ldr	r3, [r7, #8]
 80046b4:	4a48      	ldr	r2, [pc, #288]	@ (80047d8 <HAL_GPIO_Init+0x2bc>)
 80046b6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80046b8:	089b      	lsrs	r3, r3, #2
 80046ba:	3302      	adds	r3, #2
 80046bc:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80046c0:	60fb      	str	r3, [r7, #12]
 80046c2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80046c4:	f003 0303 	and.w	r3, r3, #3
 80046c8:	009b      	lsls	r3, r3, #2
 80046ca:	220f      	movs	r2, #15
 80046cc:	fa02 f303 	lsl.w	r3, r2, r3
 80046d0:	43db      	mvns	r3, r3
 80046d2:	68fa      	ldr	r2, [r7, #12]
 80046d4:	4013      	ands	r3, r2
 80046d6:	60fb      	str	r3, [r7, #12]
 80046d8:	687b      	ldr	r3, [r7, #4]
 80046da:	4a40      	ldr	r2, [pc, #256]	@ (80047dc <HAL_GPIO_Init+0x2c0>)
 80046dc:	4293      	cmp	r3, r2
 80046de:	d013      	beq.n	8004708 <HAL_GPIO_Init+0x1ec>
 80046e0:	687b      	ldr	r3, [r7, #4]
 80046e2:	4a3f      	ldr	r2, [pc, #252]	@ (80047e0 <HAL_GPIO_Init+0x2c4>)
 80046e4:	4293      	cmp	r3, r2
 80046e6:	d00d      	beq.n	8004704 <HAL_GPIO_Init+0x1e8>
 80046e8:	687b      	ldr	r3, [r7, #4]
 80046ea:	4a3e      	ldr	r2, [pc, #248]	@ (80047e4 <HAL_GPIO_Init+0x2c8>)
 80046ec:	4293      	cmp	r3, r2
 80046ee:	d007      	beq.n	8004700 <HAL_GPIO_Init+0x1e4>
 80046f0:	687b      	ldr	r3, [r7, #4]
 80046f2:	4a3d      	ldr	r2, [pc, #244]	@ (80047e8 <HAL_GPIO_Init+0x2cc>)
 80046f4:	4293      	cmp	r3, r2
 80046f6:	d101      	bne.n	80046fc <HAL_GPIO_Init+0x1e0>
 80046f8:	2303      	movs	r3, #3
 80046fa:	e006      	b.n	800470a <HAL_GPIO_Init+0x1ee>
 80046fc:	2304      	movs	r3, #4
 80046fe:	e004      	b.n	800470a <HAL_GPIO_Init+0x1ee>
 8004700:	2302      	movs	r3, #2
 8004702:	e002      	b.n	800470a <HAL_GPIO_Init+0x1ee>
 8004704:	2301      	movs	r3, #1
 8004706:	e000      	b.n	800470a <HAL_GPIO_Init+0x1ee>
 8004708:	2300      	movs	r3, #0
 800470a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800470c:	f002 0203 	and.w	r2, r2, #3
 8004710:	0092      	lsls	r2, r2, #2
 8004712:	4093      	lsls	r3, r2
 8004714:	68fa      	ldr	r2, [r7, #12]
 8004716:	4313      	orrs	r3, r2
 8004718:	60fb      	str	r3, [r7, #12]
 800471a:	492f      	ldr	r1, [pc, #188]	@ (80047d8 <HAL_GPIO_Init+0x2bc>)
 800471c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800471e:	089b      	lsrs	r3, r3, #2
 8004720:	3302      	adds	r3, #2
 8004722:	68fa      	ldr	r2, [r7, #12]
 8004724:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8004728:	683b      	ldr	r3, [r7, #0]
 800472a:	685b      	ldr	r3, [r3, #4]
 800472c:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8004730:	2b00      	cmp	r3, #0
 8004732:	d006      	beq.n	8004742 <HAL_GPIO_Init+0x226>
 8004734:	4b2d      	ldr	r3, [pc, #180]	@ (80047ec <HAL_GPIO_Init+0x2d0>)
 8004736:	689a      	ldr	r2, [r3, #8]
 8004738:	492c      	ldr	r1, [pc, #176]	@ (80047ec <HAL_GPIO_Init+0x2d0>)
 800473a:	69bb      	ldr	r3, [r7, #24]
 800473c:	4313      	orrs	r3, r2
 800473e:	608b      	str	r3, [r1, #8]
 8004740:	e006      	b.n	8004750 <HAL_GPIO_Init+0x234>
 8004742:	4b2a      	ldr	r3, [pc, #168]	@ (80047ec <HAL_GPIO_Init+0x2d0>)
 8004744:	689a      	ldr	r2, [r3, #8]
 8004746:	69bb      	ldr	r3, [r7, #24]
 8004748:	43db      	mvns	r3, r3
 800474a:	4928      	ldr	r1, [pc, #160]	@ (80047ec <HAL_GPIO_Init+0x2d0>)
 800474c:	4013      	ands	r3, r2
 800474e:	608b      	str	r3, [r1, #8]
 8004750:	683b      	ldr	r3, [r7, #0]
 8004752:	685b      	ldr	r3, [r3, #4]
 8004754:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8004758:	2b00      	cmp	r3, #0
 800475a:	d006      	beq.n	800476a <HAL_GPIO_Init+0x24e>
 800475c:	4b23      	ldr	r3, [pc, #140]	@ (80047ec <HAL_GPIO_Init+0x2d0>)
 800475e:	68da      	ldr	r2, [r3, #12]
 8004760:	4922      	ldr	r1, [pc, #136]	@ (80047ec <HAL_GPIO_Init+0x2d0>)
 8004762:	69bb      	ldr	r3, [r7, #24]
 8004764:	4313      	orrs	r3, r2
 8004766:	60cb      	str	r3, [r1, #12]
 8004768:	e006      	b.n	8004778 <HAL_GPIO_Init+0x25c>
 800476a:	4b20      	ldr	r3, [pc, #128]	@ (80047ec <HAL_GPIO_Init+0x2d0>)
 800476c:	68da      	ldr	r2, [r3, #12]
 800476e:	69bb      	ldr	r3, [r7, #24]
 8004770:	43db      	mvns	r3, r3
 8004772:	491e      	ldr	r1, [pc, #120]	@ (80047ec <HAL_GPIO_Init+0x2d0>)
 8004774:	4013      	ands	r3, r2
 8004776:	60cb      	str	r3, [r1, #12]
 8004778:	683b      	ldr	r3, [r7, #0]
 800477a:	685b      	ldr	r3, [r3, #4]
 800477c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004780:	2b00      	cmp	r3, #0
 8004782:	d006      	beq.n	8004792 <HAL_GPIO_Init+0x276>
 8004784:	4b19      	ldr	r3, [pc, #100]	@ (80047ec <HAL_GPIO_Init+0x2d0>)
 8004786:	685a      	ldr	r2, [r3, #4]
 8004788:	4918      	ldr	r1, [pc, #96]	@ (80047ec <HAL_GPIO_Init+0x2d0>)
 800478a:	69bb      	ldr	r3, [r7, #24]
 800478c:	4313      	orrs	r3, r2
 800478e:	604b      	str	r3, [r1, #4]
 8004790:	e006      	b.n	80047a0 <HAL_GPIO_Init+0x284>
 8004792:	4b16      	ldr	r3, [pc, #88]	@ (80047ec <HAL_GPIO_Init+0x2d0>)
 8004794:	685a      	ldr	r2, [r3, #4]
 8004796:	69bb      	ldr	r3, [r7, #24]
 8004798:	43db      	mvns	r3, r3
 800479a:	4914      	ldr	r1, [pc, #80]	@ (80047ec <HAL_GPIO_Init+0x2d0>)
 800479c:	4013      	ands	r3, r2
 800479e:	604b      	str	r3, [r1, #4]
 80047a0:	683b      	ldr	r3, [r7, #0]
 80047a2:	685b      	ldr	r3, [r3, #4]
 80047a4:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80047a8:	2b00      	cmp	r3, #0
 80047aa:	d021      	beq.n	80047f0 <HAL_GPIO_Init+0x2d4>
 80047ac:	4b0f      	ldr	r3, [pc, #60]	@ (80047ec <HAL_GPIO_Init+0x2d0>)
 80047ae:	681a      	ldr	r2, [r3, #0]
 80047b0:	490e      	ldr	r1, [pc, #56]	@ (80047ec <HAL_GPIO_Init+0x2d0>)
 80047b2:	69bb      	ldr	r3, [r7, #24]
 80047b4:	4313      	orrs	r3, r2
 80047b6:	600b      	str	r3, [r1, #0]
 80047b8:	e021      	b.n	80047fe <HAL_GPIO_Init+0x2e2>
 80047ba:	bf00      	nop
 80047bc:	10320000 	.word	0x10320000
 80047c0:	10310000 	.word	0x10310000
 80047c4:	10220000 	.word	0x10220000
 80047c8:	10210000 	.word	0x10210000
 80047cc:	10120000 	.word	0x10120000
 80047d0:	10110000 	.word	0x10110000
 80047d4:	40021000 	.word	0x40021000
 80047d8:	40010000 	.word	0x40010000
 80047dc:	40010800 	.word	0x40010800
 80047e0:	40010c00 	.word	0x40010c00
 80047e4:	40011000 	.word	0x40011000
 80047e8:	40011400 	.word	0x40011400
 80047ec:	40010400 	.word	0x40010400
 80047f0:	4b0b      	ldr	r3, [pc, #44]	@ (8004820 <HAL_GPIO_Init+0x304>)
 80047f2:	681a      	ldr	r2, [r3, #0]
 80047f4:	69bb      	ldr	r3, [r7, #24]
 80047f6:	43db      	mvns	r3, r3
 80047f8:	4909      	ldr	r1, [pc, #36]	@ (8004820 <HAL_GPIO_Init+0x304>)
 80047fa:	4013      	ands	r3, r2
 80047fc:	600b      	str	r3, [r1, #0]
 80047fe:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004800:	3301      	adds	r3, #1
 8004802:	627b      	str	r3, [r7, #36]	@ 0x24
 8004804:	683b      	ldr	r3, [r7, #0]
 8004806:	681a      	ldr	r2, [r3, #0]
 8004808:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800480a:	fa22 f303 	lsr.w	r3, r2, r3
 800480e:	2b00      	cmp	r3, #0
 8004810:	f47f ae8e 	bne.w	8004530 <HAL_GPIO_Init+0x14>
 8004814:	bf00      	nop
 8004816:	bf00      	nop
 8004818:	372c      	adds	r7, #44	@ 0x2c
 800481a:	46bd      	mov	sp, r7
 800481c:	bc80      	pop	{r7}
 800481e:	4770      	bx	lr
 8004820:	40010400 	.word	0x40010400

08004824 <HAL_RCC_OscConfig>:
 8004824:	b580      	push	{r7, lr}
 8004826:	b086      	sub	sp, #24
 8004828:	af00      	add	r7, sp, #0
 800482a:	6078      	str	r0, [r7, #4]
 800482c:	687b      	ldr	r3, [r7, #4]
 800482e:	2b00      	cmp	r3, #0
 8004830:	d101      	bne.n	8004836 <HAL_RCC_OscConfig+0x12>
 8004832:	2301      	movs	r3, #1
 8004834:	e272      	b.n	8004d1c <HAL_RCC_OscConfig+0x4f8>
 8004836:	687b      	ldr	r3, [r7, #4]
 8004838:	681b      	ldr	r3, [r3, #0]
 800483a:	f003 0301 	and.w	r3, r3, #1
 800483e:	2b00      	cmp	r3, #0
 8004840:	f000 8087 	beq.w	8004952 <HAL_RCC_OscConfig+0x12e>
 8004844:	4b92      	ldr	r3, [pc, #584]	@ (8004a90 <HAL_RCC_OscConfig+0x26c>)
 8004846:	685b      	ldr	r3, [r3, #4]
 8004848:	f003 030c 	and.w	r3, r3, #12
 800484c:	2b04      	cmp	r3, #4
 800484e:	d00c      	beq.n	800486a <HAL_RCC_OscConfig+0x46>
 8004850:	4b8f      	ldr	r3, [pc, #572]	@ (8004a90 <HAL_RCC_OscConfig+0x26c>)
 8004852:	685b      	ldr	r3, [r3, #4]
 8004854:	f003 030c 	and.w	r3, r3, #12
 8004858:	2b08      	cmp	r3, #8
 800485a:	d112      	bne.n	8004882 <HAL_RCC_OscConfig+0x5e>
 800485c:	4b8c      	ldr	r3, [pc, #560]	@ (8004a90 <HAL_RCC_OscConfig+0x26c>)
 800485e:	685b      	ldr	r3, [r3, #4]
 8004860:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004864:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004868:	d10b      	bne.n	8004882 <HAL_RCC_OscConfig+0x5e>
 800486a:	4b89      	ldr	r3, [pc, #548]	@ (8004a90 <HAL_RCC_OscConfig+0x26c>)
 800486c:	681b      	ldr	r3, [r3, #0]
 800486e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004872:	2b00      	cmp	r3, #0
 8004874:	d06c      	beq.n	8004950 <HAL_RCC_OscConfig+0x12c>
 8004876:	687b      	ldr	r3, [r7, #4]
 8004878:	685b      	ldr	r3, [r3, #4]
 800487a:	2b00      	cmp	r3, #0
 800487c:	d168      	bne.n	8004950 <HAL_RCC_OscConfig+0x12c>
 800487e:	2301      	movs	r3, #1
 8004880:	e24c      	b.n	8004d1c <HAL_RCC_OscConfig+0x4f8>
 8004882:	687b      	ldr	r3, [r7, #4]
 8004884:	685b      	ldr	r3, [r3, #4]
 8004886:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800488a:	d106      	bne.n	800489a <HAL_RCC_OscConfig+0x76>
 800488c:	4b80      	ldr	r3, [pc, #512]	@ (8004a90 <HAL_RCC_OscConfig+0x26c>)
 800488e:	681b      	ldr	r3, [r3, #0]
 8004890:	4a7f      	ldr	r2, [pc, #508]	@ (8004a90 <HAL_RCC_OscConfig+0x26c>)
 8004892:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004896:	6013      	str	r3, [r2, #0]
 8004898:	e02e      	b.n	80048f8 <HAL_RCC_OscConfig+0xd4>
 800489a:	687b      	ldr	r3, [r7, #4]
 800489c:	685b      	ldr	r3, [r3, #4]
 800489e:	2b00      	cmp	r3, #0
 80048a0:	d10c      	bne.n	80048bc <HAL_RCC_OscConfig+0x98>
 80048a2:	4b7b      	ldr	r3, [pc, #492]	@ (8004a90 <HAL_RCC_OscConfig+0x26c>)
 80048a4:	681b      	ldr	r3, [r3, #0]
 80048a6:	4a7a      	ldr	r2, [pc, #488]	@ (8004a90 <HAL_RCC_OscConfig+0x26c>)
 80048a8:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80048ac:	6013      	str	r3, [r2, #0]
 80048ae:	4b78      	ldr	r3, [pc, #480]	@ (8004a90 <HAL_RCC_OscConfig+0x26c>)
 80048b0:	681b      	ldr	r3, [r3, #0]
 80048b2:	4a77      	ldr	r2, [pc, #476]	@ (8004a90 <HAL_RCC_OscConfig+0x26c>)
 80048b4:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80048b8:	6013      	str	r3, [r2, #0]
 80048ba:	e01d      	b.n	80048f8 <HAL_RCC_OscConfig+0xd4>
 80048bc:	687b      	ldr	r3, [r7, #4]
 80048be:	685b      	ldr	r3, [r3, #4]
 80048c0:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80048c4:	d10c      	bne.n	80048e0 <HAL_RCC_OscConfig+0xbc>
 80048c6:	4b72      	ldr	r3, [pc, #456]	@ (8004a90 <HAL_RCC_OscConfig+0x26c>)
 80048c8:	681b      	ldr	r3, [r3, #0]
 80048ca:	4a71      	ldr	r2, [pc, #452]	@ (8004a90 <HAL_RCC_OscConfig+0x26c>)
 80048cc:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80048d0:	6013      	str	r3, [r2, #0]
 80048d2:	4b6f      	ldr	r3, [pc, #444]	@ (8004a90 <HAL_RCC_OscConfig+0x26c>)
 80048d4:	681b      	ldr	r3, [r3, #0]
 80048d6:	4a6e      	ldr	r2, [pc, #440]	@ (8004a90 <HAL_RCC_OscConfig+0x26c>)
 80048d8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80048dc:	6013      	str	r3, [r2, #0]
 80048de:	e00b      	b.n	80048f8 <HAL_RCC_OscConfig+0xd4>
 80048e0:	4b6b      	ldr	r3, [pc, #428]	@ (8004a90 <HAL_RCC_OscConfig+0x26c>)
 80048e2:	681b      	ldr	r3, [r3, #0]
 80048e4:	4a6a      	ldr	r2, [pc, #424]	@ (8004a90 <HAL_RCC_OscConfig+0x26c>)
 80048e6:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80048ea:	6013      	str	r3, [r2, #0]
 80048ec:	4b68      	ldr	r3, [pc, #416]	@ (8004a90 <HAL_RCC_OscConfig+0x26c>)
 80048ee:	681b      	ldr	r3, [r3, #0]
 80048f0:	4a67      	ldr	r2, [pc, #412]	@ (8004a90 <HAL_RCC_OscConfig+0x26c>)
 80048f2:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80048f6:	6013      	str	r3, [r2, #0]
 80048f8:	687b      	ldr	r3, [r7, #4]
 80048fa:	685b      	ldr	r3, [r3, #4]
 80048fc:	2b00      	cmp	r3, #0
 80048fe:	d013      	beq.n	8004928 <HAL_RCC_OscConfig+0x104>
 8004900:	f7fe fefc 	bl	80036fc <HAL_GetTick>
 8004904:	6138      	str	r0, [r7, #16]
 8004906:	e008      	b.n	800491a <HAL_RCC_OscConfig+0xf6>
 8004908:	f7fe fef8 	bl	80036fc <HAL_GetTick>
 800490c:	4602      	mov	r2, r0
 800490e:	693b      	ldr	r3, [r7, #16]
 8004910:	1ad3      	subs	r3, r2, r3
 8004912:	2b64      	cmp	r3, #100	@ 0x64
 8004914:	d901      	bls.n	800491a <HAL_RCC_OscConfig+0xf6>
 8004916:	2303      	movs	r3, #3
 8004918:	e200      	b.n	8004d1c <HAL_RCC_OscConfig+0x4f8>
 800491a:	4b5d      	ldr	r3, [pc, #372]	@ (8004a90 <HAL_RCC_OscConfig+0x26c>)
 800491c:	681b      	ldr	r3, [r3, #0]
 800491e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004922:	2b00      	cmp	r3, #0
 8004924:	d0f0      	beq.n	8004908 <HAL_RCC_OscConfig+0xe4>
 8004926:	e014      	b.n	8004952 <HAL_RCC_OscConfig+0x12e>
 8004928:	f7fe fee8 	bl	80036fc <HAL_GetTick>
 800492c:	6138      	str	r0, [r7, #16]
 800492e:	e008      	b.n	8004942 <HAL_RCC_OscConfig+0x11e>
 8004930:	f7fe fee4 	bl	80036fc <HAL_GetTick>
 8004934:	4602      	mov	r2, r0
 8004936:	693b      	ldr	r3, [r7, #16]
 8004938:	1ad3      	subs	r3, r2, r3
 800493a:	2b64      	cmp	r3, #100	@ 0x64
 800493c:	d901      	bls.n	8004942 <HAL_RCC_OscConfig+0x11e>
 800493e:	2303      	movs	r3, #3
 8004940:	e1ec      	b.n	8004d1c <HAL_RCC_OscConfig+0x4f8>
 8004942:	4b53      	ldr	r3, [pc, #332]	@ (8004a90 <HAL_RCC_OscConfig+0x26c>)
 8004944:	681b      	ldr	r3, [r3, #0]
 8004946:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800494a:	2b00      	cmp	r3, #0
 800494c:	d1f0      	bne.n	8004930 <HAL_RCC_OscConfig+0x10c>
 800494e:	e000      	b.n	8004952 <HAL_RCC_OscConfig+0x12e>
 8004950:	bf00      	nop
 8004952:	687b      	ldr	r3, [r7, #4]
 8004954:	681b      	ldr	r3, [r3, #0]
 8004956:	f003 0302 	and.w	r3, r3, #2
 800495a:	2b00      	cmp	r3, #0
 800495c:	d063      	beq.n	8004a26 <HAL_RCC_OscConfig+0x202>
 800495e:	4b4c      	ldr	r3, [pc, #304]	@ (8004a90 <HAL_RCC_OscConfig+0x26c>)
 8004960:	685b      	ldr	r3, [r3, #4]
 8004962:	f003 030c 	and.w	r3, r3, #12
 8004966:	2b00      	cmp	r3, #0
 8004968:	d00b      	beq.n	8004982 <HAL_RCC_OscConfig+0x15e>
 800496a:	4b49      	ldr	r3, [pc, #292]	@ (8004a90 <HAL_RCC_OscConfig+0x26c>)
 800496c:	685b      	ldr	r3, [r3, #4]
 800496e:	f003 030c 	and.w	r3, r3, #12
 8004972:	2b08      	cmp	r3, #8
 8004974:	d11c      	bne.n	80049b0 <HAL_RCC_OscConfig+0x18c>
 8004976:	4b46      	ldr	r3, [pc, #280]	@ (8004a90 <HAL_RCC_OscConfig+0x26c>)
 8004978:	685b      	ldr	r3, [r3, #4]
 800497a:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800497e:	2b00      	cmp	r3, #0
 8004980:	d116      	bne.n	80049b0 <HAL_RCC_OscConfig+0x18c>
 8004982:	4b43      	ldr	r3, [pc, #268]	@ (8004a90 <HAL_RCC_OscConfig+0x26c>)
 8004984:	681b      	ldr	r3, [r3, #0]
 8004986:	f003 0302 	and.w	r3, r3, #2
 800498a:	2b00      	cmp	r3, #0
 800498c:	d005      	beq.n	800499a <HAL_RCC_OscConfig+0x176>
 800498e:	687b      	ldr	r3, [r7, #4]
 8004990:	691b      	ldr	r3, [r3, #16]
 8004992:	2b01      	cmp	r3, #1
 8004994:	d001      	beq.n	800499a <HAL_RCC_OscConfig+0x176>
 8004996:	2301      	movs	r3, #1
 8004998:	e1c0      	b.n	8004d1c <HAL_RCC_OscConfig+0x4f8>
 800499a:	4b3d      	ldr	r3, [pc, #244]	@ (8004a90 <HAL_RCC_OscConfig+0x26c>)
 800499c:	681b      	ldr	r3, [r3, #0]
 800499e:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80049a2:	687b      	ldr	r3, [r7, #4]
 80049a4:	695b      	ldr	r3, [r3, #20]
 80049a6:	00db      	lsls	r3, r3, #3
 80049a8:	4939      	ldr	r1, [pc, #228]	@ (8004a90 <HAL_RCC_OscConfig+0x26c>)
 80049aa:	4313      	orrs	r3, r2
 80049ac:	600b      	str	r3, [r1, #0]
 80049ae:	e03a      	b.n	8004a26 <HAL_RCC_OscConfig+0x202>
 80049b0:	687b      	ldr	r3, [r7, #4]
 80049b2:	691b      	ldr	r3, [r3, #16]
 80049b4:	2b00      	cmp	r3, #0
 80049b6:	d020      	beq.n	80049fa <HAL_RCC_OscConfig+0x1d6>
 80049b8:	4b36      	ldr	r3, [pc, #216]	@ (8004a94 <HAL_RCC_OscConfig+0x270>)
 80049ba:	2201      	movs	r2, #1
 80049bc:	601a      	str	r2, [r3, #0]
 80049be:	f7fe fe9d 	bl	80036fc <HAL_GetTick>
 80049c2:	6138      	str	r0, [r7, #16]
 80049c4:	e008      	b.n	80049d8 <HAL_RCC_OscConfig+0x1b4>
 80049c6:	f7fe fe99 	bl	80036fc <HAL_GetTick>
 80049ca:	4602      	mov	r2, r0
 80049cc:	693b      	ldr	r3, [r7, #16]
 80049ce:	1ad3      	subs	r3, r2, r3
 80049d0:	2b02      	cmp	r3, #2
 80049d2:	d901      	bls.n	80049d8 <HAL_RCC_OscConfig+0x1b4>
 80049d4:	2303      	movs	r3, #3
 80049d6:	e1a1      	b.n	8004d1c <HAL_RCC_OscConfig+0x4f8>
 80049d8:	4b2d      	ldr	r3, [pc, #180]	@ (8004a90 <HAL_RCC_OscConfig+0x26c>)
 80049da:	681b      	ldr	r3, [r3, #0]
 80049dc:	f003 0302 	and.w	r3, r3, #2
 80049e0:	2b00      	cmp	r3, #0
 80049e2:	d0f0      	beq.n	80049c6 <HAL_RCC_OscConfig+0x1a2>
 80049e4:	4b2a      	ldr	r3, [pc, #168]	@ (8004a90 <HAL_RCC_OscConfig+0x26c>)
 80049e6:	681b      	ldr	r3, [r3, #0]
 80049e8:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80049ec:	687b      	ldr	r3, [r7, #4]
 80049ee:	695b      	ldr	r3, [r3, #20]
 80049f0:	00db      	lsls	r3, r3, #3
 80049f2:	4927      	ldr	r1, [pc, #156]	@ (8004a90 <HAL_RCC_OscConfig+0x26c>)
 80049f4:	4313      	orrs	r3, r2
 80049f6:	600b      	str	r3, [r1, #0]
 80049f8:	e015      	b.n	8004a26 <HAL_RCC_OscConfig+0x202>
 80049fa:	4b26      	ldr	r3, [pc, #152]	@ (8004a94 <HAL_RCC_OscConfig+0x270>)
 80049fc:	2200      	movs	r2, #0
 80049fe:	601a      	str	r2, [r3, #0]
 8004a00:	f7fe fe7c 	bl	80036fc <HAL_GetTick>
 8004a04:	6138      	str	r0, [r7, #16]
 8004a06:	e008      	b.n	8004a1a <HAL_RCC_OscConfig+0x1f6>
 8004a08:	f7fe fe78 	bl	80036fc <HAL_GetTick>
 8004a0c:	4602      	mov	r2, r0
 8004a0e:	693b      	ldr	r3, [r7, #16]
 8004a10:	1ad3      	subs	r3, r2, r3
 8004a12:	2b02      	cmp	r3, #2
 8004a14:	d901      	bls.n	8004a1a <HAL_RCC_OscConfig+0x1f6>
 8004a16:	2303      	movs	r3, #3
 8004a18:	e180      	b.n	8004d1c <HAL_RCC_OscConfig+0x4f8>
 8004a1a:	4b1d      	ldr	r3, [pc, #116]	@ (8004a90 <HAL_RCC_OscConfig+0x26c>)
 8004a1c:	681b      	ldr	r3, [r3, #0]
 8004a1e:	f003 0302 	and.w	r3, r3, #2
 8004a22:	2b00      	cmp	r3, #0
 8004a24:	d1f0      	bne.n	8004a08 <HAL_RCC_OscConfig+0x1e4>
 8004a26:	687b      	ldr	r3, [r7, #4]
 8004a28:	681b      	ldr	r3, [r3, #0]
 8004a2a:	f003 0308 	and.w	r3, r3, #8
 8004a2e:	2b00      	cmp	r3, #0
 8004a30:	d03a      	beq.n	8004aa8 <HAL_RCC_OscConfig+0x284>
 8004a32:	687b      	ldr	r3, [r7, #4]
 8004a34:	699b      	ldr	r3, [r3, #24]
 8004a36:	2b00      	cmp	r3, #0
 8004a38:	d019      	beq.n	8004a6e <HAL_RCC_OscConfig+0x24a>
 8004a3a:	4b17      	ldr	r3, [pc, #92]	@ (8004a98 <HAL_RCC_OscConfig+0x274>)
 8004a3c:	2201      	movs	r2, #1
 8004a3e:	601a      	str	r2, [r3, #0]
 8004a40:	f7fe fe5c 	bl	80036fc <HAL_GetTick>
 8004a44:	6138      	str	r0, [r7, #16]
 8004a46:	e008      	b.n	8004a5a <HAL_RCC_OscConfig+0x236>
 8004a48:	f7fe fe58 	bl	80036fc <HAL_GetTick>
 8004a4c:	4602      	mov	r2, r0
 8004a4e:	693b      	ldr	r3, [r7, #16]
 8004a50:	1ad3      	subs	r3, r2, r3
 8004a52:	2b02      	cmp	r3, #2
 8004a54:	d901      	bls.n	8004a5a <HAL_RCC_OscConfig+0x236>
 8004a56:	2303      	movs	r3, #3
 8004a58:	e160      	b.n	8004d1c <HAL_RCC_OscConfig+0x4f8>
 8004a5a:	4b0d      	ldr	r3, [pc, #52]	@ (8004a90 <HAL_RCC_OscConfig+0x26c>)
 8004a5c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004a5e:	f003 0302 	and.w	r3, r3, #2
 8004a62:	2b00      	cmp	r3, #0
 8004a64:	d0f0      	beq.n	8004a48 <HAL_RCC_OscConfig+0x224>
 8004a66:	2001      	movs	r0, #1
 8004a68:	f000 fad0 	bl	800500c <RCC_Delay>
 8004a6c:	e01c      	b.n	8004aa8 <HAL_RCC_OscConfig+0x284>
 8004a6e:	4b0a      	ldr	r3, [pc, #40]	@ (8004a98 <HAL_RCC_OscConfig+0x274>)
 8004a70:	2200      	movs	r2, #0
 8004a72:	601a      	str	r2, [r3, #0]
 8004a74:	f7fe fe42 	bl	80036fc <HAL_GetTick>
 8004a78:	6138      	str	r0, [r7, #16]
 8004a7a:	e00f      	b.n	8004a9c <HAL_RCC_OscConfig+0x278>
 8004a7c:	f7fe fe3e 	bl	80036fc <HAL_GetTick>
 8004a80:	4602      	mov	r2, r0
 8004a82:	693b      	ldr	r3, [r7, #16]
 8004a84:	1ad3      	subs	r3, r2, r3
 8004a86:	2b02      	cmp	r3, #2
 8004a88:	d908      	bls.n	8004a9c <HAL_RCC_OscConfig+0x278>
 8004a8a:	2303      	movs	r3, #3
 8004a8c:	e146      	b.n	8004d1c <HAL_RCC_OscConfig+0x4f8>
 8004a8e:	bf00      	nop
 8004a90:	40021000 	.word	0x40021000
 8004a94:	42420000 	.word	0x42420000
 8004a98:	42420480 	.word	0x42420480
 8004a9c:	4b92      	ldr	r3, [pc, #584]	@ (8004ce8 <HAL_RCC_OscConfig+0x4c4>)
 8004a9e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004aa0:	f003 0302 	and.w	r3, r3, #2
 8004aa4:	2b00      	cmp	r3, #0
 8004aa6:	d1e9      	bne.n	8004a7c <HAL_RCC_OscConfig+0x258>
 8004aa8:	687b      	ldr	r3, [r7, #4]
 8004aaa:	681b      	ldr	r3, [r3, #0]
 8004aac:	f003 0304 	and.w	r3, r3, #4
 8004ab0:	2b00      	cmp	r3, #0
 8004ab2:	f000 80a6 	beq.w	8004c02 <HAL_RCC_OscConfig+0x3de>
 8004ab6:	2300      	movs	r3, #0
 8004ab8:	75fb      	strb	r3, [r7, #23]
 8004aba:	4b8b      	ldr	r3, [pc, #556]	@ (8004ce8 <HAL_RCC_OscConfig+0x4c4>)
 8004abc:	69db      	ldr	r3, [r3, #28]
 8004abe:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004ac2:	2b00      	cmp	r3, #0
 8004ac4:	d10d      	bne.n	8004ae2 <HAL_RCC_OscConfig+0x2be>
 8004ac6:	4b88      	ldr	r3, [pc, #544]	@ (8004ce8 <HAL_RCC_OscConfig+0x4c4>)
 8004ac8:	69db      	ldr	r3, [r3, #28]
 8004aca:	4a87      	ldr	r2, [pc, #540]	@ (8004ce8 <HAL_RCC_OscConfig+0x4c4>)
 8004acc:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8004ad0:	61d3      	str	r3, [r2, #28]
 8004ad2:	4b85      	ldr	r3, [pc, #532]	@ (8004ce8 <HAL_RCC_OscConfig+0x4c4>)
 8004ad4:	69db      	ldr	r3, [r3, #28]
 8004ad6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004ada:	60bb      	str	r3, [r7, #8]
 8004adc:	68bb      	ldr	r3, [r7, #8]
 8004ade:	2301      	movs	r3, #1
 8004ae0:	75fb      	strb	r3, [r7, #23]
 8004ae2:	4b82      	ldr	r3, [pc, #520]	@ (8004cec <HAL_RCC_OscConfig+0x4c8>)
 8004ae4:	681b      	ldr	r3, [r3, #0]
 8004ae6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004aea:	2b00      	cmp	r3, #0
 8004aec:	d118      	bne.n	8004b20 <HAL_RCC_OscConfig+0x2fc>
 8004aee:	4b7f      	ldr	r3, [pc, #508]	@ (8004cec <HAL_RCC_OscConfig+0x4c8>)
 8004af0:	681b      	ldr	r3, [r3, #0]
 8004af2:	4a7e      	ldr	r2, [pc, #504]	@ (8004cec <HAL_RCC_OscConfig+0x4c8>)
 8004af4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004af8:	6013      	str	r3, [r2, #0]
 8004afa:	f7fe fdff 	bl	80036fc <HAL_GetTick>
 8004afe:	6138      	str	r0, [r7, #16]
 8004b00:	e008      	b.n	8004b14 <HAL_RCC_OscConfig+0x2f0>
 8004b02:	f7fe fdfb 	bl	80036fc <HAL_GetTick>
 8004b06:	4602      	mov	r2, r0
 8004b08:	693b      	ldr	r3, [r7, #16]
 8004b0a:	1ad3      	subs	r3, r2, r3
 8004b0c:	2b64      	cmp	r3, #100	@ 0x64
 8004b0e:	d901      	bls.n	8004b14 <HAL_RCC_OscConfig+0x2f0>
 8004b10:	2303      	movs	r3, #3
 8004b12:	e103      	b.n	8004d1c <HAL_RCC_OscConfig+0x4f8>
 8004b14:	4b75      	ldr	r3, [pc, #468]	@ (8004cec <HAL_RCC_OscConfig+0x4c8>)
 8004b16:	681b      	ldr	r3, [r3, #0]
 8004b18:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004b1c:	2b00      	cmp	r3, #0
 8004b1e:	d0f0      	beq.n	8004b02 <HAL_RCC_OscConfig+0x2de>
 8004b20:	687b      	ldr	r3, [r7, #4]
 8004b22:	68db      	ldr	r3, [r3, #12]
 8004b24:	2b01      	cmp	r3, #1
 8004b26:	d106      	bne.n	8004b36 <HAL_RCC_OscConfig+0x312>
 8004b28:	4b6f      	ldr	r3, [pc, #444]	@ (8004ce8 <HAL_RCC_OscConfig+0x4c4>)
 8004b2a:	6a1b      	ldr	r3, [r3, #32]
 8004b2c:	4a6e      	ldr	r2, [pc, #440]	@ (8004ce8 <HAL_RCC_OscConfig+0x4c4>)
 8004b2e:	f043 0301 	orr.w	r3, r3, #1
 8004b32:	6213      	str	r3, [r2, #32]
 8004b34:	e02d      	b.n	8004b92 <HAL_RCC_OscConfig+0x36e>
 8004b36:	687b      	ldr	r3, [r7, #4]
 8004b38:	68db      	ldr	r3, [r3, #12]
 8004b3a:	2b00      	cmp	r3, #0
 8004b3c:	d10c      	bne.n	8004b58 <HAL_RCC_OscConfig+0x334>
 8004b3e:	4b6a      	ldr	r3, [pc, #424]	@ (8004ce8 <HAL_RCC_OscConfig+0x4c4>)
 8004b40:	6a1b      	ldr	r3, [r3, #32]
 8004b42:	4a69      	ldr	r2, [pc, #420]	@ (8004ce8 <HAL_RCC_OscConfig+0x4c4>)
 8004b44:	f023 0301 	bic.w	r3, r3, #1
 8004b48:	6213      	str	r3, [r2, #32]
 8004b4a:	4b67      	ldr	r3, [pc, #412]	@ (8004ce8 <HAL_RCC_OscConfig+0x4c4>)
 8004b4c:	6a1b      	ldr	r3, [r3, #32]
 8004b4e:	4a66      	ldr	r2, [pc, #408]	@ (8004ce8 <HAL_RCC_OscConfig+0x4c4>)
 8004b50:	f023 0304 	bic.w	r3, r3, #4
 8004b54:	6213      	str	r3, [r2, #32]
 8004b56:	e01c      	b.n	8004b92 <HAL_RCC_OscConfig+0x36e>
 8004b58:	687b      	ldr	r3, [r7, #4]
 8004b5a:	68db      	ldr	r3, [r3, #12]
 8004b5c:	2b05      	cmp	r3, #5
 8004b5e:	d10c      	bne.n	8004b7a <HAL_RCC_OscConfig+0x356>
 8004b60:	4b61      	ldr	r3, [pc, #388]	@ (8004ce8 <HAL_RCC_OscConfig+0x4c4>)
 8004b62:	6a1b      	ldr	r3, [r3, #32]
 8004b64:	4a60      	ldr	r2, [pc, #384]	@ (8004ce8 <HAL_RCC_OscConfig+0x4c4>)
 8004b66:	f043 0304 	orr.w	r3, r3, #4
 8004b6a:	6213      	str	r3, [r2, #32]
 8004b6c:	4b5e      	ldr	r3, [pc, #376]	@ (8004ce8 <HAL_RCC_OscConfig+0x4c4>)
 8004b6e:	6a1b      	ldr	r3, [r3, #32]
 8004b70:	4a5d      	ldr	r2, [pc, #372]	@ (8004ce8 <HAL_RCC_OscConfig+0x4c4>)
 8004b72:	f043 0301 	orr.w	r3, r3, #1
 8004b76:	6213      	str	r3, [r2, #32]
 8004b78:	e00b      	b.n	8004b92 <HAL_RCC_OscConfig+0x36e>
 8004b7a:	4b5b      	ldr	r3, [pc, #364]	@ (8004ce8 <HAL_RCC_OscConfig+0x4c4>)
 8004b7c:	6a1b      	ldr	r3, [r3, #32]
 8004b7e:	4a5a      	ldr	r2, [pc, #360]	@ (8004ce8 <HAL_RCC_OscConfig+0x4c4>)
 8004b80:	f023 0301 	bic.w	r3, r3, #1
 8004b84:	6213      	str	r3, [r2, #32]
 8004b86:	4b58      	ldr	r3, [pc, #352]	@ (8004ce8 <HAL_RCC_OscConfig+0x4c4>)
 8004b88:	6a1b      	ldr	r3, [r3, #32]
 8004b8a:	4a57      	ldr	r2, [pc, #348]	@ (8004ce8 <HAL_RCC_OscConfig+0x4c4>)
 8004b8c:	f023 0304 	bic.w	r3, r3, #4
 8004b90:	6213      	str	r3, [r2, #32]
 8004b92:	687b      	ldr	r3, [r7, #4]
 8004b94:	68db      	ldr	r3, [r3, #12]
 8004b96:	2b00      	cmp	r3, #0
 8004b98:	d015      	beq.n	8004bc6 <HAL_RCC_OscConfig+0x3a2>
 8004b9a:	f7fe fdaf 	bl	80036fc <HAL_GetTick>
 8004b9e:	6138      	str	r0, [r7, #16]
 8004ba0:	e00a      	b.n	8004bb8 <HAL_RCC_OscConfig+0x394>
 8004ba2:	f7fe fdab 	bl	80036fc <HAL_GetTick>
 8004ba6:	4602      	mov	r2, r0
 8004ba8:	693b      	ldr	r3, [r7, #16]
 8004baa:	1ad3      	subs	r3, r2, r3
 8004bac:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004bb0:	4293      	cmp	r3, r2
 8004bb2:	d901      	bls.n	8004bb8 <HAL_RCC_OscConfig+0x394>
 8004bb4:	2303      	movs	r3, #3
 8004bb6:	e0b1      	b.n	8004d1c <HAL_RCC_OscConfig+0x4f8>
 8004bb8:	4b4b      	ldr	r3, [pc, #300]	@ (8004ce8 <HAL_RCC_OscConfig+0x4c4>)
 8004bba:	6a1b      	ldr	r3, [r3, #32]
 8004bbc:	f003 0302 	and.w	r3, r3, #2
 8004bc0:	2b00      	cmp	r3, #0
 8004bc2:	d0ee      	beq.n	8004ba2 <HAL_RCC_OscConfig+0x37e>
 8004bc4:	e014      	b.n	8004bf0 <HAL_RCC_OscConfig+0x3cc>
 8004bc6:	f7fe fd99 	bl	80036fc <HAL_GetTick>
 8004bca:	6138      	str	r0, [r7, #16]
 8004bcc:	e00a      	b.n	8004be4 <HAL_RCC_OscConfig+0x3c0>
 8004bce:	f7fe fd95 	bl	80036fc <HAL_GetTick>
 8004bd2:	4602      	mov	r2, r0
 8004bd4:	693b      	ldr	r3, [r7, #16]
 8004bd6:	1ad3      	subs	r3, r2, r3
 8004bd8:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004bdc:	4293      	cmp	r3, r2
 8004bde:	d901      	bls.n	8004be4 <HAL_RCC_OscConfig+0x3c0>
 8004be0:	2303      	movs	r3, #3
 8004be2:	e09b      	b.n	8004d1c <HAL_RCC_OscConfig+0x4f8>
 8004be4:	4b40      	ldr	r3, [pc, #256]	@ (8004ce8 <HAL_RCC_OscConfig+0x4c4>)
 8004be6:	6a1b      	ldr	r3, [r3, #32]
 8004be8:	f003 0302 	and.w	r3, r3, #2
 8004bec:	2b00      	cmp	r3, #0
 8004bee:	d1ee      	bne.n	8004bce <HAL_RCC_OscConfig+0x3aa>
 8004bf0:	7dfb      	ldrb	r3, [r7, #23]
 8004bf2:	2b01      	cmp	r3, #1
 8004bf4:	d105      	bne.n	8004c02 <HAL_RCC_OscConfig+0x3de>
 8004bf6:	4b3c      	ldr	r3, [pc, #240]	@ (8004ce8 <HAL_RCC_OscConfig+0x4c4>)
 8004bf8:	69db      	ldr	r3, [r3, #28]
 8004bfa:	4a3b      	ldr	r2, [pc, #236]	@ (8004ce8 <HAL_RCC_OscConfig+0x4c4>)
 8004bfc:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8004c00:	61d3      	str	r3, [r2, #28]
 8004c02:	687b      	ldr	r3, [r7, #4]
 8004c04:	69db      	ldr	r3, [r3, #28]
 8004c06:	2b00      	cmp	r3, #0
 8004c08:	f000 8087 	beq.w	8004d1a <HAL_RCC_OscConfig+0x4f6>
 8004c0c:	4b36      	ldr	r3, [pc, #216]	@ (8004ce8 <HAL_RCC_OscConfig+0x4c4>)
 8004c0e:	685b      	ldr	r3, [r3, #4]
 8004c10:	f003 030c 	and.w	r3, r3, #12
 8004c14:	2b08      	cmp	r3, #8
 8004c16:	d061      	beq.n	8004cdc <HAL_RCC_OscConfig+0x4b8>
 8004c18:	687b      	ldr	r3, [r7, #4]
 8004c1a:	69db      	ldr	r3, [r3, #28]
 8004c1c:	2b02      	cmp	r3, #2
 8004c1e:	d146      	bne.n	8004cae <HAL_RCC_OscConfig+0x48a>
 8004c20:	4b33      	ldr	r3, [pc, #204]	@ (8004cf0 <HAL_RCC_OscConfig+0x4cc>)
 8004c22:	2200      	movs	r2, #0
 8004c24:	601a      	str	r2, [r3, #0]
 8004c26:	f7fe fd69 	bl	80036fc <HAL_GetTick>
 8004c2a:	6138      	str	r0, [r7, #16]
 8004c2c:	e008      	b.n	8004c40 <HAL_RCC_OscConfig+0x41c>
 8004c2e:	f7fe fd65 	bl	80036fc <HAL_GetTick>
 8004c32:	4602      	mov	r2, r0
 8004c34:	693b      	ldr	r3, [r7, #16]
 8004c36:	1ad3      	subs	r3, r2, r3
 8004c38:	2b02      	cmp	r3, #2
 8004c3a:	d901      	bls.n	8004c40 <HAL_RCC_OscConfig+0x41c>
 8004c3c:	2303      	movs	r3, #3
 8004c3e:	e06d      	b.n	8004d1c <HAL_RCC_OscConfig+0x4f8>
 8004c40:	4b29      	ldr	r3, [pc, #164]	@ (8004ce8 <HAL_RCC_OscConfig+0x4c4>)
 8004c42:	681b      	ldr	r3, [r3, #0]
 8004c44:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004c48:	2b00      	cmp	r3, #0
 8004c4a:	d1f0      	bne.n	8004c2e <HAL_RCC_OscConfig+0x40a>
 8004c4c:	687b      	ldr	r3, [r7, #4]
 8004c4e:	6a1b      	ldr	r3, [r3, #32]
 8004c50:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004c54:	d108      	bne.n	8004c68 <HAL_RCC_OscConfig+0x444>
 8004c56:	4b24      	ldr	r3, [pc, #144]	@ (8004ce8 <HAL_RCC_OscConfig+0x4c4>)
 8004c58:	685b      	ldr	r3, [r3, #4]
 8004c5a:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 8004c5e:	687b      	ldr	r3, [r7, #4]
 8004c60:	689b      	ldr	r3, [r3, #8]
 8004c62:	4921      	ldr	r1, [pc, #132]	@ (8004ce8 <HAL_RCC_OscConfig+0x4c4>)
 8004c64:	4313      	orrs	r3, r2
 8004c66:	604b      	str	r3, [r1, #4]
 8004c68:	4b1f      	ldr	r3, [pc, #124]	@ (8004ce8 <HAL_RCC_OscConfig+0x4c4>)
 8004c6a:	685b      	ldr	r3, [r3, #4]
 8004c6c:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 8004c70:	687b      	ldr	r3, [r7, #4]
 8004c72:	6a19      	ldr	r1, [r3, #32]
 8004c74:	687b      	ldr	r3, [r7, #4]
 8004c76:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004c78:	430b      	orrs	r3, r1
 8004c7a:	491b      	ldr	r1, [pc, #108]	@ (8004ce8 <HAL_RCC_OscConfig+0x4c4>)
 8004c7c:	4313      	orrs	r3, r2
 8004c7e:	604b      	str	r3, [r1, #4]
 8004c80:	4b1b      	ldr	r3, [pc, #108]	@ (8004cf0 <HAL_RCC_OscConfig+0x4cc>)
 8004c82:	2201      	movs	r2, #1
 8004c84:	601a      	str	r2, [r3, #0]
 8004c86:	f7fe fd39 	bl	80036fc <HAL_GetTick>
 8004c8a:	6138      	str	r0, [r7, #16]
 8004c8c:	e008      	b.n	8004ca0 <HAL_RCC_OscConfig+0x47c>
 8004c8e:	f7fe fd35 	bl	80036fc <HAL_GetTick>
 8004c92:	4602      	mov	r2, r0
 8004c94:	693b      	ldr	r3, [r7, #16]
 8004c96:	1ad3      	subs	r3, r2, r3
 8004c98:	2b02      	cmp	r3, #2
 8004c9a:	d901      	bls.n	8004ca0 <HAL_RCC_OscConfig+0x47c>
 8004c9c:	2303      	movs	r3, #3
 8004c9e:	e03d      	b.n	8004d1c <HAL_RCC_OscConfig+0x4f8>
 8004ca0:	4b11      	ldr	r3, [pc, #68]	@ (8004ce8 <HAL_RCC_OscConfig+0x4c4>)
 8004ca2:	681b      	ldr	r3, [r3, #0]
 8004ca4:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004ca8:	2b00      	cmp	r3, #0
 8004caa:	d0f0      	beq.n	8004c8e <HAL_RCC_OscConfig+0x46a>
 8004cac:	e035      	b.n	8004d1a <HAL_RCC_OscConfig+0x4f6>
 8004cae:	4b10      	ldr	r3, [pc, #64]	@ (8004cf0 <HAL_RCC_OscConfig+0x4cc>)
 8004cb0:	2200      	movs	r2, #0
 8004cb2:	601a      	str	r2, [r3, #0]
 8004cb4:	f7fe fd22 	bl	80036fc <HAL_GetTick>
 8004cb8:	6138      	str	r0, [r7, #16]
 8004cba:	e008      	b.n	8004cce <HAL_RCC_OscConfig+0x4aa>
 8004cbc:	f7fe fd1e 	bl	80036fc <HAL_GetTick>
 8004cc0:	4602      	mov	r2, r0
 8004cc2:	693b      	ldr	r3, [r7, #16]
 8004cc4:	1ad3      	subs	r3, r2, r3
 8004cc6:	2b02      	cmp	r3, #2
 8004cc8:	d901      	bls.n	8004cce <HAL_RCC_OscConfig+0x4aa>
 8004cca:	2303      	movs	r3, #3
 8004ccc:	e026      	b.n	8004d1c <HAL_RCC_OscConfig+0x4f8>
 8004cce:	4b06      	ldr	r3, [pc, #24]	@ (8004ce8 <HAL_RCC_OscConfig+0x4c4>)
 8004cd0:	681b      	ldr	r3, [r3, #0]
 8004cd2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004cd6:	2b00      	cmp	r3, #0
 8004cd8:	d1f0      	bne.n	8004cbc <HAL_RCC_OscConfig+0x498>
 8004cda:	e01e      	b.n	8004d1a <HAL_RCC_OscConfig+0x4f6>
 8004cdc:	687b      	ldr	r3, [r7, #4]
 8004cde:	69db      	ldr	r3, [r3, #28]
 8004ce0:	2b01      	cmp	r3, #1
 8004ce2:	d107      	bne.n	8004cf4 <HAL_RCC_OscConfig+0x4d0>
 8004ce4:	2301      	movs	r3, #1
 8004ce6:	e019      	b.n	8004d1c <HAL_RCC_OscConfig+0x4f8>
 8004ce8:	40021000 	.word	0x40021000
 8004cec:	40007000 	.word	0x40007000
 8004cf0:	42420060 	.word	0x42420060
 8004cf4:	4b0b      	ldr	r3, [pc, #44]	@ (8004d24 <HAL_RCC_OscConfig+0x500>)
 8004cf6:	685b      	ldr	r3, [r3, #4]
 8004cf8:	60fb      	str	r3, [r7, #12]
 8004cfa:	68fb      	ldr	r3, [r7, #12]
 8004cfc:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 8004d00:	687b      	ldr	r3, [r7, #4]
 8004d02:	6a1b      	ldr	r3, [r3, #32]
 8004d04:	429a      	cmp	r2, r3
 8004d06:	d106      	bne.n	8004d16 <HAL_RCC_OscConfig+0x4f2>
 8004d08:	68fb      	ldr	r3, [r7, #12]
 8004d0a:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 8004d0e:	687b      	ldr	r3, [r7, #4]
 8004d10:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004d12:	429a      	cmp	r2, r3
 8004d14:	d001      	beq.n	8004d1a <HAL_RCC_OscConfig+0x4f6>
 8004d16:	2301      	movs	r3, #1
 8004d18:	e000      	b.n	8004d1c <HAL_RCC_OscConfig+0x4f8>
 8004d1a:	2300      	movs	r3, #0
 8004d1c:	4618      	mov	r0, r3
 8004d1e:	3718      	adds	r7, #24
 8004d20:	46bd      	mov	sp, r7
 8004d22:	bd80      	pop	{r7, pc}
 8004d24:	40021000 	.word	0x40021000

08004d28 <HAL_RCC_ClockConfig>:
 8004d28:	b580      	push	{r7, lr}
 8004d2a:	b084      	sub	sp, #16
 8004d2c:	af00      	add	r7, sp, #0
 8004d2e:	6078      	str	r0, [r7, #4]
 8004d30:	6039      	str	r1, [r7, #0]
 8004d32:	687b      	ldr	r3, [r7, #4]
 8004d34:	2b00      	cmp	r3, #0
 8004d36:	d101      	bne.n	8004d3c <HAL_RCC_ClockConfig+0x14>
 8004d38:	2301      	movs	r3, #1
 8004d3a:	e0d0      	b.n	8004ede <HAL_RCC_ClockConfig+0x1b6>
 8004d3c:	4b6a      	ldr	r3, [pc, #424]	@ (8004ee8 <HAL_RCC_ClockConfig+0x1c0>)
 8004d3e:	681b      	ldr	r3, [r3, #0]
 8004d40:	f003 0307 	and.w	r3, r3, #7
 8004d44:	683a      	ldr	r2, [r7, #0]
 8004d46:	429a      	cmp	r2, r3
 8004d48:	d910      	bls.n	8004d6c <HAL_RCC_ClockConfig+0x44>
 8004d4a:	4b67      	ldr	r3, [pc, #412]	@ (8004ee8 <HAL_RCC_ClockConfig+0x1c0>)
 8004d4c:	681b      	ldr	r3, [r3, #0]
 8004d4e:	f023 0207 	bic.w	r2, r3, #7
 8004d52:	4965      	ldr	r1, [pc, #404]	@ (8004ee8 <HAL_RCC_ClockConfig+0x1c0>)
 8004d54:	683b      	ldr	r3, [r7, #0]
 8004d56:	4313      	orrs	r3, r2
 8004d58:	600b      	str	r3, [r1, #0]
 8004d5a:	4b63      	ldr	r3, [pc, #396]	@ (8004ee8 <HAL_RCC_ClockConfig+0x1c0>)
 8004d5c:	681b      	ldr	r3, [r3, #0]
 8004d5e:	f003 0307 	and.w	r3, r3, #7
 8004d62:	683a      	ldr	r2, [r7, #0]
 8004d64:	429a      	cmp	r2, r3
 8004d66:	d001      	beq.n	8004d6c <HAL_RCC_ClockConfig+0x44>
 8004d68:	2301      	movs	r3, #1
 8004d6a:	e0b8      	b.n	8004ede <HAL_RCC_ClockConfig+0x1b6>
 8004d6c:	687b      	ldr	r3, [r7, #4]
 8004d6e:	681b      	ldr	r3, [r3, #0]
 8004d70:	f003 0302 	and.w	r3, r3, #2
 8004d74:	2b00      	cmp	r3, #0
 8004d76:	d020      	beq.n	8004dba <HAL_RCC_ClockConfig+0x92>
 8004d78:	687b      	ldr	r3, [r7, #4]
 8004d7a:	681b      	ldr	r3, [r3, #0]
 8004d7c:	f003 0304 	and.w	r3, r3, #4
 8004d80:	2b00      	cmp	r3, #0
 8004d82:	d005      	beq.n	8004d90 <HAL_RCC_ClockConfig+0x68>
 8004d84:	4b59      	ldr	r3, [pc, #356]	@ (8004eec <HAL_RCC_ClockConfig+0x1c4>)
 8004d86:	685b      	ldr	r3, [r3, #4]
 8004d88:	4a58      	ldr	r2, [pc, #352]	@ (8004eec <HAL_RCC_ClockConfig+0x1c4>)
 8004d8a:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8004d8e:	6053      	str	r3, [r2, #4]
 8004d90:	687b      	ldr	r3, [r7, #4]
 8004d92:	681b      	ldr	r3, [r3, #0]
 8004d94:	f003 0308 	and.w	r3, r3, #8
 8004d98:	2b00      	cmp	r3, #0
 8004d9a:	d005      	beq.n	8004da8 <HAL_RCC_ClockConfig+0x80>
 8004d9c:	4b53      	ldr	r3, [pc, #332]	@ (8004eec <HAL_RCC_ClockConfig+0x1c4>)
 8004d9e:	685b      	ldr	r3, [r3, #4]
 8004da0:	4a52      	ldr	r2, [pc, #328]	@ (8004eec <HAL_RCC_ClockConfig+0x1c4>)
 8004da2:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 8004da6:	6053      	str	r3, [r2, #4]
 8004da8:	4b50      	ldr	r3, [pc, #320]	@ (8004eec <HAL_RCC_ClockConfig+0x1c4>)
 8004daa:	685b      	ldr	r3, [r3, #4]
 8004dac:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8004db0:	687b      	ldr	r3, [r7, #4]
 8004db2:	689b      	ldr	r3, [r3, #8]
 8004db4:	494d      	ldr	r1, [pc, #308]	@ (8004eec <HAL_RCC_ClockConfig+0x1c4>)
 8004db6:	4313      	orrs	r3, r2
 8004db8:	604b      	str	r3, [r1, #4]
 8004dba:	687b      	ldr	r3, [r7, #4]
 8004dbc:	681b      	ldr	r3, [r3, #0]
 8004dbe:	f003 0301 	and.w	r3, r3, #1
 8004dc2:	2b00      	cmp	r3, #0
 8004dc4:	d040      	beq.n	8004e48 <HAL_RCC_ClockConfig+0x120>
 8004dc6:	687b      	ldr	r3, [r7, #4]
 8004dc8:	685b      	ldr	r3, [r3, #4]
 8004dca:	2b01      	cmp	r3, #1
 8004dcc:	d107      	bne.n	8004dde <HAL_RCC_ClockConfig+0xb6>
 8004dce:	4b47      	ldr	r3, [pc, #284]	@ (8004eec <HAL_RCC_ClockConfig+0x1c4>)
 8004dd0:	681b      	ldr	r3, [r3, #0]
 8004dd2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004dd6:	2b00      	cmp	r3, #0
 8004dd8:	d115      	bne.n	8004e06 <HAL_RCC_ClockConfig+0xde>
 8004dda:	2301      	movs	r3, #1
 8004ddc:	e07f      	b.n	8004ede <HAL_RCC_ClockConfig+0x1b6>
 8004dde:	687b      	ldr	r3, [r7, #4]
 8004de0:	685b      	ldr	r3, [r3, #4]
 8004de2:	2b02      	cmp	r3, #2
 8004de4:	d107      	bne.n	8004df6 <HAL_RCC_ClockConfig+0xce>
 8004de6:	4b41      	ldr	r3, [pc, #260]	@ (8004eec <HAL_RCC_ClockConfig+0x1c4>)
 8004de8:	681b      	ldr	r3, [r3, #0]
 8004dea:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004dee:	2b00      	cmp	r3, #0
 8004df0:	d109      	bne.n	8004e06 <HAL_RCC_ClockConfig+0xde>
 8004df2:	2301      	movs	r3, #1
 8004df4:	e073      	b.n	8004ede <HAL_RCC_ClockConfig+0x1b6>
 8004df6:	4b3d      	ldr	r3, [pc, #244]	@ (8004eec <HAL_RCC_ClockConfig+0x1c4>)
 8004df8:	681b      	ldr	r3, [r3, #0]
 8004dfa:	f003 0302 	and.w	r3, r3, #2
 8004dfe:	2b00      	cmp	r3, #0
 8004e00:	d101      	bne.n	8004e06 <HAL_RCC_ClockConfig+0xde>
 8004e02:	2301      	movs	r3, #1
 8004e04:	e06b      	b.n	8004ede <HAL_RCC_ClockConfig+0x1b6>
 8004e06:	4b39      	ldr	r3, [pc, #228]	@ (8004eec <HAL_RCC_ClockConfig+0x1c4>)
 8004e08:	685b      	ldr	r3, [r3, #4]
 8004e0a:	f023 0203 	bic.w	r2, r3, #3
 8004e0e:	687b      	ldr	r3, [r7, #4]
 8004e10:	685b      	ldr	r3, [r3, #4]
 8004e12:	4936      	ldr	r1, [pc, #216]	@ (8004eec <HAL_RCC_ClockConfig+0x1c4>)
 8004e14:	4313      	orrs	r3, r2
 8004e16:	604b      	str	r3, [r1, #4]
 8004e18:	f7fe fc70 	bl	80036fc <HAL_GetTick>
 8004e1c:	60f8      	str	r0, [r7, #12]
 8004e1e:	e00a      	b.n	8004e36 <HAL_RCC_ClockConfig+0x10e>
 8004e20:	f7fe fc6c 	bl	80036fc <HAL_GetTick>
 8004e24:	4602      	mov	r2, r0
 8004e26:	68fb      	ldr	r3, [r7, #12]
 8004e28:	1ad3      	subs	r3, r2, r3
 8004e2a:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004e2e:	4293      	cmp	r3, r2
 8004e30:	d901      	bls.n	8004e36 <HAL_RCC_ClockConfig+0x10e>
 8004e32:	2303      	movs	r3, #3
 8004e34:	e053      	b.n	8004ede <HAL_RCC_ClockConfig+0x1b6>
 8004e36:	4b2d      	ldr	r3, [pc, #180]	@ (8004eec <HAL_RCC_ClockConfig+0x1c4>)
 8004e38:	685b      	ldr	r3, [r3, #4]
 8004e3a:	f003 020c 	and.w	r2, r3, #12
 8004e3e:	687b      	ldr	r3, [r7, #4]
 8004e40:	685b      	ldr	r3, [r3, #4]
 8004e42:	009b      	lsls	r3, r3, #2
 8004e44:	429a      	cmp	r2, r3
 8004e46:	d1eb      	bne.n	8004e20 <HAL_RCC_ClockConfig+0xf8>
 8004e48:	4b27      	ldr	r3, [pc, #156]	@ (8004ee8 <HAL_RCC_ClockConfig+0x1c0>)
 8004e4a:	681b      	ldr	r3, [r3, #0]
 8004e4c:	f003 0307 	and.w	r3, r3, #7
 8004e50:	683a      	ldr	r2, [r7, #0]
 8004e52:	429a      	cmp	r2, r3
 8004e54:	d210      	bcs.n	8004e78 <HAL_RCC_ClockConfig+0x150>
 8004e56:	4b24      	ldr	r3, [pc, #144]	@ (8004ee8 <HAL_RCC_ClockConfig+0x1c0>)
 8004e58:	681b      	ldr	r3, [r3, #0]
 8004e5a:	f023 0207 	bic.w	r2, r3, #7
 8004e5e:	4922      	ldr	r1, [pc, #136]	@ (8004ee8 <HAL_RCC_ClockConfig+0x1c0>)
 8004e60:	683b      	ldr	r3, [r7, #0]
 8004e62:	4313      	orrs	r3, r2
 8004e64:	600b      	str	r3, [r1, #0]
 8004e66:	4b20      	ldr	r3, [pc, #128]	@ (8004ee8 <HAL_RCC_ClockConfig+0x1c0>)
 8004e68:	681b      	ldr	r3, [r3, #0]
 8004e6a:	f003 0307 	and.w	r3, r3, #7
 8004e6e:	683a      	ldr	r2, [r7, #0]
 8004e70:	429a      	cmp	r2, r3
 8004e72:	d001      	beq.n	8004e78 <HAL_RCC_ClockConfig+0x150>
 8004e74:	2301      	movs	r3, #1
 8004e76:	e032      	b.n	8004ede <HAL_RCC_ClockConfig+0x1b6>
 8004e78:	687b      	ldr	r3, [r7, #4]
 8004e7a:	681b      	ldr	r3, [r3, #0]
 8004e7c:	f003 0304 	and.w	r3, r3, #4
 8004e80:	2b00      	cmp	r3, #0
 8004e82:	d008      	beq.n	8004e96 <HAL_RCC_ClockConfig+0x16e>
 8004e84:	4b19      	ldr	r3, [pc, #100]	@ (8004eec <HAL_RCC_ClockConfig+0x1c4>)
 8004e86:	685b      	ldr	r3, [r3, #4]
 8004e88:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8004e8c:	687b      	ldr	r3, [r7, #4]
 8004e8e:	68db      	ldr	r3, [r3, #12]
 8004e90:	4916      	ldr	r1, [pc, #88]	@ (8004eec <HAL_RCC_ClockConfig+0x1c4>)
 8004e92:	4313      	orrs	r3, r2
 8004e94:	604b      	str	r3, [r1, #4]
 8004e96:	687b      	ldr	r3, [r7, #4]
 8004e98:	681b      	ldr	r3, [r3, #0]
 8004e9a:	f003 0308 	and.w	r3, r3, #8
 8004e9e:	2b00      	cmp	r3, #0
 8004ea0:	d009      	beq.n	8004eb6 <HAL_RCC_ClockConfig+0x18e>
 8004ea2:	4b12      	ldr	r3, [pc, #72]	@ (8004eec <HAL_RCC_ClockConfig+0x1c4>)
 8004ea4:	685b      	ldr	r3, [r3, #4]
 8004ea6:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8004eaa:	687b      	ldr	r3, [r7, #4]
 8004eac:	691b      	ldr	r3, [r3, #16]
 8004eae:	00db      	lsls	r3, r3, #3
 8004eb0:	490e      	ldr	r1, [pc, #56]	@ (8004eec <HAL_RCC_ClockConfig+0x1c4>)
 8004eb2:	4313      	orrs	r3, r2
 8004eb4:	604b      	str	r3, [r1, #4]
 8004eb6:	f000 f821 	bl	8004efc <HAL_RCC_GetSysClockFreq>
 8004eba:	4602      	mov	r2, r0
 8004ebc:	4b0b      	ldr	r3, [pc, #44]	@ (8004eec <HAL_RCC_ClockConfig+0x1c4>)
 8004ebe:	685b      	ldr	r3, [r3, #4]
 8004ec0:	091b      	lsrs	r3, r3, #4
 8004ec2:	f003 030f 	and.w	r3, r3, #15
 8004ec6:	490a      	ldr	r1, [pc, #40]	@ (8004ef0 <HAL_RCC_ClockConfig+0x1c8>)
 8004ec8:	5ccb      	ldrb	r3, [r1, r3]
 8004eca:	fa22 f303 	lsr.w	r3, r2, r3
 8004ece:	4a09      	ldr	r2, [pc, #36]	@ (8004ef4 <HAL_RCC_ClockConfig+0x1cc>)
 8004ed0:	6013      	str	r3, [r2, #0]
 8004ed2:	4b09      	ldr	r3, [pc, #36]	@ (8004ef8 <HAL_RCC_ClockConfig+0x1d0>)
 8004ed4:	681b      	ldr	r3, [r3, #0]
 8004ed6:	4618      	mov	r0, r3
 8004ed8:	f7fe fbce 	bl	8003678 <HAL_InitTick>
 8004edc:	2300      	movs	r3, #0
 8004ede:	4618      	mov	r0, r3
 8004ee0:	3710      	adds	r7, #16
 8004ee2:	46bd      	mov	sp, r7
 8004ee4:	bd80      	pop	{r7, pc}
 8004ee6:	bf00      	nop
 8004ee8:	40022000 	.word	0x40022000
 8004eec:	40021000 	.word	0x40021000
 8004ef0:	0800bed0 	.word	0x0800bed0
 8004ef4:	20000008 	.word	0x20000008
 8004ef8:	2000000c 	.word	0x2000000c

08004efc <HAL_RCC_GetSysClockFreq>:
 8004efc:	b480      	push	{r7}
 8004efe:	b087      	sub	sp, #28
 8004f00:	af00      	add	r7, sp, #0
 8004f02:	2300      	movs	r3, #0
 8004f04:	60fb      	str	r3, [r7, #12]
 8004f06:	2300      	movs	r3, #0
 8004f08:	60bb      	str	r3, [r7, #8]
 8004f0a:	2300      	movs	r3, #0
 8004f0c:	617b      	str	r3, [r7, #20]
 8004f0e:	2300      	movs	r3, #0
 8004f10:	607b      	str	r3, [r7, #4]
 8004f12:	2300      	movs	r3, #0
 8004f14:	613b      	str	r3, [r7, #16]
 8004f16:	4b1e      	ldr	r3, [pc, #120]	@ (8004f90 <HAL_RCC_GetSysClockFreq+0x94>)
 8004f18:	685b      	ldr	r3, [r3, #4]
 8004f1a:	60fb      	str	r3, [r7, #12]
 8004f1c:	68fb      	ldr	r3, [r7, #12]
 8004f1e:	f003 030c 	and.w	r3, r3, #12
 8004f22:	2b04      	cmp	r3, #4
 8004f24:	d002      	beq.n	8004f2c <HAL_RCC_GetSysClockFreq+0x30>
 8004f26:	2b08      	cmp	r3, #8
 8004f28:	d003      	beq.n	8004f32 <HAL_RCC_GetSysClockFreq+0x36>
 8004f2a:	e027      	b.n	8004f7c <HAL_RCC_GetSysClockFreq+0x80>
 8004f2c:	4b19      	ldr	r3, [pc, #100]	@ (8004f94 <HAL_RCC_GetSysClockFreq+0x98>)
 8004f2e:	613b      	str	r3, [r7, #16]
 8004f30:	e027      	b.n	8004f82 <HAL_RCC_GetSysClockFreq+0x86>
 8004f32:	68fb      	ldr	r3, [r7, #12]
 8004f34:	0c9b      	lsrs	r3, r3, #18
 8004f36:	f003 030f 	and.w	r3, r3, #15
 8004f3a:	4a17      	ldr	r2, [pc, #92]	@ (8004f98 <HAL_RCC_GetSysClockFreq+0x9c>)
 8004f3c:	5cd3      	ldrb	r3, [r2, r3]
 8004f3e:	607b      	str	r3, [r7, #4]
 8004f40:	68fb      	ldr	r3, [r7, #12]
 8004f42:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004f46:	2b00      	cmp	r3, #0
 8004f48:	d010      	beq.n	8004f6c <HAL_RCC_GetSysClockFreq+0x70>
 8004f4a:	4b11      	ldr	r3, [pc, #68]	@ (8004f90 <HAL_RCC_GetSysClockFreq+0x94>)
 8004f4c:	685b      	ldr	r3, [r3, #4]
 8004f4e:	0c5b      	lsrs	r3, r3, #17
 8004f50:	f003 0301 	and.w	r3, r3, #1
 8004f54:	4a11      	ldr	r2, [pc, #68]	@ (8004f9c <HAL_RCC_GetSysClockFreq+0xa0>)
 8004f56:	5cd3      	ldrb	r3, [r2, r3]
 8004f58:	60bb      	str	r3, [r7, #8]
 8004f5a:	687b      	ldr	r3, [r7, #4]
 8004f5c:	4a0d      	ldr	r2, [pc, #52]	@ (8004f94 <HAL_RCC_GetSysClockFreq+0x98>)
 8004f5e:	fb03 f202 	mul.w	r2, r3, r2
 8004f62:	68bb      	ldr	r3, [r7, #8]
 8004f64:	fbb2 f3f3 	udiv	r3, r2, r3
 8004f68:	617b      	str	r3, [r7, #20]
 8004f6a:	e004      	b.n	8004f76 <HAL_RCC_GetSysClockFreq+0x7a>
 8004f6c:	687b      	ldr	r3, [r7, #4]
 8004f6e:	4a0c      	ldr	r2, [pc, #48]	@ (8004fa0 <HAL_RCC_GetSysClockFreq+0xa4>)
 8004f70:	fb02 f303 	mul.w	r3, r2, r3
 8004f74:	617b      	str	r3, [r7, #20]
 8004f76:	697b      	ldr	r3, [r7, #20]
 8004f78:	613b      	str	r3, [r7, #16]
 8004f7a:	e002      	b.n	8004f82 <HAL_RCC_GetSysClockFreq+0x86>
 8004f7c:	4b09      	ldr	r3, [pc, #36]	@ (8004fa4 <HAL_RCC_GetSysClockFreq+0xa8>)
 8004f7e:	613b      	str	r3, [r7, #16]
 8004f80:	bf00      	nop
 8004f82:	693b      	ldr	r3, [r7, #16]
 8004f84:	4618      	mov	r0, r3
 8004f86:	371c      	adds	r7, #28
 8004f88:	46bd      	mov	sp, r7
 8004f8a:	bc80      	pop	{r7}
 8004f8c:	4770      	bx	lr
 8004f8e:	bf00      	nop
 8004f90:	40021000 	.word	0x40021000
 8004f94:	00f42400 	.word	0x00f42400
 8004f98:	0800bee0 	.word	0x0800bee0
 8004f9c:	0800bef0 	.word	0x0800bef0
 8004fa0:	003d0900 	.word	0x003d0900
 8004fa4:	007a1200 	.word	0x007a1200

08004fa8 <HAL_RCC_GetHCLKFreq>:
 8004fa8:	b480      	push	{r7}
 8004faa:	af00      	add	r7, sp, #0
 8004fac:	4b02      	ldr	r3, [pc, #8]	@ (8004fb8 <HAL_RCC_GetHCLKFreq+0x10>)
 8004fae:	681b      	ldr	r3, [r3, #0]
 8004fb0:	4618      	mov	r0, r3
 8004fb2:	46bd      	mov	sp, r7
 8004fb4:	bc80      	pop	{r7}
 8004fb6:	4770      	bx	lr
 8004fb8:	20000008 	.word	0x20000008

08004fbc <HAL_RCC_GetPCLK1Freq>:
 8004fbc:	b580      	push	{r7, lr}
 8004fbe:	af00      	add	r7, sp, #0
 8004fc0:	f7ff fff2 	bl	8004fa8 <HAL_RCC_GetHCLKFreq>
 8004fc4:	4602      	mov	r2, r0
 8004fc6:	4b05      	ldr	r3, [pc, #20]	@ (8004fdc <HAL_RCC_GetPCLK1Freq+0x20>)
 8004fc8:	685b      	ldr	r3, [r3, #4]
 8004fca:	0a1b      	lsrs	r3, r3, #8
 8004fcc:	f003 0307 	and.w	r3, r3, #7
 8004fd0:	4903      	ldr	r1, [pc, #12]	@ (8004fe0 <HAL_RCC_GetPCLK1Freq+0x24>)
 8004fd2:	5ccb      	ldrb	r3, [r1, r3]
 8004fd4:	fa22 f303 	lsr.w	r3, r2, r3
 8004fd8:	4618      	mov	r0, r3
 8004fda:	bd80      	pop	{r7, pc}
 8004fdc:	40021000 	.word	0x40021000
 8004fe0:	0800bec8 	.word	0x0800bec8

08004fe4 <HAL_RCC_GetPCLK2Freq>:
 8004fe4:	b580      	push	{r7, lr}
 8004fe6:	af00      	add	r7, sp, #0
 8004fe8:	f7ff ffde 	bl	8004fa8 <HAL_RCC_GetHCLKFreq>
 8004fec:	4602      	mov	r2, r0
 8004fee:	4b05      	ldr	r3, [pc, #20]	@ (8005004 <HAL_RCC_GetPCLK2Freq+0x20>)
 8004ff0:	685b      	ldr	r3, [r3, #4]
 8004ff2:	0adb      	lsrs	r3, r3, #11
 8004ff4:	f003 0307 	and.w	r3, r3, #7
 8004ff8:	4903      	ldr	r1, [pc, #12]	@ (8005008 <HAL_RCC_GetPCLK2Freq+0x24>)
 8004ffa:	5ccb      	ldrb	r3, [r1, r3]
 8004ffc:	fa22 f303 	lsr.w	r3, r2, r3
 8005000:	4618      	mov	r0, r3
 8005002:	bd80      	pop	{r7, pc}
 8005004:	40021000 	.word	0x40021000
 8005008:	0800bec8 	.word	0x0800bec8

0800500c <RCC_Delay>:
 800500c:	b480      	push	{r7}
 800500e:	b085      	sub	sp, #20
 8005010:	af00      	add	r7, sp, #0
 8005012:	6078      	str	r0, [r7, #4]
 8005014:	4b0a      	ldr	r3, [pc, #40]	@ (8005040 <RCC_Delay+0x34>)
 8005016:	681b      	ldr	r3, [r3, #0]
 8005018:	4a0a      	ldr	r2, [pc, #40]	@ (8005044 <RCC_Delay+0x38>)
 800501a:	fba2 2303 	umull	r2, r3, r2, r3
 800501e:	0a5b      	lsrs	r3, r3, #9
 8005020:	687a      	ldr	r2, [r7, #4]
 8005022:	fb02 f303 	mul.w	r3, r2, r3
 8005026:	60fb      	str	r3, [r7, #12]
 8005028:	bf00      	nop
 800502a:	68fb      	ldr	r3, [r7, #12]
 800502c:	1e5a      	subs	r2, r3, #1
 800502e:	60fa      	str	r2, [r7, #12]
 8005030:	2b00      	cmp	r3, #0
 8005032:	d1f9      	bne.n	8005028 <RCC_Delay+0x1c>
 8005034:	bf00      	nop
 8005036:	bf00      	nop
 8005038:	3714      	adds	r7, #20
 800503a:	46bd      	mov	sp, r7
 800503c:	bc80      	pop	{r7}
 800503e:	4770      	bx	lr
 8005040:	20000008 	.word	0x20000008
 8005044:	10624dd3 	.word	0x10624dd3

08005048 <HAL_RCCEx_PeriphCLKConfig>:
 8005048:	b580      	push	{r7, lr}
 800504a:	b086      	sub	sp, #24
 800504c:	af00      	add	r7, sp, #0
 800504e:	6078      	str	r0, [r7, #4]
 8005050:	2300      	movs	r3, #0
 8005052:	613b      	str	r3, [r7, #16]
 8005054:	2300      	movs	r3, #0
 8005056:	60fb      	str	r3, [r7, #12]
 8005058:	687b      	ldr	r3, [r7, #4]
 800505a:	681b      	ldr	r3, [r3, #0]
 800505c:	f003 0301 	and.w	r3, r3, #1
 8005060:	2b00      	cmp	r3, #0
 8005062:	d07d      	beq.n	8005160 <HAL_RCCEx_PeriphCLKConfig+0x118>
 8005064:	2300      	movs	r3, #0
 8005066:	75fb      	strb	r3, [r7, #23]
 8005068:	4b4f      	ldr	r3, [pc, #316]	@ (80051a8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800506a:	69db      	ldr	r3, [r3, #28]
 800506c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005070:	2b00      	cmp	r3, #0
 8005072:	d10d      	bne.n	8005090 <HAL_RCCEx_PeriphCLKConfig+0x48>
 8005074:	4b4c      	ldr	r3, [pc, #304]	@ (80051a8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8005076:	69db      	ldr	r3, [r3, #28]
 8005078:	4a4b      	ldr	r2, [pc, #300]	@ (80051a8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800507a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800507e:	61d3      	str	r3, [r2, #28]
 8005080:	4b49      	ldr	r3, [pc, #292]	@ (80051a8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8005082:	69db      	ldr	r3, [r3, #28]
 8005084:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005088:	60bb      	str	r3, [r7, #8]
 800508a:	68bb      	ldr	r3, [r7, #8]
 800508c:	2301      	movs	r3, #1
 800508e:	75fb      	strb	r3, [r7, #23]
 8005090:	4b46      	ldr	r3, [pc, #280]	@ (80051ac <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8005092:	681b      	ldr	r3, [r3, #0]
 8005094:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005098:	2b00      	cmp	r3, #0
 800509a:	d118      	bne.n	80050ce <HAL_RCCEx_PeriphCLKConfig+0x86>
 800509c:	4b43      	ldr	r3, [pc, #268]	@ (80051ac <HAL_RCCEx_PeriphCLKConfig+0x164>)
 800509e:	681b      	ldr	r3, [r3, #0]
 80050a0:	4a42      	ldr	r2, [pc, #264]	@ (80051ac <HAL_RCCEx_PeriphCLKConfig+0x164>)
 80050a2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80050a6:	6013      	str	r3, [r2, #0]
 80050a8:	f7fe fb28 	bl	80036fc <HAL_GetTick>
 80050ac:	6138      	str	r0, [r7, #16]
 80050ae:	e008      	b.n	80050c2 <HAL_RCCEx_PeriphCLKConfig+0x7a>
 80050b0:	f7fe fb24 	bl	80036fc <HAL_GetTick>
 80050b4:	4602      	mov	r2, r0
 80050b6:	693b      	ldr	r3, [r7, #16]
 80050b8:	1ad3      	subs	r3, r2, r3
 80050ba:	2b64      	cmp	r3, #100	@ 0x64
 80050bc:	d901      	bls.n	80050c2 <HAL_RCCEx_PeriphCLKConfig+0x7a>
 80050be:	2303      	movs	r3, #3
 80050c0:	e06d      	b.n	800519e <HAL_RCCEx_PeriphCLKConfig+0x156>
 80050c2:	4b3a      	ldr	r3, [pc, #232]	@ (80051ac <HAL_RCCEx_PeriphCLKConfig+0x164>)
 80050c4:	681b      	ldr	r3, [r3, #0]
 80050c6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80050ca:	2b00      	cmp	r3, #0
 80050cc:	d0f0      	beq.n	80050b0 <HAL_RCCEx_PeriphCLKConfig+0x68>
 80050ce:	4b36      	ldr	r3, [pc, #216]	@ (80051a8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80050d0:	6a1b      	ldr	r3, [r3, #32]
 80050d2:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80050d6:	60fb      	str	r3, [r7, #12]
 80050d8:	68fb      	ldr	r3, [r7, #12]
 80050da:	2b00      	cmp	r3, #0
 80050dc:	d02e      	beq.n	800513c <HAL_RCCEx_PeriphCLKConfig+0xf4>
 80050de:	687b      	ldr	r3, [r7, #4]
 80050e0:	685b      	ldr	r3, [r3, #4]
 80050e2:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80050e6:	68fa      	ldr	r2, [r7, #12]
 80050e8:	429a      	cmp	r2, r3
 80050ea:	d027      	beq.n	800513c <HAL_RCCEx_PeriphCLKConfig+0xf4>
 80050ec:	4b2e      	ldr	r3, [pc, #184]	@ (80051a8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80050ee:	6a1b      	ldr	r3, [r3, #32]
 80050f0:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80050f4:	60fb      	str	r3, [r7, #12]
 80050f6:	4b2e      	ldr	r3, [pc, #184]	@ (80051b0 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 80050f8:	2201      	movs	r2, #1
 80050fa:	601a      	str	r2, [r3, #0]
 80050fc:	4b2c      	ldr	r3, [pc, #176]	@ (80051b0 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 80050fe:	2200      	movs	r2, #0
 8005100:	601a      	str	r2, [r3, #0]
 8005102:	4a29      	ldr	r2, [pc, #164]	@ (80051a8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8005104:	68fb      	ldr	r3, [r7, #12]
 8005106:	6213      	str	r3, [r2, #32]
 8005108:	68fb      	ldr	r3, [r7, #12]
 800510a:	f003 0301 	and.w	r3, r3, #1
 800510e:	2b00      	cmp	r3, #0
 8005110:	d014      	beq.n	800513c <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8005112:	f7fe faf3 	bl	80036fc <HAL_GetTick>
 8005116:	6138      	str	r0, [r7, #16]
 8005118:	e00a      	b.n	8005130 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 800511a:	f7fe faef 	bl	80036fc <HAL_GetTick>
 800511e:	4602      	mov	r2, r0
 8005120:	693b      	ldr	r3, [r7, #16]
 8005122:	1ad3      	subs	r3, r2, r3
 8005124:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005128:	4293      	cmp	r3, r2
 800512a:	d901      	bls.n	8005130 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 800512c:	2303      	movs	r3, #3
 800512e:	e036      	b.n	800519e <HAL_RCCEx_PeriphCLKConfig+0x156>
 8005130:	4b1d      	ldr	r3, [pc, #116]	@ (80051a8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8005132:	6a1b      	ldr	r3, [r3, #32]
 8005134:	f003 0302 	and.w	r3, r3, #2
 8005138:	2b00      	cmp	r3, #0
 800513a:	d0ee      	beq.n	800511a <HAL_RCCEx_PeriphCLKConfig+0xd2>
 800513c:	4b1a      	ldr	r3, [pc, #104]	@ (80051a8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800513e:	6a1b      	ldr	r3, [r3, #32]
 8005140:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8005144:	687b      	ldr	r3, [r7, #4]
 8005146:	685b      	ldr	r3, [r3, #4]
 8005148:	4917      	ldr	r1, [pc, #92]	@ (80051a8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800514a:	4313      	orrs	r3, r2
 800514c:	620b      	str	r3, [r1, #32]
 800514e:	7dfb      	ldrb	r3, [r7, #23]
 8005150:	2b01      	cmp	r3, #1
 8005152:	d105      	bne.n	8005160 <HAL_RCCEx_PeriphCLKConfig+0x118>
 8005154:	4b14      	ldr	r3, [pc, #80]	@ (80051a8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8005156:	69db      	ldr	r3, [r3, #28]
 8005158:	4a13      	ldr	r2, [pc, #76]	@ (80051a8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800515a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800515e:	61d3      	str	r3, [r2, #28]
 8005160:	687b      	ldr	r3, [r7, #4]
 8005162:	681b      	ldr	r3, [r3, #0]
 8005164:	f003 0302 	and.w	r3, r3, #2
 8005168:	2b00      	cmp	r3, #0
 800516a:	d008      	beq.n	800517e <HAL_RCCEx_PeriphCLKConfig+0x136>
 800516c:	4b0e      	ldr	r3, [pc, #56]	@ (80051a8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800516e:	685b      	ldr	r3, [r3, #4]
 8005170:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 8005174:	687b      	ldr	r3, [r7, #4]
 8005176:	689b      	ldr	r3, [r3, #8]
 8005178:	490b      	ldr	r1, [pc, #44]	@ (80051a8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800517a:	4313      	orrs	r3, r2
 800517c:	604b      	str	r3, [r1, #4]
 800517e:	687b      	ldr	r3, [r7, #4]
 8005180:	681b      	ldr	r3, [r3, #0]
 8005182:	f003 0310 	and.w	r3, r3, #16
 8005186:	2b00      	cmp	r3, #0
 8005188:	d008      	beq.n	800519c <HAL_RCCEx_PeriphCLKConfig+0x154>
 800518a:	4b07      	ldr	r3, [pc, #28]	@ (80051a8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800518c:	685b      	ldr	r3, [r3, #4]
 800518e:	f423 0280 	bic.w	r2, r3, #4194304	@ 0x400000
 8005192:	687b      	ldr	r3, [r7, #4]
 8005194:	68db      	ldr	r3, [r3, #12]
 8005196:	4904      	ldr	r1, [pc, #16]	@ (80051a8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8005198:	4313      	orrs	r3, r2
 800519a:	604b      	str	r3, [r1, #4]
 800519c:	2300      	movs	r3, #0
 800519e:	4618      	mov	r0, r3
 80051a0:	3718      	adds	r7, #24
 80051a2:	46bd      	mov	sp, r7
 80051a4:	bd80      	pop	{r7, pc}
 80051a6:	bf00      	nop
 80051a8:	40021000 	.word	0x40021000
 80051ac:	40007000 	.word	0x40007000
 80051b0:	42420440 	.word	0x42420440

080051b4 <HAL_RCCEx_GetPeriphCLKFreq>:
 80051b4:	b580      	push	{r7, lr}
 80051b6:	b088      	sub	sp, #32
 80051b8:	af00      	add	r7, sp, #0
 80051ba:	6078      	str	r0, [r7, #4]
 80051bc:	2300      	movs	r3, #0
 80051be:	617b      	str	r3, [r7, #20]
 80051c0:	2300      	movs	r3, #0
 80051c2:	61fb      	str	r3, [r7, #28]
 80051c4:	2300      	movs	r3, #0
 80051c6:	613b      	str	r3, [r7, #16]
 80051c8:	2300      	movs	r3, #0
 80051ca:	60fb      	str	r3, [r7, #12]
 80051cc:	2300      	movs	r3, #0
 80051ce:	61bb      	str	r3, [r7, #24]
 80051d0:	687b      	ldr	r3, [r7, #4]
 80051d2:	2b10      	cmp	r3, #16
 80051d4:	d00a      	beq.n	80051ec <HAL_RCCEx_GetPeriphCLKFreq+0x38>
 80051d6:	687b      	ldr	r3, [r7, #4]
 80051d8:	2b10      	cmp	r3, #16
 80051da:	f200 8089 	bhi.w	80052f0 <HAL_RCCEx_GetPeriphCLKFreq+0x13c>
 80051de:	687b      	ldr	r3, [r7, #4]
 80051e0:	2b01      	cmp	r3, #1
 80051e2:	d045      	beq.n	8005270 <HAL_RCCEx_GetPeriphCLKFreq+0xbc>
 80051e4:	687b      	ldr	r3, [r7, #4]
 80051e6:	2b02      	cmp	r3, #2
 80051e8:	d074      	beq.n	80052d4 <HAL_RCCEx_GetPeriphCLKFreq+0x120>
 80051ea:	e081      	b.n	80052f0 <HAL_RCCEx_GetPeriphCLKFreq+0x13c>
 80051ec:	4b45      	ldr	r3, [pc, #276]	@ (8005304 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 80051ee:	685b      	ldr	r3, [r3, #4]
 80051f0:	60fb      	str	r3, [r7, #12]
 80051f2:	4b44      	ldr	r3, [pc, #272]	@ (8005304 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 80051f4:	681b      	ldr	r3, [r3, #0]
 80051f6:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 80051fa:	2b00      	cmp	r3, #0
 80051fc:	d07a      	beq.n	80052f4 <HAL_RCCEx_GetPeriphCLKFreq+0x140>
 80051fe:	68fb      	ldr	r3, [r7, #12]
 8005200:	0c9b      	lsrs	r3, r3, #18
 8005202:	f003 030f 	and.w	r3, r3, #15
 8005206:	4a40      	ldr	r2, [pc, #256]	@ (8005308 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8005208:	5cd3      	ldrb	r3, [r2, r3]
 800520a:	613b      	str	r3, [r7, #16]
 800520c:	68fb      	ldr	r3, [r7, #12]
 800520e:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8005212:	2b00      	cmp	r3, #0
 8005214:	d015      	beq.n	8005242 <HAL_RCCEx_GetPeriphCLKFreq+0x8e>
 8005216:	4b3b      	ldr	r3, [pc, #236]	@ (8005304 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 8005218:	685b      	ldr	r3, [r3, #4]
 800521a:	0c5b      	lsrs	r3, r3, #17
 800521c:	f003 0301 	and.w	r3, r3, #1
 8005220:	4a3a      	ldr	r2, [pc, #232]	@ (800530c <HAL_RCCEx_GetPeriphCLKFreq+0x158>)
 8005222:	5cd3      	ldrb	r3, [r2, r3]
 8005224:	617b      	str	r3, [r7, #20]
 8005226:	68fb      	ldr	r3, [r7, #12]
 8005228:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800522c:	2b00      	cmp	r3, #0
 800522e:	d00d      	beq.n	800524c <HAL_RCCEx_GetPeriphCLKFreq+0x98>
 8005230:	4a37      	ldr	r2, [pc, #220]	@ (8005310 <HAL_RCCEx_GetPeriphCLKFreq+0x15c>)
 8005232:	697b      	ldr	r3, [r7, #20]
 8005234:	fbb2 f2f3 	udiv	r2, r2, r3
 8005238:	693b      	ldr	r3, [r7, #16]
 800523a:	fb02 f303 	mul.w	r3, r2, r3
 800523e:	61fb      	str	r3, [r7, #28]
 8005240:	e004      	b.n	800524c <HAL_RCCEx_GetPeriphCLKFreq+0x98>
 8005242:	693b      	ldr	r3, [r7, #16]
 8005244:	4a33      	ldr	r2, [pc, #204]	@ (8005314 <HAL_RCCEx_GetPeriphCLKFreq+0x160>)
 8005246:	fb02 f303 	mul.w	r3, r2, r3
 800524a:	61fb      	str	r3, [r7, #28]
 800524c:	4b2d      	ldr	r3, [pc, #180]	@ (8005304 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 800524e:	685b      	ldr	r3, [r3, #4]
 8005250:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005254:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8005258:	d102      	bne.n	8005260 <HAL_RCCEx_GetPeriphCLKFreq+0xac>
 800525a:	69fb      	ldr	r3, [r7, #28]
 800525c:	61bb      	str	r3, [r7, #24]
 800525e:	e049      	b.n	80052f4 <HAL_RCCEx_GetPeriphCLKFreq+0x140>
 8005260:	69fb      	ldr	r3, [r7, #28]
 8005262:	005b      	lsls	r3, r3, #1
 8005264:	4a2c      	ldr	r2, [pc, #176]	@ (8005318 <HAL_RCCEx_GetPeriphCLKFreq+0x164>)
 8005266:	fba2 2303 	umull	r2, r3, r2, r3
 800526a:	085b      	lsrs	r3, r3, #1
 800526c:	61bb      	str	r3, [r7, #24]
 800526e:	e041      	b.n	80052f4 <HAL_RCCEx_GetPeriphCLKFreq+0x140>
 8005270:	4b24      	ldr	r3, [pc, #144]	@ (8005304 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 8005272:	6a1b      	ldr	r3, [r3, #32]
 8005274:	60fb      	str	r3, [r7, #12]
 8005276:	68fb      	ldr	r3, [r7, #12]
 8005278:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800527c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8005280:	d108      	bne.n	8005294 <HAL_RCCEx_GetPeriphCLKFreq+0xe0>
 8005282:	68fb      	ldr	r3, [r7, #12]
 8005284:	f003 0302 	and.w	r3, r3, #2
 8005288:	2b00      	cmp	r3, #0
 800528a:	d003      	beq.n	8005294 <HAL_RCCEx_GetPeriphCLKFreq+0xe0>
 800528c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8005290:	61bb      	str	r3, [r7, #24]
 8005292:	e01e      	b.n	80052d2 <HAL_RCCEx_GetPeriphCLKFreq+0x11e>
 8005294:	68fb      	ldr	r3, [r7, #12]
 8005296:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800529a:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800529e:	d109      	bne.n	80052b4 <HAL_RCCEx_GetPeriphCLKFreq+0x100>
 80052a0:	4b18      	ldr	r3, [pc, #96]	@ (8005304 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 80052a2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80052a4:	f003 0302 	and.w	r3, r3, #2
 80052a8:	2b00      	cmp	r3, #0
 80052aa:	d003      	beq.n	80052b4 <HAL_RCCEx_GetPeriphCLKFreq+0x100>
 80052ac:	f649 4340 	movw	r3, #40000	@ 0x9c40
 80052b0:	61bb      	str	r3, [r7, #24]
 80052b2:	e00e      	b.n	80052d2 <HAL_RCCEx_GetPeriphCLKFreq+0x11e>
 80052b4:	68fb      	ldr	r3, [r7, #12]
 80052b6:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80052ba:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80052be:	d11b      	bne.n	80052f8 <HAL_RCCEx_GetPeriphCLKFreq+0x144>
 80052c0:	4b10      	ldr	r3, [pc, #64]	@ (8005304 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 80052c2:	681b      	ldr	r3, [r3, #0]
 80052c4:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80052c8:	2b00      	cmp	r3, #0
 80052ca:	d015      	beq.n	80052f8 <HAL_RCCEx_GetPeriphCLKFreq+0x144>
 80052cc:	4b13      	ldr	r3, [pc, #76]	@ (800531c <HAL_RCCEx_GetPeriphCLKFreq+0x168>)
 80052ce:	61bb      	str	r3, [r7, #24]
 80052d0:	e012      	b.n	80052f8 <HAL_RCCEx_GetPeriphCLKFreq+0x144>
 80052d2:	e011      	b.n	80052f8 <HAL_RCCEx_GetPeriphCLKFreq+0x144>
 80052d4:	f7ff fe86 	bl	8004fe4 <HAL_RCC_GetPCLK2Freq>
 80052d8:	4602      	mov	r2, r0
 80052da:	4b0a      	ldr	r3, [pc, #40]	@ (8005304 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 80052dc:	685b      	ldr	r3, [r3, #4]
 80052de:	0b9b      	lsrs	r3, r3, #14
 80052e0:	f003 0303 	and.w	r3, r3, #3
 80052e4:	3301      	adds	r3, #1
 80052e6:	005b      	lsls	r3, r3, #1
 80052e8:	fbb2 f3f3 	udiv	r3, r2, r3
 80052ec:	61bb      	str	r3, [r7, #24]
 80052ee:	e004      	b.n	80052fa <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 80052f0:	bf00      	nop
 80052f2:	e002      	b.n	80052fa <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 80052f4:	bf00      	nop
 80052f6:	e000      	b.n	80052fa <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 80052f8:	bf00      	nop
 80052fa:	69bb      	ldr	r3, [r7, #24]
 80052fc:	4618      	mov	r0, r3
 80052fe:	3720      	adds	r7, #32
 8005300:	46bd      	mov	sp, r7
 8005302:	bd80      	pop	{r7, pc}
 8005304:	40021000 	.word	0x40021000
 8005308:	0800bef4 	.word	0x0800bef4
 800530c:	0800bf04 	.word	0x0800bf04
 8005310:	00f42400 	.word	0x00f42400
 8005314:	003d0900 	.word	0x003d0900
 8005318:	aaaaaaab 	.word	0xaaaaaaab
 800531c:	0001e848 	.word	0x0001e848

08005320 <HAL_TIM_Base_Init>:
 8005320:	b580      	push	{r7, lr}
 8005322:	b082      	sub	sp, #8
 8005324:	af00      	add	r7, sp, #0
 8005326:	6078      	str	r0, [r7, #4]
 8005328:	687b      	ldr	r3, [r7, #4]
 800532a:	2b00      	cmp	r3, #0
 800532c:	d101      	bne.n	8005332 <HAL_TIM_Base_Init+0x12>
 800532e:	2301      	movs	r3, #1
 8005330:	e041      	b.n	80053b6 <HAL_TIM_Base_Init+0x96>
 8005332:	687b      	ldr	r3, [r7, #4]
 8005334:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8005338:	b2db      	uxtb	r3, r3
 800533a:	2b00      	cmp	r3, #0
 800533c:	d106      	bne.n	800534c <HAL_TIM_Base_Init+0x2c>
 800533e:	687b      	ldr	r3, [r7, #4]
 8005340:	2200      	movs	r2, #0
 8005342:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005346:	6878      	ldr	r0, [r7, #4]
 8005348:	f7fd ffde 	bl	8003308 <HAL_TIM_Base_MspInit>
 800534c:	687b      	ldr	r3, [r7, #4]
 800534e:	2202      	movs	r2, #2
 8005350:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005354:	687b      	ldr	r3, [r7, #4]
 8005356:	681a      	ldr	r2, [r3, #0]
 8005358:	687b      	ldr	r3, [r7, #4]
 800535a:	3304      	adds	r3, #4
 800535c:	4619      	mov	r1, r3
 800535e:	4610      	mov	r0, r2
 8005360:	f000 fa10 	bl	8005784 <TIM_Base_SetConfig>
 8005364:	687b      	ldr	r3, [r7, #4]
 8005366:	2201      	movs	r2, #1
 8005368:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800536c:	687b      	ldr	r3, [r7, #4]
 800536e:	2201      	movs	r2, #1
 8005370:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005374:	687b      	ldr	r3, [r7, #4]
 8005376:	2201      	movs	r2, #1
 8005378:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800537c:	687b      	ldr	r3, [r7, #4]
 800537e:	2201      	movs	r2, #1
 8005380:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005384:	687b      	ldr	r3, [r7, #4]
 8005386:	2201      	movs	r2, #1
 8005388:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800538c:	687b      	ldr	r3, [r7, #4]
 800538e:	2201      	movs	r2, #1
 8005390:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005394:	687b      	ldr	r3, [r7, #4]
 8005396:	2201      	movs	r2, #1
 8005398:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800539c:	687b      	ldr	r3, [r7, #4]
 800539e:	2201      	movs	r2, #1
 80053a0:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80053a4:	687b      	ldr	r3, [r7, #4]
 80053a6:	2201      	movs	r2, #1
 80053a8:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80053ac:	687b      	ldr	r3, [r7, #4]
 80053ae:	2201      	movs	r2, #1
 80053b0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80053b4:	2300      	movs	r3, #0
 80053b6:	4618      	mov	r0, r3
 80053b8:	3708      	adds	r7, #8
 80053ba:	46bd      	mov	sp, r7
 80053bc:	bd80      	pop	{r7, pc}

080053be <HAL_TIM_PWM_Init>:
 80053be:	b580      	push	{r7, lr}
 80053c0:	b082      	sub	sp, #8
 80053c2:	af00      	add	r7, sp, #0
 80053c4:	6078      	str	r0, [r7, #4]
 80053c6:	687b      	ldr	r3, [r7, #4]
 80053c8:	2b00      	cmp	r3, #0
 80053ca:	d101      	bne.n	80053d0 <HAL_TIM_PWM_Init+0x12>
 80053cc:	2301      	movs	r3, #1
 80053ce:	e041      	b.n	8005454 <HAL_TIM_PWM_Init+0x96>
 80053d0:	687b      	ldr	r3, [r7, #4]
 80053d2:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80053d6:	b2db      	uxtb	r3, r3
 80053d8:	2b00      	cmp	r3, #0
 80053da:	d106      	bne.n	80053ea <HAL_TIM_PWM_Init+0x2c>
 80053dc:	687b      	ldr	r3, [r7, #4]
 80053de:	2200      	movs	r2, #0
 80053e0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80053e4:	6878      	ldr	r0, [r7, #4]
 80053e6:	f000 f839 	bl	800545c <HAL_TIM_PWM_MspInit>
 80053ea:	687b      	ldr	r3, [r7, #4]
 80053ec:	2202      	movs	r2, #2
 80053ee:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80053f2:	687b      	ldr	r3, [r7, #4]
 80053f4:	681a      	ldr	r2, [r3, #0]
 80053f6:	687b      	ldr	r3, [r7, #4]
 80053f8:	3304      	adds	r3, #4
 80053fa:	4619      	mov	r1, r3
 80053fc:	4610      	mov	r0, r2
 80053fe:	f000 f9c1 	bl	8005784 <TIM_Base_SetConfig>
 8005402:	687b      	ldr	r3, [r7, #4]
 8005404:	2201      	movs	r2, #1
 8005406:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800540a:	687b      	ldr	r3, [r7, #4]
 800540c:	2201      	movs	r2, #1
 800540e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005412:	687b      	ldr	r3, [r7, #4]
 8005414:	2201      	movs	r2, #1
 8005416:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800541a:	687b      	ldr	r3, [r7, #4]
 800541c:	2201      	movs	r2, #1
 800541e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005422:	687b      	ldr	r3, [r7, #4]
 8005424:	2201      	movs	r2, #1
 8005426:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800542a:	687b      	ldr	r3, [r7, #4]
 800542c:	2201      	movs	r2, #1
 800542e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005432:	687b      	ldr	r3, [r7, #4]
 8005434:	2201      	movs	r2, #1
 8005436:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800543a:	687b      	ldr	r3, [r7, #4]
 800543c:	2201      	movs	r2, #1
 800543e:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8005442:	687b      	ldr	r3, [r7, #4]
 8005444:	2201      	movs	r2, #1
 8005446:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800544a:	687b      	ldr	r3, [r7, #4]
 800544c:	2201      	movs	r2, #1
 800544e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005452:	2300      	movs	r3, #0
 8005454:	4618      	mov	r0, r3
 8005456:	3708      	adds	r7, #8
 8005458:	46bd      	mov	sp, r7
 800545a:	bd80      	pop	{r7, pc}

0800545c <HAL_TIM_PWM_MspInit>:
 800545c:	b480      	push	{r7}
 800545e:	b083      	sub	sp, #12
 8005460:	af00      	add	r7, sp, #0
 8005462:	6078      	str	r0, [r7, #4]
 8005464:	bf00      	nop
 8005466:	370c      	adds	r7, #12
 8005468:	46bd      	mov	sp, r7
 800546a:	bc80      	pop	{r7}
 800546c:	4770      	bx	lr
	...

08005470 <HAL_TIM_PWM_ConfigChannel>:
 8005470:	b580      	push	{r7, lr}
 8005472:	b086      	sub	sp, #24
 8005474:	af00      	add	r7, sp, #0
 8005476:	60f8      	str	r0, [r7, #12]
 8005478:	60b9      	str	r1, [r7, #8]
 800547a:	607a      	str	r2, [r7, #4]
 800547c:	2300      	movs	r3, #0
 800547e:	75fb      	strb	r3, [r7, #23]
 8005480:	68fb      	ldr	r3, [r7, #12]
 8005482:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005486:	2b01      	cmp	r3, #1
 8005488:	d101      	bne.n	800548e <HAL_TIM_PWM_ConfigChannel+0x1e>
 800548a:	2302      	movs	r3, #2
 800548c:	e0ae      	b.n	80055ec <HAL_TIM_PWM_ConfigChannel+0x17c>
 800548e:	68fb      	ldr	r3, [r7, #12]
 8005490:	2201      	movs	r2, #1
 8005492:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005496:	687b      	ldr	r3, [r7, #4]
 8005498:	2b0c      	cmp	r3, #12
 800549a:	f200 809f 	bhi.w	80055dc <HAL_TIM_PWM_ConfigChannel+0x16c>
 800549e:	a201      	add	r2, pc, #4	@ (adr r2, 80054a4 <HAL_TIM_PWM_ConfigChannel+0x34>)
 80054a0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80054a4:	080054d9 	.word	0x080054d9
 80054a8:	080055dd 	.word	0x080055dd
 80054ac:	080055dd 	.word	0x080055dd
 80054b0:	080055dd 	.word	0x080055dd
 80054b4:	08005519 	.word	0x08005519
 80054b8:	080055dd 	.word	0x080055dd
 80054bc:	080055dd 	.word	0x080055dd
 80054c0:	080055dd 	.word	0x080055dd
 80054c4:	0800555b 	.word	0x0800555b
 80054c8:	080055dd 	.word	0x080055dd
 80054cc:	080055dd 	.word	0x080055dd
 80054d0:	080055dd 	.word	0x080055dd
 80054d4:	0800559b 	.word	0x0800559b
 80054d8:	68fb      	ldr	r3, [r7, #12]
 80054da:	681b      	ldr	r3, [r3, #0]
 80054dc:	68b9      	ldr	r1, [r7, #8]
 80054de:	4618      	mov	r0, r3
 80054e0:	f000 f9b2 	bl	8005848 <TIM_OC1_SetConfig>
 80054e4:	68fb      	ldr	r3, [r7, #12]
 80054e6:	681b      	ldr	r3, [r3, #0]
 80054e8:	699a      	ldr	r2, [r3, #24]
 80054ea:	68fb      	ldr	r3, [r7, #12]
 80054ec:	681b      	ldr	r3, [r3, #0]
 80054ee:	f042 0208 	orr.w	r2, r2, #8
 80054f2:	619a      	str	r2, [r3, #24]
 80054f4:	68fb      	ldr	r3, [r7, #12]
 80054f6:	681b      	ldr	r3, [r3, #0]
 80054f8:	699a      	ldr	r2, [r3, #24]
 80054fa:	68fb      	ldr	r3, [r7, #12]
 80054fc:	681b      	ldr	r3, [r3, #0]
 80054fe:	f022 0204 	bic.w	r2, r2, #4
 8005502:	619a      	str	r2, [r3, #24]
 8005504:	68fb      	ldr	r3, [r7, #12]
 8005506:	681b      	ldr	r3, [r3, #0]
 8005508:	6999      	ldr	r1, [r3, #24]
 800550a:	68bb      	ldr	r3, [r7, #8]
 800550c:	691a      	ldr	r2, [r3, #16]
 800550e:	68fb      	ldr	r3, [r7, #12]
 8005510:	681b      	ldr	r3, [r3, #0]
 8005512:	430a      	orrs	r2, r1
 8005514:	619a      	str	r2, [r3, #24]
 8005516:	e064      	b.n	80055e2 <HAL_TIM_PWM_ConfigChannel+0x172>
 8005518:	68fb      	ldr	r3, [r7, #12]
 800551a:	681b      	ldr	r3, [r3, #0]
 800551c:	68b9      	ldr	r1, [r7, #8]
 800551e:	4618      	mov	r0, r3
 8005520:	f000 f9f8 	bl	8005914 <TIM_OC2_SetConfig>
 8005524:	68fb      	ldr	r3, [r7, #12]
 8005526:	681b      	ldr	r3, [r3, #0]
 8005528:	699a      	ldr	r2, [r3, #24]
 800552a:	68fb      	ldr	r3, [r7, #12]
 800552c:	681b      	ldr	r3, [r3, #0]
 800552e:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8005532:	619a      	str	r2, [r3, #24]
 8005534:	68fb      	ldr	r3, [r7, #12]
 8005536:	681b      	ldr	r3, [r3, #0]
 8005538:	699a      	ldr	r2, [r3, #24]
 800553a:	68fb      	ldr	r3, [r7, #12]
 800553c:	681b      	ldr	r3, [r3, #0]
 800553e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005542:	619a      	str	r2, [r3, #24]
 8005544:	68fb      	ldr	r3, [r7, #12]
 8005546:	681b      	ldr	r3, [r3, #0]
 8005548:	6999      	ldr	r1, [r3, #24]
 800554a:	68bb      	ldr	r3, [r7, #8]
 800554c:	691b      	ldr	r3, [r3, #16]
 800554e:	021a      	lsls	r2, r3, #8
 8005550:	68fb      	ldr	r3, [r7, #12]
 8005552:	681b      	ldr	r3, [r3, #0]
 8005554:	430a      	orrs	r2, r1
 8005556:	619a      	str	r2, [r3, #24]
 8005558:	e043      	b.n	80055e2 <HAL_TIM_PWM_ConfigChannel+0x172>
 800555a:	68fb      	ldr	r3, [r7, #12]
 800555c:	681b      	ldr	r3, [r3, #0]
 800555e:	68b9      	ldr	r1, [r7, #8]
 8005560:	4618      	mov	r0, r3
 8005562:	f000 fa41 	bl	80059e8 <TIM_OC3_SetConfig>
 8005566:	68fb      	ldr	r3, [r7, #12]
 8005568:	681b      	ldr	r3, [r3, #0]
 800556a:	69da      	ldr	r2, [r3, #28]
 800556c:	68fb      	ldr	r3, [r7, #12]
 800556e:	681b      	ldr	r3, [r3, #0]
 8005570:	f042 0208 	orr.w	r2, r2, #8
 8005574:	61da      	str	r2, [r3, #28]
 8005576:	68fb      	ldr	r3, [r7, #12]
 8005578:	681b      	ldr	r3, [r3, #0]
 800557a:	69da      	ldr	r2, [r3, #28]
 800557c:	68fb      	ldr	r3, [r7, #12]
 800557e:	681b      	ldr	r3, [r3, #0]
 8005580:	f022 0204 	bic.w	r2, r2, #4
 8005584:	61da      	str	r2, [r3, #28]
 8005586:	68fb      	ldr	r3, [r7, #12]
 8005588:	681b      	ldr	r3, [r3, #0]
 800558a:	69d9      	ldr	r1, [r3, #28]
 800558c:	68bb      	ldr	r3, [r7, #8]
 800558e:	691a      	ldr	r2, [r3, #16]
 8005590:	68fb      	ldr	r3, [r7, #12]
 8005592:	681b      	ldr	r3, [r3, #0]
 8005594:	430a      	orrs	r2, r1
 8005596:	61da      	str	r2, [r3, #28]
 8005598:	e023      	b.n	80055e2 <HAL_TIM_PWM_ConfigChannel+0x172>
 800559a:	68fb      	ldr	r3, [r7, #12]
 800559c:	681b      	ldr	r3, [r3, #0]
 800559e:	68b9      	ldr	r1, [r7, #8]
 80055a0:	4618      	mov	r0, r3
 80055a2:	f000 fa8b 	bl	8005abc <TIM_OC4_SetConfig>
 80055a6:	68fb      	ldr	r3, [r7, #12]
 80055a8:	681b      	ldr	r3, [r3, #0]
 80055aa:	69da      	ldr	r2, [r3, #28]
 80055ac:	68fb      	ldr	r3, [r7, #12]
 80055ae:	681b      	ldr	r3, [r3, #0]
 80055b0:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80055b4:	61da      	str	r2, [r3, #28]
 80055b6:	68fb      	ldr	r3, [r7, #12]
 80055b8:	681b      	ldr	r3, [r3, #0]
 80055ba:	69da      	ldr	r2, [r3, #28]
 80055bc:	68fb      	ldr	r3, [r7, #12]
 80055be:	681b      	ldr	r3, [r3, #0]
 80055c0:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80055c4:	61da      	str	r2, [r3, #28]
 80055c6:	68fb      	ldr	r3, [r7, #12]
 80055c8:	681b      	ldr	r3, [r3, #0]
 80055ca:	69d9      	ldr	r1, [r3, #28]
 80055cc:	68bb      	ldr	r3, [r7, #8]
 80055ce:	691b      	ldr	r3, [r3, #16]
 80055d0:	021a      	lsls	r2, r3, #8
 80055d2:	68fb      	ldr	r3, [r7, #12]
 80055d4:	681b      	ldr	r3, [r3, #0]
 80055d6:	430a      	orrs	r2, r1
 80055d8:	61da      	str	r2, [r3, #28]
 80055da:	e002      	b.n	80055e2 <HAL_TIM_PWM_ConfigChannel+0x172>
 80055dc:	2301      	movs	r3, #1
 80055de:	75fb      	strb	r3, [r7, #23]
 80055e0:	bf00      	nop
 80055e2:	68fb      	ldr	r3, [r7, #12]
 80055e4:	2200      	movs	r2, #0
 80055e6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80055ea:	7dfb      	ldrb	r3, [r7, #23]
 80055ec:	4618      	mov	r0, r3
 80055ee:	3718      	adds	r7, #24
 80055f0:	46bd      	mov	sp, r7
 80055f2:	bd80      	pop	{r7, pc}

080055f4 <HAL_TIM_ConfigClockSource>:
 80055f4:	b580      	push	{r7, lr}
 80055f6:	b084      	sub	sp, #16
 80055f8:	af00      	add	r7, sp, #0
 80055fa:	6078      	str	r0, [r7, #4]
 80055fc:	6039      	str	r1, [r7, #0]
 80055fe:	2300      	movs	r3, #0
 8005600:	73fb      	strb	r3, [r7, #15]
 8005602:	687b      	ldr	r3, [r7, #4]
 8005604:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005608:	2b01      	cmp	r3, #1
 800560a:	d101      	bne.n	8005610 <HAL_TIM_ConfigClockSource+0x1c>
 800560c:	2302      	movs	r3, #2
 800560e:	e0b4      	b.n	800577a <HAL_TIM_ConfigClockSource+0x186>
 8005610:	687b      	ldr	r3, [r7, #4]
 8005612:	2201      	movs	r2, #1
 8005614:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005618:	687b      	ldr	r3, [r7, #4]
 800561a:	2202      	movs	r2, #2
 800561c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005620:	687b      	ldr	r3, [r7, #4]
 8005622:	681b      	ldr	r3, [r3, #0]
 8005624:	689b      	ldr	r3, [r3, #8]
 8005626:	60bb      	str	r3, [r7, #8]
 8005628:	68bb      	ldr	r3, [r7, #8]
 800562a:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 800562e:	60bb      	str	r3, [r7, #8]
 8005630:	68bb      	ldr	r3, [r7, #8]
 8005632:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8005636:	60bb      	str	r3, [r7, #8]
 8005638:	687b      	ldr	r3, [r7, #4]
 800563a:	681b      	ldr	r3, [r3, #0]
 800563c:	68ba      	ldr	r2, [r7, #8]
 800563e:	609a      	str	r2, [r3, #8]
 8005640:	683b      	ldr	r3, [r7, #0]
 8005642:	681b      	ldr	r3, [r3, #0]
 8005644:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8005648:	d03e      	beq.n	80056c8 <HAL_TIM_ConfigClockSource+0xd4>
 800564a:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800564e:	f200 8087 	bhi.w	8005760 <HAL_TIM_ConfigClockSource+0x16c>
 8005652:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005656:	f000 8086 	beq.w	8005766 <HAL_TIM_ConfigClockSource+0x172>
 800565a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800565e:	d87f      	bhi.n	8005760 <HAL_TIM_ConfigClockSource+0x16c>
 8005660:	2b70      	cmp	r3, #112	@ 0x70
 8005662:	d01a      	beq.n	800569a <HAL_TIM_ConfigClockSource+0xa6>
 8005664:	2b70      	cmp	r3, #112	@ 0x70
 8005666:	d87b      	bhi.n	8005760 <HAL_TIM_ConfigClockSource+0x16c>
 8005668:	2b60      	cmp	r3, #96	@ 0x60
 800566a:	d050      	beq.n	800570e <HAL_TIM_ConfigClockSource+0x11a>
 800566c:	2b60      	cmp	r3, #96	@ 0x60
 800566e:	d877      	bhi.n	8005760 <HAL_TIM_ConfigClockSource+0x16c>
 8005670:	2b50      	cmp	r3, #80	@ 0x50
 8005672:	d03c      	beq.n	80056ee <HAL_TIM_ConfigClockSource+0xfa>
 8005674:	2b50      	cmp	r3, #80	@ 0x50
 8005676:	d873      	bhi.n	8005760 <HAL_TIM_ConfigClockSource+0x16c>
 8005678:	2b40      	cmp	r3, #64	@ 0x40
 800567a:	d058      	beq.n	800572e <HAL_TIM_ConfigClockSource+0x13a>
 800567c:	2b40      	cmp	r3, #64	@ 0x40
 800567e:	d86f      	bhi.n	8005760 <HAL_TIM_ConfigClockSource+0x16c>
 8005680:	2b30      	cmp	r3, #48	@ 0x30
 8005682:	d064      	beq.n	800574e <HAL_TIM_ConfigClockSource+0x15a>
 8005684:	2b30      	cmp	r3, #48	@ 0x30
 8005686:	d86b      	bhi.n	8005760 <HAL_TIM_ConfigClockSource+0x16c>
 8005688:	2b20      	cmp	r3, #32
 800568a:	d060      	beq.n	800574e <HAL_TIM_ConfigClockSource+0x15a>
 800568c:	2b20      	cmp	r3, #32
 800568e:	d867      	bhi.n	8005760 <HAL_TIM_ConfigClockSource+0x16c>
 8005690:	2b00      	cmp	r3, #0
 8005692:	d05c      	beq.n	800574e <HAL_TIM_ConfigClockSource+0x15a>
 8005694:	2b10      	cmp	r3, #16
 8005696:	d05a      	beq.n	800574e <HAL_TIM_ConfigClockSource+0x15a>
 8005698:	e062      	b.n	8005760 <HAL_TIM_ConfigClockSource+0x16c>
 800569a:	687b      	ldr	r3, [r7, #4]
 800569c:	6818      	ldr	r0, [r3, #0]
 800569e:	683b      	ldr	r3, [r7, #0]
 80056a0:	6899      	ldr	r1, [r3, #8]
 80056a2:	683b      	ldr	r3, [r7, #0]
 80056a4:	685a      	ldr	r2, [r3, #4]
 80056a6:	683b      	ldr	r3, [r7, #0]
 80056a8:	68db      	ldr	r3, [r3, #12]
 80056aa:	f000 facc 	bl	8005c46 <TIM_ETR_SetConfig>
 80056ae:	687b      	ldr	r3, [r7, #4]
 80056b0:	681b      	ldr	r3, [r3, #0]
 80056b2:	689b      	ldr	r3, [r3, #8]
 80056b4:	60bb      	str	r3, [r7, #8]
 80056b6:	68bb      	ldr	r3, [r7, #8]
 80056b8:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 80056bc:	60bb      	str	r3, [r7, #8]
 80056be:	687b      	ldr	r3, [r7, #4]
 80056c0:	681b      	ldr	r3, [r3, #0]
 80056c2:	68ba      	ldr	r2, [r7, #8]
 80056c4:	609a      	str	r2, [r3, #8]
 80056c6:	e04f      	b.n	8005768 <HAL_TIM_ConfigClockSource+0x174>
 80056c8:	687b      	ldr	r3, [r7, #4]
 80056ca:	6818      	ldr	r0, [r3, #0]
 80056cc:	683b      	ldr	r3, [r7, #0]
 80056ce:	6899      	ldr	r1, [r3, #8]
 80056d0:	683b      	ldr	r3, [r7, #0]
 80056d2:	685a      	ldr	r2, [r3, #4]
 80056d4:	683b      	ldr	r3, [r7, #0]
 80056d6:	68db      	ldr	r3, [r3, #12]
 80056d8:	f000 fab5 	bl	8005c46 <TIM_ETR_SetConfig>
 80056dc:	687b      	ldr	r3, [r7, #4]
 80056de:	681b      	ldr	r3, [r3, #0]
 80056e0:	689a      	ldr	r2, [r3, #8]
 80056e2:	687b      	ldr	r3, [r7, #4]
 80056e4:	681b      	ldr	r3, [r3, #0]
 80056e6:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80056ea:	609a      	str	r2, [r3, #8]
 80056ec:	e03c      	b.n	8005768 <HAL_TIM_ConfigClockSource+0x174>
 80056ee:	687b      	ldr	r3, [r7, #4]
 80056f0:	6818      	ldr	r0, [r3, #0]
 80056f2:	683b      	ldr	r3, [r7, #0]
 80056f4:	6859      	ldr	r1, [r3, #4]
 80056f6:	683b      	ldr	r3, [r7, #0]
 80056f8:	68db      	ldr	r3, [r3, #12]
 80056fa:	461a      	mov	r2, r3
 80056fc:	f000 fa2c 	bl	8005b58 <TIM_TI1_ConfigInputStage>
 8005700:	687b      	ldr	r3, [r7, #4]
 8005702:	681b      	ldr	r3, [r3, #0]
 8005704:	2150      	movs	r1, #80	@ 0x50
 8005706:	4618      	mov	r0, r3
 8005708:	f000 fa83 	bl	8005c12 <TIM_ITRx_SetConfig>
 800570c:	e02c      	b.n	8005768 <HAL_TIM_ConfigClockSource+0x174>
 800570e:	687b      	ldr	r3, [r7, #4]
 8005710:	6818      	ldr	r0, [r3, #0]
 8005712:	683b      	ldr	r3, [r7, #0]
 8005714:	6859      	ldr	r1, [r3, #4]
 8005716:	683b      	ldr	r3, [r7, #0]
 8005718:	68db      	ldr	r3, [r3, #12]
 800571a:	461a      	mov	r2, r3
 800571c:	f000 fa4a 	bl	8005bb4 <TIM_TI2_ConfigInputStage>
 8005720:	687b      	ldr	r3, [r7, #4]
 8005722:	681b      	ldr	r3, [r3, #0]
 8005724:	2160      	movs	r1, #96	@ 0x60
 8005726:	4618      	mov	r0, r3
 8005728:	f000 fa73 	bl	8005c12 <TIM_ITRx_SetConfig>
 800572c:	e01c      	b.n	8005768 <HAL_TIM_ConfigClockSource+0x174>
 800572e:	687b      	ldr	r3, [r7, #4]
 8005730:	6818      	ldr	r0, [r3, #0]
 8005732:	683b      	ldr	r3, [r7, #0]
 8005734:	6859      	ldr	r1, [r3, #4]
 8005736:	683b      	ldr	r3, [r7, #0]
 8005738:	68db      	ldr	r3, [r3, #12]
 800573a:	461a      	mov	r2, r3
 800573c:	f000 fa0c 	bl	8005b58 <TIM_TI1_ConfigInputStage>
 8005740:	687b      	ldr	r3, [r7, #4]
 8005742:	681b      	ldr	r3, [r3, #0]
 8005744:	2140      	movs	r1, #64	@ 0x40
 8005746:	4618      	mov	r0, r3
 8005748:	f000 fa63 	bl	8005c12 <TIM_ITRx_SetConfig>
 800574c:	e00c      	b.n	8005768 <HAL_TIM_ConfigClockSource+0x174>
 800574e:	687b      	ldr	r3, [r7, #4]
 8005750:	681a      	ldr	r2, [r3, #0]
 8005752:	683b      	ldr	r3, [r7, #0]
 8005754:	681b      	ldr	r3, [r3, #0]
 8005756:	4619      	mov	r1, r3
 8005758:	4610      	mov	r0, r2
 800575a:	f000 fa5a 	bl	8005c12 <TIM_ITRx_SetConfig>
 800575e:	e003      	b.n	8005768 <HAL_TIM_ConfigClockSource+0x174>
 8005760:	2301      	movs	r3, #1
 8005762:	73fb      	strb	r3, [r7, #15]
 8005764:	e000      	b.n	8005768 <HAL_TIM_ConfigClockSource+0x174>
 8005766:	bf00      	nop
 8005768:	687b      	ldr	r3, [r7, #4]
 800576a:	2201      	movs	r2, #1
 800576c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005770:	687b      	ldr	r3, [r7, #4]
 8005772:	2200      	movs	r2, #0
 8005774:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005778:	7bfb      	ldrb	r3, [r7, #15]
 800577a:	4618      	mov	r0, r3
 800577c:	3710      	adds	r7, #16
 800577e:	46bd      	mov	sp, r7
 8005780:	bd80      	pop	{r7, pc}
	...

08005784 <TIM_Base_SetConfig>:
 8005784:	b480      	push	{r7}
 8005786:	b085      	sub	sp, #20
 8005788:	af00      	add	r7, sp, #0
 800578a:	6078      	str	r0, [r7, #4]
 800578c:	6039      	str	r1, [r7, #0]
 800578e:	687b      	ldr	r3, [r7, #4]
 8005790:	681b      	ldr	r3, [r3, #0]
 8005792:	60fb      	str	r3, [r7, #12]
 8005794:	687b      	ldr	r3, [r7, #4]
 8005796:	4a29      	ldr	r2, [pc, #164]	@ (800583c <TIM_Base_SetConfig+0xb8>)
 8005798:	4293      	cmp	r3, r2
 800579a:	d00b      	beq.n	80057b4 <TIM_Base_SetConfig+0x30>
 800579c:	687b      	ldr	r3, [r7, #4]
 800579e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80057a2:	d007      	beq.n	80057b4 <TIM_Base_SetConfig+0x30>
 80057a4:	687b      	ldr	r3, [r7, #4]
 80057a6:	4a26      	ldr	r2, [pc, #152]	@ (8005840 <TIM_Base_SetConfig+0xbc>)
 80057a8:	4293      	cmp	r3, r2
 80057aa:	d003      	beq.n	80057b4 <TIM_Base_SetConfig+0x30>
 80057ac:	687b      	ldr	r3, [r7, #4]
 80057ae:	4a25      	ldr	r2, [pc, #148]	@ (8005844 <TIM_Base_SetConfig+0xc0>)
 80057b0:	4293      	cmp	r3, r2
 80057b2:	d108      	bne.n	80057c6 <TIM_Base_SetConfig+0x42>
 80057b4:	68fb      	ldr	r3, [r7, #12]
 80057b6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80057ba:	60fb      	str	r3, [r7, #12]
 80057bc:	683b      	ldr	r3, [r7, #0]
 80057be:	685b      	ldr	r3, [r3, #4]
 80057c0:	68fa      	ldr	r2, [r7, #12]
 80057c2:	4313      	orrs	r3, r2
 80057c4:	60fb      	str	r3, [r7, #12]
 80057c6:	687b      	ldr	r3, [r7, #4]
 80057c8:	4a1c      	ldr	r2, [pc, #112]	@ (800583c <TIM_Base_SetConfig+0xb8>)
 80057ca:	4293      	cmp	r3, r2
 80057cc:	d00b      	beq.n	80057e6 <TIM_Base_SetConfig+0x62>
 80057ce:	687b      	ldr	r3, [r7, #4]
 80057d0:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80057d4:	d007      	beq.n	80057e6 <TIM_Base_SetConfig+0x62>
 80057d6:	687b      	ldr	r3, [r7, #4]
 80057d8:	4a19      	ldr	r2, [pc, #100]	@ (8005840 <TIM_Base_SetConfig+0xbc>)
 80057da:	4293      	cmp	r3, r2
 80057dc:	d003      	beq.n	80057e6 <TIM_Base_SetConfig+0x62>
 80057de:	687b      	ldr	r3, [r7, #4]
 80057e0:	4a18      	ldr	r2, [pc, #96]	@ (8005844 <TIM_Base_SetConfig+0xc0>)
 80057e2:	4293      	cmp	r3, r2
 80057e4:	d108      	bne.n	80057f8 <TIM_Base_SetConfig+0x74>
 80057e6:	68fb      	ldr	r3, [r7, #12]
 80057e8:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80057ec:	60fb      	str	r3, [r7, #12]
 80057ee:	683b      	ldr	r3, [r7, #0]
 80057f0:	68db      	ldr	r3, [r3, #12]
 80057f2:	68fa      	ldr	r2, [r7, #12]
 80057f4:	4313      	orrs	r3, r2
 80057f6:	60fb      	str	r3, [r7, #12]
 80057f8:	68fb      	ldr	r3, [r7, #12]
 80057fa:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 80057fe:	683b      	ldr	r3, [r7, #0]
 8005800:	695b      	ldr	r3, [r3, #20]
 8005802:	4313      	orrs	r3, r2
 8005804:	60fb      	str	r3, [r7, #12]
 8005806:	687b      	ldr	r3, [r7, #4]
 8005808:	68fa      	ldr	r2, [r7, #12]
 800580a:	601a      	str	r2, [r3, #0]
 800580c:	683b      	ldr	r3, [r7, #0]
 800580e:	689a      	ldr	r2, [r3, #8]
 8005810:	687b      	ldr	r3, [r7, #4]
 8005812:	62da      	str	r2, [r3, #44]	@ 0x2c
 8005814:	683b      	ldr	r3, [r7, #0]
 8005816:	681a      	ldr	r2, [r3, #0]
 8005818:	687b      	ldr	r3, [r7, #4]
 800581a:	629a      	str	r2, [r3, #40]	@ 0x28
 800581c:	687b      	ldr	r3, [r7, #4]
 800581e:	4a07      	ldr	r2, [pc, #28]	@ (800583c <TIM_Base_SetConfig+0xb8>)
 8005820:	4293      	cmp	r3, r2
 8005822:	d103      	bne.n	800582c <TIM_Base_SetConfig+0xa8>
 8005824:	683b      	ldr	r3, [r7, #0]
 8005826:	691a      	ldr	r2, [r3, #16]
 8005828:	687b      	ldr	r3, [r7, #4]
 800582a:	631a      	str	r2, [r3, #48]	@ 0x30
 800582c:	687b      	ldr	r3, [r7, #4]
 800582e:	2201      	movs	r2, #1
 8005830:	615a      	str	r2, [r3, #20]
 8005832:	bf00      	nop
 8005834:	3714      	adds	r7, #20
 8005836:	46bd      	mov	sp, r7
 8005838:	bc80      	pop	{r7}
 800583a:	4770      	bx	lr
 800583c:	40012c00 	.word	0x40012c00
 8005840:	40000400 	.word	0x40000400
 8005844:	40000800 	.word	0x40000800

08005848 <TIM_OC1_SetConfig>:
 8005848:	b480      	push	{r7}
 800584a:	b087      	sub	sp, #28
 800584c:	af00      	add	r7, sp, #0
 800584e:	6078      	str	r0, [r7, #4]
 8005850:	6039      	str	r1, [r7, #0]
 8005852:	687b      	ldr	r3, [r7, #4]
 8005854:	6a1b      	ldr	r3, [r3, #32]
 8005856:	617b      	str	r3, [r7, #20]
 8005858:	687b      	ldr	r3, [r7, #4]
 800585a:	6a1b      	ldr	r3, [r3, #32]
 800585c:	f023 0201 	bic.w	r2, r3, #1
 8005860:	687b      	ldr	r3, [r7, #4]
 8005862:	621a      	str	r2, [r3, #32]
 8005864:	687b      	ldr	r3, [r7, #4]
 8005866:	685b      	ldr	r3, [r3, #4]
 8005868:	613b      	str	r3, [r7, #16]
 800586a:	687b      	ldr	r3, [r7, #4]
 800586c:	699b      	ldr	r3, [r3, #24]
 800586e:	60fb      	str	r3, [r7, #12]
 8005870:	68fb      	ldr	r3, [r7, #12]
 8005872:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005876:	60fb      	str	r3, [r7, #12]
 8005878:	68fb      	ldr	r3, [r7, #12]
 800587a:	f023 0303 	bic.w	r3, r3, #3
 800587e:	60fb      	str	r3, [r7, #12]
 8005880:	683b      	ldr	r3, [r7, #0]
 8005882:	681b      	ldr	r3, [r3, #0]
 8005884:	68fa      	ldr	r2, [r7, #12]
 8005886:	4313      	orrs	r3, r2
 8005888:	60fb      	str	r3, [r7, #12]
 800588a:	697b      	ldr	r3, [r7, #20]
 800588c:	f023 0302 	bic.w	r3, r3, #2
 8005890:	617b      	str	r3, [r7, #20]
 8005892:	683b      	ldr	r3, [r7, #0]
 8005894:	689b      	ldr	r3, [r3, #8]
 8005896:	697a      	ldr	r2, [r7, #20]
 8005898:	4313      	orrs	r3, r2
 800589a:	617b      	str	r3, [r7, #20]
 800589c:	687b      	ldr	r3, [r7, #4]
 800589e:	4a1c      	ldr	r2, [pc, #112]	@ (8005910 <TIM_OC1_SetConfig+0xc8>)
 80058a0:	4293      	cmp	r3, r2
 80058a2:	d10c      	bne.n	80058be <TIM_OC1_SetConfig+0x76>
 80058a4:	697b      	ldr	r3, [r7, #20]
 80058a6:	f023 0308 	bic.w	r3, r3, #8
 80058aa:	617b      	str	r3, [r7, #20]
 80058ac:	683b      	ldr	r3, [r7, #0]
 80058ae:	68db      	ldr	r3, [r3, #12]
 80058b0:	697a      	ldr	r2, [r7, #20]
 80058b2:	4313      	orrs	r3, r2
 80058b4:	617b      	str	r3, [r7, #20]
 80058b6:	697b      	ldr	r3, [r7, #20]
 80058b8:	f023 0304 	bic.w	r3, r3, #4
 80058bc:	617b      	str	r3, [r7, #20]
 80058be:	687b      	ldr	r3, [r7, #4]
 80058c0:	4a13      	ldr	r2, [pc, #76]	@ (8005910 <TIM_OC1_SetConfig+0xc8>)
 80058c2:	4293      	cmp	r3, r2
 80058c4:	d111      	bne.n	80058ea <TIM_OC1_SetConfig+0xa2>
 80058c6:	693b      	ldr	r3, [r7, #16]
 80058c8:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80058cc:	613b      	str	r3, [r7, #16]
 80058ce:	693b      	ldr	r3, [r7, #16]
 80058d0:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80058d4:	613b      	str	r3, [r7, #16]
 80058d6:	683b      	ldr	r3, [r7, #0]
 80058d8:	695b      	ldr	r3, [r3, #20]
 80058da:	693a      	ldr	r2, [r7, #16]
 80058dc:	4313      	orrs	r3, r2
 80058de:	613b      	str	r3, [r7, #16]
 80058e0:	683b      	ldr	r3, [r7, #0]
 80058e2:	699b      	ldr	r3, [r3, #24]
 80058e4:	693a      	ldr	r2, [r7, #16]
 80058e6:	4313      	orrs	r3, r2
 80058e8:	613b      	str	r3, [r7, #16]
 80058ea:	687b      	ldr	r3, [r7, #4]
 80058ec:	693a      	ldr	r2, [r7, #16]
 80058ee:	605a      	str	r2, [r3, #4]
 80058f0:	687b      	ldr	r3, [r7, #4]
 80058f2:	68fa      	ldr	r2, [r7, #12]
 80058f4:	619a      	str	r2, [r3, #24]
 80058f6:	683b      	ldr	r3, [r7, #0]
 80058f8:	685a      	ldr	r2, [r3, #4]
 80058fa:	687b      	ldr	r3, [r7, #4]
 80058fc:	635a      	str	r2, [r3, #52]	@ 0x34
 80058fe:	687b      	ldr	r3, [r7, #4]
 8005900:	697a      	ldr	r2, [r7, #20]
 8005902:	621a      	str	r2, [r3, #32]
 8005904:	bf00      	nop
 8005906:	371c      	adds	r7, #28
 8005908:	46bd      	mov	sp, r7
 800590a:	bc80      	pop	{r7}
 800590c:	4770      	bx	lr
 800590e:	bf00      	nop
 8005910:	40012c00 	.word	0x40012c00

08005914 <TIM_OC2_SetConfig>:
 8005914:	b480      	push	{r7}
 8005916:	b087      	sub	sp, #28
 8005918:	af00      	add	r7, sp, #0
 800591a:	6078      	str	r0, [r7, #4]
 800591c:	6039      	str	r1, [r7, #0]
 800591e:	687b      	ldr	r3, [r7, #4]
 8005920:	6a1b      	ldr	r3, [r3, #32]
 8005922:	617b      	str	r3, [r7, #20]
 8005924:	687b      	ldr	r3, [r7, #4]
 8005926:	6a1b      	ldr	r3, [r3, #32]
 8005928:	f023 0210 	bic.w	r2, r3, #16
 800592c:	687b      	ldr	r3, [r7, #4]
 800592e:	621a      	str	r2, [r3, #32]
 8005930:	687b      	ldr	r3, [r7, #4]
 8005932:	685b      	ldr	r3, [r3, #4]
 8005934:	613b      	str	r3, [r7, #16]
 8005936:	687b      	ldr	r3, [r7, #4]
 8005938:	699b      	ldr	r3, [r3, #24]
 800593a:	60fb      	str	r3, [r7, #12]
 800593c:	68fb      	ldr	r3, [r7, #12]
 800593e:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8005942:	60fb      	str	r3, [r7, #12]
 8005944:	68fb      	ldr	r3, [r7, #12]
 8005946:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800594a:	60fb      	str	r3, [r7, #12]
 800594c:	683b      	ldr	r3, [r7, #0]
 800594e:	681b      	ldr	r3, [r3, #0]
 8005950:	021b      	lsls	r3, r3, #8
 8005952:	68fa      	ldr	r2, [r7, #12]
 8005954:	4313      	orrs	r3, r2
 8005956:	60fb      	str	r3, [r7, #12]
 8005958:	697b      	ldr	r3, [r7, #20]
 800595a:	f023 0320 	bic.w	r3, r3, #32
 800595e:	617b      	str	r3, [r7, #20]
 8005960:	683b      	ldr	r3, [r7, #0]
 8005962:	689b      	ldr	r3, [r3, #8]
 8005964:	011b      	lsls	r3, r3, #4
 8005966:	697a      	ldr	r2, [r7, #20]
 8005968:	4313      	orrs	r3, r2
 800596a:	617b      	str	r3, [r7, #20]
 800596c:	687b      	ldr	r3, [r7, #4]
 800596e:	4a1d      	ldr	r2, [pc, #116]	@ (80059e4 <TIM_OC2_SetConfig+0xd0>)
 8005970:	4293      	cmp	r3, r2
 8005972:	d10d      	bne.n	8005990 <TIM_OC2_SetConfig+0x7c>
 8005974:	697b      	ldr	r3, [r7, #20]
 8005976:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800597a:	617b      	str	r3, [r7, #20]
 800597c:	683b      	ldr	r3, [r7, #0]
 800597e:	68db      	ldr	r3, [r3, #12]
 8005980:	011b      	lsls	r3, r3, #4
 8005982:	697a      	ldr	r2, [r7, #20]
 8005984:	4313      	orrs	r3, r2
 8005986:	617b      	str	r3, [r7, #20]
 8005988:	697b      	ldr	r3, [r7, #20]
 800598a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800598e:	617b      	str	r3, [r7, #20]
 8005990:	687b      	ldr	r3, [r7, #4]
 8005992:	4a14      	ldr	r2, [pc, #80]	@ (80059e4 <TIM_OC2_SetConfig+0xd0>)
 8005994:	4293      	cmp	r3, r2
 8005996:	d113      	bne.n	80059c0 <TIM_OC2_SetConfig+0xac>
 8005998:	693b      	ldr	r3, [r7, #16]
 800599a:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800599e:	613b      	str	r3, [r7, #16]
 80059a0:	693b      	ldr	r3, [r7, #16]
 80059a2:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80059a6:	613b      	str	r3, [r7, #16]
 80059a8:	683b      	ldr	r3, [r7, #0]
 80059aa:	695b      	ldr	r3, [r3, #20]
 80059ac:	009b      	lsls	r3, r3, #2
 80059ae:	693a      	ldr	r2, [r7, #16]
 80059b0:	4313      	orrs	r3, r2
 80059b2:	613b      	str	r3, [r7, #16]
 80059b4:	683b      	ldr	r3, [r7, #0]
 80059b6:	699b      	ldr	r3, [r3, #24]
 80059b8:	009b      	lsls	r3, r3, #2
 80059ba:	693a      	ldr	r2, [r7, #16]
 80059bc:	4313      	orrs	r3, r2
 80059be:	613b      	str	r3, [r7, #16]
 80059c0:	687b      	ldr	r3, [r7, #4]
 80059c2:	693a      	ldr	r2, [r7, #16]
 80059c4:	605a      	str	r2, [r3, #4]
 80059c6:	687b      	ldr	r3, [r7, #4]
 80059c8:	68fa      	ldr	r2, [r7, #12]
 80059ca:	619a      	str	r2, [r3, #24]
 80059cc:	683b      	ldr	r3, [r7, #0]
 80059ce:	685a      	ldr	r2, [r3, #4]
 80059d0:	687b      	ldr	r3, [r7, #4]
 80059d2:	639a      	str	r2, [r3, #56]	@ 0x38
 80059d4:	687b      	ldr	r3, [r7, #4]
 80059d6:	697a      	ldr	r2, [r7, #20]
 80059d8:	621a      	str	r2, [r3, #32]
 80059da:	bf00      	nop
 80059dc:	371c      	adds	r7, #28
 80059de:	46bd      	mov	sp, r7
 80059e0:	bc80      	pop	{r7}
 80059e2:	4770      	bx	lr
 80059e4:	40012c00 	.word	0x40012c00

080059e8 <TIM_OC3_SetConfig>:
 80059e8:	b480      	push	{r7}
 80059ea:	b087      	sub	sp, #28
 80059ec:	af00      	add	r7, sp, #0
 80059ee:	6078      	str	r0, [r7, #4]
 80059f0:	6039      	str	r1, [r7, #0]
 80059f2:	687b      	ldr	r3, [r7, #4]
 80059f4:	6a1b      	ldr	r3, [r3, #32]
 80059f6:	617b      	str	r3, [r7, #20]
 80059f8:	687b      	ldr	r3, [r7, #4]
 80059fa:	6a1b      	ldr	r3, [r3, #32]
 80059fc:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8005a00:	687b      	ldr	r3, [r7, #4]
 8005a02:	621a      	str	r2, [r3, #32]
 8005a04:	687b      	ldr	r3, [r7, #4]
 8005a06:	685b      	ldr	r3, [r3, #4]
 8005a08:	613b      	str	r3, [r7, #16]
 8005a0a:	687b      	ldr	r3, [r7, #4]
 8005a0c:	69db      	ldr	r3, [r3, #28]
 8005a0e:	60fb      	str	r3, [r7, #12]
 8005a10:	68fb      	ldr	r3, [r7, #12]
 8005a12:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005a16:	60fb      	str	r3, [r7, #12]
 8005a18:	68fb      	ldr	r3, [r7, #12]
 8005a1a:	f023 0303 	bic.w	r3, r3, #3
 8005a1e:	60fb      	str	r3, [r7, #12]
 8005a20:	683b      	ldr	r3, [r7, #0]
 8005a22:	681b      	ldr	r3, [r3, #0]
 8005a24:	68fa      	ldr	r2, [r7, #12]
 8005a26:	4313      	orrs	r3, r2
 8005a28:	60fb      	str	r3, [r7, #12]
 8005a2a:	697b      	ldr	r3, [r7, #20]
 8005a2c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8005a30:	617b      	str	r3, [r7, #20]
 8005a32:	683b      	ldr	r3, [r7, #0]
 8005a34:	689b      	ldr	r3, [r3, #8]
 8005a36:	021b      	lsls	r3, r3, #8
 8005a38:	697a      	ldr	r2, [r7, #20]
 8005a3a:	4313      	orrs	r3, r2
 8005a3c:	617b      	str	r3, [r7, #20]
 8005a3e:	687b      	ldr	r3, [r7, #4]
 8005a40:	4a1d      	ldr	r2, [pc, #116]	@ (8005ab8 <TIM_OC3_SetConfig+0xd0>)
 8005a42:	4293      	cmp	r3, r2
 8005a44:	d10d      	bne.n	8005a62 <TIM_OC3_SetConfig+0x7a>
 8005a46:	697b      	ldr	r3, [r7, #20]
 8005a48:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8005a4c:	617b      	str	r3, [r7, #20]
 8005a4e:	683b      	ldr	r3, [r7, #0]
 8005a50:	68db      	ldr	r3, [r3, #12]
 8005a52:	021b      	lsls	r3, r3, #8
 8005a54:	697a      	ldr	r2, [r7, #20]
 8005a56:	4313      	orrs	r3, r2
 8005a58:	617b      	str	r3, [r7, #20]
 8005a5a:	697b      	ldr	r3, [r7, #20]
 8005a5c:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8005a60:	617b      	str	r3, [r7, #20]
 8005a62:	687b      	ldr	r3, [r7, #4]
 8005a64:	4a14      	ldr	r2, [pc, #80]	@ (8005ab8 <TIM_OC3_SetConfig+0xd0>)
 8005a66:	4293      	cmp	r3, r2
 8005a68:	d113      	bne.n	8005a92 <TIM_OC3_SetConfig+0xaa>
 8005a6a:	693b      	ldr	r3, [r7, #16]
 8005a6c:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8005a70:	613b      	str	r3, [r7, #16]
 8005a72:	693b      	ldr	r3, [r7, #16]
 8005a74:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8005a78:	613b      	str	r3, [r7, #16]
 8005a7a:	683b      	ldr	r3, [r7, #0]
 8005a7c:	695b      	ldr	r3, [r3, #20]
 8005a7e:	011b      	lsls	r3, r3, #4
 8005a80:	693a      	ldr	r2, [r7, #16]
 8005a82:	4313      	orrs	r3, r2
 8005a84:	613b      	str	r3, [r7, #16]
 8005a86:	683b      	ldr	r3, [r7, #0]
 8005a88:	699b      	ldr	r3, [r3, #24]
 8005a8a:	011b      	lsls	r3, r3, #4
 8005a8c:	693a      	ldr	r2, [r7, #16]
 8005a8e:	4313      	orrs	r3, r2
 8005a90:	613b      	str	r3, [r7, #16]
 8005a92:	687b      	ldr	r3, [r7, #4]
 8005a94:	693a      	ldr	r2, [r7, #16]
 8005a96:	605a      	str	r2, [r3, #4]
 8005a98:	687b      	ldr	r3, [r7, #4]
 8005a9a:	68fa      	ldr	r2, [r7, #12]
 8005a9c:	61da      	str	r2, [r3, #28]
 8005a9e:	683b      	ldr	r3, [r7, #0]
 8005aa0:	685a      	ldr	r2, [r3, #4]
 8005aa2:	687b      	ldr	r3, [r7, #4]
 8005aa4:	63da      	str	r2, [r3, #60]	@ 0x3c
 8005aa6:	687b      	ldr	r3, [r7, #4]
 8005aa8:	697a      	ldr	r2, [r7, #20]
 8005aaa:	621a      	str	r2, [r3, #32]
 8005aac:	bf00      	nop
 8005aae:	371c      	adds	r7, #28
 8005ab0:	46bd      	mov	sp, r7
 8005ab2:	bc80      	pop	{r7}
 8005ab4:	4770      	bx	lr
 8005ab6:	bf00      	nop
 8005ab8:	40012c00 	.word	0x40012c00

08005abc <TIM_OC4_SetConfig>:
 8005abc:	b480      	push	{r7}
 8005abe:	b087      	sub	sp, #28
 8005ac0:	af00      	add	r7, sp, #0
 8005ac2:	6078      	str	r0, [r7, #4]
 8005ac4:	6039      	str	r1, [r7, #0]
 8005ac6:	687b      	ldr	r3, [r7, #4]
 8005ac8:	6a1b      	ldr	r3, [r3, #32]
 8005aca:	613b      	str	r3, [r7, #16]
 8005acc:	687b      	ldr	r3, [r7, #4]
 8005ace:	6a1b      	ldr	r3, [r3, #32]
 8005ad0:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8005ad4:	687b      	ldr	r3, [r7, #4]
 8005ad6:	621a      	str	r2, [r3, #32]
 8005ad8:	687b      	ldr	r3, [r7, #4]
 8005ada:	685b      	ldr	r3, [r3, #4]
 8005adc:	617b      	str	r3, [r7, #20]
 8005ade:	687b      	ldr	r3, [r7, #4]
 8005ae0:	69db      	ldr	r3, [r3, #28]
 8005ae2:	60fb      	str	r3, [r7, #12]
 8005ae4:	68fb      	ldr	r3, [r7, #12]
 8005ae6:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8005aea:	60fb      	str	r3, [r7, #12]
 8005aec:	68fb      	ldr	r3, [r7, #12]
 8005aee:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8005af2:	60fb      	str	r3, [r7, #12]
 8005af4:	683b      	ldr	r3, [r7, #0]
 8005af6:	681b      	ldr	r3, [r3, #0]
 8005af8:	021b      	lsls	r3, r3, #8
 8005afa:	68fa      	ldr	r2, [r7, #12]
 8005afc:	4313      	orrs	r3, r2
 8005afe:	60fb      	str	r3, [r7, #12]
 8005b00:	693b      	ldr	r3, [r7, #16]
 8005b02:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8005b06:	613b      	str	r3, [r7, #16]
 8005b08:	683b      	ldr	r3, [r7, #0]
 8005b0a:	689b      	ldr	r3, [r3, #8]
 8005b0c:	031b      	lsls	r3, r3, #12
 8005b0e:	693a      	ldr	r2, [r7, #16]
 8005b10:	4313      	orrs	r3, r2
 8005b12:	613b      	str	r3, [r7, #16]
 8005b14:	687b      	ldr	r3, [r7, #4]
 8005b16:	4a0f      	ldr	r2, [pc, #60]	@ (8005b54 <TIM_OC4_SetConfig+0x98>)
 8005b18:	4293      	cmp	r3, r2
 8005b1a:	d109      	bne.n	8005b30 <TIM_OC4_SetConfig+0x74>
 8005b1c:	697b      	ldr	r3, [r7, #20]
 8005b1e:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8005b22:	617b      	str	r3, [r7, #20]
 8005b24:	683b      	ldr	r3, [r7, #0]
 8005b26:	695b      	ldr	r3, [r3, #20]
 8005b28:	019b      	lsls	r3, r3, #6
 8005b2a:	697a      	ldr	r2, [r7, #20]
 8005b2c:	4313      	orrs	r3, r2
 8005b2e:	617b      	str	r3, [r7, #20]
 8005b30:	687b      	ldr	r3, [r7, #4]
 8005b32:	697a      	ldr	r2, [r7, #20]
 8005b34:	605a      	str	r2, [r3, #4]
 8005b36:	687b      	ldr	r3, [r7, #4]
 8005b38:	68fa      	ldr	r2, [r7, #12]
 8005b3a:	61da      	str	r2, [r3, #28]
 8005b3c:	683b      	ldr	r3, [r7, #0]
 8005b3e:	685a      	ldr	r2, [r3, #4]
 8005b40:	687b      	ldr	r3, [r7, #4]
 8005b42:	641a      	str	r2, [r3, #64]	@ 0x40
 8005b44:	687b      	ldr	r3, [r7, #4]
 8005b46:	693a      	ldr	r2, [r7, #16]
 8005b48:	621a      	str	r2, [r3, #32]
 8005b4a:	bf00      	nop
 8005b4c:	371c      	adds	r7, #28
 8005b4e:	46bd      	mov	sp, r7
 8005b50:	bc80      	pop	{r7}
 8005b52:	4770      	bx	lr
 8005b54:	40012c00 	.word	0x40012c00

08005b58 <TIM_TI1_ConfigInputStage>:
 8005b58:	b480      	push	{r7}
 8005b5a:	b087      	sub	sp, #28
 8005b5c:	af00      	add	r7, sp, #0
 8005b5e:	60f8      	str	r0, [r7, #12]
 8005b60:	60b9      	str	r1, [r7, #8]
 8005b62:	607a      	str	r2, [r7, #4]
 8005b64:	68fb      	ldr	r3, [r7, #12]
 8005b66:	6a1b      	ldr	r3, [r3, #32]
 8005b68:	617b      	str	r3, [r7, #20]
 8005b6a:	68fb      	ldr	r3, [r7, #12]
 8005b6c:	6a1b      	ldr	r3, [r3, #32]
 8005b6e:	f023 0201 	bic.w	r2, r3, #1
 8005b72:	68fb      	ldr	r3, [r7, #12]
 8005b74:	621a      	str	r2, [r3, #32]
 8005b76:	68fb      	ldr	r3, [r7, #12]
 8005b78:	699b      	ldr	r3, [r3, #24]
 8005b7a:	613b      	str	r3, [r7, #16]
 8005b7c:	693b      	ldr	r3, [r7, #16]
 8005b7e:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8005b82:	613b      	str	r3, [r7, #16]
 8005b84:	687b      	ldr	r3, [r7, #4]
 8005b86:	011b      	lsls	r3, r3, #4
 8005b88:	693a      	ldr	r2, [r7, #16]
 8005b8a:	4313      	orrs	r3, r2
 8005b8c:	613b      	str	r3, [r7, #16]
 8005b8e:	697b      	ldr	r3, [r7, #20]
 8005b90:	f023 030a 	bic.w	r3, r3, #10
 8005b94:	617b      	str	r3, [r7, #20]
 8005b96:	697a      	ldr	r2, [r7, #20]
 8005b98:	68bb      	ldr	r3, [r7, #8]
 8005b9a:	4313      	orrs	r3, r2
 8005b9c:	617b      	str	r3, [r7, #20]
 8005b9e:	68fb      	ldr	r3, [r7, #12]
 8005ba0:	693a      	ldr	r2, [r7, #16]
 8005ba2:	619a      	str	r2, [r3, #24]
 8005ba4:	68fb      	ldr	r3, [r7, #12]
 8005ba6:	697a      	ldr	r2, [r7, #20]
 8005ba8:	621a      	str	r2, [r3, #32]
 8005baa:	bf00      	nop
 8005bac:	371c      	adds	r7, #28
 8005bae:	46bd      	mov	sp, r7
 8005bb0:	bc80      	pop	{r7}
 8005bb2:	4770      	bx	lr

08005bb4 <TIM_TI2_ConfigInputStage>:
 8005bb4:	b480      	push	{r7}
 8005bb6:	b087      	sub	sp, #28
 8005bb8:	af00      	add	r7, sp, #0
 8005bba:	60f8      	str	r0, [r7, #12]
 8005bbc:	60b9      	str	r1, [r7, #8]
 8005bbe:	607a      	str	r2, [r7, #4]
 8005bc0:	68fb      	ldr	r3, [r7, #12]
 8005bc2:	6a1b      	ldr	r3, [r3, #32]
 8005bc4:	617b      	str	r3, [r7, #20]
 8005bc6:	68fb      	ldr	r3, [r7, #12]
 8005bc8:	6a1b      	ldr	r3, [r3, #32]
 8005bca:	f023 0210 	bic.w	r2, r3, #16
 8005bce:	68fb      	ldr	r3, [r7, #12]
 8005bd0:	621a      	str	r2, [r3, #32]
 8005bd2:	68fb      	ldr	r3, [r7, #12]
 8005bd4:	699b      	ldr	r3, [r3, #24]
 8005bd6:	613b      	str	r3, [r7, #16]
 8005bd8:	693b      	ldr	r3, [r7, #16]
 8005bda:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8005bde:	613b      	str	r3, [r7, #16]
 8005be0:	687b      	ldr	r3, [r7, #4]
 8005be2:	031b      	lsls	r3, r3, #12
 8005be4:	693a      	ldr	r2, [r7, #16]
 8005be6:	4313      	orrs	r3, r2
 8005be8:	613b      	str	r3, [r7, #16]
 8005bea:	697b      	ldr	r3, [r7, #20]
 8005bec:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8005bf0:	617b      	str	r3, [r7, #20]
 8005bf2:	68bb      	ldr	r3, [r7, #8]
 8005bf4:	011b      	lsls	r3, r3, #4
 8005bf6:	697a      	ldr	r2, [r7, #20]
 8005bf8:	4313      	orrs	r3, r2
 8005bfa:	617b      	str	r3, [r7, #20]
 8005bfc:	68fb      	ldr	r3, [r7, #12]
 8005bfe:	693a      	ldr	r2, [r7, #16]
 8005c00:	619a      	str	r2, [r3, #24]
 8005c02:	68fb      	ldr	r3, [r7, #12]
 8005c04:	697a      	ldr	r2, [r7, #20]
 8005c06:	621a      	str	r2, [r3, #32]
 8005c08:	bf00      	nop
 8005c0a:	371c      	adds	r7, #28
 8005c0c:	46bd      	mov	sp, r7
 8005c0e:	bc80      	pop	{r7}
 8005c10:	4770      	bx	lr

08005c12 <TIM_ITRx_SetConfig>:
 8005c12:	b480      	push	{r7}
 8005c14:	b085      	sub	sp, #20
 8005c16:	af00      	add	r7, sp, #0
 8005c18:	6078      	str	r0, [r7, #4]
 8005c1a:	6039      	str	r1, [r7, #0]
 8005c1c:	687b      	ldr	r3, [r7, #4]
 8005c1e:	689b      	ldr	r3, [r3, #8]
 8005c20:	60fb      	str	r3, [r7, #12]
 8005c22:	68fb      	ldr	r3, [r7, #12]
 8005c24:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005c28:	60fb      	str	r3, [r7, #12]
 8005c2a:	683a      	ldr	r2, [r7, #0]
 8005c2c:	68fb      	ldr	r3, [r7, #12]
 8005c2e:	4313      	orrs	r3, r2
 8005c30:	f043 0307 	orr.w	r3, r3, #7
 8005c34:	60fb      	str	r3, [r7, #12]
 8005c36:	687b      	ldr	r3, [r7, #4]
 8005c38:	68fa      	ldr	r2, [r7, #12]
 8005c3a:	609a      	str	r2, [r3, #8]
 8005c3c:	bf00      	nop
 8005c3e:	3714      	adds	r7, #20
 8005c40:	46bd      	mov	sp, r7
 8005c42:	bc80      	pop	{r7}
 8005c44:	4770      	bx	lr

08005c46 <TIM_ETR_SetConfig>:
 8005c46:	b480      	push	{r7}
 8005c48:	b087      	sub	sp, #28
 8005c4a:	af00      	add	r7, sp, #0
 8005c4c:	60f8      	str	r0, [r7, #12]
 8005c4e:	60b9      	str	r1, [r7, #8]
 8005c50:	607a      	str	r2, [r7, #4]
 8005c52:	603b      	str	r3, [r7, #0]
 8005c54:	68fb      	ldr	r3, [r7, #12]
 8005c56:	689b      	ldr	r3, [r3, #8]
 8005c58:	617b      	str	r3, [r7, #20]
 8005c5a:	697b      	ldr	r3, [r7, #20]
 8005c5c:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8005c60:	617b      	str	r3, [r7, #20]
 8005c62:	683b      	ldr	r3, [r7, #0]
 8005c64:	021a      	lsls	r2, r3, #8
 8005c66:	687b      	ldr	r3, [r7, #4]
 8005c68:	431a      	orrs	r2, r3
 8005c6a:	68bb      	ldr	r3, [r7, #8]
 8005c6c:	4313      	orrs	r3, r2
 8005c6e:	697a      	ldr	r2, [r7, #20]
 8005c70:	4313      	orrs	r3, r2
 8005c72:	617b      	str	r3, [r7, #20]
 8005c74:	68fb      	ldr	r3, [r7, #12]
 8005c76:	697a      	ldr	r2, [r7, #20]
 8005c78:	609a      	str	r2, [r3, #8]
 8005c7a:	bf00      	nop
 8005c7c:	371c      	adds	r7, #28
 8005c7e:	46bd      	mov	sp, r7
 8005c80:	bc80      	pop	{r7}
 8005c82:	4770      	bx	lr

08005c84 <HAL_TIMEx_MasterConfigSynchronization>:
 8005c84:	b480      	push	{r7}
 8005c86:	b085      	sub	sp, #20
 8005c88:	af00      	add	r7, sp, #0
 8005c8a:	6078      	str	r0, [r7, #4]
 8005c8c:	6039      	str	r1, [r7, #0]
 8005c8e:	687b      	ldr	r3, [r7, #4]
 8005c90:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005c94:	2b01      	cmp	r3, #1
 8005c96:	d101      	bne.n	8005c9c <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8005c98:	2302      	movs	r3, #2
 8005c9a:	e046      	b.n	8005d2a <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8005c9c:	687b      	ldr	r3, [r7, #4]
 8005c9e:	2201      	movs	r2, #1
 8005ca0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005ca4:	687b      	ldr	r3, [r7, #4]
 8005ca6:	2202      	movs	r2, #2
 8005ca8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005cac:	687b      	ldr	r3, [r7, #4]
 8005cae:	681b      	ldr	r3, [r3, #0]
 8005cb0:	685b      	ldr	r3, [r3, #4]
 8005cb2:	60fb      	str	r3, [r7, #12]
 8005cb4:	687b      	ldr	r3, [r7, #4]
 8005cb6:	681b      	ldr	r3, [r3, #0]
 8005cb8:	689b      	ldr	r3, [r3, #8]
 8005cba:	60bb      	str	r3, [r7, #8]
 8005cbc:	68fb      	ldr	r3, [r7, #12]
 8005cbe:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005cc2:	60fb      	str	r3, [r7, #12]
 8005cc4:	683b      	ldr	r3, [r7, #0]
 8005cc6:	681b      	ldr	r3, [r3, #0]
 8005cc8:	68fa      	ldr	r2, [r7, #12]
 8005cca:	4313      	orrs	r3, r2
 8005ccc:	60fb      	str	r3, [r7, #12]
 8005cce:	687b      	ldr	r3, [r7, #4]
 8005cd0:	681b      	ldr	r3, [r3, #0]
 8005cd2:	68fa      	ldr	r2, [r7, #12]
 8005cd4:	605a      	str	r2, [r3, #4]
 8005cd6:	687b      	ldr	r3, [r7, #4]
 8005cd8:	681b      	ldr	r3, [r3, #0]
 8005cda:	4a16      	ldr	r2, [pc, #88]	@ (8005d34 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8005cdc:	4293      	cmp	r3, r2
 8005cde:	d00e      	beq.n	8005cfe <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8005ce0:	687b      	ldr	r3, [r7, #4]
 8005ce2:	681b      	ldr	r3, [r3, #0]
 8005ce4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005ce8:	d009      	beq.n	8005cfe <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8005cea:	687b      	ldr	r3, [r7, #4]
 8005cec:	681b      	ldr	r3, [r3, #0]
 8005cee:	4a12      	ldr	r2, [pc, #72]	@ (8005d38 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8005cf0:	4293      	cmp	r3, r2
 8005cf2:	d004      	beq.n	8005cfe <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8005cf4:	687b      	ldr	r3, [r7, #4]
 8005cf6:	681b      	ldr	r3, [r3, #0]
 8005cf8:	4a10      	ldr	r2, [pc, #64]	@ (8005d3c <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 8005cfa:	4293      	cmp	r3, r2
 8005cfc:	d10c      	bne.n	8005d18 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8005cfe:	68bb      	ldr	r3, [r7, #8]
 8005d00:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8005d04:	60bb      	str	r3, [r7, #8]
 8005d06:	683b      	ldr	r3, [r7, #0]
 8005d08:	685b      	ldr	r3, [r3, #4]
 8005d0a:	68ba      	ldr	r2, [r7, #8]
 8005d0c:	4313      	orrs	r3, r2
 8005d0e:	60bb      	str	r3, [r7, #8]
 8005d10:	687b      	ldr	r3, [r7, #4]
 8005d12:	681b      	ldr	r3, [r3, #0]
 8005d14:	68ba      	ldr	r2, [r7, #8]
 8005d16:	609a      	str	r2, [r3, #8]
 8005d18:	687b      	ldr	r3, [r7, #4]
 8005d1a:	2201      	movs	r2, #1
 8005d1c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005d20:	687b      	ldr	r3, [r7, #4]
 8005d22:	2200      	movs	r2, #0
 8005d24:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005d28:	2300      	movs	r3, #0
 8005d2a:	4618      	mov	r0, r3
 8005d2c:	3714      	adds	r7, #20
 8005d2e:	46bd      	mov	sp, r7
 8005d30:	bc80      	pop	{r7}
 8005d32:	4770      	bx	lr
 8005d34:	40012c00 	.word	0x40012c00
 8005d38:	40000400 	.word	0x40000400
 8005d3c:	40000800 	.word	0x40000800

08005d40 <HAL_UART_Init>:
 8005d40:	b580      	push	{r7, lr}
 8005d42:	b082      	sub	sp, #8
 8005d44:	af00      	add	r7, sp, #0
 8005d46:	6078      	str	r0, [r7, #4]
 8005d48:	687b      	ldr	r3, [r7, #4]
 8005d4a:	2b00      	cmp	r3, #0
 8005d4c:	d101      	bne.n	8005d52 <HAL_UART_Init+0x12>
 8005d4e:	2301      	movs	r3, #1
 8005d50:	e042      	b.n	8005dd8 <HAL_UART_Init+0x98>
 8005d52:	687b      	ldr	r3, [r7, #4]
 8005d54:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005d58:	b2db      	uxtb	r3, r3
 8005d5a:	2b00      	cmp	r3, #0
 8005d5c:	d106      	bne.n	8005d6c <HAL_UART_Init+0x2c>
 8005d5e:	687b      	ldr	r3, [r7, #4]
 8005d60:	2200      	movs	r2, #0
 8005d62:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005d66:	6878      	ldr	r0, [r7, #4]
 8005d68:	f7fd fb1a 	bl	80033a0 <HAL_UART_MspInit>
 8005d6c:	687b      	ldr	r3, [r7, #4]
 8005d6e:	2224      	movs	r2, #36	@ 0x24
 8005d70:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005d74:	687b      	ldr	r3, [r7, #4]
 8005d76:	681b      	ldr	r3, [r3, #0]
 8005d78:	68da      	ldr	r2, [r3, #12]
 8005d7a:	687b      	ldr	r3, [r7, #4]
 8005d7c:	681b      	ldr	r3, [r3, #0]
 8005d7e:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8005d82:	60da      	str	r2, [r3, #12]
 8005d84:	6878      	ldr	r0, [r7, #4]
 8005d86:	f000 fc7f 	bl	8006688 <UART_SetConfig>
 8005d8a:	687b      	ldr	r3, [r7, #4]
 8005d8c:	681b      	ldr	r3, [r3, #0]
 8005d8e:	691a      	ldr	r2, [r3, #16]
 8005d90:	687b      	ldr	r3, [r7, #4]
 8005d92:	681b      	ldr	r3, [r3, #0]
 8005d94:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8005d98:	611a      	str	r2, [r3, #16]
 8005d9a:	687b      	ldr	r3, [r7, #4]
 8005d9c:	681b      	ldr	r3, [r3, #0]
 8005d9e:	695a      	ldr	r2, [r3, #20]
 8005da0:	687b      	ldr	r3, [r7, #4]
 8005da2:	681b      	ldr	r3, [r3, #0]
 8005da4:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8005da8:	615a      	str	r2, [r3, #20]
 8005daa:	687b      	ldr	r3, [r7, #4]
 8005dac:	681b      	ldr	r3, [r3, #0]
 8005dae:	68da      	ldr	r2, [r3, #12]
 8005db0:	687b      	ldr	r3, [r7, #4]
 8005db2:	681b      	ldr	r3, [r3, #0]
 8005db4:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8005db8:	60da      	str	r2, [r3, #12]
 8005dba:	687b      	ldr	r3, [r7, #4]
 8005dbc:	2200      	movs	r2, #0
 8005dbe:	645a      	str	r2, [r3, #68]	@ 0x44
 8005dc0:	687b      	ldr	r3, [r7, #4]
 8005dc2:	2220      	movs	r2, #32
 8005dc4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005dc8:	687b      	ldr	r3, [r7, #4]
 8005dca:	2220      	movs	r2, #32
 8005dcc:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005dd0:	687b      	ldr	r3, [r7, #4]
 8005dd2:	2200      	movs	r2, #0
 8005dd4:	635a      	str	r2, [r3, #52]	@ 0x34
 8005dd6:	2300      	movs	r3, #0
 8005dd8:	4618      	mov	r0, r3
 8005dda:	3708      	adds	r7, #8
 8005ddc:	46bd      	mov	sp, r7
 8005dde:	bd80      	pop	{r7, pc}

08005de0 <HAL_UART_IRQHandler>:
 8005de0:	b580      	push	{r7, lr}
 8005de2:	b0ba      	sub	sp, #232	@ 0xe8
 8005de4:	af00      	add	r7, sp, #0
 8005de6:	6078      	str	r0, [r7, #4]
 8005de8:	687b      	ldr	r3, [r7, #4]
 8005dea:	681b      	ldr	r3, [r3, #0]
 8005dec:	681b      	ldr	r3, [r3, #0]
 8005dee:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8005df2:	687b      	ldr	r3, [r7, #4]
 8005df4:	681b      	ldr	r3, [r3, #0]
 8005df6:	68db      	ldr	r3, [r3, #12]
 8005df8:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8005dfc:	687b      	ldr	r3, [r7, #4]
 8005dfe:	681b      	ldr	r3, [r3, #0]
 8005e00:	695b      	ldr	r3, [r3, #20]
 8005e02:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8005e06:	2300      	movs	r3, #0
 8005e08:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8005e0c:	2300      	movs	r3, #0
 8005e0e:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8005e12:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005e16:	f003 030f 	and.w	r3, r3, #15
 8005e1a:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8005e1e:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8005e22:	2b00      	cmp	r3, #0
 8005e24:	d10f      	bne.n	8005e46 <HAL_UART_IRQHandler+0x66>
 8005e26:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005e2a:	f003 0320 	and.w	r3, r3, #32
 8005e2e:	2b00      	cmp	r3, #0
 8005e30:	d009      	beq.n	8005e46 <HAL_UART_IRQHandler+0x66>
 8005e32:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005e36:	f003 0320 	and.w	r3, r3, #32
 8005e3a:	2b00      	cmp	r3, #0
 8005e3c:	d003      	beq.n	8005e46 <HAL_UART_IRQHandler+0x66>
 8005e3e:	6878      	ldr	r0, [r7, #4]
 8005e40:	f000 fb63 	bl	800650a <UART_Receive_IT>
 8005e44:	e25b      	b.n	80062fe <HAL_UART_IRQHandler+0x51e>
 8005e46:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8005e4a:	2b00      	cmp	r3, #0
 8005e4c:	f000 80de 	beq.w	800600c <HAL_UART_IRQHandler+0x22c>
 8005e50:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8005e54:	f003 0301 	and.w	r3, r3, #1
 8005e58:	2b00      	cmp	r3, #0
 8005e5a:	d106      	bne.n	8005e6a <HAL_UART_IRQHandler+0x8a>
 8005e5c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005e60:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8005e64:	2b00      	cmp	r3, #0
 8005e66:	f000 80d1 	beq.w	800600c <HAL_UART_IRQHandler+0x22c>
 8005e6a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005e6e:	f003 0301 	and.w	r3, r3, #1
 8005e72:	2b00      	cmp	r3, #0
 8005e74:	d00b      	beq.n	8005e8e <HAL_UART_IRQHandler+0xae>
 8005e76:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005e7a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005e7e:	2b00      	cmp	r3, #0
 8005e80:	d005      	beq.n	8005e8e <HAL_UART_IRQHandler+0xae>
 8005e82:	687b      	ldr	r3, [r7, #4]
 8005e84:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005e86:	f043 0201 	orr.w	r2, r3, #1
 8005e8a:	687b      	ldr	r3, [r7, #4]
 8005e8c:	645a      	str	r2, [r3, #68]	@ 0x44
 8005e8e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005e92:	f003 0304 	and.w	r3, r3, #4
 8005e96:	2b00      	cmp	r3, #0
 8005e98:	d00b      	beq.n	8005eb2 <HAL_UART_IRQHandler+0xd2>
 8005e9a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8005e9e:	f003 0301 	and.w	r3, r3, #1
 8005ea2:	2b00      	cmp	r3, #0
 8005ea4:	d005      	beq.n	8005eb2 <HAL_UART_IRQHandler+0xd2>
 8005ea6:	687b      	ldr	r3, [r7, #4]
 8005ea8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005eaa:	f043 0202 	orr.w	r2, r3, #2
 8005eae:	687b      	ldr	r3, [r7, #4]
 8005eb0:	645a      	str	r2, [r3, #68]	@ 0x44
 8005eb2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005eb6:	f003 0302 	and.w	r3, r3, #2
 8005eba:	2b00      	cmp	r3, #0
 8005ebc:	d00b      	beq.n	8005ed6 <HAL_UART_IRQHandler+0xf6>
 8005ebe:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8005ec2:	f003 0301 	and.w	r3, r3, #1
 8005ec6:	2b00      	cmp	r3, #0
 8005ec8:	d005      	beq.n	8005ed6 <HAL_UART_IRQHandler+0xf6>
 8005eca:	687b      	ldr	r3, [r7, #4]
 8005ecc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005ece:	f043 0204 	orr.w	r2, r3, #4
 8005ed2:	687b      	ldr	r3, [r7, #4]
 8005ed4:	645a      	str	r2, [r3, #68]	@ 0x44
 8005ed6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005eda:	f003 0308 	and.w	r3, r3, #8
 8005ede:	2b00      	cmp	r3, #0
 8005ee0:	d011      	beq.n	8005f06 <HAL_UART_IRQHandler+0x126>
 8005ee2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005ee6:	f003 0320 	and.w	r3, r3, #32
 8005eea:	2b00      	cmp	r3, #0
 8005eec:	d105      	bne.n	8005efa <HAL_UART_IRQHandler+0x11a>
 8005eee:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8005ef2:	f003 0301 	and.w	r3, r3, #1
 8005ef6:	2b00      	cmp	r3, #0
 8005ef8:	d005      	beq.n	8005f06 <HAL_UART_IRQHandler+0x126>
 8005efa:	687b      	ldr	r3, [r7, #4]
 8005efc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005efe:	f043 0208 	orr.w	r2, r3, #8
 8005f02:	687b      	ldr	r3, [r7, #4]
 8005f04:	645a      	str	r2, [r3, #68]	@ 0x44
 8005f06:	687b      	ldr	r3, [r7, #4]
 8005f08:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005f0a:	2b00      	cmp	r3, #0
 8005f0c:	f000 81f2 	beq.w	80062f4 <HAL_UART_IRQHandler+0x514>
 8005f10:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005f14:	f003 0320 	and.w	r3, r3, #32
 8005f18:	2b00      	cmp	r3, #0
 8005f1a:	d008      	beq.n	8005f2e <HAL_UART_IRQHandler+0x14e>
 8005f1c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005f20:	f003 0320 	and.w	r3, r3, #32
 8005f24:	2b00      	cmp	r3, #0
 8005f26:	d002      	beq.n	8005f2e <HAL_UART_IRQHandler+0x14e>
 8005f28:	6878      	ldr	r0, [r7, #4]
 8005f2a:	f000 faee 	bl	800650a <UART_Receive_IT>
 8005f2e:	687b      	ldr	r3, [r7, #4]
 8005f30:	681b      	ldr	r3, [r3, #0]
 8005f32:	695b      	ldr	r3, [r3, #20]
 8005f34:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005f38:	2b00      	cmp	r3, #0
 8005f3a:	bf14      	ite	ne
 8005f3c:	2301      	movne	r3, #1
 8005f3e:	2300      	moveq	r3, #0
 8005f40:	b2db      	uxtb	r3, r3
 8005f42:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8005f46:	687b      	ldr	r3, [r7, #4]
 8005f48:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005f4a:	f003 0308 	and.w	r3, r3, #8
 8005f4e:	2b00      	cmp	r3, #0
 8005f50:	d103      	bne.n	8005f5a <HAL_UART_IRQHandler+0x17a>
 8005f52:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8005f56:	2b00      	cmp	r3, #0
 8005f58:	d04f      	beq.n	8005ffa <HAL_UART_IRQHandler+0x21a>
 8005f5a:	6878      	ldr	r0, [r7, #4]
 8005f5c:	f000 f9f8 	bl	8006350 <UART_EndRxTransfer>
 8005f60:	687b      	ldr	r3, [r7, #4]
 8005f62:	681b      	ldr	r3, [r3, #0]
 8005f64:	695b      	ldr	r3, [r3, #20]
 8005f66:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005f6a:	2b00      	cmp	r3, #0
 8005f6c:	d041      	beq.n	8005ff2 <HAL_UART_IRQHandler+0x212>
 8005f6e:	687b      	ldr	r3, [r7, #4]
 8005f70:	681b      	ldr	r3, [r3, #0]
 8005f72:	3314      	adds	r3, #20
 8005f74:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8005f78:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8005f7c:	e853 3f00 	ldrex	r3, [r3]
 8005f80:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8005f84:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8005f88:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8005f8c:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8005f90:	687b      	ldr	r3, [r7, #4]
 8005f92:	681b      	ldr	r3, [r3, #0]
 8005f94:	3314      	adds	r3, #20
 8005f96:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 8005f9a:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 8005f9e:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8005fa2:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 8005fa6:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 8005faa:	e841 2300 	strex	r3, r2, [r1]
 8005fae:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8005fb2:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8005fb6:	2b00      	cmp	r3, #0
 8005fb8:	d1d9      	bne.n	8005f6e <HAL_UART_IRQHandler+0x18e>
 8005fba:	687b      	ldr	r3, [r7, #4]
 8005fbc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005fbe:	2b00      	cmp	r3, #0
 8005fc0:	d013      	beq.n	8005fea <HAL_UART_IRQHandler+0x20a>
 8005fc2:	687b      	ldr	r3, [r7, #4]
 8005fc4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005fc6:	4a7e      	ldr	r2, [pc, #504]	@ (80061c0 <HAL_UART_IRQHandler+0x3e0>)
 8005fc8:	635a      	str	r2, [r3, #52]	@ 0x34
 8005fca:	687b      	ldr	r3, [r7, #4]
 8005fcc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005fce:	4618      	mov	r0, r3
 8005fd0:	f7fe fa2c 	bl	800442c <HAL_DMA_Abort_IT>
 8005fd4:	4603      	mov	r3, r0
 8005fd6:	2b00      	cmp	r3, #0
 8005fd8:	d016      	beq.n	8006008 <HAL_UART_IRQHandler+0x228>
 8005fda:	687b      	ldr	r3, [r7, #4]
 8005fdc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005fde:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005fe0:	687a      	ldr	r2, [r7, #4]
 8005fe2:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8005fe4:	4610      	mov	r0, r2
 8005fe6:	4798      	blx	r3
 8005fe8:	e00e      	b.n	8006008 <HAL_UART_IRQHandler+0x228>
 8005fea:	6878      	ldr	r0, [r7, #4]
 8005fec:	f000 f99c 	bl	8006328 <HAL_UART_ErrorCallback>
 8005ff0:	e00a      	b.n	8006008 <HAL_UART_IRQHandler+0x228>
 8005ff2:	6878      	ldr	r0, [r7, #4]
 8005ff4:	f000 f998 	bl	8006328 <HAL_UART_ErrorCallback>
 8005ff8:	e006      	b.n	8006008 <HAL_UART_IRQHandler+0x228>
 8005ffa:	6878      	ldr	r0, [r7, #4]
 8005ffc:	f000 f994 	bl	8006328 <HAL_UART_ErrorCallback>
 8006000:	687b      	ldr	r3, [r7, #4]
 8006002:	2200      	movs	r2, #0
 8006004:	645a      	str	r2, [r3, #68]	@ 0x44
 8006006:	e175      	b.n	80062f4 <HAL_UART_IRQHandler+0x514>
 8006008:	bf00      	nop
 800600a:	e173      	b.n	80062f4 <HAL_UART_IRQHandler+0x514>
 800600c:	687b      	ldr	r3, [r7, #4]
 800600e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006010:	2b01      	cmp	r3, #1
 8006012:	f040 814f 	bne.w	80062b4 <HAL_UART_IRQHandler+0x4d4>
 8006016:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800601a:	f003 0310 	and.w	r3, r3, #16
 800601e:	2b00      	cmp	r3, #0
 8006020:	f000 8148 	beq.w	80062b4 <HAL_UART_IRQHandler+0x4d4>
 8006024:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006028:	f003 0310 	and.w	r3, r3, #16
 800602c:	2b00      	cmp	r3, #0
 800602e:	f000 8141 	beq.w	80062b4 <HAL_UART_IRQHandler+0x4d4>
 8006032:	2300      	movs	r3, #0
 8006034:	60bb      	str	r3, [r7, #8]
 8006036:	687b      	ldr	r3, [r7, #4]
 8006038:	681b      	ldr	r3, [r3, #0]
 800603a:	681b      	ldr	r3, [r3, #0]
 800603c:	60bb      	str	r3, [r7, #8]
 800603e:	687b      	ldr	r3, [r7, #4]
 8006040:	681b      	ldr	r3, [r3, #0]
 8006042:	685b      	ldr	r3, [r3, #4]
 8006044:	60bb      	str	r3, [r7, #8]
 8006046:	68bb      	ldr	r3, [r7, #8]
 8006048:	687b      	ldr	r3, [r7, #4]
 800604a:	681b      	ldr	r3, [r3, #0]
 800604c:	695b      	ldr	r3, [r3, #20]
 800604e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006052:	2b00      	cmp	r3, #0
 8006054:	f000 80b6 	beq.w	80061c4 <HAL_UART_IRQHandler+0x3e4>
 8006058:	687b      	ldr	r3, [r7, #4]
 800605a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800605c:	681b      	ldr	r3, [r3, #0]
 800605e:	685b      	ldr	r3, [r3, #4]
 8006060:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8006064:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 8006068:	2b00      	cmp	r3, #0
 800606a:	f000 8145 	beq.w	80062f8 <HAL_UART_IRQHandler+0x518>
 800606e:	687b      	ldr	r3, [r7, #4]
 8006070:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8006072:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8006076:	429a      	cmp	r2, r3
 8006078:	f080 813e 	bcs.w	80062f8 <HAL_UART_IRQHandler+0x518>
 800607c:	687b      	ldr	r3, [r7, #4]
 800607e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8006082:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8006084:	687b      	ldr	r3, [r7, #4]
 8006086:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006088:	699b      	ldr	r3, [r3, #24]
 800608a:	2b20      	cmp	r3, #32
 800608c:	f000 8088 	beq.w	80061a0 <HAL_UART_IRQHandler+0x3c0>
 8006090:	687b      	ldr	r3, [r7, #4]
 8006092:	681b      	ldr	r3, [r3, #0]
 8006094:	330c      	adds	r3, #12
 8006096:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800609a:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 800609e:	e853 3f00 	ldrex	r3, [r3]
 80060a2:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80060a6:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80060aa:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80060ae:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 80060b2:	687b      	ldr	r3, [r7, #4]
 80060b4:	681b      	ldr	r3, [r3, #0]
 80060b6:	330c      	adds	r3, #12
 80060b8:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 80060bc:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 80060c0:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80060c4:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 80060c8:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 80060cc:	e841 2300 	strex	r3, r2, [r1]
 80060d0:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 80060d4:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80060d8:	2b00      	cmp	r3, #0
 80060da:	d1d9      	bne.n	8006090 <HAL_UART_IRQHandler+0x2b0>
 80060dc:	687b      	ldr	r3, [r7, #4]
 80060de:	681b      	ldr	r3, [r3, #0]
 80060e0:	3314      	adds	r3, #20
 80060e2:	677b      	str	r3, [r7, #116]	@ 0x74
 80060e4:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80060e6:	e853 3f00 	ldrex	r3, [r3]
 80060ea:	673b      	str	r3, [r7, #112]	@ 0x70
 80060ec:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80060ee:	f023 0301 	bic.w	r3, r3, #1
 80060f2:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80060f6:	687b      	ldr	r3, [r7, #4]
 80060f8:	681b      	ldr	r3, [r3, #0]
 80060fa:	3314      	adds	r3, #20
 80060fc:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8006100:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 8006104:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8006106:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 8006108:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 800610c:	e841 2300 	strex	r3, r2, [r1]
 8006110:	67bb      	str	r3, [r7, #120]	@ 0x78
 8006112:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8006114:	2b00      	cmp	r3, #0
 8006116:	d1e1      	bne.n	80060dc <HAL_UART_IRQHandler+0x2fc>
 8006118:	687b      	ldr	r3, [r7, #4]
 800611a:	681b      	ldr	r3, [r3, #0]
 800611c:	3314      	adds	r3, #20
 800611e:	663b      	str	r3, [r7, #96]	@ 0x60
 8006120:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8006122:	e853 3f00 	ldrex	r3, [r3]
 8006126:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8006128:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800612a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800612e:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8006132:	687b      	ldr	r3, [r7, #4]
 8006134:	681b      	ldr	r3, [r3, #0]
 8006136:	3314      	adds	r3, #20
 8006138:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 800613c:	66fa      	str	r2, [r7, #108]	@ 0x6c
 800613e:	66bb      	str	r3, [r7, #104]	@ 0x68
 8006140:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 8006142:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8006144:	e841 2300 	strex	r3, r2, [r1]
 8006148:	667b      	str	r3, [r7, #100]	@ 0x64
 800614a:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800614c:	2b00      	cmp	r3, #0
 800614e:	d1e3      	bne.n	8006118 <HAL_UART_IRQHandler+0x338>
 8006150:	687b      	ldr	r3, [r7, #4]
 8006152:	2220      	movs	r2, #32
 8006154:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006158:	687b      	ldr	r3, [r7, #4]
 800615a:	2200      	movs	r2, #0
 800615c:	631a      	str	r2, [r3, #48]	@ 0x30
 800615e:	687b      	ldr	r3, [r7, #4]
 8006160:	681b      	ldr	r3, [r3, #0]
 8006162:	330c      	adds	r3, #12
 8006164:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8006166:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8006168:	e853 3f00 	ldrex	r3, [r3]
 800616c:	64bb      	str	r3, [r7, #72]	@ 0x48
 800616e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8006170:	f023 0310 	bic.w	r3, r3, #16
 8006174:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8006178:	687b      	ldr	r3, [r7, #4]
 800617a:	681b      	ldr	r3, [r3, #0]
 800617c:	330c      	adds	r3, #12
 800617e:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 8006182:	65ba      	str	r2, [r7, #88]	@ 0x58
 8006184:	657b      	str	r3, [r7, #84]	@ 0x54
 8006186:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8006188:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 800618a:	e841 2300 	strex	r3, r2, [r1]
 800618e:	653b      	str	r3, [r7, #80]	@ 0x50
 8006190:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8006192:	2b00      	cmp	r3, #0
 8006194:	d1e3      	bne.n	800615e <HAL_UART_IRQHandler+0x37e>
 8006196:	687b      	ldr	r3, [r7, #4]
 8006198:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800619a:	4618      	mov	r0, r3
 800619c:	f7fe f90b 	bl	80043b6 <HAL_DMA_Abort>
 80061a0:	687b      	ldr	r3, [r7, #4]
 80061a2:	2202      	movs	r2, #2
 80061a4:	635a      	str	r2, [r3, #52]	@ 0x34
 80061a6:	687b      	ldr	r3, [r7, #4]
 80061a8:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 80061aa:	687b      	ldr	r3, [r7, #4]
 80061ac:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80061ae:	b29b      	uxth	r3, r3
 80061b0:	1ad3      	subs	r3, r2, r3
 80061b2:	b29b      	uxth	r3, r3
 80061b4:	4619      	mov	r1, r3
 80061b6:	6878      	ldr	r0, [r7, #4]
 80061b8:	f000 f8bf 	bl	800633a <HAL_UARTEx_RxEventCallback>
 80061bc:	e09c      	b.n	80062f8 <HAL_UART_IRQHandler+0x518>
 80061be:	bf00      	nop
 80061c0:	08006415 	.word	0x08006415
 80061c4:	687b      	ldr	r3, [r7, #4]
 80061c6:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 80061c8:	687b      	ldr	r3, [r7, #4]
 80061ca:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80061cc:	b29b      	uxth	r3, r3
 80061ce:	1ad3      	subs	r3, r2, r3
 80061d0:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 80061d4:	687b      	ldr	r3, [r7, #4]
 80061d6:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80061d8:	b29b      	uxth	r3, r3
 80061da:	2b00      	cmp	r3, #0
 80061dc:	f000 808e 	beq.w	80062fc <HAL_UART_IRQHandler+0x51c>
 80061e0:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 80061e4:	2b00      	cmp	r3, #0
 80061e6:	f000 8089 	beq.w	80062fc <HAL_UART_IRQHandler+0x51c>
 80061ea:	687b      	ldr	r3, [r7, #4]
 80061ec:	681b      	ldr	r3, [r3, #0]
 80061ee:	330c      	adds	r3, #12
 80061f0:	63bb      	str	r3, [r7, #56]	@ 0x38
 80061f2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80061f4:	e853 3f00 	ldrex	r3, [r3]
 80061f8:	637b      	str	r3, [r7, #52]	@ 0x34
 80061fa:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80061fc:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8006200:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8006204:	687b      	ldr	r3, [r7, #4]
 8006206:	681b      	ldr	r3, [r3, #0]
 8006208:	330c      	adds	r3, #12
 800620a:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 800620e:	647a      	str	r2, [r7, #68]	@ 0x44
 8006210:	643b      	str	r3, [r7, #64]	@ 0x40
 8006212:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8006214:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8006216:	e841 2300 	strex	r3, r2, [r1]
 800621a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800621c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800621e:	2b00      	cmp	r3, #0
 8006220:	d1e3      	bne.n	80061ea <HAL_UART_IRQHandler+0x40a>
 8006222:	687b      	ldr	r3, [r7, #4]
 8006224:	681b      	ldr	r3, [r3, #0]
 8006226:	3314      	adds	r3, #20
 8006228:	627b      	str	r3, [r7, #36]	@ 0x24
 800622a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800622c:	e853 3f00 	ldrex	r3, [r3]
 8006230:	623b      	str	r3, [r7, #32]
 8006232:	6a3b      	ldr	r3, [r7, #32]
 8006234:	f023 0301 	bic.w	r3, r3, #1
 8006238:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 800623c:	687b      	ldr	r3, [r7, #4]
 800623e:	681b      	ldr	r3, [r3, #0]
 8006240:	3314      	adds	r3, #20
 8006242:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 8006246:	633a      	str	r2, [r7, #48]	@ 0x30
 8006248:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800624a:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800624c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800624e:	e841 2300 	strex	r3, r2, [r1]
 8006252:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006254:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006256:	2b00      	cmp	r3, #0
 8006258:	d1e3      	bne.n	8006222 <HAL_UART_IRQHandler+0x442>
 800625a:	687b      	ldr	r3, [r7, #4]
 800625c:	2220      	movs	r2, #32
 800625e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006262:	687b      	ldr	r3, [r7, #4]
 8006264:	2200      	movs	r2, #0
 8006266:	631a      	str	r2, [r3, #48]	@ 0x30
 8006268:	687b      	ldr	r3, [r7, #4]
 800626a:	681b      	ldr	r3, [r3, #0]
 800626c:	330c      	adds	r3, #12
 800626e:	613b      	str	r3, [r7, #16]
 8006270:	693b      	ldr	r3, [r7, #16]
 8006272:	e853 3f00 	ldrex	r3, [r3]
 8006276:	60fb      	str	r3, [r7, #12]
 8006278:	68fb      	ldr	r3, [r7, #12]
 800627a:	f023 0310 	bic.w	r3, r3, #16
 800627e:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8006282:	687b      	ldr	r3, [r7, #4]
 8006284:	681b      	ldr	r3, [r3, #0]
 8006286:	330c      	adds	r3, #12
 8006288:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 800628c:	61fa      	str	r2, [r7, #28]
 800628e:	61bb      	str	r3, [r7, #24]
 8006290:	69b9      	ldr	r1, [r7, #24]
 8006292:	69fa      	ldr	r2, [r7, #28]
 8006294:	e841 2300 	strex	r3, r2, [r1]
 8006298:	617b      	str	r3, [r7, #20]
 800629a:	697b      	ldr	r3, [r7, #20]
 800629c:	2b00      	cmp	r3, #0
 800629e:	d1e3      	bne.n	8006268 <HAL_UART_IRQHandler+0x488>
 80062a0:	687b      	ldr	r3, [r7, #4]
 80062a2:	2202      	movs	r2, #2
 80062a4:	635a      	str	r2, [r3, #52]	@ 0x34
 80062a6:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 80062aa:	4619      	mov	r1, r3
 80062ac:	6878      	ldr	r0, [r7, #4]
 80062ae:	f000 f844 	bl	800633a <HAL_UARTEx_RxEventCallback>
 80062b2:	e023      	b.n	80062fc <HAL_UART_IRQHandler+0x51c>
 80062b4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80062b8:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80062bc:	2b00      	cmp	r3, #0
 80062be:	d009      	beq.n	80062d4 <HAL_UART_IRQHandler+0x4f4>
 80062c0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80062c4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80062c8:	2b00      	cmp	r3, #0
 80062ca:	d003      	beq.n	80062d4 <HAL_UART_IRQHandler+0x4f4>
 80062cc:	6878      	ldr	r0, [r7, #4]
 80062ce:	f000 f8b5 	bl	800643c <UART_Transmit_IT>
 80062d2:	e014      	b.n	80062fe <HAL_UART_IRQHandler+0x51e>
 80062d4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80062d8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80062dc:	2b00      	cmp	r3, #0
 80062de:	d00e      	beq.n	80062fe <HAL_UART_IRQHandler+0x51e>
 80062e0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80062e4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80062e8:	2b00      	cmp	r3, #0
 80062ea:	d008      	beq.n	80062fe <HAL_UART_IRQHandler+0x51e>
 80062ec:	6878      	ldr	r0, [r7, #4]
 80062ee:	f000 f8f4 	bl	80064da <UART_EndTransmit_IT>
 80062f2:	e004      	b.n	80062fe <HAL_UART_IRQHandler+0x51e>
 80062f4:	bf00      	nop
 80062f6:	e002      	b.n	80062fe <HAL_UART_IRQHandler+0x51e>
 80062f8:	bf00      	nop
 80062fa:	e000      	b.n	80062fe <HAL_UART_IRQHandler+0x51e>
 80062fc:	bf00      	nop
 80062fe:	37e8      	adds	r7, #232	@ 0xe8
 8006300:	46bd      	mov	sp, r7
 8006302:	bd80      	pop	{r7, pc}

08006304 <HAL_UART_TxCpltCallback>:
 8006304:	b480      	push	{r7}
 8006306:	b083      	sub	sp, #12
 8006308:	af00      	add	r7, sp, #0
 800630a:	6078      	str	r0, [r7, #4]
 800630c:	bf00      	nop
 800630e:	370c      	adds	r7, #12
 8006310:	46bd      	mov	sp, r7
 8006312:	bc80      	pop	{r7}
 8006314:	4770      	bx	lr

08006316 <HAL_UART_RxCpltCallback>:
 8006316:	b480      	push	{r7}
 8006318:	b083      	sub	sp, #12
 800631a:	af00      	add	r7, sp, #0
 800631c:	6078      	str	r0, [r7, #4]
 800631e:	bf00      	nop
 8006320:	370c      	adds	r7, #12
 8006322:	46bd      	mov	sp, r7
 8006324:	bc80      	pop	{r7}
 8006326:	4770      	bx	lr

08006328 <HAL_UART_ErrorCallback>:
 8006328:	b480      	push	{r7}
 800632a:	b083      	sub	sp, #12
 800632c:	af00      	add	r7, sp, #0
 800632e:	6078      	str	r0, [r7, #4]
 8006330:	bf00      	nop
 8006332:	370c      	adds	r7, #12
 8006334:	46bd      	mov	sp, r7
 8006336:	bc80      	pop	{r7}
 8006338:	4770      	bx	lr

0800633a <HAL_UARTEx_RxEventCallback>:
 800633a:	b480      	push	{r7}
 800633c:	b083      	sub	sp, #12
 800633e:	af00      	add	r7, sp, #0
 8006340:	6078      	str	r0, [r7, #4]
 8006342:	460b      	mov	r3, r1
 8006344:	807b      	strh	r3, [r7, #2]
 8006346:	bf00      	nop
 8006348:	370c      	adds	r7, #12
 800634a:	46bd      	mov	sp, r7
 800634c:	bc80      	pop	{r7}
 800634e:	4770      	bx	lr

08006350 <UART_EndRxTransfer>:
 8006350:	b480      	push	{r7}
 8006352:	b095      	sub	sp, #84	@ 0x54
 8006354:	af00      	add	r7, sp, #0
 8006356:	6078      	str	r0, [r7, #4]
 8006358:	687b      	ldr	r3, [r7, #4]
 800635a:	681b      	ldr	r3, [r3, #0]
 800635c:	330c      	adds	r3, #12
 800635e:	637b      	str	r3, [r7, #52]	@ 0x34
 8006360:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006362:	e853 3f00 	ldrex	r3, [r3]
 8006366:	633b      	str	r3, [r7, #48]	@ 0x30
 8006368:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800636a:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800636e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8006370:	687b      	ldr	r3, [r7, #4]
 8006372:	681b      	ldr	r3, [r3, #0]
 8006374:	330c      	adds	r3, #12
 8006376:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8006378:	643a      	str	r2, [r7, #64]	@ 0x40
 800637a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800637c:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 800637e:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8006380:	e841 2300 	strex	r3, r2, [r1]
 8006384:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006386:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006388:	2b00      	cmp	r3, #0
 800638a:	d1e5      	bne.n	8006358 <UART_EndRxTransfer+0x8>
 800638c:	687b      	ldr	r3, [r7, #4]
 800638e:	681b      	ldr	r3, [r3, #0]
 8006390:	3314      	adds	r3, #20
 8006392:	623b      	str	r3, [r7, #32]
 8006394:	6a3b      	ldr	r3, [r7, #32]
 8006396:	e853 3f00 	ldrex	r3, [r3]
 800639a:	61fb      	str	r3, [r7, #28]
 800639c:	69fb      	ldr	r3, [r7, #28]
 800639e:	f023 0301 	bic.w	r3, r3, #1
 80063a2:	64bb      	str	r3, [r7, #72]	@ 0x48
 80063a4:	687b      	ldr	r3, [r7, #4]
 80063a6:	681b      	ldr	r3, [r3, #0]
 80063a8:	3314      	adds	r3, #20
 80063aa:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80063ac:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80063ae:	62bb      	str	r3, [r7, #40]	@ 0x28
 80063b0:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80063b2:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80063b4:	e841 2300 	strex	r3, r2, [r1]
 80063b8:	627b      	str	r3, [r7, #36]	@ 0x24
 80063ba:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80063bc:	2b00      	cmp	r3, #0
 80063be:	d1e5      	bne.n	800638c <UART_EndRxTransfer+0x3c>
 80063c0:	687b      	ldr	r3, [r7, #4]
 80063c2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80063c4:	2b01      	cmp	r3, #1
 80063c6:	d119      	bne.n	80063fc <UART_EndRxTransfer+0xac>
 80063c8:	687b      	ldr	r3, [r7, #4]
 80063ca:	681b      	ldr	r3, [r3, #0]
 80063cc:	330c      	adds	r3, #12
 80063ce:	60fb      	str	r3, [r7, #12]
 80063d0:	68fb      	ldr	r3, [r7, #12]
 80063d2:	e853 3f00 	ldrex	r3, [r3]
 80063d6:	60bb      	str	r3, [r7, #8]
 80063d8:	68bb      	ldr	r3, [r7, #8]
 80063da:	f023 0310 	bic.w	r3, r3, #16
 80063de:	647b      	str	r3, [r7, #68]	@ 0x44
 80063e0:	687b      	ldr	r3, [r7, #4]
 80063e2:	681b      	ldr	r3, [r3, #0]
 80063e4:	330c      	adds	r3, #12
 80063e6:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80063e8:	61ba      	str	r2, [r7, #24]
 80063ea:	617b      	str	r3, [r7, #20]
 80063ec:	6979      	ldr	r1, [r7, #20]
 80063ee:	69ba      	ldr	r2, [r7, #24]
 80063f0:	e841 2300 	strex	r3, r2, [r1]
 80063f4:	613b      	str	r3, [r7, #16]
 80063f6:	693b      	ldr	r3, [r7, #16]
 80063f8:	2b00      	cmp	r3, #0
 80063fa:	d1e5      	bne.n	80063c8 <UART_EndRxTransfer+0x78>
 80063fc:	687b      	ldr	r3, [r7, #4]
 80063fe:	2220      	movs	r2, #32
 8006400:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006404:	687b      	ldr	r3, [r7, #4]
 8006406:	2200      	movs	r2, #0
 8006408:	631a      	str	r2, [r3, #48]	@ 0x30
 800640a:	bf00      	nop
 800640c:	3754      	adds	r7, #84	@ 0x54
 800640e:	46bd      	mov	sp, r7
 8006410:	bc80      	pop	{r7}
 8006412:	4770      	bx	lr

08006414 <UART_DMAAbortOnError>:
 8006414:	b580      	push	{r7, lr}
 8006416:	b084      	sub	sp, #16
 8006418:	af00      	add	r7, sp, #0
 800641a:	6078      	str	r0, [r7, #4]
 800641c:	687b      	ldr	r3, [r7, #4]
 800641e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006420:	60fb      	str	r3, [r7, #12]
 8006422:	68fb      	ldr	r3, [r7, #12]
 8006424:	2200      	movs	r2, #0
 8006426:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8006428:	68fb      	ldr	r3, [r7, #12]
 800642a:	2200      	movs	r2, #0
 800642c:	84da      	strh	r2, [r3, #38]	@ 0x26
 800642e:	68f8      	ldr	r0, [r7, #12]
 8006430:	f7ff ff7a 	bl	8006328 <HAL_UART_ErrorCallback>
 8006434:	bf00      	nop
 8006436:	3710      	adds	r7, #16
 8006438:	46bd      	mov	sp, r7
 800643a:	bd80      	pop	{r7, pc}

0800643c <UART_Transmit_IT>:
 800643c:	b480      	push	{r7}
 800643e:	b085      	sub	sp, #20
 8006440:	af00      	add	r7, sp, #0
 8006442:	6078      	str	r0, [r7, #4]
 8006444:	687b      	ldr	r3, [r7, #4]
 8006446:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800644a:	b2db      	uxtb	r3, r3
 800644c:	2b21      	cmp	r3, #33	@ 0x21
 800644e:	d13e      	bne.n	80064ce <UART_Transmit_IT+0x92>
 8006450:	687b      	ldr	r3, [r7, #4]
 8006452:	689b      	ldr	r3, [r3, #8]
 8006454:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006458:	d114      	bne.n	8006484 <UART_Transmit_IT+0x48>
 800645a:	687b      	ldr	r3, [r7, #4]
 800645c:	691b      	ldr	r3, [r3, #16]
 800645e:	2b00      	cmp	r3, #0
 8006460:	d110      	bne.n	8006484 <UART_Transmit_IT+0x48>
 8006462:	687b      	ldr	r3, [r7, #4]
 8006464:	6a1b      	ldr	r3, [r3, #32]
 8006466:	60fb      	str	r3, [r7, #12]
 8006468:	68fb      	ldr	r3, [r7, #12]
 800646a:	881b      	ldrh	r3, [r3, #0]
 800646c:	461a      	mov	r2, r3
 800646e:	687b      	ldr	r3, [r7, #4]
 8006470:	681b      	ldr	r3, [r3, #0]
 8006472:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8006476:	605a      	str	r2, [r3, #4]
 8006478:	687b      	ldr	r3, [r7, #4]
 800647a:	6a1b      	ldr	r3, [r3, #32]
 800647c:	1c9a      	adds	r2, r3, #2
 800647e:	687b      	ldr	r3, [r7, #4]
 8006480:	621a      	str	r2, [r3, #32]
 8006482:	e008      	b.n	8006496 <UART_Transmit_IT+0x5a>
 8006484:	687b      	ldr	r3, [r7, #4]
 8006486:	6a1b      	ldr	r3, [r3, #32]
 8006488:	1c59      	adds	r1, r3, #1
 800648a:	687a      	ldr	r2, [r7, #4]
 800648c:	6211      	str	r1, [r2, #32]
 800648e:	781a      	ldrb	r2, [r3, #0]
 8006490:	687b      	ldr	r3, [r7, #4]
 8006492:	681b      	ldr	r3, [r3, #0]
 8006494:	605a      	str	r2, [r3, #4]
 8006496:	687b      	ldr	r3, [r7, #4]
 8006498:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 800649a:	b29b      	uxth	r3, r3
 800649c:	3b01      	subs	r3, #1
 800649e:	b29b      	uxth	r3, r3
 80064a0:	687a      	ldr	r2, [r7, #4]
 80064a2:	4619      	mov	r1, r3
 80064a4:	84d1      	strh	r1, [r2, #38]	@ 0x26
 80064a6:	2b00      	cmp	r3, #0
 80064a8:	d10f      	bne.n	80064ca <UART_Transmit_IT+0x8e>
 80064aa:	687b      	ldr	r3, [r7, #4]
 80064ac:	681b      	ldr	r3, [r3, #0]
 80064ae:	68da      	ldr	r2, [r3, #12]
 80064b0:	687b      	ldr	r3, [r7, #4]
 80064b2:	681b      	ldr	r3, [r3, #0]
 80064b4:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80064b8:	60da      	str	r2, [r3, #12]
 80064ba:	687b      	ldr	r3, [r7, #4]
 80064bc:	681b      	ldr	r3, [r3, #0]
 80064be:	68da      	ldr	r2, [r3, #12]
 80064c0:	687b      	ldr	r3, [r7, #4]
 80064c2:	681b      	ldr	r3, [r3, #0]
 80064c4:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80064c8:	60da      	str	r2, [r3, #12]
 80064ca:	2300      	movs	r3, #0
 80064cc:	e000      	b.n	80064d0 <UART_Transmit_IT+0x94>
 80064ce:	2302      	movs	r3, #2
 80064d0:	4618      	mov	r0, r3
 80064d2:	3714      	adds	r7, #20
 80064d4:	46bd      	mov	sp, r7
 80064d6:	bc80      	pop	{r7}
 80064d8:	4770      	bx	lr

080064da <UART_EndTransmit_IT>:
 80064da:	b580      	push	{r7, lr}
 80064dc:	b082      	sub	sp, #8
 80064de:	af00      	add	r7, sp, #0
 80064e0:	6078      	str	r0, [r7, #4]
 80064e2:	687b      	ldr	r3, [r7, #4]
 80064e4:	681b      	ldr	r3, [r3, #0]
 80064e6:	68da      	ldr	r2, [r3, #12]
 80064e8:	687b      	ldr	r3, [r7, #4]
 80064ea:	681b      	ldr	r3, [r3, #0]
 80064ec:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80064f0:	60da      	str	r2, [r3, #12]
 80064f2:	687b      	ldr	r3, [r7, #4]
 80064f4:	2220      	movs	r2, #32
 80064f6:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80064fa:	6878      	ldr	r0, [r7, #4]
 80064fc:	f7ff ff02 	bl	8006304 <HAL_UART_TxCpltCallback>
 8006500:	2300      	movs	r3, #0
 8006502:	4618      	mov	r0, r3
 8006504:	3708      	adds	r7, #8
 8006506:	46bd      	mov	sp, r7
 8006508:	bd80      	pop	{r7, pc}

0800650a <UART_Receive_IT>:
 800650a:	b580      	push	{r7, lr}
 800650c:	b08c      	sub	sp, #48	@ 0x30
 800650e:	af00      	add	r7, sp, #0
 8006510:	6078      	str	r0, [r7, #4]
 8006512:	687b      	ldr	r3, [r7, #4]
 8006514:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8006518:	b2db      	uxtb	r3, r3
 800651a:	2b22      	cmp	r3, #34	@ 0x22
 800651c:	f040 80ae 	bne.w	800667c <UART_Receive_IT+0x172>
 8006520:	687b      	ldr	r3, [r7, #4]
 8006522:	689b      	ldr	r3, [r3, #8]
 8006524:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006528:	d117      	bne.n	800655a <UART_Receive_IT+0x50>
 800652a:	687b      	ldr	r3, [r7, #4]
 800652c:	691b      	ldr	r3, [r3, #16]
 800652e:	2b00      	cmp	r3, #0
 8006530:	d113      	bne.n	800655a <UART_Receive_IT+0x50>
 8006532:	2300      	movs	r3, #0
 8006534:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006536:	687b      	ldr	r3, [r7, #4]
 8006538:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800653a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800653c:	687b      	ldr	r3, [r7, #4]
 800653e:	681b      	ldr	r3, [r3, #0]
 8006540:	685b      	ldr	r3, [r3, #4]
 8006542:	b29b      	uxth	r3, r3
 8006544:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006548:	b29a      	uxth	r2, r3
 800654a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800654c:	801a      	strh	r2, [r3, #0]
 800654e:	687b      	ldr	r3, [r7, #4]
 8006550:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006552:	1c9a      	adds	r2, r3, #2
 8006554:	687b      	ldr	r3, [r7, #4]
 8006556:	629a      	str	r2, [r3, #40]	@ 0x28
 8006558:	e026      	b.n	80065a8 <UART_Receive_IT+0x9e>
 800655a:	687b      	ldr	r3, [r7, #4]
 800655c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800655e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006560:	2300      	movs	r3, #0
 8006562:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006564:	687b      	ldr	r3, [r7, #4]
 8006566:	689b      	ldr	r3, [r3, #8]
 8006568:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800656c:	d007      	beq.n	800657e <UART_Receive_IT+0x74>
 800656e:	687b      	ldr	r3, [r7, #4]
 8006570:	689b      	ldr	r3, [r3, #8]
 8006572:	2b00      	cmp	r3, #0
 8006574:	d10a      	bne.n	800658c <UART_Receive_IT+0x82>
 8006576:	687b      	ldr	r3, [r7, #4]
 8006578:	691b      	ldr	r3, [r3, #16]
 800657a:	2b00      	cmp	r3, #0
 800657c:	d106      	bne.n	800658c <UART_Receive_IT+0x82>
 800657e:	687b      	ldr	r3, [r7, #4]
 8006580:	681b      	ldr	r3, [r3, #0]
 8006582:	685b      	ldr	r3, [r3, #4]
 8006584:	b2da      	uxtb	r2, r3
 8006586:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006588:	701a      	strb	r2, [r3, #0]
 800658a:	e008      	b.n	800659e <UART_Receive_IT+0x94>
 800658c:	687b      	ldr	r3, [r7, #4]
 800658e:	681b      	ldr	r3, [r3, #0]
 8006590:	685b      	ldr	r3, [r3, #4]
 8006592:	b2db      	uxtb	r3, r3
 8006594:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8006598:	b2da      	uxtb	r2, r3
 800659a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800659c:	701a      	strb	r2, [r3, #0]
 800659e:	687b      	ldr	r3, [r7, #4]
 80065a0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80065a2:	1c5a      	adds	r2, r3, #1
 80065a4:	687b      	ldr	r3, [r7, #4]
 80065a6:	629a      	str	r2, [r3, #40]	@ 0x28
 80065a8:	687b      	ldr	r3, [r7, #4]
 80065aa:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80065ac:	b29b      	uxth	r3, r3
 80065ae:	3b01      	subs	r3, #1
 80065b0:	b29b      	uxth	r3, r3
 80065b2:	687a      	ldr	r2, [r7, #4]
 80065b4:	4619      	mov	r1, r3
 80065b6:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 80065b8:	2b00      	cmp	r3, #0
 80065ba:	d15d      	bne.n	8006678 <UART_Receive_IT+0x16e>
 80065bc:	687b      	ldr	r3, [r7, #4]
 80065be:	681b      	ldr	r3, [r3, #0]
 80065c0:	68da      	ldr	r2, [r3, #12]
 80065c2:	687b      	ldr	r3, [r7, #4]
 80065c4:	681b      	ldr	r3, [r3, #0]
 80065c6:	f022 0220 	bic.w	r2, r2, #32
 80065ca:	60da      	str	r2, [r3, #12]
 80065cc:	687b      	ldr	r3, [r7, #4]
 80065ce:	681b      	ldr	r3, [r3, #0]
 80065d0:	68da      	ldr	r2, [r3, #12]
 80065d2:	687b      	ldr	r3, [r7, #4]
 80065d4:	681b      	ldr	r3, [r3, #0]
 80065d6:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80065da:	60da      	str	r2, [r3, #12]
 80065dc:	687b      	ldr	r3, [r7, #4]
 80065de:	681b      	ldr	r3, [r3, #0]
 80065e0:	695a      	ldr	r2, [r3, #20]
 80065e2:	687b      	ldr	r3, [r7, #4]
 80065e4:	681b      	ldr	r3, [r3, #0]
 80065e6:	f022 0201 	bic.w	r2, r2, #1
 80065ea:	615a      	str	r2, [r3, #20]
 80065ec:	687b      	ldr	r3, [r7, #4]
 80065ee:	2220      	movs	r2, #32
 80065f0:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80065f4:	687b      	ldr	r3, [r7, #4]
 80065f6:	2200      	movs	r2, #0
 80065f8:	635a      	str	r2, [r3, #52]	@ 0x34
 80065fa:	687b      	ldr	r3, [r7, #4]
 80065fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80065fe:	2b01      	cmp	r3, #1
 8006600:	d135      	bne.n	800666e <UART_Receive_IT+0x164>
 8006602:	687b      	ldr	r3, [r7, #4]
 8006604:	2200      	movs	r2, #0
 8006606:	631a      	str	r2, [r3, #48]	@ 0x30
 8006608:	687b      	ldr	r3, [r7, #4]
 800660a:	681b      	ldr	r3, [r3, #0]
 800660c:	330c      	adds	r3, #12
 800660e:	617b      	str	r3, [r7, #20]
 8006610:	697b      	ldr	r3, [r7, #20]
 8006612:	e853 3f00 	ldrex	r3, [r3]
 8006616:	613b      	str	r3, [r7, #16]
 8006618:	693b      	ldr	r3, [r7, #16]
 800661a:	f023 0310 	bic.w	r3, r3, #16
 800661e:	627b      	str	r3, [r7, #36]	@ 0x24
 8006620:	687b      	ldr	r3, [r7, #4]
 8006622:	681b      	ldr	r3, [r3, #0]
 8006624:	330c      	adds	r3, #12
 8006626:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8006628:	623a      	str	r2, [r7, #32]
 800662a:	61fb      	str	r3, [r7, #28]
 800662c:	69f9      	ldr	r1, [r7, #28]
 800662e:	6a3a      	ldr	r2, [r7, #32]
 8006630:	e841 2300 	strex	r3, r2, [r1]
 8006634:	61bb      	str	r3, [r7, #24]
 8006636:	69bb      	ldr	r3, [r7, #24]
 8006638:	2b00      	cmp	r3, #0
 800663a:	d1e5      	bne.n	8006608 <UART_Receive_IT+0xfe>
 800663c:	687b      	ldr	r3, [r7, #4]
 800663e:	681b      	ldr	r3, [r3, #0]
 8006640:	681b      	ldr	r3, [r3, #0]
 8006642:	f003 0310 	and.w	r3, r3, #16
 8006646:	2b10      	cmp	r3, #16
 8006648:	d10a      	bne.n	8006660 <UART_Receive_IT+0x156>
 800664a:	2300      	movs	r3, #0
 800664c:	60fb      	str	r3, [r7, #12]
 800664e:	687b      	ldr	r3, [r7, #4]
 8006650:	681b      	ldr	r3, [r3, #0]
 8006652:	681b      	ldr	r3, [r3, #0]
 8006654:	60fb      	str	r3, [r7, #12]
 8006656:	687b      	ldr	r3, [r7, #4]
 8006658:	681b      	ldr	r3, [r3, #0]
 800665a:	685b      	ldr	r3, [r3, #4]
 800665c:	60fb      	str	r3, [r7, #12]
 800665e:	68fb      	ldr	r3, [r7, #12]
 8006660:	687b      	ldr	r3, [r7, #4]
 8006662:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8006664:	4619      	mov	r1, r3
 8006666:	6878      	ldr	r0, [r7, #4]
 8006668:	f7ff fe67 	bl	800633a <HAL_UARTEx_RxEventCallback>
 800666c:	e002      	b.n	8006674 <UART_Receive_IT+0x16a>
 800666e:	6878      	ldr	r0, [r7, #4]
 8006670:	f7ff fe51 	bl	8006316 <HAL_UART_RxCpltCallback>
 8006674:	2300      	movs	r3, #0
 8006676:	e002      	b.n	800667e <UART_Receive_IT+0x174>
 8006678:	2300      	movs	r3, #0
 800667a:	e000      	b.n	800667e <UART_Receive_IT+0x174>
 800667c:	2302      	movs	r3, #2
 800667e:	4618      	mov	r0, r3
 8006680:	3730      	adds	r7, #48	@ 0x30
 8006682:	46bd      	mov	sp, r7
 8006684:	bd80      	pop	{r7, pc}
	...

08006688 <UART_SetConfig>:
 8006688:	b580      	push	{r7, lr}
 800668a:	b084      	sub	sp, #16
 800668c:	af00      	add	r7, sp, #0
 800668e:	6078      	str	r0, [r7, #4]
 8006690:	687b      	ldr	r3, [r7, #4]
 8006692:	681b      	ldr	r3, [r3, #0]
 8006694:	691b      	ldr	r3, [r3, #16]
 8006696:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 800669a:	687b      	ldr	r3, [r7, #4]
 800669c:	68da      	ldr	r2, [r3, #12]
 800669e:	687b      	ldr	r3, [r7, #4]
 80066a0:	681b      	ldr	r3, [r3, #0]
 80066a2:	430a      	orrs	r2, r1
 80066a4:	611a      	str	r2, [r3, #16]
 80066a6:	687b      	ldr	r3, [r7, #4]
 80066a8:	689a      	ldr	r2, [r3, #8]
 80066aa:	687b      	ldr	r3, [r7, #4]
 80066ac:	691b      	ldr	r3, [r3, #16]
 80066ae:	431a      	orrs	r2, r3
 80066b0:	687b      	ldr	r3, [r7, #4]
 80066b2:	695b      	ldr	r3, [r3, #20]
 80066b4:	4313      	orrs	r3, r2
 80066b6:	60bb      	str	r3, [r7, #8]
 80066b8:	687b      	ldr	r3, [r7, #4]
 80066ba:	681b      	ldr	r3, [r3, #0]
 80066bc:	68db      	ldr	r3, [r3, #12]
 80066be:	f423 53b0 	bic.w	r3, r3, #5632	@ 0x1600
 80066c2:	f023 030c 	bic.w	r3, r3, #12
 80066c6:	687a      	ldr	r2, [r7, #4]
 80066c8:	6812      	ldr	r2, [r2, #0]
 80066ca:	68b9      	ldr	r1, [r7, #8]
 80066cc:	430b      	orrs	r3, r1
 80066ce:	60d3      	str	r3, [r2, #12]
 80066d0:	687b      	ldr	r3, [r7, #4]
 80066d2:	681b      	ldr	r3, [r3, #0]
 80066d4:	695b      	ldr	r3, [r3, #20]
 80066d6:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 80066da:	687b      	ldr	r3, [r7, #4]
 80066dc:	699a      	ldr	r2, [r3, #24]
 80066de:	687b      	ldr	r3, [r7, #4]
 80066e0:	681b      	ldr	r3, [r3, #0]
 80066e2:	430a      	orrs	r2, r1
 80066e4:	615a      	str	r2, [r3, #20]
 80066e6:	687b      	ldr	r3, [r7, #4]
 80066e8:	681b      	ldr	r3, [r3, #0]
 80066ea:	4a2c      	ldr	r2, [pc, #176]	@ (800679c <UART_SetConfig+0x114>)
 80066ec:	4293      	cmp	r3, r2
 80066ee:	d103      	bne.n	80066f8 <UART_SetConfig+0x70>
 80066f0:	f7fe fc78 	bl	8004fe4 <HAL_RCC_GetPCLK2Freq>
 80066f4:	60f8      	str	r0, [r7, #12]
 80066f6:	e002      	b.n	80066fe <UART_SetConfig+0x76>
 80066f8:	f7fe fc60 	bl	8004fbc <HAL_RCC_GetPCLK1Freq>
 80066fc:	60f8      	str	r0, [r7, #12]
 80066fe:	68fa      	ldr	r2, [r7, #12]
 8006700:	4613      	mov	r3, r2
 8006702:	009b      	lsls	r3, r3, #2
 8006704:	4413      	add	r3, r2
 8006706:	009a      	lsls	r2, r3, #2
 8006708:	441a      	add	r2, r3
 800670a:	687b      	ldr	r3, [r7, #4]
 800670c:	685b      	ldr	r3, [r3, #4]
 800670e:	009b      	lsls	r3, r3, #2
 8006710:	fbb2 f3f3 	udiv	r3, r2, r3
 8006714:	4a22      	ldr	r2, [pc, #136]	@ (80067a0 <UART_SetConfig+0x118>)
 8006716:	fba2 2303 	umull	r2, r3, r2, r3
 800671a:	095b      	lsrs	r3, r3, #5
 800671c:	0119      	lsls	r1, r3, #4
 800671e:	68fa      	ldr	r2, [r7, #12]
 8006720:	4613      	mov	r3, r2
 8006722:	009b      	lsls	r3, r3, #2
 8006724:	4413      	add	r3, r2
 8006726:	009a      	lsls	r2, r3, #2
 8006728:	441a      	add	r2, r3
 800672a:	687b      	ldr	r3, [r7, #4]
 800672c:	685b      	ldr	r3, [r3, #4]
 800672e:	009b      	lsls	r3, r3, #2
 8006730:	fbb2 f2f3 	udiv	r2, r2, r3
 8006734:	4b1a      	ldr	r3, [pc, #104]	@ (80067a0 <UART_SetConfig+0x118>)
 8006736:	fba3 0302 	umull	r0, r3, r3, r2
 800673a:	095b      	lsrs	r3, r3, #5
 800673c:	2064      	movs	r0, #100	@ 0x64
 800673e:	fb00 f303 	mul.w	r3, r0, r3
 8006742:	1ad3      	subs	r3, r2, r3
 8006744:	011b      	lsls	r3, r3, #4
 8006746:	3332      	adds	r3, #50	@ 0x32
 8006748:	4a15      	ldr	r2, [pc, #84]	@ (80067a0 <UART_SetConfig+0x118>)
 800674a:	fba2 2303 	umull	r2, r3, r2, r3
 800674e:	095b      	lsrs	r3, r3, #5
 8006750:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8006754:	4419      	add	r1, r3
 8006756:	68fa      	ldr	r2, [r7, #12]
 8006758:	4613      	mov	r3, r2
 800675a:	009b      	lsls	r3, r3, #2
 800675c:	4413      	add	r3, r2
 800675e:	009a      	lsls	r2, r3, #2
 8006760:	441a      	add	r2, r3
 8006762:	687b      	ldr	r3, [r7, #4]
 8006764:	685b      	ldr	r3, [r3, #4]
 8006766:	009b      	lsls	r3, r3, #2
 8006768:	fbb2 f2f3 	udiv	r2, r2, r3
 800676c:	4b0c      	ldr	r3, [pc, #48]	@ (80067a0 <UART_SetConfig+0x118>)
 800676e:	fba3 0302 	umull	r0, r3, r3, r2
 8006772:	095b      	lsrs	r3, r3, #5
 8006774:	2064      	movs	r0, #100	@ 0x64
 8006776:	fb00 f303 	mul.w	r3, r0, r3
 800677a:	1ad3      	subs	r3, r2, r3
 800677c:	011b      	lsls	r3, r3, #4
 800677e:	3332      	adds	r3, #50	@ 0x32
 8006780:	4a07      	ldr	r2, [pc, #28]	@ (80067a0 <UART_SetConfig+0x118>)
 8006782:	fba2 2303 	umull	r2, r3, r2, r3
 8006786:	095b      	lsrs	r3, r3, #5
 8006788:	f003 020f 	and.w	r2, r3, #15
 800678c:	687b      	ldr	r3, [r7, #4]
 800678e:	681b      	ldr	r3, [r3, #0]
 8006790:	440a      	add	r2, r1
 8006792:	609a      	str	r2, [r3, #8]
 8006794:	bf00      	nop
 8006796:	3710      	adds	r7, #16
 8006798:	46bd      	mov	sp, r7
 800679a:	bd80      	pop	{r7, pc}
 800679c:	40013800 	.word	0x40013800
 80067a0:	51eb851f 	.word	0x51eb851f

080067a4 <MX_FATFS_Init>:
/* USER CODE BEGIN Variables */

/* USER CODE END Variables */

void MX_FATFS_Init(void)
{
 80067a4:	b580      	push	{r7, lr}
 80067a6:	af00      	add	r7, sp, #0
  /*## FatFS: Link the USER driver ###########################*/
  retUSER = FATFS_LinkDriver(&USER_Driver, USERPath);
 80067a8:	4904      	ldr	r1, [pc, #16]	@ (80067bc <MX_FATFS_Init+0x18>)
 80067aa:	4805      	ldr	r0, [pc, #20]	@ (80067c0 <MX_FATFS_Init+0x1c>)
 80067ac:	f000 f8a6 	bl	80068fc <FATFS_LinkDriver>
 80067b0:	4603      	mov	r3, r0
 80067b2:	461a      	mov	r2, r3
 80067b4:	4b03      	ldr	r3, [pc, #12]	@ (80067c4 <MX_FATFS_Init+0x20>)
 80067b6:	701a      	strb	r2, [r3, #0]

  /* USER CODE BEGIN Init */
  /* additional user code for init */
  /* USER CODE END Init */
}
 80067b8:	bf00      	nop
 80067ba:	bd80      	pop	{r7, pc}
 80067bc:	20000518 	.word	0x20000518
 80067c0:	20000014 	.word	0x20000014
 80067c4:	20000514 	.word	0x20000514

080067c8 <USER_initialize>:
  * @retval DSTATUS: Operation status
  */
DSTATUS USER_initialize (
	BYTE pdrv           /* Physical drive nmuber to identify the drive */
)
{
 80067c8:	b480      	push	{r7}
 80067ca:	b083      	sub	sp, #12
 80067cc:	af00      	add	r7, sp, #0
 80067ce:	4603      	mov	r3, r0
 80067d0:	71fb      	strb	r3, [r7, #7]
  /* USER CODE BEGIN INIT */
    Stat = STA_NOINIT;
 80067d2:	4b05      	ldr	r3, [pc, #20]	@ (80067e8 <USER_initialize+0x20>)
 80067d4:	2201      	movs	r2, #1
 80067d6:	701a      	strb	r2, [r3, #0]
    return Stat;
 80067d8:	4b03      	ldr	r3, [pc, #12]	@ (80067e8 <USER_initialize+0x20>)
 80067da:	781b      	ldrb	r3, [r3, #0]
 80067dc:	b2db      	uxtb	r3, r3
  /* USER CODE END INIT */
}
 80067de:	4618      	mov	r0, r3
 80067e0:	370c      	adds	r7, #12
 80067e2:	46bd      	mov	sp, r7
 80067e4:	bc80      	pop	{r7}
 80067e6:	4770      	bx	lr
 80067e8:	20000011 	.word	0x20000011

080067ec <USER_status>:
  * @retval DSTATUS: Operation status
  */
DSTATUS USER_status (
	BYTE pdrv       /* Physical drive number to identify the drive */
)
{
 80067ec:	b480      	push	{r7}
 80067ee:	b083      	sub	sp, #12
 80067f0:	af00      	add	r7, sp, #0
 80067f2:	4603      	mov	r3, r0
 80067f4:	71fb      	strb	r3, [r7, #7]
  /* USER CODE BEGIN STATUS */
    Stat = STA_NOINIT;
 80067f6:	4b05      	ldr	r3, [pc, #20]	@ (800680c <USER_status+0x20>)
 80067f8:	2201      	movs	r2, #1
 80067fa:	701a      	strb	r2, [r3, #0]
    return Stat;
 80067fc:	4b03      	ldr	r3, [pc, #12]	@ (800680c <USER_status+0x20>)
 80067fe:	781b      	ldrb	r3, [r3, #0]
 8006800:	b2db      	uxtb	r3, r3
  /* USER CODE END STATUS */
}
 8006802:	4618      	mov	r0, r3
 8006804:	370c      	adds	r7, #12
 8006806:	46bd      	mov	sp, r7
 8006808:	bc80      	pop	{r7}
 800680a:	4770      	bx	lr
 800680c:	20000011 	.word	0x20000011

08006810 <USER_read>:
	BYTE pdrv,      /* Physical drive nmuber to identify the drive */
	BYTE *buff,     /* Data buffer to store read data */
	DWORD sector,   /* Sector address in LBA */
	UINT count      /* Number of sectors to read */
)
{
 8006810:	b480      	push	{r7}
 8006812:	b085      	sub	sp, #20
 8006814:	af00      	add	r7, sp, #0
 8006816:	60b9      	str	r1, [r7, #8]
 8006818:	607a      	str	r2, [r7, #4]
 800681a:	603b      	str	r3, [r7, #0]
 800681c:	4603      	mov	r3, r0
 800681e:	73fb      	strb	r3, [r7, #15]
  /* USER CODE BEGIN READ */
    return RES_OK;
 8006820:	2300      	movs	r3, #0
  /* USER CODE END READ */
}
 8006822:	4618      	mov	r0, r3
 8006824:	3714      	adds	r7, #20
 8006826:	46bd      	mov	sp, r7
 8006828:	bc80      	pop	{r7}
 800682a:	4770      	bx	lr

0800682c <USER_write>:
	BYTE pdrv,          /* Physical drive nmuber to identify the drive */
	const BYTE *buff,   /* Data to be written */
	DWORD sector,       /* Sector address in LBA */
	UINT count          /* Number of sectors to write */
)
{
 800682c:	b480      	push	{r7}
 800682e:	b085      	sub	sp, #20
 8006830:	af00      	add	r7, sp, #0
 8006832:	60b9      	str	r1, [r7, #8]
 8006834:	607a      	str	r2, [r7, #4]
 8006836:	603b      	str	r3, [r7, #0]
 8006838:	4603      	mov	r3, r0
 800683a:	73fb      	strb	r3, [r7, #15]
  /* USER CODE BEGIN WRITE */
  /* USER CODE HERE */
    return RES_OK;
 800683c:	2300      	movs	r3, #0
  /* USER CODE END WRITE */
}
 800683e:	4618      	mov	r0, r3
 8006840:	3714      	adds	r7, #20
 8006842:	46bd      	mov	sp, r7
 8006844:	bc80      	pop	{r7}
 8006846:	4770      	bx	lr

08006848 <USER_ioctl>:
DRESULT USER_ioctl (
	BYTE pdrv,      /* Physical drive nmuber (0..) */
	BYTE cmd,       /* Control code */
	void *buff      /* Buffer to send/receive control data */
)
{
 8006848:	b480      	push	{r7}
 800684a:	b085      	sub	sp, #20
 800684c:	af00      	add	r7, sp, #0
 800684e:	4603      	mov	r3, r0
 8006850:	603a      	str	r2, [r7, #0]
 8006852:	71fb      	strb	r3, [r7, #7]
 8006854:	460b      	mov	r3, r1
 8006856:	71bb      	strb	r3, [r7, #6]
  /* USER CODE BEGIN IOCTL */
    DRESULT res = RES_ERROR;
 8006858:	2301      	movs	r3, #1
 800685a:	73fb      	strb	r3, [r7, #15]
    return res;
 800685c:	7bfb      	ldrb	r3, [r7, #15]
  /* USER CODE END IOCTL */
}
 800685e:	4618      	mov	r0, r3
 8006860:	3714      	adds	r7, #20
 8006862:	46bd      	mov	sp, r7
 8006864:	bc80      	pop	{r7}
 8006866:	4770      	bx	lr

08006868 <FATFS_LinkDriverEx>:
  * @param  lun : only used for USB Key Disk to add multi-lun management
            else the paramter must be equal to 0
  * @retval Returns 0 in case of success, otherwise 1.
  */
uint8_t FATFS_LinkDriverEx(Diskio_drvTypeDef *drv, char *path, uint8_t lun)
{
 8006868:	b480      	push	{r7}
 800686a:	b087      	sub	sp, #28
 800686c:	af00      	add	r7, sp, #0
 800686e:	60f8      	str	r0, [r7, #12]
 8006870:	60b9      	str	r1, [r7, #8]
 8006872:	4613      	mov	r3, r2
 8006874:	71fb      	strb	r3, [r7, #7]
  uint8_t ret = 1;
 8006876:	2301      	movs	r3, #1
 8006878:	75fb      	strb	r3, [r7, #23]
  uint8_t DiskNum = 0;
 800687a:	2300      	movs	r3, #0
 800687c:	75bb      	strb	r3, [r7, #22]
  
  if(disk.nbr <= _VOLUMES)
 800687e:	4b1e      	ldr	r3, [pc, #120]	@ (80068f8 <FATFS_LinkDriverEx+0x90>)
 8006880:	7a5b      	ldrb	r3, [r3, #9]
 8006882:	b2db      	uxtb	r3, r3
 8006884:	2b01      	cmp	r3, #1
 8006886:	d831      	bhi.n	80068ec <FATFS_LinkDriverEx+0x84>
  {
    disk.is_initialized[disk.nbr] = 0;
 8006888:	4b1b      	ldr	r3, [pc, #108]	@ (80068f8 <FATFS_LinkDriverEx+0x90>)
 800688a:	7a5b      	ldrb	r3, [r3, #9]
 800688c:	b2db      	uxtb	r3, r3
 800688e:	461a      	mov	r2, r3
 8006890:	4b19      	ldr	r3, [pc, #100]	@ (80068f8 <FATFS_LinkDriverEx+0x90>)
 8006892:	2100      	movs	r1, #0
 8006894:	5499      	strb	r1, [r3, r2]
    disk.drv[disk.nbr] = drv;  
 8006896:	4b18      	ldr	r3, [pc, #96]	@ (80068f8 <FATFS_LinkDriverEx+0x90>)
 8006898:	7a5b      	ldrb	r3, [r3, #9]
 800689a:	b2db      	uxtb	r3, r3
 800689c:	4a16      	ldr	r2, [pc, #88]	@ (80068f8 <FATFS_LinkDriverEx+0x90>)
 800689e:	009b      	lsls	r3, r3, #2
 80068a0:	4413      	add	r3, r2
 80068a2:	68fa      	ldr	r2, [r7, #12]
 80068a4:	605a      	str	r2, [r3, #4]
    disk.lun[disk.nbr] = lun;  
 80068a6:	4b14      	ldr	r3, [pc, #80]	@ (80068f8 <FATFS_LinkDriverEx+0x90>)
 80068a8:	7a5b      	ldrb	r3, [r3, #9]
 80068aa:	b2db      	uxtb	r3, r3
 80068ac:	461a      	mov	r2, r3
 80068ae:	4b12      	ldr	r3, [pc, #72]	@ (80068f8 <FATFS_LinkDriverEx+0x90>)
 80068b0:	4413      	add	r3, r2
 80068b2:	79fa      	ldrb	r2, [r7, #7]
 80068b4:	721a      	strb	r2, [r3, #8]
    DiskNum = disk.nbr++;
 80068b6:	4b10      	ldr	r3, [pc, #64]	@ (80068f8 <FATFS_LinkDriverEx+0x90>)
 80068b8:	7a5b      	ldrb	r3, [r3, #9]
 80068ba:	b2db      	uxtb	r3, r3
 80068bc:	1c5a      	adds	r2, r3, #1
 80068be:	b2d1      	uxtb	r1, r2
 80068c0:	4a0d      	ldr	r2, [pc, #52]	@ (80068f8 <FATFS_LinkDriverEx+0x90>)
 80068c2:	7251      	strb	r1, [r2, #9]
 80068c4:	75bb      	strb	r3, [r7, #22]
    path[0] = DiskNum + '0';
 80068c6:	7dbb      	ldrb	r3, [r7, #22]
 80068c8:	3330      	adds	r3, #48	@ 0x30
 80068ca:	b2da      	uxtb	r2, r3
 80068cc:	68bb      	ldr	r3, [r7, #8]
 80068ce:	701a      	strb	r2, [r3, #0]
    path[1] = ':';
 80068d0:	68bb      	ldr	r3, [r7, #8]
 80068d2:	3301      	adds	r3, #1
 80068d4:	223a      	movs	r2, #58	@ 0x3a
 80068d6:	701a      	strb	r2, [r3, #0]
    path[2] = '/';
 80068d8:	68bb      	ldr	r3, [r7, #8]
 80068da:	3302      	adds	r3, #2
 80068dc:	222f      	movs	r2, #47	@ 0x2f
 80068de:	701a      	strb	r2, [r3, #0]
    path[3] = 0;
 80068e0:	68bb      	ldr	r3, [r7, #8]
 80068e2:	3303      	adds	r3, #3
 80068e4:	2200      	movs	r2, #0
 80068e6:	701a      	strb	r2, [r3, #0]
    ret = 0;
 80068e8:	2300      	movs	r3, #0
 80068ea:	75fb      	strb	r3, [r7, #23]
  }
  
  return ret;
 80068ec:	7dfb      	ldrb	r3, [r7, #23]
}
 80068ee:	4618      	mov	r0, r3
 80068f0:	371c      	adds	r7, #28
 80068f2:	46bd      	mov	sp, r7
 80068f4:	bc80      	pop	{r7}
 80068f6:	4770      	bx	lr
 80068f8:	2000051c 	.word	0x2000051c

080068fc <FATFS_LinkDriver>:
  * @param  drv: pointer to the disk IO Driver structure
  * @param  path: pointer to the logical drive path 
  * @retval Returns 0 in case of success, otherwise 1.
  */
uint8_t FATFS_LinkDriver(Diskio_drvTypeDef *drv, char *path)
{
 80068fc:	b580      	push	{r7, lr}
 80068fe:	b082      	sub	sp, #8
 8006900:	af00      	add	r7, sp, #0
 8006902:	6078      	str	r0, [r7, #4]
 8006904:	6039      	str	r1, [r7, #0]
  return FATFS_LinkDriverEx(drv, path, 0);
 8006906:	2200      	movs	r2, #0
 8006908:	6839      	ldr	r1, [r7, #0]
 800690a:	6878      	ldr	r0, [r7, #4]
 800690c:	f7ff ffac 	bl	8006868 <FATFS_LinkDriverEx>
 8006910:	4603      	mov	r3, r0
}
 8006912:	4618      	mov	r0, r3
 8006914:	3708      	adds	r7, #8
 8006916:	46bd      	mov	sp, r7
 8006918:	bd80      	pop	{r7, pc}

0800691a <atof>:
 800691a:	2100      	movs	r1, #0
 800691c:	f000 beb8 	b.w	8007690 <strtod>

08006920 <malloc>:
 8006920:	4b02      	ldr	r3, [pc, #8]	@ (800692c <malloc+0xc>)
 8006922:	4601      	mov	r1, r0
 8006924:	6818      	ldr	r0, [r3, #0]
 8006926:	f000 b82d 	b.w	8006984 <_malloc_r>
 800692a:	bf00      	nop
 800692c:	200001a0 	.word	0x200001a0

08006930 <free>:
 8006930:	4b02      	ldr	r3, [pc, #8]	@ (800693c <free+0xc>)
 8006932:	4601      	mov	r1, r0
 8006934:	6818      	ldr	r0, [r3, #0]
 8006936:	f002 bcc7 	b.w	80092c8 <_free_r>
 800693a:	bf00      	nop
 800693c:	200001a0 	.word	0x200001a0

08006940 <sbrk_aligned>:
 8006940:	b570      	push	{r4, r5, r6, lr}
 8006942:	4e0f      	ldr	r6, [pc, #60]	@ (8006980 <sbrk_aligned+0x40>)
 8006944:	460c      	mov	r4, r1
 8006946:	6831      	ldr	r1, [r6, #0]
 8006948:	4605      	mov	r5, r0
 800694a:	b911      	cbnz	r1, 8006952 <sbrk_aligned+0x12>
 800694c:	f001 fddc 	bl	8008508 <_sbrk_r>
 8006950:	6030      	str	r0, [r6, #0]
 8006952:	4621      	mov	r1, r4
 8006954:	4628      	mov	r0, r5
 8006956:	f001 fdd7 	bl	8008508 <_sbrk_r>
 800695a:	1c43      	adds	r3, r0, #1
 800695c:	d103      	bne.n	8006966 <sbrk_aligned+0x26>
 800695e:	f04f 34ff 	mov.w	r4, #4294967295
 8006962:	4620      	mov	r0, r4
 8006964:	bd70      	pop	{r4, r5, r6, pc}
 8006966:	1cc4      	adds	r4, r0, #3
 8006968:	f024 0403 	bic.w	r4, r4, #3
 800696c:	42a0      	cmp	r0, r4
 800696e:	d0f8      	beq.n	8006962 <sbrk_aligned+0x22>
 8006970:	1a21      	subs	r1, r4, r0
 8006972:	4628      	mov	r0, r5
 8006974:	f001 fdc8 	bl	8008508 <_sbrk_r>
 8006978:	3001      	adds	r0, #1
 800697a:	d1f2      	bne.n	8006962 <sbrk_aligned+0x22>
 800697c:	e7ef      	b.n	800695e <sbrk_aligned+0x1e>
 800697e:	bf00      	nop
 8006980:	20000528 	.word	0x20000528

08006984 <_malloc_r>:
 8006984:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006988:	1ccd      	adds	r5, r1, #3
 800698a:	f025 0503 	bic.w	r5, r5, #3
 800698e:	3508      	adds	r5, #8
 8006990:	2d0c      	cmp	r5, #12
 8006992:	bf38      	it	cc
 8006994:	250c      	movcc	r5, #12
 8006996:	2d00      	cmp	r5, #0
 8006998:	4606      	mov	r6, r0
 800699a:	db01      	blt.n	80069a0 <_malloc_r+0x1c>
 800699c:	42a9      	cmp	r1, r5
 800699e:	d904      	bls.n	80069aa <_malloc_r+0x26>
 80069a0:	230c      	movs	r3, #12
 80069a2:	6033      	str	r3, [r6, #0]
 80069a4:	2000      	movs	r0, #0
 80069a6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80069aa:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8006a80 <_malloc_r+0xfc>
 80069ae:	f000 f869 	bl	8006a84 <__malloc_lock>
 80069b2:	f8d8 3000 	ldr.w	r3, [r8]
 80069b6:	461c      	mov	r4, r3
 80069b8:	bb44      	cbnz	r4, 8006a0c <_malloc_r+0x88>
 80069ba:	4629      	mov	r1, r5
 80069bc:	4630      	mov	r0, r6
 80069be:	f7ff ffbf 	bl	8006940 <sbrk_aligned>
 80069c2:	1c43      	adds	r3, r0, #1
 80069c4:	4604      	mov	r4, r0
 80069c6:	d158      	bne.n	8006a7a <_malloc_r+0xf6>
 80069c8:	f8d8 4000 	ldr.w	r4, [r8]
 80069cc:	4627      	mov	r7, r4
 80069ce:	2f00      	cmp	r7, #0
 80069d0:	d143      	bne.n	8006a5a <_malloc_r+0xd6>
 80069d2:	2c00      	cmp	r4, #0
 80069d4:	d04b      	beq.n	8006a6e <_malloc_r+0xea>
 80069d6:	6823      	ldr	r3, [r4, #0]
 80069d8:	4639      	mov	r1, r7
 80069da:	4630      	mov	r0, r6
 80069dc:	eb04 0903 	add.w	r9, r4, r3
 80069e0:	f001 fd92 	bl	8008508 <_sbrk_r>
 80069e4:	4581      	cmp	r9, r0
 80069e6:	d142      	bne.n	8006a6e <_malloc_r+0xea>
 80069e8:	6821      	ldr	r1, [r4, #0]
 80069ea:	4630      	mov	r0, r6
 80069ec:	1a6d      	subs	r5, r5, r1
 80069ee:	4629      	mov	r1, r5
 80069f0:	f7ff ffa6 	bl	8006940 <sbrk_aligned>
 80069f4:	3001      	adds	r0, #1
 80069f6:	d03a      	beq.n	8006a6e <_malloc_r+0xea>
 80069f8:	6823      	ldr	r3, [r4, #0]
 80069fa:	442b      	add	r3, r5
 80069fc:	6023      	str	r3, [r4, #0]
 80069fe:	f8d8 3000 	ldr.w	r3, [r8]
 8006a02:	685a      	ldr	r2, [r3, #4]
 8006a04:	bb62      	cbnz	r2, 8006a60 <_malloc_r+0xdc>
 8006a06:	f8c8 7000 	str.w	r7, [r8]
 8006a0a:	e00f      	b.n	8006a2c <_malloc_r+0xa8>
 8006a0c:	6822      	ldr	r2, [r4, #0]
 8006a0e:	1b52      	subs	r2, r2, r5
 8006a10:	d420      	bmi.n	8006a54 <_malloc_r+0xd0>
 8006a12:	2a0b      	cmp	r2, #11
 8006a14:	d917      	bls.n	8006a46 <_malloc_r+0xc2>
 8006a16:	1961      	adds	r1, r4, r5
 8006a18:	42a3      	cmp	r3, r4
 8006a1a:	6025      	str	r5, [r4, #0]
 8006a1c:	bf18      	it	ne
 8006a1e:	6059      	strne	r1, [r3, #4]
 8006a20:	6863      	ldr	r3, [r4, #4]
 8006a22:	bf08      	it	eq
 8006a24:	f8c8 1000 	streq.w	r1, [r8]
 8006a28:	5162      	str	r2, [r4, r5]
 8006a2a:	604b      	str	r3, [r1, #4]
 8006a2c:	4630      	mov	r0, r6
 8006a2e:	f000 f82f 	bl	8006a90 <__malloc_unlock>
 8006a32:	f104 000b 	add.w	r0, r4, #11
 8006a36:	1d23      	adds	r3, r4, #4
 8006a38:	f020 0007 	bic.w	r0, r0, #7
 8006a3c:	1ac2      	subs	r2, r0, r3
 8006a3e:	bf1c      	itt	ne
 8006a40:	1a1b      	subne	r3, r3, r0
 8006a42:	50a3      	strne	r3, [r4, r2]
 8006a44:	e7af      	b.n	80069a6 <_malloc_r+0x22>
 8006a46:	6862      	ldr	r2, [r4, #4]
 8006a48:	42a3      	cmp	r3, r4
 8006a4a:	bf0c      	ite	eq
 8006a4c:	f8c8 2000 	streq.w	r2, [r8]
 8006a50:	605a      	strne	r2, [r3, #4]
 8006a52:	e7eb      	b.n	8006a2c <_malloc_r+0xa8>
 8006a54:	4623      	mov	r3, r4
 8006a56:	6864      	ldr	r4, [r4, #4]
 8006a58:	e7ae      	b.n	80069b8 <_malloc_r+0x34>
 8006a5a:	463c      	mov	r4, r7
 8006a5c:	687f      	ldr	r7, [r7, #4]
 8006a5e:	e7b6      	b.n	80069ce <_malloc_r+0x4a>
 8006a60:	461a      	mov	r2, r3
 8006a62:	685b      	ldr	r3, [r3, #4]
 8006a64:	42a3      	cmp	r3, r4
 8006a66:	d1fb      	bne.n	8006a60 <_malloc_r+0xdc>
 8006a68:	2300      	movs	r3, #0
 8006a6a:	6053      	str	r3, [r2, #4]
 8006a6c:	e7de      	b.n	8006a2c <_malloc_r+0xa8>
 8006a6e:	230c      	movs	r3, #12
 8006a70:	4630      	mov	r0, r6
 8006a72:	6033      	str	r3, [r6, #0]
 8006a74:	f000 f80c 	bl	8006a90 <__malloc_unlock>
 8006a78:	e794      	b.n	80069a4 <_malloc_r+0x20>
 8006a7a:	6005      	str	r5, [r0, #0]
 8006a7c:	e7d6      	b.n	8006a2c <_malloc_r+0xa8>
 8006a7e:	bf00      	nop
 8006a80:	2000052c 	.word	0x2000052c

08006a84 <__malloc_lock>:
 8006a84:	4801      	ldr	r0, [pc, #4]	@ (8006a8c <__malloc_lock+0x8>)
 8006a86:	f001 bd8c 	b.w	80085a2 <__retarget_lock_acquire_recursive>
 8006a8a:	bf00      	nop
 8006a8c:	20000670 	.word	0x20000670

08006a90 <__malloc_unlock>:
 8006a90:	4801      	ldr	r0, [pc, #4]	@ (8006a98 <__malloc_unlock+0x8>)
 8006a92:	f001 bd87 	b.w	80085a4 <__retarget_lock_release_recursive>
 8006a96:	bf00      	nop
 8006a98:	20000670 	.word	0x20000670

08006a9c <sulp>:
 8006a9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006aa0:	460f      	mov	r7, r1
 8006aa2:	4690      	mov	r8, r2
 8006aa4:	f003 fb16 	bl	800a0d4 <__ulp>
 8006aa8:	4604      	mov	r4, r0
 8006aaa:	460d      	mov	r5, r1
 8006aac:	f1b8 0f00 	cmp.w	r8, #0
 8006ab0:	d011      	beq.n	8006ad6 <sulp+0x3a>
 8006ab2:	f3c7 530a 	ubfx	r3, r7, #20, #11
 8006ab6:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 8006aba:	2b00      	cmp	r3, #0
 8006abc:	dd0b      	ble.n	8006ad6 <sulp+0x3a>
 8006abe:	2400      	movs	r4, #0
 8006ac0:	051b      	lsls	r3, r3, #20
 8006ac2:	f103 557f 	add.w	r5, r3, #1069547520	@ 0x3fc00000
 8006ac6:	f505 1540 	add.w	r5, r5, #3145728	@ 0x300000
 8006aca:	4622      	mov	r2, r4
 8006acc:	462b      	mov	r3, r5
 8006ace:	f7f9 fd0d 	bl	80004ec <__aeabi_dmul>
 8006ad2:	4604      	mov	r4, r0
 8006ad4:	460d      	mov	r5, r1
 8006ad6:	4620      	mov	r0, r4
 8006ad8:	4629      	mov	r1, r5
 8006ada:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08006ae0 <_strtod_l>:
 8006ae0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006ae4:	b09f      	sub	sp, #124	@ 0x7c
 8006ae6:	9217      	str	r2, [sp, #92]	@ 0x5c
 8006ae8:	2200      	movs	r2, #0
 8006aea:	460c      	mov	r4, r1
 8006aec:	921a      	str	r2, [sp, #104]	@ 0x68
 8006aee:	f04f 0a00 	mov.w	sl, #0
 8006af2:	f04f 0b00 	mov.w	fp, #0
 8006af6:	460a      	mov	r2, r1
 8006af8:	9005      	str	r0, [sp, #20]
 8006afa:	9219      	str	r2, [sp, #100]	@ 0x64
 8006afc:	7811      	ldrb	r1, [r2, #0]
 8006afe:	292b      	cmp	r1, #43	@ 0x2b
 8006b00:	d048      	beq.n	8006b94 <_strtod_l+0xb4>
 8006b02:	d836      	bhi.n	8006b72 <_strtod_l+0x92>
 8006b04:	290d      	cmp	r1, #13
 8006b06:	d830      	bhi.n	8006b6a <_strtod_l+0x8a>
 8006b08:	2908      	cmp	r1, #8
 8006b0a:	d830      	bhi.n	8006b6e <_strtod_l+0x8e>
 8006b0c:	2900      	cmp	r1, #0
 8006b0e:	d039      	beq.n	8006b84 <_strtod_l+0xa4>
 8006b10:	2200      	movs	r2, #0
 8006b12:	920b      	str	r2, [sp, #44]	@ 0x2c
 8006b14:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 8006b16:	782a      	ldrb	r2, [r5, #0]
 8006b18:	2a30      	cmp	r2, #48	@ 0x30
 8006b1a:	f040 80b1 	bne.w	8006c80 <_strtod_l+0x1a0>
 8006b1e:	786a      	ldrb	r2, [r5, #1]
 8006b20:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8006b24:	2a58      	cmp	r2, #88	@ 0x58
 8006b26:	d16c      	bne.n	8006c02 <_strtod_l+0x122>
 8006b28:	9302      	str	r3, [sp, #8]
 8006b2a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8006b2c:	4a8e      	ldr	r2, [pc, #568]	@ (8006d68 <_strtod_l+0x288>)
 8006b2e:	9301      	str	r3, [sp, #4]
 8006b30:	ab1a      	add	r3, sp, #104	@ 0x68
 8006b32:	9300      	str	r3, [sp, #0]
 8006b34:	9805      	ldr	r0, [sp, #20]
 8006b36:	ab1b      	add	r3, sp, #108	@ 0x6c
 8006b38:	a919      	add	r1, sp, #100	@ 0x64
 8006b3a:	f002 fc75 	bl	8009428 <__gethex>
 8006b3e:	f010 060f 	ands.w	r6, r0, #15
 8006b42:	4604      	mov	r4, r0
 8006b44:	d005      	beq.n	8006b52 <_strtod_l+0x72>
 8006b46:	2e06      	cmp	r6, #6
 8006b48:	d126      	bne.n	8006b98 <_strtod_l+0xb8>
 8006b4a:	2300      	movs	r3, #0
 8006b4c:	3501      	adds	r5, #1
 8006b4e:	9519      	str	r5, [sp, #100]	@ 0x64
 8006b50:	930b      	str	r3, [sp, #44]	@ 0x2c
 8006b52:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8006b54:	2b00      	cmp	r3, #0
 8006b56:	f040 8584 	bne.w	8007662 <_strtod_l+0xb82>
 8006b5a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8006b5c:	b1bb      	cbz	r3, 8006b8e <_strtod_l+0xae>
 8006b5e:	4650      	mov	r0, sl
 8006b60:	f10b 4100 	add.w	r1, fp, #2147483648	@ 0x80000000
 8006b64:	b01f      	add	sp, #124	@ 0x7c
 8006b66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006b6a:	2920      	cmp	r1, #32
 8006b6c:	d1d0      	bne.n	8006b10 <_strtod_l+0x30>
 8006b6e:	3201      	adds	r2, #1
 8006b70:	e7c3      	b.n	8006afa <_strtod_l+0x1a>
 8006b72:	292d      	cmp	r1, #45	@ 0x2d
 8006b74:	d1cc      	bne.n	8006b10 <_strtod_l+0x30>
 8006b76:	2101      	movs	r1, #1
 8006b78:	910b      	str	r1, [sp, #44]	@ 0x2c
 8006b7a:	1c51      	adds	r1, r2, #1
 8006b7c:	9119      	str	r1, [sp, #100]	@ 0x64
 8006b7e:	7852      	ldrb	r2, [r2, #1]
 8006b80:	2a00      	cmp	r2, #0
 8006b82:	d1c7      	bne.n	8006b14 <_strtod_l+0x34>
 8006b84:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8006b86:	9419      	str	r4, [sp, #100]	@ 0x64
 8006b88:	2b00      	cmp	r3, #0
 8006b8a:	f040 8568 	bne.w	800765e <_strtod_l+0xb7e>
 8006b8e:	4650      	mov	r0, sl
 8006b90:	4659      	mov	r1, fp
 8006b92:	e7e7      	b.n	8006b64 <_strtod_l+0x84>
 8006b94:	2100      	movs	r1, #0
 8006b96:	e7ef      	b.n	8006b78 <_strtod_l+0x98>
 8006b98:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8006b9a:	b13a      	cbz	r2, 8006bac <_strtod_l+0xcc>
 8006b9c:	2135      	movs	r1, #53	@ 0x35
 8006b9e:	a81c      	add	r0, sp, #112	@ 0x70
 8006ba0:	f003 fb88 	bl	800a2b4 <__copybits>
 8006ba4:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8006ba6:	9805      	ldr	r0, [sp, #20]
 8006ba8:	f002 ff62 	bl	8009a70 <_Bfree>
 8006bac:	3e01      	subs	r6, #1
 8006bae:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8006bb0:	2e04      	cmp	r6, #4
 8006bb2:	d806      	bhi.n	8006bc2 <_strtod_l+0xe2>
 8006bb4:	e8df f006 	tbb	[pc, r6]
 8006bb8:	201d0314 	.word	0x201d0314
 8006bbc:	14          	.byte	0x14
 8006bbd:	00          	.byte	0x00
 8006bbe:	e9dd ab1c 	ldrd	sl, fp, [sp, #112]	@ 0x70
 8006bc2:	05e1      	lsls	r1, r4, #23
 8006bc4:	bf48      	it	mi
 8006bc6:	f04b 4b00 	orrmi.w	fp, fp, #2147483648	@ 0x80000000
 8006bca:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8006bce:	0d1b      	lsrs	r3, r3, #20
 8006bd0:	051b      	lsls	r3, r3, #20
 8006bd2:	2b00      	cmp	r3, #0
 8006bd4:	d1bd      	bne.n	8006b52 <_strtod_l+0x72>
 8006bd6:	f001 fcb9 	bl	800854c <__errno>
 8006bda:	2322      	movs	r3, #34	@ 0x22
 8006bdc:	6003      	str	r3, [r0, #0]
 8006bde:	e7b8      	b.n	8006b52 <_strtod_l+0x72>
 8006be0:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 8006be4:	e9dd a31c 	ldrd	sl, r3, [sp, #112]	@ 0x70
 8006be8:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 8006bec:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 8006bf0:	e7e7      	b.n	8006bc2 <_strtod_l+0xe2>
 8006bf2:	f8df b178 	ldr.w	fp, [pc, #376]	@ 8006d6c <_strtod_l+0x28c>
 8006bf6:	e7e4      	b.n	8006bc2 <_strtod_l+0xe2>
 8006bf8:	f06f 4b00 	mvn.w	fp, #2147483648	@ 0x80000000
 8006bfc:	f04f 3aff 	mov.w	sl, #4294967295
 8006c00:	e7df      	b.n	8006bc2 <_strtod_l+0xe2>
 8006c02:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8006c04:	1c5a      	adds	r2, r3, #1
 8006c06:	9219      	str	r2, [sp, #100]	@ 0x64
 8006c08:	785b      	ldrb	r3, [r3, #1]
 8006c0a:	2b30      	cmp	r3, #48	@ 0x30
 8006c0c:	d0f9      	beq.n	8006c02 <_strtod_l+0x122>
 8006c0e:	2b00      	cmp	r3, #0
 8006c10:	d09f      	beq.n	8006b52 <_strtod_l+0x72>
 8006c12:	2301      	movs	r3, #1
 8006c14:	9309      	str	r3, [sp, #36]	@ 0x24
 8006c16:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8006c18:	220a      	movs	r2, #10
 8006c1a:	930c      	str	r3, [sp, #48]	@ 0x30
 8006c1c:	2300      	movs	r3, #0
 8006c1e:	461f      	mov	r7, r3
 8006c20:	9308      	str	r3, [sp, #32]
 8006c22:	930a      	str	r3, [sp, #40]	@ 0x28
 8006c24:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8006c26:	7805      	ldrb	r5, [r0, #0]
 8006c28:	f1a5 0330 	sub.w	r3, r5, #48	@ 0x30
 8006c2c:	b2d9      	uxtb	r1, r3
 8006c2e:	2909      	cmp	r1, #9
 8006c30:	d928      	bls.n	8006c84 <_strtod_l+0x1a4>
 8006c32:	2201      	movs	r2, #1
 8006c34:	494e      	ldr	r1, [pc, #312]	@ (8006d70 <_strtod_l+0x290>)
 8006c36:	f001 fbc0 	bl	80083ba <strncmp>
 8006c3a:	2800      	cmp	r0, #0
 8006c3c:	d032      	beq.n	8006ca4 <_strtod_l+0x1c4>
 8006c3e:	2000      	movs	r0, #0
 8006c40:	462a      	mov	r2, r5
 8006c42:	4681      	mov	r9, r0
 8006c44:	463d      	mov	r5, r7
 8006c46:	4603      	mov	r3, r0
 8006c48:	2a65      	cmp	r2, #101	@ 0x65
 8006c4a:	d001      	beq.n	8006c50 <_strtod_l+0x170>
 8006c4c:	2a45      	cmp	r2, #69	@ 0x45
 8006c4e:	d114      	bne.n	8006c7a <_strtod_l+0x19a>
 8006c50:	b91d      	cbnz	r5, 8006c5a <_strtod_l+0x17a>
 8006c52:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8006c54:	4302      	orrs	r2, r0
 8006c56:	d095      	beq.n	8006b84 <_strtod_l+0xa4>
 8006c58:	2500      	movs	r5, #0
 8006c5a:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 8006c5c:	1c62      	adds	r2, r4, #1
 8006c5e:	9219      	str	r2, [sp, #100]	@ 0x64
 8006c60:	7862      	ldrb	r2, [r4, #1]
 8006c62:	2a2b      	cmp	r2, #43	@ 0x2b
 8006c64:	d077      	beq.n	8006d56 <_strtod_l+0x276>
 8006c66:	2a2d      	cmp	r2, #45	@ 0x2d
 8006c68:	d07b      	beq.n	8006d62 <_strtod_l+0x282>
 8006c6a:	f04f 0c00 	mov.w	ip, #0
 8006c6e:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 8006c72:	2909      	cmp	r1, #9
 8006c74:	f240 8082 	bls.w	8006d7c <_strtod_l+0x29c>
 8006c78:	9419      	str	r4, [sp, #100]	@ 0x64
 8006c7a:	f04f 0800 	mov.w	r8, #0
 8006c7e:	e0a2      	b.n	8006dc6 <_strtod_l+0x2e6>
 8006c80:	2300      	movs	r3, #0
 8006c82:	e7c7      	b.n	8006c14 <_strtod_l+0x134>
 8006c84:	2f08      	cmp	r7, #8
 8006c86:	bfd5      	itete	le
 8006c88:	990a      	ldrle	r1, [sp, #40]	@ 0x28
 8006c8a:	9908      	ldrgt	r1, [sp, #32]
 8006c8c:	fb02 3301 	mlale	r3, r2, r1, r3
 8006c90:	fb02 3301 	mlagt	r3, r2, r1, r3
 8006c94:	f100 0001 	add.w	r0, r0, #1
 8006c98:	bfd4      	ite	le
 8006c9a:	930a      	strle	r3, [sp, #40]	@ 0x28
 8006c9c:	9308      	strgt	r3, [sp, #32]
 8006c9e:	3701      	adds	r7, #1
 8006ca0:	9019      	str	r0, [sp, #100]	@ 0x64
 8006ca2:	e7bf      	b.n	8006c24 <_strtod_l+0x144>
 8006ca4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8006ca6:	1c5a      	adds	r2, r3, #1
 8006ca8:	9219      	str	r2, [sp, #100]	@ 0x64
 8006caa:	785a      	ldrb	r2, [r3, #1]
 8006cac:	b37f      	cbz	r7, 8006d0e <_strtod_l+0x22e>
 8006cae:	4681      	mov	r9, r0
 8006cb0:	463d      	mov	r5, r7
 8006cb2:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 8006cb6:	2b09      	cmp	r3, #9
 8006cb8:	d912      	bls.n	8006ce0 <_strtod_l+0x200>
 8006cba:	2301      	movs	r3, #1
 8006cbc:	e7c4      	b.n	8006c48 <_strtod_l+0x168>
 8006cbe:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8006cc0:	3001      	adds	r0, #1
 8006cc2:	1c5a      	adds	r2, r3, #1
 8006cc4:	9219      	str	r2, [sp, #100]	@ 0x64
 8006cc6:	785a      	ldrb	r2, [r3, #1]
 8006cc8:	2a30      	cmp	r2, #48	@ 0x30
 8006cca:	d0f8      	beq.n	8006cbe <_strtod_l+0x1de>
 8006ccc:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 8006cd0:	2b08      	cmp	r3, #8
 8006cd2:	f200 84cb 	bhi.w	800766c <_strtod_l+0xb8c>
 8006cd6:	4681      	mov	r9, r0
 8006cd8:	2000      	movs	r0, #0
 8006cda:	4605      	mov	r5, r0
 8006cdc:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8006cde:	930c      	str	r3, [sp, #48]	@ 0x30
 8006ce0:	3a30      	subs	r2, #48	@ 0x30
 8006ce2:	f100 0301 	add.w	r3, r0, #1
 8006ce6:	d02a      	beq.n	8006d3e <_strtod_l+0x25e>
 8006ce8:	4499      	add	r9, r3
 8006cea:	210a      	movs	r1, #10
 8006cec:	462b      	mov	r3, r5
 8006cee:	eb00 0c05 	add.w	ip, r0, r5
 8006cf2:	4563      	cmp	r3, ip
 8006cf4:	d10d      	bne.n	8006d12 <_strtod_l+0x232>
 8006cf6:	1c69      	adds	r1, r5, #1
 8006cf8:	4401      	add	r1, r0
 8006cfa:	4428      	add	r0, r5
 8006cfc:	2808      	cmp	r0, #8
 8006cfe:	dc16      	bgt.n	8006d2e <_strtod_l+0x24e>
 8006d00:	230a      	movs	r3, #10
 8006d02:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8006d04:	fb03 2300 	mla	r3, r3, r0, r2
 8006d08:	930a      	str	r3, [sp, #40]	@ 0x28
 8006d0a:	2300      	movs	r3, #0
 8006d0c:	e018      	b.n	8006d40 <_strtod_l+0x260>
 8006d0e:	4638      	mov	r0, r7
 8006d10:	e7da      	b.n	8006cc8 <_strtod_l+0x1e8>
 8006d12:	2b08      	cmp	r3, #8
 8006d14:	f103 0301 	add.w	r3, r3, #1
 8006d18:	dc03      	bgt.n	8006d22 <_strtod_l+0x242>
 8006d1a:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8006d1c:	434e      	muls	r6, r1
 8006d1e:	960a      	str	r6, [sp, #40]	@ 0x28
 8006d20:	e7e7      	b.n	8006cf2 <_strtod_l+0x212>
 8006d22:	2b10      	cmp	r3, #16
 8006d24:	bfde      	ittt	le
 8006d26:	9e08      	ldrle	r6, [sp, #32]
 8006d28:	434e      	mulle	r6, r1
 8006d2a:	9608      	strle	r6, [sp, #32]
 8006d2c:	e7e1      	b.n	8006cf2 <_strtod_l+0x212>
 8006d2e:	280f      	cmp	r0, #15
 8006d30:	dceb      	bgt.n	8006d0a <_strtod_l+0x22a>
 8006d32:	230a      	movs	r3, #10
 8006d34:	9808      	ldr	r0, [sp, #32]
 8006d36:	fb03 2300 	mla	r3, r3, r0, r2
 8006d3a:	9308      	str	r3, [sp, #32]
 8006d3c:	e7e5      	b.n	8006d0a <_strtod_l+0x22a>
 8006d3e:	4629      	mov	r1, r5
 8006d40:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8006d42:	460d      	mov	r5, r1
 8006d44:	1c50      	adds	r0, r2, #1
 8006d46:	9019      	str	r0, [sp, #100]	@ 0x64
 8006d48:	7852      	ldrb	r2, [r2, #1]
 8006d4a:	4618      	mov	r0, r3
 8006d4c:	e7b1      	b.n	8006cb2 <_strtod_l+0x1d2>
 8006d4e:	f04f 0900 	mov.w	r9, #0
 8006d52:	2301      	movs	r3, #1
 8006d54:	e77d      	b.n	8006c52 <_strtod_l+0x172>
 8006d56:	f04f 0c00 	mov.w	ip, #0
 8006d5a:	1ca2      	adds	r2, r4, #2
 8006d5c:	9219      	str	r2, [sp, #100]	@ 0x64
 8006d5e:	78a2      	ldrb	r2, [r4, #2]
 8006d60:	e785      	b.n	8006c6e <_strtod_l+0x18e>
 8006d62:	f04f 0c01 	mov.w	ip, #1
 8006d66:	e7f8      	b.n	8006d5a <_strtod_l+0x27a>
 8006d68:	0800bf1c 	.word	0x0800bf1c
 8006d6c:	7ff00000 	.word	0x7ff00000
 8006d70:	0800bf06 	.word	0x0800bf06
 8006d74:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8006d76:	1c51      	adds	r1, r2, #1
 8006d78:	9119      	str	r1, [sp, #100]	@ 0x64
 8006d7a:	7852      	ldrb	r2, [r2, #1]
 8006d7c:	2a30      	cmp	r2, #48	@ 0x30
 8006d7e:	d0f9      	beq.n	8006d74 <_strtod_l+0x294>
 8006d80:	f1a2 0131 	sub.w	r1, r2, #49	@ 0x31
 8006d84:	2908      	cmp	r1, #8
 8006d86:	f63f af78 	bhi.w	8006c7a <_strtod_l+0x19a>
 8006d8a:	f04f 080a 	mov.w	r8, #10
 8006d8e:	3a30      	subs	r2, #48	@ 0x30
 8006d90:	920e      	str	r2, [sp, #56]	@ 0x38
 8006d92:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8006d94:	920f      	str	r2, [sp, #60]	@ 0x3c
 8006d96:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8006d98:	1c56      	adds	r6, r2, #1
 8006d9a:	9619      	str	r6, [sp, #100]	@ 0x64
 8006d9c:	7852      	ldrb	r2, [r2, #1]
 8006d9e:	f1a2 0e30 	sub.w	lr, r2, #48	@ 0x30
 8006da2:	f1be 0f09 	cmp.w	lr, #9
 8006da6:	d939      	bls.n	8006e1c <_strtod_l+0x33c>
 8006da8:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8006daa:	f644 681f 	movw	r8, #19999	@ 0x4e1f
 8006dae:	1a76      	subs	r6, r6, r1
 8006db0:	2e08      	cmp	r6, #8
 8006db2:	dc03      	bgt.n	8006dbc <_strtod_l+0x2dc>
 8006db4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8006db6:	4588      	cmp	r8, r1
 8006db8:	bfa8      	it	ge
 8006dba:	4688      	movge	r8, r1
 8006dbc:	f1bc 0f00 	cmp.w	ip, #0
 8006dc0:	d001      	beq.n	8006dc6 <_strtod_l+0x2e6>
 8006dc2:	f1c8 0800 	rsb	r8, r8, #0
 8006dc6:	2d00      	cmp	r5, #0
 8006dc8:	d14e      	bne.n	8006e68 <_strtod_l+0x388>
 8006dca:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8006dcc:	4308      	orrs	r0, r1
 8006dce:	f47f aec0 	bne.w	8006b52 <_strtod_l+0x72>
 8006dd2:	2b00      	cmp	r3, #0
 8006dd4:	f47f aed6 	bne.w	8006b84 <_strtod_l+0xa4>
 8006dd8:	2a69      	cmp	r2, #105	@ 0x69
 8006dda:	d028      	beq.n	8006e2e <_strtod_l+0x34e>
 8006ddc:	dc25      	bgt.n	8006e2a <_strtod_l+0x34a>
 8006dde:	2a49      	cmp	r2, #73	@ 0x49
 8006de0:	d025      	beq.n	8006e2e <_strtod_l+0x34e>
 8006de2:	2a4e      	cmp	r2, #78	@ 0x4e
 8006de4:	f47f aece 	bne.w	8006b84 <_strtod_l+0xa4>
 8006de8:	499a      	ldr	r1, [pc, #616]	@ (8007054 <_strtod_l+0x574>)
 8006dea:	a819      	add	r0, sp, #100	@ 0x64
 8006dec:	f002 fd3e 	bl	800986c <__match>
 8006df0:	2800      	cmp	r0, #0
 8006df2:	f43f aec7 	beq.w	8006b84 <_strtod_l+0xa4>
 8006df6:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8006df8:	781b      	ldrb	r3, [r3, #0]
 8006dfa:	2b28      	cmp	r3, #40	@ 0x28
 8006dfc:	d12e      	bne.n	8006e5c <_strtod_l+0x37c>
 8006dfe:	4996      	ldr	r1, [pc, #600]	@ (8007058 <_strtod_l+0x578>)
 8006e00:	aa1c      	add	r2, sp, #112	@ 0x70
 8006e02:	a819      	add	r0, sp, #100	@ 0x64
 8006e04:	f002 fd46 	bl	8009894 <__hexnan>
 8006e08:	2805      	cmp	r0, #5
 8006e0a:	d127      	bne.n	8006e5c <_strtod_l+0x37c>
 8006e0c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8006e0e:	f8dd a070 	ldr.w	sl, [sp, #112]	@ 0x70
 8006e12:	f043 4bff 	orr.w	fp, r3, #2139095040	@ 0x7f800000
 8006e16:	f44b 0be0 	orr.w	fp, fp, #7340032	@ 0x700000
 8006e1a:	e69a      	b.n	8006b52 <_strtod_l+0x72>
 8006e1c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8006e1e:	fb08 2101 	mla	r1, r8, r1, r2
 8006e22:	f1a1 0230 	sub.w	r2, r1, #48	@ 0x30
 8006e26:	920e      	str	r2, [sp, #56]	@ 0x38
 8006e28:	e7b5      	b.n	8006d96 <_strtod_l+0x2b6>
 8006e2a:	2a6e      	cmp	r2, #110	@ 0x6e
 8006e2c:	e7da      	b.n	8006de4 <_strtod_l+0x304>
 8006e2e:	498b      	ldr	r1, [pc, #556]	@ (800705c <_strtod_l+0x57c>)
 8006e30:	a819      	add	r0, sp, #100	@ 0x64
 8006e32:	f002 fd1b 	bl	800986c <__match>
 8006e36:	2800      	cmp	r0, #0
 8006e38:	f43f aea4 	beq.w	8006b84 <_strtod_l+0xa4>
 8006e3c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8006e3e:	4988      	ldr	r1, [pc, #544]	@ (8007060 <_strtod_l+0x580>)
 8006e40:	3b01      	subs	r3, #1
 8006e42:	a819      	add	r0, sp, #100	@ 0x64
 8006e44:	9319      	str	r3, [sp, #100]	@ 0x64
 8006e46:	f002 fd11 	bl	800986c <__match>
 8006e4a:	b910      	cbnz	r0, 8006e52 <_strtod_l+0x372>
 8006e4c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8006e4e:	3301      	adds	r3, #1
 8006e50:	9319      	str	r3, [sp, #100]	@ 0x64
 8006e52:	f04f 0a00 	mov.w	sl, #0
 8006e56:	f8df b20c 	ldr.w	fp, [pc, #524]	@ 8007064 <_strtod_l+0x584>
 8006e5a:	e67a      	b.n	8006b52 <_strtod_l+0x72>
 8006e5c:	4882      	ldr	r0, [pc, #520]	@ (8007068 <_strtod_l+0x588>)
 8006e5e:	f001 fbbf 	bl	80085e0 <nan>
 8006e62:	4682      	mov	sl, r0
 8006e64:	468b      	mov	fp, r1
 8006e66:	e674      	b.n	8006b52 <_strtod_l+0x72>
 8006e68:	eba8 0309 	sub.w	r3, r8, r9
 8006e6c:	2f00      	cmp	r7, #0
 8006e6e:	bf08      	it	eq
 8006e70:	462f      	moveq	r7, r5
 8006e72:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8006e74:	2d10      	cmp	r5, #16
 8006e76:	462c      	mov	r4, r5
 8006e78:	9309      	str	r3, [sp, #36]	@ 0x24
 8006e7a:	bfa8      	it	ge
 8006e7c:	2410      	movge	r4, #16
 8006e7e:	f7f9 fabb 	bl	80003f8 <__aeabi_ui2d>
 8006e82:	2d09      	cmp	r5, #9
 8006e84:	4682      	mov	sl, r0
 8006e86:	468b      	mov	fp, r1
 8006e88:	dc11      	bgt.n	8006eae <_strtod_l+0x3ce>
 8006e8a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006e8c:	2b00      	cmp	r3, #0
 8006e8e:	f43f ae60 	beq.w	8006b52 <_strtod_l+0x72>
 8006e92:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006e94:	dd76      	ble.n	8006f84 <_strtod_l+0x4a4>
 8006e96:	2b16      	cmp	r3, #22
 8006e98:	dc5d      	bgt.n	8006f56 <_strtod_l+0x476>
 8006e9a:	4974      	ldr	r1, [pc, #464]	@ (800706c <_strtod_l+0x58c>)
 8006e9c:	4652      	mov	r2, sl
 8006e9e:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8006ea2:	465b      	mov	r3, fp
 8006ea4:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006ea8:	f7f9 fb20 	bl	80004ec <__aeabi_dmul>
 8006eac:	e7d9      	b.n	8006e62 <_strtod_l+0x382>
 8006eae:	4b6f      	ldr	r3, [pc, #444]	@ (800706c <_strtod_l+0x58c>)
 8006eb0:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8006eb4:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
 8006eb8:	f7f9 fb18 	bl	80004ec <__aeabi_dmul>
 8006ebc:	4682      	mov	sl, r0
 8006ebe:	9808      	ldr	r0, [sp, #32]
 8006ec0:	468b      	mov	fp, r1
 8006ec2:	f7f9 fa99 	bl	80003f8 <__aeabi_ui2d>
 8006ec6:	4602      	mov	r2, r0
 8006ec8:	460b      	mov	r3, r1
 8006eca:	4650      	mov	r0, sl
 8006ecc:	4659      	mov	r1, fp
 8006ece:	f7f9 f957 	bl	8000180 <__adddf3>
 8006ed2:	2d0f      	cmp	r5, #15
 8006ed4:	4682      	mov	sl, r0
 8006ed6:	468b      	mov	fp, r1
 8006ed8:	ddd7      	ble.n	8006e8a <_strtod_l+0x3aa>
 8006eda:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006edc:	1b2c      	subs	r4, r5, r4
 8006ede:	441c      	add	r4, r3
 8006ee0:	2c00      	cmp	r4, #0
 8006ee2:	f340 8096 	ble.w	8007012 <_strtod_l+0x532>
 8006ee6:	f014 030f 	ands.w	r3, r4, #15
 8006eea:	d00a      	beq.n	8006f02 <_strtod_l+0x422>
 8006eec:	495f      	ldr	r1, [pc, #380]	@ (800706c <_strtod_l+0x58c>)
 8006eee:	4652      	mov	r2, sl
 8006ef0:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8006ef4:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006ef8:	465b      	mov	r3, fp
 8006efa:	f7f9 faf7 	bl	80004ec <__aeabi_dmul>
 8006efe:	4682      	mov	sl, r0
 8006f00:	468b      	mov	fp, r1
 8006f02:	f034 040f 	bics.w	r4, r4, #15
 8006f06:	d073      	beq.n	8006ff0 <_strtod_l+0x510>
 8006f08:	f5b4 7f9a 	cmp.w	r4, #308	@ 0x134
 8006f0c:	dd48      	ble.n	8006fa0 <_strtod_l+0x4c0>
 8006f0e:	2400      	movs	r4, #0
 8006f10:	46a0      	mov	r8, r4
 8006f12:	46a1      	mov	r9, r4
 8006f14:	940a      	str	r4, [sp, #40]	@ 0x28
 8006f16:	2322      	movs	r3, #34	@ 0x22
 8006f18:	f04f 0a00 	mov.w	sl, #0
 8006f1c:	9a05      	ldr	r2, [sp, #20]
 8006f1e:	f8df b144 	ldr.w	fp, [pc, #324]	@ 8007064 <_strtod_l+0x584>
 8006f22:	6013      	str	r3, [r2, #0]
 8006f24:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006f26:	2b00      	cmp	r3, #0
 8006f28:	f43f ae13 	beq.w	8006b52 <_strtod_l+0x72>
 8006f2c:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8006f2e:	9805      	ldr	r0, [sp, #20]
 8006f30:	f002 fd9e 	bl	8009a70 <_Bfree>
 8006f34:	4649      	mov	r1, r9
 8006f36:	9805      	ldr	r0, [sp, #20]
 8006f38:	f002 fd9a 	bl	8009a70 <_Bfree>
 8006f3c:	4641      	mov	r1, r8
 8006f3e:	9805      	ldr	r0, [sp, #20]
 8006f40:	f002 fd96 	bl	8009a70 <_Bfree>
 8006f44:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8006f46:	9805      	ldr	r0, [sp, #20]
 8006f48:	f002 fd92 	bl	8009a70 <_Bfree>
 8006f4c:	4621      	mov	r1, r4
 8006f4e:	9805      	ldr	r0, [sp, #20]
 8006f50:	f002 fd8e 	bl	8009a70 <_Bfree>
 8006f54:	e5fd      	b.n	8006b52 <_strtod_l+0x72>
 8006f56:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8006f58:	f1c5 0325 	rsb	r3, r5, #37	@ 0x25
 8006f5c:	4293      	cmp	r3, r2
 8006f5e:	dbbc      	blt.n	8006eda <_strtod_l+0x3fa>
 8006f60:	4c42      	ldr	r4, [pc, #264]	@ (800706c <_strtod_l+0x58c>)
 8006f62:	f1c5 050f 	rsb	r5, r5, #15
 8006f66:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 8006f6a:	4652      	mov	r2, sl
 8006f6c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006f70:	465b      	mov	r3, fp
 8006f72:	f7f9 fabb 	bl	80004ec <__aeabi_dmul>
 8006f76:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006f78:	1b5d      	subs	r5, r3, r5
 8006f7a:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 8006f7e:	e9d4 2300 	ldrd	r2, r3, [r4]
 8006f82:	e791      	b.n	8006ea8 <_strtod_l+0x3c8>
 8006f84:	3316      	adds	r3, #22
 8006f86:	dba8      	blt.n	8006eda <_strtod_l+0x3fa>
 8006f88:	4b38      	ldr	r3, [pc, #224]	@ (800706c <_strtod_l+0x58c>)
 8006f8a:	eba9 0808 	sub.w	r8, r9, r8
 8006f8e:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
 8006f92:	4650      	mov	r0, sl
 8006f94:	e9d8 2300 	ldrd	r2, r3, [r8]
 8006f98:	4659      	mov	r1, fp
 8006f9a:	f7f9 fbd1 	bl	8000740 <__aeabi_ddiv>
 8006f9e:	e760      	b.n	8006e62 <_strtod_l+0x382>
 8006fa0:	4b33      	ldr	r3, [pc, #204]	@ (8007070 <_strtod_l+0x590>)
 8006fa2:	4650      	mov	r0, sl
 8006fa4:	9308      	str	r3, [sp, #32]
 8006fa6:	2300      	movs	r3, #0
 8006fa8:	4659      	mov	r1, fp
 8006faa:	461e      	mov	r6, r3
 8006fac:	1124      	asrs	r4, r4, #4
 8006fae:	2c01      	cmp	r4, #1
 8006fb0:	dc21      	bgt.n	8006ff6 <_strtod_l+0x516>
 8006fb2:	b10b      	cbz	r3, 8006fb8 <_strtod_l+0x4d8>
 8006fb4:	4682      	mov	sl, r0
 8006fb6:	468b      	mov	fp, r1
 8006fb8:	492d      	ldr	r1, [pc, #180]	@ (8007070 <_strtod_l+0x590>)
 8006fba:	f1ab 7b54 	sub.w	fp, fp, #55574528	@ 0x3500000
 8006fbe:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 8006fc2:	4652      	mov	r2, sl
 8006fc4:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006fc8:	465b      	mov	r3, fp
 8006fca:	f7f9 fa8f 	bl	80004ec <__aeabi_dmul>
 8006fce:	4b25      	ldr	r3, [pc, #148]	@ (8007064 <_strtod_l+0x584>)
 8006fd0:	460a      	mov	r2, r1
 8006fd2:	400b      	ands	r3, r1
 8006fd4:	4927      	ldr	r1, [pc, #156]	@ (8007074 <_strtod_l+0x594>)
 8006fd6:	4682      	mov	sl, r0
 8006fd8:	428b      	cmp	r3, r1
 8006fda:	d898      	bhi.n	8006f0e <_strtod_l+0x42e>
 8006fdc:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
 8006fe0:	428b      	cmp	r3, r1
 8006fe2:	bf86      	itte	hi
 8006fe4:	f04f 3aff 	movhi.w	sl, #4294967295
 8006fe8:	f8df b08c 	ldrhi.w	fp, [pc, #140]	@ 8007078 <_strtod_l+0x598>
 8006fec:	f102 7b54 	addls.w	fp, r2, #55574528	@ 0x3500000
 8006ff0:	2300      	movs	r3, #0
 8006ff2:	9308      	str	r3, [sp, #32]
 8006ff4:	e07a      	b.n	80070ec <_strtod_l+0x60c>
 8006ff6:	07e2      	lsls	r2, r4, #31
 8006ff8:	d505      	bpl.n	8007006 <_strtod_l+0x526>
 8006ffa:	9b08      	ldr	r3, [sp, #32]
 8006ffc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007000:	f7f9 fa74 	bl	80004ec <__aeabi_dmul>
 8007004:	2301      	movs	r3, #1
 8007006:	9a08      	ldr	r2, [sp, #32]
 8007008:	3601      	adds	r6, #1
 800700a:	3208      	adds	r2, #8
 800700c:	1064      	asrs	r4, r4, #1
 800700e:	9208      	str	r2, [sp, #32]
 8007010:	e7cd      	b.n	8006fae <_strtod_l+0x4ce>
 8007012:	d0ed      	beq.n	8006ff0 <_strtod_l+0x510>
 8007014:	4264      	negs	r4, r4
 8007016:	f014 020f 	ands.w	r2, r4, #15
 800701a:	d00a      	beq.n	8007032 <_strtod_l+0x552>
 800701c:	4b13      	ldr	r3, [pc, #76]	@ (800706c <_strtod_l+0x58c>)
 800701e:	4650      	mov	r0, sl
 8007020:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8007024:	4659      	mov	r1, fp
 8007026:	e9d3 2300 	ldrd	r2, r3, [r3]
 800702a:	f7f9 fb89 	bl	8000740 <__aeabi_ddiv>
 800702e:	4682      	mov	sl, r0
 8007030:	468b      	mov	fp, r1
 8007032:	1124      	asrs	r4, r4, #4
 8007034:	d0dc      	beq.n	8006ff0 <_strtod_l+0x510>
 8007036:	2c1f      	cmp	r4, #31
 8007038:	dd20      	ble.n	800707c <_strtod_l+0x59c>
 800703a:	2400      	movs	r4, #0
 800703c:	46a0      	mov	r8, r4
 800703e:	46a1      	mov	r9, r4
 8007040:	940a      	str	r4, [sp, #40]	@ 0x28
 8007042:	2322      	movs	r3, #34	@ 0x22
 8007044:	9a05      	ldr	r2, [sp, #20]
 8007046:	f04f 0a00 	mov.w	sl, #0
 800704a:	f04f 0b00 	mov.w	fp, #0
 800704e:	6013      	str	r3, [r2, #0]
 8007050:	e768      	b.n	8006f24 <_strtod_l+0x444>
 8007052:	bf00      	nop
 8007054:	0800bf65 	.word	0x0800bf65
 8007058:	0800bf08 	.word	0x0800bf08
 800705c:	0800bf5d 	.word	0x0800bf5d
 8007060:	0800c044 	.word	0x0800c044
 8007064:	7ff00000 	.word	0x7ff00000
 8007068:	0800c040 	.word	0x0800c040
 800706c:	0800c1a8 	.word	0x0800c1a8
 8007070:	0800c180 	.word	0x0800c180
 8007074:	7ca00000 	.word	0x7ca00000
 8007078:	7fefffff 	.word	0x7fefffff
 800707c:	f014 0310 	ands.w	r3, r4, #16
 8007080:	bf18      	it	ne
 8007082:	236a      	movne	r3, #106	@ 0x6a
 8007084:	4650      	mov	r0, sl
 8007086:	9308      	str	r3, [sp, #32]
 8007088:	4659      	mov	r1, fp
 800708a:	2300      	movs	r3, #0
 800708c:	4ea9      	ldr	r6, [pc, #676]	@ (8007334 <_strtod_l+0x854>)
 800708e:	07e2      	lsls	r2, r4, #31
 8007090:	d504      	bpl.n	800709c <_strtod_l+0x5bc>
 8007092:	e9d6 2300 	ldrd	r2, r3, [r6]
 8007096:	f7f9 fa29 	bl	80004ec <__aeabi_dmul>
 800709a:	2301      	movs	r3, #1
 800709c:	1064      	asrs	r4, r4, #1
 800709e:	f106 0608 	add.w	r6, r6, #8
 80070a2:	d1f4      	bne.n	800708e <_strtod_l+0x5ae>
 80070a4:	b10b      	cbz	r3, 80070aa <_strtod_l+0x5ca>
 80070a6:	4682      	mov	sl, r0
 80070a8:	468b      	mov	fp, r1
 80070aa:	9b08      	ldr	r3, [sp, #32]
 80070ac:	b1b3      	cbz	r3, 80070dc <_strtod_l+0x5fc>
 80070ae:	f3cb 520a 	ubfx	r2, fp, #20, #11
 80070b2:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
 80070b6:	2b00      	cmp	r3, #0
 80070b8:	4659      	mov	r1, fp
 80070ba:	dd0f      	ble.n	80070dc <_strtod_l+0x5fc>
 80070bc:	2b1f      	cmp	r3, #31
 80070be:	dd57      	ble.n	8007170 <_strtod_l+0x690>
 80070c0:	2b34      	cmp	r3, #52	@ 0x34
 80070c2:	bfd8      	it	le
 80070c4:	f04f 33ff 	movle.w	r3, #4294967295
 80070c8:	f04f 0a00 	mov.w	sl, #0
 80070cc:	bfcf      	iteee	gt
 80070ce:	f04f 7b5c 	movgt.w	fp, #57671680	@ 0x3700000
 80070d2:	f1c2 024b 	rsble	r2, r2, #75	@ 0x4b
 80070d6:	4093      	lslle	r3, r2
 80070d8:	ea03 0b01 	andle.w	fp, r3, r1
 80070dc:	2200      	movs	r2, #0
 80070de:	2300      	movs	r3, #0
 80070e0:	4650      	mov	r0, sl
 80070e2:	4659      	mov	r1, fp
 80070e4:	f7f9 fc6a 	bl	80009bc <__aeabi_dcmpeq>
 80070e8:	2800      	cmp	r0, #0
 80070ea:	d1a6      	bne.n	800703a <_strtod_l+0x55a>
 80070ec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80070ee:	463a      	mov	r2, r7
 80070f0:	9300      	str	r3, [sp, #0]
 80070f2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80070f4:	462b      	mov	r3, r5
 80070f6:	9805      	ldr	r0, [sp, #20]
 80070f8:	f002 fd22 	bl	8009b40 <__s2b>
 80070fc:	900a      	str	r0, [sp, #40]	@ 0x28
 80070fe:	2800      	cmp	r0, #0
 8007100:	f43f af05 	beq.w	8006f0e <_strtod_l+0x42e>
 8007104:	2400      	movs	r4, #0
 8007106:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8007108:	eba9 0308 	sub.w	r3, r9, r8
 800710c:	2a00      	cmp	r2, #0
 800710e:	bfa8      	it	ge
 8007110:	2300      	movge	r3, #0
 8007112:	46a0      	mov	r8, r4
 8007114:	9312      	str	r3, [sp, #72]	@ 0x48
 8007116:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 800711a:	9316      	str	r3, [sp, #88]	@ 0x58
 800711c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800711e:	9805      	ldr	r0, [sp, #20]
 8007120:	6859      	ldr	r1, [r3, #4]
 8007122:	f002 fc65 	bl	80099f0 <_Balloc>
 8007126:	4681      	mov	r9, r0
 8007128:	2800      	cmp	r0, #0
 800712a:	f43f aef4 	beq.w	8006f16 <_strtod_l+0x436>
 800712e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8007130:	300c      	adds	r0, #12
 8007132:	691a      	ldr	r2, [r3, #16]
 8007134:	f103 010c 	add.w	r1, r3, #12
 8007138:	3202      	adds	r2, #2
 800713a:	0092      	lsls	r2, r2, #2
 800713c:	f001 fa41 	bl	80085c2 <memcpy>
 8007140:	ab1c      	add	r3, sp, #112	@ 0x70
 8007142:	9301      	str	r3, [sp, #4]
 8007144:	ab1b      	add	r3, sp, #108	@ 0x6c
 8007146:	9300      	str	r3, [sp, #0]
 8007148:	4652      	mov	r2, sl
 800714a:	465b      	mov	r3, fp
 800714c:	9805      	ldr	r0, [sp, #20]
 800714e:	e9cd ab0c 	strd	sl, fp, [sp, #48]	@ 0x30
 8007152:	f003 f827 	bl	800a1a4 <__d2b>
 8007156:	901a      	str	r0, [sp, #104]	@ 0x68
 8007158:	2800      	cmp	r0, #0
 800715a:	f43f aedc 	beq.w	8006f16 <_strtod_l+0x436>
 800715e:	2101      	movs	r1, #1
 8007160:	9805      	ldr	r0, [sp, #20]
 8007162:	f002 fd83 	bl	8009c6c <__i2b>
 8007166:	4680      	mov	r8, r0
 8007168:	b948      	cbnz	r0, 800717e <_strtod_l+0x69e>
 800716a:	f04f 0800 	mov.w	r8, #0
 800716e:	e6d2      	b.n	8006f16 <_strtod_l+0x436>
 8007170:	f04f 32ff 	mov.w	r2, #4294967295
 8007174:	fa02 f303 	lsl.w	r3, r2, r3
 8007178:	ea03 0a0a 	and.w	sl, r3, sl
 800717c:	e7ae      	b.n	80070dc <_strtod_l+0x5fc>
 800717e:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
 8007180:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8007182:	2d00      	cmp	r5, #0
 8007184:	bfab      	itete	ge
 8007186:	9b12      	ldrge	r3, [sp, #72]	@ 0x48
 8007188:	9b16      	ldrlt	r3, [sp, #88]	@ 0x58
 800718a:	18ef      	addge	r7, r5, r3
 800718c:	1b5e      	sublt	r6, r3, r5
 800718e:	9b08      	ldr	r3, [sp, #32]
 8007190:	bfa8      	it	ge
 8007192:	9e16      	ldrge	r6, [sp, #88]	@ 0x58
 8007194:	eba5 0503 	sub.w	r5, r5, r3
 8007198:	4415      	add	r5, r2
 800719a:	4b67      	ldr	r3, [pc, #412]	@ (8007338 <_strtod_l+0x858>)
 800719c:	f105 35ff 	add.w	r5, r5, #4294967295
 80071a0:	bfb8      	it	lt
 80071a2:	9f12      	ldrlt	r7, [sp, #72]	@ 0x48
 80071a4:	429d      	cmp	r5, r3
 80071a6:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 80071aa:	da50      	bge.n	800724e <_strtod_l+0x76e>
 80071ac:	1b5b      	subs	r3, r3, r5
 80071ae:	2b1f      	cmp	r3, #31
 80071b0:	f04f 0101 	mov.w	r1, #1
 80071b4:	eba2 0203 	sub.w	r2, r2, r3
 80071b8:	dc3d      	bgt.n	8007236 <_strtod_l+0x756>
 80071ba:	fa01 f303 	lsl.w	r3, r1, r3
 80071be:	9313      	str	r3, [sp, #76]	@ 0x4c
 80071c0:	2300      	movs	r3, #0
 80071c2:	9310      	str	r3, [sp, #64]	@ 0x40
 80071c4:	18bd      	adds	r5, r7, r2
 80071c6:	9b08      	ldr	r3, [sp, #32]
 80071c8:	42af      	cmp	r7, r5
 80071ca:	4416      	add	r6, r2
 80071cc:	441e      	add	r6, r3
 80071ce:	463b      	mov	r3, r7
 80071d0:	bfa8      	it	ge
 80071d2:	462b      	movge	r3, r5
 80071d4:	42b3      	cmp	r3, r6
 80071d6:	bfa8      	it	ge
 80071d8:	4633      	movge	r3, r6
 80071da:	2b00      	cmp	r3, #0
 80071dc:	bfc2      	ittt	gt
 80071de:	1aed      	subgt	r5, r5, r3
 80071e0:	1af6      	subgt	r6, r6, r3
 80071e2:	1aff      	subgt	r7, r7, r3
 80071e4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80071e6:	2b00      	cmp	r3, #0
 80071e8:	dd16      	ble.n	8007218 <_strtod_l+0x738>
 80071ea:	4641      	mov	r1, r8
 80071ec:	461a      	mov	r2, r3
 80071ee:	9805      	ldr	r0, [sp, #20]
 80071f0:	f002 fdfa 	bl	8009de8 <__pow5mult>
 80071f4:	4680      	mov	r8, r0
 80071f6:	2800      	cmp	r0, #0
 80071f8:	d0b7      	beq.n	800716a <_strtod_l+0x68a>
 80071fa:	4601      	mov	r1, r0
 80071fc:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 80071fe:	9805      	ldr	r0, [sp, #20]
 8007200:	f002 fd4a 	bl	8009c98 <__multiply>
 8007204:	900e      	str	r0, [sp, #56]	@ 0x38
 8007206:	2800      	cmp	r0, #0
 8007208:	f43f ae85 	beq.w	8006f16 <_strtod_l+0x436>
 800720c:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800720e:	9805      	ldr	r0, [sp, #20]
 8007210:	f002 fc2e 	bl	8009a70 <_Bfree>
 8007214:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8007216:	931a      	str	r3, [sp, #104]	@ 0x68
 8007218:	2d00      	cmp	r5, #0
 800721a:	dc1d      	bgt.n	8007258 <_strtod_l+0x778>
 800721c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800721e:	2b00      	cmp	r3, #0
 8007220:	dd23      	ble.n	800726a <_strtod_l+0x78a>
 8007222:	4649      	mov	r1, r9
 8007224:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8007226:	9805      	ldr	r0, [sp, #20]
 8007228:	f002 fdde 	bl	8009de8 <__pow5mult>
 800722c:	4681      	mov	r9, r0
 800722e:	b9e0      	cbnz	r0, 800726a <_strtod_l+0x78a>
 8007230:	f04f 0900 	mov.w	r9, #0
 8007234:	e66f      	b.n	8006f16 <_strtod_l+0x436>
 8007236:	f1c5 457f 	rsb	r5, r5, #4278190080	@ 0xff000000
 800723a:	f505 057f 	add.w	r5, r5, #16711680	@ 0xff0000
 800723e:	f505 457b 	add.w	r5, r5, #64256	@ 0xfb00
 8007242:	35e2      	adds	r5, #226	@ 0xe2
 8007244:	fa01 f305 	lsl.w	r3, r1, r5
 8007248:	9310      	str	r3, [sp, #64]	@ 0x40
 800724a:	9113      	str	r1, [sp, #76]	@ 0x4c
 800724c:	e7ba      	b.n	80071c4 <_strtod_l+0x6e4>
 800724e:	2300      	movs	r3, #0
 8007250:	9310      	str	r3, [sp, #64]	@ 0x40
 8007252:	2301      	movs	r3, #1
 8007254:	9313      	str	r3, [sp, #76]	@ 0x4c
 8007256:	e7b5      	b.n	80071c4 <_strtod_l+0x6e4>
 8007258:	462a      	mov	r2, r5
 800725a:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800725c:	9805      	ldr	r0, [sp, #20]
 800725e:	f002 fe1d 	bl	8009e9c <__lshift>
 8007262:	901a      	str	r0, [sp, #104]	@ 0x68
 8007264:	2800      	cmp	r0, #0
 8007266:	d1d9      	bne.n	800721c <_strtod_l+0x73c>
 8007268:	e655      	b.n	8006f16 <_strtod_l+0x436>
 800726a:	2e00      	cmp	r6, #0
 800726c:	dd07      	ble.n	800727e <_strtod_l+0x79e>
 800726e:	4649      	mov	r1, r9
 8007270:	4632      	mov	r2, r6
 8007272:	9805      	ldr	r0, [sp, #20]
 8007274:	f002 fe12 	bl	8009e9c <__lshift>
 8007278:	4681      	mov	r9, r0
 800727a:	2800      	cmp	r0, #0
 800727c:	d0d8      	beq.n	8007230 <_strtod_l+0x750>
 800727e:	2f00      	cmp	r7, #0
 8007280:	dd08      	ble.n	8007294 <_strtod_l+0x7b4>
 8007282:	4641      	mov	r1, r8
 8007284:	463a      	mov	r2, r7
 8007286:	9805      	ldr	r0, [sp, #20]
 8007288:	f002 fe08 	bl	8009e9c <__lshift>
 800728c:	4680      	mov	r8, r0
 800728e:	2800      	cmp	r0, #0
 8007290:	f43f ae41 	beq.w	8006f16 <_strtod_l+0x436>
 8007294:	464a      	mov	r2, r9
 8007296:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8007298:	9805      	ldr	r0, [sp, #20]
 800729a:	f002 fe87 	bl	8009fac <__mdiff>
 800729e:	4604      	mov	r4, r0
 80072a0:	2800      	cmp	r0, #0
 80072a2:	f43f ae38 	beq.w	8006f16 <_strtod_l+0x436>
 80072a6:	68c3      	ldr	r3, [r0, #12]
 80072a8:	4641      	mov	r1, r8
 80072aa:	930f      	str	r3, [sp, #60]	@ 0x3c
 80072ac:	2300      	movs	r3, #0
 80072ae:	60c3      	str	r3, [r0, #12]
 80072b0:	f002 fe60 	bl	8009f74 <__mcmp>
 80072b4:	2800      	cmp	r0, #0
 80072b6:	da45      	bge.n	8007344 <_strtod_l+0x864>
 80072b8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80072ba:	ea53 030a 	orrs.w	r3, r3, sl
 80072be:	d16b      	bne.n	8007398 <_strtod_l+0x8b8>
 80072c0:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80072c4:	2b00      	cmp	r3, #0
 80072c6:	d167      	bne.n	8007398 <_strtod_l+0x8b8>
 80072c8:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 80072cc:	0d1b      	lsrs	r3, r3, #20
 80072ce:	051b      	lsls	r3, r3, #20
 80072d0:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 80072d4:	d960      	bls.n	8007398 <_strtod_l+0x8b8>
 80072d6:	6963      	ldr	r3, [r4, #20]
 80072d8:	b913      	cbnz	r3, 80072e0 <_strtod_l+0x800>
 80072da:	6923      	ldr	r3, [r4, #16]
 80072dc:	2b01      	cmp	r3, #1
 80072de:	dd5b      	ble.n	8007398 <_strtod_l+0x8b8>
 80072e0:	4621      	mov	r1, r4
 80072e2:	2201      	movs	r2, #1
 80072e4:	9805      	ldr	r0, [sp, #20]
 80072e6:	f002 fdd9 	bl	8009e9c <__lshift>
 80072ea:	4641      	mov	r1, r8
 80072ec:	4604      	mov	r4, r0
 80072ee:	f002 fe41 	bl	8009f74 <__mcmp>
 80072f2:	2800      	cmp	r0, #0
 80072f4:	dd50      	ble.n	8007398 <_strtod_l+0x8b8>
 80072f6:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 80072fa:	9a08      	ldr	r2, [sp, #32]
 80072fc:	0d1b      	lsrs	r3, r3, #20
 80072fe:	051b      	lsls	r3, r3, #20
 8007300:	2a00      	cmp	r2, #0
 8007302:	d06a      	beq.n	80073da <_strtod_l+0x8fa>
 8007304:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 8007308:	d867      	bhi.n	80073da <_strtod_l+0x8fa>
 800730a:	f1b3 7f5c 	cmp.w	r3, #57671680	@ 0x3700000
 800730e:	f67f ae98 	bls.w	8007042 <_strtod_l+0x562>
 8007312:	4650      	mov	r0, sl
 8007314:	4659      	mov	r1, fp
 8007316:	4b09      	ldr	r3, [pc, #36]	@ (800733c <_strtod_l+0x85c>)
 8007318:	2200      	movs	r2, #0
 800731a:	f7f9 f8e7 	bl	80004ec <__aeabi_dmul>
 800731e:	4b08      	ldr	r3, [pc, #32]	@ (8007340 <_strtod_l+0x860>)
 8007320:	4682      	mov	sl, r0
 8007322:	400b      	ands	r3, r1
 8007324:	468b      	mov	fp, r1
 8007326:	2b00      	cmp	r3, #0
 8007328:	f47f ae00 	bne.w	8006f2c <_strtod_l+0x44c>
 800732c:	2322      	movs	r3, #34	@ 0x22
 800732e:	9a05      	ldr	r2, [sp, #20]
 8007330:	6013      	str	r3, [r2, #0]
 8007332:	e5fb      	b.n	8006f2c <_strtod_l+0x44c>
 8007334:	0800bf30 	.word	0x0800bf30
 8007338:	fffffc02 	.word	0xfffffc02
 800733c:	39500000 	.word	0x39500000
 8007340:	7ff00000 	.word	0x7ff00000
 8007344:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 8007348:	d165      	bne.n	8007416 <_strtod_l+0x936>
 800734a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 800734c:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8007350:	b35a      	cbz	r2, 80073aa <_strtod_l+0x8ca>
 8007352:	4a99      	ldr	r2, [pc, #612]	@ (80075b8 <_strtod_l+0xad8>)
 8007354:	4293      	cmp	r3, r2
 8007356:	d12b      	bne.n	80073b0 <_strtod_l+0x8d0>
 8007358:	9b08      	ldr	r3, [sp, #32]
 800735a:	4651      	mov	r1, sl
 800735c:	b303      	cbz	r3, 80073a0 <_strtod_l+0x8c0>
 800735e:	465a      	mov	r2, fp
 8007360:	4b96      	ldr	r3, [pc, #600]	@ (80075bc <_strtod_l+0xadc>)
 8007362:	4013      	ands	r3, r2
 8007364:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 8007368:	f04f 32ff 	mov.w	r2, #4294967295
 800736c:	d81b      	bhi.n	80073a6 <_strtod_l+0x8c6>
 800736e:	0d1b      	lsrs	r3, r3, #20
 8007370:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 8007374:	fa02 f303 	lsl.w	r3, r2, r3
 8007378:	4299      	cmp	r1, r3
 800737a:	d119      	bne.n	80073b0 <_strtod_l+0x8d0>
 800737c:	4b90      	ldr	r3, [pc, #576]	@ (80075c0 <_strtod_l+0xae0>)
 800737e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8007380:	429a      	cmp	r2, r3
 8007382:	d102      	bne.n	800738a <_strtod_l+0x8aa>
 8007384:	3101      	adds	r1, #1
 8007386:	f43f adc6 	beq.w	8006f16 <_strtod_l+0x436>
 800738a:	f04f 0a00 	mov.w	sl, #0
 800738e:	4b8b      	ldr	r3, [pc, #556]	@ (80075bc <_strtod_l+0xadc>)
 8007390:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8007392:	401a      	ands	r2, r3
 8007394:	f502 1b80 	add.w	fp, r2, #1048576	@ 0x100000
 8007398:	9b08      	ldr	r3, [sp, #32]
 800739a:	2b00      	cmp	r3, #0
 800739c:	d1b9      	bne.n	8007312 <_strtod_l+0x832>
 800739e:	e5c5      	b.n	8006f2c <_strtod_l+0x44c>
 80073a0:	f04f 33ff 	mov.w	r3, #4294967295
 80073a4:	e7e8      	b.n	8007378 <_strtod_l+0x898>
 80073a6:	4613      	mov	r3, r2
 80073a8:	e7e6      	b.n	8007378 <_strtod_l+0x898>
 80073aa:	ea53 030a 	orrs.w	r3, r3, sl
 80073ae:	d0a2      	beq.n	80072f6 <_strtod_l+0x816>
 80073b0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80073b2:	b1db      	cbz	r3, 80073ec <_strtod_l+0x90c>
 80073b4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80073b6:	4213      	tst	r3, r2
 80073b8:	d0ee      	beq.n	8007398 <_strtod_l+0x8b8>
 80073ba:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80073bc:	4650      	mov	r0, sl
 80073be:	4659      	mov	r1, fp
 80073c0:	9a08      	ldr	r2, [sp, #32]
 80073c2:	b1bb      	cbz	r3, 80073f4 <_strtod_l+0x914>
 80073c4:	f7ff fb6a 	bl	8006a9c <sulp>
 80073c8:	4602      	mov	r2, r0
 80073ca:	460b      	mov	r3, r1
 80073cc:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80073d0:	f7f8 fed6 	bl	8000180 <__adddf3>
 80073d4:	4682      	mov	sl, r0
 80073d6:	468b      	mov	fp, r1
 80073d8:	e7de      	b.n	8007398 <_strtod_l+0x8b8>
 80073da:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 80073de:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 80073e2:	f04f 3aff 	mov.w	sl, #4294967295
 80073e6:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 80073ea:	e7d5      	b.n	8007398 <_strtod_l+0x8b8>
 80073ec:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80073ee:	ea13 0f0a 	tst.w	r3, sl
 80073f2:	e7e1      	b.n	80073b8 <_strtod_l+0x8d8>
 80073f4:	f7ff fb52 	bl	8006a9c <sulp>
 80073f8:	4602      	mov	r2, r0
 80073fa:	460b      	mov	r3, r1
 80073fc:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8007400:	f7f8 febc 	bl	800017c <__aeabi_dsub>
 8007404:	2200      	movs	r2, #0
 8007406:	2300      	movs	r3, #0
 8007408:	4682      	mov	sl, r0
 800740a:	468b      	mov	fp, r1
 800740c:	f7f9 fad6 	bl	80009bc <__aeabi_dcmpeq>
 8007410:	2800      	cmp	r0, #0
 8007412:	d0c1      	beq.n	8007398 <_strtod_l+0x8b8>
 8007414:	e615      	b.n	8007042 <_strtod_l+0x562>
 8007416:	4641      	mov	r1, r8
 8007418:	4620      	mov	r0, r4
 800741a:	f002 ff1b 	bl	800a254 <__ratio>
 800741e:	2200      	movs	r2, #0
 8007420:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8007424:	4606      	mov	r6, r0
 8007426:	460f      	mov	r7, r1
 8007428:	f7f9 fadc 	bl	80009e4 <__aeabi_dcmple>
 800742c:	2800      	cmp	r0, #0
 800742e:	d06d      	beq.n	800750c <_strtod_l+0xa2c>
 8007430:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8007432:	2b00      	cmp	r3, #0
 8007434:	d178      	bne.n	8007528 <_strtod_l+0xa48>
 8007436:	f1ba 0f00 	cmp.w	sl, #0
 800743a:	d156      	bne.n	80074ea <_strtod_l+0xa0a>
 800743c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800743e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8007442:	2b00      	cmp	r3, #0
 8007444:	d158      	bne.n	80074f8 <_strtod_l+0xa18>
 8007446:	2200      	movs	r2, #0
 8007448:	4630      	mov	r0, r6
 800744a:	4639      	mov	r1, r7
 800744c:	4b5d      	ldr	r3, [pc, #372]	@ (80075c4 <_strtod_l+0xae4>)
 800744e:	f7f9 fabf 	bl	80009d0 <__aeabi_dcmplt>
 8007452:	2800      	cmp	r0, #0
 8007454:	d157      	bne.n	8007506 <_strtod_l+0xa26>
 8007456:	4630      	mov	r0, r6
 8007458:	4639      	mov	r1, r7
 800745a:	2200      	movs	r2, #0
 800745c:	4b5a      	ldr	r3, [pc, #360]	@ (80075c8 <_strtod_l+0xae8>)
 800745e:	f7f9 f845 	bl	80004ec <__aeabi_dmul>
 8007462:	4606      	mov	r6, r0
 8007464:	460f      	mov	r7, r1
 8007466:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
 800746a:	9606      	str	r6, [sp, #24]
 800746c:	9307      	str	r3, [sp, #28]
 800746e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8007472:	4d52      	ldr	r5, [pc, #328]	@ (80075bc <_strtod_l+0xadc>)
 8007474:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 8007478:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800747a:	401d      	ands	r5, r3
 800747c:	4b53      	ldr	r3, [pc, #332]	@ (80075cc <_strtod_l+0xaec>)
 800747e:	429d      	cmp	r5, r3
 8007480:	f040 80aa 	bne.w	80075d8 <_strtod_l+0xaf8>
 8007484:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8007486:	4650      	mov	r0, sl
 8007488:	f1a3 7b54 	sub.w	fp, r3, #55574528	@ 0x3500000
 800748c:	4659      	mov	r1, fp
 800748e:	f002 fe21 	bl	800a0d4 <__ulp>
 8007492:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8007496:	f7f9 f829 	bl	80004ec <__aeabi_dmul>
 800749a:	4652      	mov	r2, sl
 800749c:	465b      	mov	r3, fp
 800749e:	f7f8 fe6f 	bl	8000180 <__adddf3>
 80074a2:	460b      	mov	r3, r1
 80074a4:	4945      	ldr	r1, [pc, #276]	@ (80075bc <_strtod_l+0xadc>)
 80074a6:	4a4a      	ldr	r2, [pc, #296]	@ (80075d0 <_strtod_l+0xaf0>)
 80074a8:	4019      	ands	r1, r3
 80074aa:	4291      	cmp	r1, r2
 80074ac:	4682      	mov	sl, r0
 80074ae:	d942      	bls.n	8007536 <_strtod_l+0xa56>
 80074b0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80074b2:	4b43      	ldr	r3, [pc, #268]	@ (80075c0 <_strtod_l+0xae0>)
 80074b4:	429a      	cmp	r2, r3
 80074b6:	d103      	bne.n	80074c0 <_strtod_l+0x9e0>
 80074b8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80074ba:	3301      	adds	r3, #1
 80074bc:	f43f ad2b 	beq.w	8006f16 <_strtod_l+0x436>
 80074c0:	f04f 3aff 	mov.w	sl, #4294967295
 80074c4:	f8df b0f8 	ldr.w	fp, [pc, #248]	@ 80075c0 <_strtod_l+0xae0>
 80074c8:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80074ca:	9805      	ldr	r0, [sp, #20]
 80074cc:	f002 fad0 	bl	8009a70 <_Bfree>
 80074d0:	4649      	mov	r1, r9
 80074d2:	9805      	ldr	r0, [sp, #20]
 80074d4:	f002 facc 	bl	8009a70 <_Bfree>
 80074d8:	4641      	mov	r1, r8
 80074da:	9805      	ldr	r0, [sp, #20]
 80074dc:	f002 fac8 	bl	8009a70 <_Bfree>
 80074e0:	4621      	mov	r1, r4
 80074e2:	9805      	ldr	r0, [sp, #20]
 80074e4:	f002 fac4 	bl	8009a70 <_Bfree>
 80074e8:	e618      	b.n	800711c <_strtod_l+0x63c>
 80074ea:	f1ba 0f01 	cmp.w	sl, #1
 80074ee:	d103      	bne.n	80074f8 <_strtod_l+0xa18>
 80074f0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80074f2:	2b00      	cmp	r3, #0
 80074f4:	f43f ada5 	beq.w	8007042 <_strtod_l+0x562>
 80074f8:	2200      	movs	r2, #0
 80074fa:	4b36      	ldr	r3, [pc, #216]	@ (80075d4 <_strtod_l+0xaf4>)
 80074fc:	2600      	movs	r6, #0
 80074fe:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8007502:	4f30      	ldr	r7, [pc, #192]	@ (80075c4 <_strtod_l+0xae4>)
 8007504:	e7b3      	b.n	800746e <_strtod_l+0x98e>
 8007506:	2600      	movs	r6, #0
 8007508:	4f2f      	ldr	r7, [pc, #188]	@ (80075c8 <_strtod_l+0xae8>)
 800750a:	e7ac      	b.n	8007466 <_strtod_l+0x986>
 800750c:	4630      	mov	r0, r6
 800750e:	4639      	mov	r1, r7
 8007510:	4b2d      	ldr	r3, [pc, #180]	@ (80075c8 <_strtod_l+0xae8>)
 8007512:	2200      	movs	r2, #0
 8007514:	f7f8 ffea 	bl	80004ec <__aeabi_dmul>
 8007518:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800751a:	4606      	mov	r6, r0
 800751c:	460f      	mov	r7, r1
 800751e:	2b00      	cmp	r3, #0
 8007520:	d0a1      	beq.n	8007466 <_strtod_l+0x986>
 8007522:	e9cd 6706 	strd	r6, r7, [sp, #24]
 8007526:	e7a2      	b.n	800746e <_strtod_l+0x98e>
 8007528:	2200      	movs	r2, #0
 800752a:	4b26      	ldr	r3, [pc, #152]	@ (80075c4 <_strtod_l+0xae4>)
 800752c:	4616      	mov	r6, r2
 800752e:	461f      	mov	r7, r3
 8007530:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8007534:	e79b      	b.n	800746e <_strtod_l+0x98e>
 8007536:	f103 7b54 	add.w	fp, r3, #55574528	@ 0x3500000
 800753a:	9b08      	ldr	r3, [sp, #32]
 800753c:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 8007540:	2b00      	cmp	r3, #0
 8007542:	d1c1      	bne.n	80074c8 <_strtod_l+0x9e8>
 8007544:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8007548:	0d1b      	lsrs	r3, r3, #20
 800754a:	051b      	lsls	r3, r3, #20
 800754c:	429d      	cmp	r5, r3
 800754e:	d1bb      	bne.n	80074c8 <_strtod_l+0x9e8>
 8007550:	4630      	mov	r0, r6
 8007552:	4639      	mov	r1, r7
 8007554:	f7f9 fe06 	bl	8001164 <__aeabi_d2lz>
 8007558:	f7f8 ff9a 	bl	8000490 <__aeabi_l2d>
 800755c:	4602      	mov	r2, r0
 800755e:	460b      	mov	r3, r1
 8007560:	4630      	mov	r0, r6
 8007562:	4639      	mov	r1, r7
 8007564:	f7f8 fe0a 	bl	800017c <__aeabi_dsub>
 8007568:	460b      	mov	r3, r1
 800756a:	4602      	mov	r2, r0
 800756c:	f3cb 0613 	ubfx	r6, fp, #0, #20
 8007570:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 8007574:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8007576:	ea46 060a 	orr.w	r6, r6, sl
 800757a:	431e      	orrs	r6, r3
 800757c:	d069      	beq.n	8007652 <_strtod_l+0xb72>
 800757e:	a30a      	add	r3, pc, #40	@ (adr r3, 80075a8 <_strtod_l+0xac8>)
 8007580:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007584:	f7f9 fa24 	bl	80009d0 <__aeabi_dcmplt>
 8007588:	2800      	cmp	r0, #0
 800758a:	f47f accf 	bne.w	8006f2c <_strtod_l+0x44c>
 800758e:	a308      	add	r3, pc, #32	@ (adr r3, 80075b0 <_strtod_l+0xad0>)
 8007590:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007594:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8007598:	f7f9 fa38 	bl	8000a0c <__aeabi_dcmpgt>
 800759c:	2800      	cmp	r0, #0
 800759e:	d093      	beq.n	80074c8 <_strtod_l+0x9e8>
 80075a0:	e4c4      	b.n	8006f2c <_strtod_l+0x44c>
 80075a2:	bf00      	nop
 80075a4:	f3af 8000 	nop.w
 80075a8:	94a03595 	.word	0x94a03595
 80075ac:	3fdfffff 	.word	0x3fdfffff
 80075b0:	35afe535 	.word	0x35afe535
 80075b4:	3fe00000 	.word	0x3fe00000
 80075b8:	000fffff 	.word	0x000fffff
 80075bc:	7ff00000 	.word	0x7ff00000
 80075c0:	7fefffff 	.word	0x7fefffff
 80075c4:	3ff00000 	.word	0x3ff00000
 80075c8:	3fe00000 	.word	0x3fe00000
 80075cc:	7fe00000 	.word	0x7fe00000
 80075d0:	7c9fffff 	.word	0x7c9fffff
 80075d4:	bff00000 	.word	0xbff00000
 80075d8:	9b08      	ldr	r3, [sp, #32]
 80075da:	b323      	cbz	r3, 8007626 <_strtod_l+0xb46>
 80075dc:	f1b5 6fd4 	cmp.w	r5, #111149056	@ 0x6a00000
 80075e0:	d821      	bhi.n	8007626 <_strtod_l+0xb46>
 80075e2:	a327      	add	r3, pc, #156	@ (adr r3, 8007680 <_strtod_l+0xba0>)
 80075e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80075e8:	4630      	mov	r0, r6
 80075ea:	4639      	mov	r1, r7
 80075ec:	f7f9 f9fa 	bl	80009e4 <__aeabi_dcmple>
 80075f0:	b1a0      	cbz	r0, 800761c <_strtod_l+0xb3c>
 80075f2:	4639      	mov	r1, r7
 80075f4:	4630      	mov	r0, r6
 80075f6:	f7f9 fa51 	bl	8000a9c <__aeabi_d2uiz>
 80075fa:	2801      	cmp	r0, #1
 80075fc:	bf38      	it	cc
 80075fe:	2001      	movcc	r0, #1
 8007600:	f7f8 fefa 	bl	80003f8 <__aeabi_ui2d>
 8007604:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8007606:	4606      	mov	r6, r0
 8007608:	460f      	mov	r7, r1
 800760a:	b9fb      	cbnz	r3, 800764c <_strtod_l+0xb6c>
 800760c:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8007610:	9014      	str	r0, [sp, #80]	@ 0x50
 8007612:	9315      	str	r3, [sp, #84]	@ 0x54
 8007614:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
 8007618:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 800761c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800761e:	f103 63d6 	add.w	r3, r3, #112197632	@ 0x6b00000
 8007622:	1b5b      	subs	r3, r3, r5
 8007624:	9311      	str	r3, [sp, #68]	@ 0x44
 8007626:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800762a:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	@ 0x40
 800762e:	f002 fd51 	bl	800a0d4 <__ulp>
 8007632:	4602      	mov	r2, r0
 8007634:	460b      	mov	r3, r1
 8007636:	4650      	mov	r0, sl
 8007638:	4659      	mov	r1, fp
 800763a:	f7f8 ff57 	bl	80004ec <__aeabi_dmul>
 800763e:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 8007642:	f7f8 fd9d 	bl	8000180 <__adddf3>
 8007646:	4682      	mov	sl, r0
 8007648:	468b      	mov	fp, r1
 800764a:	e776      	b.n	800753a <_strtod_l+0xa5a>
 800764c:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
 8007650:	e7e0      	b.n	8007614 <_strtod_l+0xb34>
 8007652:	a30d      	add	r3, pc, #52	@ (adr r3, 8007688 <_strtod_l+0xba8>)
 8007654:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007658:	f7f9 f9ba 	bl	80009d0 <__aeabi_dcmplt>
 800765c:	e79e      	b.n	800759c <_strtod_l+0xabc>
 800765e:	2300      	movs	r3, #0
 8007660:	930b      	str	r3, [sp, #44]	@ 0x2c
 8007662:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8007664:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 8007666:	6013      	str	r3, [r2, #0]
 8007668:	f7ff ba77 	b.w	8006b5a <_strtod_l+0x7a>
 800766c:	2a65      	cmp	r2, #101	@ 0x65
 800766e:	f43f ab6e 	beq.w	8006d4e <_strtod_l+0x26e>
 8007672:	2a45      	cmp	r2, #69	@ 0x45
 8007674:	f43f ab6b 	beq.w	8006d4e <_strtod_l+0x26e>
 8007678:	2301      	movs	r3, #1
 800767a:	f7ff bba6 	b.w	8006dca <_strtod_l+0x2ea>
 800767e:	bf00      	nop
 8007680:	ffc00000 	.word	0xffc00000
 8007684:	41dfffff 	.word	0x41dfffff
 8007688:	94a03595 	.word	0x94a03595
 800768c:	3fcfffff 	.word	0x3fcfffff

08007690 <strtod>:
 8007690:	460a      	mov	r2, r1
 8007692:	4601      	mov	r1, r0
 8007694:	4802      	ldr	r0, [pc, #8]	@ (80076a0 <strtod+0x10>)
 8007696:	4b03      	ldr	r3, [pc, #12]	@ (80076a4 <strtod+0x14>)
 8007698:	6800      	ldr	r0, [r0, #0]
 800769a:	f7ff ba21 	b.w	8006ae0 <_strtod_l>
 800769e:	bf00      	nop
 80076a0:	200001a0 	.word	0x200001a0
 80076a4:	20000034 	.word	0x20000034

080076a8 <__cvt>:
 80076a8:	2b00      	cmp	r3, #0
 80076aa:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80076ae:	461d      	mov	r5, r3
 80076b0:	bfbb      	ittet	lt
 80076b2:	f103 4300 	addlt.w	r3, r3, #2147483648	@ 0x80000000
 80076b6:	461d      	movlt	r5, r3
 80076b8:	2300      	movge	r3, #0
 80076ba:	232d      	movlt	r3, #45	@ 0x2d
 80076bc:	b088      	sub	sp, #32
 80076be:	4614      	mov	r4, r2
 80076c0:	bfb8      	it	lt
 80076c2:	4614      	movlt	r4, r2
 80076c4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80076c6:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 80076c8:	7013      	strb	r3, [r2, #0]
 80076ca:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80076cc:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 80076d0:	f023 0820 	bic.w	r8, r3, #32
 80076d4:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 80076d8:	d005      	beq.n	80076e6 <__cvt+0x3e>
 80076da:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 80076de:	d100      	bne.n	80076e2 <__cvt+0x3a>
 80076e0:	3601      	adds	r6, #1
 80076e2:	2302      	movs	r3, #2
 80076e4:	e000      	b.n	80076e8 <__cvt+0x40>
 80076e6:	2303      	movs	r3, #3
 80076e8:	aa07      	add	r2, sp, #28
 80076ea:	9204      	str	r2, [sp, #16]
 80076ec:	aa06      	add	r2, sp, #24
 80076ee:	e9cd a202 	strd	sl, r2, [sp, #8]
 80076f2:	e9cd 3600 	strd	r3, r6, [sp]
 80076f6:	4622      	mov	r2, r4
 80076f8:	462b      	mov	r3, r5
 80076fa:	f001 f81d 	bl	8008738 <_dtoa_r>
 80076fe:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8007702:	4607      	mov	r7, r0
 8007704:	d119      	bne.n	800773a <__cvt+0x92>
 8007706:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8007708:	07db      	lsls	r3, r3, #31
 800770a:	d50e      	bpl.n	800772a <__cvt+0x82>
 800770c:	eb00 0906 	add.w	r9, r0, r6
 8007710:	2200      	movs	r2, #0
 8007712:	2300      	movs	r3, #0
 8007714:	4620      	mov	r0, r4
 8007716:	4629      	mov	r1, r5
 8007718:	f7f9 f950 	bl	80009bc <__aeabi_dcmpeq>
 800771c:	b108      	cbz	r0, 8007722 <__cvt+0x7a>
 800771e:	f8cd 901c 	str.w	r9, [sp, #28]
 8007722:	2230      	movs	r2, #48	@ 0x30
 8007724:	9b07      	ldr	r3, [sp, #28]
 8007726:	454b      	cmp	r3, r9
 8007728:	d31e      	bcc.n	8007768 <__cvt+0xc0>
 800772a:	4638      	mov	r0, r7
 800772c:	9b07      	ldr	r3, [sp, #28]
 800772e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8007730:	1bdb      	subs	r3, r3, r7
 8007732:	6013      	str	r3, [r2, #0]
 8007734:	b008      	add	sp, #32
 8007736:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800773a:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 800773e:	eb00 0906 	add.w	r9, r0, r6
 8007742:	d1e5      	bne.n	8007710 <__cvt+0x68>
 8007744:	7803      	ldrb	r3, [r0, #0]
 8007746:	2b30      	cmp	r3, #48	@ 0x30
 8007748:	d10a      	bne.n	8007760 <__cvt+0xb8>
 800774a:	2200      	movs	r2, #0
 800774c:	2300      	movs	r3, #0
 800774e:	4620      	mov	r0, r4
 8007750:	4629      	mov	r1, r5
 8007752:	f7f9 f933 	bl	80009bc <__aeabi_dcmpeq>
 8007756:	b918      	cbnz	r0, 8007760 <__cvt+0xb8>
 8007758:	f1c6 0601 	rsb	r6, r6, #1
 800775c:	f8ca 6000 	str.w	r6, [sl]
 8007760:	f8da 3000 	ldr.w	r3, [sl]
 8007764:	4499      	add	r9, r3
 8007766:	e7d3      	b.n	8007710 <__cvt+0x68>
 8007768:	1c59      	adds	r1, r3, #1
 800776a:	9107      	str	r1, [sp, #28]
 800776c:	701a      	strb	r2, [r3, #0]
 800776e:	e7d9      	b.n	8007724 <__cvt+0x7c>

08007770 <__exponent>:
 8007770:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007772:	2900      	cmp	r1, #0
 8007774:	bfb6      	itet	lt
 8007776:	232d      	movlt	r3, #45	@ 0x2d
 8007778:	232b      	movge	r3, #43	@ 0x2b
 800777a:	4249      	neglt	r1, r1
 800777c:	2909      	cmp	r1, #9
 800777e:	7002      	strb	r2, [r0, #0]
 8007780:	7043      	strb	r3, [r0, #1]
 8007782:	dd29      	ble.n	80077d8 <__exponent+0x68>
 8007784:	f10d 0307 	add.w	r3, sp, #7
 8007788:	461d      	mov	r5, r3
 800778a:	270a      	movs	r7, #10
 800778c:	fbb1 f6f7 	udiv	r6, r1, r7
 8007790:	461a      	mov	r2, r3
 8007792:	fb07 1416 	mls	r4, r7, r6, r1
 8007796:	3430      	adds	r4, #48	@ 0x30
 8007798:	f802 4c01 	strb.w	r4, [r2, #-1]
 800779c:	460c      	mov	r4, r1
 800779e:	2c63      	cmp	r4, #99	@ 0x63
 80077a0:	4631      	mov	r1, r6
 80077a2:	f103 33ff 	add.w	r3, r3, #4294967295
 80077a6:	dcf1      	bgt.n	800778c <__exponent+0x1c>
 80077a8:	3130      	adds	r1, #48	@ 0x30
 80077aa:	1e94      	subs	r4, r2, #2
 80077ac:	f803 1c01 	strb.w	r1, [r3, #-1]
 80077b0:	4623      	mov	r3, r4
 80077b2:	1c41      	adds	r1, r0, #1
 80077b4:	42ab      	cmp	r3, r5
 80077b6:	d30a      	bcc.n	80077ce <__exponent+0x5e>
 80077b8:	f10d 0309 	add.w	r3, sp, #9
 80077bc:	1a9b      	subs	r3, r3, r2
 80077be:	42ac      	cmp	r4, r5
 80077c0:	bf88      	it	hi
 80077c2:	2300      	movhi	r3, #0
 80077c4:	3302      	adds	r3, #2
 80077c6:	4403      	add	r3, r0
 80077c8:	1a18      	subs	r0, r3, r0
 80077ca:	b003      	add	sp, #12
 80077cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80077ce:	f813 6b01 	ldrb.w	r6, [r3], #1
 80077d2:	f801 6f01 	strb.w	r6, [r1, #1]!
 80077d6:	e7ed      	b.n	80077b4 <__exponent+0x44>
 80077d8:	2330      	movs	r3, #48	@ 0x30
 80077da:	3130      	adds	r1, #48	@ 0x30
 80077dc:	7083      	strb	r3, [r0, #2]
 80077de:	70c1      	strb	r1, [r0, #3]
 80077e0:	1d03      	adds	r3, r0, #4
 80077e2:	e7f1      	b.n	80077c8 <__exponent+0x58>

080077e4 <_printf_float>:
 80077e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80077e8:	b091      	sub	sp, #68	@ 0x44
 80077ea:	460c      	mov	r4, r1
 80077ec:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
 80077f0:	4616      	mov	r6, r2
 80077f2:	461f      	mov	r7, r3
 80077f4:	4605      	mov	r5, r0
 80077f6:	f000 fe4f 	bl	8008498 <_localeconv_r>
 80077fa:	6803      	ldr	r3, [r0, #0]
 80077fc:	4618      	mov	r0, r3
 80077fe:	9308      	str	r3, [sp, #32]
 8007800:	f7f8 fcb0 	bl	8000164 <strlen>
 8007804:	2300      	movs	r3, #0
 8007806:	930e      	str	r3, [sp, #56]	@ 0x38
 8007808:	f8d8 3000 	ldr.w	r3, [r8]
 800780c:	9009      	str	r0, [sp, #36]	@ 0x24
 800780e:	3307      	adds	r3, #7
 8007810:	f023 0307 	bic.w	r3, r3, #7
 8007814:	f103 0208 	add.w	r2, r3, #8
 8007818:	f894 a018 	ldrb.w	sl, [r4, #24]
 800781c:	f8d4 b000 	ldr.w	fp, [r4]
 8007820:	f8c8 2000 	str.w	r2, [r8]
 8007824:	e9d3 8900 	ldrd	r8, r9, [r3]
 8007828:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 800782c:	930b      	str	r3, [sp, #44]	@ 0x2c
 800782e:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 8007832:	f04f 32ff 	mov.w	r2, #4294967295
 8007836:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 800783a:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 800783e:	4b9c      	ldr	r3, [pc, #624]	@ (8007ab0 <_printf_float+0x2cc>)
 8007840:	f7f9 f8ee 	bl	8000a20 <__aeabi_dcmpun>
 8007844:	bb70      	cbnz	r0, 80078a4 <_printf_float+0xc0>
 8007846:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 800784a:	f04f 32ff 	mov.w	r2, #4294967295
 800784e:	4b98      	ldr	r3, [pc, #608]	@ (8007ab0 <_printf_float+0x2cc>)
 8007850:	f7f9 f8c8 	bl	80009e4 <__aeabi_dcmple>
 8007854:	bb30      	cbnz	r0, 80078a4 <_printf_float+0xc0>
 8007856:	2200      	movs	r2, #0
 8007858:	2300      	movs	r3, #0
 800785a:	4640      	mov	r0, r8
 800785c:	4649      	mov	r1, r9
 800785e:	f7f9 f8b7 	bl	80009d0 <__aeabi_dcmplt>
 8007862:	b110      	cbz	r0, 800786a <_printf_float+0x86>
 8007864:	232d      	movs	r3, #45	@ 0x2d
 8007866:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800786a:	4a92      	ldr	r2, [pc, #584]	@ (8007ab4 <_printf_float+0x2d0>)
 800786c:	4b92      	ldr	r3, [pc, #584]	@ (8007ab8 <_printf_float+0x2d4>)
 800786e:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8007872:	bf94      	ite	ls
 8007874:	4690      	movls	r8, r2
 8007876:	4698      	movhi	r8, r3
 8007878:	2303      	movs	r3, #3
 800787a:	f04f 0900 	mov.w	r9, #0
 800787e:	6123      	str	r3, [r4, #16]
 8007880:	f02b 0304 	bic.w	r3, fp, #4
 8007884:	6023      	str	r3, [r4, #0]
 8007886:	4633      	mov	r3, r6
 8007888:	4621      	mov	r1, r4
 800788a:	4628      	mov	r0, r5
 800788c:	9700      	str	r7, [sp, #0]
 800788e:	aa0f      	add	r2, sp, #60	@ 0x3c
 8007890:	f000 f9d4 	bl	8007c3c <_printf_common>
 8007894:	3001      	adds	r0, #1
 8007896:	f040 8090 	bne.w	80079ba <_printf_float+0x1d6>
 800789a:	f04f 30ff 	mov.w	r0, #4294967295
 800789e:	b011      	add	sp, #68	@ 0x44
 80078a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80078a4:	4642      	mov	r2, r8
 80078a6:	464b      	mov	r3, r9
 80078a8:	4640      	mov	r0, r8
 80078aa:	4649      	mov	r1, r9
 80078ac:	f7f9 f8b8 	bl	8000a20 <__aeabi_dcmpun>
 80078b0:	b148      	cbz	r0, 80078c6 <_printf_float+0xe2>
 80078b2:	464b      	mov	r3, r9
 80078b4:	2b00      	cmp	r3, #0
 80078b6:	bfb8      	it	lt
 80078b8:	232d      	movlt	r3, #45	@ 0x2d
 80078ba:	4a80      	ldr	r2, [pc, #512]	@ (8007abc <_printf_float+0x2d8>)
 80078bc:	bfb8      	it	lt
 80078be:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 80078c2:	4b7f      	ldr	r3, [pc, #508]	@ (8007ac0 <_printf_float+0x2dc>)
 80078c4:	e7d3      	b.n	800786e <_printf_float+0x8a>
 80078c6:	6863      	ldr	r3, [r4, #4]
 80078c8:	f00a 01df 	and.w	r1, sl, #223	@ 0xdf
 80078cc:	1c5a      	adds	r2, r3, #1
 80078ce:	d13f      	bne.n	8007950 <_printf_float+0x16c>
 80078d0:	2306      	movs	r3, #6
 80078d2:	6063      	str	r3, [r4, #4]
 80078d4:	2200      	movs	r2, #0
 80078d6:	f44b 6380 	orr.w	r3, fp, #1024	@ 0x400
 80078da:	6023      	str	r3, [r4, #0]
 80078dc:	9206      	str	r2, [sp, #24]
 80078de:	aa0e      	add	r2, sp, #56	@ 0x38
 80078e0:	e9cd a204 	strd	sl, r2, [sp, #16]
 80078e4:	aa0d      	add	r2, sp, #52	@ 0x34
 80078e6:	9203      	str	r2, [sp, #12]
 80078e8:	f10d 0233 	add.w	r2, sp, #51	@ 0x33
 80078ec:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80078f0:	6863      	ldr	r3, [r4, #4]
 80078f2:	4642      	mov	r2, r8
 80078f4:	9300      	str	r3, [sp, #0]
 80078f6:	4628      	mov	r0, r5
 80078f8:	464b      	mov	r3, r9
 80078fa:	910a      	str	r1, [sp, #40]	@ 0x28
 80078fc:	f7ff fed4 	bl	80076a8 <__cvt>
 8007900:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8007902:	4680      	mov	r8, r0
 8007904:	2947      	cmp	r1, #71	@ 0x47
 8007906:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8007908:	d128      	bne.n	800795c <_printf_float+0x178>
 800790a:	1cc8      	adds	r0, r1, #3
 800790c:	db02      	blt.n	8007914 <_printf_float+0x130>
 800790e:	6863      	ldr	r3, [r4, #4]
 8007910:	4299      	cmp	r1, r3
 8007912:	dd40      	ble.n	8007996 <_printf_float+0x1b2>
 8007914:	f1aa 0a02 	sub.w	sl, sl, #2
 8007918:	fa5f fa8a 	uxtb.w	sl, sl
 800791c:	4652      	mov	r2, sl
 800791e:	3901      	subs	r1, #1
 8007920:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8007924:	910d      	str	r1, [sp, #52]	@ 0x34
 8007926:	f7ff ff23 	bl	8007770 <__exponent>
 800792a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800792c:	4681      	mov	r9, r0
 800792e:	1813      	adds	r3, r2, r0
 8007930:	2a01      	cmp	r2, #1
 8007932:	6123      	str	r3, [r4, #16]
 8007934:	dc02      	bgt.n	800793c <_printf_float+0x158>
 8007936:	6822      	ldr	r2, [r4, #0]
 8007938:	07d2      	lsls	r2, r2, #31
 800793a:	d501      	bpl.n	8007940 <_printf_float+0x15c>
 800793c:	3301      	adds	r3, #1
 800793e:	6123      	str	r3, [r4, #16]
 8007940:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 8007944:	2b00      	cmp	r3, #0
 8007946:	d09e      	beq.n	8007886 <_printf_float+0xa2>
 8007948:	232d      	movs	r3, #45	@ 0x2d
 800794a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800794e:	e79a      	b.n	8007886 <_printf_float+0xa2>
 8007950:	2947      	cmp	r1, #71	@ 0x47
 8007952:	d1bf      	bne.n	80078d4 <_printf_float+0xf0>
 8007954:	2b00      	cmp	r3, #0
 8007956:	d1bd      	bne.n	80078d4 <_printf_float+0xf0>
 8007958:	2301      	movs	r3, #1
 800795a:	e7ba      	b.n	80078d2 <_printf_float+0xee>
 800795c:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8007960:	d9dc      	bls.n	800791c <_printf_float+0x138>
 8007962:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8007966:	d118      	bne.n	800799a <_printf_float+0x1b6>
 8007968:	2900      	cmp	r1, #0
 800796a:	6863      	ldr	r3, [r4, #4]
 800796c:	dd0b      	ble.n	8007986 <_printf_float+0x1a2>
 800796e:	6121      	str	r1, [r4, #16]
 8007970:	b913      	cbnz	r3, 8007978 <_printf_float+0x194>
 8007972:	6822      	ldr	r2, [r4, #0]
 8007974:	07d0      	lsls	r0, r2, #31
 8007976:	d502      	bpl.n	800797e <_printf_float+0x19a>
 8007978:	3301      	adds	r3, #1
 800797a:	440b      	add	r3, r1
 800797c:	6123      	str	r3, [r4, #16]
 800797e:	f04f 0900 	mov.w	r9, #0
 8007982:	65a1      	str	r1, [r4, #88]	@ 0x58
 8007984:	e7dc      	b.n	8007940 <_printf_float+0x15c>
 8007986:	b913      	cbnz	r3, 800798e <_printf_float+0x1aa>
 8007988:	6822      	ldr	r2, [r4, #0]
 800798a:	07d2      	lsls	r2, r2, #31
 800798c:	d501      	bpl.n	8007992 <_printf_float+0x1ae>
 800798e:	3302      	adds	r3, #2
 8007990:	e7f4      	b.n	800797c <_printf_float+0x198>
 8007992:	2301      	movs	r3, #1
 8007994:	e7f2      	b.n	800797c <_printf_float+0x198>
 8007996:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 800799a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800799c:	4299      	cmp	r1, r3
 800799e:	db05      	blt.n	80079ac <_printf_float+0x1c8>
 80079a0:	6823      	ldr	r3, [r4, #0]
 80079a2:	6121      	str	r1, [r4, #16]
 80079a4:	07d8      	lsls	r0, r3, #31
 80079a6:	d5ea      	bpl.n	800797e <_printf_float+0x19a>
 80079a8:	1c4b      	adds	r3, r1, #1
 80079aa:	e7e7      	b.n	800797c <_printf_float+0x198>
 80079ac:	2900      	cmp	r1, #0
 80079ae:	bfcc      	ite	gt
 80079b0:	2201      	movgt	r2, #1
 80079b2:	f1c1 0202 	rsble	r2, r1, #2
 80079b6:	4413      	add	r3, r2
 80079b8:	e7e0      	b.n	800797c <_printf_float+0x198>
 80079ba:	6823      	ldr	r3, [r4, #0]
 80079bc:	055a      	lsls	r2, r3, #21
 80079be:	d407      	bmi.n	80079d0 <_printf_float+0x1ec>
 80079c0:	6923      	ldr	r3, [r4, #16]
 80079c2:	4642      	mov	r2, r8
 80079c4:	4631      	mov	r1, r6
 80079c6:	4628      	mov	r0, r5
 80079c8:	47b8      	blx	r7
 80079ca:	3001      	adds	r0, #1
 80079cc:	d12b      	bne.n	8007a26 <_printf_float+0x242>
 80079ce:	e764      	b.n	800789a <_printf_float+0xb6>
 80079d0:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 80079d4:	f240 80dc 	bls.w	8007b90 <_printf_float+0x3ac>
 80079d8:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 80079dc:	2200      	movs	r2, #0
 80079de:	2300      	movs	r3, #0
 80079e0:	f7f8 ffec 	bl	80009bc <__aeabi_dcmpeq>
 80079e4:	2800      	cmp	r0, #0
 80079e6:	d033      	beq.n	8007a50 <_printf_float+0x26c>
 80079e8:	2301      	movs	r3, #1
 80079ea:	4631      	mov	r1, r6
 80079ec:	4628      	mov	r0, r5
 80079ee:	4a35      	ldr	r2, [pc, #212]	@ (8007ac4 <_printf_float+0x2e0>)
 80079f0:	47b8      	blx	r7
 80079f2:	3001      	adds	r0, #1
 80079f4:	f43f af51 	beq.w	800789a <_printf_float+0xb6>
 80079f8:	e9dd 380d 	ldrd	r3, r8, [sp, #52]	@ 0x34
 80079fc:	4543      	cmp	r3, r8
 80079fe:	db02      	blt.n	8007a06 <_printf_float+0x222>
 8007a00:	6823      	ldr	r3, [r4, #0]
 8007a02:	07d8      	lsls	r0, r3, #31
 8007a04:	d50f      	bpl.n	8007a26 <_printf_float+0x242>
 8007a06:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8007a0a:	4631      	mov	r1, r6
 8007a0c:	4628      	mov	r0, r5
 8007a0e:	47b8      	blx	r7
 8007a10:	3001      	adds	r0, #1
 8007a12:	f43f af42 	beq.w	800789a <_printf_float+0xb6>
 8007a16:	f04f 0900 	mov.w	r9, #0
 8007a1a:	f108 38ff 	add.w	r8, r8, #4294967295
 8007a1e:	f104 0a1a 	add.w	sl, r4, #26
 8007a22:	45c8      	cmp	r8, r9
 8007a24:	dc09      	bgt.n	8007a3a <_printf_float+0x256>
 8007a26:	6823      	ldr	r3, [r4, #0]
 8007a28:	079b      	lsls	r3, r3, #30
 8007a2a:	f100 8102 	bmi.w	8007c32 <_printf_float+0x44e>
 8007a2e:	68e0      	ldr	r0, [r4, #12]
 8007a30:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8007a32:	4298      	cmp	r0, r3
 8007a34:	bfb8      	it	lt
 8007a36:	4618      	movlt	r0, r3
 8007a38:	e731      	b.n	800789e <_printf_float+0xba>
 8007a3a:	2301      	movs	r3, #1
 8007a3c:	4652      	mov	r2, sl
 8007a3e:	4631      	mov	r1, r6
 8007a40:	4628      	mov	r0, r5
 8007a42:	47b8      	blx	r7
 8007a44:	3001      	adds	r0, #1
 8007a46:	f43f af28 	beq.w	800789a <_printf_float+0xb6>
 8007a4a:	f109 0901 	add.w	r9, r9, #1
 8007a4e:	e7e8      	b.n	8007a22 <_printf_float+0x23e>
 8007a50:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8007a52:	2b00      	cmp	r3, #0
 8007a54:	dc38      	bgt.n	8007ac8 <_printf_float+0x2e4>
 8007a56:	2301      	movs	r3, #1
 8007a58:	4631      	mov	r1, r6
 8007a5a:	4628      	mov	r0, r5
 8007a5c:	4a19      	ldr	r2, [pc, #100]	@ (8007ac4 <_printf_float+0x2e0>)
 8007a5e:	47b8      	blx	r7
 8007a60:	3001      	adds	r0, #1
 8007a62:	f43f af1a 	beq.w	800789a <_printf_float+0xb6>
 8007a66:	e9dd 390d 	ldrd	r3, r9, [sp, #52]	@ 0x34
 8007a6a:	ea59 0303 	orrs.w	r3, r9, r3
 8007a6e:	d102      	bne.n	8007a76 <_printf_float+0x292>
 8007a70:	6823      	ldr	r3, [r4, #0]
 8007a72:	07d9      	lsls	r1, r3, #31
 8007a74:	d5d7      	bpl.n	8007a26 <_printf_float+0x242>
 8007a76:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8007a7a:	4631      	mov	r1, r6
 8007a7c:	4628      	mov	r0, r5
 8007a7e:	47b8      	blx	r7
 8007a80:	3001      	adds	r0, #1
 8007a82:	f43f af0a 	beq.w	800789a <_printf_float+0xb6>
 8007a86:	f04f 0a00 	mov.w	sl, #0
 8007a8a:	f104 0b1a 	add.w	fp, r4, #26
 8007a8e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8007a90:	425b      	negs	r3, r3
 8007a92:	4553      	cmp	r3, sl
 8007a94:	dc01      	bgt.n	8007a9a <_printf_float+0x2b6>
 8007a96:	464b      	mov	r3, r9
 8007a98:	e793      	b.n	80079c2 <_printf_float+0x1de>
 8007a9a:	2301      	movs	r3, #1
 8007a9c:	465a      	mov	r2, fp
 8007a9e:	4631      	mov	r1, r6
 8007aa0:	4628      	mov	r0, r5
 8007aa2:	47b8      	blx	r7
 8007aa4:	3001      	adds	r0, #1
 8007aa6:	f43f aef8 	beq.w	800789a <_printf_float+0xb6>
 8007aaa:	f10a 0a01 	add.w	sl, sl, #1
 8007aae:	e7ee      	b.n	8007a8e <_printf_float+0x2aa>
 8007ab0:	7fefffff 	.word	0x7fefffff
 8007ab4:	0800bf58 	.word	0x0800bf58
 8007ab8:	0800bf5c 	.word	0x0800bf5c
 8007abc:	0800bf60 	.word	0x0800bf60
 8007ac0:	0800bf64 	.word	0x0800bf64
 8007ac4:	0800bf68 	.word	0x0800bf68
 8007ac8:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8007aca:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8007ace:	4553      	cmp	r3, sl
 8007ad0:	bfa8      	it	ge
 8007ad2:	4653      	movge	r3, sl
 8007ad4:	2b00      	cmp	r3, #0
 8007ad6:	4699      	mov	r9, r3
 8007ad8:	dc36      	bgt.n	8007b48 <_printf_float+0x364>
 8007ada:	f04f 0b00 	mov.w	fp, #0
 8007ade:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8007ae2:	f104 021a 	add.w	r2, r4, #26
 8007ae6:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8007ae8:	930a      	str	r3, [sp, #40]	@ 0x28
 8007aea:	eba3 0309 	sub.w	r3, r3, r9
 8007aee:	455b      	cmp	r3, fp
 8007af0:	dc31      	bgt.n	8007b56 <_printf_float+0x372>
 8007af2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8007af4:	459a      	cmp	sl, r3
 8007af6:	dc3a      	bgt.n	8007b6e <_printf_float+0x38a>
 8007af8:	6823      	ldr	r3, [r4, #0]
 8007afa:	07da      	lsls	r2, r3, #31
 8007afc:	d437      	bmi.n	8007b6e <_printf_float+0x38a>
 8007afe:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8007b00:	ebaa 0903 	sub.w	r9, sl, r3
 8007b04:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8007b06:	ebaa 0303 	sub.w	r3, sl, r3
 8007b0a:	4599      	cmp	r9, r3
 8007b0c:	bfa8      	it	ge
 8007b0e:	4699      	movge	r9, r3
 8007b10:	f1b9 0f00 	cmp.w	r9, #0
 8007b14:	dc33      	bgt.n	8007b7e <_printf_float+0x39a>
 8007b16:	f04f 0800 	mov.w	r8, #0
 8007b1a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8007b1e:	f104 0b1a 	add.w	fp, r4, #26
 8007b22:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8007b24:	ebaa 0303 	sub.w	r3, sl, r3
 8007b28:	eba3 0309 	sub.w	r3, r3, r9
 8007b2c:	4543      	cmp	r3, r8
 8007b2e:	f77f af7a 	ble.w	8007a26 <_printf_float+0x242>
 8007b32:	2301      	movs	r3, #1
 8007b34:	465a      	mov	r2, fp
 8007b36:	4631      	mov	r1, r6
 8007b38:	4628      	mov	r0, r5
 8007b3a:	47b8      	blx	r7
 8007b3c:	3001      	adds	r0, #1
 8007b3e:	f43f aeac 	beq.w	800789a <_printf_float+0xb6>
 8007b42:	f108 0801 	add.w	r8, r8, #1
 8007b46:	e7ec      	b.n	8007b22 <_printf_float+0x33e>
 8007b48:	4642      	mov	r2, r8
 8007b4a:	4631      	mov	r1, r6
 8007b4c:	4628      	mov	r0, r5
 8007b4e:	47b8      	blx	r7
 8007b50:	3001      	adds	r0, #1
 8007b52:	d1c2      	bne.n	8007ada <_printf_float+0x2f6>
 8007b54:	e6a1      	b.n	800789a <_printf_float+0xb6>
 8007b56:	2301      	movs	r3, #1
 8007b58:	4631      	mov	r1, r6
 8007b5a:	4628      	mov	r0, r5
 8007b5c:	920a      	str	r2, [sp, #40]	@ 0x28
 8007b5e:	47b8      	blx	r7
 8007b60:	3001      	adds	r0, #1
 8007b62:	f43f ae9a 	beq.w	800789a <_printf_float+0xb6>
 8007b66:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8007b68:	f10b 0b01 	add.w	fp, fp, #1
 8007b6c:	e7bb      	b.n	8007ae6 <_printf_float+0x302>
 8007b6e:	4631      	mov	r1, r6
 8007b70:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8007b74:	4628      	mov	r0, r5
 8007b76:	47b8      	blx	r7
 8007b78:	3001      	adds	r0, #1
 8007b7a:	d1c0      	bne.n	8007afe <_printf_float+0x31a>
 8007b7c:	e68d      	b.n	800789a <_printf_float+0xb6>
 8007b7e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8007b80:	464b      	mov	r3, r9
 8007b82:	4631      	mov	r1, r6
 8007b84:	4628      	mov	r0, r5
 8007b86:	4442      	add	r2, r8
 8007b88:	47b8      	blx	r7
 8007b8a:	3001      	adds	r0, #1
 8007b8c:	d1c3      	bne.n	8007b16 <_printf_float+0x332>
 8007b8e:	e684      	b.n	800789a <_printf_float+0xb6>
 8007b90:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8007b94:	f1ba 0f01 	cmp.w	sl, #1
 8007b98:	dc01      	bgt.n	8007b9e <_printf_float+0x3ba>
 8007b9a:	07db      	lsls	r3, r3, #31
 8007b9c:	d536      	bpl.n	8007c0c <_printf_float+0x428>
 8007b9e:	2301      	movs	r3, #1
 8007ba0:	4642      	mov	r2, r8
 8007ba2:	4631      	mov	r1, r6
 8007ba4:	4628      	mov	r0, r5
 8007ba6:	47b8      	blx	r7
 8007ba8:	3001      	adds	r0, #1
 8007baa:	f43f ae76 	beq.w	800789a <_printf_float+0xb6>
 8007bae:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8007bb2:	4631      	mov	r1, r6
 8007bb4:	4628      	mov	r0, r5
 8007bb6:	47b8      	blx	r7
 8007bb8:	3001      	adds	r0, #1
 8007bba:	f43f ae6e 	beq.w	800789a <_printf_float+0xb6>
 8007bbe:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8007bc2:	2200      	movs	r2, #0
 8007bc4:	2300      	movs	r3, #0
 8007bc6:	f10a 3aff 	add.w	sl, sl, #4294967295
 8007bca:	f7f8 fef7 	bl	80009bc <__aeabi_dcmpeq>
 8007bce:	b9c0      	cbnz	r0, 8007c02 <_printf_float+0x41e>
 8007bd0:	4653      	mov	r3, sl
 8007bd2:	f108 0201 	add.w	r2, r8, #1
 8007bd6:	4631      	mov	r1, r6
 8007bd8:	4628      	mov	r0, r5
 8007bda:	47b8      	blx	r7
 8007bdc:	3001      	adds	r0, #1
 8007bde:	d10c      	bne.n	8007bfa <_printf_float+0x416>
 8007be0:	e65b      	b.n	800789a <_printf_float+0xb6>
 8007be2:	2301      	movs	r3, #1
 8007be4:	465a      	mov	r2, fp
 8007be6:	4631      	mov	r1, r6
 8007be8:	4628      	mov	r0, r5
 8007bea:	47b8      	blx	r7
 8007bec:	3001      	adds	r0, #1
 8007bee:	f43f ae54 	beq.w	800789a <_printf_float+0xb6>
 8007bf2:	f108 0801 	add.w	r8, r8, #1
 8007bf6:	45d0      	cmp	r8, sl
 8007bf8:	dbf3      	blt.n	8007be2 <_printf_float+0x3fe>
 8007bfa:	464b      	mov	r3, r9
 8007bfc:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8007c00:	e6e0      	b.n	80079c4 <_printf_float+0x1e0>
 8007c02:	f04f 0800 	mov.w	r8, #0
 8007c06:	f104 0b1a 	add.w	fp, r4, #26
 8007c0a:	e7f4      	b.n	8007bf6 <_printf_float+0x412>
 8007c0c:	2301      	movs	r3, #1
 8007c0e:	4642      	mov	r2, r8
 8007c10:	e7e1      	b.n	8007bd6 <_printf_float+0x3f2>
 8007c12:	2301      	movs	r3, #1
 8007c14:	464a      	mov	r2, r9
 8007c16:	4631      	mov	r1, r6
 8007c18:	4628      	mov	r0, r5
 8007c1a:	47b8      	blx	r7
 8007c1c:	3001      	adds	r0, #1
 8007c1e:	f43f ae3c 	beq.w	800789a <_printf_float+0xb6>
 8007c22:	f108 0801 	add.w	r8, r8, #1
 8007c26:	68e3      	ldr	r3, [r4, #12]
 8007c28:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8007c2a:	1a5b      	subs	r3, r3, r1
 8007c2c:	4543      	cmp	r3, r8
 8007c2e:	dcf0      	bgt.n	8007c12 <_printf_float+0x42e>
 8007c30:	e6fd      	b.n	8007a2e <_printf_float+0x24a>
 8007c32:	f04f 0800 	mov.w	r8, #0
 8007c36:	f104 0919 	add.w	r9, r4, #25
 8007c3a:	e7f4      	b.n	8007c26 <_printf_float+0x442>

08007c3c <_printf_common>:
 8007c3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007c40:	4616      	mov	r6, r2
 8007c42:	4698      	mov	r8, r3
 8007c44:	688a      	ldr	r2, [r1, #8]
 8007c46:	690b      	ldr	r3, [r1, #16]
 8007c48:	4607      	mov	r7, r0
 8007c4a:	4293      	cmp	r3, r2
 8007c4c:	bfb8      	it	lt
 8007c4e:	4613      	movlt	r3, r2
 8007c50:	6033      	str	r3, [r6, #0]
 8007c52:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8007c56:	460c      	mov	r4, r1
 8007c58:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8007c5c:	b10a      	cbz	r2, 8007c62 <_printf_common+0x26>
 8007c5e:	3301      	adds	r3, #1
 8007c60:	6033      	str	r3, [r6, #0]
 8007c62:	6823      	ldr	r3, [r4, #0]
 8007c64:	0699      	lsls	r1, r3, #26
 8007c66:	bf42      	ittt	mi
 8007c68:	6833      	ldrmi	r3, [r6, #0]
 8007c6a:	3302      	addmi	r3, #2
 8007c6c:	6033      	strmi	r3, [r6, #0]
 8007c6e:	6825      	ldr	r5, [r4, #0]
 8007c70:	f015 0506 	ands.w	r5, r5, #6
 8007c74:	d106      	bne.n	8007c84 <_printf_common+0x48>
 8007c76:	f104 0a19 	add.w	sl, r4, #25
 8007c7a:	68e3      	ldr	r3, [r4, #12]
 8007c7c:	6832      	ldr	r2, [r6, #0]
 8007c7e:	1a9b      	subs	r3, r3, r2
 8007c80:	42ab      	cmp	r3, r5
 8007c82:	dc2b      	bgt.n	8007cdc <_printf_common+0xa0>
 8007c84:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8007c88:	6822      	ldr	r2, [r4, #0]
 8007c8a:	3b00      	subs	r3, #0
 8007c8c:	bf18      	it	ne
 8007c8e:	2301      	movne	r3, #1
 8007c90:	0692      	lsls	r2, r2, #26
 8007c92:	d430      	bmi.n	8007cf6 <_printf_common+0xba>
 8007c94:	4641      	mov	r1, r8
 8007c96:	4638      	mov	r0, r7
 8007c98:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8007c9c:	47c8      	blx	r9
 8007c9e:	3001      	adds	r0, #1
 8007ca0:	d023      	beq.n	8007cea <_printf_common+0xae>
 8007ca2:	6823      	ldr	r3, [r4, #0]
 8007ca4:	6922      	ldr	r2, [r4, #16]
 8007ca6:	f003 0306 	and.w	r3, r3, #6
 8007caa:	2b04      	cmp	r3, #4
 8007cac:	bf14      	ite	ne
 8007cae:	2500      	movne	r5, #0
 8007cb0:	6833      	ldreq	r3, [r6, #0]
 8007cb2:	f04f 0600 	mov.w	r6, #0
 8007cb6:	bf08      	it	eq
 8007cb8:	68e5      	ldreq	r5, [r4, #12]
 8007cba:	f104 041a 	add.w	r4, r4, #26
 8007cbe:	bf08      	it	eq
 8007cc0:	1aed      	subeq	r5, r5, r3
 8007cc2:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8007cc6:	bf08      	it	eq
 8007cc8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8007ccc:	4293      	cmp	r3, r2
 8007cce:	bfc4      	itt	gt
 8007cd0:	1a9b      	subgt	r3, r3, r2
 8007cd2:	18ed      	addgt	r5, r5, r3
 8007cd4:	42b5      	cmp	r5, r6
 8007cd6:	d11a      	bne.n	8007d0e <_printf_common+0xd2>
 8007cd8:	2000      	movs	r0, #0
 8007cda:	e008      	b.n	8007cee <_printf_common+0xb2>
 8007cdc:	2301      	movs	r3, #1
 8007cde:	4652      	mov	r2, sl
 8007ce0:	4641      	mov	r1, r8
 8007ce2:	4638      	mov	r0, r7
 8007ce4:	47c8      	blx	r9
 8007ce6:	3001      	adds	r0, #1
 8007ce8:	d103      	bne.n	8007cf2 <_printf_common+0xb6>
 8007cea:	f04f 30ff 	mov.w	r0, #4294967295
 8007cee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007cf2:	3501      	adds	r5, #1
 8007cf4:	e7c1      	b.n	8007c7a <_printf_common+0x3e>
 8007cf6:	2030      	movs	r0, #48	@ 0x30
 8007cf8:	18e1      	adds	r1, r4, r3
 8007cfa:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8007cfe:	1c5a      	adds	r2, r3, #1
 8007d00:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8007d04:	4422      	add	r2, r4
 8007d06:	3302      	adds	r3, #2
 8007d08:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8007d0c:	e7c2      	b.n	8007c94 <_printf_common+0x58>
 8007d0e:	2301      	movs	r3, #1
 8007d10:	4622      	mov	r2, r4
 8007d12:	4641      	mov	r1, r8
 8007d14:	4638      	mov	r0, r7
 8007d16:	47c8      	blx	r9
 8007d18:	3001      	adds	r0, #1
 8007d1a:	d0e6      	beq.n	8007cea <_printf_common+0xae>
 8007d1c:	3601      	adds	r6, #1
 8007d1e:	e7d9      	b.n	8007cd4 <_printf_common+0x98>

08007d20 <_printf_i>:
 8007d20:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007d24:	7e0f      	ldrb	r7, [r1, #24]
 8007d26:	4691      	mov	r9, r2
 8007d28:	2f78      	cmp	r7, #120	@ 0x78
 8007d2a:	4680      	mov	r8, r0
 8007d2c:	460c      	mov	r4, r1
 8007d2e:	469a      	mov	sl, r3
 8007d30:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8007d32:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8007d36:	d807      	bhi.n	8007d48 <_printf_i+0x28>
 8007d38:	2f62      	cmp	r7, #98	@ 0x62
 8007d3a:	d80a      	bhi.n	8007d52 <_printf_i+0x32>
 8007d3c:	2f00      	cmp	r7, #0
 8007d3e:	f000 80d3 	beq.w	8007ee8 <_printf_i+0x1c8>
 8007d42:	2f58      	cmp	r7, #88	@ 0x58
 8007d44:	f000 80ba 	beq.w	8007ebc <_printf_i+0x19c>
 8007d48:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8007d4c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8007d50:	e03a      	b.n	8007dc8 <_printf_i+0xa8>
 8007d52:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8007d56:	2b15      	cmp	r3, #21
 8007d58:	d8f6      	bhi.n	8007d48 <_printf_i+0x28>
 8007d5a:	a101      	add	r1, pc, #4	@ (adr r1, 8007d60 <_printf_i+0x40>)
 8007d5c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8007d60:	08007db9 	.word	0x08007db9
 8007d64:	08007dcd 	.word	0x08007dcd
 8007d68:	08007d49 	.word	0x08007d49
 8007d6c:	08007d49 	.word	0x08007d49
 8007d70:	08007d49 	.word	0x08007d49
 8007d74:	08007d49 	.word	0x08007d49
 8007d78:	08007dcd 	.word	0x08007dcd
 8007d7c:	08007d49 	.word	0x08007d49
 8007d80:	08007d49 	.word	0x08007d49
 8007d84:	08007d49 	.word	0x08007d49
 8007d88:	08007d49 	.word	0x08007d49
 8007d8c:	08007ecf 	.word	0x08007ecf
 8007d90:	08007df7 	.word	0x08007df7
 8007d94:	08007e89 	.word	0x08007e89
 8007d98:	08007d49 	.word	0x08007d49
 8007d9c:	08007d49 	.word	0x08007d49
 8007da0:	08007ef1 	.word	0x08007ef1
 8007da4:	08007d49 	.word	0x08007d49
 8007da8:	08007df7 	.word	0x08007df7
 8007dac:	08007d49 	.word	0x08007d49
 8007db0:	08007d49 	.word	0x08007d49
 8007db4:	08007e91 	.word	0x08007e91
 8007db8:	6833      	ldr	r3, [r6, #0]
 8007dba:	1d1a      	adds	r2, r3, #4
 8007dbc:	681b      	ldr	r3, [r3, #0]
 8007dbe:	6032      	str	r2, [r6, #0]
 8007dc0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8007dc4:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8007dc8:	2301      	movs	r3, #1
 8007dca:	e09e      	b.n	8007f0a <_printf_i+0x1ea>
 8007dcc:	6833      	ldr	r3, [r6, #0]
 8007dce:	6820      	ldr	r0, [r4, #0]
 8007dd0:	1d19      	adds	r1, r3, #4
 8007dd2:	6031      	str	r1, [r6, #0]
 8007dd4:	0606      	lsls	r6, r0, #24
 8007dd6:	d501      	bpl.n	8007ddc <_printf_i+0xbc>
 8007dd8:	681d      	ldr	r5, [r3, #0]
 8007dda:	e003      	b.n	8007de4 <_printf_i+0xc4>
 8007ddc:	0645      	lsls	r5, r0, #25
 8007dde:	d5fb      	bpl.n	8007dd8 <_printf_i+0xb8>
 8007de0:	f9b3 5000 	ldrsh.w	r5, [r3]
 8007de4:	2d00      	cmp	r5, #0
 8007de6:	da03      	bge.n	8007df0 <_printf_i+0xd0>
 8007de8:	232d      	movs	r3, #45	@ 0x2d
 8007dea:	426d      	negs	r5, r5
 8007dec:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8007df0:	230a      	movs	r3, #10
 8007df2:	4859      	ldr	r0, [pc, #356]	@ (8007f58 <_printf_i+0x238>)
 8007df4:	e011      	b.n	8007e1a <_printf_i+0xfa>
 8007df6:	6821      	ldr	r1, [r4, #0]
 8007df8:	6833      	ldr	r3, [r6, #0]
 8007dfa:	0608      	lsls	r0, r1, #24
 8007dfc:	f853 5b04 	ldr.w	r5, [r3], #4
 8007e00:	d402      	bmi.n	8007e08 <_printf_i+0xe8>
 8007e02:	0649      	lsls	r1, r1, #25
 8007e04:	bf48      	it	mi
 8007e06:	b2ad      	uxthmi	r5, r5
 8007e08:	2f6f      	cmp	r7, #111	@ 0x6f
 8007e0a:	6033      	str	r3, [r6, #0]
 8007e0c:	bf14      	ite	ne
 8007e0e:	230a      	movne	r3, #10
 8007e10:	2308      	moveq	r3, #8
 8007e12:	4851      	ldr	r0, [pc, #324]	@ (8007f58 <_printf_i+0x238>)
 8007e14:	2100      	movs	r1, #0
 8007e16:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8007e1a:	6866      	ldr	r6, [r4, #4]
 8007e1c:	2e00      	cmp	r6, #0
 8007e1e:	bfa8      	it	ge
 8007e20:	6821      	ldrge	r1, [r4, #0]
 8007e22:	60a6      	str	r6, [r4, #8]
 8007e24:	bfa4      	itt	ge
 8007e26:	f021 0104 	bicge.w	r1, r1, #4
 8007e2a:	6021      	strge	r1, [r4, #0]
 8007e2c:	b90d      	cbnz	r5, 8007e32 <_printf_i+0x112>
 8007e2e:	2e00      	cmp	r6, #0
 8007e30:	d04b      	beq.n	8007eca <_printf_i+0x1aa>
 8007e32:	4616      	mov	r6, r2
 8007e34:	fbb5 f1f3 	udiv	r1, r5, r3
 8007e38:	fb03 5711 	mls	r7, r3, r1, r5
 8007e3c:	5dc7      	ldrb	r7, [r0, r7]
 8007e3e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8007e42:	462f      	mov	r7, r5
 8007e44:	42bb      	cmp	r3, r7
 8007e46:	460d      	mov	r5, r1
 8007e48:	d9f4      	bls.n	8007e34 <_printf_i+0x114>
 8007e4a:	2b08      	cmp	r3, #8
 8007e4c:	d10b      	bne.n	8007e66 <_printf_i+0x146>
 8007e4e:	6823      	ldr	r3, [r4, #0]
 8007e50:	07df      	lsls	r7, r3, #31
 8007e52:	d508      	bpl.n	8007e66 <_printf_i+0x146>
 8007e54:	6923      	ldr	r3, [r4, #16]
 8007e56:	6861      	ldr	r1, [r4, #4]
 8007e58:	4299      	cmp	r1, r3
 8007e5a:	bfde      	ittt	le
 8007e5c:	2330      	movle	r3, #48	@ 0x30
 8007e5e:	f806 3c01 	strble.w	r3, [r6, #-1]
 8007e62:	f106 36ff 	addle.w	r6, r6, #4294967295
 8007e66:	1b92      	subs	r2, r2, r6
 8007e68:	6122      	str	r2, [r4, #16]
 8007e6a:	464b      	mov	r3, r9
 8007e6c:	4621      	mov	r1, r4
 8007e6e:	4640      	mov	r0, r8
 8007e70:	f8cd a000 	str.w	sl, [sp]
 8007e74:	aa03      	add	r2, sp, #12
 8007e76:	f7ff fee1 	bl	8007c3c <_printf_common>
 8007e7a:	3001      	adds	r0, #1
 8007e7c:	d14a      	bne.n	8007f14 <_printf_i+0x1f4>
 8007e7e:	f04f 30ff 	mov.w	r0, #4294967295
 8007e82:	b004      	add	sp, #16
 8007e84:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007e88:	6823      	ldr	r3, [r4, #0]
 8007e8a:	f043 0320 	orr.w	r3, r3, #32
 8007e8e:	6023      	str	r3, [r4, #0]
 8007e90:	2778      	movs	r7, #120	@ 0x78
 8007e92:	4832      	ldr	r0, [pc, #200]	@ (8007f5c <_printf_i+0x23c>)
 8007e94:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8007e98:	6823      	ldr	r3, [r4, #0]
 8007e9a:	6831      	ldr	r1, [r6, #0]
 8007e9c:	061f      	lsls	r7, r3, #24
 8007e9e:	f851 5b04 	ldr.w	r5, [r1], #4
 8007ea2:	d402      	bmi.n	8007eaa <_printf_i+0x18a>
 8007ea4:	065f      	lsls	r7, r3, #25
 8007ea6:	bf48      	it	mi
 8007ea8:	b2ad      	uxthmi	r5, r5
 8007eaa:	6031      	str	r1, [r6, #0]
 8007eac:	07d9      	lsls	r1, r3, #31
 8007eae:	bf44      	itt	mi
 8007eb0:	f043 0320 	orrmi.w	r3, r3, #32
 8007eb4:	6023      	strmi	r3, [r4, #0]
 8007eb6:	b11d      	cbz	r5, 8007ec0 <_printf_i+0x1a0>
 8007eb8:	2310      	movs	r3, #16
 8007eba:	e7ab      	b.n	8007e14 <_printf_i+0xf4>
 8007ebc:	4826      	ldr	r0, [pc, #152]	@ (8007f58 <_printf_i+0x238>)
 8007ebe:	e7e9      	b.n	8007e94 <_printf_i+0x174>
 8007ec0:	6823      	ldr	r3, [r4, #0]
 8007ec2:	f023 0320 	bic.w	r3, r3, #32
 8007ec6:	6023      	str	r3, [r4, #0]
 8007ec8:	e7f6      	b.n	8007eb8 <_printf_i+0x198>
 8007eca:	4616      	mov	r6, r2
 8007ecc:	e7bd      	b.n	8007e4a <_printf_i+0x12a>
 8007ece:	6833      	ldr	r3, [r6, #0]
 8007ed0:	6825      	ldr	r5, [r4, #0]
 8007ed2:	1d18      	adds	r0, r3, #4
 8007ed4:	6961      	ldr	r1, [r4, #20]
 8007ed6:	6030      	str	r0, [r6, #0]
 8007ed8:	062e      	lsls	r6, r5, #24
 8007eda:	681b      	ldr	r3, [r3, #0]
 8007edc:	d501      	bpl.n	8007ee2 <_printf_i+0x1c2>
 8007ede:	6019      	str	r1, [r3, #0]
 8007ee0:	e002      	b.n	8007ee8 <_printf_i+0x1c8>
 8007ee2:	0668      	lsls	r0, r5, #25
 8007ee4:	d5fb      	bpl.n	8007ede <_printf_i+0x1be>
 8007ee6:	8019      	strh	r1, [r3, #0]
 8007ee8:	2300      	movs	r3, #0
 8007eea:	4616      	mov	r6, r2
 8007eec:	6123      	str	r3, [r4, #16]
 8007eee:	e7bc      	b.n	8007e6a <_printf_i+0x14a>
 8007ef0:	6833      	ldr	r3, [r6, #0]
 8007ef2:	2100      	movs	r1, #0
 8007ef4:	1d1a      	adds	r2, r3, #4
 8007ef6:	6032      	str	r2, [r6, #0]
 8007ef8:	681e      	ldr	r6, [r3, #0]
 8007efa:	6862      	ldr	r2, [r4, #4]
 8007efc:	4630      	mov	r0, r6
 8007efe:	f000 fb52 	bl	80085a6 <memchr>
 8007f02:	b108      	cbz	r0, 8007f08 <_printf_i+0x1e8>
 8007f04:	1b80      	subs	r0, r0, r6
 8007f06:	6060      	str	r0, [r4, #4]
 8007f08:	6863      	ldr	r3, [r4, #4]
 8007f0a:	6123      	str	r3, [r4, #16]
 8007f0c:	2300      	movs	r3, #0
 8007f0e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8007f12:	e7aa      	b.n	8007e6a <_printf_i+0x14a>
 8007f14:	4632      	mov	r2, r6
 8007f16:	4649      	mov	r1, r9
 8007f18:	4640      	mov	r0, r8
 8007f1a:	6923      	ldr	r3, [r4, #16]
 8007f1c:	47d0      	blx	sl
 8007f1e:	3001      	adds	r0, #1
 8007f20:	d0ad      	beq.n	8007e7e <_printf_i+0x15e>
 8007f22:	6823      	ldr	r3, [r4, #0]
 8007f24:	079b      	lsls	r3, r3, #30
 8007f26:	d413      	bmi.n	8007f50 <_printf_i+0x230>
 8007f28:	68e0      	ldr	r0, [r4, #12]
 8007f2a:	9b03      	ldr	r3, [sp, #12]
 8007f2c:	4298      	cmp	r0, r3
 8007f2e:	bfb8      	it	lt
 8007f30:	4618      	movlt	r0, r3
 8007f32:	e7a6      	b.n	8007e82 <_printf_i+0x162>
 8007f34:	2301      	movs	r3, #1
 8007f36:	4632      	mov	r2, r6
 8007f38:	4649      	mov	r1, r9
 8007f3a:	4640      	mov	r0, r8
 8007f3c:	47d0      	blx	sl
 8007f3e:	3001      	adds	r0, #1
 8007f40:	d09d      	beq.n	8007e7e <_printf_i+0x15e>
 8007f42:	3501      	adds	r5, #1
 8007f44:	68e3      	ldr	r3, [r4, #12]
 8007f46:	9903      	ldr	r1, [sp, #12]
 8007f48:	1a5b      	subs	r3, r3, r1
 8007f4a:	42ab      	cmp	r3, r5
 8007f4c:	dcf2      	bgt.n	8007f34 <_printf_i+0x214>
 8007f4e:	e7eb      	b.n	8007f28 <_printf_i+0x208>
 8007f50:	2500      	movs	r5, #0
 8007f52:	f104 0619 	add.w	r6, r4, #25
 8007f56:	e7f5      	b.n	8007f44 <_printf_i+0x224>
 8007f58:	0800bf6a 	.word	0x0800bf6a
 8007f5c:	0800bf7b 	.word	0x0800bf7b

08007f60 <std>:
 8007f60:	2300      	movs	r3, #0
 8007f62:	b510      	push	{r4, lr}
 8007f64:	4604      	mov	r4, r0
 8007f66:	e9c0 3300 	strd	r3, r3, [r0]
 8007f6a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8007f6e:	6083      	str	r3, [r0, #8]
 8007f70:	8181      	strh	r1, [r0, #12]
 8007f72:	6643      	str	r3, [r0, #100]	@ 0x64
 8007f74:	81c2      	strh	r2, [r0, #14]
 8007f76:	6183      	str	r3, [r0, #24]
 8007f78:	4619      	mov	r1, r3
 8007f7a:	2208      	movs	r2, #8
 8007f7c:	305c      	adds	r0, #92	@ 0x5c
 8007f7e:	f000 f9f9 	bl	8008374 <memset>
 8007f82:	4b0d      	ldr	r3, [pc, #52]	@ (8007fb8 <std+0x58>)
 8007f84:	6224      	str	r4, [r4, #32]
 8007f86:	6263      	str	r3, [r4, #36]	@ 0x24
 8007f88:	4b0c      	ldr	r3, [pc, #48]	@ (8007fbc <std+0x5c>)
 8007f8a:	62a3      	str	r3, [r4, #40]	@ 0x28
 8007f8c:	4b0c      	ldr	r3, [pc, #48]	@ (8007fc0 <std+0x60>)
 8007f8e:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8007f90:	4b0c      	ldr	r3, [pc, #48]	@ (8007fc4 <std+0x64>)
 8007f92:	6323      	str	r3, [r4, #48]	@ 0x30
 8007f94:	4b0c      	ldr	r3, [pc, #48]	@ (8007fc8 <std+0x68>)
 8007f96:	429c      	cmp	r4, r3
 8007f98:	d006      	beq.n	8007fa8 <std+0x48>
 8007f9a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8007f9e:	4294      	cmp	r4, r2
 8007fa0:	d002      	beq.n	8007fa8 <std+0x48>
 8007fa2:	33d0      	adds	r3, #208	@ 0xd0
 8007fa4:	429c      	cmp	r4, r3
 8007fa6:	d105      	bne.n	8007fb4 <std+0x54>
 8007fa8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8007fac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007fb0:	f000 baf6 	b.w	80085a0 <__retarget_lock_init_recursive>
 8007fb4:	bd10      	pop	{r4, pc}
 8007fb6:	bf00      	nop
 8007fb8:	080081c5 	.word	0x080081c5
 8007fbc:	080081e7 	.word	0x080081e7
 8007fc0:	0800821f 	.word	0x0800821f
 8007fc4:	08008243 	.word	0x08008243
 8007fc8:	20000530 	.word	0x20000530

08007fcc <stdio_exit_handler>:
 8007fcc:	4a02      	ldr	r2, [pc, #8]	@ (8007fd8 <stdio_exit_handler+0xc>)
 8007fce:	4903      	ldr	r1, [pc, #12]	@ (8007fdc <stdio_exit_handler+0x10>)
 8007fd0:	4803      	ldr	r0, [pc, #12]	@ (8007fe0 <stdio_exit_handler+0x14>)
 8007fd2:	f000 b869 	b.w	80080a8 <_fwalk_sglue>
 8007fd6:	bf00      	nop
 8007fd8:	20000028 	.word	0x20000028
 8007fdc:	0800a6d5 	.word	0x0800a6d5
 8007fe0:	200001a4 	.word	0x200001a4

08007fe4 <cleanup_stdio>:
 8007fe4:	6841      	ldr	r1, [r0, #4]
 8007fe6:	4b0c      	ldr	r3, [pc, #48]	@ (8008018 <cleanup_stdio+0x34>)
 8007fe8:	b510      	push	{r4, lr}
 8007fea:	4299      	cmp	r1, r3
 8007fec:	4604      	mov	r4, r0
 8007fee:	d001      	beq.n	8007ff4 <cleanup_stdio+0x10>
 8007ff0:	f002 fb70 	bl	800a6d4 <_fflush_r>
 8007ff4:	68a1      	ldr	r1, [r4, #8]
 8007ff6:	4b09      	ldr	r3, [pc, #36]	@ (800801c <cleanup_stdio+0x38>)
 8007ff8:	4299      	cmp	r1, r3
 8007ffa:	d002      	beq.n	8008002 <cleanup_stdio+0x1e>
 8007ffc:	4620      	mov	r0, r4
 8007ffe:	f002 fb69 	bl	800a6d4 <_fflush_r>
 8008002:	68e1      	ldr	r1, [r4, #12]
 8008004:	4b06      	ldr	r3, [pc, #24]	@ (8008020 <cleanup_stdio+0x3c>)
 8008006:	4299      	cmp	r1, r3
 8008008:	d004      	beq.n	8008014 <cleanup_stdio+0x30>
 800800a:	4620      	mov	r0, r4
 800800c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008010:	f002 bb60 	b.w	800a6d4 <_fflush_r>
 8008014:	bd10      	pop	{r4, pc}
 8008016:	bf00      	nop
 8008018:	20000530 	.word	0x20000530
 800801c:	20000598 	.word	0x20000598
 8008020:	20000600 	.word	0x20000600

08008024 <global_stdio_init.part.0>:
 8008024:	b510      	push	{r4, lr}
 8008026:	4b0b      	ldr	r3, [pc, #44]	@ (8008054 <global_stdio_init.part.0+0x30>)
 8008028:	4c0b      	ldr	r4, [pc, #44]	@ (8008058 <global_stdio_init.part.0+0x34>)
 800802a:	4a0c      	ldr	r2, [pc, #48]	@ (800805c <global_stdio_init.part.0+0x38>)
 800802c:	4620      	mov	r0, r4
 800802e:	601a      	str	r2, [r3, #0]
 8008030:	2104      	movs	r1, #4
 8008032:	2200      	movs	r2, #0
 8008034:	f7ff ff94 	bl	8007f60 <std>
 8008038:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800803c:	2201      	movs	r2, #1
 800803e:	2109      	movs	r1, #9
 8008040:	f7ff ff8e 	bl	8007f60 <std>
 8008044:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8008048:	2202      	movs	r2, #2
 800804a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800804e:	2112      	movs	r1, #18
 8008050:	f7ff bf86 	b.w	8007f60 <std>
 8008054:	20000668 	.word	0x20000668
 8008058:	20000530 	.word	0x20000530
 800805c:	08007fcd 	.word	0x08007fcd

08008060 <__sfp_lock_acquire>:
 8008060:	4801      	ldr	r0, [pc, #4]	@ (8008068 <__sfp_lock_acquire+0x8>)
 8008062:	f000 ba9e 	b.w	80085a2 <__retarget_lock_acquire_recursive>
 8008066:	bf00      	nop
 8008068:	20000671 	.word	0x20000671

0800806c <__sfp_lock_release>:
 800806c:	4801      	ldr	r0, [pc, #4]	@ (8008074 <__sfp_lock_release+0x8>)
 800806e:	f000 ba99 	b.w	80085a4 <__retarget_lock_release_recursive>
 8008072:	bf00      	nop
 8008074:	20000671 	.word	0x20000671

08008078 <__sinit>:
 8008078:	b510      	push	{r4, lr}
 800807a:	4604      	mov	r4, r0
 800807c:	f7ff fff0 	bl	8008060 <__sfp_lock_acquire>
 8008080:	6a23      	ldr	r3, [r4, #32]
 8008082:	b11b      	cbz	r3, 800808c <__sinit+0x14>
 8008084:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008088:	f7ff bff0 	b.w	800806c <__sfp_lock_release>
 800808c:	4b04      	ldr	r3, [pc, #16]	@ (80080a0 <__sinit+0x28>)
 800808e:	6223      	str	r3, [r4, #32]
 8008090:	4b04      	ldr	r3, [pc, #16]	@ (80080a4 <__sinit+0x2c>)
 8008092:	681b      	ldr	r3, [r3, #0]
 8008094:	2b00      	cmp	r3, #0
 8008096:	d1f5      	bne.n	8008084 <__sinit+0xc>
 8008098:	f7ff ffc4 	bl	8008024 <global_stdio_init.part.0>
 800809c:	e7f2      	b.n	8008084 <__sinit+0xc>
 800809e:	bf00      	nop
 80080a0:	08007fe5 	.word	0x08007fe5
 80080a4:	20000668 	.word	0x20000668

080080a8 <_fwalk_sglue>:
 80080a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80080ac:	4607      	mov	r7, r0
 80080ae:	4688      	mov	r8, r1
 80080b0:	4614      	mov	r4, r2
 80080b2:	2600      	movs	r6, #0
 80080b4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80080b8:	f1b9 0901 	subs.w	r9, r9, #1
 80080bc:	d505      	bpl.n	80080ca <_fwalk_sglue+0x22>
 80080be:	6824      	ldr	r4, [r4, #0]
 80080c0:	2c00      	cmp	r4, #0
 80080c2:	d1f7      	bne.n	80080b4 <_fwalk_sglue+0xc>
 80080c4:	4630      	mov	r0, r6
 80080c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80080ca:	89ab      	ldrh	r3, [r5, #12]
 80080cc:	2b01      	cmp	r3, #1
 80080ce:	d907      	bls.n	80080e0 <_fwalk_sglue+0x38>
 80080d0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80080d4:	3301      	adds	r3, #1
 80080d6:	d003      	beq.n	80080e0 <_fwalk_sglue+0x38>
 80080d8:	4629      	mov	r1, r5
 80080da:	4638      	mov	r0, r7
 80080dc:	47c0      	blx	r8
 80080de:	4306      	orrs	r6, r0
 80080e0:	3568      	adds	r5, #104	@ 0x68
 80080e2:	e7e9      	b.n	80080b8 <_fwalk_sglue+0x10>

080080e4 <iprintf>:
 80080e4:	b40f      	push	{r0, r1, r2, r3}
 80080e6:	b507      	push	{r0, r1, r2, lr}
 80080e8:	4906      	ldr	r1, [pc, #24]	@ (8008104 <iprintf+0x20>)
 80080ea:	ab04      	add	r3, sp, #16
 80080ec:	6808      	ldr	r0, [r1, #0]
 80080ee:	f853 2b04 	ldr.w	r2, [r3], #4
 80080f2:	6881      	ldr	r1, [r0, #8]
 80080f4:	9301      	str	r3, [sp, #4]
 80080f6:	f002 f955 	bl	800a3a4 <_vfiprintf_r>
 80080fa:	b003      	add	sp, #12
 80080fc:	f85d eb04 	ldr.w	lr, [sp], #4
 8008100:	b004      	add	sp, #16
 8008102:	4770      	bx	lr
 8008104:	200001a0 	.word	0x200001a0

08008108 <_puts_r>:
 8008108:	6a03      	ldr	r3, [r0, #32]
 800810a:	b570      	push	{r4, r5, r6, lr}
 800810c:	4605      	mov	r5, r0
 800810e:	460e      	mov	r6, r1
 8008110:	6884      	ldr	r4, [r0, #8]
 8008112:	b90b      	cbnz	r3, 8008118 <_puts_r+0x10>
 8008114:	f7ff ffb0 	bl	8008078 <__sinit>
 8008118:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800811a:	07db      	lsls	r3, r3, #31
 800811c:	d405      	bmi.n	800812a <_puts_r+0x22>
 800811e:	89a3      	ldrh	r3, [r4, #12]
 8008120:	0598      	lsls	r0, r3, #22
 8008122:	d402      	bmi.n	800812a <_puts_r+0x22>
 8008124:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8008126:	f000 fa3c 	bl	80085a2 <__retarget_lock_acquire_recursive>
 800812a:	89a3      	ldrh	r3, [r4, #12]
 800812c:	0719      	lsls	r1, r3, #28
 800812e:	d502      	bpl.n	8008136 <_puts_r+0x2e>
 8008130:	6923      	ldr	r3, [r4, #16]
 8008132:	2b00      	cmp	r3, #0
 8008134:	d135      	bne.n	80081a2 <_puts_r+0x9a>
 8008136:	4621      	mov	r1, r4
 8008138:	4628      	mov	r0, r5
 800813a:	f000 f8c5 	bl	80082c8 <__swsetup_r>
 800813e:	b380      	cbz	r0, 80081a2 <_puts_r+0x9a>
 8008140:	f04f 35ff 	mov.w	r5, #4294967295
 8008144:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8008146:	07da      	lsls	r2, r3, #31
 8008148:	d405      	bmi.n	8008156 <_puts_r+0x4e>
 800814a:	89a3      	ldrh	r3, [r4, #12]
 800814c:	059b      	lsls	r3, r3, #22
 800814e:	d402      	bmi.n	8008156 <_puts_r+0x4e>
 8008150:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8008152:	f000 fa27 	bl	80085a4 <__retarget_lock_release_recursive>
 8008156:	4628      	mov	r0, r5
 8008158:	bd70      	pop	{r4, r5, r6, pc}
 800815a:	2b00      	cmp	r3, #0
 800815c:	da04      	bge.n	8008168 <_puts_r+0x60>
 800815e:	69a2      	ldr	r2, [r4, #24]
 8008160:	429a      	cmp	r2, r3
 8008162:	dc17      	bgt.n	8008194 <_puts_r+0x8c>
 8008164:	290a      	cmp	r1, #10
 8008166:	d015      	beq.n	8008194 <_puts_r+0x8c>
 8008168:	6823      	ldr	r3, [r4, #0]
 800816a:	1c5a      	adds	r2, r3, #1
 800816c:	6022      	str	r2, [r4, #0]
 800816e:	7019      	strb	r1, [r3, #0]
 8008170:	68a3      	ldr	r3, [r4, #8]
 8008172:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8008176:	3b01      	subs	r3, #1
 8008178:	60a3      	str	r3, [r4, #8]
 800817a:	2900      	cmp	r1, #0
 800817c:	d1ed      	bne.n	800815a <_puts_r+0x52>
 800817e:	2b00      	cmp	r3, #0
 8008180:	da11      	bge.n	80081a6 <_puts_r+0x9e>
 8008182:	4622      	mov	r2, r4
 8008184:	210a      	movs	r1, #10
 8008186:	4628      	mov	r0, r5
 8008188:	f000 f85f 	bl	800824a <__swbuf_r>
 800818c:	3001      	adds	r0, #1
 800818e:	d0d7      	beq.n	8008140 <_puts_r+0x38>
 8008190:	250a      	movs	r5, #10
 8008192:	e7d7      	b.n	8008144 <_puts_r+0x3c>
 8008194:	4622      	mov	r2, r4
 8008196:	4628      	mov	r0, r5
 8008198:	f000 f857 	bl	800824a <__swbuf_r>
 800819c:	3001      	adds	r0, #1
 800819e:	d1e7      	bne.n	8008170 <_puts_r+0x68>
 80081a0:	e7ce      	b.n	8008140 <_puts_r+0x38>
 80081a2:	3e01      	subs	r6, #1
 80081a4:	e7e4      	b.n	8008170 <_puts_r+0x68>
 80081a6:	6823      	ldr	r3, [r4, #0]
 80081a8:	1c5a      	adds	r2, r3, #1
 80081aa:	6022      	str	r2, [r4, #0]
 80081ac:	220a      	movs	r2, #10
 80081ae:	701a      	strb	r2, [r3, #0]
 80081b0:	e7ee      	b.n	8008190 <_puts_r+0x88>
	...

080081b4 <puts>:
 80081b4:	4b02      	ldr	r3, [pc, #8]	@ (80081c0 <puts+0xc>)
 80081b6:	4601      	mov	r1, r0
 80081b8:	6818      	ldr	r0, [r3, #0]
 80081ba:	f7ff bfa5 	b.w	8008108 <_puts_r>
 80081be:	bf00      	nop
 80081c0:	200001a0 	.word	0x200001a0

080081c4 <__sread>:
 80081c4:	b510      	push	{r4, lr}
 80081c6:	460c      	mov	r4, r1
 80081c8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80081cc:	f000 f98a 	bl	80084e4 <_read_r>
 80081d0:	2800      	cmp	r0, #0
 80081d2:	bfab      	itete	ge
 80081d4:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80081d6:	89a3      	ldrhlt	r3, [r4, #12]
 80081d8:	181b      	addge	r3, r3, r0
 80081da:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80081de:	bfac      	ite	ge
 80081e0:	6563      	strge	r3, [r4, #84]	@ 0x54
 80081e2:	81a3      	strhlt	r3, [r4, #12]
 80081e4:	bd10      	pop	{r4, pc}

080081e6 <__swrite>:
 80081e6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80081ea:	461f      	mov	r7, r3
 80081ec:	898b      	ldrh	r3, [r1, #12]
 80081ee:	4605      	mov	r5, r0
 80081f0:	05db      	lsls	r3, r3, #23
 80081f2:	460c      	mov	r4, r1
 80081f4:	4616      	mov	r6, r2
 80081f6:	d505      	bpl.n	8008204 <__swrite+0x1e>
 80081f8:	2302      	movs	r3, #2
 80081fa:	2200      	movs	r2, #0
 80081fc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008200:	f000 f95e 	bl	80084c0 <_lseek_r>
 8008204:	89a3      	ldrh	r3, [r4, #12]
 8008206:	4632      	mov	r2, r6
 8008208:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800820c:	81a3      	strh	r3, [r4, #12]
 800820e:	4628      	mov	r0, r5
 8008210:	463b      	mov	r3, r7
 8008212:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8008216:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800821a:	f000 b985 	b.w	8008528 <_write_r>

0800821e <__sseek>:
 800821e:	b510      	push	{r4, lr}
 8008220:	460c      	mov	r4, r1
 8008222:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008226:	f000 f94b 	bl	80084c0 <_lseek_r>
 800822a:	1c43      	adds	r3, r0, #1
 800822c:	89a3      	ldrh	r3, [r4, #12]
 800822e:	bf15      	itete	ne
 8008230:	6560      	strne	r0, [r4, #84]	@ 0x54
 8008232:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8008236:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800823a:	81a3      	strheq	r3, [r4, #12]
 800823c:	bf18      	it	ne
 800823e:	81a3      	strhne	r3, [r4, #12]
 8008240:	bd10      	pop	{r4, pc}

08008242 <__sclose>:
 8008242:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008246:	f000 b92b 	b.w	80084a0 <_close_r>

0800824a <__swbuf_r>:
 800824a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800824c:	460e      	mov	r6, r1
 800824e:	4614      	mov	r4, r2
 8008250:	4605      	mov	r5, r0
 8008252:	b118      	cbz	r0, 800825c <__swbuf_r+0x12>
 8008254:	6a03      	ldr	r3, [r0, #32]
 8008256:	b90b      	cbnz	r3, 800825c <__swbuf_r+0x12>
 8008258:	f7ff ff0e 	bl	8008078 <__sinit>
 800825c:	69a3      	ldr	r3, [r4, #24]
 800825e:	60a3      	str	r3, [r4, #8]
 8008260:	89a3      	ldrh	r3, [r4, #12]
 8008262:	071a      	lsls	r2, r3, #28
 8008264:	d501      	bpl.n	800826a <__swbuf_r+0x20>
 8008266:	6923      	ldr	r3, [r4, #16]
 8008268:	b943      	cbnz	r3, 800827c <__swbuf_r+0x32>
 800826a:	4621      	mov	r1, r4
 800826c:	4628      	mov	r0, r5
 800826e:	f000 f82b 	bl	80082c8 <__swsetup_r>
 8008272:	b118      	cbz	r0, 800827c <__swbuf_r+0x32>
 8008274:	f04f 37ff 	mov.w	r7, #4294967295
 8008278:	4638      	mov	r0, r7
 800827a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800827c:	6823      	ldr	r3, [r4, #0]
 800827e:	6922      	ldr	r2, [r4, #16]
 8008280:	b2f6      	uxtb	r6, r6
 8008282:	1a98      	subs	r0, r3, r2
 8008284:	6963      	ldr	r3, [r4, #20]
 8008286:	4637      	mov	r7, r6
 8008288:	4283      	cmp	r3, r0
 800828a:	dc05      	bgt.n	8008298 <__swbuf_r+0x4e>
 800828c:	4621      	mov	r1, r4
 800828e:	4628      	mov	r0, r5
 8008290:	f002 fa20 	bl	800a6d4 <_fflush_r>
 8008294:	2800      	cmp	r0, #0
 8008296:	d1ed      	bne.n	8008274 <__swbuf_r+0x2a>
 8008298:	68a3      	ldr	r3, [r4, #8]
 800829a:	3b01      	subs	r3, #1
 800829c:	60a3      	str	r3, [r4, #8]
 800829e:	6823      	ldr	r3, [r4, #0]
 80082a0:	1c5a      	adds	r2, r3, #1
 80082a2:	6022      	str	r2, [r4, #0]
 80082a4:	701e      	strb	r6, [r3, #0]
 80082a6:	6962      	ldr	r2, [r4, #20]
 80082a8:	1c43      	adds	r3, r0, #1
 80082aa:	429a      	cmp	r2, r3
 80082ac:	d004      	beq.n	80082b8 <__swbuf_r+0x6e>
 80082ae:	89a3      	ldrh	r3, [r4, #12]
 80082b0:	07db      	lsls	r3, r3, #31
 80082b2:	d5e1      	bpl.n	8008278 <__swbuf_r+0x2e>
 80082b4:	2e0a      	cmp	r6, #10
 80082b6:	d1df      	bne.n	8008278 <__swbuf_r+0x2e>
 80082b8:	4621      	mov	r1, r4
 80082ba:	4628      	mov	r0, r5
 80082bc:	f002 fa0a 	bl	800a6d4 <_fflush_r>
 80082c0:	2800      	cmp	r0, #0
 80082c2:	d0d9      	beq.n	8008278 <__swbuf_r+0x2e>
 80082c4:	e7d6      	b.n	8008274 <__swbuf_r+0x2a>
	...

080082c8 <__swsetup_r>:
 80082c8:	b538      	push	{r3, r4, r5, lr}
 80082ca:	4b29      	ldr	r3, [pc, #164]	@ (8008370 <__swsetup_r+0xa8>)
 80082cc:	4605      	mov	r5, r0
 80082ce:	6818      	ldr	r0, [r3, #0]
 80082d0:	460c      	mov	r4, r1
 80082d2:	b118      	cbz	r0, 80082dc <__swsetup_r+0x14>
 80082d4:	6a03      	ldr	r3, [r0, #32]
 80082d6:	b90b      	cbnz	r3, 80082dc <__swsetup_r+0x14>
 80082d8:	f7ff fece 	bl	8008078 <__sinit>
 80082dc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80082e0:	0719      	lsls	r1, r3, #28
 80082e2:	d422      	bmi.n	800832a <__swsetup_r+0x62>
 80082e4:	06da      	lsls	r2, r3, #27
 80082e6:	d407      	bmi.n	80082f8 <__swsetup_r+0x30>
 80082e8:	2209      	movs	r2, #9
 80082ea:	602a      	str	r2, [r5, #0]
 80082ec:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80082f0:	f04f 30ff 	mov.w	r0, #4294967295
 80082f4:	81a3      	strh	r3, [r4, #12]
 80082f6:	e033      	b.n	8008360 <__swsetup_r+0x98>
 80082f8:	0758      	lsls	r0, r3, #29
 80082fa:	d512      	bpl.n	8008322 <__swsetup_r+0x5a>
 80082fc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80082fe:	b141      	cbz	r1, 8008312 <__swsetup_r+0x4a>
 8008300:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8008304:	4299      	cmp	r1, r3
 8008306:	d002      	beq.n	800830e <__swsetup_r+0x46>
 8008308:	4628      	mov	r0, r5
 800830a:	f000 ffdd 	bl	80092c8 <_free_r>
 800830e:	2300      	movs	r3, #0
 8008310:	6363      	str	r3, [r4, #52]	@ 0x34
 8008312:	89a3      	ldrh	r3, [r4, #12]
 8008314:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8008318:	81a3      	strh	r3, [r4, #12]
 800831a:	2300      	movs	r3, #0
 800831c:	6063      	str	r3, [r4, #4]
 800831e:	6923      	ldr	r3, [r4, #16]
 8008320:	6023      	str	r3, [r4, #0]
 8008322:	89a3      	ldrh	r3, [r4, #12]
 8008324:	f043 0308 	orr.w	r3, r3, #8
 8008328:	81a3      	strh	r3, [r4, #12]
 800832a:	6923      	ldr	r3, [r4, #16]
 800832c:	b94b      	cbnz	r3, 8008342 <__swsetup_r+0x7a>
 800832e:	89a3      	ldrh	r3, [r4, #12]
 8008330:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8008334:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8008338:	d003      	beq.n	8008342 <__swsetup_r+0x7a>
 800833a:	4621      	mov	r1, r4
 800833c:	4628      	mov	r0, r5
 800833e:	f002 fa28 	bl	800a792 <__smakebuf_r>
 8008342:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008346:	f013 0201 	ands.w	r2, r3, #1
 800834a:	d00a      	beq.n	8008362 <__swsetup_r+0x9a>
 800834c:	2200      	movs	r2, #0
 800834e:	60a2      	str	r2, [r4, #8]
 8008350:	6962      	ldr	r2, [r4, #20]
 8008352:	4252      	negs	r2, r2
 8008354:	61a2      	str	r2, [r4, #24]
 8008356:	6922      	ldr	r2, [r4, #16]
 8008358:	b942      	cbnz	r2, 800836c <__swsetup_r+0xa4>
 800835a:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800835e:	d1c5      	bne.n	80082ec <__swsetup_r+0x24>
 8008360:	bd38      	pop	{r3, r4, r5, pc}
 8008362:	0799      	lsls	r1, r3, #30
 8008364:	bf58      	it	pl
 8008366:	6962      	ldrpl	r2, [r4, #20]
 8008368:	60a2      	str	r2, [r4, #8]
 800836a:	e7f4      	b.n	8008356 <__swsetup_r+0x8e>
 800836c:	2000      	movs	r0, #0
 800836e:	e7f7      	b.n	8008360 <__swsetup_r+0x98>
 8008370:	200001a0 	.word	0x200001a0

08008374 <memset>:
 8008374:	4603      	mov	r3, r0
 8008376:	4402      	add	r2, r0
 8008378:	4293      	cmp	r3, r2
 800837a:	d100      	bne.n	800837e <memset+0xa>
 800837c:	4770      	bx	lr
 800837e:	f803 1b01 	strb.w	r1, [r3], #1
 8008382:	e7f9      	b.n	8008378 <memset+0x4>

08008384 <strdup>:
 8008384:	4b02      	ldr	r3, [pc, #8]	@ (8008390 <strdup+0xc>)
 8008386:	4601      	mov	r1, r0
 8008388:	6818      	ldr	r0, [r3, #0]
 800838a:	f000 b803 	b.w	8008394 <_strdup_r>
 800838e:	bf00      	nop
 8008390:	200001a0 	.word	0x200001a0

08008394 <_strdup_r>:
 8008394:	b570      	push	{r4, r5, r6, lr}
 8008396:	4604      	mov	r4, r0
 8008398:	4608      	mov	r0, r1
 800839a:	460d      	mov	r5, r1
 800839c:	f7f7 fee2 	bl	8000164 <strlen>
 80083a0:	1c46      	adds	r6, r0, #1
 80083a2:	4631      	mov	r1, r6
 80083a4:	4620      	mov	r0, r4
 80083a6:	f7fe faed 	bl	8006984 <_malloc_r>
 80083aa:	4604      	mov	r4, r0
 80083ac:	b118      	cbz	r0, 80083b6 <_strdup_r+0x22>
 80083ae:	4632      	mov	r2, r6
 80083b0:	4629      	mov	r1, r5
 80083b2:	f000 f906 	bl	80085c2 <memcpy>
 80083b6:	4620      	mov	r0, r4
 80083b8:	bd70      	pop	{r4, r5, r6, pc}

080083ba <strncmp>:
 80083ba:	b510      	push	{r4, lr}
 80083bc:	b16a      	cbz	r2, 80083da <strncmp+0x20>
 80083be:	3901      	subs	r1, #1
 80083c0:	1884      	adds	r4, r0, r2
 80083c2:	f810 2b01 	ldrb.w	r2, [r0], #1
 80083c6:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 80083ca:	429a      	cmp	r2, r3
 80083cc:	d103      	bne.n	80083d6 <strncmp+0x1c>
 80083ce:	42a0      	cmp	r0, r4
 80083d0:	d001      	beq.n	80083d6 <strncmp+0x1c>
 80083d2:	2a00      	cmp	r2, #0
 80083d4:	d1f5      	bne.n	80083c2 <strncmp+0x8>
 80083d6:	1ad0      	subs	r0, r2, r3
 80083d8:	bd10      	pop	{r4, pc}
 80083da:	4610      	mov	r0, r2
 80083dc:	e7fc      	b.n	80083d8 <strncmp+0x1e>
	...

080083e0 <strtok>:
 80083e0:	4b16      	ldr	r3, [pc, #88]	@ (800843c <strtok+0x5c>)
 80083e2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80083e6:	681f      	ldr	r7, [r3, #0]
 80083e8:	4605      	mov	r5, r0
 80083ea:	6c7c      	ldr	r4, [r7, #68]	@ 0x44
 80083ec:	460e      	mov	r6, r1
 80083ee:	b9ec      	cbnz	r4, 800842c <strtok+0x4c>
 80083f0:	2050      	movs	r0, #80	@ 0x50
 80083f2:	f7fe fa95 	bl	8006920 <malloc>
 80083f6:	4602      	mov	r2, r0
 80083f8:	6478      	str	r0, [r7, #68]	@ 0x44
 80083fa:	b920      	cbnz	r0, 8008406 <strtok+0x26>
 80083fc:	215b      	movs	r1, #91	@ 0x5b
 80083fe:	4b10      	ldr	r3, [pc, #64]	@ (8008440 <strtok+0x60>)
 8008400:	4810      	ldr	r0, [pc, #64]	@ (8008444 <strtok+0x64>)
 8008402:	f000 f8f3 	bl	80085ec <__assert_func>
 8008406:	e9c0 4400 	strd	r4, r4, [r0]
 800840a:	e9c0 4402 	strd	r4, r4, [r0, #8]
 800840e:	e9c0 4404 	strd	r4, r4, [r0, #16]
 8008412:	e9c0 440a 	strd	r4, r4, [r0, #40]	@ 0x28
 8008416:	e9c0 440c 	strd	r4, r4, [r0, #48]	@ 0x30
 800841a:	e9c0 440e 	strd	r4, r4, [r0, #56]	@ 0x38
 800841e:	e9c0 4410 	strd	r4, r4, [r0, #64]	@ 0x40
 8008422:	e9c0 4412 	strd	r4, r4, [r0, #72]	@ 0x48
 8008426:	6184      	str	r4, [r0, #24]
 8008428:	7704      	strb	r4, [r0, #28]
 800842a:	6244      	str	r4, [r0, #36]	@ 0x24
 800842c:	4631      	mov	r1, r6
 800842e:	4628      	mov	r0, r5
 8008430:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8008432:	2301      	movs	r3, #1
 8008434:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8008438:	f000 b806 	b.w	8008448 <__strtok_r>
 800843c:	200001a0 	.word	0x200001a0
 8008440:	0800bf8c 	.word	0x0800bf8c
 8008444:	0800bfa3 	.word	0x0800bfa3

08008448 <__strtok_r>:
 8008448:	b5f0      	push	{r4, r5, r6, r7, lr}
 800844a:	4604      	mov	r4, r0
 800844c:	b908      	cbnz	r0, 8008452 <__strtok_r+0xa>
 800844e:	6814      	ldr	r4, [r2, #0]
 8008450:	b144      	cbz	r4, 8008464 <__strtok_r+0x1c>
 8008452:	460f      	mov	r7, r1
 8008454:	4620      	mov	r0, r4
 8008456:	f814 5b01 	ldrb.w	r5, [r4], #1
 800845a:	f817 6b01 	ldrb.w	r6, [r7], #1
 800845e:	b91e      	cbnz	r6, 8008468 <__strtok_r+0x20>
 8008460:	b965      	cbnz	r5, 800847c <__strtok_r+0x34>
 8008462:	6015      	str	r5, [r2, #0]
 8008464:	2000      	movs	r0, #0
 8008466:	e005      	b.n	8008474 <__strtok_r+0x2c>
 8008468:	42b5      	cmp	r5, r6
 800846a:	d1f6      	bne.n	800845a <__strtok_r+0x12>
 800846c:	2b00      	cmp	r3, #0
 800846e:	d1f0      	bne.n	8008452 <__strtok_r+0xa>
 8008470:	6014      	str	r4, [r2, #0]
 8008472:	7003      	strb	r3, [r0, #0]
 8008474:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008476:	461c      	mov	r4, r3
 8008478:	e00c      	b.n	8008494 <__strtok_r+0x4c>
 800847a:	b915      	cbnz	r5, 8008482 <__strtok_r+0x3a>
 800847c:	460e      	mov	r6, r1
 800847e:	f814 3b01 	ldrb.w	r3, [r4], #1
 8008482:	f816 5b01 	ldrb.w	r5, [r6], #1
 8008486:	42ab      	cmp	r3, r5
 8008488:	d1f7      	bne.n	800847a <__strtok_r+0x32>
 800848a:	2b00      	cmp	r3, #0
 800848c:	d0f3      	beq.n	8008476 <__strtok_r+0x2e>
 800848e:	2300      	movs	r3, #0
 8008490:	f804 3c01 	strb.w	r3, [r4, #-1]
 8008494:	6014      	str	r4, [r2, #0]
 8008496:	e7ed      	b.n	8008474 <__strtok_r+0x2c>

08008498 <_localeconv_r>:
 8008498:	4800      	ldr	r0, [pc, #0]	@ (800849c <_localeconv_r+0x4>)
 800849a:	4770      	bx	lr
 800849c:	20000124 	.word	0x20000124

080084a0 <_close_r>:
 80084a0:	b538      	push	{r3, r4, r5, lr}
 80084a2:	2300      	movs	r3, #0
 80084a4:	4d05      	ldr	r5, [pc, #20]	@ (80084bc <_close_r+0x1c>)
 80084a6:	4604      	mov	r4, r0
 80084a8:	4608      	mov	r0, r1
 80084aa:	602b      	str	r3, [r5, #0]
 80084ac:	f7fb f876 	bl	800359c <_close>
 80084b0:	1c43      	adds	r3, r0, #1
 80084b2:	d102      	bne.n	80084ba <_close_r+0x1a>
 80084b4:	682b      	ldr	r3, [r5, #0]
 80084b6:	b103      	cbz	r3, 80084ba <_close_r+0x1a>
 80084b8:	6023      	str	r3, [r4, #0]
 80084ba:	bd38      	pop	{r3, r4, r5, pc}
 80084bc:	2000066c 	.word	0x2000066c

080084c0 <_lseek_r>:
 80084c0:	b538      	push	{r3, r4, r5, lr}
 80084c2:	4604      	mov	r4, r0
 80084c4:	4608      	mov	r0, r1
 80084c6:	4611      	mov	r1, r2
 80084c8:	2200      	movs	r2, #0
 80084ca:	4d05      	ldr	r5, [pc, #20]	@ (80084e0 <_lseek_r+0x20>)
 80084cc:	602a      	str	r2, [r5, #0]
 80084ce:	461a      	mov	r2, r3
 80084d0:	f7fb f86e 	bl	80035b0 <_lseek>
 80084d4:	1c43      	adds	r3, r0, #1
 80084d6:	d102      	bne.n	80084de <_lseek_r+0x1e>
 80084d8:	682b      	ldr	r3, [r5, #0]
 80084da:	b103      	cbz	r3, 80084de <_lseek_r+0x1e>
 80084dc:	6023      	str	r3, [r4, #0]
 80084de:	bd38      	pop	{r3, r4, r5, pc}
 80084e0:	2000066c 	.word	0x2000066c

080084e4 <_read_r>:
 80084e4:	b538      	push	{r3, r4, r5, lr}
 80084e6:	4604      	mov	r4, r0
 80084e8:	4608      	mov	r0, r1
 80084ea:	4611      	mov	r1, r2
 80084ec:	2200      	movs	r2, #0
 80084ee:	4d05      	ldr	r5, [pc, #20]	@ (8008504 <_read_r+0x20>)
 80084f0:	602a      	str	r2, [r5, #0]
 80084f2:	461a      	mov	r2, r3
 80084f4:	f7fb f842 	bl	800357c <_read>
 80084f8:	1c43      	adds	r3, r0, #1
 80084fa:	d102      	bne.n	8008502 <_read_r+0x1e>
 80084fc:	682b      	ldr	r3, [r5, #0]
 80084fe:	b103      	cbz	r3, 8008502 <_read_r+0x1e>
 8008500:	6023      	str	r3, [r4, #0]
 8008502:	bd38      	pop	{r3, r4, r5, pc}
 8008504:	2000066c 	.word	0x2000066c

08008508 <_sbrk_r>:
 8008508:	b538      	push	{r3, r4, r5, lr}
 800850a:	2300      	movs	r3, #0
 800850c:	4d05      	ldr	r5, [pc, #20]	@ (8008524 <_sbrk_r+0x1c>)
 800850e:	4604      	mov	r4, r0
 8008510:	4608      	mov	r0, r1
 8008512:	602b      	str	r3, [r5, #0]
 8008514:	f7fb f84e 	bl	80035b4 <_sbrk>
 8008518:	1c43      	adds	r3, r0, #1
 800851a:	d102      	bne.n	8008522 <_sbrk_r+0x1a>
 800851c:	682b      	ldr	r3, [r5, #0]
 800851e:	b103      	cbz	r3, 8008522 <_sbrk_r+0x1a>
 8008520:	6023      	str	r3, [r4, #0]
 8008522:	bd38      	pop	{r3, r4, r5, pc}
 8008524:	2000066c 	.word	0x2000066c

08008528 <_write_r>:
 8008528:	b538      	push	{r3, r4, r5, lr}
 800852a:	4604      	mov	r4, r0
 800852c:	4608      	mov	r0, r1
 800852e:	4611      	mov	r1, r2
 8008530:	2200      	movs	r2, #0
 8008532:	4d05      	ldr	r5, [pc, #20]	@ (8008548 <_write_r+0x20>)
 8008534:	602a      	str	r2, [r5, #0]
 8008536:	461a      	mov	r2, r3
 8008538:	f7fa fc46 	bl	8002dc8 <_write>
 800853c:	1c43      	adds	r3, r0, #1
 800853e:	d102      	bne.n	8008546 <_write_r+0x1e>
 8008540:	682b      	ldr	r3, [r5, #0]
 8008542:	b103      	cbz	r3, 8008546 <_write_r+0x1e>
 8008544:	6023      	str	r3, [r4, #0]
 8008546:	bd38      	pop	{r3, r4, r5, pc}
 8008548:	2000066c 	.word	0x2000066c

0800854c <__errno>:
 800854c:	4b01      	ldr	r3, [pc, #4]	@ (8008554 <__errno+0x8>)
 800854e:	6818      	ldr	r0, [r3, #0]
 8008550:	4770      	bx	lr
 8008552:	bf00      	nop
 8008554:	200001a0 	.word	0x200001a0

08008558 <__libc_init_array>:
 8008558:	b570      	push	{r4, r5, r6, lr}
 800855a:	2600      	movs	r6, #0
 800855c:	4d0c      	ldr	r5, [pc, #48]	@ (8008590 <__libc_init_array+0x38>)
 800855e:	4c0d      	ldr	r4, [pc, #52]	@ (8008594 <__libc_init_array+0x3c>)
 8008560:	1b64      	subs	r4, r4, r5
 8008562:	10a4      	asrs	r4, r4, #2
 8008564:	42a6      	cmp	r6, r4
 8008566:	d109      	bne.n	800857c <__libc_init_array+0x24>
 8008568:	f003 fa94 	bl	800ba94 <_init>
 800856c:	2600      	movs	r6, #0
 800856e:	4d0a      	ldr	r5, [pc, #40]	@ (8008598 <__libc_init_array+0x40>)
 8008570:	4c0a      	ldr	r4, [pc, #40]	@ (800859c <__libc_init_array+0x44>)
 8008572:	1b64      	subs	r4, r4, r5
 8008574:	10a4      	asrs	r4, r4, #2
 8008576:	42a6      	cmp	r6, r4
 8008578:	d105      	bne.n	8008586 <__libc_init_array+0x2e>
 800857a:	bd70      	pop	{r4, r5, r6, pc}
 800857c:	f855 3b04 	ldr.w	r3, [r5], #4
 8008580:	4798      	blx	r3
 8008582:	3601      	adds	r6, #1
 8008584:	e7ee      	b.n	8008564 <__libc_init_array+0xc>
 8008586:	f855 3b04 	ldr.w	r3, [r5], #4
 800858a:	4798      	blx	r3
 800858c:	3601      	adds	r6, #1
 800858e:	e7f2      	b.n	8008576 <__libc_init_array+0x1e>
 8008590:	0800c400 	.word	0x0800c400
 8008594:	0800c400 	.word	0x0800c400
 8008598:	0800c400 	.word	0x0800c400
 800859c:	0800c404 	.word	0x0800c404

080085a0 <__retarget_lock_init_recursive>:
 80085a0:	4770      	bx	lr

080085a2 <__retarget_lock_acquire_recursive>:
 80085a2:	4770      	bx	lr

080085a4 <__retarget_lock_release_recursive>:
 80085a4:	4770      	bx	lr

080085a6 <memchr>:
 80085a6:	4603      	mov	r3, r0
 80085a8:	b510      	push	{r4, lr}
 80085aa:	b2c9      	uxtb	r1, r1
 80085ac:	4402      	add	r2, r0
 80085ae:	4293      	cmp	r3, r2
 80085b0:	4618      	mov	r0, r3
 80085b2:	d101      	bne.n	80085b8 <memchr+0x12>
 80085b4:	2000      	movs	r0, #0
 80085b6:	e003      	b.n	80085c0 <memchr+0x1a>
 80085b8:	7804      	ldrb	r4, [r0, #0]
 80085ba:	3301      	adds	r3, #1
 80085bc:	428c      	cmp	r4, r1
 80085be:	d1f6      	bne.n	80085ae <memchr+0x8>
 80085c0:	bd10      	pop	{r4, pc}

080085c2 <memcpy>:
 80085c2:	440a      	add	r2, r1
 80085c4:	4291      	cmp	r1, r2
 80085c6:	f100 33ff 	add.w	r3, r0, #4294967295
 80085ca:	d100      	bne.n	80085ce <memcpy+0xc>
 80085cc:	4770      	bx	lr
 80085ce:	b510      	push	{r4, lr}
 80085d0:	f811 4b01 	ldrb.w	r4, [r1], #1
 80085d4:	4291      	cmp	r1, r2
 80085d6:	f803 4f01 	strb.w	r4, [r3, #1]!
 80085da:	d1f9      	bne.n	80085d0 <memcpy+0xe>
 80085dc:	bd10      	pop	{r4, pc}
	...

080085e0 <nan>:
 80085e0:	2000      	movs	r0, #0
 80085e2:	4901      	ldr	r1, [pc, #4]	@ (80085e8 <nan+0x8>)
 80085e4:	4770      	bx	lr
 80085e6:	bf00      	nop
 80085e8:	7ff80000 	.word	0x7ff80000

080085ec <__assert_func>:
 80085ec:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80085ee:	4614      	mov	r4, r2
 80085f0:	461a      	mov	r2, r3
 80085f2:	4b09      	ldr	r3, [pc, #36]	@ (8008618 <__assert_func+0x2c>)
 80085f4:	4605      	mov	r5, r0
 80085f6:	681b      	ldr	r3, [r3, #0]
 80085f8:	68d8      	ldr	r0, [r3, #12]
 80085fa:	b954      	cbnz	r4, 8008612 <__assert_func+0x26>
 80085fc:	4b07      	ldr	r3, [pc, #28]	@ (800861c <__assert_func+0x30>)
 80085fe:	461c      	mov	r4, r3
 8008600:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8008604:	9100      	str	r1, [sp, #0]
 8008606:	462b      	mov	r3, r5
 8008608:	4905      	ldr	r1, [pc, #20]	@ (8008620 <__assert_func+0x34>)
 800860a:	f002 f88b 	bl	800a724 <fiprintf>
 800860e:	f002 f91f 	bl	800a850 <abort>
 8008612:	4b04      	ldr	r3, [pc, #16]	@ (8008624 <__assert_func+0x38>)
 8008614:	e7f4      	b.n	8008600 <__assert_func+0x14>
 8008616:	bf00      	nop
 8008618:	200001a0 	.word	0x200001a0
 800861c:	0800c040 	.word	0x0800c040
 8008620:	0800c012 	.word	0x0800c012
 8008624:	0800c005 	.word	0x0800c005

08008628 <quorem>:
 8008628:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800862c:	6903      	ldr	r3, [r0, #16]
 800862e:	690c      	ldr	r4, [r1, #16]
 8008630:	4607      	mov	r7, r0
 8008632:	42a3      	cmp	r3, r4
 8008634:	db7e      	blt.n	8008734 <quorem+0x10c>
 8008636:	3c01      	subs	r4, #1
 8008638:	00a3      	lsls	r3, r4, #2
 800863a:	f100 0514 	add.w	r5, r0, #20
 800863e:	f101 0814 	add.w	r8, r1, #20
 8008642:	9300      	str	r3, [sp, #0]
 8008644:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8008648:	9301      	str	r3, [sp, #4]
 800864a:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800864e:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8008652:	3301      	adds	r3, #1
 8008654:	429a      	cmp	r2, r3
 8008656:	fbb2 f6f3 	udiv	r6, r2, r3
 800865a:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800865e:	d32e      	bcc.n	80086be <quorem+0x96>
 8008660:	f04f 0a00 	mov.w	sl, #0
 8008664:	46c4      	mov	ip, r8
 8008666:	46ae      	mov	lr, r5
 8008668:	46d3      	mov	fp, sl
 800866a:	f85c 3b04 	ldr.w	r3, [ip], #4
 800866e:	b298      	uxth	r0, r3
 8008670:	fb06 a000 	mla	r0, r6, r0, sl
 8008674:	0c1b      	lsrs	r3, r3, #16
 8008676:	0c02      	lsrs	r2, r0, #16
 8008678:	fb06 2303 	mla	r3, r6, r3, r2
 800867c:	f8de 2000 	ldr.w	r2, [lr]
 8008680:	b280      	uxth	r0, r0
 8008682:	b292      	uxth	r2, r2
 8008684:	1a12      	subs	r2, r2, r0
 8008686:	445a      	add	r2, fp
 8008688:	f8de 0000 	ldr.w	r0, [lr]
 800868c:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8008690:	b29b      	uxth	r3, r3
 8008692:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8008696:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 800869a:	b292      	uxth	r2, r2
 800869c:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 80086a0:	45e1      	cmp	r9, ip
 80086a2:	ea4f 4b23 	mov.w	fp, r3, asr #16
 80086a6:	f84e 2b04 	str.w	r2, [lr], #4
 80086aa:	d2de      	bcs.n	800866a <quorem+0x42>
 80086ac:	9b00      	ldr	r3, [sp, #0]
 80086ae:	58eb      	ldr	r3, [r5, r3]
 80086b0:	b92b      	cbnz	r3, 80086be <quorem+0x96>
 80086b2:	9b01      	ldr	r3, [sp, #4]
 80086b4:	3b04      	subs	r3, #4
 80086b6:	429d      	cmp	r5, r3
 80086b8:	461a      	mov	r2, r3
 80086ba:	d32f      	bcc.n	800871c <quorem+0xf4>
 80086bc:	613c      	str	r4, [r7, #16]
 80086be:	4638      	mov	r0, r7
 80086c0:	f001 fc58 	bl	8009f74 <__mcmp>
 80086c4:	2800      	cmp	r0, #0
 80086c6:	db25      	blt.n	8008714 <quorem+0xec>
 80086c8:	4629      	mov	r1, r5
 80086ca:	2000      	movs	r0, #0
 80086cc:	f858 2b04 	ldr.w	r2, [r8], #4
 80086d0:	f8d1 c000 	ldr.w	ip, [r1]
 80086d4:	fa1f fe82 	uxth.w	lr, r2
 80086d8:	fa1f f38c 	uxth.w	r3, ip
 80086dc:	eba3 030e 	sub.w	r3, r3, lr
 80086e0:	4403      	add	r3, r0
 80086e2:	0c12      	lsrs	r2, r2, #16
 80086e4:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 80086e8:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 80086ec:	b29b      	uxth	r3, r3
 80086ee:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80086f2:	45c1      	cmp	r9, r8
 80086f4:	ea4f 4022 	mov.w	r0, r2, asr #16
 80086f8:	f841 3b04 	str.w	r3, [r1], #4
 80086fc:	d2e6      	bcs.n	80086cc <quorem+0xa4>
 80086fe:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8008702:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8008706:	b922      	cbnz	r2, 8008712 <quorem+0xea>
 8008708:	3b04      	subs	r3, #4
 800870a:	429d      	cmp	r5, r3
 800870c:	461a      	mov	r2, r3
 800870e:	d30b      	bcc.n	8008728 <quorem+0x100>
 8008710:	613c      	str	r4, [r7, #16]
 8008712:	3601      	adds	r6, #1
 8008714:	4630      	mov	r0, r6
 8008716:	b003      	add	sp, #12
 8008718:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800871c:	6812      	ldr	r2, [r2, #0]
 800871e:	3b04      	subs	r3, #4
 8008720:	2a00      	cmp	r2, #0
 8008722:	d1cb      	bne.n	80086bc <quorem+0x94>
 8008724:	3c01      	subs	r4, #1
 8008726:	e7c6      	b.n	80086b6 <quorem+0x8e>
 8008728:	6812      	ldr	r2, [r2, #0]
 800872a:	3b04      	subs	r3, #4
 800872c:	2a00      	cmp	r2, #0
 800872e:	d1ef      	bne.n	8008710 <quorem+0xe8>
 8008730:	3c01      	subs	r4, #1
 8008732:	e7ea      	b.n	800870a <quorem+0xe2>
 8008734:	2000      	movs	r0, #0
 8008736:	e7ee      	b.n	8008716 <quorem+0xee>

08008738 <_dtoa_r>:
 8008738:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800873c:	4614      	mov	r4, r2
 800873e:	461d      	mov	r5, r3
 8008740:	69c7      	ldr	r7, [r0, #28]
 8008742:	b097      	sub	sp, #92	@ 0x5c
 8008744:	4683      	mov	fp, r0
 8008746:	e9cd 4502 	strd	r4, r5, [sp, #8]
 800874a:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 800874c:	b97f      	cbnz	r7, 800876e <_dtoa_r+0x36>
 800874e:	2010      	movs	r0, #16
 8008750:	f7fe f8e6 	bl	8006920 <malloc>
 8008754:	4602      	mov	r2, r0
 8008756:	f8cb 001c 	str.w	r0, [fp, #28]
 800875a:	b920      	cbnz	r0, 8008766 <_dtoa_r+0x2e>
 800875c:	21ef      	movs	r1, #239	@ 0xef
 800875e:	4ba8      	ldr	r3, [pc, #672]	@ (8008a00 <_dtoa_r+0x2c8>)
 8008760:	48a8      	ldr	r0, [pc, #672]	@ (8008a04 <_dtoa_r+0x2cc>)
 8008762:	f7ff ff43 	bl	80085ec <__assert_func>
 8008766:	e9c0 7701 	strd	r7, r7, [r0, #4]
 800876a:	6007      	str	r7, [r0, #0]
 800876c:	60c7      	str	r7, [r0, #12]
 800876e:	f8db 301c 	ldr.w	r3, [fp, #28]
 8008772:	6819      	ldr	r1, [r3, #0]
 8008774:	b159      	cbz	r1, 800878e <_dtoa_r+0x56>
 8008776:	685a      	ldr	r2, [r3, #4]
 8008778:	2301      	movs	r3, #1
 800877a:	4093      	lsls	r3, r2
 800877c:	604a      	str	r2, [r1, #4]
 800877e:	608b      	str	r3, [r1, #8]
 8008780:	4658      	mov	r0, fp
 8008782:	f001 f975 	bl	8009a70 <_Bfree>
 8008786:	2200      	movs	r2, #0
 8008788:	f8db 301c 	ldr.w	r3, [fp, #28]
 800878c:	601a      	str	r2, [r3, #0]
 800878e:	1e2b      	subs	r3, r5, #0
 8008790:	bfaf      	iteee	ge
 8008792:	2300      	movge	r3, #0
 8008794:	2201      	movlt	r2, #1
 8008796:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 800879a:	9303      	strlt	r3, [sp, #12]
 800879c:	bfa8      	it	ge
 800879e:	6033      	strge	r3, [r6, #0]
 80087a0:	f8dd 800c 	ldr.w	r8, [sp, #12]
 80087a4:	4b98      	ldr	r3, [pc, #608]	@ (8008a08 <_dtoa_r+0x2d0>)
 80087a6:	bfb8      	it	lt
 80087a8:	6032      	strlt	r2, [r6, #0]
 80087aa:	ea33 0308 	bics.w	r3, r3, r8
 80087ae:	d112      	bne.n	80087d6 <_dtoa_r+0x9e>
 80087b0:	f242 730f 	movw	r3, #9999	@ 0x270f
 80087b4:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80087b6:	6013      	str	r3, [r2, #0]
 80087b8:	f3c8 0313 	ubfx	r3, r8, #0, #20
 80087bc:	4323      	orrs	r3, r4
 80087be:	f000 8550 	beq.w	8009262 <_dtoa_r+0xb2a>
 80087c2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80087c4:	f8df a244 	ldr.w	sl, [pc, #580]	@ 8008a0c <_dtoa_r+0x2d4>
 80087c8:	2b00      	cmp	r3, #0
 80087ca:	f000 8552 	beq.w	8009272 <_dtoa_r+0xb3a>
 80087ce:	f10a 0303 	add.w	r3, sl, #3
 80087d2:	f000 bd4c 	b.w	800926e <_dtoa_r+0xb36>
 80087d6:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80087da:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 80087de:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80087e2:	2200      	movs	r2, #0
 80087e4:	2300      	movs	r3, #0
 80087e6:	f7f8 f8e9 	bl	80009bc <__aeabi_dcmpeq>
 80087ea:	4607      	mov	r7, r0
 80087ec:	b158      	cbz	r0, 8008806 <_dtoa_r+0xce>
 80087ee:	2301      	movs	r3, #1
 80087f0:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80087f2:	6013      	str	r3, [r2, #0]
 80087f4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80087f6:	b113      	cbz	r3, 80087fe <_dtoa_r+0xc6>
 80087f8:	4b85      	ldr	r3, [pc, #532]	@ (8008a10 <_dtoa_r+0x2d8>)
 80087fa:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 80087fc:	6013      	str	r3, [r2, #0]
 80087fe:	f8df a214 	ldr.w	sl, [pc, #532]	@ 8008a14 <_dtoa_r+0x2dc>
 8008802:	f000 bd36 	b.w	8009272 <_dtoa_r+0xb3a>
 8008806:	ab14      	add	r3, sp, #80	@ 0x50
 8008808:	9301      	str	r3, [sp, #4]
 800880a:	ab15      	add	r3, sp, #84	@ 0x54
 800880c:	9300      	str	r3, [sp, #0]
 800880e:	4658      	mov	r0, fp
 8008810:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 8008814:	f001 fcc6 	bl	800a1a4 <__d2b>
 8008818:	f3c8 560a 	ubfx	r6, r8, #20, #11
 800881c:	4681      	mov	r9, r0
 800881e:	2e00      	cmp	r6, #0
 8008820:	d077      	beq.n	8008912 <_dtoa_r+0x1da>
 8008822:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8008826:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8008828:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 800882c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8008830:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8008834:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8008838:	9712      	str	r7, [sp, #72]	@ 0x48
 800883a:	4619      	mov	r1, r3
 800883c:	2200      	movs	r2, #0
 800883e:	4b76      	ldr	r3, [pc, #472]	@ (8008a18 <_dtoa_r+0x2e0>)
 8008840:	f7f7 fc9c 	bl	800017c <__aeabi_dsub>
 8008844:	a368      	add	r3, pc, #416	@ (adr r3, 80089e8 <_dtoa_r+0x2b0>)
 8008846:	e9d3 2300 	ldrd	r2, r3, [r3]
 800884a:	f7f7 fe4f 	bl	80004ec <__aeabi_dmul>
 800884e:	a368      	add	r3, pc, #416	@ (adr r3, 80089f0 <_dtoa_r+0x2b8>)
 8008850:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008854:	f7f7 fc94 	bl	8000180 <__adddf3>
 8008858:	4604      	mov	r4, r0
 800885a:	4630      	mov	r0, r6
 800885c:	460d      	mov	r5, r1
 800885e:	f7f7 fddb 	bl	8000418 <__aeabi_i2d>
 8008862:	a365      	add	r3, pc, #404	@ (adr r3, 80089f8 <_dtoa_r+0x2c0>)
 8008864:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008868:	f7f7 fe40 	bl	80004ec <__aeabi_dmul>
 800886c:	4602      	mov	r2, r0
 800886e:	460b      	mov	r3, r1
 8008870:	4620      	mov	r0, r4
 8008872:	4629      	mov	r1, r5
 8008874:	f7f7 fc84 	bl	8000180 <__adddf3>
 8008878:	4604      	mov	r4, r0
 800887a:	460d      	mov	r5, r1
 800887c:	f7f8 f8e6 	bl	8000a4c <__aeabi_d2iz>
 8008880:	2200      	movs	r2, #0
 8008882:	4607      	mov	r7, r0
 8008884:	2300      	movs	r3, #0
 8008886:	4620      	mov	r0, r4
 8008888:	4629      	mov	r1, r5
 800888a:	f7f8 f8a1 	bl	80009d0 <__aeabi_dcmplt>
 800888e:	b140      	cbz	r0, 80088a2 <_dtoa_r+0x16a>
 8008890:	4638      	mov	r0, r7
 8008892:	f7f7 fdc1 	bl	8000418 <__aeabi_i2d>
 8008896:	4622      	mov	r2, r4
 8008898:	462b      	mov	r3, r5
 800889a:	f7f8 f88f 	bl	80009bc <__aeabi_dcmpeq>
 800889e:	b900      	cbnz	r0, 80088a2 <_dtoa_r+0x16a>
 80088a0:	3f01      	subs	r7, #1
 80088a2:	2f16      	cmp	r7, #22
 80088a4:	d853      	bhi.n	800894e <_dtoa_r+0x216>
 80088a6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80088aa:	4b5c      	ldr	r3, [pc, #368]	@ (8008a1c <_dtoa_r+0x2e4>)
 80088ac:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80088b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80088b4:	f7f8 f88c 	bl	80009d0 <__aeabi_dcmplt>
 80088b8:	2800      	cmp	r0, #0
 80088ba:	d04a      	beq.n	8008952 <_dtoa_r+0x21a>
 80088bc:	2300      	movs	r3, #0
 80088be:	3f01      	subs	r7, #1
 80088c0:	930f      	str	r3, [sp, #60]	@ 0x3c
 80088c2:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80088c4:	1b9b      	subs	r3, r3, r6
 80088c6:	1e5a      	subs	r2, r3, #1
 80088c8:	bf46      	itte	mi
 80088ca:	f1c3 0801 	rsbmi	r8, r3, #1
 80088ce:	2300      	movmi	r3, #0
 80088d0:	f04f 0800 	movpl.w	r8, #0
 80088d4:	9209      	str	r2, [sp, #36]	@ 0x24
 80088d6:	bf48      	it	mi
 80088d8:	9309      	strmi	r3, [sp, #36]	@ 0x24
 80088da:	2f00      	cmp	r7, #0
 80088dc:	db3b      	blt.n	8008956 <_dtoa_r+0x21e>
 80088de:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80088e0:	970e      	str	r7, [sp, #56]	@ 0x38
 80088e2:	443b      	add	r3, r7
 80088e4:	9309      	str	r3, [sp, #36]	@ 0x24
 80088e6:	2300      	movs	r3, #0
 80088e8:	930a      	str	r3, [sp, #40]	@ 0x28
 80088ea:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80088ec:	2b09      	cmp	r3, #9
 80088ee:	d866      	bhi.n	80089be <_dtoa_r+0x286>
 80088f0:	2b05      	cmp	r3, #5
 80088f2:	bfc4      	itt	gt
 80088f4:	3b04      	subgt	r3, #4
 80088f6:	9320      	strgt	r3, [sp, #128]	@ 0x80
 80088f8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80088fa:	bfc8      	it	gt
 80088fc:	2400      	movgt	r4, #0
 80088fe:	f1a3 0302 	sub.w	r3, r3, #2
 8008902:	bfd8      	it	le
 8008904:	2401      	movle	r4, #1
 8008906:	2b03      	cmp	r3, #3
 8008908:	d864      	bhi.n	80089d4 <_dtoa_r+0x29c>
 800890a:	e8df f003 	tbb	[pc, r3]
 800890e:	382b      	.short	0x382b
 8008910:	5636      	.short	0x5636
 8008912:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 8008916:	441e      	add	r6, r3
 8008918:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 800891c:	2b20      	cmp	r3, #32
 800891e:	bfc1      	itttt	gt
 8008920:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8008924:	fa08 f803 	lslgt.w	r8, r8, r3
 8008928:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 800892c:	fa24 f303 	lsrgt.w	r3, r4, r3
 8008930:	bfd6      	itet	le
 8008932:	f1c3 0320 	rsble	r3, r3, #32
 8008936:	ea48 0003 	orrgt.w	r0, r8, r3
 800893a:	fa04 f003 	lslle.w	r0, r4, r3
 800893e:	f7f7 fd5b 	bl	80003f8 <__aeabi_ui2d>
 8008942:	2201      	movs	r2, #1
 8008944:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8008948:	3e01      	subs	r6, #1
 800894a:	9212      	str	r2, [sp, #72]	@ 0x48
 800894c:	e775      	b.n	800883a <_dtoa_r+0x102>
 800894e:	2301      	movs	r3, #1
 8008950:	e7b6      	b.n	80088c0 <_dtoa_r+0x188>
 8008952:	900f      	str	r0, [sp, #60]	@ 0x3c
 8008954:	e7b5      	b.n	80088c2 <_dtoa_r+0x18a>
 8008956:	427b      	negs	r3, r7
 8008958:	930a      	str	r3, [sp, #40]	@ 0x28
 800895a:	2300      	movs	r3, #0
 800895c:	eba8 0807 	sub.w	r8, r8, r7
 8008960:	930e      	str	r3, [sp, #56]	@ 0x38
 8008962:	e7c2      	b.n	80088ea <_dtoa_r+0x1b2>
 8008964:	2300      	movs	r3, #0
 8008966:	930b      	str	r3, [sp, #44]	@ 0x2c
 8008968:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800896a:	2b00      	cmp	r3, #0
 800896c:	dc35      	bgt.n	80089da <_dtoa_r+0x2a2>
 800896e:	2301      	movs	r3, #1
 8008970:	461a      	mov	r2, r3
 8008972:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8008976:	9221      	str	r2, [sp, #132]	@ 0x84
 8008978:	e00b      	b.n	8008992 <_dtoa_r+0x25a>
 800897a:	2301      	movs	r3, #1
 800897c:	e7f3      	b.n	8008966 <_dtoa_r+0x22e>
 800897e:	2300      	movs	r3, #0
 8008980:	930b      	str	r3, [sp, #44]	@ 0x2c
 8008982:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8008984:	18fb      	adds	r3, r7, r3
 8008986:	9308      	str	r3, [sp, #32]
 8008988:	3301      	adds	r3, #1
 800898a:	2b01      	cmp	r3, #1
 800898c:	9307      	str	r3, [sp, #28]
 800898e:	bfb8      	it	lt
 8008990:	2301      	movlt	r3, #1
 8008992:	2100      	movs	r1, #0
 8008994:	2204      	movs	r2, #4
 8008996:	f8db 001c 	ldr.w	r0, [fp, #28]
 800899a:	f102 0514 	add.w	r5, r2, #20
 800899e:	429d      	cmp	r5, r3
 80089a0:	d91f      	bls.n	80089e2 <_dtoa_r+0x2aa>
 80089a2:	6041      	str	r1, [r0, #4]
 80089a4:	4658      	mov	r0, fp
 80089a6:	f001 f823 	bl	80099f0 <_Balloc>
 80089aa:	4682      	mov	sl, r0
 80089ac:	2800      	cmp	r0, #0
 80089ae:	d139      	bne.n	8008a24 <_dtoa_r+0x2ec>
 80089b0:	4602      	mov	r2, r0
 80089b2:	f240 11af 	movw	r1, #431	@ 0x1af
 80089b6:	4b1a      	ldr	r3, [pc, #104]	@ (8008a20 <_dtoa_r+0x2e8>)
 80089b8:	e6d2      	b.n	8008760 <_dtoa_r+0x28>
 80089ba:	2301      	movs	r3, #1
 80089bc:	e7e0      	b.n	8008980 <_dtoa_r+0x248>
 80089be:	2401      	movs	r4, #1
 80089c0:	2300      	movs	r3, #0
 80089c2:	940b      	str	r4, [sp, #44]	@ 0x2c
 80089c4:	9320      	str	r3, [sp, #128]	@ 0x80
 80089c6:	f04f 33ff 	mov.w	r3, #4294967295
 80089ca:	2200      	movs	r2, #0
 80089cc:	e9cd 3307 	strd	r3, r3, [sp, #28]
 80089d0:	2312      	movs	r3, #18
 80089d2:	e7d0      	b.n	8008976 <_dtoa_r+0x23e>
 80089d4:	2301      	movs	r3, #1
 80089d6:	930b      	str	r3, [sp, #44]	@ 0x2c
 80089d8:	e7f5      	b.n	80089c6 <_dtoa_r+0x28e>
 80089da:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80089dc:	e9cd 3307 	strd	r3, r3, [sp, #28]
 80089e0:	e7d7      	b.n	8008992 <_dtoa_r+0x25a>
 80089e2:	3101      	adds	r1, #1
 80089e4:	0052      	lsls	r2, r2, #1
 80089e6:	e7d8      	b.n	800899a <_dtoa_r+0x262>
 80089e8:	636f4361 	.word	0x636f4361
 80089ec:	3fd287a7 	.word	0x3fd287a7
 80089f0:	8b60c8b3 	.word	0x8b60c8b3
 80089f4:	3fc68a28 	.word	0x3fc68a28
 80089f8:	509f79fb 	.word	0x509f79fb
 80089fc:	3fd34413 	.word	0x3fd34413
 8008a00:	0800bf8c 	.word	0x0800bf8c
 8008a04:	0800c04e 	.word	0x0800c04e
 8008a08:	7ff00000 	.word	0x7ff00000
 8008a0c:	0800c04a 	.word	0x0800c04a
 8008a10:	0800bf69 	.word	0x0800bf69
 8008a14:	0800bf68 	.word	0x0800bf68
 8008a18:	3ff80000 	.word	0x3ff80000
 8008a1c:	0800c1a8 	.word	0x0800c1a8
 8008a20:	0800c0a6 	.word	0x0800c0a6
 8008a24:	f8db 301c 	ldr.w	r3, [fp, #28]
 8008a28:	6018      	str	r0, [r3, #0]
 8008a2a:	9b07      	ldr	r3, [sp, #28]
 8008a2c:	2b0e      	cmp	r3, #14
 8008a2e:	f200 80a4 	bhi.w	8008b7a <_dtoa_r+0x442>
 8008a32:	2c00      	cmp	r4, #0
 8008a34:	f000 80a1 	beq.w	8008b7a <_dtoa_r+0x442>
 8008a38:	2f00      	cmp	r7, #0
 8008a3a:	dd33      	ble.n	8008aa4 <_dtoa_r+0x36c>
 8008a3c:	4b86      	ldr	r3, [pc, #536]	@ (8008c58 <_dtoa_r+0x520>)
 8008a3e:	f007 020f 	and.w	r2, r7, #15
 8008a42:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8008a46:	05f8      	lsls	r0, r7, #23
 8008a48:	e9d3 3400 	ldrd	r3, r4, [r3]
 8008a4c:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8008a50:	ea4f 1427 	mov.w	r4, r7, asr #4
 8008a54:	d516      	bpl.n	8008a84 <_dtoa_r+0x34c>
 8008a56:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8008a5a:	4b80      	ldr	r3, [pc, #512]	@ (8008c5c <_dtoa_r+0x524>)
 8008a5c:	2603      	movs	r6, #3
 8008a5e:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8008a62:	f7f7 fe6d 	bl	8000740 <__aeabi_ddiv>
 8008a66:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008a6a:	f004 040f 	and.w	r4, r4, #15
 8008a6e:	4d7b      	ldr	r5, [pc, #492]	@ (8008c5c <_dtoa_r+0x524>)
 8008a70:	b954      	cbnz	r4, 8008a88 <_dtoa_r+0x350>
 8008a72:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8008a76:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008a7a:	f7f7 fe61 	bl	8000740 <__aeabi_ddiv>
 8008a7e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008a82:	e028      	b.n	8008ad6 <_dtoa_r+0x39e>
 8008a84:	2602      	movs	r6, #2
 8008a86:	e7f2      	b.n	8008a6e <_dtoa_r+0x336>
 8008a88:	07e1      	lsls	r1, r4, #31
 8008a8a:	d508      	bpl.n	8008a9e <_dtoa_r+0x366>
 8008a8c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8008a90:	e9d5 2300 	ldrd	r2, r3, [r5]
 8008a94:	f7f7 fd2a 	bl	80004ec <__aeabi_dmul>
 8008a98:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8008a9c:	3601      	adds	r6, #1
 8008a9e:	1064      	asrs	r4, r4, #1
 8008aa0:	3508      	adds	r5, #8
 8008aa2:	e7e5      	b.n	8008a70 <_dtoa_r+0x338>
 8008aa4:	f000 80d2 	beq.w	8008c4c <_dtoa_r+0x514>
 8008aa8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8008aac:	427c      	negs	r4, r7
 8008aae:	4b6a      	ldr	r3, [pc, #424]	@ (8008c58 <_dtoa_r+0x520>)
 8008ab0:	f004 020f 	and.w	r2, r4, #15
 8008ab4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8008ab8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008abc:	f7f7 fd16 	bl	80004ec <__aeabi_dmul>
 8008ac0:	2602      	movs	r6, #2
 8008ac2:	2300      	movs	r3, #0
 8008ac4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008ac8:	4d64      	ldr	r5, [pc, #400]	@ (8008c5c <_dtoa_r+0x524>)
 8008aca:	1124      	asrs	r4, r4, #4
 8008acc:	2c00      	cmp	r4, #0
 8008ace:	f040 80b2 	bne.w	8008c36 <_dtoa_r+0x4fe>
 8008ad2:	2b00      	cmp	r3, #0
 8008ad4:	d1d3      	bne.n	8008a7e <_dtoa_r+0x346>
 8008ad6:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8008ada:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8008adc:	2b00      	cmp	r3, #0
 8008ade:	f000 80b7 	beq.w	8008c50 <_dtoa_r+0x518>
 8008ae2:	2200      	movs	r2, #0
 8008ae4:	4620      	mov	r0, r4
 8008ae6:	4629      	mov	r1, r5
 8008ae8:	4b5d      	ldr	r3, [pc, #372]	@ (8008c60 <_dtoa_r+0x528>)
 8008aea:	f7f7 ff71 	bl	80009d0 <__aeabi_dcmplt>
 8008aee:	2800      	cmp	r0, #0
 8008af0:	f000 80ae 	beq.w	8008c50 <_dtoa_r+0x518>
 8008af4:	9b07      	ldr	r3, [sp, #28]
 8008af6:	2b00      	cmp	r3, #0
 8008af8:	f000 80aa 	beq.w	8008c50 <_dtoa_r+0x518>
 8008afc:	9b08      	ldr	r3, [sp, #32]
 8008afe:	2b00      	cmp	r3, #0
 8008b00:	dd37      	ble.n	8008b72 <_dtoa_r+0x43a>
 8008b02:	1e7b      	subs	r3, r7, #1
 8008b04:	4620      	mov	r0, r4
 8008b06:	9304      	str	r3, [sp, #16]
 8008b08:	2200      	movs	r2, #0
 8008b0a:	4629      	mov	r1, r5
 8008b0c:	4b55      	ldr	r3, [pc, #340]	@ (8008c64 <_dtoa_r+0x52c>)
 8008b0e:	f7f7 fced 	bl	80004ec <__aeabi_dmul>
 8008b12:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008b16:	9c08      	ldr	r4, [sp, #32]
 8008b18:	3601      	adds	r6, #1
 8008b1a:	4630      	mov	r0, r6
 8008b1c:	f7f7 fc7c 	bl	8000418 <__aeabi_i2d>
 8008b20:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8008b24:	f7f7 fce2 	bl	80004ec <__aeabi_dmul>
 8008b28:	2200      	movs	r2, #0
 8008b2a:	4b4f      	ldr	r3, [pc, #316]	@ (8008c68 <_dtoa_r+0x530>)
 8008b2c:	f7f7 fb28 	bl	8000180 <__adddf3>
 8008b30:	4605      	mov	r5, r0
 8008b32:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8008b36:	2c00      	cmp	r4, #0
 8008b38:	f040 809a 	bne.w	8008c70 <_dtoa_r+0x538>
 8008b3c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008b40:	2200      	movs	r2, #0
 8008b42:	4b4a      	ldr	r3, [pc, #296]	@ (8008c6c <_dtoa_r+0x534>)
 8008b44:	f7f7 fb1a 	bl	800017c <__aeabi_dsub>
 8008b48:	4602      	mov	r2, r0
 8008b4a:	460b      	mov	r3, r1
 8008b4c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8008b50:	462a      	mov	r2, r5
 8008b52:	4633      	mov	r3, r6
 8008b54:	f7f7 ff5a 	bl	8000a0c <__aeabi_dcmpgt>
 8008b58:	2800      	cmp	r0, #0
 8008b5a:	f040 828e 	bne.w	800907a <_dtoa_r+0x942>
 8008b5e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008b62:	462a      	mov	r2, r5
 8008b64:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8008b68:	f7f7 ff32 	bl	80009d0 <__aeabi_dcmplt>
 8008b6c:	2800      	cmp	r0, #0
 8008b6e:	f040 8127 	bne.w	8008dc0 <_dtoa_r+0x688>
 8008b72:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 8008b76:	e9cd 3402 	strd	r3, r4, [sp, #8]
 8008b7a:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8008b7c:	2b00      	cmp	r3, #0
 8008b7e:	f2c0 8163 	blt.w	8008e48 <_dtoa_r+0x710>
 8008b82:	2f0e      	cmp	r7, #14
 8008b84:	f300 8160 	bgt.w	8008e48 <_dtoa_r+0x710>
 8008b88:	4b33      	ldr	r3, [pc, #204]	@ (8008c58 <_dtoa_r+0x520>)
 8008b8a:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8008b8e:	e9d3 3400 	ldrd	r3, r4, [r3]
 8008b92:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8008b96:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8008b98:	2b00      	cmp	r3, #0
 8008b9a:	da03      	bge.n	8008ba4 <_dtoa_r+0x46c>
 8008b9c:	9b07      	ldr	r3, [sp, #28]
 8008b9e:	2b00      	cmp	r3, #0
 8008ba0:	f340 8100 	ble.w	8008da4 <_dtoa_r+0x66c>
 8008ba4:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8008ba8:	4656      	mov	r6, sl
 8008baa:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8008bae:	4620      	mov	r0, r4
 8008bb0:	4629      	mov	r1, r5
 8008bb2:	f7f7 fdc5 	bl	8000740 <__aeabi_ddiv>
 8008bb6:	f7f7 ff49 	bl	8000a4c <__aeabi_d2iz>
 8008bba:	4680      	mov	r8, r0
 8008bbc:	f7f7 fc2c 	bl	8000418 <__aeabi_i2d>
 8008bc0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8008bc4:	f7f7 fc92 	bl	80004ec <__aeabi_dmul>
 8008bc8:	4602      	mov	r2, r0
 8008bca:	460b      	mov	r3, r1
 8008bcc:	4620      	mov	r0, r4
 8008bce:	4629      	mov	r1, r5
 8008bd0:	f7f7 fad4 	bl	800017c <__aeabi_dsub>
 8008bd4:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8008bd8:	9d07      	ldr	r5, [sp, #28]
 8008bda:	f806 4b01 	strb.w	r4, [r6], #1
 8008bde:	eba6 040a 	sub.w	r4, r6, sl
 8008be2:	42a5      	cmp	r5, r4
 8008be4:	4602      	mov	r2, r0
 8008be6:	460b      	mov	r3, r1
 8008be8:	f040 8116 	bne.w	8008e18 <_dtoa_r+0x6e0>
 8008bec:	f7f7 fac8 	bl	8000180 <__adddf3>
 8008bf0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8008bf4:	4604      	mov	r4, r0
 8008bf6:	460d      	mov	r5, r1
 8008bf8:	f7f7 ff08 	bl	8000a0c <__aeabi_dcmpgt>
 8008bfc:	2800      	cmp	r0, #0
 8008bfe:	f040 80f8 	bne.w	8008df2 <_dtoa_r+0x6ba>
 8008c02:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8008c06:	4620      	mov	r0, r4
 8008c08:	4629      	mov	r1, r5
 8008c0a:	f7f7 fed7 	bl	80009bc <__aeabi_dcmpeq>
 8008c0e:	b118      	cbz	r0, 8008c18 <_dtoa_r+0x4e0>
 8008c10:	f018 0f01 	tst.w	r8, #1
 8008c14:	f040 80ed 	bne.w	8008df2 <_dtoa_r+0x6ba>
 8008c18:	4649      	mov	r1, r9
 8008c1a:	4658      	mov	r0, fp
 8008c1c:	f000 ff28 	bl	8009a70 <_Bfree>
 8008c20:	2300      	movs	r3, #0
 8008c22:	7033      	strb	r3, [r6, #0]
 8008c24:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8008c26:	3701      	adds	r7, #1
 8008c28:	601f      	str	r7, [r3, #0]
 8008c2a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8008c2c:	2b00      	cmp	r3, #0
 8008c2e:	f000 8320 	beq.w	8009272 <_dtoa_r+0xb3a>
 8008c32:	601e      	str	r6, [r3, #0]
 8008c34:	e31d      	b.n	8009272 <_dtoa_r+0xb3a>
 8008c36:	07e2      	lsls	r2, r4, #31
 8008c38:	d505      	bpl.n	8008c46 <_dtoa_r+0x50e>
 8008c3a:	e9d5 2300 	ldrd	r2, r3, [r5]
 8008c3e:	f7f7 fc55 	bl	80004ec <__aeabi_dmul>
 8008c42:	2301      	movs	r3, #1
 8008c44:	3601      	adds	r6, #1
 8008c46:	1064      	asrs	r4, r4, #1
 8008c48:	3508      	adds	r5, #8
 8008c4a:	e73f      	b.n	8008acc <_dtoa_r+0x394>
 8008c4c:	2602      	movs	r6, #2
 8008c4e:	e742      	b.n	8008ad6 <_dtoa_r+0x39e>
 8008c50:	9c07      	ldr	r4, [sp, #28]
 8008c52:	9704      	str	r7, [sp, #16]
 8008c54:	e761      	b.n	8008b1a <_dtoa_r+0x3e2>
 8008c56:	bf00      	nop
 8008c58:	0800c1a8 	.word	0x0800c1a8
 8008c5c:	0800c180 	.word	0x0800c180
 8008c60:	3ff00000 	.word	0x3ff00000
 8008c64:	40240000 	.word	0x40240000
 8008c68:	401c0000 	.word	0x401c0000
 8008c6c:	40140000 	.word	0x40140000
 8008c70:	4b70      	ldr	r3, [pc, #448]	@ (8008e34 <_dtoa_r+0x6fc>)
 8008c72:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8008c74:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8008c78:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8008c7c:	4454      	add	r4, sl
 8008c7e:	2900      	cmp	r1, #0
 8008c80:	d045      	beq.n	8008d0e <_dtoa_r+0x5d6>
 8008c82:	2000      	movs	r0, #0
 8008c84:	496c      	ldr	r1, [pc, #432]	@ (8008e38 <_dtoa_r+0x700>)
 8008c86:	f7f7 fd5b 	bl	8000740 <__aeabi_ddiv>
 8008c8a:	4633      	mov	r3, r6
 8008c8c:	462a      	mov	r2, r5
 8008c8e:	f7f7 fa75 	bl	800017c <__aeabi_dsub>
 8008c92:	4656      	mov	r6, sl
 8008c94:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8008c98:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008c9c:	f7f7 fed6 	bl	8000a4c <__aeabi_d2iz>
 8008ca0:	4605      	mov	r5, r0
 8008ca2:	f7f7 fbb9 	bl	8000418 <__aeabi_i2d>
 8008ca6:	4602      	mov	r2, r0
 8008ca8:	460b      	mov	r3, r1
 8008caa:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008cae:	f7f7 fa65 	bl	800017c <__aeabi_dsub>
 8008cb2:	4602      	mov	r2, r0
 8008cb4:	460b      	mov	r3, r1
 8008cb6:	3530      	adds	r5, #48	@ 0x30
 8008cb8:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8008cbc:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8008cc0:	f806 5b01 	strb.w	r5, [r6], #1
 8008cc4:	f7f7 fe84 	bl	80009d0 <__aeabi_dcmplt>
 8008cc8:	2800      	cmp	r0, #0
 8008cca:	d163      	bne.n	8008d94 <_dtoa_r+0x65c>
 8008ccc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8008cd0:	2000      	movs	r0, #0
 8008cd2:	495a      	ldr	r1, [pc, #360]	@ (8008e3c <_dtoa_r+0x704>)
 8008cd4:	f7f7 fa52 	bl	800017c <__aeabi_dsub>
 8008cd8:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8008cdc:	f7f7 fe78 	bl	80009d0 <__aeabi_dcmplt>
 8008ce0:	2800      	cmp	r0, #0
 8008ce2:	f040 8087 	bne.w	8008df4 <_dtoa_r+0x6bc>
 8008ce6:	42a6      	cmp	r6, r4
 8008ce8:	f43f af43 	beq.w	8008b72 <_dtoa_r+0x43a>
 8008cec:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8008cf0:	2200      	movs	r2, #0
 8008cf2:	4b53      	ldr	r3, [pc, #332]	@ (8008e40 <_dtoa_r+0x708>)
 8008cf4:	f7f7 fbfa 	bl	80004ec <__aeabi_dmul>
 8008cf8:	2200      	movs	r2, #0
 8008cfa:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8008cfe:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008d02:	4b4f      	ldr	r3, [pc, #316]	@ (8008e40 <_dtoa_r+0x708>)
 8008d04:	f7f7 fbf2 	bl	80004ec <__aeabi_dmul>
 8008d08:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008d0c:	e7c4      	b.n	8008c98 <_dtoa_r+0x560>
 8008d0e:	4631      	mov	r1, r6
 8008d10:	4628      	mov	r0, r5
 8008d12:	f7f7 fbeb 	bl	80004ec <__aeabi_dmul>
 8008d16:	4656      	mov	r6, sl
 8008d18:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8008d1c:	9413      	str	r4, [sp, #76]	@ 0x4c
 8008d1e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008d22:	f7f7 fe93 	bl	8000a4c <__aeabi_d2iz>
 8008d26:	4605      	mov	r5, r0
 8008d28:	f7f7 fb76 	bl	8000418 <__aeabi_i2d>
 8008d2c:	4602      	mov	r2, r0
 8008d2e:	460b      	mov	r3, r1
 8008d30:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008d34:	f7f7 fa22 	bl	800017c <__aeabi_dsub>
 8008d38:	4602      	mov	r2, r0
 8008d3a:	460b      	mov	r3, r1
 8008d3c:	3530      	adds	r5, #48	@ 0x30
 8008d3e:	f806 5b01 	strb.w	r5, [r6], #1
 8008d42:	42a6      	cmp	r6, r4
 8008d44:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8008d48:	f04f 0200 	mov.w	r2, #0
 8008d4c:	d124      	bne.n	8008d98 <_dtoa_r+0x660>
 8008d4e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8008d52:	4b39      	ldr	r3, [pc, #228]	@ (8008e38 <_dtoa_r+0x700>)
 8008d54:	f7f7 fa14 	bl	8000180 <__adddf3>
 8008d58:	4602      	mov	r2, r0
 8008d5a:	460b      	mov	r3, r1
 8008d5c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008d60:	f7f7 fe54 	bl	8000a0c <__aeabi_dcmpgt>
 8008d64:	2800      	cmp	r0, #0
 8008d66:	d145      	bne.n	8008df4 <_dtoa_r+0x6bc>
 8008d68:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8008d6c:	2000      	movs	r0, #0
 8008d6e:	4932      	ldr	r1, [pc, #200]	@ (8008e38 <_dtoa_r+0x700>)
 8008d70:	f7f7 fa04 	bl	800017c <__aeabi_dsub>
 8008d74:	4602      	mov	r2, r0
 8008d76:	460b      	mov	r3, r1
 8008d78:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008d7c:	f7f7 fe28 	bl	80009d0 <__aeabi_dcmplt>
 8008d80:	2800      	cmp	r0, #0
 8008d82:	f43f aef6 	beq.w	8008b72 <_dtoa_r+0x43a>
 8008d86:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8008d88:	1e73      	subs	r3, r6, #1
 8008d8a:	9313      	str	r3, [sp, #76]	@ 0x4c
 8008d8c:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8008d90:	2b30      	cmp	r3, #48	@ 0x30
 8008d92:	d0f8      	beq.n	8008d86 <_dtoa_r+0x64e>
 8008d94:	9f04      	ldr	r7, [sp, #16]
 8008d96:	e73f      	b.n	8008c18 <_dtoa_r+0x4e0>
 8008d98:	4b29      	ldr	r3, [pc, #164]	@ (8008e40 <_dtoa_r+0x708>)
 8008d9a:	f7f7 fba7 	bl	80004ec <__aeabi_dmul>
 8008d9e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008da2:	e7bc      	b.n	8008d1e <_dtoa_r+0x5e6>
 8008da4:	d10c      	bne.n	8008dc0 <_dtoa_r+0x688>
 8008da6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8008daa:	2200      	movs	r2, #0
 8008dac:	4b25      	ldr	r3, [pc, #148]	@ (8008e44 <_dtoa_r+0x70c>)
 8008dae:	f7f7 fb9d 	bl	80004ec <__aeabi_dmul>
 8008db2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8008db6:	f7f7 fe1f 	bl	80009f8 <__aeabi_dcmpge>
 8008dba:	2800      	cmp	r0, #0
 8008dbc:	f000 815b 	beq.w	8009076 <_dtoa_r+0x93e>
 8008dc0:	2400      	movs	r4, #0
 8008dc2:	4625      	mov	r5, r4
 8008dc4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8008dc6:	4656      	mov	r6, sl
 8008dc8:	43db      	mvns	r3, r3
 8008dca:	9304      	str	r3, [sp, #16]
 8008dcc:	2700      	movs	r7, #0
 8008dce:	4621      	mov	r1, r4
 8008dd0:	4658      	mov	r0, fp
 8008dd2:	f000 fe4d 	bl	8009a70 <_Bfree>
 8008dd6:	2d00      	cmp	r5, #0
 8008dd8:	d0dc      	beq.n	8008d94 <_dtoa_r+0x65c>
 8008dda:	b12f      	cbz	r7, 8008de8 <_dtoa_r+0x6b0>
 8008ddc:	42af      	cmp	r7, r5
 8008dde:	d003      	beq.n	8008de8 <_dtoa_r+0x6b0>
 8008de0:	4639      	mov	r1, r7
 8008de2:	4658      	mov	r0, fp
 8008de4:	f000 fe44 	bl	8009a70 <_Bfree>
 8008de8:	4629      	mov	r1, r5
 8008dea:	4658      	mov	r0, fp
 8008dec:	f000 fe40 	bl	8009a70 <_Bfree>
 8008df0:	e7d0      	b.n	8008d94 <_dtoa_r+0x65c>
 8008df2:	9704      	str	r7, [sp, #16]
 8008df4:	4633      	mov	r3, r6
 8008df6:	461e      	mov	r6, r3
 8008df8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8008dfc:	2a39      	cmp	r2, #57	@ 0x39
 8008dfe:	d107      	bne.n	8008e10 <_dtoa_r+0x6d8>
 8008e00:	459a      	cmp	sl, r3
 8008e02:	d1f8      	bne.n	8008df6 <_dtoa_r+0x6be>
 8008e04:	9a04      	ldr	r2, [sp, #16]
 8008e06:	3201      	adds	r2, #1
 8008e08:	9204      	str	r2, [sp, #16]
 8008e0a:	2230      	movs	r2, #48	@ 0x30
 8008e0c:	f88a 2000 	strb.w	r2, [sl]
 8008e10:	781a      	ldrb	r2, [r3, #0]
 8008e12:	3201      	adds	r2, #1
 8008e14:	701a      	strb	r2, [r3, #0]
 8008e16:	e7bd      	b.n	8008d94 <_dtoa_r+0x65c>
 8008e18:	2200      	movs	r2, #0
 8008e1a:	4b09      	ldr	r3, [pc, #36]	@ (8008e40 <_dtoa_r+0x708>)
 8008e1c:	f7f7 fb66 	bl	80004ec <__aeabi_dmul>
 8008e20:	2200      	movs	r2, #0
 8008e22:	2300      	movs	r3, #0
 8008e24:	4604      	mov	r4, r0
 8008e26:	460d      	mov	r5, r1
 8008e28:	f7f7 fdc8 	bl	80009bc <__aeabi_dcmpeq>
 8008e2c:	2800      	cmp	r0, #0
 8008e2e:	f43f aebc 	beq.w	8008baa <_dtoa_r+0x472>
 8008e32:	e6f1      	b.n	8008c18 <_dtoa_r+0x4e0>
 8008e34:	0800c1a8 	.word	0x0800c1a8
 8008e38:	3fe00000 	.word	0x3fe00000
 8008e3c:	3ff00000 	.word	0x3ff00000
 8008e40:	40240000 	.word	0x40240000
 8008e44:	40140000 	.word	0x40140000
 8008e48:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8008e4a:	2a00      	cmp	r2, #0
 8008e4c:	f000 80db 	beq.w	8009006 <_dtoa_r+0x8ce>
 8008e50:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8008e52:	2a01      	cmp	r2, #1
 8008e54:	f300 80bf 	bgt.w	8008fd6 <_dtoa_r+0x89e>
 8008e58:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8008e5a:	2a00      	cmp	r2, #0
 8008e5c:	f000 80b7 	beq.w	8008fce <_dtoa_r+0x896>
 8008e60:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8008e64:	4646      	mov	r6, r8
 8008e66:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8008e68:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8008e6a:	2101      	movs	r1, #1
 8008e6c:	441a      	add	r2, r3
 8008e6e:	4658      	mov	r0, fp
 8008e70:	4498      	add	r8, r3
 8008e72:	9209      	str	r2, [sp, #36]	@ 0x24
 8008e74:	f000 fefa 	bl	8009c6c <__i2b>
 8008e78:	4605      	mov	r5, r0
 8008e7a:	b15e      	cbz	r6, 8008e94 <_dtoa_r+0x75c>
 8008e7c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008e7e:	2b00      	cmp	r3, #0
 8008e80:	dd08      	ble.n	8008e94 <_dtoa_r+0x75c>
 8008e82:	42b3      	cmp	r3, r6
 8008e84:	bfa8      	it	ge
 8008e86:	4633      	movge	r3, r6
 8008e88:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8008e8a:	eba8 0803 	sub.w	r8, r8, r3
 8008e8e:	1af6      	subs	r6, r6, r3
 8008e90:	1ad3      	subs	r3, r2, r3
 8008e92:	9309      	str	r3, [sp, #36]	@ 0x24
 8008e94:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8008e96:	b1f3      	cbz	r3, 8008ed6 <_dtoa_r+0x79e>
 8008e98:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8008e9a:	2b00      	cmp	r3, #0
 8008e9c:	f000 80b7 	beq.w	800900e <_dtoa_r+0x8d6>
 8008ea0:	b18c      	cbz	r4, 8008ec6 <_dtoa_r+0x78e>
 8008ea2:	4629      	mov	r1, r5
 8008ea4:	4622      	mov	r2, r4
 8008ea6:	4658      	mov	r0, fp
 8008ea8:	f000 ff9e 	bl	8009de8 <__pow5mult>
 8008eac:	464a      	mov	r2, r9
 8008eae:	4601      	mov	r1, r0
 8008eb0:	4605      	mov	r5, r0
 8008eb2:	4658      	mov	r0, fp
 8008eb4:	f000 fef0 	bl	8009c98 <__multiply>
 8008eb8:	4649      	mov	r1, r9
 8008eba:	9004      	str	r0, [sp, #16]
 8008ebc:	4658      	mov	r0, fp
 8008ebe:	f000 fdd7 	bl	8009a70 <_Bfree>
 8008ec2:	9b04      	ldr	r3, [sp, #16]
 8008ec4:	4699      	mov	r9, r3
 8008ec6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8008ec8:	1b1a      	subs	r2, r3, r4
 8008eca:	d004      	beq.n	8008ed6 <_dtoa_r+0x79e>
 8008ecc:	4649      	mov	r1, r9
 8008ece:	4658      	mov	r0, fp
 8008ed0:	f000 ff8a 	bl	8009de8 <__pow5mult>
 8008ed4:	4681      	mov	r9, r0
 8008ed6:	2101      	movs	r1, #1
 8008ed8:	4658      	mov	r0, fp
 8008eda:	f000 fec7 	bl	8009c6c <__i2b>
 8008ede:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008ee0:	4604      	mov	r4, r0
 8008ee2:	2b00      	cmp	r3, #0
 8008ee4:	f000 81c9 	beq.w	800927a <_dtoa_r+0xb42>
 8008ee8:	461a      	mov	r2, r3
 8008eea:	4601      	mov	r1, r0
 8008eec:	4658      	mov	r0, fp
 8008eee:	f000 ff7b 	bl	8009de8 <__pow5mult>
 8008ef2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8008ef4:	4604      	mov	r4, r0
 8008ef6:	2b01      	cmp	r3, #1
 8008ef8:	f300 808f 	bgt.w	800901a <_dtoa_r+0x8e2>
 8008efc:	9b02      	ldr	r3, [sp, #8]
 8008efe:	2b00      	cmp	r3, #0
 8008f00:	f040 8087 	bne.w	8009012 <_dtoa_r+0x8da>
 8008f04:	9b03      	ldr	r3, [sp, #12]
 8008f06:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8008f0a:	2b00      	cmp	r3, #0
 8008f0c:	f040 8083 	bne.w	8009016 <_dtoa_r+0x8de>
 8008f10:	9b03      	ldr	r3, [sp, #12]
 8008f12:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8008f16:	0d1b      	lsrs	r3, r3, #20
 8008f18:	051b      	lsls	r3, r3, #20
 8008f1a:	b12b      	cbz	r3, 8008f28 <_dtoa_r+0x7f0>
 8008f1c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008f1e:	f108 0801 	add.w	r8, r8, #1
 8008f22:	3301      	adds	r3, #1
 8008f24:	9309      	str	r3, [sp, #36]	@ 0x24
 8008f26:	2301      	movs	r3, #1
 8008f28:	930a      	str	r3, [sp, #40]	@ 0x28
 8008f2a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008f2c:	2b00      	cmp	r3, #0
 8008f2e:	f000 81aa 	beq.w	8009286 <_dtoa_r+0xb4e>
 8008f32:	6923      	ldr	r3, [r4, #16]
 8008f34:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8008f38:	6918      	ldr	r0, [r3, #16]
 8008f3a:	f000 fe4b 	bl	8009bd4 <__hi0bits>
 8008f3e:	f1c0 0020 	rsb	r0, r0, #32
 8008f42:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008f44:	4418      	add	r0, r3
 8008f46:	f010 001f 	ands.w	r0, r0, #31
 8008f4a:	d071      	beq.n	8009030 <_dtoa_r+0x8f8>
 8008f4c:	f1c0 0320 	rsb	r3, r0, #32
 8008f50:	2b04      	cmp	r3, #4
 8008f52:	dd65      	ble.n	8009020 <_dtoa_r+0x8e8>
 8008f54:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008f56:	f1c0 001c 	rsb	r0, r0, #28
 8008f5a:	4403      	add	r3, r0
 8008f5c:	4480      	add	r8, r0
 8008f5e:	4406      	add	r6, r0
 8008f60:	9309      	str	r3, [sp, #36]	@ 0x24
 8008f62:	f1b8 0f00 	cmp.w	r8, #0
 8008f66:	dd05      	ble.n	8008f74 <_dtoa_r+0x83c>
 8008f68:	4649      	mov	r1, r9
 8008f6a:	4642      	mov	r2, r8
 8008f6c:	4658      	mov	r0, fp
 8008f6e:	f000 ff95 	bl	8009e9c <__lshift>
 8008f72:	4681      	mov	r9, r0
 8008f74:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008f76:	2b00      	cmp	r3, #0
 8008f78:	dd05      	ble.n	8008f86 <_dtoa_r+0x84e>
 8008f7a:	4621      	mov	r1, r4
 8008f7c:	461a      	mov	r2, r3
 8008f7e:	4658      	mov	r0, fp
 8008f80:	f000 ff8c 	bl	8009e9c <__lshift>
 8008f84:	4604      	mov	r4, r0
 8008f86:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8008f88:	2b00      	cmp	r3, #0
 8008f8a:	d053      	beq.n	8009034 <_dtoa_r+0x8fc>
 8008f8c:	4621      	mov	r1, r4
 8008f8e:	4648      	mov	r0, r9
 8008f90:	f000 fff0 	bl	8009f74 <__mcmp>
 8008f94:	2800      	cmp	r0, #0
 8008f96:	da4d      	bge.n	8009034 <_dtoa_r+0x8fc>
 8008f98:	1e7b      	subs	r3, r7, #1
 8008f9a:	4649      	mov	r1, r9
 8008f9c:	9304      	str	r3, [sp, #16]
 8008f9e:	220a      	movs	r2, #10
 8008fa0:	2300      	movs	r3, #0
 8008fa2:	4658      	mov	r0, fp
 8008fa4:	f000 fd86 	bl	8009ab4 <__multadd>
 8008fa8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8008faa:	4681      	mov	r9, r0
 8008fac:	2b00      	cmp	r3, #0
 8008fae:	f000 816c 	beq.w	800928a <_dtoa_r+0xb52>
 8008fb2:	2300      	movs	r3, #0
 8008fb4:	4629      	mov	r1, r5
 8008fb6:	220a      	movs	r2, #10
 8008fb8:	4658      	mov	r0, fp
 8008fba:	f000 fd7b 	bl	8009ab4 <__multadd>
 8008fbe:	9b08      	ldr	r3, [sp, #32]
 8008fc0:	4605      	mov	r5, r0
 8008fc2:	2b00      	cmp	r3, #0
 8008fc4:	dc61      	bgt.n	800908a <_dtoa_r+0x952>
 8008fc6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8008fc8:	2b02      	cmp	r3, #2
 8008fca:	dc3b      	bgt.n	8009044 <_dtoa_r+0x90c>
 8008fcc:	e05d      	b.n	800908a <_dtoa_r+0x952>
 8008fce:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8008fd0:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8008fd4:	e746      	b.n	8008e64 <_dtoa_r+0x72c>
 8008fd6:	9b07      	ldr	r3, [sp, #28]
 8008fd8:	1e5c      	subs	r4, r3, #1
 8008fda:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8008fdc:	42a3      	cmp	r3, r4
 8008fde:	bfbf      	itttt	lt
 8008fe0:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8008fe2:	9a0e      	ldrlt	r2, [sp, #56]	@ 0x38
 8008fe4:	1ae3      	sublt	r3, r4, r3
 8008fe6:	18d2      	addlt	r2, r2, r3
 8008fe8:	bfa8      	it	ge
 8008fea:	1b1c      	subge	r4, r3, r4
 8008fec:	9b07      	ldr	r3, [sp, #28]
 8008fee:	bfbe      	ittt	lt
 8008ff0:	940a      	strlt	r4, [sp, #40]	@ 0x28
 8008ff2:	920e      	strlt	r2, [sp, #56]	@ 0x38
 8008ff4:	2400      	movlt	r4, #0
 8008ff6:	2b00      	cmp	r3, #0
 8008ff8:	bfb5      	itete	lt
 8008ffa:	eba8 0603 	sublt.w	r6, r8, r3
 8008ffe:	4646      	movge	r6, r8
 8009000:	2300      	movlt	r3, #0
 8009002:	9b07      	ldrge	r3, [sp, #28]
 8009004:	e730      	b.n	8008e68 <_dtoa_r+0x730>
 8009006:	4646      	mov	r6, r8
 8009008:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800900a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 800900c:	e735      	b.n	8008e7a <_dtoa_r+0x742>
 800900e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8009010:	e75c      	b.n	8008ecc <_dtoa_r+0x794>
 8009012:	2300      	movs	r3, #0
 8009014:	e788      	b.n	8008f28 <_dtoa_r+0x7f0>
 8009016:	9b02      	ldr	r3, [sp, #8]
 8009018:	e786      	b.n	8008f28 <_dtoa_r+0x7f0>
 800901a:	2300      	movs	r3, #0
 800901c:	930a      	str	r3, [sp, #40]	@ 0x28
 800901e:	e788      	b.n	8008f32 <_dtoa_r+0x7fa>
 8009020:	d09f      	beq.n	8008f62 <_dtoa_r+0x82a>
 8009022:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8009024:	331c      	adds	r3, #28
 8009026:	441a      	add	r2, r3
 8009028:	4498      	add	r8, r3
 800902a:	441e      	add	r6, r3
 800902c:	9209      	str	r2, [sp, #36]	@ 0x24
 800902e:	e798      	b.n	8008f62 <_dtoa_r+0x82a>
 8009030:	4603      	mov	r3, r0
 8009032:	e7f6      	b.n	8009022 <_dtoa_r+0x8ea>
 8009034:	9b07      	ldr	r3, [sp, #28]
 8009036:	9704      	str	r7, [sp, #16]
 8009038:	2b00      	cmp	r3, #0
 800903a:	dc20      	bgt.n	800907e <_dtoa_r+0x946>
 800903c:	9308      	str	r3, [sp, #32]
 800903e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8009040:	2b02      	cmp	r3, #2
 8009042:	dd1e      	ble.n	8009082 <_dtoa_r+0x94a>
 8009044:	9b08      	ldr	r3, [sp, #32]
 8009046:	2b00      	cmp	r3, #0
 8009048:	f47f aebc 	bne.w	8008dc4 <_dtoa_r+0x68c>
 800904c:	4621      	mov	r1, r4
 800904e:	2205      	movs	r2, #5
 8009050:	4658      	mov	r0, fp
 8009052:	f000 fd2f 	bl	8009ab4 <__multadd>
 8009056:	4601      	mov	r1, r0
 8009058:	4604      	mov	r4, r0
 800905a:	4648      	mov	r0, r9
 800905c:	f000 ff8a 	bl	8009f74 <__mcmp>
 8009060:	2800      	cmp	r0, #0
 8009062:	f77f aeaf 	ble.w	8008dc4 <_dtoa_r+0x68c>
 8009066:	2331      	movs	r3, #49	@ 0x31
 8009068:	4656      	mov	r6, sl
 800906a:	f806 3b01 	strb.w	r3, [r6], #1
 800906e:	9b04      	ldr	r3, [sp, #16]
 8009070:	3301      	adds	r3, #1
 8009072:	9304      	str	r3, [sp, #16]
 8009074:	e6aa      	b.n	8008dcc <_dtoa_r+0x694>
 8009076:	9c07      	ldr	r4, [sp, #28]
 8009078:	9704      	str	r7, [sp, #16]
 800907a:	4625      	mov	r5, r4
 800907c:	e7f3      	b.n	8009066 <_dtoa_r+0x92e>
 800907e:	9b07      	ldr	r3, [sp, #28]
 8009080:	9308      	str	r3, [sp, #32]
 8009082:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8009084:	2b00      	cmp	r3, #0
 8009086:	f000 8104 	beq.w	8009292 <_dtoa_r+0xb5a>
 800908a:	2e00      	cmp	r6, #0
 800908c:	dd05      	ble.n	800909a <_dtoa_r+0x962>
 800908e:	4629      	mov	r1, r5
 8009090:	4632      	mov	r2, r6
 8009092:	4658      	mov	r0, fp
 8009094:	f000 ff02 	bl	8009e9c <__lshift>
 8009098:	4605      	mov	r5, r0
 800909a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800909c:	2b00      	cmp	r3, #0
 800909e:	d05a      	beq.n	8009156 <_dtoa_r+0xa1e>
 80090a0:	4658      	mov	r0, fp
 80090a2:	6869      	ldr	r1, [r5, #4]
 80090a4:	f000 fca4 	bl	80099f0 <_Balloc>
 80090a8:	4606      	mov	r6, r0
 80090aa:	b928      	cbnz	r0, 80090b8 <_dtoa_r+0x980>
 80090ac:	4602      	mov	r2, r0
 80090ae:	f240 21ef 	movw	r1, #751	@ 0x2ef
 80090b2:	4b83      	ldr	r3, [pc, #524]	@ (80092c0 <_dtoa_r+0xb88>)
 80090b4:	f7ff bb54 	b.w	8008760 <_dtoa_r+0x28>
 80090b8:	692a      	ldr	r2, [r5, #16]
 80090ba:	f105 010c 	add.w	r1, r5, #12
 80090be:	3202      	adds	r2, #2
 80090c0:	0092      	lsls	r2, r2, #2
 80090c2:	300c      	adds	r0, #12
 80090c4:	f7ff fa7d 	bl	80085c2 <memcpy>
 80090c8:	2201      	movs	r2, #1
 80090ca:	4631      	mov	r1, r6
 80090cc:	4658      	mov	r0, fp
 80090ce:	f000 fee5 	bl	8009e9c <__lshift>
 80090d2:	462f      	mov	r7, r5
 80090d4:	4605      	mov	r5, r0
 80090d6:	f10a 0301 	add.w	r3, sl, #1
 80090da:	9307      	str	r3, [sp, #28]
 80090dc:	9b08      	ldr	r3, [sp, #32]
 80090de:	4453      	add	r3, sl
 80090e0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80090e2:	9b02      	ldr	r3, [sp, #8]
 80090e4:	f003 0301 	and.w	r3, r3, #1
 80090e8:	930a      	str	r3, [sp, #40]	@ 0x28
 80090ea:	9b07      	ldr	r3, [sp, #28]
 80090ec:	4621      	mov	r1, r4
 80090ee:	3b01      	subs	r3, #1
 80090f0:	4648      	mov	r0, r9
 80090f2:	9302      	str	r3, [sp, #8]
 80090f4:	f7ff fa98 	bl	8008628 <quorem>
 80090f8:	4639      	mov	r1, r7
 80090fa:	9008      	str	r0, [sp, #32]
 80090fc:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8009100:	4648      	mov	r0, r9
 8009102:	f000 ff37 	bl	8009f74 <__mcmp>
 8009106:	462a      	mov	r2, r5
 8009108:	9009      	str	r0, [sp, #36]	@ 0x24
 800910a:	4621      	mov	r1, r4
 800910c:	4658      	mov	r0, fp
 800910e:	f000 ff4d 	bl	8009fac <__mdiff>
 8009112:	68c2      	ldr	r2, [r0, #12]
 8009114:	4606      	mov	r6, r0
 8009116:	bb02      	cbnz	r2, 800915a <_dtoa_r+0xa22>
 8009118:	4601      	mov	r1, r0
 800911a:	4648      	mov	r0, r9
 800911c:	f000 ff2a 	bl	8009f74 <__mcmp>
 8009120:	4602      	mov	r2, r0
 8009122:	4631      	mov	r1, r6
 8009124:	4658      	mov	r0, fp
 8009126:	920c      	str	r2, [sp, #48]	@ 0x30
 8009128:	f000 fca2 	bl	8009a70 <_Bfree>
 800912c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 800912e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8009130:	9e07      	ldr	r6, [sp, #28]
 8009132:	ea43 0102 	orr.w	r1, r3, r2
 8009136:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8009138:	4319      	orrs	r1, r3
 800913a:	d110      	bne.n	800915e <_dtoa_r+0xa26>
 800913c:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8009140:	d029      	beq.n	8009196 <_dtoa_r+0xa5e>
 8009142:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009144:	2b00      	cmp	r3, #0
 8009146:	dd02      	ble.n	800914e <_dtoa_r+0xa16>
 8009148:	9b08      	ldr	r3, [sp, #32]
 800914a:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 800914e:	9b02      	ldr	r3, [sp, #8]
 8009150:	f883 8000 	strb.w	r8, [r3]
 8009154:	e63b      	b.n	8008dce <_dtoa_r+0x696>
 8009156:	4628      	mov	r0, r5
 8009158:	e7bb      	b.n	80090d2 <_dtoa_r+0x99a>
 800915a:	2201      	movs	r2, #1
 800915c:	e7e1      	b.n	8009122 <_dtoa_r+0x9ea>
 800915e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009160:	2b00      	cmp	r3, #0
 8009162:	db04      	blt.n	800916e <_dtoa_r+0xa36>
 8009164:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8009166:	430b      	orrs	r3, r1
 8009168:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800916a:	430b      	orrs	r3, r1
 800916c:	d120      	bne.n	80091b0 <_dtoa_r+0xa78>
 800916e:	2a00      	cmp	r2, #0
 8009170:	dded      	ble.n	800914e <_dtoa_r+0xa16>
 8009172:	4649      	mov	r1, r9
 8009174:	2201      	movs	r2, #1
 8009176:	4658      	mov	r0, fp
 8009178:	f000 fe90 	bl	8009e9c <__lshift>
 800917c:	4621      	mov	r1, r4
 800917e:	4681      	mov	r9, r0
 8009180:	f000 fef8 	bl	8009f74 <__mcmp>
 8009184:	2800      	cmp	r0, #0
 8009186:	dc03      	bgt.n	8009190 <_dtoa_r+0xa58>
 8009188:	d1e1      	bne.n	800914e <_dtoa_r+0xa16>
 800918a:	f018 0f01 	tst.w	r8, #1
 800918e:	d0de      	beq.n	800914e <_dtoa_r+0xa16>
 8009190:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8009194:	d1d8      	bne.n	8009148 <_dtoa_r+0xa10>
 8009196:	2339      	movs	r3, #57	@ 0x39
 8009198:	9a02      	ldr	r2, [sp, #8]
 800919a:	7013      	strb	r3, [r2, #0]
 800919c:	4633      	mov	r3, r6
 800919e:	461e      	mov	r6, r3
 80091a0:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 80091a4:	3b01      	subs	r3, #1
 80091a6:	2a39      	cmp	r2, #57	@ 0x39
 80091a8:	d052      	beq.n	8009250 <_dtoa_r+0xb18>
 80091aa:	3201      	adds	r2, #1
 80091ac:	701a      	strb	r2, [r3, #0]
 80091ae:	e60e      	b.n	8008dce <_dtoa_r+0x696>
 80091b0:	2a00      	cmp	r2, #0
 80091b2:	dd07      	ble.n	80091c4 <_dtoa_r+0xa8c>
 80091b4:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 80091b8:	d0ed      	beq.n	8009196 <_dtoa_r+0xa5e>
 80091ba:	9a02      	ldr	r2, [sp, #8]
 80091bc:	f108 0301 	add.w	r3, r8, #1
 80091c0:	7013      	strb	r3, [r2, #0]
 80091c2:	e604      	b.n	8008dce <_dtoa_r+0x696>
 80091c4:	9b07      	ldr	r3, [sp, #28]
 80091c6:	9a07      	ldr	r2, [sp, #28]
 80091c8:	f803 8c01 	strb.w	r8, [r3, #-1]
 80091cc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80091ce:	4293      	cmp	r3, r2
 80091d0:	d028      	beq.n	8009224 <_dtoa_r+0xaec>
 80091d2:	4649      	mov	r1, r9
 80091d4:	2300      	movs	r3, #0
 80091d6:	220a      	movs	r2, #10
 80091d8:	4658      	mov	r0, fp
 80091da:	f000 fc6b 	bl	8009ab4 <__multadd>
 80091de:	42af      	cmp	r7, r5
 80091e0:	4681      	mov	r9, r0
 80091e2:	f04f 0300 	mov.w	r3, #0
 80091e6:	f04f 020a 	mov.w	r2, #10
 80091ea:	4639      	mov	r1, r7
 80091ec:	4658      	mov	r0, fp
 80091ee:	d107      	bne.n	8009200 <_dtoa_r+0xac8>
 80091f0:	f000 fc60 	bl	8009ab4 <__multadd>
 80091f4:	4607      	mov	r7, r0
 80091f6:	4605      	mov	r5, r0
 80091f8:	9b07      	ldr	r3, [sp, #28]
 80091fa:	3301      	adds	r3, #1
 80091fc:	9307      	str	r3, [sp, #28]
 80091fe:	e774      	b.n	80090ea <_dtoa_r+0x9b2>
 8009200:	f000 fc58 	bl	8009ab4 <__multadd>
 8009204:	4629      	mov	r1, r5
 8009206:	4607      	mov	r7, r0
 8009208:	2300      	movs	r3, #0
 800920a:	220a      	movs	r2, #10
 800920c:	4658      	mov	r0, fp
 800920e:	f000 fc51 	bl	8009ab4 <__multadd>
 8009212:	4605      	mov	r5, r0
 8009214:	e7f0      	b.n	80091f8 <_dtoa_r+0xac0>
 8009216:	9b08      	ldr	r3, [sp, #32]
 8009218:	2700      	movs	r7, #0
 800921a:	2b00      	cmp	r3, #0
 800921c:	bfcc      	ite	gt
 800921e:	461e      	movgt	r6, r3
 8009220:	2601      	movle	r6, #1
 8009222:	4456      	add	r6, sl
 8009224:	4649      	mov	r1, r9
 8009226:	2201      	movs	r2, #1
 8009228:	4658      	mov	r0, fp
 800922a:	f000 fe37 	bl	8009e9c <__lshift>
 800922e:	4621      	mov	r1, r4
 8009230:	4681      	mov	r9, r0
 8009232:	f000 fe9f 	bl	8009f74 <__mcmp>
 8009236:	2800      	cmp	r0, #0
 8009238:	dcb0      	bgt.n	800919c <_dtoa_r+0xa64>
 800923a:	d102      	bne.n	8009242 <_dtoa_r+0xb0a>
 800923c:	f018 0f01 	tst.w	r8, #1
 8009240:	d1ac      	bne.n	800919c <_dtoa_r+0xa64>
 8009242:	4633      	mov	r3, r6
 8009244:	461e      	mov	r6, r3
 8009246:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800924a:	2a30      	cmp	r2, #48	@ 0x30
 800924c:	d0fa      	beq.n	8009244 <_dtoa_r+0xb0c>
 800924e:	e5be      	b.n	8008dce <_dtoa_r+0x696>
 8009250:	459a      	cmp	sl, r3
 8009252:	d1a4      	bne.n	800919e <_dtoa_r+0xa66>
 8009254:	9b04      	ldr	r3, [sp, #16]
 8009256:	3301      	adds	r3, #1
 8009258:	9304      	str	r3, [sp, #16]
 800925a:	2331      	movs	r3, #49	@ 0x31
 800925c:	f88a 3000 	strb.w	r3, [sl]
 8009260:	e5b5      	b.n	8008dce <_dtoa_r+0x696>
 8009262:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8009264:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 80092c4 <_dtoa_r+0xb8c>
 8009268:	b11b      	cbz	r3, 8009272 <_dtoa_r+0xb3a>
 800926a:	f10a 0308 	add.w	r3, sl, #8
 800926e:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8009270:	6013      	str	r3, [r2, #0]
 8009272:	4650      	mov	r0, sl
 8009274:	b017      	add	sp, #92	@ 0x5c
 8009276:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800927a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 800927c:	2b01      	cmp	r3, #1
 800927e:	f77f ae3d 	ble.w	8008efc <_dtoa_r+0x7c4>
 8009282:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8009284:	930a      	str	r3, [sp, #40]	@ 0x28
 8009286:	2001      	movs	r0, #1
 8009288:	e65b      	b.n	8008f42 <_dtoa_r+0x80a>
 800928a:	9b08      	ldr	r3, [sp, #32]
 800928c:	2b00      	cmp	r3, #0
 800928e:	f77f aed6 	ble.w	800903e <_dtoa_r+0x906>
 8009292:	4656      	mov	r6, sl
 8009294:	4621      	mov	r1, r4
 8009296:	4648      	mov	r0, r9
 8009298:	f7ff f9c6 	bl	8008628 <quorem>
 800929c:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 80092a0:	9b08      	ldr	r3, [sp, #32]
 80092a2:	f806 8b01 	strb.w	r8, [r6], #1
 80092a6:	eba6 020a 	sub.w	r2, r6, sl
 80092aa:	4293      	cmp	r3, r2
 80092ac:	ddb3      	ble.n	8009216 <_dtoa_r+0xade>
 80092ae:	4649      	mov	r1, r9
 80092b0:	2300      	movs	r3, #0
 80092b2:	220a      	movs	r2, #10
 80092b4:	4658      	mov	r0, fp
 80092b6:	f000 fbfd 	bl	8009ab4 <__multadd>
 80092ba:	4681      	mov	r9, r0
 80092bc:	e7ea      	b.n	8009294 <_dtoa_r+0xb5c>
 80092be:	bf00      	nop
 80092c0:	0800c0a6 	.word	0x0800c0a6
 80092c4:	0800c041 	.word	0x0800c041

080092c8 <_free_r>:
 80092c8:	b538      	push	{r3, r4, r5, lr}
 80092ca:	4605      	mov	r5, r0
 80092cc:	2900      	cmp	r1, #0
 80092ce:	d040      	beq.n	8009352 <_free_r+0x8a>
 80092d0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80092d4:	1f0c      	subs	r4, r1, #4
 80092d6:	2b00      	cmp	r3, #0
 80092d8:	bfb8      	it	lt
 80092da:	18e4      	addlt	r4, r4, r3
 80092dc:	f7fd fbd2 	bl	8006a84 <__malloc_lock>
 80092e0:	4a1c      	ldr	r2, [pc, #112]	@ (8009354 <_free_r+0x8c>)
 80092e2:	6813      	ldr	r3, [r2, #0]
 80092e4:	b933      	cbnz	r3, 80092f4 <_free_r+0x2c>
 80092e6:	6063      	str	r3, [r4, #4]
 80092e8:	6014      	str	r4, [r2, #0]
 80092ea:	4628      	mov	r0, r5
 80092ec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80092f0:	f7fd bbce 	b.w	8006a90 <__malloc_unlock>
 80092f4:	42a3      	cmp	r3, r4
 80092f6:	d908      	bls.n	800930a <_free_r+0x42>
 80092f8:	6820      	ldr	r0, [r4, #0]
 80092fa:	1821      	adds	r1, r4, r0
 80092fc:	428b      	cmp	r3, r1
 80092fe:	bf01      	itttt	eq
 8009300:	6819      	ldreq	r1, [r3, #0]
 8009302:	685b      	ldreq	r3, [r3, #4]
 8009304:	1809      	addeq	r1, r1, r0
 8009306:	6021      	streq	r1, [r4, #0]
 8009308:	e7ed      	b.n	80092e6 <_free_r+0x1e>
 800930a:	461a      	mov	r2, r3
 800930c:	685b      	ldr	r3, [r3, #4]
 800930e:	b10b      	cbz	r3, 8009314 <_free_r+0x4c>
 8009310:	42a3      	cmp	r3, r4
 8009312:	d9fa      	bls.n	800930a <_free_r+0x42>
 8009314:	6811      	ldr	r1, [r2, #0]
 8009316:	1850      	adds	r0, r2, r1
 8009318:	42a0      	cmp	r0, r4
 800931a:	d10b      	bne.n	8009334 <_free_r+0x6c>
 800931c:	6820      	ldr	r0, [r4, #0]
 800931e:	4401      	add	r1, r0
 8009320:	1850      	adds	r0, r2, r1
 8009322:	4283      	cmp	r3, r0
 8009324:	6011      	str	r1, [r2, #0]
 8009326:	d1e0      	bne.n	80092ea <_free_r+0x22>
 8009328:	6818      	ldr	r0, [r3, #0]
 800932a:	685b      	ldr	r3, [r3, #4]
 800932c:	4408      	add	r0, r1
 800932e:	6010      	str	r0, [r2, #0]
 8009330:	6053      	str	r3, [r2, #4]
 8009332:	e7da      	b.n	80092ea <_free_r+0x22>
 8009334:	d902      	bls.n	800933c <_free_r+0x74>
 8009336:	230c      	movs	r3, #12
 8009338:	602b      	str	r3, [r5, #0]
 800933a:	e7d6      	b.n	80092ea <_free_r+0x22>
 800933c:	6820      	ldr	r0, [r4, #0]
 800933e:	1821      	adds	r1, r4, r0
 8009340:	428b      	cmp	r3, r1
 8009342:	bf01      	itttt	eq
 8009344:	6819      	ldreq	r1, [r3, #0]
 8009346:	685b      	ldreq	r3, [r3, #4]
 8009348:	1809      	addeq	r1, r1, r0
 800934a:	6021      	streq	r1, [r4, #0]
 800934c:	6063      	str	r3, [r4, #4]
 800934e:	6054      	str	r4, [r2, #4]
 8009350:	e7cb      	b.n	80092ea <_free_r+0x22>
 8009352:	bd38      	pop	{r3, r4, r5, pc}
 8009354:	2000052c 	.word	0x2000052c

08009358 <rshift>:
 8009358:	6903      	ldr	r3, [r0, #16]
 800935a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800935e:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 8009362:	f100 0414 	add.w	r4, r0, #20
 8009366:	ea4f 1261 	mov.w	r2, r1, asr #5
 800936a:	dd46      	ble.n	80093fa <rshift+0xa2>
 800936c:	f011 011f 	ands.w	r1, r1, #31
 8009370:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8009374:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8009378:	d10c      	bne.n	8009394 <rshift+0x3c>
 800937a:	4629      	mov	r1, r5
 800937c:	f100 0710 	add.w	r7, r0, #16
 8009380:	42b1      	cmp	r1, r6
 8009382:	d335      	bcc.n	80093f0 <rshift+0x98>
 8009384:	1a9b      	subs	r3, r3, r2
 8009386:	009b      	lsls	r3, r3, #2
 8009388:	1eea      	subs	r2, r5, #3
 800938a:	4296      	cmp	r6, r2
 800938c:	bf38      	it	cc
 800938e:	2300      	movcc	r3, #0
 8009390:	4423      	add	r3, r4
 8009392:	e015      	b.n	80093c0 <rshift+0x68>
 8009394:	46a1      	mov	r9, r4
 8009396:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 800939a:	f1c1 0820 	rsb	r8, r1, #32
 800939e:	40cf      	lsrs	r7, r1
 80093a0:	f105 0e04 	add.w	lr, r5, #4
 80093a4:	4576      	cmp	r6, lr
 80093a6:	46f4      	mov	ip, lr
 80093a8:	d816      	bhi.n	80093d8 <rshift+0x80>
 80093aa:	1a9a      	subs	r2, r3, r2
 80093ac:	0092      	lsls	r2, r2, #2
 80093ae:	3a04      	subs	r2, #4
 80093b0:	3501      	adds	r5, #1
 80093b2:	42ae      	cmp	r6, r5
 80093b4:	bf38      	it	cc
 80093b6:	2200      	movcc	r2, #0
 80093b8:	18a3      	adds	r3, r4, r2
 80093ba:	50a7      	str	r7, [r4, r2]
 80093bc:	b107      	cbz	r7, 80093c0 <rshift+0x68>
 80093be:	3304      	adds	r3, #4
 80093c0:	42a3      	cmp	r3, r4
 80093c2:	eba3 0204 	sub.w	r2, r3, r4
 80093c6:	bf08      	it	eq
 80093c8:	2300      	moveq	r3, #0
 80093ca:	ea4f 02a2 	mov.w	r2, r2, asr #2
 80093ce:	6102      	str	r2, [r0, #16]
 80093d0:	bf08      	it	eq
 80093d2:	6143      	streq	r3, [r0, #20]
 80093d4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80093d8:	f8dc c000 	ldr.w	ip, [ip]
 80093dc:	fa0c fc08 	lsl.w	ip, ip, r8
 80093e0:	ea4c 0707 	orr.w	r7, ip, r7
 80093e4:	f849 7b04 	str.w	r7, [r9], #4
 80093e8:	f85e 7b04 	ldr.w	r7, [lr], #4
 80093ec:	40cf      	lsrs	r7, r1
 80093ee:	e7d9      	b.n	80093a4 <rshift+0x4c>
 80093f0:	f851 cb04 	ldr.w	ip, [r1], #4
 80093f4:	f847 cf04 	str.w	ip, [r7, #4]!
 80093f8:	e7c2      	b.n	8009380 <rshift+0x28>
 80093fa:	4623      	mov	r3, r4
 80093fc:	e7e0      	b.n	80093c0 <rshift+0x68>

080093fe <__hexdig_fun>:
 80093fe:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 8009402:	2b09      	cmp	r3, #9
 8009404:	d802      	bhi.n	800940c <__hexdig_fun+0xe>
 8009406:	3820      	subs	r0, #32
 8009408:	b2c0      	uxtb	r0, r0
 800940a:	4770      	bx	lr
 800940c:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
 8009410:	2b05      	cmp	r3, #5
 8009412:	d801      	bhi.n	8009418 <__hexdig_fun+0x1a>
 8009414:	3847      	subs	r0, #71	@ 0x47
 8009416:	e7f7      	b.n	8009408 <__hexdig_fun+0xa>
 8009418:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 800941c:	2b05      	cmp	r3, #5
 800941e:	d801      	bhi.n	8009424 <__hexdig_fun+0x26>
 8009420:	3827      	subs	r0, #39	@ 0x27
 8009422:	e7f1      	b.n	8009408 <__hexdig_fun+0xa>
 8009424:	2000      	movs	r0, #0
 8009426:	4770      	bx	lr

08009428 <__gethex>:
 8009428:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800942c:	468a      	mov	sl, r1
 800942e:	4690      	mov	r8, r2
 8009430:	b085      	sub	sp, #20
 8009432:	9302      	str	r3, [sp, #8]
 8009434:	680b      	ldr	r3, [r1, #0]
 8009436:	9001      	str	r0, [sp, #4]
 8009438:	1c9c      	adds	r4, r3, #2
 800943a:	46a1      	mov	r9, r4
 800943c:	f814 0b01 	ldrb.w	r0, [r4], #1
 8009440:	2830      	cmp	r0, #48	@ 0x30
 8009442:	d0fa      	beq.n	800943a <__gethex+0x12>
 8009444:	eba9 0303 	sub.w	r3, r9, r3
 8009448:	f1a3 0b02 	sub.w	fp, r3, #2
 800944c:	f7ff ffd7 	bl	80093fe <__hexdig_fun>
 8009450:	4605      	mov	r5, r0
 8009452:	2800      	cmp	r0, #0
 8009454:	d168      	bne.n	8009528 <__gethex+0x100>
 8009456:	2201      	movs	r2, #1
 8009458:	4648      	mov	r0, r9
 800945a:	499f      	ldr	r1, [pc, #636]	@ (80096d8 <__gethex+0x2b0>)
 800945c:	f7fe ffad 	bl	80083ba <strncmp>
 8009460:	4607      	mov	r7, r0
 8009462:	2800      	cmp	r0, #0
 8009464:	d167      	bne.n	8009536 <__gethex+0x10e>
 8009466:	f899 0001 	ldrb.w	r0, [r9, #1]
 800946a:	4626      	mov	r6, r4
 800946c:	f7ff ffc7 	bl	80093fe <__hexdig_fun>
 8009470:	2800      	cmp	r0, #0
 8009472:	d062      	beq.n	800953a <__gethex+0x112>
 8009474:	4623      	mov	r3, r4
 8009476:	7818      	ldrb	r0, [r3, #0]
 8009478:	4699      	mov	r9, r3
 800947a:	2830      	cmp	r0, #48	@ 0x30
 800947c:	f103 0301 	add.w	r3, r3, #1
 8009480:	d0f9      	beq.n	8009476 <__gethex+0x4e>
 8009482:	f7ff ffbc 	bl	80093fe <__hexdig_fun>
 8009486:	fab0 f580 	clz	r5, r0
 800948a:	f04f 0b01 	mov.w	fp, #1
 800948e:	096d      	lsrs	r5, r5, #5
 8009490:	464a      	mov	r2, r9
 8009492:	4616      	mov	r6, r2
 8009494:	7830      	ldrb	r0, [r6, #0]
 8009496:	3201      	adds	r2, #1
 8009498:	f7ff ffb1 	bl	80093fe <__hexdig_fun>
 800949c:	2800      	cmp	r0, #0
 800949e:	d1f8      	bne.n	8009492 <__gethex+0x6a>
 80094a0:	2201      	movs	r2, #1
 80094a2:	4630      	mov	r0, r6
 80094a4:	498c      	ldr	r1, [pc, #560]	@ (80096d8 <__gethex+0x2b0>)
 80094a6:	f7fe ff88 	bl	80083ba <strncmp>
 80094aa:	2800      	cmp	r0, #0
 80094ac:	d13f      	bne.n	800952e <__gethex+0x106>
 80094ae:	b944      	cbnz	r4, 80094c2 <__gethex+0x9a>
 80094b0:	1c74      	adds	r4, r6, #1
 80094b2:	4622      	mov	r2, r4
 80094b4:	4616      	mov	r6, r2
 80094b6:	7830      	ldrb	r0, [r6, #0]
 80094b8:	3201      	adds	r2, #1
 80094ba:	f7ff ffa0 	bl	80093fe <__hexdig_fun>
 80094be:	2800      	cmp	r0, #0
 80094c0:	d1f8      	bne.n	80094b4 <__gethex+0x8c>
 80094c2:	1ba4      	subs	r4, r4, r6
 80094c4:	00a7      	lsls	r7, r4, #2
 80094c6:	7833      	ldrb	r3, [r6, #0]
 80094c8:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
 80094cc:	2b50      	cmp	r3, #80	@ 0x50
 80094ce:	d13e      	bne.n	800954e <__gethex+0x126>
 80094d0:	7873      	ldrb	r3, [r6, #1]
 80094d2:	2b2b      	cmp	r3, #43	@ 0x2b
 80094d4:	d033      	beq.n	800953e <__gethex+0x116>
 80094d6:	2b2d      	cmp	r3, #45	@ 0x2d
 80094d8:	d034      	beq.n	8009544 <__gethex+0x11c>
 80094da:	2400      	movs	r4, #0
 80094dc:	1c71      	adds	r1, r6, #1
 80094de:	7808      	ldrb	r0, [r1, #0]
 80094e0:	f7ff ff8d 	bl	80093fe <__hexdig_fun>
 80094e4:	1e43      	subs	r3, r0, #1
 80094e6:	b2db      	uxtb	r3, r3
 80094e8:	2b18      	cmp	r3, #24
 80094ea:	d830      	bhi.n	800954e <__gethex+0x126>
 80094ec:	f1a0 0210 	sub.w	r2, r0, #16
 80094f0:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 80094f4:	f7ff ff83 	bl	80093fe <__hexdig_fun>
 80094f8:	f100 3cff 	add.w	ip, r0, #4294967295
 80094fc:	fa5f fc8c 	uxtb.w	ip, ip
 8009500:	f1bc 0f18 	cmp.w	ip, #24
 8009504:	f04f 030a 	mov.w	r3, #10
 8009508:	d91e      	bls.n	8009548 <__gethex+0x120>
 800950a:	b104      	cbz	r4, 800950e <__gethex+0xe6>
 800950c:	4252      	negs	r2, r2
 800950e:	4417      	add	r7, r2
 8009510:	f8ca 1000 	str.w	r1, [sl]
 8009514:	b1ed      	cbz	r5, 8009552 <__gethex+0x12a>
 8009516:	f1bb 0f00 	cmp.w	fp, #0
 800951a:	bf0c      	ite	eq
 800951c:	2506      	moveq	r5, #6
 800951e:	2500      	movne	r5, #0
 8009520:	4628      	mov	r0, r5
 8009522:	b005      	add	sp, #20
 8009524:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009528:	2500      	movs	r5, #0
 800952a:	462c      	mov	r4, r5
 800952c:	e7b0      	b.n	8009490 <__gethex+0x68>
 800952e:	2c00      	cmp	r4, #0
 8009530:	d1c7      	bne.n	80094c2 <__gethex+0x9a>
 8009532:	4627      	mov	r7, r4
 8009534:	e7c7      	b.n	80094c6 <__gethex+0x9e>
 8009536:	464e      	mov	r6, r9
 8009538:	462f      	mov	r7, r5
 800953a:	2501      	movs	r5, #1
 800953c:	e7c3      	b.n	80094c6 <__gethex+0x9e>
 800953e:	2400      	movs	r4, #0
 8009540:	1cb1      	adds	r1, r6, #2
 8009542:	e7cc      	b.n	80094de <__gethex+0xb6>
 8009544:	2401      	movs	r4, #1
 8009546:	e7fb      	b.n	8009540 <__gethex+0x118>
 8009548:	fb03 0002 	mla	r0, r3, r2, r0
 800954c:	e7ce      	b.n	80094ec <__gethex+0xc4>
 800954e:	4631      	mov	r1, r6
 8009550:	e7de      	b.n	8009510 <__gethex+0xe8>
 8009552:	4629      	mov	r1, r5
 8009554:	eba6 0309 	sub.w	r3, r6, r9
 8009558:	3b01      	subs	r3, #1
 800955a:	2b07      	cmp	r3, #7
 800955c:	dc0a      	bgt.n	8009574 <__gethex+0x14c>
 800955e:	9801      	ldr	r0, [sp, #4]
 8009560:	f000 fa46 	bl	80099f0 <_Balloc>
 8009564:	4604      	mov	r4, r0
 8009566:	b940      	cbnz	r0, 800957a <__gethex+0x152>
 8009568:	4602      	mov	r2, r0
 800956a:	21e4      	movs	r1, #228	@ 0xe4
 800956c:	4b5b      	ldr	r3, [pc, #364]	@ (80096dc <__gethex+0x2b4>)
 800956e:	485c      	ldr	r0, [pc, #368]	@ (80096e0 <__gethex+0x2b8>)
 8009570:	f7ff f83c 	bl	80085ec <__assert_func>
 8009574:	3101      	adds	r1, #1
 8009576:	105b      	asrs	r3, r3, #1
 8009578:	e7ef      	b.n	800955a <__gethex+0x132>
 800957a:	2300      	movs	r3, #0
 800957c:	f100 0a14 	add.w	sl, r0, #20
 8009580:	4655      	mov	r5, sl
 8009582:	469b      	mov	fp, r3
 8009584:	45b1      	cmp	r9, r6
 8009586:	d337      	bcc.n	80095f8 <__gethex+0x1d0>
 8009588:	f845 bb04 	str.w	fp, [r5], #4
 800958c:	eba5 050a 	sub.w	r5, r5, sl
 8009590:	10ad      	asrs	r5, r5, #2
 8009592:	6125      	str	r5, [r4, #16]
 8009594:	4658      	mov	r0, fp
 8009596:	f000 fb1d 	bl	8009bd4 <__hi0bits>
 800959a:	016d      	lsls	r5, r5, #5
 800959c:	f8d8 6000 	ldr.w	r6, [r8]
 80095a0:	1a2d      	subs	r5, r5, r0
 80095a2:	42b5      	cmp	r5, r6
 80095a4:	dd54      	ble.n	8009650 <__gethex+0x228>
 80095a6:	1bad      	subs	r5, r5, r6
 80095a8:	4629      	mov	r1, r5
 80095aa:	4620      	mov	r0, r4
 80095ac:	f000 fea5 	bl	800a2fa <__any_on>
 80095b0:	4681      	mov	r9, r0
 80095b2:	b178      	cbz	r0, 80095d4 <__gethex+0x1ac>
 80095b4:	f04f 0901 	mov.w	r9, #1
 80095b8:	1e6b      	subs	r3, r5, #1
 80095ba:	1159      	asrs	r1, r3, #5
 80095bc:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 80095c0:	f003 021f 	and.w	r2, r3, #31
 80095c4:	fa09 f202 	lsl.w	r2, r9, r2
 80095c8:	420a      	tst	r2, r1
 80095ca:	d003      	beq.n	80095d4 <__gethex+0x1ac>
 80095cc:	454b      	cmp	r3, r9
 80095ce:	dc36      	bgt.n	800963e <__gethex+0x216>
 80095d0:	f04f 0902 	mov.w	r9, #2
 80095d4:	4629      	mov	r1, r5
 80095d6:	4620      	mov	r0, r4
 80095d8:	f7ff febe 	bl	8009358 <rshift>
 80095dc:	442f      	add	r7, r5
 80095de:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80095e2:	42bb      	cmp	r3, r7
 80095e4:	da42      	bge.n	800966c <__gethex+0x244>
 80095e6:	4621      	mov	r1, r4
 80095e8:	9801      	ldr	r0, [sp, #4]
 80095ea:	f000 fa41 	bl	8009a70 <_Bfree>
 80095ee:	2300      	movs	r3, #0
 80095f0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80095f2:	25a3      	movs	r5, #163	@ 0xa3
 80095f4:	6013      	str	r3, [r2, #0]
 80095f6:	e793      	b.n	8009520 <__gethex+0xf8>
 80095f8:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 80095fc:	2a2e      	cmp	r2, #46	@ 0x2e
 80095fe:	d012      	beq.n	8009626 <__gethex+0x1fe>
 8009600:	2b20      	cmp	r3, #32
 8009602:	d104      	bne.n	800960e <__gethex+0x1e6>
 8009604:	f845 bb04 	str.w	fp, [r5], #4
 8009608:	f04f 0b00 	mov.w	fp, #0
 800960c:	465b      	mov	r3, fp
 800960e:	7830      	ldrb	r0, [r6, #0]
 8009610:	9303      	str	r3, [sp, #12]
 8009612:	f7ff fef4 	bl	80093fe <__hexdig_fun>
 8009616:	9b03      	ldr	r3, [sp, #12]
 8009618:	f000 000f 	and.w	r0, r0, #15
 800961c:	4098      	lsls	r0, r3
 800961e:	ea4b 0b00 	orr.w	fp, fp, r0
 8009622:	3304      	adds	r3, #4
 8009624:	e7ae      	b.n	8009584 <__gethex+0x15c>
 8009626:	45b1      	cmp	r9, r6
 8009628:	d8ea      	bhi.n	8009600 <__gethex+0x1d8>
 800962a:	2201      	movs	r2, #1
 800962c:	4630      	mov	r0, r6
 800962e:	492a      	ldr	r1, [pc, #168]	@ (80096d8 <__gethex+0x2b0>)
 8009630:	9303      	str	r3, [sp, #12]
 8009632:	f7fe fec2 	bl	80083ba <strncmp>
 8009636:	9b03      	ldr	r3, [sp, #12]
 8009638:	2800      	cmp	r0, #0
 800963a:	d1e1      	bne.n	8009600 <__gethex+0x1d8>
 800963c:	e7a2      	b.n	8009584 <__gethex+0x15c>
 800963e:	4620      	mov	r0, r4
 8009640:	1ea9      	subs	r1, r5, #2
 8009642:	f000 fe5a 	bl	800a2fa <__any_on>
 8009646:	2800      	cmp	r0, #0
 8009648:	d0c2      	beq.n	80095d0 <__gethex+0x1a8>
 800964a:	f04f 0903 	mov.w	r9, #3
 800964e:	e7c1      	b.n	80095d4 <__gethex+0x1ac>
 8009650:	da09      	bge.n	8009666 <__gethex+0x23e>
 8009652:	1b75      	subs	r5, r6, r5
 8009654:	4621      	mov	r1, r4
 8009656:	462a      	mov	r2, r5
 8009658:	9801      	ldr	r0, [sp, #4]
 800965a:	f000 fc1f 	bl	8009e9c <__lshift>
 800965e:	4604      	mov	r4, r0
 8009660:	1b7f      	subs	r7, r7, r5
 8009662:	f100 0a14 	add.w	sl, r0, #20
 8009666:	f04f 0900 	mov.w	r9, #0
 800966a:	e7b8      	b.n	80095de <__gethex+0x1b6>
 800966c:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8009670:	42bd      	cmp	r5, r7
 8009672:	dd6f      	ble.n	8009754 <__gethex+0x32c>
 8009674:	1bed      	subs	r5, r5, r7
 8009676:	42ae      	cmp	r6, r5
 8009678:	dc34      	bgt.n	80096e4 <__gethex+0x2bc>
 800967a:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800967e:	2b02      	cmp	r3, #2
 8009680:	d022      	beq.n	80096c8 <__gethex+0x2a0>
 8009682:	2b03      	cmp	r3, #3
 8009684:	d024      	beq.n	80096d0 <__gethex+0x2a8>
 8009686:	2b01      	cmp	r3, #1
 8009688:	d115      	bne.n	80096b6 <__gethex+0x28e>
 800968a:	42ae      	cmp	r6, r5
 800968c:	d113      	bne.n	80096b6 <__gethex+0x28e>
 800968e:	2e01      	cmp	r6, #1
 8009690:	d10b      	bne.n	80096aa <__gethex+0x282>
 8009692:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8009696:	9a02      	ldr	r2, [sp, #8]
 8009698:	2562      	movs	r5, #98	@ 0x62
 800969a:	6013      	str	r3, [r2, #0]
 800969c:	2301      	movs	r3, #1
 800969e:	6123      	str	r3, [r4, #16]
 80096a0:	f8ca 3000 	str.w	r3, [sl]
 80096a4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80096a6:	601c      	str	r4, [r3, #0]
 80096a8:	e73a      	b.n	8009520 <__gethex+0xf8>
 80096aa:	4620      	mov	r0, r4
 80096ac:	1e71      	subs	r1, r6, #1
 80096ae:	f000 fe24 	bl	800a2fa <__any_on>
 80096b2:	2800      	cmp	r0, #0
 80096b4:	d1ed      	bne.n	8009692 <__gethex+0x26a>
 80096b6:	4621      	mov	r1, r4
 80096b8:	9801      	ldr	r0, [sp, #4]
 80096ba:	f000 f9d9 	bl	8009a70 <_Bfree>
 80096be:	2300      	movs	r3, #0
 80096c0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80096c2:	2550      	movs	r5, #80	@ 0x50
 80096c4:	6013      	str	r3, [r2, #0]
 80096c6:	e72b      	b.n	8009520 <__gethex+0xf8>
 80096c8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80096ca:	2b00      	cmp	r3, #0
 80096cc:	d1f3      	bne.n	80096b6 <__gethex+0x28e>
 80096ce:	e7e0      	b.n	8009692 <__gethex+0x26a>
 80096d0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80096d2:	2b00      	cmp	r3, #0
 80096d4:	d1dd      	bne.n	8009692 <__gethex+0x26a>
 80096d6:	e7ee      	b.n	80096b6 <__gethex+0x28e>
 80096d8:	0800bf06 	.word	0x0800bf06
 80096dc:	0800c0a6 	.word	0x0800c0a6
 80096e0:	0800c0b7 	.word	0x0800c0b7
 80096e4:	1e6f      	subs	r7, r5, #1
 80096e6:	f1b9 0f00 	cmp.w	r9, #0
 80096ea:	d130      	bne.n	800974e <__gethex+0x326>
 80096ec:	b127      	cbz	r7, 80096f8 <__gethex+0x2d0>
 80096ee:	4639      	mov	r1, r7
 80096f0:	4620      	mov	r0, r4
 80096f2:	f000 fe02 	bl	800a2fa <__any_on>
 80096f6:	4681      	mov	r9, r0
 80096f8:	2301      	movs	r3, #1
 80096fa:	4629      	mov	r1, r5
 80096fc:	1b76      	subs	r6, r6, r5
 80096fe:	2502      	movs	r5, #2
 8009700:	117a      	asrs	r2, r7, #5
 8009702:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 8009706:	f007 071f 	and.w	r7, r7, #31
 800970a:	40bb      	lsls	r3, r7
 800970c:	4213      	tst	r3, r2
 800970e:	4620      	mov	r0, r4
 8009710:	bf18      	it	ne
 8009712:	f049 0902 	orrne.w	r9, r9, #2
 8009716:	f7ff fe1f 	bl	8009358 <rshift>
 800971a:	f8d8 7004 	ldr.w	r7, [r8, #4]
 800971e:	f1b9 0f00 	cmp.w	r9, #0
 8009722:	d047      	beq.n	80097b4 <__gethex+0x38c>
 8009724:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8009728:	2b02      	cmp	r3, #2
 800972a:	d015      	beq.n	8009758 <__gethex+0x330>
 800972c:	2b03      	cmp	r3, #3
 800972e:	d017      	beq.n	8009760 <__gethex+0x338>
 8009730:	2b01      	cmp	r3, #1
 8009732:	d109      	bne.n	8009748 <__gethex+0x320>
 8009734:	f019 0f02 	tst.w	r9, #2
 8009738:	d006      	beq.n	8009748 <__gethex+0x320>
 800973a:	f8da 3000 	ldr.w	r3, [sl]
 800973e:	ea49 0903 	orr.w	r9, r9, r3
 8009742:	f019 0f01 	tst.w	r9, #1
 8009746:	d10e      	bne.n	8009766 <__gethex+0x33e>
 8009748:	f045 0510 	orr.w	r5, r5, #16
 800974c:	e032      	b.n	80097b4 <__gethex+0x38c>
 800974e:	f04f 0901 	mov.w	r9, #1
 8009752:	e7d1      	b.n	80096f8 <__gethex+0x2d0>
 8009754:	2501      	movs	r5, #1
 8009756:	e7e2      	b.n	800971e <__gethex+0x2f6>
 8009758:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800975a:	f1c3 0301 	rsb	r3, r3, #1
 800975e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8009760:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8009762:	2b00      	cmp	r3, #0
 8009764:	d0f0      	beq.n	8009748 <__gethex+0x320>
 8009766:	f04f 0c00 	mov.w	ip, #0
 800976a:	f8d4 b010 	ldr.w	fp, [r4, #16]
 800976e:	f104 0314 	add.w	r3, r4, #20
 8009772:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 8009776:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 800977a:	4618      	mov	r0, r3
 800977c:	f853 2b04 	ldr.w	r2, [r3], #4
 8009780:	f1b2 3fff 	cmp.w	r2, #4294967295
 8009784:	d01b      	beq.n	80097be <__gethex+0x396>
 8009786:	3201      	adds	r2, #1
 8009788:	6002      	str	r2, [r0, #0]
 800978a:	2d02      	cmp	r5, #2
 800978c:	f104 0314 	add.w	r3, r4, #20
 8009790:	d13c      	bne.n	800980c <__gethex+0x3e4>
 8009792:	f8d8 2000 	ldr.w	r2, [r8]
 8009796:	3a01      	subs	r2, #1
 8009798:	42b2      	cmp	r2, r6
 800979a:	d109      	bne.n	80097b0 <__gethex+0x388>
 800979c:	2201      	movs	r2, #1
 800979e:	1171      	asrs	r1, r6, #5
 80097a0:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80097a4:	f006 061f 	and.w	r6, r6, #31
 80097a8:	fa02 f606 	lsl.w	r6, r2, r6
 80097ac:	421e      	tst	r6, r3
 80097ae:	d13a      	bne.n	8009826 <__gethex+0x3fe>
 80097b0:	f045 0520 	orr.w	r5, r5, #32
 80097b4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80097b6:	601c      	str	r4, [r3, #0]
 80097b8:	9b02      	ldr	r3, [sp, #8]
 80097ba:	601f      	str	r7, [r3, #0]
 80097bc:	e6b0      	b.n	8009520 <__gethex+0xf8>
 80097be:	4299      	cmp	r1, r3
 80097c0:	f843 cc04 	str.w	ip, [r3, #-4]
 80097c4:	d8d9      	bhi.n	800977a <__gethex+0x352>
 80097c6:	68a3      	ldr	r3, [r4, #8]
 80097c8:	459b      	cmp	fp, r3
 80097ca:	db17      	blt.n	80097fc <__gethex+0x3d4>
 80097cc:	6861      	ldr	r1, [r4, #4]
 80097ce:	9801      	ldr	r0, [sp, #4]
 80097d0:	3101      	adds	r1, #1
 80097d2:	f000 f90d 	bl	80099f0 <_Balloc>
 80097d6:	4681      	mov	r9, r0
 80097d8:	b918      	cbnz	r0, 80097e2 <__gethex+0x3ba>
 80097da:	4602      	mov	r2, r0
 80097dc:	2184      	movs	r1, #132	@ 0x84
 80097de:	4b19      	ldr	r3, [pc, #100]	@ (8009844 <__gethex+0x41c>)
 80097e0:	e6c5      	b.n	800956e <__gethex+0x146>
 80097e2:	6922      	ldr	r2, [r4, #16]
 80097e4:	f104 010c 	add.w	r1, r4, #12
 80097e8:	3202      	adds	r2, #2
 80097ea:	0092      	lsls	r2, r2, #2
 80097ec:	300c      	adds	r0, #12
 80097ee:	f7fe fee8 	bl	80085c2 <memcpy>
 80097f2:	4621      	mov	r1, r4
 80097f4:	9801      	ldr	r0, [sp, #4]
 80097f6:	f000 f93b 	bl	8009a70 <_Bfree>
 80097fa:	464c      	mov	r4, r9
 80097fc:	6923      	ldr	r3, [r4, #16]
 80097fe:	1c5a      	adds	r2, r3, #1
 8009800:	6122      	str	r2, [r4, #16]
 8009802:	2201      	movs	r2, #1
 8009804:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8009808:	615a      	str	r2, [r3, #20]
 800980a:	e7be      	b.n	800978a <__gethex+0x362>
 800980c:	6922      	ldr	r2, [r4, #16]
 800980e:	455a      	cmp	r2, fp
 8009810:	dd0b      	ble.n	800982a <__gethex+0x402>
 8009812:	2101      	movs	r1, #1
 8009814:	4620      	mov	r0, r4
 8009816:	f7ff fd9f 	bl	8009358 <rshift>
 800981a:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800981e:	3701      	adds	r7, #1
 8009820:	42bb      	cmp	r3, r7
 8009822:	f6ff aee0 	blt.w	80095e6 <__gethex+0x1be>
 8009826:	2501      	movs	r5, #1
 8009828:	e7c2      	b.n	80097b0 <__gethex+0x388>
 800982a:	f016 061f 	ands.w	r6, r6, #31
 800982e:	d0fa      	beq.n	8009826 <__gethex+0x3fe>
 8009830:	4453      	add	r3, sl
 8009832:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8009836:	f000 f9cd 	bl	8009bd4 <__hi0bits>
 800983a:	f1c6 0620 	rsb	r6, r6, #32
 800983e:	42b0      	cmp	r0, r6
 8009840:	dbe7      	blt.n	8009812 <__gethex+0x3ea>
 8009842:	e7f0      	b.n	8009826 <__gethex+0x3fe>
 8009844:	0800c0a6 	.word	0x0800c0a6

08009848 <L_shift>:
 8009848:	f1c2 0208 	rsb	r2, r2, #8
 800984c:	0092      	lsls	r2, r2, #2
 800984e:	b570      	push	{r4, r5, r6, lr}
 8009850:	f1c2 0620 	rsb	r6, r2, #32
 8009854:	6843      	ldr	r3, [r0, #4]
 8009856:	6804      	ldr	r4, [r0, #0]
 8009858:	fa03 f506 	lsl.w	r5, r3, r6
 800985c:	432c      	orrs	r4, r5
 800985e:	40d3      	lsrs	r3, r2
 8009860:	6004      	str	r4, [r0, #0]
 8009862:	f840 3f04 	str.w	r3, [r0, #4]!
 8009866:	4288      	cmp	r0, r1
 8009868:	d3f4      	bcc.n	8009854 <L_shift+0xc>
 800986a:	bd70      	pop	{r4, r5, r6, pc}

0800986c <__match>:
 800986c:	b530      	push	{r4, r5, lr}
 800986e:	6803      	ldr	r3, [r0, #0]
 8009870:	3301      	adds	r3, #1
 8009872:	f811 4b01 	ldrb.w	r4, [r1], #1
 8009876:	b914      	cbnz	r4, 800987e <__match+0x12>
 8009878:	6003      	str	r3, [r0, #0]
 800987a:	2001      	movs	r0, #1
 800987c:	bd30      	pop	{r4, r5, pc}
 800987e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8009882:	f1a2 0541 	sub.w	r5, r2, #65	@ 0x41
 8009886:	2d19      	cmp	r5, #25
 8009888:	bf98      	it	ls
 800988a:	3220      	addls	r2, #32
 800988c:	42a2      	cmp	r2, r4
 800988e:	d0f0      	beq.n	8009872 <__match+0x6>
 8009890:	2000      	movs	r0, #0
 8009892:	e7f3      	b.n	800987c <__match+0x10>

08009894 <__hexnan>:
 8009894:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009898:	2500      	movs	r5, #0
 800989a:	680b      	ldr	r3, [r1, #0]
 800989c:	4682      	mov	sl, r0
 800989e:	115e      	asrs	r6, r3, #5
 80098a0:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 80098a4:	f013 031f 	ands.w	r3, r3, #31
 80098a8:	bf18      	it	ne
 80098aa:	3604      	addne	r6, #4
 80098ac:	1f37      	subs	r7, r6, #4
 80098ae:	4690      	mov	r8, r2
 80098b0:	46b9      	mov	r9, r7
 80098b2:	463c      	mov	r4, r7
 80098b4:	46ab      	mov	fp, r5
 80098b6:	b087      	sub	sp, #28
 80098b8:	6801      	ldr	r1, [r0, #0]
 80098ba:	9301      	str	r3, [sp, #4]
 80098bc:	f846 5c04 	str.w	r5, [r6, #-4]
 80098c0:	9502      	str	r5, [sp, #8]
 80098c2:	784a      	ldrb	r2, [r1, #1]
 80098c4:	1c4b      	adds	r3, r1, #1
 80098c6:	9303      	str	r3, [sp, #12]
 80098c8:	b342      	cbz	r2, 800991c <__hexnan+0x88>
 80098ca:	4610      	mov	r0, r2
 80098cc:	9105      	str	r1, [sp, #20]
 80098ce:	9204      	str	r2, [sp, #16]
 80098d0:	f7ff fd95 	bl	80093fe <__hexdig_fun>
 80098d4:	2800      	cmp	r0, #0
 80098d6:	d151      	bne.n	800997c <__hexnan+0xe8>
 80098d8:	9a04      	ldr	r2, [sp, #16]
 80098da:	9905      	ldr	r1, [sp, #20]
 80098dc:	2a20      	cmp	r2, #32
 80098de:	d818      	bhi.n	8009912 <__hexnan+0x7e>
 80098e0:	9b02      	ldr	r3, [sp, #8]
 80098e2:	459b      	cmp	fp, r3
 80098e4:	dd13      	ble.n	800990e <__hexnan+0x7a>
 80098e6:	454c      	cmp	r4, r9
 80098e8:	d206      	bcs.n	80098f8 <__hexnan+0x64>
 80098ea:	2d07      	cmp	r5, #7
 80098ec:	dc04      	bgt.n	80098f8 <__hexnan+0x64>
 80098ee:	462a      	mov	r2, r5
 80098f0:	4649      	mov	r1, r9
 80098f2:	4620      	mov	r0, r4
 80098f4:	f7ff ffa8 	bl	8009848 <L_shift>
 80098f8:	4544      	cmp	r4, r8
 80098fa:	d952      	bls.n	80099a2 <__hexnan+0x10e>
 80098fc:	2300      	movs	r3, #0
 80098fe:	f1a4 0904 	sub.w	r9, r4, #4
 8009902:	f844 3c04 	str.w	r3, [r4, #-4]
 8009906:	461d      	mov	r5, r3
 8009908:	464c      	mov	r4, r9
 800990a:	f8cd b008 	str.w	fp, [sp, #8]
 800990e:	9903      	ldr	r1, [sp, #12]
 8009910:	e7d7      	b.n	80098c2 <__hexnan+0x2e>
 8009912:	2a29      	cmp	r2, #41	@ 0x29
 8009914:	d157      	bne.n	80099c6 <__hexnan+0x132>
 8009916:	3102      	adds	r1, #2
 8009918:	f8ca 1000 	str.w	r1, [sl]
 800991c:	f1bb 0f00 	cmp.w	fp, #0
 8009920:	d051      	beq.n	80099c6 <__hexnan+0x132>
 8009922:	454c      	cmp	r4, r9
 8009924:	d206      	bcs.n	8009934 <__hexnan+0xa0>
 8009926:	2d07      	cmp	r5, #7
 8009928:	dc04      	bgt.n	8009934 <__hexnan+0xa0>
 800992a:	462a      	mov	r2, r5
 800992c:	4649      	mov	r1, r9
 800992e:	4620      	mov	r0, r4
 8009930:	f7ff ff8a 	bl	8009848 <L_shift>
 8009934:	4544      	cmp	r4, r8
 8009936:	d936      	bls.n	80099a6 <__hexnan+0x112>
 8009938:	4623      	mov	r3, r4
 800993a:	f1a8 0204 	sub.w	r2, r8, #4
 800993e:	f853 1b04 	ldr.w	r1, [r3], #4
 8009942:	429f      	cmp	r7, r3
 8009944:	f842 1f04 	str.w	r1, [r2, #4]!
 8009948:	d2f9      	bcs.n	800993e <__hexnan+0xaa>
 800994a:	1b3b      	subs	r3, r7, r4
 800994c:	f023 0303 	bic.w	r3, r3, #3
 8009950:	3304      	adds	r3, #4
 8009952:	3401      	adds	r4, #1
 8009954:	3e03      	subs	r6, #3
 8009956:	42b4      	cmp	r4, r6
 8009958:	bf88      	it	hi
 800995a:	2304      	movhi	r3, #4
 800995c:	2200      	movs	r2, #0
 800995e:	4443      	add	r3, r8
 8009960:	f843 2b04 	str.w	r2, [r3], #4
 8009964:	429f      	cmp	r7, r3
 8009966:	d2fb      	bcs.n	8009960 <__hexnan+0xcc>
 8009968:	683b      	ldr	r3, [r7, #0]
 800996a:	b91b      	cbnz	r3, 8009974 <__hexnan+0xe0>
 800996c:	4547      	cmp	r7, r8
 800996e:	d128      	bne.n	80099c2 <__hexnan+0x12e>
 8009970:	2301      	movs	r3, #1
 8009972:	603b      	str	r3, [r7, #0]
 8009974:	2005      	movs	r0, #5
 8009976:	b007      	add	sp, #28
 8009978:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800997c:	3501      	adds	r5, #1
 800997e:	2d08      	cmp	r5, #8
 8009980:	f10b 0b01 	add.w	fp, fp, #1
 8009984:	dd06      	ble.n	8009994 <__hexnan+0x100>
 8009986:	4544      	cmp	r4, r8
 8009988:	d9c1      	bls.n	800990e <__hexnan+0x7a>
 800998a:	2300      	movs	r3, #0
 800998c:	2501      	movs	r5, #1
 800998e:	f844 3c04 	str.w	r3, [r4, #-4]
 8009992:	3c04      	subs	r4, #4
 8009994:	6822      	ldr	r2, [r4, #0]
 8009996:	f000 000f 	and.w	r0, r0, #15
 800999a:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 800999e:	6020      	str	r0, [r4, #0]
 80099a0:	e7b5      	b.n	800990e <__hexnan+0x7a>
 80099a2:	2508      	movs	r5, #8
 80099a4:	e7b3      	b.n	800990e <__hexnan+0x7a>
 80099a6:	9b01      	ldr	r3, [sp, #4]
 80099a8:	2b00      	cmp	r3, #0
 80099aa:	d0dd      	beq.n	8009968 <__hexnan+0xd4>
 80099ac:	f04f 32ff 	mov.w	r2, #4294967295
 80099b0:	f1c3 0320 	rsb	r3, r3, #32
 80099b4:	40da      	lsrs	r2, r3
 80099b6:	f856 3c04 	ldr.w	r3, [r6, #-4]
 80099ba:	4013      	ands	r3, r2
 80099bc:	f846 3c04 	str.w	r3, [r6, #-4]
 80099c0:	e7d2      	b.n	8009968 <__hexnan+0xd4>
 80099c2:	3f04      	subs	r7, #4
 80099c4:	e7d0      	b.n	8009968 <__hexnan+0xd4>
 80099c6:	2004      	movs	r0, #4
 80099c8:	e7d5      	b.n	8009976 <__hexnan+0xe2>

080099ca <__ascii_mbtowc>:
 80099ca:	b082      	sub	sp, #8
 80099cc:	b901      	cbnz	r1, 80099d0 <__ascii_mbtowc+0x6>
 80099ce:	a901      	add	r1, sp, #4
 80099d0:	b142      	cbz	r2, 80099e4 <__ascii_mbtowc+0x1a>
 80099d2:	b14b      	cbz	r3, 80099e8 <__ascii_mbtowc+0x1e>
 80099d4:	7813      	ldrb	r3, [r2, #0]
 80099d6:	600b      	str	r3, [r1, #0]
 80099d8:	7812      	ldrb	r2, [r2, #0]
 80099da:	1e10      	subs	r0, r2, #0
 80099dc:	bf18      	it	ne
 80099de:	2001      	movne	r0, #1
 80099e0:	b002      	add	sp, #8
 80099e2:	4770      	bx	lr
 80099e4:	4610      	mov	r0, r2
 80099e6:	e7fb      	b.n	80099e0 <__ascii_mbtowc+0x16>
 80099e8:	f06f 0001 	mvn.w	r0, #1
 80099ec:	e7f8      	b.n	80099e0 <__ascii_mbtowc+0x16>
	...

080099f0 <_Balloc>:
 80099f0:	b570      	push	{r4, r5, r6, lr}
 80099f2:	69c6      	ldr	r6, [r0, #28]
 80099f4:	4604      	mov	r4, r0
 80099f6:	460d      	mov	r5, r1
 80099f8:	b976      	cbnz	r6, 8009a18 <_Balloc+0x28>
 80099fa:	2010      	movs	r0, #16
 80099fc:	f7fc ff90 	bl	8006920 <malloc>
 8009a00:	4602      	mov	r2, r0
 8009a02:	61e0      	str	r0, [r4, #28]
 8009a04:	b920      	cbnz	r0, 8009a10 <_Balloc+0x20>
 8009a06:	216b      	movs	r1, #107	@ 0x6b
 8009a08:	4b17      	ldr	r3, [pc, #92]	@ (8009a68 <_Balloc+0x78>)
 8009a0a:	4818      	ldr	r0, [pc, #96]	@ (8009a6c <_Balloc+0x7c>)
 8009a0c:	f7fe fdee 	bl	80085ec <__assert_func>
 8009a10:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8009a14:	6006      	str	r6, [r0, #0]
 8009a16:	60c6      	str	r6, [r0, #12]
 8009a18:	69e6      	ldr	r6, [r4, #28]
 8009a1a:	68f3      	ldr	r3, [r6, #12]
 8009a1c:	b183      	cbz	r3, 8009a40 <_Balloc+0x50>
 8009a1e:	69e3      	ldr	r3, [r4, #28]
 8009a20:	68db      	ldr	r3, [r3, #12]
 8009a22:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8009a26:	b9b8      	cbnz	r0, 8009a58 <_Balloc+0x68>
 8009a28:	2101      	movs	r1, #1
 8009a2a:	fa01 f605 	lsl.w	r6, r1, r5
 8009a2e:	1d72      	adds	r2, r6, #5
 8009a30:	4620      	mov	r0, r4
 8009a32:	0092      	lsls	r2, r2, #2
 8009a34:	f000 ff13 	bl	800a85e <_calloc_r>
 8009a38:	b160      	cbz	r0, 8009a54 <_Balloc+0x64>
 8009a3a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8009a3e:	e00e      	b.n	8009a5e <_Balloc+0x6e>
 8009a40:	2221      	movs	r2, #33	@ 0x21
 8009a42:	2104      	movs	r1, #4
 8009a44:	4620      	mov	r0, r4
 8009a46:	f000 ff0a 	bl	800a85e <_calloc_r>
 8009a4a:	69e3      	ldr	r3, [r4, #28]
 8009a4c:	60f0      	str	r0, [r6, #12]
 8009a4e:	68db      	ldr	r3, [r3, #12]
 8009a50:	2b00      	cmp	r3, #0
 8009a52:	d1e4      	bne.n	8009a1e <_Balloc+0x2e>
 8009a54:	2000      	movs	r0, #0
 8009a56:	bd70      	pop	{r4, r5, r6, pc}
 8009a58:	6802      	ldr	r2, [r0, #0]
 8009a5a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8009a5e:	2300      	movs	r3, #0
 8009a60:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8009a64:	e7f7      	b.n	8009a56 <_Balloc+0x66>
 8009a66:	bf00      	nop
 8009a68:	0800bf8c 	.word	0x0800bf8c
 8009a6c:	0800c117 	.word	0x0800c117

08009a70 <_Bfree>:
 8009a70:	b570      	push	{r4, r5, r6, lr}
 8009a72:	69c6      	ldr	r6, [r0, #28]
 8009a74:	4605      	mov	r5, r0
 8009a76:	460c      	mov	r4, r1
 8009a78:	b976      	cbnz	r6, 8009a98 <_Bfree+0x28>
 8009a7a:	2010      	movs	r0, #16
 8009a7c:	f7fc ff50 	bl	8006920 <malloc>
 8009a80:	4602      	mov	r2, r0
 8009a82:	61e8      	str	r0, [r5, #28]
 8009a84:	b920      	cbnz	r0, 8009a90 <_Bfree+0x20>
 8009a86:	218f      	movs	r1, #143	@ 0x8f
 8009a88:	4b08      	ldr	r3, [pc, #32]	@ (8009aac <_Bfree+0x3c>)
 8009a8a:	4809      	ldr	r0, [pc, #36]	@ (8009ab0 <_Bfree+0x40>)
 8009a8c:	f7fe fdae 	bl	80085ec <__assert_func>
 8009a90:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8009a94:	6006      	str	r6, [r0, #0]
 8009a96:	60c6      	str	r6, [r0, #12]
 8009a98:	b13c      	cbz	r4, 8009aaa <_Bfree+0x3a>
 8009a9a:	69eb      	ldr	r3, [r5, #28]
 8009a9c:	6862      	ldr	r2, [r4, #4]
 8009a9e:	68db      	ldr	r3, [r3, #12]
 8009aa0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8009aa4:	6021      	str	r1, [r4, #0]
 8009aa6:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8009aaa:	bd70      	pop	{r4, r5, r6, pc}
 8009aac:	0800bf8c 	.word	0x0800bf8c
 8009ab0:	0800c117 	.word	0x0800c117

08009ab4 <__multadd>:
 8009ab4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009ab8:	4607      	mov	r7, r0
 8009aba:	460c      	mov	r4, r1
 8009abc:	461e      	mov	r6, r3
 8009abe:	2000      	movs	r0, #0
 8009ac0:	690d      	ldr	r5, [r1, #16]
 8009ac2:	f101 0c14 	add.w	ip, r1, #20
 8009ac6:	f8dc 3000 	ldr.w	r3, [ip]
 8009aca:	3001      	adds	r0, #1
 8009acc:	b299      	uxth	r1, r3
 8009ace:	fb02 6101 	mla	r1, r2, r1, r6
 8009ad2:	0c1e      	lsrs	r6, r3, #16
 8009ad4:	0c0b      	lsrs	r3, r1, #16
 8009ad6:	fb02 3306 	mla	r3, r2, r6, r3
 8009ada:	b289      	uxth	r1, r1
 8009adc:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8009ae0:	4285      	cmp	r5, r0
 8009ae2:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8009ae6:	f84c 1b04 	str.w	r1, [ip], #4
 8009aea:	dcec      	bgt.n	8009ac6 <__multadd+0x12>
 8009aec:	b30e      	cbz	r6, 8009b32 <__multadd+0x7e>
 8009aee:	68a3      	ldr	r3, [r4, #8]
 8009af0:	42ab      	cmp	r3, r5
 8009af2:	dc19      	bgt.n	8009b28 <__multadd+0x74>
 8009af4:	6861      	ldr	r1, [r4, #4]
 8009af6:	4638      	mov	r0, r7
 8009af8:	3101      	adds	r1, #1
 8009afa:	f7ff ff79 	bl	80099f0 <_Balloc>
 8009afe:	4680      	mov	r8, r0
 8009b00:	b928      	cbnz	r0, 8009b0e <__multadd+0x5a>
 8009b02:	4602      	mov	r2, r0
 8009b04:	21ba      	movs	r1, #186	@ 0xba
 8009b06:	4b0c      	ldr	r3, [pc, #48]	@ (8009b38 <__multadd+0x84>)
 8009b08:	480c      	ldr	r0, [pc, #48]	@ (8009b3c <__multadd+0x88>)
 8009b0a:	f7fe fd6f 	bl	80085ec <__assert_func>
 8009b0e:	6922      	ldr	r2, [r4, #16]
 8009b10:	f104 010c 	add.w	r1, r4, #12
 8009b14:	3202      	adds	r2, #2
 8009b16:	0092      	lsls	r2, r2, #2
 8009b18:	300c      	adds	r0, #12
 8009b1a:	f7fe fd52 	bl	80085c2 <memcpy>
 8009b1e:	4621      	mov	r1, r4
 8009b20:	4638      	mov	r0, r7
 8009b22:	f7ff ffa5 	bl	8009a70 <_Bfree>
 8009b26:	4644      	mov	r4, r8
 8009b28:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8009b2c:	3501      	adds	r5, #1
 8009b2e:	615e      	str	r6, [r3, #20]
 8009b30:	6125      	str	r5, [r4, #16]
 8009b32:	4620      	mov	r0, r4
 8009b34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009b38:	0800c0a6 	.word	0x0800c0a6
 8009b3c:	0800c117 	.word	0x0800c117

08009b40 <__s2b>:
 8009b40:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009b44:	4615      	mov	r5, r2
 8009b46:	2209      	movs	r2, #9
 8009b48:	461f      	mov	r7, r3
 8009b4a:	3308      	adds	r3, #8
 8009b4c:	460c      	mov	r4, r1
 8009b4e:	fb93 f3f2 	sdiv	r3, r3, r2
 8009b52:	4606      	mov	r6, r0
 8009b54:	2201      	movs	r2, #1
 8009b56:	2100      	movs	r1, #0
 8009b58:	429a      	cmp	r2, r3
 8009b5a:	db09      	blt.n	8009b70 <__s2b+0x30>
 8009b5c:	4630      	mov	r0, r6
 8009b5e:	f7ff ff47 	bl	80099f0 <_Balloc>
 8009b62:	b940      	cbnz	r0, 8009b76 <__s2b+0x36>
 8009b64:	4602      	mov	r2, r0
 8009b66:	21d3      	movs	r1, #211	@ 0xd3
 8009b68:	4b18      	ldr	r3, [pc, #96]	@ (8009bcc <__s2b+0x8c>)
 8009b6a:	4819      	ldr	r0, [pc, #100]	@ (8009bd0 <__s2b+0x90>)
 8009b6c:	f7fe fd3e 	bl	80085ec <__assert_func>
 8009b70:	0052      	lsls	r2, r2, #1
 8009b72:	3101      	adds	r1, #1
 8009b74:	e7f0      	b.n	8009b58 <__s2b+0x18>
 8009b76:	9b08      	ldr	r3, [sp, #32]
 8009b78:	2d09      	cmp	r5, #9
 8009b7a:	6143      	str	r3, [r0, #20]
 8009b7c:	f04f 0301 	mov.w	r3, #1
 8009b80:	6103      	str	r3, [r0, #16]
 8009b82:	dd16      	ble.n	8009bb2 <__s2b+0x72>
 8009b84:	f104 0909 	add.w	r9, r4, #9
 8009b88:	46c8      	mov	r8, r9
 8009b8a:	442c      	add	r4, r5
 8009b8c:	f818 3b01 	ldrb.w	r3, [r8], #1
 8009b90:	4601      	mov	r1, r0
 8009b92:	220a      	movs	r2, #10
 8009b94:	4630      	mov	r0, r6
 8009b96:	3b30      	subs	r3, #48	@ 0x30
 8009b98:	f7ff ff8c 	bl	8009ab4 <__multadd>
 8009b9c:	45a0      	cmp	r8, r4
 8009b9e:	d1f5      	bne.n	8009b8c <__s2b+0x4c>
 8009ba0:	f1a5 0408 	sub.w	r4, r5, #8
 8009ba4:	444c      	add	r4, r9
 8009ba6:	1b2d      	subs	r5, r5, r4
 8009ba8:	1963      	adds	r3, r4, r5
 8009baa:	42bb      	cmp	r3, r7
 8009bac:	db04      	blt.n	8009bb8 <__s2b+0x78>
 8009bae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8009bb2:	2509      	movs	r5, #9
 8009bb4:	340a      	adds	r4, #10
 8009bb6:	e7f6      	b.n	8009ba6 <__s2b+0x66>
 8009bb8:	f814 3b01 	ldrb.w	r3, [r4], #1
 8009bbc:	4601      	mov	r1, r0
 8009bbe:	220a      	movs	r2, #10
 8009bc0:	4630      	mov	r0, r6
 8009bc2:	3b30      	subs	r3, #48	@ 0x30
 8009bc4:	f7ff ff76 	bl	8009ab4 <__multadd>
 8009bc8:	e7ee      	b.n	8009ba8 <__s2b+0x68>
 8009bca:	bf00      	nop
 8009bcc:	0800c0a6 	.word	0x0800c0a6
 8009bd0:	0800c117 	.word	0x0800c117

08009bd4 <__hi0bits>:
 8009bd4:	4603      	mov	r3, r0
 8009bd6:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8009bda:	bf3a      	itte	cc
 8009bdc:	0403      	lslcc	r3, r0, #16
 8009bde:	2010      	movcc	r0, #16
 8009be0:	2000      	movcs	r0, #0
 8009be2:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8009be6:	bf3c      	itt	cc
 8009be8:	021b      	lslcc	r3, r3, #8
 8009bea:	3008      	addcc	r0, #8
 8009bec:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8009bf0:	bf3c      	itt	cc
 8009bf2:	011b      	lslcc	r3, r3, #4
 8009bf4:	3004      	addcc	r0, #4
 8009bf6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8009bfa:	bf3c      	itt	cc
 8009bfc:	009b      	lslcc	r3, r3, #2
 8009bfe:	3002      	addcc	r0, #2
 8009c00:	2b00      	cmp	r3, #0
 8009c02:	db05      	blt.n	8009c10 <__hi0bits+0x3c>
 8009c04:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8009c08:	f100 0001 	add.w	r0, r0, #1
 8009c0c:	bf08      	it	eq
 8009c0e:	2020      	moveq	r0, #32
 8009c10:	4770      	bx	lr

08009c12 <__lo0bits>:
 8009c12:	6803      	ldr	r3, [r0, #0]
 8009c14:	4602      	mov	r2, r0
 8009c16:	f013 0007 	ands.w	r0, r3, #7
 8009c1a:	d00b      	beq.n	8009c34 <__lo0bits+0x22>
 8009c1c:	07d9      	lsls	r1, r3, #31
 8009c1e:	d421      	bmi.n	8009c64 <__lo0bits+0x52>
 8009c20:	0798      	lsls	r0, r3, #30
 8009c22:	bf49      	itett	mi
 8009c24:	085b      	lsrmi	r3, r3, #1
 8009c26:	089b      	lsrpl	r3, r3, #2
 8009c28:	2001      	movmi	r0, #1
 8009c2a:	6013      	strmi	r3, [r2, #0]
 8009c2c:	bf5c      	itt	pl
 8009c2e:	2002      	movpl	r0, #2
 8009c30:	6013      	strpl	r3, [r2, #0]
 8009c32:	4770      	bx	lr
 8009c34:	b299      	uxth	r1, r3
 8009c36:	b909      	cbnz	r1, 8009c3c <__lo0bits+0x2a>
 8009c38:	2010      	movs	r0, #16
 8009c3a:	0c1b      	lsrs	r3, r3, #16
 8009c3c:	b2d9      	uxtb	r1, r3
 8009c3e:	b909      	cbnz	r1, 8009c44 <__lo0bits+0x32>
 8009c40:	3008      	adds	r0, #8
 8009c42:	0a1b      	lsrs	r3, r3, #8
 8009c44:	0719      	lsls	r1, r3, #28
 8009c46:	bf04      	itt	eq
 8009c48:	091b      	lsreq	r3, r3, #4
 8009c4a:	3004      	addeq	r0, #4
 8009c4c:	0799      	lsls	r1, r3, #30
 8009c4e:	bf04      	itt	eq
 8009c50:	089b      	lsreq	r3, r3, #2
 8009c52:	3002      	addeq	r0, #2
 8009c54:	07d9      	lsls	r1, r3, #31
 8009c56:	d403      	bmi.n	8009c60 <__lo0bits+0x4e>
 8009c58:	085b      	lsrs	r3, r3, #1
 8009c5a:	f100 0001 	add.w	r0, r0, #1
 8009c5e:	d003      	beq.n	8009c68 <__lo0bits+0x56>
 8009c60:	6013      	str	r3, [r2, #0]
 8009c62:	4770      	bx	lr
 8009c64:	2000      	movs	r0, #0
 8009c66:	4770      	bx	lr
 8009c68:	2020      	movs	r0, #32
 8009c6a:	4770      	bx	lr

08009c6c <__i2b>:
 8009c6c:	b510      	push	{r4, lr}
 8009c6e:	460c      	mov	r4, r1
 8009c70:	2101      	movs	r1, #1
 8009c72:	f7ff febd 	bl	80099f0 <_Balloc>
 8009c76:	4602      	mov	r2, r0
 8009c78:	b928      	cbnz	r0, 8009c86 <__i2b+0x1a>
 8009c7a:	f240 1145 	movw	r1, #325	@ 0x145
 8009c7e:	4b04      	ldr	r3, [pc, #16]	@ (8009c90 <__i2b+0x24>)
 8009c80:	4804      	ldr	r0, [pc, #16]	@ (8009c94 <__i2b+0x28>)
 8009c82:	f7fe fcb3 	bl	80085ec <__assert_func>
 8009c86:	2301      	movs	r3, #1
 8009c88:	6144      	str	r4, [r0, #20]
 8009c8a:	6103      	str	r3, [r0, #16]
 8009c8c:	bd10      	pop	{r4, pc}
 8009c8e:	bf00      	nop
 8009c90:	0800c0a6 	.word	0x0800c0a6
 8009c94:	0800c117 	.word	0x0800c117

08009c98 <__multiply>:
 8009c98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009c9c:	4614      	mov	r4, r2
 8009c9e:	690a      	ldr	r2, [r1, #16]
 8009ca0:	6923      	ldr	r3, [r4, #16]
 8009ca2:	460f      	mov	r7, r1
 8009ca4:	429a      	cmp	r2, r3
 8009ca6:	bfa2      	ittt	ge
 8009ca8:	4623      	movge	r3, r4
 8009caa:	460c      	movge	r4, r1
 8009cac:	461f      	movge	r7, r3
 8009cae:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8009cb2:	f8d7 9010 	ldr.w	r9, [r7, #16]
 8009cb6:	68a3      	ldr	r3, [r4, #8]
 8009cb8:	6861      	ldr	r1, [r4, #4]
 8009cba:	eb0a 0609 	add.w	r6, sl, r9
 8009cbe:	42b3      	cmp	r3, r6
 8009cc0:	b085      	sub	sp, #20
 8009cc2:	bfb8      	it	lt
 8009cc4:	3101      	addlt	r1, #1
 8009cc6:	f7ff fe93 	bl	80099f0 <_Balloc>
 8009cca:	b930      	cbnz	r0, 8009cda <__multiply+0x42>
 8009ccc:	4602      	mov	r2, r0
 8009cce:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8009cd2:	4b43      	ldr	r3, [pc, #268]	@ (8009de0 <__multiply+0x148>)
 8009cd4:	4843      	ldr	r0, [pc, #268]	@ (8009de4 <__multiply+0x14c>)
 8009cd6:	f7fe fc89 	bl	80085ec <__assert_func>
 8009cda:	f100 0514 	add.w	r5, r0, #20
 8009cde:	462b      	mov	r3, r5
 8009ce0:	2200      	movs	r2, #0
 8009ce2:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8009ce6:	4543      	cmp	r3, r8
 8009ce8:	d321      	bcc.n	8009d2e <__multiply+0x96>
 8009cea:	f107 0114 	add.w	r1, r7, #20
 8009cee:	f104 0214 	add.w	r2, r4, #20
 8009cf2:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 8009cf6:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 8009cfa:	9302      	str	r3, [sp, #8]
 8009cfc:	1b13      	subs	r3, r2, r4
 8009cfe:	3b15      	subs	r3, #21
 8009d00:	f023 0303 	bic.w	r3, r3, #3
 8009d04:	3304      	adds	r3, #4
 8009d06:	f104 0715 	add.w	r7, r4, #21
 8009d0a:	42ba      	cmp	r2, r7
 8009d0c:	bf38      	it	cc
 8009d0e:	2304      	movcc	r3, #4
 8009d10:	9301      	str	r3, [sp, #4]
 8009d12:	9b02      	ldr	r3, [sp, #8]
 8009d14:	9103      	str	r1, [sp, #12]
 8009d16:	428b      	cmp	r3, r1
 8009d18:	d80c      	bhi.n	8009d34 <__multiply+0x9c>
 8009d1a:	2e00      	cmp	r6, #0
 8009d1c:	dd03      	ble.n	8009d26 <__multiply+0x8e>
 8009d1e:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8009d22:	2b00      	cmp	r3, #0
 8009d24:	d05a      	beq.n	8009ddc <__multiply+0x144>
 8009d26:	6106      	str	r6, [r0, #16]
 8009d28:	b005      	add	sp, #20
 8009d2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009d2e:	f843 2b04 	str.w	r2, [r3], #4
 8009d32:	e7d8      	b.n	8009ce6 <__multiply+0x4e>
 8009d34:	f8b1 a000 	ldrh.w	sl, [r1]
 8009d38:	f1ba 0f00 	cmp.w	sl, #0
 8009d3c:	d023      	beq.n	8009d86 <__multiply+0xee>
 8009d3e:	46a9      	mov	r9, r5
 8009d40:	f04f 0c00 	mov.w	ip, #0
 8009d44:	f104 0e14 	add.w	lr, r4, #20
 8009d48:	f85e 7b04 	ldr.w	r7, [lr], #4
 8009d4c:	f8d9 3000 	ldr.w	r3, [r9]
 8009d50:	fa1f fb87 	uxth.w	fp, r7
 8009d54:	b29b      	uxth	r3, r3
 8009d56:	fb0a 330b 	mla	r3, sl, fp, r3
 8009d5a:	4463      	add	r3, ip
 8009d5c:	f8d9 c000 	ldr.w	ip, [r9]
 8009d60:	0c3f      	lsrs	r7, r7, #16
 8009d62:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8009d66:	fb0a c707 	mla	r7, sl, r7, ip
 8009d6a:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 8009d6e:	b29b      	uxth	r3, r3
 8009d70:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8009d74:	4572      	cmp	r2, lr
 8009d76:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8009d7a:	f849 3b04 	str.w	r3, [r9], #4
 8009d7e:	d8e3      	bhi.n	8009d48 <__multiply+0xb0>
 8009d80:	9b01      	ldr	r3, [sp, #4]
 8009d82:	f845 c003 	str.w	ip, [r5, r3]
 8009d86:	9b03      	ldr	r3, [sp, #12]
 8009d88:	3104      	adds	r1, #4
 8009d8a:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8009d8e:	f1b9 0f00 	cmp.w	r9, #0
 8009d92:	d021      	beq.n	8009dd8 <__multiply+0x140>
 8009d94:	46ae      	mov	lr, r5
 8009d96:	f04f 0a00 	mov.w	sl, #0
 8009d9a:	682b      	ldr	r3, [r5, #0]
 8009d9c:	f104 0c14 	add.w	ip, r4, #20
 8009da0:	f8bc b000 	ldrh.w	fp, [ip]
 8009da4:	f8be 7002 	ldrh.w	r7, [lr, #2]
 8009da8:	b29b      	uxth	r3, r3
 8009daa:	fb09 770b 	mla	r7, r9, fp, r7
 8009dae:	4457      	add	r7, sl
 8009db0:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8009db4:	f84e 3b04 	str.w	r3, [lr], #4
 8009db8:	f85c 3b04 	ldr.w	r3, [ip], #4
 8009dbc:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8009dc0:	f8be 3000 	ldrh.w	r3, [lr]
 8009dc4:	4562      	cmp	r2, ip
 8009dc6:	fb09 330a 	mla	r3, r9, sl, r3
 8009dca:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 8009dce:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8009dd2:	d8e5      	bhi.n	8009da0 <__multiply+0x108>
 8009dd4:	9f01      	ldr	r7, [sp, #4]
 8009dd6:	51eb      	str	r3, [r5, r7]
 8009dd8:	3504      	adds	r5, #4
 8009dda:	e79a      	b.n	8009d12 <__multiply+0x7a>
 8009ddc:	3e01      	subs	r6, #1
 8009dde:	e79c      	b.n	8009d1a <__multiply+0x82>
 8009de0:	0800c0a6 	.word	0x0800c0a6
 8009de4:	0800c117 	.word	0x0800c117

08009de8 <__pow5mult>:
 8009de8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009dec:	4615      	mov	r5, r2
 8009dee:	f012 0203 	ands.w	r2, r2, #3
 8009df2:	4607      	mov	r7, r0
 8009df4:	460e      	mov	r6, r1
 8009df6:	d007      	beq.n	8009e08 <__pow5mult+0x20>
 8009df8:	4c25      	ldr	r4, [pc, #148]	@ (8009e90 <__pow5mult+0xa8>)
 8009dfa:	3a01      	subs	r2, #1
 8009dfc:	2300      	movs	r3, #0
 8009dfe:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8009e02:	f7ff fe57 	bl	8009ab4 <__multadd>
 8009e06:	4606      	mov	r6, r0
 8009e08:	10ad      	asrs	r5, r5, #2
 8009e0a:	d03d      	beq.n	8009e88 <__pow5mult+0xa0>
 8009e0c:	69fc      	ldr	r4, [r7, #28]
 8009e0e:	b97c      	cbnz	r4, 8009e30 <__pow5mult+0x48>
 8009e10:	2010      	movs	r0, #16
 8009e12:	f7fc fd85 	bl	8006920 <malloc>
 8009e16:	4602      	mov	r2, r0
 8009e18:	61f8      	str	r0, [r7, #28]
 8009e1a:	b928      	cbnz	r0, 8009e28 <__pow5mult+0x40>
 8009e1c:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8009e20:	4b1c      	ldr	r3, [pc, #112]	@ (8009e94 <__pow5mult+0xac>)
 8009e22:	481d      	ldr	r0, [pc, #116]	@ (8009e98 <__pow5mult+0xb0>)
 8009e24:	f7fe fbe2 	bl	80085ec <__assert_func>
 8009e28:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8009e2c:	6004      	str	r4, [r0, #0]
 8009e2e:	60c4      	str	r4, [r0, #12]
 8009e30:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8009e34:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8009e38:	b94c      	cbnz	r4, 8009e4e <__pow5mult+0x66>
 8009e3a:	f240 2171 	movw	r1, #625	@ 0x271
 8009e3e:	4638      	mov	r0, r7
 8009e40:	f7ff ff14 	bl	8009c6c <__i2b>
 8009e44:	2300      	movs	r3, #0
 8009e46:	4604      	mov	r4, r0
 8009e48:	f8c8 0008 	str.w	r0, [r8, #8]
 8009e4c:	6003      	str	r3, [r0, #0]
 8009e4e:	f04f 0900 	mov.w	r9, #0
 8009e52:	07eb      	lsls	r3, r5, #31
 8009e54:	d50a      	bpl.n	8009e6c <__pow5mult+0x84>
 8009e56:	4631      	mov	r1, r6
 8009e58:	4622      	mov	r2, r4
 8009e5a:	4638      	mov	r0, r7
 8009e5c:	f7ff ff1c 	bl	8009c98 <__multiply>
 8009e60:	4680      	mov	r8, r0
 8009e62:	4631      	mov	r1, r6
 8009e64:	4638      	mov	r0, r7
 8009e66:	f7ff fe03 	bl	8009a70 <_Bfree>
 8009e6a:	4646      	mov	r6, r8
 8009e6c:	106d      	asrs	r5, r5, #1
 8009e6e:	d00b      	beq.n	8009e88 <__pow5mult+0xa0>
 8009e70:	6820      	ldr	r0, [r4, #0]
 8009e72:	b938      	cbnz	r0, 8009e84 <__pow5mult+0x9c>
 8009e74:	4622      	mov	r2, r4
 8009e76:	4621      	mov	r1, r4
 8009e78:	4638      	mov	r0, r7
 8009e7a:	f7ff ff0d 	bl	8009c98 <__multiply>
 8009e7e:	6020      	str	r0, [r4, #0]
 8009e80:	f8c0 9000 	str.w	r9, [r0]
 8009e84:	4604      	mov	r4, r0
 8009e86:	e7e4      	b.n	8009e52 <__pow5mult+0x6a>
 8009e88:	4630      	mov	r0, r6
 8009e8a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8009e8e:	bf00      	nop
 8009e90:	0800c170 	.word	0x0800c170
 8009e94:	0800bf8c 	.word	0x0800bf8c
 8009e98:	0800c117 	.word	0x0800c117

08009e9c <__lshift>:
 8009e9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009ea0:	460c      	mov	r4, r1
 8009ea2:	4607      	mov	r7, r0
 8009ea4:	4691      	mov	r9, r2
 8009ea6:	6923      	ldr	r3, [r4, #16]
 8009ea8:	6849      	ldr	r1, [r1, #4]
 8009eaa:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8009eae:	68a3      	ldr	r3, [r4, #8]
 8009eb0:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8009eb4:	f108 0601 	add.w	r6, r8, #1
 8009eb8:	42b3      	cmp	r3, r6
 8009eba:	db0b      	blt.n	8009ed4 <__lshift+0x38>
 8009ebc:	4638      	mov	r0, r7
 8009ebe:	f7ff fd97 	bl	80099f0 <_Balloc>
 8009ec2:	4605      	mov	r5, r0
 8009ec4:	b948      	cbnz	r0, 8009eda <__lshift+0x3e>
 8009ec6:	4602      	mov	r2, r0
 8009ec8:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8009ecc:	4b27      	ldr	r3, [pc, #156]	@ (8009f6c <__lshift+0xd0>)
 8009ece:	4828      	ldr	r0, [pc, #160]	@ (8009f70 <__lshift+0xd4>)
 8009ed0:	f7fe fb8c 	bl	80085ec <__assert_func>
 8009ed4:	3101      	adds	r1, #1
 8009ed6:	005b      	lsls	r3, r3, #1
 8009ed8:	e7ee      	b.n	8009eb8 <__lshift+0x1c>
 8009eda:	2300      	movs	r3, #0
 8009edc:	f100 0114 	add.w	r1, r0, #20
 8009ee0:	f100 0210 	add.w	r2, r0, #16
 8009ee4:	4618      	mov	r0, r3
 8009ee6:	4553      	cmp	r3, sl
 8009ee8:	db33      	blt.n	8009f52 <__lshift+0xb6>
 8009eea:	6920      	ldr	r0, [r4, #16]
 8009eec:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8009ef0:	f104 0314 	add.w	r3, r4, #20
 8009ef4:	f019 091f 	ands.w	r9, r9, #31
 8009ef8:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8009efc:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8009f00:	d02b      	beq.n	8009f5a <__lshift+0xbe>
 8009f02:	468a      	mov	sl, r1
 8009f04:	2200      	movs	r2, #0
 8009f06:	f1c9 0e20 	rsb	lr, r9, #32
 8009f0a:	6818      	ldr	r0, [r3, #0]
 8009f0c:	fa00 f009 	lsl.w	r0, r0, r9
 8009f10:	4310      	orrs	r0, r2
 8009f12:	f84a 0b04 	str.w	r0, [sl], #4
 8009f16:	f853 2b04 	ldr.w	r2, [r3], #4
 8009f1a:	459c      	cmp	ip, r3
 8009f1c:	fa22 f20e 	lsr.w	r2, r2, lr
 8009f20:	d8f3      	bhi.n	8009f0a <__lshift+0x6e>
 8009f22:	ebac 0304 	sub.w	r3, ip, r4
 8009f26:	3b15      	subs	r3, #21
 8009f28:	f023 0303 	bic.w	r3, r3, #3
 8009f2c:	3304      	adds	r3, #4
 8009f2e:	f104 0015 	add.w	r0, r4, #21
 8009f32:	4584      	cmp	ip, r0
 8009f34:	bf38      	it	cc
 8009f36:	2304      	movcc	r3, #4
 8009f38:	50ca      	str	r2, [r1, r3]
 8009f3a:	b10a      	cbz	r2, 8009f40 <__lshift+0xa4>
 8009f3c:	f108 0602 	add.w	r6, r8, #2
 8009f40:	3e01      	subs	r6, #1
 8009f42:	4638      	mov	r0, r7
 8009f44:	4621      	mov	r1, r4
 8009f46:	612e      	str	r6, [r5, #16]
 8009f48:	f7ff fd92 	bl	8009a70 <_Bfree>
 8009f4c:	4628      	mov	r0, r5
 8009f4e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009f52:	f842 0f04 	str.w	r0, [r2, #4]!
 8009f56:	3301      	adds	r3, #1
 8009f58:	e7c5      	b.n	8009ee6 <__lshift+0x4a>
 8009f5a:	3904      	subs	r1, #4
 8009f5c:	f853 2b04 	ldr.w	r2, [r3], #4
 8009f60:	459c      	cmp	ip, r3
 8009f62:	f841 2f04 	str.w	r2, [r1, #4]!
 8009f66:	d8f9      	bhi.n	8009f5c <__lshift+0xc0>
 8009f68:	e7ea      	b.n	8009f40 <__lshift+0xa4>
 8009f6a:	bf00      	nop
 8009f6c:	0800c0a6 	.word	0x0800c0a6
 8009f70:	0800c117 	.word	0x0800c117

08009f74 <__mcmp>:
 8009f74:	4603      	mov	r3, r0
 8009f76:	690a      	ldr	r2, [r1, #16]
 8009f78:	6900      	ldr	r0, [r0, #16]
 8009f7a:	b530      	push	{r4, r5, lr}
 8009f7c:	1a80      	subs	r0, r0, r2
 8009f7e:	d10e      	bne.n	8009f9e <__mcmp+0x2a>
 8009f80:	3314      	adds	r3, #20
 8009f82:	3114      	adds	r1, #20
 8009f84:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8009f88:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8009f8c:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8009f90:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8009f94:	4295      	cmp	r5, r2
 8009f96:	d003      	beq.n	8009fa0 <__mcmp+0x2c>
 8009f98:	d205      	bcs.n	8009fa6 <__mcmp+0x32>
 8009f9a:	f04f 30ff 	mov.w	r0, #4294967295
 8009f9e:	bd30      	pop	{r4, r5, pc}
 8009fa0:	42a3      	cmp	r3, r4
 8009fa2:	d3f3      	bcc.n	8009f8c <__mcmp+0x18>
 8009fa4:	e7fb      	b.n	8009f9e <__mcmp+0x2a>
 8009fa6:	2001      	movs	r0, #1
 8009fa8:	e7f9      	b.n	8009f9e <__mcmp+0x2a>
	...

08009fac <__mdiff>:
 8009fac:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009fb0:	4689      	mov	r9, r1
 8009fb2:	4606      	mov	r6, r0
 8009fb4:	4611      	mov	r1, r2
 8009fb6:	4648      	mov	r0, r9
 8009fb8:	4614      	mov	r4, r2
 8009fba:	f7ff ffdb 	bl	8009f74 <__mcmp>
 8009fbe:	1e05      	subs	r5, r0, #0
 8009fc0:	d112      	bne.n	8009fe8 <__mdiff+0x3c>
 8009fc2:	4629      	mov	r1, r5
 8009fc4:	4630      	mov	r0, r6
 8009fc6:	f7ff fd13 	bl	80099f0 <_Balloc>
 8009fca:	4602      	mov	r2, r0
 8009fcc:	b928      	cbnz	r0, 8009fda <__mdiff+0x2e>
 8009fce:	f240 2137 	movw	r1, #567	@ 0x237
 8009fd2:	4b3e      	ldr	r3, [pc, #248]	@ (800a0cc <__mdiff+0x120>)
 8009fd4:	483e      	ldr	r0, [pc, #248]	@ (800a0d0 <__mdiff+0x124>)
 8009fd6:	f7fe fb09 	bl	80085ec <__assert_func>
 8009fda:	2301      	movs	r3, #1
 8009fdc:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8009fe0:	4610      	mov	r0, r2
 8009fe2:	b003      	add	sp, #12
 8009fe4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009fe8:	bfbc      	itt	lt
 8009fea:	464b      	movlt	r3, r9
 8009fec:	46a1      	movlt	r9, r4
 8009fee:	4630      	mov	r0, r6
 8009ff0:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8009ff4:	bfba      	itte	lt
 8009ff6:	461c      	movlt	r4, r3
 8009ff8:	2501      	movlt	r5, #1
 8009ffa:	2500      	movge	r5, #0
 8009ffc:	f7ff fcf8 	bl	80099f0 <_Balloc>
 800a000:	4602      	mov	r2, r0
 800a002:	b918      	cbnz	r0, 800a00c <__mdiff+0x60>
 800a004:	f240 2145 	movw	r1, #581	@ 0x245
 800a008:	4b30      	ldr	r3, [pc, #192]	@ (800a0cc <__mdiff+0x120>)
 800a00a:	e7e3      	b.n	8009fd4 <__mdiff+0x28>
 800a00c:	f100 0b14 	add.w	fp, r0, #20
 800a010:	f8d9 7010 	ldr.w	r7, [r9, #16]
 800a014:	f109 0310 	add.w	r3, r9, #16
 800a018:	60c5      	str	r5, [r0, #12]
 800a01a:	f04f 0c00 	mov.w	ip, #0
 800a01e:	f109 0514 	add.w	r5, r9, #20
 800a022:	46d9      	mov	r9, fp
 800a024:	6926      	ldr	r6, [r4, #16]
 800a026:	f104 0e14 	add.w	lr, r4, #20
 800a02a:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 800a02e:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 800a032:	9301      	str	r3, [sp, #4]
 800a034:	9b01      	ldr	r3, [sp, #4]
 800a036:	f85e 0b04 	ldr.w	r0, [lr], #4
 800a03a:	f853 af04 	ldr.w	sl, [r3, #4]!
 800a03e:	b281      	uxth	r1, r0
 800a040:	9301      	str	r3, [sp, #4]
 800a042:	fa1f f38a 	uxth.w	r3, sl
 800a046:	1a5b      	subs	r3, r3, r1
 800a048:	0c00      	lsrs	r0, r0, #16
 800a04a:	4463      	add	r3, ip
 800a04c:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 800a050:	eb00 4023 	add.w	r0, r0, r3, asr #16
 800a054:	b29b      	uxth	r3, r3
 800a056:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800a05a:	4576      	cmp	r6, lr
 800a05c:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800a060:	f849 3b04 	str.w	r3, [r9], #4
 800a064:	d8e6      	bhi.n	800a034 <__mdiff+0x88>
 800a066:	1b33      	subs	r3, r6, r4
 800a068:	3b15      	subs	r3, #21
 800a06a:	f023 0303 	bic.w	r3, r3, #3
 800a06e:	3415      	adds	r4, #21
 800a070:	3304      	adds	r3, #4
 800a072:	42a6      	cmp	r6, r4
 800a074:	bf38      	it	cc
 800a076:	2304      	movcc	r3, #4
 800a078:	441d      	add	r5, r3
 800a07a:	445b      	add	r3, fp
 800a07c:	461e      	mov	r6, r3
 800a07e:	462c      	mov	r4, r5
 800a080:	4544      	cmp	r4, r8
 800a082:	d30e      	bcc.n	800a0a2 <__mdiff+0xf6>
 800a084:	f108 0103 	add.w	r1, r8, #3
 800a088:	1b49      	subs	r1, r1, r5
 800a08a:	f021 0103 	bic.w	r1, r1, #3
 800a08e:	3d03      	subs	r5, #3
 800a090:	45a8      	cmp	r8, r5
 800a092:	bf38      	it	cc
 800a094:	2100      	movcc	r1, #0
 800a096:	440b      	add	r3, r1
 800a098:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800a09c:	b199      	cbz	r1, 800a0c6 <__mdiff+0x11a>
 800a09e:	6117      	str	r7, [r2, #16]
 800a0a0:	e79e      	b.n	8009fe0 <__mdiff+0x34>
 800a0a2:	46e6      	mov	lr, ip
 800a0a4:	f854 1b04 	ldr.w	r1, [r4], #4
 800a0a8:	fa1f fc81 	uxth.w	ip, r1
 800a0ac:	44f4      	add	ip, lr
 800a0ae:	0c08      	lsrs	r0, r1, #16
 800a0b0:	4471      	add	r1, lr
 800a0b2:	eb00 402c 	add.w	r0, r0, ip, asr #16
 800a0b6:	b289      	uxth	r1, r1
 800a0b8:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800a0bc:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800a0c0:	f846 1b04 	str.w	r1, [r6], #4
 800a0c4:	e7dc      	b.n	800a080 <__mdiff+0xd4>
 800a0c6:	3f01      	subs	r7, #1
 800a0c8:	e7e6      	b.n	800a098 <__mdiff+0xec>
 800a0ca:	bf00      	nop
 800a0cc:	0800c0a6 	.word	0x0800c0a6
 800a0d0:	0800c117 	.word	0x0800c117

0800a0d4 <__ulp>:
 800a0d4:	4b0e      	ldr	r3, [pc, #56]	@ (800a110 <__ulp+0x3c>)
 800a0d6:	400b      	ands	r3, r1
 800a0d8:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
 800a0dc:	2b00      	cmp	r3, #0
 800a0de:	dc08      	bgt.n	800a0f2 <__ulp+0x1e>
 800a0e0:	425b      	negs	r3, r3
 800a0e2:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
 800a0e6:	ea4f 5223 	mov.w	r2, r3, asr #20
 800a0ea:	da04      	bge.n	800a0f6 <__ulp+0x22>
 800a0ec:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 800a0f0:	4113      	asrs	r3, r2
 800a0f2:	2200      	movs	r2, #0
 800a0f4:	e008      	b.n	800a108 <__ulp+0x34>
 800a0f6:	f1a2 0314 	sub.w	r3, r2, #20
 800a0fa:	2b1e      	cmp	r3, #30
 800a0fc:	bfd6      	itet	le
 800a0fe:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
 800a102:	2201      	movgt	r2, #1
 800a104:	40da      	lsrle	r2, r3
 800a106:	2300      	movs	r3, #0
 800a108:	4619      	mov	r1, r3
 800a10a:	4610      	mov	r0, r2
 800a10c:	4770      	bx	lr
 800a10e:	bf00      	nop
 800a110:	7ff00000 	.word	0x7ff00000

0800a114 <__b2d>:
 800a114:	6902      	ldr	r2, [r0, #16]
 800a116:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a118:	f100 0614 	add.w	r6, r0, #20
 800a11c:	eb06 0282 	add.w	r2, r6, r2, lsl #2
 800a120:	f852 4c04 	ldr.w	r4, [r2, #-4]
 800a124:	4f1e      	ldr	r7, [pc, #120]	@ (800a1a0 <__b2d+0x8c>)
 800a126:	4620      	mov	r0, r4
 800a128:	f7ff fd54 	bl	8009bd4 <__hi0bits>
 800a12c:	4603      	mov	r3, r0
 800a12e:	f1c0 0020 	rsb	r0, r0, #32
 800a132:	2b0a      	cmp	r3, #10
 800a134:	f1a2 0504 	sub.w	r5, r2, #4
 800a138:	6008      	str	r0, [r1, #0]
 800a13a:	dc12      	bgt.n	800a162 <__b2d+0x4e>
 800a13c:	42ae      	cmp	r6, r5
 800a13e:	bf2c      	ite	cs
 800a140:	2200      	movcs	r2, #0
 800a142:	f852 2c08 	ldrcc.w	r2, [r2, #-8]
 800a146:	f1c3 0c0b 	rsb	ip, r3, #11
 800a14a:	3315      	adds	r3, #21
 800a14c:	fa24 fe0c 	lsr.w	lr, r4, ip
 800a150:	fa04 f303 	lsl.w	r3, r4, r3
 800a154:	fa22 f20c 	lsr.w	r2, r2, ip
 800a158:	ea4e 0107 	orr.w	r1, lr, r7
 800a15c:	431a      	orrs	r2, r3
 800a15e:	4610      	mov	r0, r2
 800a160:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a162:	42ae      	cmp	r6, r5
 800a164:	bf36      	itet	cc
 800a166:	f1a2 0508 	subcc.w	r5, r2, #8
 800a16a:	2200      	movcs	r2, #0
 800a16c:	f852 2c08 	ldrcc.w	r2, [r2, #-8]
 800a170:	3b0b      	subs	r3, #11
 800a172:	d012      	beq.n	800a19a <__b2d+0x86>
 800a174:	f1c3 0720 	rsb	r7, r3, #32
 800a178:	fa22 f107 	lsr.w	r1, r2, r7
 800a17c:	409c      	lsls	r4, r3
 800a17e:	430c      	orrs	r4, r1
 800a180:	42b5      	cmp	r5, r6
 800a182:	f044 517f 	orr.w	r1, r4, #1069547520	@ 0x3fc00000
 800a186:	bf94      	ite	ls
 800a188:	2400      	movls	r4, #0
 800a18a:	f855 4c04 	ldrhi.w	r4, [r5, #-4]
 800a18e:	409a      	lsls	r2, r3
 800a190:	40fc      	lsrs	r4, r7
 800a192:	f441 1140 	orr.w	r1, r1, #3145728	@ 0x300000
 800a196:	4322      	orrs	r2, r4
 800a198:	e7e1      	b.n	800a15e <__b2d+0x4a>
 800a19a:	ea44 0107 	orr.w	r1, r4, r7
 800a19e:	e7de      	b.n	800a15e <__b2d+0x4a>
 800a1a0:	3ff00000 	.word	0x3ff00000

0800a1a4 <__d2b>:
 800a1a4:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
 800a1a8:	2101      	movs	r1, #1
 800a1aa:	4690      	mov	r8, r2
 800a1ac:	4699      	mov	r9, r3
 800a1ae:	9e08      	ldr	r6, [sp, #32]
 800a1b0:	f7ff fc1e 	bl	80099f0 <_Balloc>
 800a1b4:	4604      	mov	r4, r0
 800a1b6:	b930      	cbnz	r0, 800a1c6 <__d2b+0x22>
 800a1b8:	4602      	mov	r2, r0
 800a1ba:	f240 310f 	movw	r1, #783	@ 0x30f
 800a1be:	4b23      	ldr	r3, [pc, #140]	@ (800a24c <__d2b+0xa8>)
 800a1c0:	4823      	ldr	r0, [pc, #140]	@ (800a250 <__d2b+0xac>)
 800a1c2:	f7fe fa13 	bl	80085ec <__assert_func>
 800a1c6:	f3c9 550a 	ubfx	r5, r9, #20, #11
 800a1ca:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800a1ce:	b10d      	cbz	r5, 800a1d4 <__d2b+0x30>
 800a1d0:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800a1d4:	9301      	str	r3, [sp, #4]
 800a1d6:	f1b8 0300 	subs.w	r3, r8, #0
 800a1da:	d024      	beq.n	800a226 <__d2b+0x82>
 800a1dc:	4668      	mov	r0, sp
 800a1de:	9300      	str	r3, [sp, #0]
 800a1e0:	f7ff fd17 	bl	8009c12 <__lo0bits>
 800a1e4:	e9dd 1200 	ldrd	r1, r2, [sp]
 800a1e8:	b1d8      	cbz	r0, 800a222 <__d2b+0x7e>
 800a1ea:	f1c0 0320 	rsb	r3, r0, #32
 800a1ee:	fa02 f303 	lsl.w	r3, r2, r3
 800a1f2:	430b      	orrs	r3, r1
 800a1f4:	40c2      	lsrs	r2, r0
 800a1f6:	6163      	str	r3, [r4, #20]
 800a1f8:	9201      	str	r2, [sp, #4]
 800a1fa:	9b01      	ldr	r3, [sp, #4]
 800a1fc:	2b00      	cmp	r3, #0
 800a1fe:	bf0c      	ite	eq
 800a200:	2201      	moveq	r2, #1
 800a202:	2202      	movne	r2, #2
 800a204:	61a3      	str	r3, [r4, #24]
 800a206:	6122      	str	r2, [r4, #16]
 800a208:	b1ad      	cbz	r5, 800a236 <__d2b+0x92>
 800a20a:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 800a20e:	4405      	add	r5, r0
 800a210:	6035      	str	r5, [r6, #0]
 800a212:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 800a216:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800a218:	6018      	str	r0, [r3, #0]
 800a21a:	4620      	mov	r0, r4
 800a21c:	b002      	add	sp, #8
 800a21e:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 800a222:	6161      	str	r1, [r4, #20]
 800a224:	e7e9      	b.n	800a1fa <__d2b+0x56>
 800a226:	a801      	add	r0, sp, #4
 800a228:	f7ff fcf3 	bl	8009c12 <__lo0bits>
 800a22c:	9b01      	ldr	r3, [sp, #4]
 800a22e:	2201      	movs	r2, #1
 800a230:	6163      	str	r3, [r4, #20]
 800a232:	3020      	adds	r0, #32
 800a234:	e7e7      	b.n	800a206 <__d2b+0x62>
 800a236:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 800a23a:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800a23e:	6030      	str	r0, [r6, #0]
 800a240:	6918      	ldr	r0, [r3, #16]
 800a242:	f7ff fcc7 	bl	8009bd4 <__hi0bits>
 800a246:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800a24a:	e7e4      	b.n	800a216 <__d2b+0x72>
 800a24c:	0800c0a6 	.word	0x0800c0a6
 800a250:	0800c117 	.word	0x0800c117

0800a254 <__ratio>:
 800a254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a258:	b085      	sub	sp, #20
 800a25a:	e9cd 1000 	strd	r1, r0, [sp]
 800a25e:	a902      	add	r1, sp, #8
 800a260:	f7ff ff58 	bl	800a114 <__b2d>
 800a264:	468b      	mov	fp, r1
 800a266:	4606      	mov	r6, r0
 800a268:	460f      	mov	r7, r1
 800a26a:	9800      	ldr	r0, [sp, #0]
 800a26c:	a903      	add	r1, sp, #12
 800a26e:	f7ff ff51 	bl	800a114 <__b2d>
 800a272:	460d      	mov	r5, r1
 800a274:	9b01      	ldr	r3, [sp, #4]
 800a276:	4689      	mov	r9, r1
 800a278:	6919      	ldr	r1, [r3, #16]
 800a27a:	9b00      	ldr	r3, [sp, #0]
 800a27c:	4604      	mov	r4, r0
 800a27e:	691b      	ldr	r3, [r3, #16]
 800a280:	4630      	mov	r0, r6
 800a282:	1ac9      	subs	r1, r1, r3
 800a284:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 800a288:	1a9b      	subs	r3, r3, r2
 800a28a:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800a28e:	2b00      	cmp	r3, #0
 800a290:	bfcd      	iteet	gt
 800a292:	463a      	movgt	r2, r7
 800a294:	462a      	movle	r2, r5
 800a296:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 800a29a:	eb02 5b03 	addgt.w	fp, r2, r3, lsl #20
 800a29e:	bfd8      	it	le
 800a2a0:	eb02 5903 	addle.w	r9, r2, r3, lsl #20
 800a2a4:	464b      	mov	r3, r9
 800a2a6:	4622      	mov	r2, r4
 800a2a8:	4659      	mov	r1, fp
 800a2aa:	f7f6 fa49 	bl	8000740 <__aeabi_ddiv>
 800a2ae:	b005      	add	sp, #20
 800a2b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800a2b4 <__copybits>:
 800a2b4:	3901      	subs	r1, #1
 800a2b6:	b570      	push	{r4, r5, r6, lr}
 800a2b8:	1149      	asrs	r1, r1, #5
 800a2ba:	6914      	ldr	r4, [r2, #16]
 800a2bc:	3101      	adds	r1, #1
 800a2be:	f102 0314 	add.w	r3, r2, #20
 800a2c2:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800a2c6:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800a2ca:	1f05      	subs	r5, r0, #4
 800a2cc:	42a3      	cmp	r3, r4
 800a2ce:	d30c      	bcc.n	800a2ea <__copybits+0x36>
 800a2d0:	1aa3      	subs	r3, r4, r2
 800a2d2:	3b11      	subs	r3, #17
 800a2d4:	f023 0303 	bic.w	r3, r3, #3
 800a2d8:	3211      	adds	r2, #17
 800a2da:	42a2      	cmp	r2, r4
 800a2dc:	bf88      	it	hi
 800a2de:	2300      	movhi	r3, #0
 800a2e0:	4418      	add	r0, r3
 800a2e2:	2300      	movs	r3, #0
 800a2e4:	4288      	cmp	r0, r1
 800a2e6:	d305      	bcc.n	800a2f4 <__copybits+0x40>
 800a2e8:	bd70      	pop	{r4, r5, r6, pc}
 800a2ea:	f853 6b04 	ldr.w	r6, [r3], #4
 800a2ee:	f845 6f04 	str.w	r6, [r5, #4]!
 800a2f2:	e7eb      	b.n	800a2cc <__copybits+0x18>
 800a2f4:	f840 3b04 	str.w	r3, [r0], #4
 800a2f8:	e7f4      	b.n	800a2e4 <__copybits+0x30>

0800a2fa <__any_on>:
 800a2fa:	f100 0214 	add.w	r2, r0, #20
 800a2fe:	6900      	ldr	r0, [r0, #16]
 800a300:	114b      	asrs	r3, r1, #5
 800a302:	4298      	cmp	r0, r3
 800a304:	b510      	push	{r4, lr}
 800a306:	db11      	blt.n	800a32c <__any_on+0x32>
 800a308:	dd0a      	ble.n	800a320 <__any_on+0x26>
 800a30a:	f011 011f 	ands.w	r1, r1, #31
 800a30e:	d007      	beq.n	800a320 <__any_on+0x26>
 800a310:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 800a314:	fa24 f001 	lsr.w	r0, r4, r1
 800a318:	fa00 f101 	lsl.w	r1, r0, r1
 800a31c:	428c      	cmp	r4, r1
 800a31e:	d10b      	bne.n	800a338 <__any_on+0x3e>
 800a320:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800a324:	4293      	cmp	r3, r2
 800a326:	d803      	bhi.n	800a330 <__any_on+0x36>
 800a328:	2000      	movs	r0, #0
 800a32a:	bd10      	pop	{r4, pc}
 800a32c:	4603      	mov	r3, r0
 800a32e:	e7f7      	b.n	800a320 <__any_on+0x26>
 800a330:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800a334:	2900      	cmp	r1, #0
 800a336:	d0f5      	beq.n	800a324 <__any_on+0x2a>
 800a338:	2001      	movs	r0, #1
 800a33a:	e7f6      	b.n	800a32a <__any_on+0x30>

0800a33c <__ascii_wctomb>:
 800a33c:	4603      	mov	r3, r0
 800a33e:	4608      	mov	r0, r1
 800a340:	b141      	cbz	r1, 800a354 <__ascii_wctomb+0x18>
 800a342:	2aff      	cmp	r2, #255	@ 0xff
 800a344:	d904      	bls.n	800a350 <__ascii_wctomb+0x14>
 800a346:	228a      	movs	r2, #138	@ 0x8a
 800a348:	f04f 30ff 	mov.w	r0, #4294967295
 800a34c:	601a      	str	r2, [r3, #0]
 800a34e:	4770      	bx	lr
 800a350:	2001      	movs	r0, #1
 800a352:	700a      	strb	r2, [r1, #0]
 800a354:	4770      	bx	lr

0800a356 <__sfputc_r>:
 800a356:	6893      	ldr	r3, [r2, #8]
 800a358:	b410      	push	{r4}
 800a35a:	3b01      	subs	r3, #1
 800a35c:	2b00      	cmp	r3, #0
 800a35e:	6093      	str	r3, [r2, #8]
 800a360:	da07      	bge.n	800a372 <__sfputc_r+0x1c>
 800a362:	6994      	ldr	r4, [r2, #24]
 800a364:	42a3      	cmp	r3, r4
 800a366:	db01      	blt.n	800a36c <__sfputc_r+0x16>
 800a368:	290a      	cmp	r1, #10
 800a36a:	d102      	bne.n	800a372 <__sfputc_r+0x1c>
 800a36c:	bc10      	pop	{r4}
 800a36e:	f7fd bf6c 	b.w	800824a <__swbuf_r>
 800a372:	6813      	ldr	r3, [r2, #0]
 800a374:	1c58      	adds	r0, r3, #1
 800a376:	6010      	str	r0, [r2, #0]
 800a378:	7019      	strb	r1, [r3, #0]
 800a37a:	4608      	mov	r0, r1
 800a37c:	bc10      	pop	{r4}
 800a37e:	4770      	bx	lr

0800a380 <__sfputs_r>:
 800a380:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a382:	4606      	mov	r6, r0
 800a384:	460f      	mov	r7, r1
 800a386:	4614      	mov	r4, r2
 800a388:	18d5      	adds	r5, r2, r3
 800a38a:	42ac      	cmp	r4, r5
 800a38c:	d101      	bne.n	800a392 <__sfputs_r+0x12>
 800a38e:	2000      	movs	r0, #0
 800a390:	e007      	b.n	800a3a2 <__sfputs_r+0x22>
 800a392:	463a      	mov	r2, r7
 800a394:	4630      	mov	r0, r6
 800a396:	f814 1b01 	ldrb.w	r1, [r4], #1
 800a39a:	f7ff ffdc 	bl	800a356 <__sfputc_r>
 800a39e:	1c43      	adds	r3, r0, #1
 800a3a0:	d1f3      	bne.n	800a38a <__sfputs_r+0xa>
 800a3a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800a3a4 <_vfiprintf_r>:
 800a3a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a3a8:	460d      	mov	r5, r1
 800a3aa:	4614      	mov	r4, r2
 800a3ac:	4698      	mov	r8, r3
 800a3ae:	4606      	mov	r6, r0
 800a3b0:	b09d      	sub	sp, #116	@ 0x74
 800a3b2:	b118      	cbz	r0, 800a3bc <_vfiprintf_r+0x18>
 800a3b4:	6a03      	ldr	r3, [r0, #32]
 800a3b6:	b90b      	cbnz	r3, 800a3bc <_vfiprintf_r+0x18>
 800a3b8:	f7fd fe5e 	bl	8008078 <__sinit>
 800a3bc:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800a3be:	07d9      	lsls	r1, r3, #31
 800a3c0:	d405      	bmi.n	800a3ce <_vfiprintf_r+0x2a>
 800a3c2:	89ab      	ldrh	r3, [r5, #12]
 800a3c4:	059a      	lsls	r2, r3, #22
 800a3c6:	d402      	bmi.n	800a3ce <_vfiprintf_r+0x2a>
 800a3c8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800a3ca:	f7fe f8ea 	bl	80085a2 <__retarget_lock_acquire_recursive>
 800a3ce:	89ab      	ldrh	r3, [r5, #12]
 800a3d0:	071b      	lsls	r3, r3, #28
 800a3d2:	d501      	bpl.n	800a3d8 <_vfiprintf_r+0x34>
 800a3d4:	692b      	ldr	r3, [r5, #16]
 800a3d6:	b99b      	cbnz	r3, 800a400 <_vfiprintf_r+0x5c>
 800a3d8:	4629      	mov	r1, r5
 800a3da:	4630      	mov	r0, r6
 800a3dc:	f7fd ff74 	bl	80082c8 <__swsetup_r>
 800a3e0:	b170      	cbz	r0, 800a400 <_vfiprintf_r+0x5c>
 800a3e2:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800a3e4:	07dc      	lsls	r4, r3, #31
 800a3e6:	d504      	bpl.n	800a3f2 <_vfiprintf_r+0x4e>
 800a3e8:	f04f 30ff 	mov.w	r0, #4294967295
 800a3ec:	b01d      	add	sp, #116	@ 0x74
 800a3ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a3f2:	89ab      	ldrh	r3, [r5, #12]
 800a3f4:	0598      	lsls	r0, r3, #22
 800a3f6:	d4f7      	bmi.n	800a3e8 <_vfiprintf_r+0x44>
 800a3f8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800a3fa:	f7fe f8d3 	bl	80085a4 <__retarget_lock_release_recursive>
 800a3fe:	e7f3      	b.n	800a3e8 <_vfiprintf_r+0x44>
 800a400:	2300      	movs	r3, #0
 800a402:	9309      	str	r3, [sp, #36]	@ 0x24
 800a404:	2320      	movs	r3, #32
 800a406:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800a40a:	2330      	movs	r3, #48	@ 0x30
 800a40c:	f04f 0901 	mov.w	r9, #1
 800a410:	f8cd 800c 	str.w	r8, [sp, #12]
 800a414:	f8df 81a8 	ldr.w	r8, [pc, #424]	@ 800a5c0 <_vfiprintf_r+0x21c>
 800a418:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800a41c:	4623      	mov	r3, r4
 800a41e:	469a      	mov	sl, r3
 800a420:	f813 2b01 	ldrb.w	r2, [r3], #1
 800a424:	b10a      	cbz	r2, 800a42a <_vfiprintf_r+0x86>
 800a426:	2a25      	cmp	r2, #37	@ 0x25
 800a428:	d1f9      	bne.n	800a41e <_vfiprintf_r+0x7a>
 800a42a:	ebba 0b04 	subs.w	fp, sl, r4
 800a42e:	d00b      	beq.n	800a448 <_vfiprintf_r+0xa4>
 800a430:	465b      	mov	r3, fp
 800a432:	4622      	mov	r2, r4
 800a434:	4629      	mov	r1, r5
 800a436:	4630      	mov	r0, r6
 800a438:	f7ff ffa2 	bl	800a380 <__sfputs_r>
 800a43c:	3001      	adds	r0, #1
 800a43e:	f000 80a7 	beq.w	800a590 <_vfiprintf_r+0x1ec>
 800a442:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800a444:	445a      	add	r2, fp
 800a446:	9209      	str	r2, [sp, #36]	@ 0x24
 800a448:	f89a 3000 	ldrb.w	r3, [sl]
 800a44c:	2b00      	cmp	r3, #0
 800a44e:	f000 809f 	beq.w	800a590 <_vfiprintf_r+0x1ec>
 800a452:	2300      	movs	r3, #0
 800a454:	f04f 32ff 	mov.w	r2, #4294967295
 800a458:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800a45c:	f10a 0a01 	add.w	sl, sl, #1
 800a460:	9304      	str	r3, [sp, #16]
 800a462:	9307      	str	r3, [sp, #28]
 800a464:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800a468:	931a      	str	r3, [sp, #104]	@ 0x68
 800a46a:	4654      	mov	r4, sl
 800a46c:	2205      	movs	r2, #5
 800a46e:	f814 1b01 	ldrb.w	r1, [r4], #1
 800a472:	4853      	ldr	r0, [pc, #332]	@ (800a5c0 <_vfiprintf_r+0x21c>)
 800a474:	f7fe f897 	bl	80085a6 <memchr>
 800a478:	9a04      	ldr	r2, [sp, #16]
 800a47a:	b9d8      	cbnz	r0, 800a4b4 <_vfiprintf_r+0x110>
 800a47c:	06d1      	lsls	r1, r2, #27
 800a47e:	bf44      	itt	mi
 800a480:	2320      	movmi	r3, #32
 800a482:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800a486:	0713      	lsls	r3, r2, #28
 800a488:	bf44      	itt	mi
 800a48a:	232b      	movmi	r3, #43	@ 0x2b
 800a48c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800a490:	f89a 3000 	ldrb.w	r3, [sl]
 800a494:	2b2a      	cmp	r3, #42	@ 0x2a
 800a496:	d015      	beq.n	800a4c4 <_vfiprintf_r+0x120>
 800a498:	4654      	mov	r4, sl
 800a49a:	2000      	movs	r0, #0
 800a49c:	f04f 0c0a 	mov.w	ip, #10
 800a4a0:	9a07      	ldr	r2, [sp, #28]
 800a4a2:	4621      	mov	r1, r4
 800a4a4:	f811 3b01 	ldrb.w	r3, [r1], #1
 800a4a8:	3b30      	subs	r3, #48	@ 0x30
 800a4aa:	2b09      	cmp	r3, #9
 800a4ac:	d94b      	bls.n	800a546 <_vfiprintf_r+0x1a2>
 800a4ae:	b1b0      	cbz	r0, 800a4de <_vfiprintf_r+0x13a>
 800a4b0:	9207      	str	r2, [sp, #28]
 800a4b2:	e014      	b.n	800a4de <_vfiprintf_r+0x13a>
 800a4b4:	eba0 0308 	sub.w	r3, r0, r8
 800a4b8:	fa09 f303 	lsl.w	r3, r9, r3
 800a4bc:	4313      	orrs	r3, r2
 800a4be:	46a2      	mov	sl, r4
 800a4c0:	9304      	str	r3, [sp, #16]
 800a4c2:	e7d2      	b.n	800a46a <_vfiprintf_r+0xc6>
 800a4c4:	9b03      	ldr	r3, [sp, #12]
 800a4c6:	1d19      	adds	r1, r3, #4
 800a4c8:	681b      	ldr	r3, [r3, #0]
 800a4ca:	9103      	str	r1, [sp, #12]
 800a4cc:	2b00      	cmp	r3, #0
 800a4ce:	bfbb      	ittet	lt
 800a4d0:	425b      	neglt	r3, r3
 800a4d2:	f042 0202 	orrlt.w	r2, r2, #2
 800a4d6:	9307      	strge	r3, [sp, #28]
 800a4d8:	9307      	strlt	r3, [sp, #28]
 800a4da:	bfb8      	it	lt
 800a4dc:	9204      	strlt	r2, [sp, #16]
 800a4de:	7823      	ldrb	r3, [r4, #0]
 800a4e0:	2b2e      	cmp	r3, #46	@ 0x2e
 800a4e2:	d10a      	bne.n	800a4fa <_vfiprintf_r+0x156>
 800a4e4:	7863      	ldrb	r3, [r4, #1]
 800a4e6:	2b2a      	cmp	r3, #42	@ 0x2a
 800a4e8:	d132      	bne.n	800a550 <_vfiprintf_r+0x1ac>
 800a4ea:	9b03      	ldr	r3, [sp, #12]
 800a4ec:	3402      	adds	r4, #2
 800a4ee:	1d1a      	adds	r2, r3, #4
 800a4f0:	681b      	ldr	r3, [r3, #0]
 800a4f2:	9203      	str	r2, [sp, #12]
 800a4f4:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800a4f8:	9305      	str	r3, [sp, #20]
 800a4fa:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 800a5c4 <_vfiprintf_r+0x220>
 800a4fe:	2203      	movs	r2, #3
 800a500:	4650      	mov	r0, sl
 800a502:	7821      	ldrb	r1, [r4, #0]
 800a504:	f7fe f84f 	bl	80085a6 <memchr>
 800a508:	b138      	cbz	r0, 800a51a <_vfiprintf_r+0x176>
 800a50a:	2240      	movs	r2, #64	@ 0x40
 800a50c:	9b04      	ldr	r3, [sp, #16]
 800a50e:	eba0 000a 	sub.w	r0, r0, sl
 800a512:	4082      	lsls	r2, r0
 800a514:	4313      	orrs	r3, r2
 800a516:	3401      	adds	r4, #1
 800a518:	9304      	str	r3, [sp, #16]
 800a51a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800a51e:	2206      	movs	r2, #6
 800a520:	4829      	ldr	r0, [pc, #164]	@ (800a5c8 <_vfiprintf_r+0x224>)
 800a522:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800a526:	f7fe f83e 	bl	80085a6 <memchr>
 800a52a:	2800      	cmp	r0, #0
 800a52c:	d03f      	beq.n	800a5ae <_vfiprintf_r+0x20a>
 800a52e:	4b27      	ldr	r3, [pc, #156]	@ (800a5cc <_vfiprintf_r+0x228>)
 800a530:	bb1b      	cbnz	r3, 800a57a <_vfiprintf_r+0x1d6>
 800a532:	9b03      	ldr	r3, [sp, #12]
 800a534:	3307      	adds	r3, #7
 800a536:	f023 0307 	bic.w	r3, r3, #7
 800a53a:	3308      	adds	r3, #8
 800a53c:	9303      	str	r3, [sp, #12]
 800a53e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800a540:	443b      	add	r3, r7
 800a542:	9309      	str	r3, [sp, #36]	@ 0x24
 800a544:	e76a      	b.n	800a41c <_vfiprintf_r+0x78>
 800a546:	460c      	mov	r4, r1
 800a548:	2001      	movs	r0, #1
 800a54a:	fb0c 3202 	mla	r2, ip, r2, r3
 800a54e:	e7a8      	b.n	800a4a2 <_vfiprintf_r+0xfe>
 800a550:	2300      	movs	r3, #0
 800a552:	f04f 0c0a 	mov.w	ip, #10
 800a556:	4619      	mov	r1, r3
 800a558:	3401      	adds	r4, #1
 800a55a:	9305      	str	r3, [sp, #20]
 800a55c:	4620      	mov	r0, r4
 800a55e:	f810 2b01 	ldrb.w	r2, [r0], #1
 800a562:	3a30      	subs	r2, #48	@ 0x30
 800a564:	2a09      	cmp	r2, #9
 800a566:	d903      	bls.n	800a570 <_vfiprintf_r+0x1cc>
 800a568:	2b00      	cmp	r3, #0
 800a56a:	d0c6      	beq.n	800a4fa <_vfiprintf_r+0x156>
 800a56c:	9105      	str	r1, [sp, #20]
 800a56e:	e7c4      	b.n	800a4fa <_vfiprintf_r+0x156>
 800a570:	4604      	mov	r4, r0
 800a572:	2301      	movs	r3, #1
 800a574:	fb0c 2101 	mla	r1, ip, r1, r2
 800a578:	e7f0      	b.n	800a55c <_vfiprintf_r+0x1b8>
 800a57a:	ab03      	add	r3, sp, #12
 800a57c:	9300      	str	r3, [sp, #0]
 800a57e:	462a      	mov	r2, r5
 800a580:	4630      	mov	r0, r6
 800a582:	4b13      	ldr	r3, [pc, #76]	@ (800a5d0 <_vfiprintf_r+0x22c>)
 800a584:	a904      	add	r1, sp, #16
 800a586:	f7fd f92d 	bl	80077e4 <_printf_float>
 800a58a:	4607      	mov	r7, r0
 800a58c:	1c78      	adds	r0, r7, #1
 800a58e:	d1d6      	bne.n	800a53e <_vfiprintf_r+0x19a>
 800a590:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800a592:	07d9      	lsls	r1, r3, #31
 800a594:	d405      	bmi.n	800a5a2 <_vfiprintf_r+0x1fe>
 800a596:	89ab      	ldrh	r3, [r5, #12]
 800a598:	059a      	lsls	r2, r3, #22
 800a59a:	d402      	bmi.n	800a5a2 <_vfiprintf_r+0x1fe>
 800a59c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800a59e:	f7fe f801 	bl	80085a4 <__retarget_lock_release_recursive>
 800a5a2:	89ab      	ldrh	r3, [r5, #12]
 800a5a4:	065b      	lsls	r3, r3, #25
 800a5a6:	f53f af1f 	bmi.w	800a3e8 <_vfiprintf_r+0x44>
 800a5aa:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800a5ac:	e71e      	b.n	800a3ec <_vfiprintf_r+0x48>
 800a5ae:	ab03      	add	r3, sp, #12
 800a5b0:	9300      	str	r3, [sp, #0]
 800a5b2:	462a      	mov	r2, r5
 800a5b4:	4630      	mov	r0, r6
 800a5b6:	4b06      	ldr	r3, [pc, #24]	@ (800a5d0 <_vfiprintf_r+0x22c>)
 800a5b8:	a904      	add	r1, sp, #16
 800a5ba:	f7fd fbb1 	bl	8007d20 <_printf_i>
 800a5be:	e7e4      	b.n	800a58a <_vfiprintf_r+0x1e6>
 800a5c0:	0800c371 	.word	0x0800c371
 800a5c4:	0800c377 	.word	0x0800c377
 800a5c8:	0800c37b 	.word	0x0800c37b
 800a5cc:	080077e5 	.word	0x080077e5
 800a5d0:	0800a381 	.word	0x0800a381

0800a5d4 <__sflush_r>:
 800a5d4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800a5d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a5da:	0716      	lsls	r6, r2, #28
 800a5dc:	4605      	mov	r5, r0
 800a5de:	460c      	mov	r4, r1
 800a5e0:	d454      	bmi.n	800a68c <__sflush_r+0xb8>
 800a5e2:	684b      	ldr	r3, [r1, #4]
 800a5e4:	2b00      	cmp	r3, #0
 800a5e6:	dc02      	bgt.n	800a5ee <__sflush_r+0x1a>
 800a5e8:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800a5ea:	2b00      	cmp	r3, #0
 800a5ec:	dd48      	ble.n	800a680 <__sflush_r+0xac>
 800a5ee:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800a5f0:	2e00      	cmp	r6, #0
 800a5f2:	d045      	beq.n	800a680 <__sflush_r+0xac>
 800a5f4:	2300      	movs	r3, #0
 800a5f6:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800a5fa:	682f      	ldr	r7, [r5, #0]
 800a5fc:	6a21      	ldr	r1, [r4, #32]
 800a5fe:	602b      	str	r3, [r5, #0]
 800a600:	d030      	beq.n	800a664 <__sflush_r+0x90>
 800a602:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800a604:	89a3      	ldrh	r3, [r4, #12]
 800a606:	0759      	lsls	r1, r3, #29
 800a608:	d505      	bpl.n	800a616 <__sflush_r+0x42>
 800a60a:	6863      	ldr	r3, [r4, #4]
 800a60c:	1ad2      	subs	r2, r2, r3
 800a60e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800a610:	b10b      	cbz	r3, 800a616 <__sflush_r+0x42>
 800a612:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800a614:	1ad2      	subs	r2, r2, r3
 800a616:	2300      	movs	r3, #0
 800a618:	4628      	mov	r0, r5
 800a61a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800a61c:	6a21      	ldr	r1, [r4, #32]
 800a61e:	47b0      	blx	r6
 800a620:	1c43      	adds	r3, r0, #1
 800a622:	89a3      	ldrh	r3, [r4, #12]
 800a624:	d106      	bne.n	800a634 <__sflush_r+0x60>
 800a626:	6829      	ldr	r1, [r5, #0]
 800a628:	291d      	cmp	r1, #29
 800a62a:	d82b      	bhi.n	800a684 <__sflush_r+0xb0>
 800a62c:	4a28      	ldr	r2, [pc, #160]	@ (800a6d0 <__sflush_r+0xfc>)
 800a62e:	410a      	asrs	r2, r1
 800a630:	07d6      	lsls	r6, r2, #31
 800a632:	d427      	bmi.n	800a684 <__sflush_r+0xb0>
 800a634:	2200      	movs	r2, #0
 800a636:	6062      	str	r2, [r4, #4]
 800a638:	6922      	ldr	r2, [r4, #16]
 800a63a:	04d9      	lsls	r1, r3, #19
 800a63c:	6022      	str	r2, [r4, #0]
 800a63e:	d504      	bpl.n	800a64a <__sflush_r+0x76>
 800a640:	1c42      	adds	r2, r0, #1
 800a642:	d101      	bne.n	800a648 <__sflush_r+0x74>
 800a644:	682b      	ldr	r3, [r5, #0]
 800a646:	b903      	cbnz	r3, 800a64a <__sflush_r+0x76>
 800a648:	6560      	str	r0, [r4, #84]	@ 0x54
 800a64a:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800a64c:	602f      	str	r7, [r5, #0]
 800a64e:	b1b9      	cbz	r1, 800a680 <__sflush_r+0xac>
 800a650:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800a654:	4299      	cmp	r1, r3
 800a656:	d002      	beq.n	800a65e <__sflush_r+0x8a>
 800a658:	4628      	mov	r0, r5
 800a65a:	f7fe fe35 	bl	80092c8 <_free_r>
 800a65e:	2300      	movs	r3, #0
 800a660:	6363      	str	r3, [r4, #52]	@ 0x34
 800a662:	e00d      	b.n	800a680 <__sflush_r+0xac>
 800a664:	2301      	movs	r3, #1
 800a666:	4628      	mov	r0, r5
 800a668:	47b0      	blx	r6
 800a66a:	4602      	mov	r2, r0
 800a66c:	1c50      	adds	r0, r2, #1
 800a66e:	d1c9      	bne.n	800a604 <__sflush_r+0x30>
 800a670:	682b      	ldr	r3, [r5, #0]
 800a672:	2b00      	cmp	r3, #0
 800a674:	d0c6      	beq.n	800a604 <__sflush_r+0x30>
 800a676:	2b1d      	cmp	r3, #29
 800a678:	d001      	beq.n	800a67e <__sflush_r+0xaa>
 800a67a:	2b16      	cmp	r3, #22
 800a67c:	d11d      	bne.n	800a6ba <__sflush_r+0xe6>
 800a67e:	602f      	str	r7, [r5, #0]
 800a680:	2000      	movs	r0, #0
 800a682:	e021      	b.n	800a6c8 <__sflush_r+0xf4>
 800a684:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800a688:	b21b      	sxth	r3, r3
 800a68a:	e01a      	b.n	800a6c2 <__sflush_r+0xee>
 800a68c:	690f      	ldr	r7, [r1, #16]
 800a68e:	2f00      	cmp	r7, #0
 800a690:	d0f6      	beq.n	800a680 <__sflush_r+0xac>
 800a692:	0793      	lsls	r3, r2, #30
 800a694:	bf18      	it	ne
 800a696:	2300      	movne	r3, #0
 800a698:	680e      	ldr	r6, [r1, #0]
 800a69a:	bf08      	it	eq
 800a69c:	694b      	ldreq	r3, [r1, #20]
 800a69e:	1bf6      	subs	r6, r6, r7
 800a6a0:	600f      	str	r7, [r1, #0]
 800a6a2:	608b      	str	r3, [r1, #8]
 800a6a4:	2e00      	cmp	r6, #0
 800a6a6:	ddeb      	ble.n	800a680 <__sflush_r+0xac>
 800a6a8:	4633      	mov	r3, r6
 800a6aa:	463a      	mov	r2, r7
 800a6ac:	4628      	mov	r0, r5
 800a6ae:	6a21      	ldr	r1, [r4, #32]
 800a6b0:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 800a6b4:	47e0      	blx	ip
 800a6b6:	2800      	cmp	r0, #0
 800a6b8:	dc07      	bgt.n	800a6ca <__sflush_r+0xf6>
 800a6ba:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800a6be:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800a6c2:	f04f 30ff 	mov.w	r0, #4294967295
 800a6c6:	81a3      	strh	r3, [r4, #12]
 800a6c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a6ca:	4407      	add	r7, r0
 800a6cc:	1a36      	subs	r6, r6, r0
 800a6ce:	e7e9      	b.n	800a6a4 <__sflush_r+0xd0>
 800a6d0:	dfbffffe 	.word	0xdfbffffe

0800a6d4 <_fflush_r>:
 800a6d4:	b538      	push	{r3, r4, r5, lr}
 800a6d6:	690b      	ldr	r3, [r1, #16]
 800a6d8:	4605      	mov	r5, r0
 800a6da:	460c      	mov	r4, r1
 800a6dc:	b913      	cbnz	r3, 800a6e4 <_fflush_r+0x10>
 800a6de:	2500      	movs	r5, #0
 800a6e0:	4628      	mov	r0, r5
 800a6e2:	bd38      	pop	{r3, r4, r5, pc}
 800a6e4:	b118      	cbz	r0, 800a6ee <_fflush_r+0x1a>
 800a6e6:	6a03      	ldr	r3, [r0, #32]
 800a6e8:	b90b      	cbnz	r3, 800a6ee <_fflush_r+0x1a>
 800a6ea:	f7fd fcc5 	bl	8008078 <__sinit>
 800a6ee:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800a6f2:	2b00      	cmp	r3, #0
 800a6f4:	d0f3      	beq.n	800a6de <_fflush_r+0xa>
 800a6f6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800a6f8:	07d0      	lsls	r0, r2, #31
 800a6fa:	d404      	bmi.n	800a706 <_fflush_r+0x32>
 800a6fc:	0599      	lsls	r1, r3, #22
 800a6fe:	d402      	bmi.n	800a706 <_fflush_r+0x32>
 800a700:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800a702:	f7fd ff4e 	bl	80085a2 <__retarget_lock_acquire_recursive>
 800a706:	4628      	mov	r0, r5
 800a708:	4621      	mov	r1, r4
 800a70a:	f7ff ff63 	bl	800a5d4 <__sflush_r>
 800a70e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800a710:	4605      	mov	r5, r0
 800a712:	07da      	lsls	r2, r3, #31
 800a714:	d4e4      	bmi.n	800a6e0 <_fflush_r+0xc>
 800a716:	89a3      	ldrh	r3, [r4, #12]
 800a718:	059b      	lsls	r3, r3, #22
 800a71a:	d4e1      	bmi.n	800a6e0 <_fflush_r+0xc>
 800a71c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800a71e:	f7fd ff41 	bl	80085a4 <__retarget_lock_release_recursive>
 800a722:	e7dd      	b.n	800a6e0 <_fflush_r+0xc>

0800a724 <fiprintf>:
 800a724:	b40e      	push	{r1, r2, r3}
 800a726:	b503      	push	{r0, r1, lr}
 800a728:	4601      	mov	r1, r0
 800a72a:	ab03      	add	r3, sp, #12
 800a72c:	4805      	ldr	r0, [pc, #20]	@ (800a744 <fiprintf+0x20>)
 800a72e:	f853 2b04 	ldr.w	r2, [r3], #4
 800a732:	6800      	ldr	r0, [r0, #0]
 800a734:	9301      	str	r3, [sp, #4]
 800a736:	f7ff fe35 	bl	800a3a4 <_vfiprintf_r>
 800a73a:	b002      	add	sp, #8
 800a73c:	f85d eb04 	ldr.w	lr, [sp], #4
 800a740:	b003      	add	sp, #12
 800a742:	4770      	bx	lr
 800a744:	200001a0 	.word	0x200001a0

0800a748 <__swhatbuf_r>:
 800a748:	b570      	push	{r4, r5, r6, lr}
 800a74a:	460c      	mov	r4, r1
 800a74c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a750:	4615      	mov	r5, r2
 800a752:	2900      	cmp	r1, #0
 800a754:	461e      	mov	r6, r3
 800a756:	b096      	sub	sp, #88	@ 0x58
 800a758:	da0c      	bge.n	800a774 <__swhatbuf_r+0x2c>
 800a75a:	89a3      	ldrh	r3, [r4, #12]
 800a75c:	2100      	movs	r1, #0
 800a75e:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800a762:	bf14      	ite	ne
 800a764:	2340      	movne	r3, #64	@ 0x40
 800a766:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800a76a:	2000      	movs	r0, #0
 800a76c:	6031      	str	r1, [r6, #0]
 800a76e:	602b      	str	r3, [r5, #0]
 800a770:	b016      	add	sp, #88	@ 0x58
 800a772:	bd70      	pop	{r4, r5, r6, pc}
 800a774:	466a      	mov	r2, sp
 800a776:	f000 f849 	bl	800a80c <_fstat_r>
 800a77a:	2800      	cmp	r0, #0
 800a77c:	dbed      	blt.n	800a75a <__swhatbuf_r+0x12>
 800a77e:	9901      	ldr	r1, [sp, #4]
 800a780:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800a784:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800a788:	4259      	negs	r1, r3
 800a78a:	4159      	adcs	r1, r3
 800a78c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800a790:	e7eb      	b.n	800a76a <__swhatbuf_r+0x22>

0800a792 <__smakebuf_r>:
 800a792:	898b      	ldrh	r3, [r1, #12]
 800a794:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a796:	079d      	lsls	r5, r3, #30
 800a798:	4606      	mov	r6, r0
 800a79a:	460c      	mov	r4, r1
 800a79c:	d507      	bpl.n	800a7ae <__smakebuf_r+0x1c>
 800a79e:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800a7a2:	6023      	str	r3, [r4, #0]
 800a7a4:	6123      	str	r3, [r4, #16]
 800a7a6:	2301      	movs	r3, #1
 800a7a8:	6163      	str	r3, [r4, #20]
 800a7aa:	b003      	add	sp, #12
 800a7ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a7ae:	466a      	mov	r2, sp
 800a7b0:	ab01      	add	r3, sp, #4
 800a7b2:	f7ff ffc9 	bl	800a748 <__swhatbuf_r>
 800a7b6:	9f00      	ldr	r7, [sp, #0]
 800a7b8:	4605      	mov	r5, r0
 800a7ba:	4639      	mov	r1, r7
 800a7bc:	4630      	mov	r0, r6
 800a7be:	f7fc f8e1 	bl	8006984 <_malloc_r>
 800a7c2:	b948      	cbnz	r0, 800a7d8 <__smakebuf_r+0x46>
 800a7c4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800a7c8:	059a      	lsls	r2, r3, #22
 800a7ca:	d4ee      	bmi.n	800a7aa <__smakebuf_r+0x18>
 800a7cc:	f023 0303 	bic.w	r3, r3, #3
 800a7d0:	f043 0302 	orr.w	r3, r3, #2
 800a7d4:	81a3      	strh	r3, [r4, #12]
 800a7d6:	e7e2      	b.n	800a79e <__smakebuf_r+0xc>
 800a7d8:	89a3      	ldrh	r3, [r4, #12]
 800a7da:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800a7de:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800a7e2:	81a3      	strh	r3, [r4, #12]
 800a7e4:	9b01      	ldr	r3, [sp, #4]
 800a7e6:	6020      	str	r0, [r4, #0]
 800a7e8:	b15b      	cbz	r3, 800a802 <__smakebuf_r+0x70>
 800a7ea:	4630      	mov	r0, r6
 800a7ec:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800a7f0:	f000 f81e 	bl	800a830 <_isatty_r>
 800a7f4:	b128      	cbz	r0, 800a802 <__smakebuf_r+0x70>
 800a7f6:	89a3      	ldrh	r3, [r4, #12]
 800a7f8:	f023 0303 	bic.w	r3, r3, #3
 800a7fc:	f043 0301 	orr.w	r3, r3, #1
 800a800:	81a3      	strh	r3, [r4, #12]
 800a802:	89a3      	ldrh	r3, [r4, #12]
 800a804:	431d      	orrs	r5, r3
 800a806:	81a5      	strh	r5, [r4, #12]
 800a808:	e7cf      	b.n	800a7aa <__smakebuf_r+0x18>
	...

0800a80c <_fstat_r>:
 800a80c:	b538      	push	{r3, r4, r5, lr}
 800a80e:	2300      	movs	r3, #0
 800a810:	4d06      	ldr	r5, [pc, #24]	@ (800a82c <_fstat_r+0x20>)
 800a812:	4604      	mov	r4, r0
 800a814:	4608      	mov	r0, r1
 800a816:	4611      	mov	r1, r2
 800a818:	602b      	str	r3, [r5, #0]
 800a81a:	f7f8 fec2 	bl	80035a2 <_fstat>
 800a81e:	1c43      	adds	r3, r0, #1
 800a820:	d102      	bne.n	800a828 <_fstat_r+0x1c>
 800a822:	682b      	ldr	r3, [r5, #0]
 800a824:	b103      	cbz	r3, 800a828 <_fstat_r+0x1c>
 800a826:	6023      	str	r3, [r4, #0]
 800a828:	bd38      	pop	{r3, r4, r5, pc}
 800a82a:	bf00      	nop
 800a82c:	2000066c 	.word	0x2000066c

0800a830 <_isatty_r>:
 800a830:	b538      	push	{r3, r4, r5, lr}
 800a832:	2300      	movs	r3, #0
 800a834:	4d05      	ldr	r5, [pc, #20]	@ (800a84c <_isatty_r+0x1c>)
 800a836:	4604      	mov	r4, r0
 800a838:	4608      	mov	r0, r1
 800a83a:	602b      	str	r3, [r5, #0]
 800a83c:	f7f8 feb6 	bl	80035ac <_isatty>
 800a840:	1c43      	adds	r3, r0, #1
 800a842:	d102      	bne.n	800a84a <_isatty_r+0x1a>
 800a844:	682b      	ldr	r3, [r5, #0]
 800a846:	b103      	cbz	r3, 800a84a <_isatty_r+0x1a>
 800a848:	6023      	str	r3, [r4, #0]
 800a84a:	bd38      	pop	{r3, r4, r5, pc}
 800a84c:	2000066c 	.word	0x2000066c

0800a850 <abort>:
 800a850:	2006      	movs	r0, #6
 800a852:	b508      	push	{r3, lr}
 800a854:	f000 f840 	bl	800a8d8 <raise>
 800a858:	2001      	movs	r0, #1
 800a85a:	f7f8 fe89 	bl	8003570 <_exit>

0800a85e <_calloc_r>:
 800a85e:	b570      	push	{r4, r5, r6, lr}
 800a860:	fba1 5402 	umull	r5, r4, r1, r2
 800a864:	b93c      	cbnz	r4, 800a876 <_calloc_r+0x18>
 800a866:	4629      	mov	r1, r5
 800a868:	f7fc f88c 	bl	8006984 <_malloc_r>
 800a86c:	4606      	mov	r6, r0
 800a86e:	b928      	cbnz	r0, 800a87c <_calloc_r+0x1e>
 800a870:	2600      	movs	r6, #0
 800a872:	4630      	mov	r0, r6
 800a874:	bd70      	pop	{r4, r5, r6, pc}
 800a876:	220c      	movs	r2, #12
 800a878:	6002      	str	r2, [r0, #0]
 800a87a:	e7f9      	b.n	800a870 <_calloc_r+0x12>
 800a87c:	462a      	mov	r2, r5
 800a87e:	4621      	mov	r1, r4
 800a880:	f7fd fd78 	bl	8008374 <memset>
 800a884:	e7f5      	b.n	800a872 <_calloc_r+0x14>

0800a886 <_raise_r>:
 800a886:	291f      	cmp	r1, #31
 800a888:	b538      	push	{r3, r4, r5, lr}
 800a88a:	4605      	mov	r5, r0
 800a88c:	460c      	mov	r4, r1
 800a88e:	d904      	bls.n	800a89a <_raise_r+0x14>
 800a890:	2316      	movs	r3, #22
 800a892:	6003      	str	r3, [r0, #0]
 800a894:	f04f 30ff 	mov.w	r0, #4294967295
 800a898:	bd38      	pop	{r3, r4, r5, pc}
 800a89a:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 800a89c:	b112      	cbz	r2, 800a8a4 <_raise_r+0x1e>
 800a89e:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800a8a2:	b94b      	cbnz	r3, 800a8b8 <_raise_r+0x32>
 800a8a4:	4628      	mov	r0, r5
 800a8a6:	f000 f831 	bl	800a90c <_getpid_r>
 800a8aa:	4622      	mov	r2, r4
 800a8ac:	4601      	mov	r1, r0
 800a8ae:	4628      	mov	r0, r5
 800a8b0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800a8b4:	f000 b818 	b.w	800a8e8 <_kill_r>
 800a8b8:	2b01      	cmp	r3, #1
 800a8ba:	d00a      	beq.n	800a8d2 <_raise_r+0x4c>
 800a8bc:	1c59      	adds	r1, r3, #1
 800a8be:	d103      	bne.n	800a8c8 <_raise_r+0x42>
 800a8c0:	2316      	movs	r3, #22
 800a8c2:	6003      	str	r3, [r0, #0]
 800a8c4:	2001      	movs	r0, #1
 800a8c6:	e7e7      	b.n	800a898 <_raise_r+0x12>
 800a8c8:	2100      	movs	r1, #0
 800a8ca:	4620      	mov	r0, r4
 800a8cc:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 800a8d0:	4798      	blx	r3
 800a8d2:	2000      	movs	r0, #0
 800a8d4:	e7e0      	b.n	800a898 <_raise_r+0x12>
	...

0800a8d8 <raise>:
 800a8d8:	4b02      	ldr	r3, [pc, #8]	@ (800a8e4 <raise+0xc>)
 800a8da:	4601      	mov	r1, r0
 800a8dc:	6818      	ldr	r0, [r3, #0]
 800a8de:	f7ff bfd2 	b.w	800a886 <_raise_r>
 800a8e2:	bf00      	nop
 800a8e4:	200001a0 	.word	0x200001a0

0800a8e8 <_kill_r>:
 800a8e8:	b538      	push	{r3, r4, r5, lr}
 800a8ea:	2300      	movs	r3, #0
 800a8ec:	4d06      	ldr	r5, [pc, #24]	@ (800a908 <_kill_r+0x20>)
 800a8ee:	4604      	mov	r4, r0
 800a8f0:	4608      	mov	r0, r1
 800a8f2:	4611      	mov	r1, r2
 800a8f4:	602b      	str	r3, [r5, #0]
 800a8f6:	f7f8 fe33 	bl	8003560 <_kill>
 800a8fa:	1c43      	adds	r3, r0, #1
 800a8fc:	d102      	bne.n	800a904 <_kill_r+0x1c>
 800a8fe:	682b      	ldr	r3, [r5, #0]
 800a900:	b103      	cbz	r3, 800a904 <_kill_r+0x1c>
 800a902:	6023      	str	r3, [r4, #0]
 800a904:	bd38      	pop	{r3, r4, r5, pc}
 800a906:	bf00      	nop
 800a908:	2000066c 	.word	0x2000066c

0800a90c <_getpid_r>:
 800a90c:	f7f8 be26 	b.w	800355c <_getpid>

0800a910 <pow>:
 800a910:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a914:	4614      	mov	r4, r2
 800a916:	461d      	mov	r5, r3
 800a918:	4680      	mov	r8, r0
 800a91a:	4689      	mov	r9, r1
 800a91c:	f000 faf4 	bl	800af08 <__ieee754_pow>
 800a920:	4622      	mov	r2, r4
 800a922:	4606      	mov	r6, r0
 800a924:	460f      	mov	r7, r1
 800a926:	462b      	mov	r3, r5
 800a928:	4620      	mov	r0, r4
 800a92a:	4629      	mov	r1, r5
 800a92c:	f7f6 f878 	bl	8000a20 <__aeabi_dcmpun>
 800a930:	bbc8      	cbnz	r0, 800a9a6 <pow+0x96>
 800a932:	2200      	movs	r2, #0
 800a934:	2300      	movs	r3, #0
 800a936:	4640      	mov	r0, r8
 800a938:	4649      	mov	r1, r9
 800a93a:	f7f6 f83f 	bl	80009bc <__aeabi_dcmpeq>
 800a93e:	b1b8      	cbz	r0, 800a970 <pow+0x60>
 800a940:	2200      	movs	r2, #0
 800a942:	2300      	movs	r3, #0
 800a944:	4620      	mov	r0, r4
 800a946:	4629      	mov	r1, r5
 800a948:	f7f6 f838 	bl	80009bc <__aeabi_dcmpeq>
 800a94c:	2800      	cmp	r0, #0
 800a94e:	d141      	bne.n	800a9d4 <pow+0xc4>
 800a950:	4620      	mov	r0, r4
 800a952:	4629      	mov	r1, r5
 800a954:	f000 f9fc 	bl	800ad50 <finite>
 800a958:	b328      	cbz	r0, 800a9a6 <pow+0x96>
 800a95a:	2200      	movs	r2, #0
 800a95c:	2300      	movs	r3, #0
 800a95e:	4620      	mov	r0, r4
 800a960:	4629      	mov	r1, r5
 800a962:	f7f6 f835 	bl	80009d0 <__aeabi_dcmplt>
 800a966:	b1f0      	cbz	r0, 800a9a6 <pow+0x96>
 800a968:	f7fd fdf0 	bl	800854c <__errno>
 800a96c:	2322      	movs	r3, #34	@ 0x22
 800a96e:	e019      	b.n	800a9a4 <pow+0x94>
 800a970:	4630      	mov	r0, r6
 800a972:	4639      	mov	r1, r7
 800a974:	f000 f9ec 	bl	800ad50 <finite>
 800a978:	b9c8      	cbnz	r0, 800a9ae <pow+0x9e>
 800a97a:	4640      	mov	r0, r8
 800a97c:	4649      	mov	r1, r9
 800a97e:	f000 f9e7 	bl	800ad50 <finite>
 800a982:	b1a0      	cbz	r0, 800a9ae <pow+0x9e>
 800a984:	4620      	mov	r0, r4
 800a986:	4629      	mov	r1, r5
 800a988:	f000 f9e2 	bl	800ad50 <finite>
 800a98c:	b178      	cbz	r0, 800a9ae <pow+0x9e>
 800a98e:	4632      	mov	r2, r6
 800a990:	463b      	mov	r3, r7
 800a992:	4630      	mov	r0, r6
 800a994:	4639      	mov	r1, r7
 800a996:	f7f6 f843 	bl	8000a20 <__aeabi_dcmpun>
 800a99a:	2800      	cmp	r0, #0
 800a99c:	d0e4      	beq.n	800a968 <pow+0x58>
 800a99e:	f7fd fdd5 	bl	800854c <__errno>
 800a9a2:	2321      	movs	r3, #33	@ 0x21
 800a9a4:	6003      	str	r3, [r0, #0]
 800a9a6:	4630      	mov	r0, r6
 800a9a8:	4639      	mov	r1, r7
 800a9aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800a9ae:	2200      	movs	r2, #0
 800a9b0:	2300      	movs	r3, #0
 800a9b2:	4630      	mov	r0, r6
 800a9b4:	4639      	mov	r1, r7
 800a9b6:	f7f6 f801 	bl	80009bc <__aeabi_dcmpeq>
 800a9ba:	2800      	cmp	r0, #0
 800a9bc:	d0f3      	beq.n	800a9a6 <pow+0x96>
 800a9be:	4640      	mov	r0, r8
 800a9c0:	4649      	mov	r1, r9
 800a9c2:	f000 f9c5 	bl	800ad50 <finite>
 800a9c6:	2800      	cmp	r0, #0
 800a9c8:	d0ed      	beq.n	800a9a6 <pow+0x96>
 800a9ca:	4620      	mov	r0, r4
 800a9cc:	4629      	mov	r1, r5
 800a9ce:	f000 f9bf 	bl	800ad50 <finite>
 800a9d2:	e7c8      	b.n	800a966 <pow+0x56>
 800a9d4:	2600      	movs	r6, #0
 800a9d6:	4f01      	ldr	r7, [pc, #4]	@ (800a9dc <pow+0xcc>)
 800a9d8:	e7e5      	b.n	800a9a6 <pow+0x96>
 800a9da:	bf00      	nop
 800a9dc:	3ff00000 	.word	0x3ff00000

0800a9e0 <sqrt>:
 800a9e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a9e2:	4606      	mov	r6, r0
 800a9e4:	460f      	mov	r7, r1
 800a9e6:	f000 f9b9 	bl	800ad5c <__ieee754_sqrt>
 800a9ea:	4632      	mov	r2, r6
 800a9ec:	4604      	mov	r4, r0
 800a9ee:	460d      	mov	r5, r1
 800a9f0:	463b      	mov	r3, r7
 800a9f2:	4630      	mov	r0, r6
 800a9f4:	4639      	mov	r1, r7
 800a9f6:	f7f6 f813 	bl	8000a20 <__aeabi_dcmpun>
 800a9fa:	b990      	cbnz	r0, 800aa22 <sqrt+0x42>
 800a9fc:	2200      	movs	r2, #0
 800a9fe:	2300      	movs	r3, #0
 800aa00:	4630      	mov	r0, r6
 800aa02:	4639      	mov	r1, r7
 800aa04:	f7f5 ffe4 	bl	80009d0 <__aeabi_dcmplt>
 800aa08:	b158      	cbz	r0, 800aa22 <sqrt+0x42>
 800aa0a:	f7fd fd9f 	bl	800854c <__errno>
 800aa0e:	2321      	movs	r3, #33	@ 0x21
 800aa10:	2200      	movs	r2, #0
 800aa12:	6003      	str	r3, [r0, #0]
 800aa14:	2300      	movs	r3, #0
 800aa16:	4610      	mov	r0, r2
 800aa18:	4619      	mov	r1, r3
 800aa1a:	f7f5 fe91 	bl	8000740 <__aeabi_ddiv>
 800aa1e:	4604      	mov	r4, r0
 800aa20:	460d      	mov	r5, r1
 800aa22:	4620      	mov	r0, r4
 800aa24:	4629      	mov	r1, r5
 800aa26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800aa28 <atan>:
 800aa28:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aa2c:	4bbc      	ldr	r3, [pc, #752]	@ (800ad20 <atan+0x2f8>)
 800aa2e:	f021 4600 	bic.w	r6, r1, #2147483648	@ 0x80000000
 800aa32:	429e      	cmp	r6, r3
 800aa34:	4604      	mov	r4, r0
 800aa36:	460d      	mov	r5, r1
 800aa38:	468b      	mov	fp, r1
 800aa3a:	d918      	bls.n	800aa6e <atan+0x46>
 800aa3c:	4bb9      	ldr	r3, [pc, #740]	@ (800ad24 <atan+0x2fc>)
 800aa3e:	429e      	cmp	r6, r3
 800aa40:	d801      	bhi.n	800aa46 <atan+0x1e>
 800aa42:	d109      	bne.n	800aa58 <atan+0x30>
 800aa44:	b140      	cbz	r0, 800aa58 <atan+0x30>
 800aa46:	4622      	mov	r2, r4
 800aa48:	462b      	mov	r3, r5
 800aa4a:	4620      	mov	r0, r4
 800aa4c:	4629      	mov	r1, r5
 800aa4e:	f7f5 fb97 	bl	8000180 <__adddf3>
 800aa52:	4604      	mov	r4, r0
 800aa54:	460d      	mov	r5, r1
 800aa56:	e006      	b.n	800aa66 <atan+0x3e>
 800aa58:	f1bb 0f00 	cmp.w	fp, #0
 800aa5c:	f340 8123 	ble.w	800aca6 <atan+0x27e>
 800aa60:	a593      	add	r5, pc, #588	@ (adr r5, 800acb0 <atan+0x288>)
 800aa62:	e9d5 4500 	ldrd	r4, r5, [r5]
 800aa66:	4620      	mov	r0, r4
 800aa68:	4629      	mov	r1, r5
 800aa6a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800aa6e:	4bae      	ldr	r3, [pc, #696]	@ (800ad28 <atan+0x300>)
 800aa70:	429e      	cmp	r6, r3
 800aa72:	d811      	bhi.n	800aa98 <atan+0x70>
 800aa74:	f1a3 73de 	sub.w	r3, r3, #29097984	@ 0x1bc0000
 800aa78:	429e      	cmp	r6, r3
 800aa7a:	d80a      	bhi.n	800aa92 <atan+0x6a>
 800aa7c:	a38e      	add	r3, pc, #568	@ (adr r3, 800acb8 <atan+0x290>)
 800aa7e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aa82:	f7f5 fb7d 	bl	8000180 <__adddf3>
 800aa86:	2200      	movs	r2, #0
 800aa88:	4ba8      	ldr	r3, [pc, #672]	@ (800ad2c <atan+0x304>)
 800aa8a:	f7f5 ffbf 	bl	8000a0c <__aeabi_dcmpgt>
 800aa8e:	2800      	cmp	r0, #0
 800aa90:	d1e9      	bne.n	800aa66 <atan+0x3e>
 800aa92:	f04f 3aff 	mov.w	sl, #4294967295
 800aa96:	e027      	b.n	800aae8 <atan+0xc0>
 800aa98:	f000 f956 	bl	800ad48 <fabs>
 800aa9c:	4ba4      	ldr	r3, [pc, #656]	@ (800ad30 <atan+0x308>)
 800aa9e:	4604      	mov	r4, r0
 800aaa0:	429e      	cmp	r6, r3
 800aaa2:	460d      	mov	r5, r1
 800aaa4:	f200 80b8 	bhi.w	800ac18 <atan+0x1f0>
 800aaa8:	f5a3 2350 	sub.w	r3, r3, #851968	@ 0xd0000
 800aaac:	429e      	cmp	r6, r3
 800aaae:	f200 809c 	bhi.w	800abea <atan+0x1c2>
 800aab2:	4602      	mov	r2, r0
 800aab4:	460b      	mov	r3, r1
 800aab6:	f7f5 fb63 	bl	8000180 <__adddf3>
 800aaba:	2200      	movs	r2, #0
 800aabc:	4b9b      	ldr	r3, [pc, #620]	@ (800ad2c <atan+0x304>)
 800aabe:	f7f5 fb5d 	bl	800017c <__aeabi_dsub>
 800aac2:	2200      	movs	r2, #0
 800aac4:	4606      	mov	r6, r0
 800aac6:	460f      	mov	r7, r1
 800aac8:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800aacc:	4620      	mov	r0, r4
 800aace:	4629      	mov	r1, r5
 800aad0:	f7f5 fb56 	bl	8000180 <__adddf3>
 800aad4:	4602      	mov	r2, r0
 800aad6:	460b      	mov	r3, r1
 800aad8:	4630      	mov	r0, r6
 800aada:	4639      	mov	r1, r7
 800aadc:	f7f5 fe30 	bl	8000740 <__aeabi_ddiv>
 800aae0:	f04f 0a00 	mov.w	sl, #0
 800aae4:	4604      	mov	r4, r0
 800aae6:	460d      	mov	r5, r1
 800aae8:	4622      	mov	r2, r4
 800aaea:	462b      	mov	r3, r5
 800aaec:	4620      	mov	r0, r4
 800aaee:	4629      	mov	r1, r5
 800aaf0:	f7f5 fcfc 	bl	80004ec <__aeabi_dmul>
 800aaf4:	4602      	mov	r2, r0
 800aaf6:	460b      	mov	r3, r1
 800aaf8:	4680      	mov	r8, r0
 800aafa:	4689      	mov	r9, r1
 800aafc:	f7f5 fcf6 	bl	80004ec <__aeabi_dmul>
 800ab00:	a36f      	add	r3, pc, #444	@ (adr r3, 800acc0 <atan+0x298>)
 800ab02:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ab06:	4606      	mov	r6, r0
 800ab08:	460f      	mov	r7, r1
 800ab0a:	f7f5 fcef 	bl	80004ec <__aeabi_dmul>
 800ab0e:	a36e      	add	r3, pc, #440	@ (adr r3, 800acc8 <atan+0x2a0>)
 800ab10:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ab14:	f7f5 fb34 	bl	8000180 <__adddf3>
 800ab18:	4632      	mov	r2, r6
 800ab1a:	463b      	mov	r3, r7
 800ab1c:	f7f5 fce6 	bl	80004ec <__aeabi_dmul>
 800ab20:	a36b      	add	r3, pc, #428	@ (adr r3, 800acd0 <atan+0x2a8>)
 800ab22:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ab26:	f7f5 fb2b 	bl	8000180 <__adddf3>
 800ab2a:	4632      	mov	r2, r6
 800ab2c:	463b      	mov	r3, r7
 800ab2e:	f7f5 fcdd 	bl	80004ec <__aeabi_dmul>
 800ab32:	a369      	add	r3, pc, #420	@ (adr r3, 800acd8 <atan+0x2b0>)
 800ab34:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ab38:	f7f5 fb22 	bl	8000180 <__adddf3>
 800ab3c:	4632      	mov	r2, r6
 800ab3e:	463b      	mov	r3, r7
 800ab40:	f7f5 fcd4 	bl	80004ec <__aeabi_dmul>
 800ab44:	a366      	add	r3, pc, #408	@ (adr r3, 800ace0 <atan+0x2b8>)
 800ab46:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ab4a:	f7f5 fb19 	bl	8000180 <__adddf3>
 800ab4e:	4632      	mov	r2, r6
 800ab50:	463b      	mov	r3, r7
 800ab52:	f7f5 fccb 	bl	80004ec <__aeabi_dmul>
 800ab56:	a364      	add	r3, pc, #400	@ (adr r3, 800ace8 <atan+0x2c0>)
 800ab58:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ab5c:	f7f5 fb10 	bl	8000180 <__adddf3>
 800ab60:	4642      	mov	r2, r8
 800ab62:	464b      	mov	r3, r9
 800ab64:	f7f5 fcc2 	bl	80004ec <__aeabi_dmul>
 800ab68:	a361      	add	r3, pc, #388	@ (adr r3, 800acf0 <atan+0x2c8>)
 800ab6a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ab6e:	4680      	mov	r8, r0
 800ab70:	4689      	mov	r9, r1
 800ab72:	4630      	mov	r0, r6
 800ab74:	4639      	mov	r1, r7
 800ab76:	f7f5 fcb9 	bl	80004ec <__aeabi_dmul>
 800ab7a:	a35f      	add	r3, pc, #380	@ (adr r3, 800acf8 <atan+0x2d0>)
 800ab7c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ab80:	f7f5 fafc 	bl	800017c <__aeabi_dsub>
 800ab84:	4632      	mov	r2, r6
 800ab86:	463b      	mov	r3, r7
 800ab88:	f7f5 fcb0 	bl	80004ec <__aeabi_dmul>
 800ab8c:	a35c      	add	r3, pc, #368	@ (adr r3, 800ad00 <atan+0x2d8>)
 800ab8e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ab92:	f7f5 faf3 	bl	800017c <__aeabi_dsub>
 800ab96:	4632      	mov	r2, r6
 800ab98:	463b      	mov	r3, r7
 800ab9a:	f7f5 fca7 	bl	80004ec <__aeabi_dmul>
 800ab9e:	a35a      	add	r3, pc, #360	@ (adr r3, 800ad08 <atan+0x2e0>)
 800aba0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aba4:	f7f5 faea 	bl	800017c <__aeabi_dsub>
 800aba8:	4632      	mov	r2, r6
 800abaa:	463b      	mov	r3, r7
 800abac:	f7f5 fc9e 	bl	80004ec <__aeabi_dmul>
 800abb0:	a357      	add	r3, pc, #348	@ (adr r3, 800ad10 <atan+0x2e8>)
 800abb2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800abb6:	f7f5 fae1 	bl	800017c <__aeabi_dsub>
 800abba:	4632      	mov	r2, r6
 800abbc:	463b      	mov	r3, r7
 800abbe:	f7f5 fc95 	bl	80004ec <__aeabi_dmul>
 800abc2:	4602      	mov	r2, r0
 800abc4:	460b      	mov	r3, r1
 800abc6:	4640      	mov	r0, r8
 800abc8:	4649      	mov	r1, r9
 800abca:	f7f5 fad9 	bl	8000180 <__adddf3>
 800abce:	4622      	mov	r2, r4
 800abd0:	462b      	mov	r3, r5
 800abd2:	f7f5 fc8b 	bl	80004ec <__aeabi_dmul>
 800abd6:	f1ba 3fff 	cmp.w	sl, #4294967295
 800abda:	4602      	mov	r2, r0
 800abdc:	460b      	mov	r3, r1
 800abde:	d144      	bne.n	800ac6a <atan+0x242>
 800abe0:	4620      	mov	r0, r4
 800abe2:	4629      	mov	r1, r5
 800abe4:	f7f5 faca 	bl	800017c <__aeabi_dsub>
 800abe8:	e733      	b.n	800aa52 <atan+0x2a>
 800abea:	2200      	movs	r2, #0
 800abec:	4b4f      	ldr	r3, [pc, #316]	@ (800ad2c <atan+0x304>)
 800abee:	f7f5 fac5 	bl	800017c <__aeabi_dsub>
 800abf2:	2200      	movs	r2, #0
 800abf4:	4606      	mov	r6, r0
 800abf6:	460f      	mov	r7, r1
 800abf8:	4620      	mov	r0, r4
 800abfa:	4629      	mov	r1, r5
 800abfc:	4b4b      	ldr	r3, [pc, #300]	@ (800ad2c <atan+0x304>)
 800abfe:	f7f5 fabf 	bl	8000180 <__adddf3>
 800ac02:	4602      	mov	r2, r0
 800ac04:	460b      	mov	r3, r1
 800ac06:	4630      	mov	r0, r6
 800ac08:	4639      	mov	r1, r7
 800ac0a:	f7f5 fd99 	bl	8000740 <__aeabi_ddiv>
 800ac0e:	f04f 0a01 	mov.w	sl, #1
 800ac12:	4604      	mov	r4, r0
 800ac14:	460d      	mov	r5, r1
 800ac16:	e767      	b.n	800aae8 <atan+0xc0>
 800ac18:	4b46      	ldr	r3, [pc, #280]	@ (800ad34 <atan+0x30c>)
 800ac1a:	429e      	cmp	r6, r3
 800ac1c:	d21a      	bcs.n	800ac54 <atan+0x22c>
 800ac1e:	2200      	movs	r2, #0
 800ac20:	4b45      	ldr	r3, [pc, #276]	@ (800ad38 <atan+0x310>)
 800ac22:	f7f5 faab 	bl	800017c <__aeabi_dsub>
 800ac26:	2200      	movs	r2, #0
 800ac28:	4606      	mov	r6, r0
 800ac2a:	460f      	mov	r7, r1
 800ac2c:	4620      	mov	r0, r4
 800ac2e:	4629      	mov	r1, r5
 800ac30:	4b41      	ldr	r3, [pc, #260]	@ (800ad38 <atan+0x310>)
 800ac32:	f7f5 fc5b 	bl	80004ec <__aeabi_dmul>
 800ac36:	2200      	movs	r2, #0
 800ac38:	4b3c      	ldr	r3, [pc, #240]	@ (800ad2c <atan+0x304>)
 800ac3a:	f7f5 faa1 	bl	8000180 <__adddf3>
 800ac3e:	4602      	mov	r2, r0
 800ac40:	460b      	mov	r3, r1
 800ac42:	4630      	mov	r0, r6
 800ac44:	4639      	mov	r1, r7
 800ac46:	f7f5 fd7b 	bl	8000740 <__aeabi_ddiv>
 800ac4a:	f04f 0a02 	mov.w	sl, #2
 800ac4e:	4604      	mov	r4, r0
 800ac50:	460d      	mov	r5, r1
 800ac52:	e749      	b.n	800aae8 <atan+0xc0>
 800ac54:	4602      	mov	r2, r0
 800ac56:	460b      	mov	r3, r1
 800ac58:	2000      	movs	r0, #0
 800ac5a:	4938      	ldr	r1, [pc, #224]	@ (800ad3c <atan+0x314>)
 800ac5c:	f7f5 fd70 	bl	8000740 <__aeabi_ddiv>
 800ac60:	f04f 0a03 	mov.w	sl, #3
 800ac64:	4604      	mov	r4, r0
 800ac66:	460d      	mov	r5, r1
 800ac68:	e73e      	b.n	800aae8 <atan+0xc0>
 800ac6a:	4b35      	ldr	r3, [pc, #212]	@ (800ad40 <atan+0x318>)
 800ac6c:	4e35      	ldr	r6, [pc, #212]	@ (800ad44 <atan+0x31c>)
 800ac6e:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 800ac72:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ac76:	f7f5 fa81 	bl	800017c <__aeabi_dsub>
 800ac7a:	4622      	mov	r2, r4
 800ac7c:	462b      	mov	r3, r5
 800ac7e:	f7f5 fa7d 	bl	800017c <__aeabi_dsub>
 800ac82:	eb06 06ca 	add.w	r6, r6, sl, lsl #3
 800ac86:	4602      	mov	r2, r0
 800ac88:	460b      	mov	r3, r1
 800ac8a:	e9d6 0100 	ldrd	r0, r1, [r6]
 800ac8e:	f7f5 fa75 	bl	800017c <__aeabi_dsub>
 800ac92:	f1bb 0f00 	cmp.w	fp, #0
 800ac96:	4604      	mov	r4, r0
 800ac98:	460d      	mov	r5, r1
 800ac9a:	f6bf aee4 	bge.w	800aa66 <atan+0x3e>
 800ac9e:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 800aca2:	461d      	mov	r5, r3
 800aca4:	e6df      	b.n	800aa66 <atan+0x3e>
 800aca6:	a51c      	add	r5, pc, #112	@ (adr r5, 800ad18 <atan+0x2f0>)
 800aca8:	e9d5 4500 	ldrd	r4, r5, [r5]
 800acac:	e6db      	b.n	800aa66 <atan+0x3e>
 800acae:	bf00      	nop
 800acb0:	54442d18 	.word	0x54442d18
 800acb4:	3ff921fb 	.word	0x3ff921fb
 800acb8:	8800759c 	.word	0x8800759c
 800acbc:	7e37e43c 	.word	0x7e37e43c
 800acc0:	e322da11 	.word	0xe322da11
 800acc4:	3f90ad3a 	.word	0x3f90ad3a
 800acc8:	24760deb 	.word	0x24760deb
 800accc:	3fa97b4b 	.word	0x3fa97b4b
 800acd0:	a0d03d51 	.word	0xa0d03d51
 800acd4:	3fb10d66 	.word	0x3fb10d66
 800acd8:	c54c206e 	.word	0xc54c206e
 800acdc:	3fb745cd 	.word	0x3fb745cd
 800ace0:	920083ff 	.word	0x920083ff
 800ace4:	3fc24924 	.word	0x3fc24924
 800ace8:	5555550d 	.word	0x5555550d
 800acec:	3fd55555 	.word	0x3fd55555
 800acf0:	2c6a6c2f 	.word	0x2c6a6c2f
 800acf4:	bfa2b444 	.word	0xbfa2b444
 800acf8:	52defd9a 	.word	0x52defd9a
 800acfc:	3fadde2d 	.word	0x3fadde2d
 800ad00:	af749a6d 	.word	0xaf749a6d
 800ad04:	3fb3b0f2 	.word	0x3fb3b0f2
 800ad08:	fe231671 	.word	0xfe231671
 800ad0c:	3fbc71c6 	.word	0x3fbc71c6
 800ad10:	9998ebc4 	.word	0x9998ebc4
 800ad14:	3fc99999 	.word	0x3fc99999
 800ad18:	54442d18 	.word	0x54442d18
 800ad1c:	bff921fb 	.word	0xbff921fb
 800ad20:	440fffff 	.word	0x440fffff
 800ad24:	7ff00000 	.word	0x7ff00000
 800ad28:	3fdbffff 	.word	0x3fdbffff
 800ad2c:	3ff00000 	.word	0x3ff00000
 800ad30:	3ff2ffff 	.word	0x3ff2ffff
 800ad34:	40038000 	.word	0x40038000
 800ad38:	3ff80000 	.word	0x3ff80000
 800ad3c:	bff00000 	.word	0xbff00000
 800ad40:	0800c388 	.word	0x0800c388
 800ad44:	0800c3a8 	.word	0x0800c3a8

0800ad48 <fabs>:
 800ad48:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 800ad4c:	4619      	mov	r1, r3
 800ad4e:	4770      	bx	lr

0800ad50 <finite>:
 800ad50:	f041 4000 	orr.w	r0, r1, #2147483648	@ 0x80000000
 800ad54:	f500 1080 	add.w	r0, r0, #1048576	@ 0x100000
 800ad58:	0fc0      	lsrs	r0, r0, #31
 800ad5a:	4770      	bx	lr

0800ad5c <__ieee754_sqrt>:
 800ad5c:	4a67      	ldr	r2, [pc, #412]	@ (800aefc <__ieee754_sqrt+0x1a0>)
 800ad5e:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ad62:	438a      	bics	r2, r1
 800ad64:	4606      	mov	r6, r0
 800ad66:	460f      	mov	r7, r1
 800ad68:	460b      	mov	r3, r1
 800ad6a:	4604      	mov	r4, r0
 800ad6c:	d10e      	bne.n	800ad8c <__ieee754_sqrt+0x30>
 800ad6e:	4602      	mov	r2, r0
 800ad70:	f7f5 fbbc 	bl	80004ec <__aeabi_dmul>
 800ad74:	4602      	mov	r2, r0
 800ad76:	460b      	mov	r3, r1
 800ad78:	4630      	mov	r0, r6
 800ad7a:	4639      	mov	r1, r7
 800ad7c:	f7f5 fa00 	bl	8000180 <__adddf3>
 800ad80:	4606      	mov	r6, r0
 800ad82:	460f      	mov	r7, r1
 800ad84:	4630      	mov	r0, r6
 800ad86:	4639      	mov	r1, r7
 800ad88:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ad8c:	2900      	cmp	r1, #0
 800ad8e:	dc0c      	bgt.n	800adaa <__ieee754_sqrt+0x4e>
 800ad90:	f021 4200 	bic.w	r2, r1, #2147483648	@ 0x80000000
 800ad94:	4302      	orrs	r2, r0
 800ad96:	d0f5      	beq.n	800ad84 <__ieee754_sqrt+0x28>
 800ad98:	b189      	cbz	r1, 800adbe <__ieee754_sqrt+0x62>
 800ad9a:	4602      	mov	r2, r0
 800ad9c:	f7f5 f9ee 	bl	800017c <__aeabi_dsub>
 800ada0:	4602      	mov	r2, r0
 800ada2:	460b      	mov	r3, r1
 800ada4:	f7f5 fccc 	bl	8000740 <__aeabi_ddiv>
 800ada8:	e7ea      	b.n	800ad80 <__ieee754_sqrt+0x24>
 800adaa:	150a      	asrs	r2, r1, #20
 800adac:	d115      	bne.n	800adda <__ieee754_sqrt+0x7e>
 800adae:	2100      	movs	r1, #0
 800adb0:	e009      	b.n	800adc6 <__ieee754_sqrt+0x6a>
 800adb2:	0ae3      	lsrs	r3, r4, #11
 800adb4:	3a15      	subs	r2, #21
 800adb6:	0564      	lsls	r4, r4, #21
 800adb8:	2b00      	cmp	r3, #0
 800adba:	d0fa      	beq.n	800adb2 <__ieee754_sqrt+0x56>
 800adbc:	e7f7      	b.n	800adae <__ieee754_sqrt+0x52>
 800adbe:	460a      	mov	r2, r1
 800adc0:	e7fa      	b.n	800adb8 <__ieee754_sqrt+0x5c>
 800adc2:	005b      	lsls	r3, r3, #1
 800adc4:	3101      	adds	r1, #1
 800adc6:	02d8      	lsls	r0, r3, #11
 800adc8:	d5fb      	bpl.n	800adc2 <__ieee754_sqrt+0x66>
 800adca:	1e48      	subs	r0, r1, #1
 800adcc:	1a12      	subs	r2, r2, r0
 800adce:	f1c1 0020 	rsb	r0, r1, #32
 800add2:	fa24 f000 	lsr.w	r0, r4, r0
 800add6:	4303      	orrs	r3, r0
 800add8:	408c      	lsls	r4, r1
 800adda:	2600      	movs	r6, #0
 800addc:	f2a2 37ff 	subw	r7, r2, #1023	@ 0x3ff
 800ade0:	2116      	movs	r1, #22
 800ade2:	07d2      	lsls	r2, r2, #31
 800ade4:	f44f 1000 	mov.w	r0, #2097152	@ 0x200000
 800ade8:	4632      	mov	r2, r6
 800adea:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800adee:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800adf2:	bf5c      	itt	pl
 800adf4:	005b      	lslpl	r3, r3, #1
 800adf6:	eb03 73d4 	addpl.w	r3, r3, r4, lsr #31
 800adfa:	ea4f 0343 	mov.w	r3, r3, lsl #1
 800adfe:	bf58      	it	pl
 800ae00:	0064      	lslpl	r4, r4, #1
 800ae02:	eb03 73d4 	add.w	r3, r3, r4, lsr #31
 800ae06:	107f      	asrs	r7, r7, #1
 800ae08:	0064      	lsls	r4, r4, #1
 800ae0a:	1815      	adds	r5, r2, r0
 800ae0c:	429d      	cmp	r5, r3
 800ae0e:	bfde      	ittt	le
 800ae10:	182a      	addle	r2, r5, r0
 800ae12:	1b5b      	suble	r3, r3, r5
 800ae14:	1836      	addle	r6, r6, r0
 800ae16:	0fe5      	lsrs	r5, r4, #31
 800ae18:	3901      	subs	r1, #1
 800ae1a:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 800ae1e:	ea4f 0444 	mov.w	r4, r4, lsl #1
 800ae22:	ea4f 0050 	mov.w	r0, r0, lsr #1
 800ae26:	d1f0      	bne.n	800ae0a <__ieee754_sqrt+0xae>
 800ae28:	460d      	mov	r5, r1
 800ae2a:	f04f 0a20 	mov.w	sl, #32
 800ae2e:	f04f 4000 	mov.w	r0, #2147483648	@ 0x80000000
 800ae32:	429a      	cmp	r2, r3
 800ae34:	eb01 0c00 	add.w	ip, r1, r0
 800ae38:	db02      	blt.n	800ae40 <__ieee754_sqrt+0xe4>
 800ae3a:	d113      	bne.n	800ae64 <__ieee754_sqrt+0x108>
 800ae3c:	45a4      	cmp	ip, r4
 800ae3e:	d811      	bhi.n	800ae64 <__ieee754_sqrt+0x108>
 800ae40:	f1bc 0f00 	cmp.w	ip, #0
 800ae44:	eb0c 0100 	add.w	r1, ip, r0
 800ae48:	da42      	bge.n	800aed0 <__ieee754_sqrt+0x174>
 800ae4a:	2900      	cmp	r1, #0
 800ae4c:	db40      	blt.n	800aed0 <__ieee754_sqrt+0x174>
 800ae4e:	f102 0e01 	add.w	lr, r2, #1
 800ae52:	1a9b      	subs	r3, r3, r2
 800ae54:	4672      	mov	r2, lr
 800ae56:	45a4      	cmp	ip, r4
 800ae58:	bf88      	it	hi
 800ae5a:	f103 33ff 	addhi.w	r3, r3, #4294967295
 800ae5e:	eba4 040c 	sub.w	r4, r4, ip
 800ae62:	4405      	add	r5, r0
 800ae64:	ea4f 7cd4 	mov.w	ip, r4, lsr #31
 800ae68:	f1ba 0a01 	subs.w	sl, sl, #1
 800ae6c:	eb0c 0343 	add.w	r3, ip, r3, lsl #1
 800ae70:	ea4f 0444 	mov.w	r4, r4, lsl #1
 800ae74:	ea4f 0050 	mov.w	r0, r0, lsr #1
 800ae78:	d1db      	bne.n	800ae32 <__ieee754_sqrt+0xd6>
 800ae7a:	431c      	orrs	r4, r3
 800ae7c:	d01a      	beq.n	800aeb4 <__ieee754_sqrt+0x158>
 800ae7e:	4c20      	ldr	r4, [pc, #128]	@ (800af00 <__ieee754_sqrt+0x1a4>)
 800ae80:	f8df b080 	ldr.w	fp, [pc, #128]	@ 800af04 <__ieee754_sqrt+0x1a8>
 800ae84:	e9d4 0100 	ldrd	r0, r1, [r4]
 800ae88:	e9db 2300 	ldrd	r2, r3, [fp]
 800ae8c:	f7f5 f976 	bl	800017c <__aeabi_dsub>
 800ae90:	e9d4 8900 	ldrd	r8, r9, [r4]
 800ae94:	4602      	mov	r2, r0
 800ae96:	460b      	mov	r3, r1
 800ae98:	4640      	mov	r0, r8
 800ae9a:	4649      	mov	r1, r9
 800ae9c:	f7f5 fda2 	bl	80009e4 <__aeabi_dcmple>
 800aea0:	b140      	cbz	r0, 800aeb4 <__ieee754_sqrt+0x158>
 800aea2:	e9d4 0100 	ldrd	r0, r1, [r4]
 800aea6:	e9db 2300 	ldrd	r2, r3, [fp]
 800aeaa:	f1b5 3fff 	cmp.w	r5, #4294967295
 800aeae:	d111      	bne.n	800aed4 <__ieee754_sqrt+0x178>
 800aeb0:	4655      	mov	r5, sl
 800aeb2:	3601      	adds	r6, #1
 800aeb4:	1072      	asrs	r2, r6, #1
 800aeb6:	086b      	lsrs	r3, r5, #1
 800aeb8:	07f1      	lsls	r1, r6, #31
 800aeba:	f102 527f 	add.w	r2, r2, #1069547520	@ 0x3fc00000
 800aebe:	f502 1200 	add.w	r2, r2, #2097152	@ 0x200000
 800aec2:	bf48      	it	mi
 800aec4:	f043 4300 	orrmi.w	r3, r3, #2147483648	@ 0x80000000
 800aec8:	4618      	mov	r0, r3
 800aeca:	eb02 5107 	add.w	r1, r2, r7, lsl #20
 800aece:	e757      	b.n	800ad80 <__ieee754_sqrt+0x24>
 800aed0:	4696      	mov	lr, r2
 800aed2:	e7be      	b.n	800ae52 <__ieee754_sqrt+0xf6>
 800aed4:	f7f5 f954 	bl	8000180 <__adddf3>
 800aed8:	e9d4 8900 	ldrd	r8, r9, [r4]
 800aedc:	4602      	mov	r2, r0
 800aede:	460b      	mov	r3, r1
 800aee0:	4640      	mov	r0, r8
 800aee2:	4649      	mov	r1, r9
 800aee4:	f7f5 fd74 	bl	80009d0 <__aeabi_dcmplt>
 800aee8:	b120      	cbz	r0, 800aef4 <__ieee754_sqrt+0x198>
 800aeea:	1ca8      	adds	r0, r5, #2
 800aeec:	bf08      	it	eq
 800aeee:	3601      	addeq	r6, #1
 800aef0:	3502      	adds	r5, #2
 800aef2:	e7df      	b.n	800aeb4 <__ieee754_sqrt+0x158>
 800aef4:	1c6b      	adds	r3, r5, #1
 800aef6:	f023 0501 	bic.w	r5, r3, #1
 800aefa:	e7db      	b.n	800aeb4 <__ieee754_sqrt+0x158>
 800aefc:	7ff00000 	.word	0x7ff00000
 800af00:	200001f8 	.word	0x200001f8
 800af04:	200001f0 	.word	0x200001f0

0800af08 <__ieee754_pow>:
 800af08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800af0c:	b091      	sub	sp, #68	@ 0x44
 800af0e:	e9cd 2300 	strd	r2, r3, [sp]
 800af12:	468b      	mov	fp, r1
 800af14:	e9dd 1800 	ldrd	r1, r8, [sp]
 800af18:	f028 4700 	bic.w	r7, r8, #2147483648	@ 0x80000000
 800af1c:	4682      	mov	sl, r0
 800af1e:	ea57 0001 	orrs.w	r0, r7, r1
 800af22:	d112      	bne.n	800af4a <__ieee754_pow+0x42>
 800af24:	4653      	mov	r3, sl
 800af26:	f48b 2200 	eor.w	r2, fp, #524288	@ 0x80000
 800af2a:	18db      	adds	r3, r3, r3
 800af2c:	4152      	adcs	r2, r2
 800af2e:	4298      	cmp	r0, r3
 800af30:	4b91      	ldr	r3, [pc, #580]	@ (800b178 <__ieee754_pow+0x270>)
 800af32:	4193      	sbcs	r3, r2
 800af34:	f080 84ce 	bcs.w	800b8d4 <__ieee754_pow+0x9cc>
 800af38:	e9dd 2300 	ldrd	r2, r3, [sp]
 800af3c:	4650      	mov	r0, sl
 800af3e:	4659      	mov	r1, fp
 800af40:	f7f5 f91e 	bl	8000180 <__adddf3>
 800af44:	b011      	add	sp, #68	@ 0x44
 800af46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800af4a:	4b8c      	ldr	r3, [pc, #560]	@ (800b17c <__ieee754_pow+0x274>)
 800af4c:	f02b 4600 	bic.w	r6, fp, #2147483648	@ 0x80000000
 800af50:	429e      	cmp	r6, r3
 800af52:	465d      	mov	r5, fp
 800af54:	46d1      	mov	r9, sl
 800af56:	d807      	bhi.n	800af68 <__ieee754_pow+0x60>
 800af58:	d102      	bne.n	800af60 <__ieee754_pow+0x58>
 800af5a:	f1ba 0f00 	cmp.w	sl, #0
 800af5e:	d1eb      	bne.n	800af38 <__ieee754_pow+0x30>
 800af60:	429f      	cmp	r7, r3
 800af62:	d801      	bhi.n	800af68 <__ieee754_pow+0x60>
 800af64:	d10f      	bne.n	800af86 <__ieee754_pow+0x7e>
 800af66:	b171      	cbz	r1, 800af86 <__ieee754_pow+0x7e>
 800af68:	f105 4540 	add.w	r5, r5, #3221225472	@ 0xc0000000
 800af6c:	f505 1580 	add.w	r5, r5, #1048576	@ 0x100000
 800af70:	ea55 0509 	orrs.w	r5, r5, r9
 800af74:	d1e0      	bne.n	800af38 <__ieee754_pow+0x30>
 800af76:	e9dd 3200 	ldrd	r3, r2, [sp]
 800af7a:	18db      	adds	r3, r3, r3
 800af7c:	f482 2200 	eor.w	r2, r2, #524288	@ 0x80000
 800af80:	4152      	adcs	r2, r2
 800af82:	429d      	cmp	r5, r3
 800af84:	e7d4      	b.n	800af30 <__ieee754_pow+0x28>
 800af86:	2d00      	cmp	r5, #0
 800af88:	4633      	mov	r3, r6
 800af8a:	da39      	bge.n	800b000 <__ieee754_pow+0xf8>
 800af8c:	4a7c      	ldr	r2, [pc, #496]	@ (800b180 <__ieee754_pow+0x278>)
 800af8e:	4297      	cmp	r7, r2
 800af90:	d84e      	bhi.n	800b030 <__ieee754_pow+0x128>
 800af92:	f1a2 7254 	sub.w	r2, r2, #55574528	@ 0x3500000
 800af96:	4297      	cmp	r7, r2
 800af98:	f240 84ab 	bls.w	800b8f2 <__ieee754_pow+0x9ea>
 800af9c:	153a      	asrs	r2, r7, #20
 800af9e:	f2a2 32ff 	subw	r2, r2, #1023	@ 0x3ff
 800afa2:	2a14      	cmp	r2, #20
 800afa4:	dd0f      	ble.n	800afc6 <__ieee754_pow+0xbe>
 800afa6:	f1c2 0234 	rsb	r2, r2, #52	@ 0x34
 800afaa:	fa21 f402 	lsr.w	r4, r1, r2
 800afae:	fa04 f202 	lsl.w	r2, r4, r2
 800afb2:	428a      	cmp	r2, r1
 800afb4:	f040 849d 	bne.w	800b8f2 <__ieee754_pow+0x9ea>
 800afb8:	f004 0401 	and.w	r4, r4, #1
 800afbc:	f1c4 0402 	rsb	r4, r4, #2
 800afc0:	2900      	cmp	r1, #0
 800afc2:	d15a      	bne.n	800b07a <__ieee754_pow+0x172>
 800afc4:	e00e      	b.n	800afe4 <__ieee754_pow+0xdc>
 800afc6:	2900      	cmp	r1, #0
 800afc8:	d156      	bne.n	800b078 <__ieee754_pow+0x170>
 800afca:	f1c2 0214 	rsb	r2, r2, #20
 800afce:	fa47 f402 	asr.w	r4, r7, r2
 800afd2:	fa04 f202 	lsl.w	r2, r4, r2
 800afd6:	42ba      	cmp	r2, r7
 800afd8:	f040 8488 	bne.w	800b8ec <__ieee754_pow+0x9e4>
 800afdc:	f004 0401 	and.w	r4, r4, #1
 800afe0:	f1c4 0402 	rsb	r4, r4, #2
 800afe4:	4a67      	ldr	r2, [pc, #412]	@ (800b184 <__ieee754_pow+0x27c>)
 800afe6:	4297      	cmp	r7, r2
 800afe8:	d130      	bne.n	800b04c <__ieee754_pow+0x144>
 800afea:	f1b8 0f00 	cmp.w	r8, #0
 800afee:	f280 8479 	bge.w	800b8e4 <__ieee754_pow+0x9dc>
 800aff2:	4652      	mov	r2, sl
 800aff4:	465b      	mov	r3, fp
 800aff6:	2000      	movs	r0, #0
 800aff8:	4962      	ldr	r1, [pc, #392]	@ (800b184 <__ieee754_pow+0x27c>)
 800affa:	f7f5 fba1 	bl	8000740 <__aeabi_ddiv>
 800affe:	e7a1      	b.n	800af44 <__ieee754_pow+0x3c>
 800b000:	2400      	movs	r4, #0
 800b002:	2900      	cmp	r1, #0
 800b004:	d139      	bne.n	800b07a <__ieee754_pow+0x172>
 800b006:	4a5d      	ldr	r2, [pc, #372]	@ (800b17c <__ieee754_pow+0x274>)
 800b008:	4297      	cmp	r7, r2
 800b00a:	d1eb      	bne.n	800afe4 <__ieee754_pow+0xdc>
 800b00c:	f106 4340 	add.w	r3, r6, #3221225472	@ 0xc0000000
 800b010:	f503 1380 	add.w	r3, r3, #1048576	@ 0x100000
 800b014:	ea53 0309 	orrs.w	r3, r3, r9
 800b018:	f000 845c 	beq.w	800b8d4 <__ieee754_pow+0x9cc>
 800b01c:	4b5a      	ldr	r3, [pc, #360]	@ (800b188 <__ieee754_pow+0x280>)
 800b01e:	429e      	cmp	r6, r3
 800b020:	d908      	bls.n	800b034 <__ieee754_pow+0x12c>
 800b022:	f1b8 0f00 	cmp.w	r8, #0
 800b026:	f2c0 8459 	blt.w	800b8dc <__ieee754_pow+0x9d4>
 800b02a:	e9dd 0100 	ldrd	r0, r1, [sp]
 800b02e:	e789      	b.n	800af44 <__ieee754_pow+0x3c>
 800b030:	2402      	movs	r4, #2
 800b032:	e7e6      	b.n	800b002 <__ieee754_pow+0xfa>
 800b034:	f1b8 0f00 	cmp.w	r8, #0
 800b038:	f04f 0000 	mov.w	r0, #0
 800b03c:	f04f 0100 	mov.w	r1, #0
 800b040:	da80      	bge.n	800af44 <__ieee754_pow+0x3c>
 800b042:	e9dd 0300 	ldrd	r0, r3, [sp]
 800b046:	f103 4100 	add.w	r1, r3, #2147483648	@ 0x80000000
 800b04a:	e77b      	b.n	800af44 <__ieee754_pow+0x3c>
 800b04c:	f1b8 4f80 	cmp.w	r8, #1073741824	@ 0x40000000
 800b050:	d106      	bne.n	800b060 <__ieee754_pow+0x158>
 800b052:	4652      	mov	r2, sl
 800b054:	465b      	mov	r3, fp
 800b056:	4650      	mov	r0, sl
 800b058:	4659      	mov	r1, fp
 800b05a:	f7f5 fa47 	bl	80004ec <__aeabi_dmul>
 800b05e:	e771      	b.n	800af44 <__ieee754_pow+0x3c>
 800b060:	4a4a      	ldr	r2, [pc, #296]	@ (800b18c <__ieee754_pow+0x284>)
 800b062:	4590      	cmp	r8, r2
 800b064:	d109      	bne.n	800b07a <__ieee754_pow+0x172>
 800b066:	2d00      	cmp	r5, #0
 800b068:	db07      	blt.n	800b07a <__ieee754_pow+0x172>
 800b06a:	4650      	mov	r0, sl
 800b06c:	4659      	mov	r1, fp
 800b06e:	b011      	add	sp, #68	@ 0x44
 800b070:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b074:	f7ff be72 	b.w	800ad5c <__ieee754_sqrt>
 800b078:	2400      	movs	r4, #0
 800b07a:	4650      	mov	r0, sl
 800b07c:	4659      	mov	r1, fp
 800b07e:	9302      	str	r3, [sp, #8]
 800b080:	f7ff fe62 	bl	800ad48 <fabs>
 800b084:	9b02      	ldr	r3, [sp, #8]
 800b086:	f1b9 0f00 	cmp.w	r9, #0
 800b08a:	d127      	bne.n	800b0dc <__ieee754_pow+0x1d4>
 800b08c:	4a3d      	ldr	r2, [pc, #244]	@ (800b184 <__ieee754_pow+0x27c>)
 800b08e:	f025 4c40 	bic.w	ip, r5, #3221225472	@ 0xc0000000
 800b092:	4594      	cmp	ip, r2
 800b094:	d000      	beq.n	800b098 <__ieee754_pow+0x190>
 800b096:	bb0e      	cbnz	r6, 800b0dc <__ieee754_pow+0x1d4>
 800b098:	f1b8 0f00 	cmp.w	r8, #0
 800b09c:	da05      	bge.n	800b0aa <__ieee754_pow+0x1a2>
 800b09e:	4602      	mov	r2, r0
 800b0a0:	460b      	mov	r3, r1
 800b0a2:	2000      	movs	r0, #0
 800b0a4:	4937      	ldr	r1, [pc, #220]	@ (800b184 <__ieee754_pow+0x27c>)
 800b0a6:	f7f5 fb4b 	bl	8000740 <__aeabi_ddiv>
 800b0aa:	2d00      	cmp	r5, #0
 800b0ac:	f6bf af4a 	bge.w	800af44 <__ieee754_pow+0x3c>
 800b0b0:	f106 4640 	add.w	r6, r6, #3221225472	@ 0xc0000000
 800b0b4:	f506 1680 	add.w	r6, r6, #1048576	@ 0x100000
 800b0b8:	4326      	orrs	r6, r4
 800b0ba:	d108      	bne.n	800b0ce <__ieee754_pow+0x1c6>
 800b0bc:	4602      	mov	r2, r0
 800b0be:	460b      	mov	r3, r1
 800b0c0:	4610      	mov	r0, r2
 800b0c2:	4619      	mov	r1, r3
 800b0c4:	f7f5 f85a 	bl	800017c <__aeabi_dsub>
 800b0c8:	4602      	mov	r2, r0
 800b0ca:	460b      	mov	r3, r1
 800b0cc:	e795      	b.n	800affa <__ieee754_pow+0xf2>
 800b0ce:	2c01      	cmp	r4, #1
 800b0d0:	f47f af38 	bne.w	800af44 <__ieee754_pow+0x3c>
 800b0d4:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 800b0d8:	4619      	mov	r1, r3
 800b0da:	e733      	b.n	800af44 <__ieee754_pow+0x3c>
 800b0dc:	0fea      	lsrs	r2, r5, #31
 800b0de:	3a01      	subs	r2, #1
 800b0e0:	ea52 0c04 	orrs.w	ip, r2, r4
 800b0e4:	d102      	bne.n	800b0ec <__ieee754_pow+0x1e4>
 800b0e6:	4652      	mov	r2, sl
 800b0e8:	465b      	mov	r3, fp
 800b0ea:	e7e9      	b.n	800b0c0 <__ieee754_pow+0x1b8>
 800b0ec:	f04f 0900 	mov.w	r9, #0
 800b0f0:	3c01      	subs	r4, #1
 800b0f2:	4314      	orrs	r4, r2
 800b0f4:	bf14      	ite	ne
 800b0f6:	f8df a08c 	ldrne.w	sl, [pc, #140]	@ 800b184 <__ieee754_pow+0x27c>
 800b0fa:	f8df a094 	ldreq.w	sl, [pc, #148]	@ 800b190 <__ieee754_pow+0x288>
 800b0fe:	f1b7 4f84 	cmp.w	r7, #1107296256	@ 0x42000000
 800b102:	e9cd 9a02 	strd	r9, sl, [sp, #8]
 800b106:	f240 8107 	bls.w	800b318 <__ieee754_pow+0x410>
 800b10a:	4b22      	ldr	r3, [pc, #136]	@ (800b194 <__ieee754_pow+0x28c>)
 800b10c:	429f      	cmp	r7, r3
 800b10e:	4b1e      	ldr	r3, [pc, #120]	@ (800b188 <__ieee754_pow+0x280>)
 800b110:	d913      	bls.n	800b13a <__ieee754_pow+0x232>
 800b112:	429e      	cmp	r6, r3
 800b114:	d808      	bhi.n	800b128 <__ieee754_pow+0x220>
 800b116:	f1b8 0f00 	cmp.w	r8, #0
 800b11a:	da08      	bge.n	800b12e <__ieee754_pow+0x226>
 800b11c:	2000      	movs	r0, #0
 800b11e:	b011      	add	sp, #68	@ 0x44
 800b120:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b124:	f000 bcb0 	b.w	800ba88 <__math_oflow>
 800b128:	f1b8 0f00 	cmp.w	r8, #0
 800b12c:	dcf6      	bgt.n	800b11c <__ieee754_pow+0x214>
 800b12e:	2000      	movs	r0, #0
 800b130:	b011      	add	sp, #68	@ 0x44
 800b132:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b136:	f000 bca2 	b.w	800ba7e <__math_uflow>
 800b13a:	429e      	cmp	r6, r3
 800b13c:	d20c      	bcs.n	800b158 <__ieee754_pow+0x250>
 800b13e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800b142:	2200      	movs	r2, #0
 800b144:	2300      	movs	r3, #0
 800b146:	f7f5 fc43 	bl	80009d0 <__aeabi_dcmplt>
 800b14a:	3800      	subs	r0, #0
 800b14c:	bf18      	it	ne
 800b14e:	2001      	movne	r0, #1
 800b150:	f1b8 0f00 	cmp.w	r8, #0
 800b154:	daec      	bge.n	800b130 <__ieee754_pow+0x228>
 800b156:	e7e2      	b.n	800b11e <__ieee754_pow+0x216>
 800b158:	4b0a      	ldr	r3, [pc, #40]	@ (800b184 <__ieee754_pow+0x27c>)
 800b15a:	2200      	movs	r2, #0
 800b15c:	429e      	cmp	r6, r3
 800b15e:	d91b      	bls.n	800b198 <__ieee754_pow+0x290>
 800b160:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800b164:	2300      	movs	r3, #0
 800b166:	f7f5 fc33 	bl	80009d0 <__aeabi_dcmplt>
 800b16a:	3800      	subs	r0, #0
 800b16c:	bf18      	it	ne
 800b16e:	2001      	movne	r0, #1
 800b170:	f1b8 0f00 	cmp.w	r8, #0
 800b174:	dcd3      	bgt.n	800b11e <__ieee754_pow+0x216>
 800b176:	e7db      	b.n	800b130 <__ieee754_pow+0x228>
 800b178:	fff00000 	.word	0xfff00000
 800b17c:	7ff00000 	.word	0x7ff00000
 800b180:	433fffff 	.word	0x433fffff
 800b184:	3ff00000 	.word	0x3ff00000
 800b188:	3fefffff 	.word	0x3fefffff
 800b18c:	3fe00000 	.word	0x3fe00000
 800b190:	bff00000 	.word	0xbff00000
 800b194:	43f00000 	.word	0x43f00000
 800b198:	4b5b      	ldr	r3, [pc, #364]	@ (800b308 <__ieee754_pow+0x400>)
 800b19a:	f7f4 ffef 	bl	800017c <__aeabi_dsub>
 800b19e:	a352      	add	r3, pc, #328	@ (adr r3, 800b2e8 <__ieee754_pow+0x3e0>)
 800b1a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b1a4:	4604      	mov	r4, r0
 800b1a6:	460d      	mov	r5, r1
 800b1a8:	f7f5 f9a0 	bl	80004ec <__aeabi_dmul>
 800b1ac:	a350      	add	r3, pc, #320	@ (adr r3, 800b2f0 <__ieee754_pow+0x3e8>)
 800b1ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b1b2:	4606      	mov	r6, r0
 800b1b4:	460f      	mov	r7, r1
 800b1b6:	4620      	mov	r0, r4
 800b1b8:	4629      	mov	r1, r5
 800b1ba:	f7f5 f997 	bl	80004ec <__aeabi_dmul>
 800b1be:	2200      	movs	r2, #0
 800b1c0:	4682      	mov	sl, r0
 800b1c2:	468b      	mov	fp, r1
 800b1c4:	4620      	mov	r0, r4
 800b1c6:	4629      	mov	r1, r5
 800b1c8:	4b50      	ldr	r3, [pc, #320]	@ (800b30c <__ieee754_pow+0x404>)
 800b1ca:	f7f5 f98f 	bl	80004ec <__aeabi_dmul>
 800b1ce:	4602      	mov	r2, r0
 800b1d0:	460b      	mov	r3, r1
 800b1d2:	a149      	add	r1, pc, #292	@ (adr r1, 800b2f8 <__ieee754_pow+0x3f0>)
 800b1d4:	e9d1 0100 	ldrd	r0, r1, [r1]
 800b1d8:	f7f4 ffd0 	bl	800017c <__aeabi_dsub>
 800b1dc:	4622      	mov	r2, r4
 800b1de:	462b      	mov	r3, r5
 800b1e0:	f7f5 f984 	bl	80004ec <__aeabi_dmul>
 800b1e4:	4602      	mov	r2, r0
 800b1e6:	460b      	mov	r3, r1
 800b1e8:	2000      	movs	r0, #0
 800b1ea:	4949      	ldr	r1, [pc, #292]	@ (800b310 <__ieee754_pow+0x408>)
 800b1ec:	f7f4 ffc6 	bl	800017c <__aeabi_dsub>
 800b1f0:	4622      	mov	r2, r4
 800b1f2:	4680      	mov	r8, r0
 800b1f4:	4689      	mov	r9, r1
 800b1f6:	462b      	mov	r3, r5
 800b1f8:	4620      	mov	r0, r4
 800b1fa:	4629      	mov	r1, r5
 800b1fc:	f7f5 f976 	bl	80004ec <__aeabi_dmul>
 800b200:	4602      	mov	r2, r0
 800b202:	460b      	mov	r3, r1
 800b204:	4640      	mov	r0, r8
 800b206:	4649      	mov	r1, r9
 800b208:	f7f5 f970 	bl	80004ec <__aeabi_dmul>
 800b20c:	a33c      	add	r3, pc, #240	@ (adr r3, 800b300 <__ieee754_pow+0x3f8>)
 800b20e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b212:	f7f5 f96b 	bl	80004ec <__aeabi_dmul>
 800b216:	4602      	mov	r2, r0
 800b218:	460b      	mov	r3, r1
 800b21a:	4650      	mov	r0, sl
 800b21c:	4659      	mov	r1, fp
 800b21e:	f7f4 ffad 	bl	800017c <__aeabi_dsub>
 800b222:	2400      	movs	r4, #0
 800b224:	4602      	mov	r2, r0
 800b226:	460b      	mov	r3, r1
 800b228:	4680      	mov	r8, r0
 800b22a:	4689      	mov	r9, r1
 800b22c:	4630      	mov	r0, r6
 800b22e:	4639      	mov	r1, r7
 800b230:	f7f4 ffa6 	bl	8000180 <__adddf3>
 800b234:	4632      	mov	r2, r6
 800b236:	463b      	mov	r3, r7
 800b238:	4620      	mov	r0, r4
 800b23a:	460d      	mov	r5, r1
 800b23c:	f7f4 ff9e 	bl	800017c <__aeabi_dsub>
 800b240:	4602      	mov	r2, r0
 800b242:	460b      	mov	r3, r1
 800b244:	4640      	mov	r0, r8
 800b246:	4649      	mov	r1, r9
 800b248:	f7f4 ff98 	bl	800017c <__aeabi_dsub>
 800b24c:	e9dd 2300 	ldrd	r2, r3, [sp]
 800b250:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800b254:	2300      	movs	r3, #0
 800b256:	9304      	str	r3, [sp, #16]
 800b258:	e9dd ab04 	ldrd	sl, fp, [sp, #16]
 800b25c:	4606      	mov	r6, r0
 800b25e:	460f      	mov	r7, r1
 800b260:	e9dd 0100 	ldrd	r0, r1, [sp]
 800b264:	4652      	mov	r2, sl
 800b266:	465b      	mov	r3, fp
 800b268:	f7f4 ff88 	bl	800017c <__aeabi_dsub>
 800b26c:	4622      	mov	r2, r4
 800b26e:	462b      	mov	r3, r5
 800b270:	f7f5 f93c 	bl	80004ec <__aeabi_dmul>
 800b274:	e9dd 2300 	ldrd	r2, r3, [sp]
 800b278:	4680      	mov	r8, r0
 800b27a:	4689      	mov	r9, r1
 800b27c:	4630      	mov	r0, r6
 800b27e:	4639      	mov	r1, r7
 800b280:	f7f5 f934 	bl	80004ec <__aeabi_dmul>
 800b284:	4602      	mov	r2, r0
 800b286:	460b      	mov	r3, r1
 800b288:	4640      	mov	r0, r8
 800b28a:	4649      	mov	r1, r9
 800b28c:	f7f4 ff78 	bl	8000180 <__adddf3>
 800b290:	4652      	mov	r2, sl
 800b292:	465b      	mov	r3, fp
 800b294:	4606      	mov	r6, r0
 800b296:	460f      	mov	r7, r1
 800b298:	4620      	mov	r0, r4
 800b29a:	4629      	mov	r1, r5
 800b29c:	f7f5 f926 	bl	80004ec <__aeabi_dmul>
 800b2a0:	460b      	mov	r3, r1
 800b2a2:	4602      	mov	r2, r0
 800b2a4:	4680      	mov	r8, r0
 800b2a6:	4689      	mov	r9, r1
 800b2a8:	4630      	mov	r0, r6
 800b2aa:	4639      	mov	r1, r7
 800b2ac:	f7f4 ff68 	bl	8000180 <__adddf3>
 800b2b0:	4b18      	ldr	r3, [pc, #96]	@ (800b314 <__ieee754_pow+0x40c>)
 800b2b2:	4604      	mov	r4, r0
 800b2b4:	4299      	cmp	r1, r3
 800b2b6:	460d      	mov	r5, r1
 800b2b8:	468a      	mov	sl, r1
 800b2ba:	468b      	mov	fp, r1
 800b2bc:	f340 82e0 	ble.w	800b880 <__ieee754_pow+0x978>
 800b2c0:	f101 433f 	add.w	r3, r1, #3204448256	@ 0xbf000000
 800b2c4:	f503 03e0 	add.w	r3, r3, #7340032	@ 0x700000
 800b2c8:	4303      	orrs	r3, r0
 800b2ca:	f000 81df 	beq.w	800b68c <__ieee754_pow+0x784>
 800b2ce:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800b2d2:	2200      	movs	r2, #0
 800b2d4:	2300      	movs	r3, #0
 800b2d6:	f7f5 fb7b 	bl	80009d0 <__aeabi_dcmplt>
 800b2da:	3800      	subs	r0, #0
 800b2dc:	bf18      	it	ne
 800b2de:	2001      	movne	r0, #1
 800b2e0:	e71d      	b.n	800b11e <__ieee754_pow+0x216>
 800b2e2:	bf00      	nop
 800b2e4:	f3af 8000 	nop.w
 800b2e8:	60000000 	.word	0x60000000
 800b2ec:	3ff71547 	.word	0x3ff71547
 800b2f0:	f85ddf44 	.word	0xf85ddf44
 800b2f4:	3e54ae0b 	.word	0x3e54ae0b
 800b2f8:	55555555 	.word	0x55555555
 800b2fc:	3fd55555 	.word	0x3fd55555
 800b300:	652b82fe 	.word	0x652b82fe
 800b304:	3ff71547 	.word	0x3ff71547
 800b308:	3ff00000 	.word	0x3ff00000
 800b30c:	3fd00000 	.word	0x3fd00000
 800b310:	3fe00000 	.word	0x3fe00000
 800b314:	408fffff 	.word	0x408fffff
 800b318:	4ad3      	ldr	r2, [pc, #844]	@ (800b668 <__ieee754_pow+0x760>)
 800b31a:	402a      	ands	r2, r5
 800b31c:	2a00      	cmp	r2, #0
 800b31e:	f040 817a 	bne.w	800b616 <__ieee754_pow+0x70e>
 800b322:	4bd2      	ldr	r3, [pc, #840]	@ (800b66c <__ieee754_pow+0x764>)
 800b324:	2200      	movs	r2, #0
 800b326:	f7f5 f8e1 	bl	80004ec <__aeabi_dmul>
 800b32a:	f06f 0434 	mvn.w	r4, #52	@ 0x34
 800b32e:	460b      	mov	r3, r1
 800b330:	151a      	asrs	r2, r3, #20
 800b332:	f2a2 32ff 	subw	r2, r2, #1023	@ 0x3ff
 800b336:	4422      	add	r2, r4
 800b338:	920a      	str	r2, [sp, #40]	@ 0x28
 800b33a:	4acd      	ldr	r2, [pc, #820]	@ (800b670 <__ieee754_pow+0x768>)
 800b33c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800b340:	f043 557f 	orr.w	r5, r3, #1069547520	@ 0x3fc00000
 800b344:	4293      	cmp	r3, r2
 800b346:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
 800b34a:	dd08      	ble.n	800b35e <__ieee754_pow+0x456>
 800b34c:	4ac9      	ldr	r2, [pc, #804]	@ (800b674 <__ieee754_pow+0x76c>)
 800b34e:	4293      	cmp	r3, r2
 800b350:	f340 8163 	ble.w	800b61a <__ieee754_pow+0x712>
 800b354:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800b356:	f5a5 1580 	sub.w	r5, r5, #1048576	@ 0x100000
 800b35a:	3301      	adds	r3, #1
 800b35c:	930a      	str	r3, [sp, #40]	@ 0x28
 800b35e:	2600      	movs	r6, #0
 800b360:	00f3      	lsls	r3, r6, #3
 800b362:	930b      	str	r3, [sp, #44]	@ 0x2c
 800b364:	4bc4      	ldr	r3, [pc, #784]	@ (800b678 <__ieee754_pow+0x770>)
 800b366:	4629      	mov	r1, r5
 800b368:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 800b36c:	e9d3 3400 	ldrd	r3, r4, [r3]
 800b370:	461a      	mov	r2, r3
 800b372:	e9cd 3408 	strd	r3, r4, [sp, #32]
 800b376:	4623      	mov	r3, r4
 800b378:	4682      	mov	sl, r0
 800b37a:	f7f4 feff 	bl	800017c <__aeabi_dsub>
 800b37e:	4652      	mov	r2, sl
 800b380:	462b      	mov	r3, r5
 800b382:	e9cd 010c 	strd	r0, r1, [sp, #48]	@ 0x30
 800b386:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800b38a:	f7f4 fef9 	bl	8000180 <__adddf3>
 800b38e:	4602      	mov	r2, r0
 800b390:	460b      	mov	r3, r1
 800b392:	2000      	movs	r0, #0
 800b394:	49b9      	ldr	r1, [pc, #740]	@ (800b67c <__ieee754_pow+0x774>)
 800b396:	f7f5 f9d3 	bl	8000740 <__aeabi_ddiv>
 800b39a:	4602      	mov	r2, r0
 800b39c:	460b      	mov	r3, r1
 800b39e:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 800b3a2:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800b3a6:	f7f5 f8a1 	bl	80004ec <__aeabi_dmul>
 800b3aa:	e9cd 0106 	strd	r0, r1, [sp, #24]
 800b3ae:	e9dd 3406 	ldrd	r3, r4, [sp, #24]
 800b3b2:	e9cd 3404 	strd	r3, r4, [sp, #16]
 800b3b6:	2300      	movs	r3, #0
 800b3b8:	2200      	movs	r2, #0
 800b3ba:	46ab      	mov	fp, r5
 800b3bc:	106d      	asrs	r5, r5, #1
 800b3be:	f045 5500 	orr.w	r5, r5, #536870912	@ 0x20000000
 800b3c2:	9304      	str	r3, [sp, #16]
 800b3c4:	f505 2500 	add.w	r5, r5, #524288	@ 0x80000
 800b3c8:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 800b3cc:	eb05 4386 	add.w	r3, r5, r6, lsl #18
 800b3d0:	4640      	mov	r0, r8
 800b3d2:	4649      	mov	r1, r9
 800b3d4:	4614      	mov	r4, r2
 800b3d6:	461d      	mov	r5, r3
 800b3d8:	f7f5 f888 	bl	80004ec <__aeabi_dmul>
 800b3dc:	4602      	mov	r2, r0
 800b3de:	460b      	mov	r3, r1
 800b3e0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800b3e4:	f7f4 feca 	bl	800017c <__aeabi_dsub>
 800b3e8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800b3ec:	4606      	mov	r6, r0
 800b3ee:	460f      	mov	r7, r1
 800b3f0:	4620      	mov	r0, r4
 800b3f2:	4629      	mov	r1, r5
 800b3f4:	f7f4 fec2 	bl	800017c <__aeabi_dsub>
 800b3f8:	4602      	mov	r2, r0
 800b3fa:	460b      	mov	r3, r1
 800b3fc:	4650      	mov	r0, sl
 800b3fe:	4659      	mov	r1, fp
 800b400:	f7f4 febc 	bl	800017c <__aeabi_dsub>
 800b404:	4642      	mov	r2, r8
 800b406:	464b      	mov	r3, r9
 800b408:	f7f5 f870 	bl	80004ec <__aeabi_dmul>
 800b40c:	4602      	mov	r2, r0
 800b40e:	460b      	mov	r3, r1
 800b410:	4630      	mov	r0, r6
 800b412:	4639      	mov	r1, r7
 800b414:	f7f4 feb2 	bl	800017c <__aeabi_dsub>
 800b418:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 800b41c:	f7f5 f866 	bl	80004ec <__aeabi_dmul>
 800b420:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800b424:	e9cd 0108 	strd	r0, r1, [sp, #32]
 800b428:	4610      	mov	r0, r2
 800b42a:	4619      	mov	r1, r3
 800b42c:	f7f5 f85e 	bl	80004ec <__aeabi_dmul>
 800b430:	a37b      	add	r3, pc, #492	@ (adr r3, 800b620 <__ieee754_pow+0x718>)
 800b432:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b436:	4604      	mov	r4, r0
 800b438:	460d      	mov	r5, r1
 800b43a:	f7f5 f857 	bl	80004ec <__aeabi_dmul>
 800b43e:	a37a      	add	r3, pc, #488	@ (adr r3, 800b628 <__ieee754_pow+0x720>)
 800b440:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b444:	f7f4 fe9c 	bl	8000180 <__adddf3>
 800b448:	4622      	mov	r2, r4
 800b44a:	462b      	mov	r3, r5
 800b44c:	f7f5 f84e 	bl	80004ec <__aeabi_dmul>
 800b450:	a377      	add	r3, pc, #476	@ (adr r3, 800b630 <__ieee754_pow+0x728>)
 800b452:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b456:	f7f4 fe93 	bl	8000180 <__adddf3>
 800b45a:	4622      	mov	r2, r4
 800b45c:	462b      	mov	r3, r5
 800b45e:	f7f5 f845 	bl	80004ec <__aeabi_dmul>
 800b462:	a375      	add	r3, pc, #468	@ (adr r3, 800b638 <__ieee754_pow+0x730>)
 800b464:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b468:	f7f4 fe8a 	bl	8000180 <__adddf3>
 800b46c:	4622      	mov	r2, r4
 800b46e:	462b      	mov	r3, r5
 800b470:	f7f5 f83c 	bl	80004ec <__aeabi_dmul>
 800b474:	a372      	add	r3, pc, #456	@ (adr r3, 800b640 <__ieee754_pow+0x738>)
 800b476:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b47a:	f7f4 fe81 	bl	8000180 <__adddf3>
 800b47e:	4622      	mov	r2, r4
 800b480:	462b      	mov	r3, r5
 800b482:	f7f5 f833 	bl	80004ec <__aeabi_dmul>
 800b486:	a370      	add	r3, pc, #448	@ (adr r3, 800b648 <__ieee754_pow+0x740>)
 800b488:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b48c:	f7f4 fe78 	bl	8000180 <__adddf3>
 800b490:	4622      	mov	r2, r4
 800b492:	4606      	mov	r6, r0
 800b494:	460f      	mov	r7, r1
 800b496:	462b      	mov	r3, r5
 800b498:	4620      	mov	r0, r4
 800b49a:	4629      	mov	r1, r5
 800b49c:	f7f5 f826 	bl	80004ec <__aeabi_dmul>
 800b4a0:	4602      	mov	r2, r0
 800b4a2:	460b      	mov	r3, r1
 800b4a4:	4630      	mov	r0, r6
 800b4a6:	4639      	mov	r1, r7
 800b4a8:	f7f5 f820 	bl	80004ec <__aeabi_dmul>
 800b4ac:	4604      	mov	r4, r0
 800b4ae:	460d      	mov	r5, r1
 800b4b0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800b4b4:	4642      	mov	r2, r8
 800b4b6:	464b      	mov	r3, r9
 800b4b8:	f7f4 fe62 	bl	8000180 <__adddf3>
 800b4bc:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800b4c0:	f7f5 f814 	bl	80004ec <__aeabi_dmul>
 800b4c4:	4622      	mov	r2, r4
 800b4c6:	462b      	mov	r3, r5
 800b4c8:	f7f4 fe5a 	bl	8000180 <__adddf3>
 800b4cc:	4642      	mov	r2, r8
 800b4ce:	4682      	mov	sl, r0
 800b4d0:	468b      	mov	fp, r1
 800b4d2:	464b      	mov	r3, r9
 800b4d4:	4640      	mov	r0, r8
 800b4d6:	4649      	mov	r1, r9
 800b4d8:	f7f5 f808 	bl	80004ec <__aeabi_dmul>
 800b4dc:	2200      	movs	r2, #0
 800b4de:	4b68      	ldr	r3, [pc, #416]	@ (800b680 <__ieee754_pow+0x778>)
 800b4e0:	4606      	mov	r6, r0
 800b4e2:	460f      	mov	r7, r1
 800b4e4:	f7f4 fe4c 	bl	8000180 <__adddf3>
 800b4e8:	4652      	mov	r2, sl
 800b4ea:	465b      	mov	r3, fp
 800b4ec:	f7f4 fe48 	bl	8000180 <__adddf3>
 800b4f0:	2400      	movs	r4, #0
 800b4f2:	460d      	mov	r5, r1
 800b4f4:	4622      	mov	r2, r4
 800b4f6:	460b      	mov	r3, r1
 800b4f8:	4640      	mov	r0, r8
 800b4fa:	4649      	mov	r1, r9
 800b4fc:	f7f4 fff6 	bl	80004ec <__aeabi_dmul>
 800b500:	2200      	movs	r2, #0
 800b502:	4680      	mov	r8, r0
 800b504:	4689      	mov	r9, r1
 800b506:	4620      	mov	r0, r4
 800b508:	4629      	mov	r1, r5
 800b50a:	4b5d      	ldr	r3, [pc, #372]	@ (800b680 <__ieee754_pow+0x778>)
 800b50c:	f7f4 fe36 	bl	800017c <__aeabi_dsub>
 800b510:	4632      	mov	r2, r6
 800b512:	463b      	mov	r3, r7
 800b514:	f7f4 fe32 	bl	800017c <__aeabi_dsub>
 800b518:	4602      	mov	r2, r0
 800b51a:	460b      	mov	r3, r1
 800b51c:	4650      	mov	r0, sl
 800b51e:	4659      	mov	r1, fp
 800b520:	f7f4 fe2c 	bl	800017c <__aeabi_dsub>
 800b524:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800b528:	f7f4 ffe0 	bl	80004ec <__aeabi_dmul>
 800b52c:	4622      	mov	r2, r4
 800b52e:	4606      	mov	r6, r0
 800b530:	460f      	mov	r7, r1
 800b532:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800b536:	462b      	mov	r3, r5
 800b538:	f7f4 ffd8 	bl	80004ec <__aeabi_dmul>
 800b53c:	4602      	mov	r2, r0
 800b53e:	460b      	mov	r3, r1
 800b540:	4630      	mov	r0, r6
 800b542:	4639      	mov	r1, r7
 800b544:	f7f4 fe1c 	bl	8000180 <__adddf3>
 800b548:	2400      	movs	r4, #0
 800b54a:	4606      	mov	r6, r0
 800b54c:	460f      	mov	r7, r1
 800b54e:	4602      	mov	r2, r0
 800b550:	460b      	mov	r3, r1
 800b552:	4640      	mov	r0, r8
 800b554:	4649      	mov	r1, r9
 800b556:	f7f4 fe13 	bl	8000180 <__adddf3>
 800b55a:	a33d      	add	r3, pc, #244	@ (adr r3, 800b650 <__ieee754_pow+0x748>)
 800b55c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b560:	4620      	mov	r0, r4
 800b562:	460d      	mov	r5, r1
 800b564:	f7f4 ffc2 	bl	80004ec <__aeabi_dmul>
 800b568:	4642      	mov	r2, r8
 800b56a:	464b      	mov	r3, r9
 800b56c:	e9cd 0106 	strd	r0, r1, [sp, #24]
 800b570:	4620      	mov	r0, r4
 800b572:	4629      	mov	r1, r5
 800b574:	f7f4 fe02 	bl	800017c <__aeabi_dsub>
 800b578:	4602      	mov	r2, r0
 800b57a:	460b      	mov	r3, r1
 800b57c:	4630      	mov	r0, r6
 800b57e:	4639      	mov	r1, r7
 800b580:	f7f4 fdfc 	bl	800017c <__aeabi_dsub>
 800b584:	a334      	add	r3, pc, #208	@ (adr r3, 800b658 <__ieee754_pow+0x750>)
 800b586:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b58a:	f7f4 ffaf 	bl	80004ec <__aeabi_dmul>
 800b58e:	a334      	add	r3, pc, #208	@ (adr r3, 800b660 <__ieee754_pow+0x758>)
 800b590:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b594:	4606      	mov	r6, r0
 800b596:	460f      	mov	r7, r1
 800b598:	4620      	mov	r0, r4
 800b59a:	4629      	mov	r1, r5
 800b59c:	f7f4 ffa6 	bl	80004ec <__aeabi_dmul>
 800b5a0:	4602      	mov	r2, r0
 800b5a2:	460b      	mov	r3, r1
 800b5a4:	4630      	mov	r0, r6
 800b5a6:	4639      	mov	r1, r7
 800b5a8:	f7f4 fdea 	bl	8000180 <__adddf3>
 800b5ac:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800b5ae:	4b35      	ldr	r3, [pc, #212]	@ (800b684 <__ieee754_pow+0x77c>)
 800b5b0:	2400      	movs	r4, #0
 800b5b2:	4413      	add	r3, r2
 800b5b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b5b8:	f7f4 fde2 	bl	8000180 <__adddf3>
 800b5bc:	4682      	mov	sl, r0
 800b5be:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800b5c0:	468b      	mov	fp, r1
 800b5c2:	f7f4 ff29 	bl	8000418 <__aeabi_i2d>
 800b5c6:	4606      	mov	r6, r0
 800b5c8:	460f      	mov	r7, r1
 800b5ca:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800b5cc:	4b2e      	ldr	r3, [pc, #184]	@ (800b688 <__ieee754_pow+0x780>)
 800b5ce:	4413      	add	r3, r2
 800b5d0:	e9d3 8900 	ldrd	r8, r9, [r3]
 800b5d4:	4652      	mov	r2, sl
 800b5d6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800b5da:	465b      	mov	r3, fp
 800b5dc:	f7f4 fdd0 	bl	8000180 <__adddf3>
 800b5e0:	4642      	mov	r2, r8
 800b5e2:	464b      	mov	r3, r9
 800b5e4:	f7f4 fdcc 	bl	8000180 <__adddf3>
 800b5e8:	4632      	mov	r2, r6
 800b5ea:	463b      	mov	r3, r7
 800b5ec:	f7f4 fdc8 	bl	8000180 <__adddf3>
 800b5f0:	4632      	mov	r2, r6
 800b5f2:	463b      	mov	r3, r7
 800b5f4:	4620      	mov	r0, r4
 800b5f6:	460d      	mov	r5, r1
 800b5f8:	f7f4 fdc0 	bl	800017c <__aeabi_dsub>
 800b5fc:	4642      	mov	r2, r8
 800b5fe:	464b      	mov	r3, r9
 800b600:	f7f4 fdbc 	bl	800017c <__aeabi_dsub>
 800b604:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800b608:	f7f4 fdb8 	bl	800017c <__aeabi_dsub>
 800b60c:	4602      	mov	r2, r0
 800b60e:	460b      	mov	r3, r1
 800b610:	4650      	mov	r0, sl
 800b612:	4659      	mov	r1, fp
 800b614:	e618      	b.n	800b248 <__ieee754_pow+0x340>
 800b616:	2400      	movs	r4, #0
 800b618:	e68a      	b.n	800b330 <__ieee754_pow+0x428>
 800b61a:	2601      	movs	r6, #1
 800b61c:	e6a0      	b.n	800b360 <__ieee754_pow+0x458>
 800b61e:	bf00      	nop
 800b620:	4a454eef 	.word	0x4a454eef
 800b624:	3fca7e28 	.word	0x3fca7e28
 800b628:	93c9db65 	.word	0x93c9db65
 800b62c:	3fcd864a 	.word	0x3fcd864a
 800b630:	a91d4101 	.word	0xa91d4101
 800b634:	3fd17460 	.word	0x3fd17460
 800b638:	518f264d 	.word	0x518f264d
 800b63c:	3fd55555 	.word	0x3fd55555
 800b640:	db6fabff 	.word	0xdb6fabff
 800b644:	3fdb6db6 	.word	0x3fdb6db6
 800b648:	33333303 	.word	0x33333303
 800b64c:	3fe33333 	.word	0x3fe33333
 800b650:	e0000000 	.word	0xe0000000
 800b654:	3feec709 	.word	0x3feec709
 800b658:	dc3a03fd 	.word	0xdc3a03fd
 800b65c:	3feec709 	.word	0x3feec709
 800b660:	145b01f5 	.word	0x145b01f5
 800b664:	be3e2fe0 	.word	0xbe3e2fe0
 800b668:	7ff00000 	.word	0x7ff00000
 800b66c:	43400000 	.word	0x43400000
 800b670:	0003988e 	.word	0x0003988e
 800b674:	000bb679 	.word	0x000bb679
 800b678:	0800c3e8 	.word	0x0800c3e8
 800b67c:	3ff00000 	.word	0x3ff00000
 800b680:	40080000 	.word	0x40080000
 800b684:	0800c3c8 	.word	0x0800c3c8
 800b688:	0800c3d8 	.word	0x0800c3d8
 800b68c:	a39a      	add	r3, pc, #616	@ (adr r3, 800b8f8 <__ieee754_pow+0x9f0>)
 800b68e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b692:	4630      	mov	r0, r6
 800b694:	4639      	mov	r1, r7
 800b696:	f7f4 fd73 	bl	8000180 <__adddf3>
 800b69a:	4642      	mov	r2, r8
 800b69c:	e9cd 0100 	strd	r0, r1, [sp]
 800b6a0:	464b      	mov	r3, r9
 800b6a2:	4620      	mov	r0, r4
 800b6a4:	4629      	mov	r1, r5
 800b6a6:	f7f4 fd69 	bl	800017c <__aeabi_dsub>
 800b6aa:	4602      	mov	r2, r0
 800b6ac:	460b      	mov	r3, r1
 800b6ae:	e9dd 0100 	ldrd	r0, r1, [sp]
 800b6b2:	f7f5 f9ab 	bl	8000a0c <__aeabi_dcmpgt>
 800b6b6:	2800      	cmp	r0, #0
 800b6b8:	f47f ae09 	bne.w	800b2ce <__ieee754_pow+0x3c6>
 800b6bc:	f44f 1380 	mov.w	r3, #1048576	@ 0x100000
 800b6c0:	ea4f 5a2a 	mov.w	sl, sl, asr #20
 800b6c4:	f2aa 3afe 	subw	sl, sl, #1022	@ 0x3fe
 800b6c8:	fa43 fa0a 	asr.w	sl, r3, sl
 800b6cc:	44da      	add	sl, fp
 800b6ce:	f3ca 510a 	ubfx	r1, sl, #20, #11
 800b6d2:	489b      	ldr	r0, [pc, #620]	@ (800b940 <__ieee754_pow+0xa38>)
 800b6d4:	f2a1 31ff 	subw	r1, r1, #1023	@ 0x3ff
 800b6d8:	4108      	asrs	r0, r1
 800b6da:	ea00 030a 	and.w	r3, r0, sl
 800b6de:	f3ca 0a13 	ubfx	sl, sl, #0, #20
 800b6e2:	f1c1 0114 	rsb	r1, r1, #20
 800b6e6:	f44a 1a80 	orr.w	sl, sl, #1048576	@ 0x100000
 800b6ea:	4640      	mov	r0, r8
 800b6ec:	fa4a fa01 	asr.w	sl, sl, r1
 800b6f0:	f1bb 0f00 	cmp.w	fp, #0
 800b6f4:	4649      	mov	r1, r9
 800b6f6:	f04f 0200 	mov.w	r2, #0
 800b6fa:	bfb8      	it	lt
 800b6fc:	f1ca 0a00 	rsblt	sl, sl, #0
 800b700:	f7f4 fd3c 	bl	800017c <__aeabi_dsub>
 800b704:	4680      	mov	r8, r0
 800b706:	4689      	mov	r9, r1
 800b708:	2400      	movs	r4, #0
 800b70a:	4632      	mov	r2, r6
 800b70c:	463b      	mov	r3, r7
 800b70e:	4640      	mov	r0, r8
 800b710:	4649      	mov	r1, r9
 800b712:	f7f4 fd35 	bl	8000180 <__adddf3>
 800b716:	a37a      	add	r3, pc, #488	@ (adr r3, 800b900 <__ieee754_pow+0x9f8>)
 800b718:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b71c:	4620      	mov	r0, r4
 800b71e:	460d      	mov	r5, r1
 800b720:	f7f4 fee4 	bl	80004ec <__aeabi_dmul>
 800b724:	4642      	mov	r2, r8
 800b726:	464b      	mov	r3, r9
 800b728:	e9cd 0100 	strd	r0, r1, [sp]
 800b72c:	4620      	mov	r0, r4
 800b72e:	4629      	mov	r1, r5
 800b730:	f7f4 fd24 	bl	800017c <__aeabi_dsub>
 800b734:	4602      	mov	r2, r0
 800b736:	460b      	mov	r3, r1
 800b738:	4630      	mov	r0, r6
 800b73a:	4639      	mov	r1, r7
 800b73c:	f7f4 fd1e 	bl	800017c <__aeabi_dsub>
 800b740:	a371      	add	r3, pc, #452	@ (adr r3, 800b908 <__ieee754_pow+0xa00>)
 800b742:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b746:	f7f4 fed1 	bl	80004ec <__aeabi_dmul>
 800b74a:	a371      	add	r3, pc, #452	@ (adr r3, 800b910 <__ieee754_pow+0xa08>)
 800b74c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b750:	4680      	mov	r8, r0
 800b752:	4689      	mov	r9, r1
 800b754:	4620      	mov	r0, r4
 800b756:	4629      	mov	r1, r5
 800b758:	f7f4 fec8 	bl	80004ec <__aeabi_dmul>
 800b75c:	4602      	mov	r2, r0
 800b75e:	460b      	mov	r3, r1
 800b760:	4640      	mov	r0, r8
 800b762:	4649      	mov	r1, r9
 800b764:	f7f4 fd0c 	bl	8000180 <__adddf3>
 800b768:	4604      	mov	r4, r0
 800b76a:	460d      	mov	r5, r1
 800b76c:	4602      	mov	r2, r0
 800b76e:	460b      	mov	r3, r1
 800b770:	e9dd 0100 	ldrd	r0, r1, [sp]
 800b774:	f7f4 fd04 	bl	8000180 <__adddf3>
 800b778:	e9dd 2300 	ldrd	r2, r3, [sp]
 800b77c:	4680      	mov	r8, r0
 800b77e:	4689      	mov	r9, r1
 800b780:	f7f4 fcfc 	bl	800017c <__aeabi_dsub>
 800b784:	4602      	mov	r2, r0
 800b786:	460b      	mov	r3, r1
 800b788:	4620      	mov	r0, r4
 800b78a:	4629      	mov	r1, r5
 800b78c:	f7f4 fcf6 	bl	800017c <__aeabi_dsub>
 800b790:	4642      	mov	r2, r8
 800b792:	4606      	mov	r6, r0
 800b794:	460f      	mov	r7, r1
 800b796:	464b      	mov	r3, r9
 800b798:	4640      	mov	r0, r8
 800b79a:	4649      	mov	r1, r9
 800b79c:	f7f4 fea6 	bl	80004ec <__aeabi_dmul>
 800b7a0:	a35d      	add	r3, pc, #372	@ (adr r3, 800b918 <__ieee754_pow+0xa10>)
 800b7a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b7a6:	4604      	mov	r4, r0
 800b7a8:	460d      	mov	r5, r1
 800b7aa:	f7f4 fe9f 	bl	80004ec <__aeabi_dmul>
 800b7ae:	a35c      	add	r3, pc, #368	@ (adr r3, 800b920 <__ieee754_pow+0xa18>)
 800b7b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b7b4:	f7f4 fce2 	bl	800017c <__aeabi_dsub>
 800b7b8:	4622      	mov	r2, r4
 800b7ba:	462b      	mov	r3, r5
 800b7bc:	f7f4 fe96 	bl	80004ec <__aeabi_dmul>
 800b7c0:	a359      	add	r3, pc, #356	@ (adr r3, 800b928 <__ieee754_pow+0xa20>)
 800b7c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b7c6:	f7f4 fcdb 	bl	8000180 <__adddf3>
 800b7ca:	4622      	mov	r2, r4
 800b7cc:	462b      	mov	r3, r5
 800b7ce:	f7f4 fe8d 	bl	80004ec <__aeabi_dmul>
 800b7d2:	a357      	add	r3, pc, #348	@ (adr r3, 800b930 <__ieee754_pow+0xa28>)
 800b7d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b7d8:	f7f4 fcd0 	bl	800017c <__aeabi_dsub>
 800b7dc:	4622      	mov	r2, r4
 800b7de:	462b      	mov	r3, r5
 800b7e0:	f7f4 fe84 	bl	80004ec <__aeabi_dmul>
 800b7e4:	a354      	add	r3, pc, #336	@ (adr r3, 800b938 <__ieee754_pow+0xa30>)
 800b7e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b7ea:	f7f4 fcc9 	bl	8000180 <__adddf3>
 800b7ee:	4622      	mov	r2, r4
 800b7f0:	462b      	mov	r3, r5
 800b7f2:	f7f4 fe7b 	bl	80004ec <__aeabi_dmul>
 800b7f6:	4602      	mov	r2, r0
 800b7f8:	460b      	mov	r3, r1
 800b7fa:	4640      	mov	r0, r8
 800b7fc:	4649      	mov	r1, r9
 800b7fe:	f7f4 fcbd 	bl	800017c <__aeabi_dsub>
 800b802:	4604      	mov	r4, r0
 800b804:	460d      	mov	r5, r1
 800b806:	4602      	mov	r2, r0
 800b808:	460b      	mov	r3, r1
 800b80a:	4640      	mov	r0, r8
 800b80c:	4649      	mov	r1, r9
 800b80e:	f7f4 fe6d 	bl	80004ec <__aeabi_dmul>
 800b812:	2200      	movs	r2, #0
 800b814:	e9cd 0100 	strd	r0, r1, [sp]
 800b818:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800b81c:	4620      	mov	r0, r4
 800b81e:	4629      	mov	r1, r5
 800b820:	f7f4 fcac 	bl	800017c <__aeabi_dsub>
 800b824:	4602      	mov	r2, r0
 800b826:	460b      	mov	r3, r1
 800b828:	e9dd 0100 	ldrd	r0, r1, [sp]
 800b82c:	f7f4 ff88 	bl	8000740 <__aeabi_ddiv>
 800b830:	4632      	mov	r2, r6
 800b832:	4604      	mov	r4, r0
 800b834:	460d      	mov	r5, r1
 800b836:	463b      	mov	r3, r7
 800b838:	4640      	mov	r0, r8
 800b83a:	4649      	mov	r1, r9
 800b83c:	f7f4 fe56 	bl	80004ec <__aeabi_dmul>
 800b840:	4632      	mov	r2, r6
 800b842:	463b      	mov	r3, r7
 800b844:	f7f4 fc9c 	bl	8000180 <__adddf3>
 800b848:	4602      	mov	r2, r0
 800b84a:	460b      	mov	r3, r1
 800b84c:	4620      	mov	r0, r4
 800b84e:	4629      	mov	r1, r5
 800b850:	f7f4 fc94 	bl	800017c <__aeabi_dsub>
 800b854:	4642      	mov	r2, r8
 800b856:	464b      	mov	r3, r9
 800b858:	f7f4 fc90 	bl	800017c <__aeabi_dsub>
 800b85c:	4602      	mov	r2, r0
 800b85e:	460b      	mov	r3, r1
 800b860:	2000      	movs	r0, #0
 800b862:	4938      	ldr	r1, [pc, #224]	@ (800b944 <__ieee754_pow+0xa3c>)
 800b864:	f7f4 fc8a 	bl	800017c <__aeabi_dsub>
 800b868:	eb01 540a 	add.w	r4, r1, sl, lsl #20
 800b86c:	f5b4 1f80 	cmp.w	r4, #1048576	@ 0x100000
 800b870:	da2e      	bge.n	800b8d0 <__ieee754_pow+0x9c8>
 800b872:	4652      	mov	r2, sl
 800b874:	f000 f870 	bl	800b958 <scalbn>
 800b878:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800b87c:	f7ff bbed 	b.w	800b05a <__ieee754_pow+0x152>
 800b880:	4c31      	ldr	r4, [pc, #196]	@ (800b948 <__ieee754_pow+0xa40>)
 800b882:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 800b886:	42a3      	cmp	r3, r4
 800b888:	d91a      	bls.n	800b8c0 <__ieee754_pow+0x9b8>
 800b88a:	4b30      	ldr	r3, [pc, #192]	@ (800b94c <__ieee754_pow+0xa44>)
 800b88c:	440b      	add	r3, r1
 800b88e:	4303      	orrs	r3, r0
 800b890:	d009      	beq.n	800b8a6 <__ieee754_pow+0x99e>
 800b892:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800b896:	2200      	movs	r2, #0
 800b898:	2300      	movs	r3, #0
 800b89a:	f7f5 f899 	bl	80009d0 <__aeabi_dcmplt>
 800b89e:	3800      	subs	r0, #0
 800b8a0:	bf18      	it	ne
 800b8a2:	2001      	movne	r0, #1
 800b8a4:	e444      	b.n	800b130 <__ieee754_pow+0x228>
 800b8a6:	4642      	mov	r2, r8
 800b8a8:	464b      	mov	r3, r9
 800b8aa:	f7f4 fc67 	bl	800017c <__aeabi_dsub>
 800b8ae:	4632      	mov	r2, r6
 800b8b0:	463b      	mov	r3, r7
 800b8b2:	f7f5 f8a1 	bl	80009f8 <__aeabi_dcmpge>
 800b8b6:	2800      	cmp	r0, #0
 800b8b8:	d1eb      	bne.n	800b892 <__ieee754_pow+0x98a>
 800b8ba:	f8df a094 	ldr.w	sl, [pc, #148]	@ 800b950 <__ieee754_pow+0xa48>
 800b8be:	e6fd      	b.n	800b6bc <__ieee754_pow+0x7b4>
 800b8c0:	469a      	mov	sl, r3
 800b8c2:	4b24      	ldr	r3, [pc, #144]	@ (800b954 <__ieee754_pow+0xa4c>)
 800b8c4:	459a      	cmp	sl, r3
 800b8c6:	f63f aef9 	bhi.w	800b6bc <__ieee754_pow+0x7b4>
 800b8ca:	f8dd a010 	ldr.w	sl, [sp, #16]
 800b8ce:	e71b      	b.n	800b708 <__ieee754_pow+0x800>
 800b8d0:	4621      	mov	r1, r4
 800b8d2:	e7d1      	b.n	800b878 <__ieee754_pow+0x970>
 800b8d4:	2000      	movs	r0, #0
 800b8d6:	491b      	ldr	r1, [pc, #108]	@ (800b944 <__ieee754_pow+0xa3c>)
 800b8d8:	f7ff bb34 	b.w	800af44 <__ieee754_pow+0x3c>
 800b8dc:	2000      	movs	r0, #0
 800b8de:	2100      	movs	r1, #0
 800b8e0:	f7ff bb30 	b.w	800af44 <__ieee754_pow+0x3c>
 800b8e4:	4650      	mov	r0, sl
 800b8e6:	4659      	mov	r1, fp
 800b8e8:	f7ff bb2c 	b.w	800af44 <__ieee754_pow+0x3c>
 800b8ec:	460c      	mov	r4, r1
 800b8ee:	f7ff bb79 	b.w	800afe4 <__ieee754_pow+0xdc>
 800b8f2:	2400      	movs	r4, #0
 800b8f4:	f7ff bb64 	b.w	800afc0 <__ieee754_pow+0xb8>
 800b8f8:	652b82fe 	.word	0x652b82fe
 800b8fc:	3c971547 	.word	0x3c971547
 800b900:	00000000 	.word	0x00000000
 800b904:	3fe62e43 	.word	0x3fe62e43
 800b908:	fefa39ef 	.word	0xfefa39ef
 800b90c:	3fe62e42 	.word	0x3fe62e42
 800b910:	0ca86c39 	.word	0x0ca86c39
 800b914:	be205c61 	.word	0xbe205c61
 800b918:	72bea4d0 	.word	0x72bea4d0
 800b91c:	3e663769 	.word	0x3e663769
 800b920:	c5d26bf1 	.word	0xc5d26bf1
 800b924:	3ebbbd41 	.word	0x3ebbbd41
 800b928:	af25de2c 	.word	0xaf25de2c
 800b92c:	3f11566a 	.word	0x3f11566a
 800b930:	16bebd93 	.word	0x16bebd93
 800b934:	3f66c16c 	.word	0x3f66c16c
 800b938:	5555553e 	.word	0x5555553e
 800b93c:	3fc55555 	.word	0x3fc55555
 800b940:	fff00000 	.word	0xfff00000
 800b944:	3ff00000 	.word	0x3ff00000
 800b948:	4090cbff 	.word	0x4090cbff
 800b94c:	3f6f3400 	.word	0x3f6f3400
 800b950:	4090cc00 	.word	0x4090cc00
 800b954:	3fe00000 	.word	0x3fe00000

0800b958 <scalbn>:
 800b958:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
 800b95c:	4616      	mov	r6, r2
 800b95e:	f3c1 520a 	ubfx	r2, r1, #20, #11
 800b962:	4683      	mov	fp, r0
 800b964:	468c      	mov	ip, r1
 800b966:	460b      	mov	r3, r1
 800b968:	b982      	cbnz	r2, 800b98c <scalbn+0x34>
 800b96a:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 800b96e:	4303      	orrs	r3, r0
 800b970:	d039      	beq.n	800b9e6 <scalbn+0x8e>
 800b972:	4b2f      	ldr	r3, [pc, #188]	@ (800ba30 <scalbn+0xd8>)
 800b974:	2200      	movs	r2, #0
 800b976:	f7f4 fdb9 	bl	80004ec <__aeabi_dmul>
 800b97a:	4b2e      	ldr	r3, [pc, #184]	@ (800ba34 <scalbn+0xdc>)
 800b97c:	4683      	mov	fp, r0
 800b97e:	429e      	cmp	r6, r3
 800b980:	468c      	mov	ip, r1
 800b982:	da0d      	bge.n	800b9a0 <scalbn+0x48>
 800b984:	a326      	add	r3, pc, #152	@ (adr r3, 800ba20 <scalbn+0xc8>)
 800b986:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b98a:	e01b      	b.n	800b9c4 <scalbn+0x6c>
 800b98c:	f240 77ff 	movw	r7, #2047	@ 0x7ff
 800b990:	42ba      	cmp	r2, r7
 800b992:	d109      	bne.n	800b9a8 <scalbn+0x50>
 800b994:	4602      	mov	r2, r0
 800b996:	f7f4 fbf3 	bl	8000180 <__adddf3>
 800b99a:	4683      	mov	fp, r0
 800b99c:	468c      	mov	ip, r1
 800b99e:	e022      	b.n	800b9e6 <scalbn+0x8e>
 800b9a0:	460b      	mov	r3, r1
 800b9a2:	f3c1 520a 	ubfx	r2, r1, #20, #11
 800b9a6:	3a36      	subs	r2, #54	@ 0x36
 800b9a8:	f24c 3150 	movw	r1, #50000	@ 0xc350
 800b9ac:	428e      	cmp	r6, r1
 800b9ae:	dd0c      	ble.n	800b9ca <scalbn+0x72>
 800b9b0:	a31d      	add	r3, pc, #116	@ (adr r3, 800ba28 <scalbn+0xd0>)
 800b9b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b9b6:	461c      	mov	r4, r3
 800b9b8:	ea4f 71dc 	mov.w	r1, ip, lsr #31
 800b9bc:	f361 74df 	bfi	r4, r1, #31, #1
 800b9c0:	4621      	mov	r1, r4
 800b9c2:	481d      	ldr	r0, [pc, #116]	@ (800ba38 <scalbn+0xe0>)
 800b9c4:	f7f4 fd92 	bl	80004ec <__aeabi_dmul>
 800b9c8:	e7e7      	b.n	800b99a <scalbn+0x42>
 800b9ca:	f240 71fe 	movw	r1, #2046	@ 0x7fe
 800b9ce:	4432      	add	r2, r6
 800b9d0:	428a      	cmp	r2, r1
 800b9d2:	dced      	bgt.n	800b9b0 <scalbn+0x58>
 800b9d4:	2a00      	cmp	r2, #0
 800b9d6:	dd0a      	ble.n	800b9ee <scalbn+0x96>
 800b9d8:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 800b9dc:	f423 03e0 	bic.w	r3, r3, #7340032	@ 0x700000
 800b9e0:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 800b9e4:	46ac      	mov	ip, r5
 800b9e6:	4658      	mov	r0, fp
 800b9e8:	4661      	mov	r1, ip
 800b9ea:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
 800b9ee:	f112 0f35 	cmn.w	r2, #53	@ 0x35
 800b9f2:	da09      	bge.n	800ba08 <scalbn+0xb0>
 800b9f4:	f00c 4300 	and.w	r3, ip, #2147483648	@ 0x80000000
 800b9f8:	f043 71d2 	orr.w	r1, r3, #27525120	@ 0x1a40000
 800b9fc:	f441 31b7 	orr.w	r1, r1, #93696	@ 0x16e00
 800ba00:	480e      	ldr	r0, [pc, #56]	@ (800ba3c <scalbn+0xe4>)
 800ba02:	f041 011f 	orr.w	r1, r1, #31
 800ba06:	e7bd      	b.n	800b984 <scalbn+0x2c>
 800ba08:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 800ba0c:	3236      	adds	r2, #54	@ 0x36
 800ba0e:	f423 03e0 	bic.w	r3, r3, #7340032	@ 0x700000
 800ba12:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 800ba16:	4658      	mov	r0, fp
 800ba18:	4629      	mov	r1, r5
 800ba1a:	2200      	movs	r2, #0
 800ba1c:	4b08      	ldr	r3, [pc, #32]	@ (800ba40 <scalbn+0xe8>)
 800ba1e:	e7d1      	b.n	800b9c4 <scalbn+0x6c>
 800ba20:	c2f8f359 	.word	0xc2f8f359
 800ba24:	01a56e1f 	.word	0x01a56e1f
 800ba28:	8800759c 	.word	0x8800759c
 800ba2c:	7e37e43c 	.word	0x7e37e43c
 800ba30:	43500000 	.word	0x43500000
 800ba34:	ffff3cb0 	.word	0xffff3cb0
 800ba38:	8800759c 	.word	0x8800759c
 800ba3c:	c2f8f359 	.word	0xc2f8f359
 800ba40:	3c900000 	.word	0x3c900000

0800ba44 <with_errno>:
 800ba44:	b570      	push	{r4, r5, r6, lr}
 800ba46:	4604      	mov	r4, r0
 800ba48:	460d      	mov	r5, r1
 800ba4a:	4616      	mov	r6, r2
 800ba4c:	f7fc fd7e 	bl	800854c <__errno>
 800ba50:	4629      	mov	r1, r5
 800ba52:	6006      	str	r6, [r0, #0]
 800ba54:	4620      	mov	r0, r4
 800ba56:	bd70      	pop	{r4, r5, r6, pc}

0800ba58 <xflow>:
 800ba58:	b513      	push	{r0, r1, r4, lr}
 800ba5a:	4604      	mov	r4, r0
 800ba5c:	4619      	mov	r1, r3
 800ba5e:	4610      	mov	r0, r2
 800ba60:	b10c      	cbz	r4, 800ba66 <xflow+0xe>
 800ba62:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 800ba66:	e9cd 2300 	strd	r2, r3, [sp]
 800ba6a:	e9dd 2300 	ldrd	r2, r3, [sp]
 800ba6e:	f7f4 fd3d 	bl	80004ec <__aeabi_dmul>
 800ba72:	2222      	movs	r2, #34	@ 0x22
 800ba74:	b002      	add	sp, #8
 800ba76:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ba7a:	f7ff bfe3 	b.w	800ba44 <with_errno>

0800ba7e <__math_uflow>:
 800ba7e:	2200      	movs	r2, #0
 800ba80:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
 800ba84:	f7ff bfe8 	b.w	800ba58 <xflow>

0800ba88 <__math_oflow>:
 800ba88:	2200      	movs	r2, #0
 800ba8a:	f04f 43e0 	mov.w	r3, #1879048192	@ 0x70000000
 800ba8e:	f7ff bfe3 	b.w	800ba58 <xflow>
	...

0800ba94 <_init>:
 800ba94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ba96:	bf00      	nop
 800ba98:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800ba9a:	bc08      	pop	{r3}
 800ba9c:	469e      	mov	lr, r3
 800ba9e:	4770      	bx	lr

0800baa0 <_fini>:
 800baa0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800baa2:	bf00      	nop
 800baa4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800baa6:	bc08      	pop	{r3}
 800baa8:	469e      	mov	lr, r3
 800baaa:	4770      	bx	lr
