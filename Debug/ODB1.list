
ODB1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000085c0  08000110  08000110  00001110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000065c  080086d0  080086d0  000096d0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08008d2c  08008d2c  0000a1e8  2**0
                  CONTENTS
  4 .ARM          00000008  08008d2c  08008d2c  00009d2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08008d34  08008d34  0000a1e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08008d34  08008d34  00009d34  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08008d38  08008d38  00009d38  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001e8  20000000  08008d3c  0000a000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000003e8  200001e8  08008f24  0000a1e8  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200005d0  08008f24  0000a5d0  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0000a1e8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00008229  00000000  00000000  0000a211  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001acd  00000000  00000000  0001243a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loclists 00000f5c  00000000  00000000  00013f07  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000003d8  00000000  00000000  00014e63  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000002c5  00000000  00000000  0001523b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00019fcb  00000000  00000000  00015500  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000985f  00000000  00000000  0002f4cb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000949f3  00000000  00000000  00038d2a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000cd71d  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00001be8  00000000  00000000  000cd760  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	@ (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	@ (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200001e8 	.word	0x200001e8
 800012c:	00000000 	.word	0x00000000
 8000130:	080086b8 	.word	0x080086b8

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	@ (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	@ (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	@ (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200001ec 	.word	0x200001ec
 800014c:	080086b8 	.word	0x080086b8

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <__aeabi_drsub>:
 8000160:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000164:	e002      	b.n	800016c <__adddf3>
 8000166:	bf00      	nop

08000168 <__aeabi_dsub>:
 8000168:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800016c <__adddf3>:
 800016c:	b530      	push	{r4, r5, lr}
 800016e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000172:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000176:	ea94 0f05 	teq	r4, r5
 800017a:	bf08      	it	eq
 800017c:	ea90 0f02 	teqeq	r0, r2
 8000180:	bf1f      	itttt	ne
 8000182:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000186:	ea55 0c02 	orrsne.w	ip, r5, r2
 800018a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800018e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000192:	f000 80e2 	beq.w	800035a <__adddf3+0x1ee>
 8000196:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800019a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800019e:	bfb8      	it	lt
 80001a0:	426d      	neglt	r5, r5
 80001a2:	dd0c      	ble.n	80001be <__adddf3+0x52>
 80001a4:	442c      	add	r4, r5
 80001a6:	ea80 0202 	eor.w	r2, r0, r2
 80001aa:	ea81 0303 	eor.w	r3, r1, r3
 80001ae:	ea82 0000 	eor.w	r0, r2, r0
 80001b2:	ea83 0101 	eor.w	r1, r3, r1
 80001b6:	ea80 0202 	eor.w	r2, r0, r2
 80001ba:	ea81 0303 	eor.w	r3, r1, r3
 80001be:	2d36      	cmp	r5, #54	@ 0x36
 80001c0:	bf88      	it	hi
 80001c2:	bd30      	pophi	{r4, r5, pc}
 80001c4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80001c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001cc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80001d0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001d4:	d002      	beq.n	80001dc <__adddf3+0x70>
 80001d6:	4240      	negs	r0, r0
 80001d8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001dc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 80001e0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001e4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001e8:	d002      	beq.n	80001f0 <__adddf3+0x84>
 80001ea:	4252      	negs	r2, r2
 80001ec:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80001f0:	ea94 0f05 	teq	r4, r5
 80001f4:	f000 80a7 	beq.w	8000346 <__adddf3+0x1da>
 80001f8:	f1a4 0401 	sub.w	r4, r4, #1
 80001fc:	f1d5 0e20 	rsbs	lr, r5, #32
 8000200:	db0d      	blt.n	800021e <__adddf3+0xb2>
 8000202:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000206:	fa22 f205 	lsr.w	r2, r2, r5
 800020a:	1880      	adds	r0, r0, r2
 800020c:	f141 0100 	adc.w	r1, r1, #0
 8000210:	fa03 f20e 	lsl.w	r2, r3, lr
 8000214:	1880      	adds	r0, r0, r2
 8000216:	fa43 f305 	asr.w	r3, r3, r5
 800021a:	4159      	adcs	r1, r3
 800021c:	e00e      	b.n	800023c <__adddf3+0xd0>
 800021e:	f1a5 0520 	sub.w	r5, r5, #32
 8000222:	f10e 0e20 	add.w	lr, lr, #32
 8000226:	2a01      	cmp	r2, #1
 8000228:	fa03 fc0e 	lsl.w	ip, r3, lr
 800022c:	bf28      	it	cs
 800022e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000232:	fa43 f305 	asr.w	r3, r3, r5
 8000236:	18c0      	adds	r0, r0, r3
 8000238:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800023c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000240:	d507      	bpl.n	8000252 <__adddf3+0xe6>
 8000242:	f04f 0e00 	mov.w	lr, #0
 8000246:	f1dc 0c00 	rsbs	ip, ip, #0
 800024a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800024e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000252:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000256:	d31b      	bcc.n	8000290 <__adddf3+0x124>
 8000258:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800025c:	d30c      	bcc.n	8000278 <__adddf3+0x10c>
 800025e:	0849      	lsrs	r1, r1, #1
 8000260:	ea5f 0030 	movs.w	r0, r0, rrx
 8000264:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000268:	f104 0401 	add.w	r4, r4, #1
 800026c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000270:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000274:	f080 809a 	bcs.w	80003ac <__adddf3+0x240>
 8000278:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800027c:	bf08      	it	eq
 800027e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000282:	f150 0000 	adcs.w	r0, r0, #0
 8000286:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800028a:	ea41 0105 	orr.w	r1, r1, r5
 800028e:	bd30      	pop	{r4, r5, pc}
 8000290:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000294:	4140      	adcs	r0, r0
 8000296:	eb41 0101 	adc.w	r1, r1, r1
 800029a:	3c01      	subs	r4, #1
 800029c:	bf28      	it	cs
 800029e:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80002a2:	d2e9      	bcs.n	8000278 <__adddf3+0x10c>
 80002a4:	f091 0f00 	teq	r1, #0
 80002a8:	bf04      	itt	eq
 80002aa:	4601      	moveq	r1, r0
 80002ac:	2000      	moveq	r0, #0
 80002ae:	fab1 f381 	clz	r3, r1
 80002b2:	bf08      	it	eq
 80002b4:	3320      	addeq	r3, #32
 80002b6:	f1a3 030b 	sub.w	r3, r3, #11
 80002ba:	f1b3 0220 	subs.w	r2, r3, #32
 80002be:	da0c      	bge.n	80002da <__adddf3+0x16e>
 80002c0:	320c      	adds	r2, #12
 80002c2:	dd08      	ble.n	80002d6 <__adddf3+0x16a>
 80002c4:	f102 0c14 	add.w	ip, r2, #20
 80002c8:	f1c2 020c 	rsb	r2, r2, #12
 80002cc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002d0:	fa21 f102 	lsr.w	r1, r1, r2
 80002d4:	e00c      	b.n	80002f0 <__adddf3+0x184>
 80002d6:	f102 0214 	add.w	r2, r2, #20
 80002da:	bfd8      	it	le
 80002dc:	f1c2 0c20 	rsble	ip, r2, #32
 80002e0:	fa01 f102 	lsl.w	r1, r1, r2
 80002e4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002e8:	bfdc      	itt	le
 80002ea:	ea41 010c 	orrle.w	r1, r1, ip
 80002ee:	4090      	lslle	r0, r2
 80002f0:	1ae4      	subs	r4, r4, r3
 80002f2:	bfa2      	ittt	ge
 80002f4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80002f8:	4329      	orrge	r1, r5
 80002fa:	bd30      	popge	{r4, r5, pc}
 80002fc:	ea6f 0404 	mvn.w	r4, r4
 8000300:	3c1f      	subs	r4, #31
 8000302:	da1c      	bge.n	800033e <__adddf3+0x1d2>
 8000304:	340c      	adds	r4, #12
 8000306:	dc0e      	bgt.n	8000326 <__adddf3+0x1ba>
 8000308:	f104 0414 	add.w	r4, r4, #20
 800030c:	f1c4 0220 	rsb	r2, r4, #32
 8000310:	fa20 f004 	lsr.w	r0, r0, r4
 8000314:	fa01 f302 	lsl.w	r3, r1, r2
 8000318:	ea40 0003 	orr.w	r0, r0, r3
 800031c:	fa21 f304 	lsr.w	r3, r1, r4
 8000320:	ea45 0103 	orr.w	r1, r5, r3
 8000324:	bd30      	pop	{r4, r5, pc}
 8000326:	f1c4 040c 	rsb	r4, r4, #12
 800032a:	f1c4 0220 	rsb	r2, r4, #32
 800032e:	fa20 f002 	lsr.w	r0, r0, r2
 8000332:	fa01 f304 	lsl.w	r3, r1, r4
 8000336:	ea40 0003 	orr.w	r0, r0, r3
 800033a:	4629      	mov	r1, r5
 800033c:	bd30      	pop	{r4, r5, pc}
 800033e:	fa21 f004 	lsr.w	r0, r1, r4
 8000342:	4629      	mov	r1, r5
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f094 0f00 	teq	r4, #0
 800034a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800034e:	bf06      	itte	eq
 8000350:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000354:	3401      	addeq	r4, #1
 8000356:	3d01      	subne	r5, #1
 8000358:	e74e      	b.n	80001f8 <__adddf3+0x8c>
 800035a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800035e:	bf18      	it	ne
 8000360:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000364:	d029      	beq.n	80003ba <__adddf3+0x24e>
 8000366:	ea94 0f05 	teq	r4, r5
 800036a:	bf08      	it	eq
 800036c:	ea90 0f02 	teqeq	r0, r2
 8000370:	d005      	beq.n	800037e <__adddf3+0x212>
 8000372:	ea54 0c00 	orrs.w	ip, r4, r0
 8000376:	bf04      	itt	eq
 8000378:	4619      	moveq	r1, r3
 800037a:	4610      	moveq	r0, r2
 800037c:	bd30      	pop	{r4, r5, pc}
 800037e:	ea91 0f03 	teq	r1, r3
 8000382:	bf1e      	ittt	ne
 8000384:	2100      	movne	r1, #0
 8000386:	2000      	movne	r0, #0
 8000388:	bd30      	popne	{r4, r5, pc}
 800038a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800038e:	d105      	bne.n	800039c <__adddf3+0x230>
 8000390:	0040      	lsls	r0, r0, #1
 8000392:	4149      	adcs	r1, r1
 8000394:	bf28      	it	cs
 8000396:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 800039a:	bd30      	pop	{r4, r5, pc}
 800039c:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80003a0:	bf3c      	itt	cc
 80003a2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80003a6:	bd30      	popcc	{r4, r5, pc}
 80003a8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003ac:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80003b0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80003b4:	f04f 0000 	mov.w	r0, #0
 80003b8:	bd30      	pop	{r4, r5, pc}
 80003ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003be:	bf1a      	itte	ne
 80003c0:	4619      	movne	r1, r3
 80003c2:	4610      	movne	r0, r2
 80003c4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003c8:	bf1c      	itt	ne
 80003ca:	460b      	movne	r3, r1
 80003cc:	4602      	movne	r2, r0
 80003ce:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003d2:	bf06      	itte	eq
 80003d4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003d8:	ea91 0f03 	teqeq	r1, r3
 80003dc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 80003e0:	bd30      	pop	{r4, r5, pc}
 80003e2:	bf00      	nop

080003e4 <__aeabi_ui2d>:
 80003e4:	f090 0f00 	teq	r0, #0
 80003e8:	bf04      	itt	eq
 80003ea:	2100      	moveq	r1, #0
 80003ec:	4770      	bxeq	lr
 80003ee:	b530      	push	{r4, r5, lr}
 80003f0:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80003f4:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80003f8:	f04f 0500 	mov.w	r5, #0
 80003fc:	f04f 0100 	mov.w	r1, #0
 8000400:	e750      	b.n	80002a4 <__adddf3+0x138>
 8000402:	bf00      	nop

08000404 <__aeabi_i2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000418:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800041c:	bf48      	it	mi
 800041e:	4240      	negmi	r0, r0
 8000420:	f04f 0100 	mov.w	r1, #0
 8000424:	e73e      	b.n	80002a4 <__adddf3+0x138>
 8000426:	bf00      	nop

08000428 <__aeabi_f2d>:
 8000428:	0042      	lsls	r2, r0, #1
 800042a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800042e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000432:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000436:	bf1f      	itttt	ne
 8000438:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800043c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000440:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000444:	4770      	bxne	lr
 8000446:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800044a:	bf08      	it	eq
 800044c:	4770      	bxeq	lr
 800044e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000452:	bf04      	itt	eq
 8000454:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000458:	4770      	bxeq	lr
 800045a:	b530      	push	{r4, r5, lr}
 800045c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000460:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000464:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000468:	e71c      	b.n	80002a4 <__adddf3+0x138>
 800046a:	bf00      	nop

0800046c <__aeabi_ul2d>:
 800046c:	ea50 0201 	orrs.w	r2, r0, r1
 8000470:	bf08      	it	eq
 8000472:	4770      	bxeq	lr
 8000474:	b530      	push	{r4, r5, lr}
 8000476:	f04f 0500 	mov.w	r5, #0
 800047a:	e00a      	b.n	8000492 <__aeabi_l2d+0x16>

0800047c <__aeabi_l2d>:
 800047c:	ea50 0201 	orrs.w	r2, r0, r1
 8000480:	bf08      	it	eq
 8000482:	4770      	bxeq	lr
 8000484:	b530      	push	{r4, r5, lr}
 8000486:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 800048a:	d502      	bpl.n	8000492 <__aeabi_l2d+0x16>
 800048c:	4240      	negs	r0, r0
 800048e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000492:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000496:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800049a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800049e:	f43f aed8 	beq.w	8000252 <__adddf3+0xe6>
 80004a2:	f04f 0203 	mov.w	r2, #3
 80004a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004aa:	bf18      	it	ne
 80004ac:	3203      	addne	r2, #3
 80004ae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004b2:	bf18      	it	ne
 80004b4:	3203      	addne	r2, #3
 80004b6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004ba:	f1c2 0320 	rsb	r3, r2, #32
 80004be:	fa00 fc03 	lsl.w	ip, r0, r3
 80004c2:	fa20 f002 	lsr.w	r0, r0, r2
 80004c6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ca:	ea40 000e 	orr.w	r0, r0, lr
 80004ce:	fa21 f102 	lsr.w	r1, r1, r2
 80004d2:	4414      	add	r4, r2
 80004d4:	e6bd      	b.n	8000252 <__adddf3+0xe6>
 80004d6:	bf00      	nop

080004d8 <__aeabi_dmul>:
 80004d8:	b570      	push	{r4, r5, r6, lr}
 80004da:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80004de:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80004e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004e6:	bf1d      	ittte	ne
 80004e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004ec:	ea94 0f0c 	teqne	r4, ip
 80004f0:	ea95 0f0c 	teqne	r5, ip
 80004f4:	f000 f8de 	bleq	80006b4 <__aeabi_dmul+0x1dc>
 80004f8:	442c      	add	r4, r5
 80004fa:	ea81 0603 	eor.w	r6, r1, r3
 80004fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000502:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000506:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800050a:	bf18      	it	ne
 800050c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000510:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000514:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000518:	d038      	beq.n	800058c <__aeabi_dmul+0xb4>
 800051a:	fba0 ce02 	umull	ip, lr, r0, r2
 800051e:	f04f 0500 	mov.w	r5, #0
 8000522:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000526:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800052a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800052e:	f04f 0600 	mov.w	r6, #0
 8000532:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000536:	f09c 0f00 	teq	ip, #0
 800053a:	bf18      	it	ne
 800053c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000540:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000544:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000548:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800054c:	d204      	bcs.n	8000558 <__aeabi_dmul+0x80>
 800054e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000552:	416d      	adcs	r5, r5
 8000554:	eb46 0606 	adc.w	r6, r6, r6
 8000558:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800055c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000560:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000564:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000568:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800056c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000570:	bf88      	it	hi
 8000572:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000576:	d81e      	bhi.n	80005b6 <__aeabi_dmul+0xde>
 8000578:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800057c:	bf08      	it	eq
 800057e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000582:	f150 0000 	adcs.w	r0, r0, #0
 8000586:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800058a:	bd70      	pop	{r4, r5, r6, pc}
 800058c:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000590:	ea46 0101 	orr.w	r1, r6, r1
 8000594:	ea40 0002 	orr.w	r0, r0, r2
 8000598:	ea81 0103 	eor.w	r1, r1, r3
 800059c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005a0:	bfc2      	ittt	gt
 80005a2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005aa:	bd70      	popgt	{r4, r5, r6, pc}
 80005ac:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80005b0:	f04f 0e00 	mov.w	lr, #0
 80005b4:	3c01      	subs	r4, #1
 80005b6:	f300 80ab 	bgt.w	8000710 <__aeabi_dmul+0x238>
 80005ba:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80005be:	bfde      	ittt	le
 80005c0:	2000      	movle	r0, #0
 80005c2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80005c6:	bd70      	pople	{r4, r5, r6, pc}
 80005c8:	f1c4 0400 	rsb	r4, r4, #0
 80005cc:	3c20      	subs	r4, #32
 80005ce:	da35      	bge.n	800063c <__aeabi_dmul+0x164>
 80005d0:	340c      	adds	r4, #12
 80005d2:	dc1b      	bgt.n	800060c <__aeabi_dmul+0x134>
 80005d4:	f104 0414 	add.w	r4, r4, #20
 80005d8:	f1c4 0520 	rsb	r5, r4, #32
 80005dc:	fa00 f305 	lsl.w	r3, r0, r5
 80005e0:	fa20 f004 	lsr.w	r0, r0, r4
 80005e4:	fa01 f205 	lsl.w	r2, r1, r5
 80005e8:	ea40 0002 	orr.w	r0, r0, r2
 80005ec:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 80005f0:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80005f8:	fa21 f604 	lsr.w	r6, r1, r4
 80005fc:	eb42 0106 	adc.w	r1, r2, r6
 8000600:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000604:	bf08      	it	eq
 8000606:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800060a:	bd70      	pop	{r4, r5, r6, pc}
 800060c:	f1c4 040c 	rsb	r4, r4, #12
 8000610:	f1c4 0520 	rsb	r5, r4, #32
 8000614:	fa00 f304 	lsl.w	r3, r0, r4
 8000618:	fa20 f005 	lsr.w	r0, r0, r5
 800061c:	fa01 f204 	lsl.w	r2, r1, r4
 8000620:	ea40 0002 	orr.w	r0, r0, r2
 8000624:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000628:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800062c:	f141 0100 	adc.w	r1, r1, #0
 8000630:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000634:	bf08      	it	eq
 8000636:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800063a:	bd70      	pop	{r4, r5, r6, pc}
 800063c:	f1c4 0520 	rsb	r5, r4, #32
 8000640:	fa00 f205 	lsl.w	r2, r0, r5
 8000644:	ea4e 0e02 	orr.w	lr, lr, r2
 8000648:	fa20 f304 	lsr.w	r3, r0, r4
 800064c:	fa01 f205 	lsl.w	r2, r1, r5
 8000650:	ea43 0302 	orr.w	r3, r3, r2
 8000654:	fa21 f004 	lsr.w	r0, r1, r4
 8000658:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800065c:	fa21 f204 	lsr.w	r2, r1, r4
 8000660:	ea20 0002 	bic.w	r0, r0, r2
 8000664:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000668:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800066c:	bf08      	it	eq
 800066e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000672:	bd70      	pop	{r4, r5, r6, pc}
 8000674:	f094 0f00 	teq	r4, #0
 8000678:	d10f      	bne.n	800069a <__aeabi_dmul+0x1c2>
 800067a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800067e:	0040      	lsls	r0, r0, #1
 8000680:	eb41 0101 	adc.w	r1, r1, r1
 8000684:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000688:	bf08      	it	eq
 800068a:	3c01      	subeq	r4, #1
 800068c:	d0f7      	beq.n	800067e <__aeabi_dmul+0x1a6>
 800068e:	ea41 0106 	orr.w	r1, r1, r6
 8000692:	f095 0f00 	teq	r5, #0
 8000696:	bf18      	it	ne
 8000698:	4770      	bxne	lr
 800069a:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 800069e:	0052      	lsls	r2, r2, #1
 80006a0:	eb43 0303 	adc.w	r3, r3, r3
 80006a4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80006a8:	bf08      	it	eq
 80006aa:	3d01      	subeq	r5, #1
 80006ac:	d0f7      	beq.n	800069e <__aeabi_dmul+0x1c6>
 80006ae:	ea43 0306 	orr.w	r3, r3, r6
 80006b2:	4770      	bx	lr
 80006b4:	ea94 0f0c 	teq	r4, ip
 80006b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006bc:	bf18      	it	ne
 80006be:	ea95 0f0c 	teqne	r5, ip
 80006c2:	d00c      	beq.n	80006de <__aeabi_dmul+0x206>
 80006c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006c8:	bf18      	it	ne
 80006ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ce:	d1d1      	bne.n	8000674 <__aeabi_dmul+0x19c>
 80006d0:	ea81 0103 	eor.w	r1, r1, r3
 80006d4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80006d8:	f04f 0000 	mov.w	r0, #0
 80006dc:	bd70      	pop	{r4, r5, r6, pc}
 80006de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006e2:	bf06      	itte	eq
 80006e4:	4610      	moveq	r0, r2
 80006e6:	4619      	moveq	r1, r3
 80006e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ec:	d019      	beq.n	8000722 <__aeabi_dmul+0x24a>
 80006ee:	ea94 0f0c 	teq	r4, ip
 80006f2:	d102      	bne.n	80006fa <__aeabi_dmul+0x222>
 80006f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80006f8:	d113      	bne.n	8000722 <__aeabi_dmul+0x24a>
 80006fa:	ea95 0f0c 	teq	r5, ip
 80006fe:	d105      	bne.n	800070c <__aeabi_dmul+0x234>
 8000700:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000704:	bf1c      	itt	ne
 8000706:	4610      	movne	r0, r2
 8000708:	4619      	movne	r1, r3
 800070a:	d10a      	bne.n	8000722 <__aeabi_dmul+0x24a>
 800070c:	ea81 0103 	eor.w	r1, r1, r3
 8000710:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000714:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000718:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800071c:	f04f 0000 	mov.w	r0, #0
 8000720:	bd70      	pop	{r4, r5, r6, pc}
 8000722:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000726:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800072a:	bd70      	pop	{r4, r5, r6, pc}

0800072c <__aeabi_ddiv>:
 800072c:	b570      	push	{r4, r5, r6, lr}
 800072e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000732:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000736:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800073a:	bf1d      	ittte	ne
 800073c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000740:	ea94 0f0c 	teqne	r4, ip
 8000744:	ea95 0f0c 	teqne	r5, ip
 8000748:	f000 f8a7 	bleq	800089a <__aeabi_ddiv+0x16e>
 800074c:	eba4 0405 	sub.w	r4, r4, r5
 8000750:	ea81 0e03 	eor.w	lr, r1, r3
 8000754:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000758:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800075c:	f000 8088 	beq.w	8000870 <__aeabi_ddiv+0x144>
 8000760:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000764:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000768:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800076c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000770:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000774:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000778:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800077c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000780:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 8000784:	429d      	cmp	r5, r3
 8000786:	bf08      	it	eq
 8000788:	4296      	cmpeq	r6, r2
 800078a:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 800078e:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 8000792:	d202      	bcs.n	800079a <__aeabi_ddiv+0x6e>
 8000794:	085b      	lsrs	r3, r3, #1
 8000796:	ea4f 0232 	mov.w	r2, r2, rrx
 800079a:	1ab6      	subs	r6, r6, r2
 800079c:	eb65 0503 	sbc.w	r5, r5, r3
 80007a0:	085b      	lsrs	r3, r3, #1
 80007a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007a6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80007aa:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80007ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80007b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007b6:	bf22      	ittt	cs
 80007b8:	1ab6      	subcs	r6, r6, r2
 80007ba:	4675      	movcs	r5, lr
 80007bc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007c0:	085b      	lsrs	r3, r3, #1
 80007c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ce:	bf22      	ittt	cs
 80007d0:	1ab6      	subcs	r6, r6, r2
 80007d2:	4675      	movcs	r5, lr
 80007d4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007d8:	085b      	lsrs	r3, r3, #1
 80007da:	ea4f 0232 	mov.w	r2, r2, rrx
 80007de:	ebb6 0e02 	subs.w	lr, r6, r2
 80007e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007e6:	bf22      	ittt	cs
 80007e8:	1ab6      	subcs	r6, r6, r2
 80007ea:	4675      	movcs	r5, lr
 80007ec:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80007f0:	085b      	lsrs	r3, r3, #1
 80007f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007fe:	bf22      	ittt	cs
 8000800:	1ab6      	subcs	r6, r6, r2
 8000802:	4675      	movcs	r5, lr
 8000804:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000808:	ea55 0e06 	orrs.w	lr, r5, r6
 800080c:	d018      	beq.n	8000840 <__aeabi_ddiv+0x114>
 800080e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000812:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000816:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800081a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800081e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000822:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000826:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800082a:	d1c0      	bne.n	80007ae <__aeabi_ddiv+0x82>
 800082c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000830:	d10b      	bne.n	800084a <__aeabi_ddiv+0x11e>
 8000832:	ea41 0100 	orr.w	r1, r1, r0
 8000836:	f04f 0000 	mov.w	r0, #0
 800083a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800083e:	e7b6      	b.n	80007ae <__aeabi_ddiv+0x82>
 8000840:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000844:	bf04      	itt	eq
 8000846:	4301      	orreq	r1, r0
 8000848:	2000      	moveq	r0, #0
 800084a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800084e:	bf88      	it	hi
 8000850:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000854:	f63f aeaf 	bhi.w	80005b6 <__aeabi_dmul+0xde>
 8000858:	ebb5 0c03 	subs.w	ip, r5, r3
 800085c:	bf04      	itt	eq
 800085e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000862:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000866:	f150 0000 	adcs.w	r0, r0, #0
 800086a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800086e:	bd70      	pop	{r4, r5, r6, pc}
 8000870:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000874:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000878:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800087c:	bfc2      	ittt	gt
 800087e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000882:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000886:	bd70      	popgt	{r4, r5, r6, pc}
 8000888:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 800088c:	f04f 0e00 	mov.w	lr, #0
 8000890:	3c01      	subs	r4, #1
 8000892:	e690      	b.n	80005b6 <__aeabi_dmul+0xde>
 8000894:	ea45 0e06 	orr.w	lr, r5, r6
 8000898:	e68d      	b.n	80005b6 <__aeabi_dmul+0xde>
 800089a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800089e:	ea94 0f0c 	teq	r4, ip
 80008a2:	bf08      	it	eq
 80008a4:	ea95 0f0c 	teqeq	r5, ip
 80008a8:	f43f af3b 	beq.w	8000722 <__aeabi_dmul+0x24a>
 80008ac:	ea94 0f0c 	teq	r4, ip
 80008b0:	d10a      	bne.n	80008c8 <__aeabi_ddiv+0x19c>
 80008b2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008b6:	f47f af34 	bne.w	8000722 <__aeabi_dmul+0x24a>
 80008ba:	ea95 0f0c 	teq	r5, ip
 80008be:	f47f af25 	bne.w	800070c <__aeabi_dmul+0x234>
 80008c2:	4610      	mov	r0, r2
 80008c4:	4619      	mov	r1, r3
 80008c6:	e72c      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008c8:	ea95 0f0c 	teq	r5, ip
 80008cc:	d106      	bne.n	80008dc <__aeabi_ddiv+0x1b0>
 80008ce:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008d2:	f43f aefd 	beq.w	80006d0 <__aeabi_dmul+0x1f8>
 80008d6:	4610      	mov	r0, r2
 80008d8:	4619      	mov	r1, r3
 80008da:	e722      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008dc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008e0:	bf18      	it	ne
 80008e2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008e6:	f47f aec5 	bne.w	8000674 <__aeabi_dmul+0x19c>
 80008ea:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008ee:	f47f af0d 	bne.w	800070c <__aeabi_dmul+0x234>
 80008f2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80008f6:	f47f aeeb 	bne.w	80006d0 <__aeabi_dmul+0x1f8>
 80008fa:	e712      	b.n	8000722 <__aeabi_dmul+0x24a>

080008fc <__gedf2>:
 80008fc:	f04f 3cff 	mov.w	ip, #4294967295
 8000900:	e006      	b.n	8000910 <__cmpdf2+0x4>
 8000902:	bf00      	nop

08000904 <__ledf2>:
 8000904:	f04f 0c01 	mov.w	ip, #1
 8000908:	e002      	b.n	8000910 <__cmpdf2+0x4>
 800090a:	bf00      	nop

0800090c <__cmpdf2>:
 800090c:	f04f 0c01 	mov.w	ip, #1
 8000910:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000914:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000918:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800091c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000920:	bf18      	it	ne
 8000922:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000926:	d01b      	beq.n	8000960 <__cmpdf2+0x54>
 8000928:	b001      	add	sp, #4
 800092a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800092e:	bf0c      	ite	eq
 8000930:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000934:	ea91 0f03 	teqne	r1, r3
 8000938:	bf02      	ittt	eq
 800093a:	ea90 0f02 	teqeq	r0, r2
 800093e:	2000      	moveq	r0, #0
 8000940:	4770      	bxeq	lr
 8000942:	f110 0f00 	cmn.w	r0, #0
 8000946:	ea91 0f03 	teq	r1, r3
 800094a:	bf58      	it	pl
 800094c:	4299      	cmppl	r1, r3
 800094e:	bf08      	it	eq
 8000950:	4290      	cmpeq	r0, r2
 8000952:	bf2c      	ite	cs
 8000954:	17d8      	asrcs	r0, r3, #31
 8000956:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800095a:	f040 0001 	orr.w	r0, r0, #1
 800095e:	4770      	bx	lr
 8000960:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000964:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000968:	d102      	bne.n	8000970 <__cmpdf2+0x64>
 800096a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800096e:	d107      	bne.n	8000980 <__cmpdf2+0x74>
 8000970:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000974:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000978:	d1d6      	bne.n	8000928 <__cmpdf2+0x1c>
 800097a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800097e:	d0d3      	beq.n	8000928 <__cmpdf2+0x1c>
 8000980:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000984:	4770      	bx	lr
 8000986:	bf00      	nop

08000988 <__aeabi_cdrcmple>:
 8000988:	4684      	mov	ip, r0
 800098a:	4610      	mov	r0, r2
 800098c:	4662      	mov	r2, ip
 800098e:	468c      	mov	ip, r1
 8000990:	4619      	mov	r1, r3
 8000992:	4663      	mov	r3, ip
 8000994:	e000      	b.n	8000998 <__aeabi_cdcmpeq>
 8000996:	bf00      	nop

08000998 <__aeabi_cdcmpeq>:
 8000998:	b501      	push	{r0, lr}
 800099a:	f7ff ffb7 	bl	800090c <__cmpdf2>
 800099e:	2800      	cmp	r0, #0
 80009a0:	bf48      	it	mi
 80009a2:	f110 0f00 	cmnmi.w	r0, #0
 80009a6:	bd01      	pop	{r0, pc}

080009a8 <__aeabi_dcmpeq>:
 80009a8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009ac:	f7ff fff4 	bl	8000998 <__aeabi_cdcmpeq>
 80009b0:	bf0c      	ite	eq
 80009b2:	2001      	moveq	r0, #1
 80009b4:	2000      	movne	r0, #0
 80009b6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ba:	bf00      	nop

080009bc <__aeabi_dcmplt>:
 80009bc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009c0:	f7ff ffea 	bl	8000998 <__aeabi_cdcmpeq>
 80009c4:	bf34      	ite	cc
 80009c6:	2001      	movcc	r0, #1
 80009c8:	2000      	movcs	r0, #0
 80009ca:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ce:	bf00      	nop

080009d0 <__aeabi_dcmple>:
 80009d0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009d4:	f7ff ffe0 	bl	8000998 <__aeabi_cdcmpeq>
 80009d8:	bf94      	ite	ls
 80009da:	2001      	movls	r0, #1
 80009dc:	2000      	movhi	r0, #0
 80009de:	f85d fb08 	ldr.w	pc, [sp], #8
 80009e2:	bf00      	nop

080009e4 <__aeabi_dcmpge>:
 80009e4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e8:	f7ff ffce 	bl	8000988 <__aeabi_cdrcmple>
 80009ec:	bf94      	ite	ls
 80009ee:	2001      	movls	r0, #1
 80009f0:	2000      	movhi	r0, #0
 80009f2:	f85d fb08 	ldr.w	pc, [sp], #8
 80009f6:	bf00      	nop

080009f8 <__aeabi_dcmpgt>:
 80009f8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009fc:	f7ff ffc4 	bl	8000988 <__aeabi_cdrcmple>
 8000a00:	bf34      	ite	cc
 8000a02:	2001      	movcc	r0, #1
 8000a04:	2000      	movcs	r0, #0
 8000a06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a0a:	bf00      	nop

08000a0c <__aeabi_dcmpun>:
 8000a0c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a14:	d102      	bne.n	8000a1c <__aeabi_dcmpun+0x10>
 8000a16:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a1a:	d10a      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a24:	d102      	bne.n	8000a2c <__aeabi_dcmpun+0x20>
 8000a26:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a2a:	d102      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a2c:	f04f 0000 	mov.w	r0, #0
 8000a30:	4770      	bx	lr
 8000a32:	f04f 0001 	mov.w	r0, #1
 8000a36:	4770      	bx	lr

08000a38 <__aeabi_d2iz>:
 8000a38:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a3c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000a40:	d215      	bcs.n	8000a6e <__aeabi_d2iz+0x36>
 8000a42:	d511      	bpl.n	8000a68 <__aeabi_d2iz+0x30>
 8000a44:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000a48:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a4c:	d912      	bls.n	8000a74 <__aeabi_d2iz+0x3c>
 8000a4e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a52:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000a56:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a5a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000a5e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a62:	bf18      	it	ne
 8000a64:	4240      	negne	r0, r0
 8000a66:	4770      	bx	lr
 8000a68:	f04f 0000 	mov.w	r0, #0
 8000a6c:	4770      	bx	lr
 8000a6e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a72:	d105      	bne.n	8000a80 <__aeabi_d2iz+0x48>
 8000a74:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000a78:	bf08      	it	eq
 8000a7a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000a7e:	4770      	bx	lr
 8000a80:	f04f 0000 	mov.w	r0, #0
 8000a84:	4770      	bx	lr
 8000a86:	bf00      	nop

08000a88 <__aeabi_d2f>:
 8000a88:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a8c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000a90:	bf24      	itt	cs
 8000a92:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000a96:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000a9a:	d90d      	bls.n	8000ab8 <__aeabi_d2f+0x30>
 8000a9c:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000aa0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000aa4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000aa8:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000aac:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000ab0:	bf08      	it	eq
 8000ab2:	f020 0001 	biceq.w	r0, r0, #1
 8000ab6:	4770      	bx	lr
 8000ab8:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000abc:	d121      	bne.n	8000b02 <__aeabi_d2f+0x7a>
 8000abe:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000ac2:	bfbc      	itt	lt
 8000ac4:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000ac8:	4770      	bxlt	lr
 8000aca:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000ace:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000ad2:	f1c2 0218 	rsb	r2, r2, #24
 8000ad6:	f1c2 0c20 	rsb	ip, r2, #32
 8000ada:	fa10 f30c 	lsls.w	r3, r0, ip
 8000ade:	fa20 f002 	lsr.w	r0, r0, r2
 8000ae2:	bf18      	it	ne
 8000ae4:	f040 0001 	orrne.w	r0, r0, #1
 8000ae8:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000aec:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000af0:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000af4:	ea40 000c 	orr.w	r0, r0, ip
 8000af8:	fa23 f302 	lsr.w	r3, r3, r2
 8000afc:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b00:	e7cc      	b.n	8000a9c <__aeabi_d2f+0x14>
 8000b02:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b06:	d107      	bne.n	8000b18 <__aeabi_d2f+0x90>
 8000b08:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b0c:	bf1e      	ittt	ne
 8000b0e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000b12:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000b16:	4770      	bxne	lr
 8000b18:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000b1c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000b20:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000b24:	4770      	bx	lr
 8000b26:	bf00      	nop

08000b28 <__aeabi_frsub>:
 8000b28:	f080 4000 	eor.w	r0, r0, #2147483648	@ 0x80000000
 8000b2c:	e002      	b.n	8000b34 <__addsf3>
 8000b2e:	bf00      	nop

08000b30 <__aeabi_fsub>:
 8000b30:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000

08000b34 <__addsf3>:
 8000b34:	0042      	lsls	r2, r0, #1
 8000b36:	bf1f      	itttt	ne
 8000b38:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000b3c:	ea92 0f03 	teqne	r2, r3
 8000b40:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000b44:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000b48:	d06a      	beq.n	8000c20 <__addsf3+0xec>
 8000b4a:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000b4e:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000b52:	bfc1      	itttt	gt
 8000b54:	18d2      	addgt	r2, r2, r3
 8000b56:	4041      	eorgt	r1, r0
 8000b58:	4048      	eorgt	r0, r1
 8000b5a:	4041      	eorgt	r1, r0
 8000b5c:	bfb8      	it	lt
 8000b5e:	425b      	neglt	r3, r3
 8000b60:	2b19      	cmp	r3, #25
 8000b62:	bf88      	it	hi
 8000b64:	4770      	bxhi	lr
 8000b66:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 8000b6a:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000b6e:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
 8000b72:	bf18      	it	ne
 8000b74:	4240      	negne	r0, r0
 8000b76:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b7a:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8000b7e:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8000b82:	bf18      	it	ne
 8000b84:	4249      	negne	r1, r1
 8000b86:	ea92 0f03 	teq	r2, r3
 8000b8a:	d03f      	beq.n	8000c0c <__addsf3+0xd8>
 8000b8c:	f1a2 0201 	sub.w	r2, r2, #1
 8000b90:	fa41 fc03 	asr.w	ip, r1, r3
 8000b94:	eb10 000c 	adds.w	r0, r0, ip
 8000b98:	f1c3 0320 	rsb	r3, r3, #32
 8000b9c:	fa01 f103 	lsl.w	r1, r1, r3
 8000ba0:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000ba4:	d502      	bpl.n	8000bac <__addsf3+0x78>
 8000ba6:	4249      	negs	r1, r1
 8000ba8:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000bac:	f5b0 0f00 	cmp.w	r0, #8388608	@ 0x800000
 8000bb0:	d313      	bcc.n	8000bda <__addsf3+0xa6>
 8000bb2:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8000bb6:	d306      	bcc.n	8000bc6 <__addsf3+0x92>
 8000bb8:	0840      	lsrs	r0, r0, #1
 8000bba:	ea4f 0131 	mov.w	r1, r1, rrx
 8000bbe:	f102 0201 	add.w	r2, r2, #1
 8000bc2:	2afe      	cmp	r2, #254	@ 0xfe
 8000bc4:	d251      	bcs.n	8000c6a <__addsf3+0x136>
 8000bc6:	f1b1 4f00 	cmp.w	r1, #2147483648	@ 0x80000000
 8000bca:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000bce:	bf08      	it	eq
 8000bd0:	f020 0001 	biceq.w	r0, r0, #1
 8000bd4:	ea40 0003 	orr.w	r0, r0, r3
 8000bd8:	4770      	bx	lr
 8000bda:	0049      	lsls	r1, r1, #1
 8000bdc:	eb40 0000 	adc.w	r0, r0, r0
 8000be0:	3a01      	subs	r2, #1
 8000be2:	bf28      	it	cs
 8000be4:	f5b0 0f00 	cmpcs.w	r0, #8388608	@ 0x800000
 8000be8:	d2ed      	bcs.n	8000bc6 <__addsf3+0x92>
 8000bea:	fab0 fc80 	clz	ip, r0
 8000bee:	f1ac 0c08 	sub.w	ip, ip, #8
 8000bf2:	ebb2 020c 	subs.w	r2, r2, ip
 8000bf6:	fa00 f00c 	lsl.w	r0, r0, ip
 8000bfa:	bfaa      	itet	ge
 8000bfc:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000c00:	4252      	neglt	r2, r2
 8000c02:	4318      	orrge	r0, r3
 8000c04:	bfbc      	itt	lt
 8000c06:	40d0      	lsrlt	r0, r2
 8000c08:	4318      	orrlt	r0, r3
 8000c0a:	4770      	bx	lr
 8000c0c:	f092 0f00 	teq	r2, #0
 8000c10:	f481 0100 	eor.w	r1, r1, #8388608	@ 0x800000
 8000c14:	bf06      	itte	eq
 8000c16:	f480 0000 	eoreq.w	r0, r0, #8388608	@ 0x800000
 8000c1a:	3201      	addeq	r2, #1
 8000c1c:	3b01      	subne	r3, #1
 8000c1e:	e7b5      	b.n	8000b8c <__addsf3+0x58>
 8000c20:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000c24:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000c28:	bf18      	it	ne
 8000c2a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000c2e:	d021      	beq.n	8000c74 <__addsf3+0x140>
 8000c30:	ea92 0f03 	teq	r2, r3
 8000c34:	d004      	beq.n	8000c40 <__addsf3+0x10c>
 8000c36:	f092 0f00 	teq	r2, #0
 8000c3a:	bf08      	it	eq
 8000c3c:	4608      	moveq	r0, r1
 8000c3e:	4770      	bx	lr
 8000c40:	ea90 0f01 	teq	r0, r1
 8000c44:	bf1c      	itt	ne
 8000c46:	2000      	movne	r0, #0
 8000c48:	4770      	bxne	lr
 8000c4a:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8000c4e:	d104      	bne.n	8000c5a <__addsf3+0x126>
 8000c50:	0040      	lsls	r0, r0, #1
 8000c52:	bf28      	it	cs
 8000c54:	f040 4000 	orrcs.w	r0, r0, #2147483648	@ 0x80000000
 8000c58:	4770      	bx	lr
 8000c5a:	f112 7200 	adds.w	r2, r2, #33554432	@ 0x2000000
 8000c5e:	bf3c      	itt	cc
 8000c60:	f500 0000 	addcc.w	r0, r0, #8388608	@ 0x800000
 8000c64:	4770      	bxcc	lr
 8000c66:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000c6a:	f043 40fe 	orr.w	r0, r3, #2130706432	@ 0x7f000000
 8000c6e:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c72:	4770      	bx	lr
 8000c74:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000c78:	bf16      	itet	ne
 8000c7a:	4608      	movne	r0, r1
 8000c7c:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000c80:	4601      	movne	r1, r0
 8000c82:	0242      	lsls	r2, r0, #9
 8000c84:	bf06      	itte	eq
 8000c86:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000c8a:	ea90 0f01 	teqeq	r0, r1
 8000c8e:	f440 0080 	orrne.w	r0, r0, #4194304	@ 0x400000
 8000c92:	4770      	bx	lr

08000c94 <__aeabi_ui2f>:
 8000c94:	f04f 0300 	mov.w	r3, #0
 8000c98:	e004      	b.n	8000ca4 <__aeabi_i2f+0x8>
 8000c9a:	bf00      	nop

08000c9c <__aeabi_i2f>:
 8000c9c:	f010 4300 	ands.w	r3, r0, #2147483648	@ 0x80000000
 8000ca0:	bf48      	it	mi
 8000ca2:	4240      	negmi	r0, r0
 8000ca4:	ea5f 0c00 	movs.w	ip, r0
 8000ca8:	bf08      	it	eq
 8000caa:	4770      	bxeq	lr
 8000cac:	f043 4396 	orr.w	r3, r3, #1258291200	@ 0x4b000000
 8000cb0:	4601      	mov	r1, r0
 8000cb2:	f04f 0000 	mov.w	r0, #0
 8000cb6:	e01c      	b.n	8000cf2 <__aeabi_l2f+0x2a>

08000cb8 <__aeabi_ul2f>:
 8000cb8:	ea50 0201 	orrs.w	r2, r0, r1
 8000cbc:	bf08      	it	eq
 8000cbe:	4770      	bxeq	lr
 8000cc0:	f04f 0300 	mov.w	r3, #0
 8000cc4:	e00a      	b.n	8000cdc <__aeabi_l2f+0x14>
 8000cc6:	bf00      	nop

08000cc8 <__aeabi_l2f>:
 8000cc8:	ea50 0201 	orrs.w	r2, r0, r1
 8000ccc:	bf08      	it	eq
 8000cce:	4770      	bxeq	lr
 8000cd0:	f011 4300 	ands.w	r3, r1, #2147483648	@ 0x80000000
 8000cd4:	d502      	bpl.n	8000cdc <__aeabi_l2f+0x14>
 8000cd6:	4240      	negs	r0, r0
 8000cd8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cdc:	ea5f 0c01 	movs.w	ip, r1
 8000ce0:	bf02      	ittt	eq
 8000ce2:	4684      	moveq	ip, r0
 8000ce4:	4601      	moveq	r1, r0
 8000ce6:	2000      	moveq	r0, #0
 8000ce8:	f043 43b6 	orr.w	r3, r3, #1526726656	@ 0x5b000000
 8000cec:	bf08      	it	eq
 8000cee:	f1a3 5380 	subeq.w	r3, r3, #268435456	@ 0x10000000
 8000cf2:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 8000cf6:	fabc f28c 	clz	r2, ip
 8000cfa:	3a08      	subs	r2, #8
 8000cfc:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000d00:	db10      	blt.n	8000d24 <__aeabi_l2f+0x5c>
 8000d02:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d06:	4463      	add	r3, ip
 8000d08:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d0c:	f1c2 0220 	rsb	r2, r2, #32
 8000d10:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000d14:	fa20 f202 	lsr.w	r2, r0, r2
 8000d18:	eb43 0002 	adc.w	r0, r3, r2
 8000d1c:	bf08      	it	eq
 8000d1e:	f020 0001 	biceq.w	r0, r0, #1
 8000d22:	4770      	bx	lr
 8000d24:	f102 0220 	add.w	r2, r2, #32
 8000d28:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d2c:	f1c2 0220 	rsb	r2, r2, #32
 8000d30:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000d34:	fa21 f202 	lsr.w	r2, r1, r2
 8000d38:	eb43 0002 	adc.w	r0, r3, r2
 8000d3c:	bf08      	it	eq
 8000d3e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000d42:	4770      	bx	lr

08000d44 <__aeabi_fmul>:
 8000d44:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000d48:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000d4c:	bf1e      	ittt	ne
 8000d4e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000d52:	ea92 0f0c 	teqne	r2, ip
 8000d56:	ea93 0f0c 	teqne	r3, ip
 8000d5a:	d06f      	beq.n	8000e3c <__aeabi_fmul+0xf8>
 8000d5c:	441a      	add	r2, r3
 8000d5e:	ea80 0c01 	eor.w	ip, r0, r1
 8000d62:	0240      	lsls	r0, r0, #9
 8000d64:	bf18      	it	ne
 8000d66:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000d6a:	d01e      	beq.n	8000daa <__aeabi_fmul+0x66>
 8000d6c:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8000d70:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000d74:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000d78:	fba0 3101 	umull	r3, r1, r0, r1
 8000d7c:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000d80:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
 8000d84:	bf3e      	ittt	cc
 8000d86:	0049      	lslcc	r1, r1, #1
 8000d88:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000d8c:	005b      	lslcc	r3, r3, #1
 8000d8e:	ea40 0001 	orr.w	r0, r0, r1
 8000d92:	f162 027f 	sbc.w	r2, r2, #127	@ 0x7f
 8000d96:	2afd      	cmp	r2, #253	@ 0xfd
 8000d98:	d81d      	bhi.n	8000dd6 <__aeabi_fmul+0x92>
 8000d9a:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8000d9e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000da2:	bf08      	it	eq
 8000da4:	f020 0001 	biceq.w	r0, r0, #1
 8000da8:	4770      	bx	lr
 8000daa:	f090 0f00 	teq	r0, #0
 8000dae:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000db2:	bf08      	it	eq
 8000db4:	0249      	lsleq	r1, r1, #9
 8000db6:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000dba:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000dbe:	3a7f      	subs	r2, #127	@ 0x7f
 8000dc0:	bfc2      	ittt	gt
 8000dc2:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000dc6:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000dca:	4770      	bxgt	lr
 8000dcc:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000dd0:	f04f 0300 	mov.w	r3, #0
 8000dd4:	3a01      	subs	r2, #1
 8000dd6:	dc5d      	bgt.n	8000e94 <__aeabi_fmul+0x150>
 8000dd8:	f112 0f19 	cmn.w	r2, #25
 8000ddc:	bfdc      	itt	le
 8000dde:	f000 4000 	andle.w	r0, r0, #2147483648	@ 0x80000000
 8000de2:	4770      	bxle	lr
 8000de4:	f1c2 0200 	rsb	r2, r2, #0
 8000de8:	0041      	lsls	r1, r0, #1
 8000dea:	fa21 f102 	lsr.w	r1, r1, r2
 8000dee:	f1c2 0220 	rsb	r2, r2, #32
 8000df2:	fa00 fc02 	lsl.w	ip, r0, r2
 8000df6:	ea5f 0031 	movs.w	r0, r1, rrx
 8000dfa:	f140 0000 	adc.w	r0, r0, #0
 8000dfe:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000e02:	bf08      	it	eq
 8000e04:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e08:	4770      	bx	lr
 8000e0a:	f092 0f00 	teq	r2, #0
 8000e0e:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000e12:	bf02      	ittt	eq
 8000e14:	0040      	lsleq	r0, r0, #1
 8000e16:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000e1a:	3a01      	subeq	r2, #1
 8000e1c:	d0f9      	beq.n	8000e12 <__aeabi_fmul+0xce>
 8000e1e:	ea40 000c 	orr.w	r0, r0, ip
 8000e22:	f093 0f00 	teq	r3, #0
 8000e26:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000e2a:	bf02      	ittt	eq
 8000e2c:	0049      	lsleq	r1, r1, #1
 8000e2e:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000e32:	3b01      	subeq	r3, #1
 8000e34:	d0f9      	beq.n	8000e2a <__aeabi_fmul+0xe6>
 8000e36:	ea41 010c 	orr.w	r1, r1, ip
 8000e3a:	e78f      	b.n	8000d5c <__aeabi_fmul+0x18>
 8000e3c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000e40:	ea92 0f0c 	teq	r2, ip
 8000e44:	bf18      	it	ne
 8000e46:	ea93 0f0c 	teqne	r3, ip
 8000e4a:	d00a      	beq.n	8000e62 <__aeabi_fmul+0x11e>
 8000e4c:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8000e50:	bf18      	it	ne
 8000e52:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 8000e56:	d1d8      	bne.n	8000e0a <__aeabi_fmul+0xc6>
 8000e58:	ea80 0001 	eor.w	r0, r0, r1
 8000e5c:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000e60:	4770      	bx	lr
 8000e62:	f090 0f00 	teq	r0, #0
 8000e66:	bf17      	itett	ne
 8000e68:	f090 4f00 	teqne	r0, #2147483648	@ 0x80000000
 8000e6c:	4608      	moveq	r0, r1
 8000e6e:	f091 0f00 	teqne	r1, #0
 8000e72:	f091 4f00 	teqne	r1, #2147483648	@ 0x80000000
 8000e76:	d014      	beq.n	8000ea2 <__aeabi_fmul+0x15e>
 8000e78:	ea92 0f0c 	teq	r2, ip
 8000e7c:	d101      	bne.n	8000e82 <__aeabi_fmul+0x13e>
 8000e7e:	0242      	lsls	r2, r0, #9
 8000e80:	d10f      	bne.n	8000ea2 <__aeabi_fmul+0x15e>
 8000e82:	ea93 0f0c 	teq	r3, ip
 8000e86:	d103      	bne.n	8000e90 <__aeabi_fmul+0x14c>
 8000e88:	024b      	lsls	r3, r1, #9
 8000e8a:	bf18      	it	ne
 8000e8c:	4608      	movne	r0, r1
 8000e8e:	d108      	bne.n	8000ea2 <__aeabi_fmul+0x15e>
 8000e90:	ea80 0001 	eor.w	r0, r0, r1
 8000e94:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000e98:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000e9c:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000ea0:	4770      	bx	lr
 8000ea2:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000ea6:	f440 0040 	orr.w	r0, r0, #12582912	@ 0xc00000
 8000eaa:	4770      	bx	lr

08000eac <__aeabi_fdiv>:
 8000eac:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000eb0:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000eb4:	bf1e      	ittt	ne
 8000eb6:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000eba:	ea92 0f0c 	teqne	r2, ip
 8000ebe:	ea93 0f0c 	teqne	r3, ip
 8000ec2:	d069      	beq.n	8000f98 <__aeabi_fdiv+0xec>
 8000ec4:	eba2 0203 	sub.w	r2, r2, r3
 8000ec8:	ea80 0c01 	eor.w	ip, r0, r1
 8000ecc:	0249      	lsls	r1, r1, #9
 8000ece:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000ed2:	d037      	beq.n	8000f44 <__aeabi_fdiv+0x98>
 8000ed4:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
 8000ed8:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000edc:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000ee0:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000ee4:	428b      	cmp	r3, r1
 8000ee6:	bf38      	it	cc
 8000ee8:	005b      	lslcc	r3, r3, #1
 8000eea:	f142 027d 	adc.w	r2, r2, #125	@ 0x7d
 8000eee:	f44f 0c00 	mov.w	ip, #8388608	@ 0x800000
 8000ef2:	428b      	cmp	r3, r1
 8000ef4:	bf24      	itt	cs
 8000ef6:	1a5b      	subcs	r3, r3, r1
 8000ef8:	ea40 000c 	orrcs.w	r0, r0, ip
 8000efc:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000f00:	bf24      	itt	cs
 8000f02:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000f06:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000f0a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000f0e:	bf24      	itt	cs
 8000f10:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000f14:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000f18:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000f1c:	bf24      	itt	cs
 8000f1e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000f22:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000f26:	011b      	lsls	r3, r3, #4
 8000f28:	bf18      	it	ne
 8000f2a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000f2e:	d1e0      	bne.n	8000ef2 <__aeabi_fdiv+0x46>
 8000f30:	2afd      	cmp	r2, #253	@ 0xfd
 8000f32:	f63f af50 	bhi.w	8000dd6 <__aeabi_fmul+0x92>
 8000f36:	428b      	cmp	r3, r1
 8000f38:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000f3c:	bf08      	it	eq
 8000f3e:	f020 0001 	biceq.w	r0, r0, #1
 8000f42:	4770      	bx	lr
 8000f44:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000f48:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000f4c:	327f      	adds	r2, #127	@ 0x7f
 8000f4e:	bfc2      	ittt	gt
 8000f50:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000f54:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000f58:	4770      	bxgt	lr
 8000f5a:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000f5e:	f04f 0300 	mov.w	r3, #0
 8000f62:	3a01      	subs	r2, #1
 8000f64:	e737      	b.n	8000dd6 <__aeabi_fmul+0x92>
 8000f66:	f092 0f00 	teq	r2, #0
 8000f6a:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000f6e:	bf02      	ittt	eq
 8000f70:	0040      	lsleq	r0, r0, #1
 8000f72:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000f76:	3a01      	subeq	r2, #1
 8000f78:	d0f9      	beq.n	8000f6e <__aeabi_fdiv+0xc2>
 8000f7a:	ea40 000c 	orr.w	r0, r0, ip
 8000f7e:	f093 0f00 	teq	r3, #0
 8000f82:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000f86:	bf02      	ittt	eq
 8000f88:	0049      	lsleq	r1, r1, #1
 8000f8a:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000f8e:	3b01      	subeq	r3, #1
 8000f90:	d0f9      	beq.n	8000f86 <__aeabi_fdiv+0xda>
 8000f92:	ea41 010c 	orr.w	r1, r1, ip
 8000f96:	e795      	b.n	8000ec4 <__aeabi_fdiv+0x18>
 8000f98:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000f9c:	ea92 0f0c 	teq	r2, ip
 8000fa0:	d108      	bne.n	8000fb4 <__aeabi_fdiv+0x108>
 8000fa2:	0242      	lsls	r2, r0, #9
 8000fa4:	f47f af7d 	bne.w	8000ea2 <__aeabi_fmul+0x15e>
 8000fa8:	ea93 0f0c 	teq	r3, ip
 8000fac:	f47f af70 	bne.w	8000e90 <__aeabi_fmul+0x14c>
 8000fb0:	4608      	mov	r0, r1
 8000fb2:	e776      	b.n	8000ea2 <__aeabi_fmul+0x15e>
 8000fb4:	ea93 0f0c 	teq	r3, ip
 8000fb8:	d104      	bne.n	8000fc4 <__aeabi_fdiv+0x118>
 8000fba:	024b      	lsls	r3, r1, #9
 8000fbc:	f43f af4c 	beq.w	8000e58 <__aeabi_fmul+0x114>
 8000fc0:	4608      	mov	r0, r1
 8000fc2:	e76e      	b.n	8000ea2 <__aeabi_fmul+0x15e>
 8000fc4:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8000fc8:	bf18      	it	ne
 8000fca:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 8000fce:	d1ca      	bne.n	8000f66 <__aeabi_fdiv+0xba>
 8000fd0:	f030 4200 	bics.w	r2, r0, #2147483648	@ 0x80000000
 8000fd4:	f47f af5c 	bne.w	8000e90 <__aeabi_fmul+0x14c>
 8000fd8:	f031 4300 	bics.w	r3, r1, #2147483648	@ 0x80000000
 8000fdc:	f47f af3c 	bne.w	8000e58 <__aeabi_fmul+0x114>
 8000fe0:	e75f      	b.n	8000ea2 <__aeabi_fmul+0x15e>
 8000fe2:	bf00      	nop

08000fe4 <__aeabi_f2uiz>:
 8000fe4:	0042      	lsls	r2, r0, #1
 8000fe6:	d20e      	bcs.n	8001006 <__aeabi_f2uiz+0x22>
 8000fe8:	f1b2 4ffe 	cmp.w	r2, #2130706432	@ 0x7f000000
 8000fec:	d30b      	bcc.n	8001006 <__aeabi_f2uiz+0x22>
 8000fee:	f04f 039e 	mov.w	r3, #158	@ 0x9e
 8000ff2:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8000ff6:	d409      	bmi.n	800100c <__aeabi_f2uiz+0x28>
 8000ff8:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8000ffc:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8001000:	fa23 f002 	lsr.w	r0, r3, r2
 8001004:	4770      	bx	lr
 8001006:	f04f 0000 	mov.w	r0, #0
 800100a:	4770      	bx	lr
 800100c:	f112 0f61 	cmn.w	r2, #97	@ 0x61
 8001010:	d101      	bne.n	8001016 <__aeabi_f2uiz+0x32>
 8001012:	0242      	lsls	r2, r0, #9
 8001014:	d102      	bne.n	800101c <__aeabi_f2uiz+0x38>
 8001016:	f04f 30ff 	mov.w	r0, #4294967295
 800101a:	4770      	bx	lr
 800101c:	f04f 0000 	mov.w	r0, #0
 8001020:	4770      	bx	lr
 8001022:	bf00      	nop

08001024 <__aeabi_ldivmod>:
 8001024:	b97b      	cbnz	r3, 8001046 <__aeabi_ldivmod+0x22>
 8001026:	b972      	cbnz	r2, 8001046 <__aeabi_ldivmod+0x22>
 8001028:	2900      	cmp	r1, #0
 800102a:	bfbe      	ittt	lt
 800102c:	2000      	movlt	r0, #0
 800102e:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
 8001032:	e006      	blt.n	8001042 <__aeabi_ldivmod+0x1e>
 8001034:	bf08      	it	eq
 8001036:	2800      	cmpeq	r0, #0
 8001038:	bf1c      	itt	ne
 800103a:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
 800103e:	f04f 30ff 	movne.w	r0, #4294967295
 8001042:	f000 b99b 	b.w	800137c <__aeabi_idiv0>
 8001046:	f1ad 0c08 	sub.w	ip, sp, #8
 800104a:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 800104e:	2900      	cmp	r1, #0
 8001050:	db09      	blt.n	8001066 <__aeabi_ldivmod+0x42>
 8001052:	2b00      	cmp	r3, #0
 8001054:	db1a      	blt.n	800108c <__aeabi_ldivmod+0x68>
 8001056:	f000 f835 	bl	80010c4 <__udivmoddi4>
 800105a:	f8dd e004 	ldr.w	lr, [sp, #4]
 800105e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8001062:	b004      	add	sp, #16
 8001064:	4770      	bx	lr
 8001066:	4240      	negs	r0, r0
 8001068:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800106c:	2b00      	cmp	r3, #0
 800106e:	db1b      	blt.n	80010a8 <__aeabi_ldivmod+0x84>
 8001070:	f000 f828 	bl	80010c4 <__udivmoddi4>
 8001074:	f8dd e004 	ldr.w	lr, [sp, #4]
 8001078:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800107c:	b004      	add	sp, #16
 800107e:	4240      	negs	r0, r0
 8001080:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8001084:	4252      	negs	r2, r2
 8001086:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800108a:	4770      	bx	lr
 800108c:	4252      	negs	r2, r2
 800108e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8001092:	f000 f817 	bl	80010c4 <__udivmoddi4>
 8001096:	f8dd e004 	ldr.w	lr, [sp, #4]
 800109a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800109e:	b004      	add	sp, #16
 80010a0:	4240      	negs	r0, r0
 80010a2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80010a6:	4770      	bx	lr
 80010a8:	4252      	negs	r2, r2
 80010aa:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80010ae:	f000 f809 	bl	80010c4 <__udivmoddi4>
 80010b2:	f8dd e004 	ldr.w	lr, [sp, #4]
 80010b6:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80010ba:	b004      	add	sp, #16
 80010bc:	4252      	negs	r2, r2
 80010be:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80010c2:	4770      	bx	lr

080010c4 <__udivmoddi4>:
 80010c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80010c8:	9d08      	ldr	r5, [sp, #32]
 80010ca:	460c      	mov	r4, r1
 80010cc:	2b00      	cmp	r3, #0
 80010ce:	d14e      	bne.n	800116e <__udivmoddi4+0xaa>
 80010d0:	4694      	mov	ip, r2
 80010d2:	458c      	cmp	ip, r1
 80010d4:	4686      	mov	lr, r0
 80010d6:	fab2 f282 	clz	r2, r2
 80010da:	d962      	bls.n	80011a2 <__udivmoddi4+0xde>
 80010dc:	b14a      	cbz	r2, 80010f2 <__udivmoddi4+0x2e>
 80010de:	f1c2 0320 	rsb	r3, r2, #32
 80010e2:	4091      	lsls	r1, r2
 80010e4:	fa20 f303 	lsr.w	r3, r0, r3
 80010e8:	fa0c fc02 	lsl.w	ip, ip, r2
 80010ec:	4319      	orrs	r1, r3
 80010ee:	fa00 fe02 	lsl.w	lr, r0, r2
 80010f2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80010f6:	fbb1 f4f7 	udiv	r4, r1, r7
 80010fa:	fb07 1114 	mls	r1, r7, r4, r1
 80010fe:	fa1f f68c 	uxth.w	r6, ip
 8001102:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8001106:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800110a:	fb04 f106 	mul.w	r1, r4, r6
 800110e:	4299      	cmp	r1, r3
 8001110:	d90a      	bls.n	8001128 <__udivmoddi4+0x64>
 8001112:	eb1c 0303 	adds.w	r3, ip, r3
 8001116:	f104 30ff 	add.w	r0, r4, #4294967295
 800111a:	f080 8110 	bcs.w	800133e <__udivmoddi4+0x27a>
 800111e:	4299      	cmp	r1, r3
 8001120:	f240 810d 	bls.w	800133e <__udivmoddi4+0x27a>
 8001124:	3c02      	subs	r4, #2
 8001126:	4463      	add	r3, ip
 8001128:	1a59      	subs	r1, r3, r1
 800112a:	fbb1 f0f7 	udiv	r0, r1, r7
 800112e:	fb07 1110 	mls	r1, r7, r0, r1
 8001132:	fb00 f606 	mul.w	r6, r0, r6
 8001136:	fa1f f38e 	uxth.w	r3, lr
 800113a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800113e:	429e      	cmp	r6, r3
 8001140:	d90a      	bls.n	8001158 <__udivmoddi4+0x94>
 8001142:	eb1c 0303 	adds.w	r3, ip, r3
 8001146:	f100 31ff 	add.w	r1, r0, #4294967295
 800114a:	f080 80fa 	bcs.w	8001342 <__udivmoddi4+0x27e>
 800114e:	429e      	cmp	r6, r3
 8001150:	f240 80f7 	bls.w	8001342 <__udivmoddi4+0x27e>
 8001154:	4463      	add	r3, ip
 8001156:	3802      	subs	r0, #2
 8001158:	2100      	movs	r1, #0
 800115a:	1b9b      	subs	r3, r3, r6
 800115c:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8001160:	b11d      	cbz	r5, 800116a <__udivmoddi4+0xa6>
 8001162:	40d3      	lsrs	r3, r2
 8001164:	2200      	movs	r2, #0
 8001166:	e9c5 3200 	strd	r3, r2, [r5]
 800116a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800116e:	428b      	cmp	r3, r1
 8001170:	d905      	bls.n	800117e <__udivmoddi4+0xba>
 8001172:	b10d      	cbz	r5, 8001178 <__udivmoddi4+0xb4>
 8001174:	e9c5 0100 	strd	r0, r1, [r5]
 8001178:	2100      	movs	r1, #0
 800117a:	4608      	mov	r0, r1
 800117c:	e7f5      	b.n	800116a <__udivmoddi4+0xa6>
 800117e:	fab3 f183 	clz	r1, r3
 8001182:	2900      	cmp	r1, #0
 8001184:	d146      	bne.n	8001214 <__udivmoddi4+0x150>
 8001186:	42a3      	cmp	r3, r4
 8001188:	d302      	bcc.n	8001190 <__udivmoddi4+0xcc>
 800118a:	4290      	cmp	r0, r2
 800118c:	f0c0 80ee 	bcc.w	800136c <__udivmoddi4+0x2a8>
 8001190:	1a86      	subs	r6, r0, r2
 8001192:	eb64 0303 	sbc.w	r3, r4, r3
 8001196:	2001      	movs	r0, #1
 8001198:	2d00      	cmp	r5, #0
 800119a:	d0e6      	beq.n	800116a <__udivmoddi4+0xa6>
 800119c:	e9c5 6300 	strd	r6, r3, [r5]
 80011a0:	e7e3      	b.n	800116a <__udivmoddi4+0xa6>
 80011a2:	2a00      	cmp	r2, #0
 80011a4:	f040 808f 	bne.w	80012c6 <__udivmoddi4+0x202>
 80011a8:	eba1 040c 	sub.w	r4, r1, ip
 80011ac:	2101      	movs	r1, #1
 80011ae:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80011b2:	fa1f f78c 	uxth.w	r7, ip
 80011b6:	fbb4 f6f8 	udiv	r6, r4, r8
 80011ba:	fb08 4416 	mls	r4, r8, r6, r4
 80011be:	fb07 f006 	mul.w	r0, r7, r6
 80011c2:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80011c6:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80011ca:	4298      	cmp	r0, r3
 80011cc:	d908      	bls.n	80011e0 <__udivmoddi4+0x11c>
 80011ce:	eb1c 0303 	adds.w	r3, ip, r3
 80011d2:	f106 34ff 	add.w	r4, r6, #4294967295
 80011d6:	d202      	bcs.n	80011de <__udivmoddi4+0x11a>
 80011d8:	4298      	cmp	r0, r3
 80011da:	f200 80cb 	bhi.w	8001374 <__udivmoddi4+0x2b0>
 80011de:	4626      	mov	r6, r4
 80011e0:	1a1c      	subs	r4, r3, r0
 80011e2:	fbb4 f0f8 	udiv	r0, r4, r8
 80011e6:	fb08 4410 	mls	r4, r8, r0, r4
 80011ea:	fb00 f707 	mul.w	r7, r0, r7
 80011ee:	fa1f f38e 	uxth.w	r3, lr
 80011f2:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80011f6:	429f      	cmp	r7, r3
 80011f8:	d908      	bls.n	800120c <__udivmoddi4+0x148>
 80011fa:	eb1c 0303 	adds.w	r3, ip, r3
 80011fe:	f100 34ff 	add.w	r4, r0, #4294967295
 8001202:	d202      	bcs.n	800120a <__udivmoddi4+0x146>
 8001204:	429f      	cmp	r7, r3
 8001206:	f200 80ae 	bhi.w	8001366 <__udivmoddi4+0x2a2>
 800120a:	4620      	mov	r0, r4
 800120c:	1bdb      	subs	r3, r3, r7
 800120e:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8001212:	e7a5      	b.n	8001160 <__udivmoddi4+0x9c>
 8001214:	f1c1 0720 	rsb	r7, r1, #32
 8001218:	408b      	lsls	r3, r1
 800121a:	fa22 fc07 	lsr.w	ip, r2, r7
 800121e:	ea4c 0c03 	orr.w	ip, ip, r3
 8001222:	fa24 f607 	lsr.w	r6, r4, r7
 8001226:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800122a:	fbb6 f8f9 	udiv	r8, r6, r9
 800122e:	fa1f fe8c 	uxth.w	lr, ip
 8001232:	fb09 6618 	mls	r6, r9, r8, r6
 8001236:	fa20 f307 	lsr.w	r3, r0, r7
 800123a:	408c      	lsls	r4, r1
 800123c:	fa00 fa01 	lsl.w	sl, r0, r1
 8001240:	fb08 f00e 	mul.w	r0, r8, lr
 8001244:	431c      	orrs	r4, r3
 8001246:	0c23      	lsrs	r3, r4, #16
 8001248:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 800124c:	4298      	cmp	r0, r3
 800124e:	fa02 f201 	lsl.w	r2, r2, r1
 8001252:	d90a      	bls.n	800126a <__udivmoddi4+0x1a6>
 8001254:	eb1c 0303 	adds.w	r3, ip, r3
 8001258:	f108 36ff 	add.w	r6, r8, #4294967295
 800125c:	f080 8081 	bcs.w	8001362 <__udivmoddi4+0x29e>
 8001260:	4298      	cmp	r0, r3
 8001262:	d97e      	bls.n	8001362 <__udivmoddi4+0x29e>
 8001264:	f1a8 0802 	sub.w	r8, r8, #2
 8001268:	4463      	add	r3, ip
 800126a:	1a1e      	subs	r6, r3, r0
 800126c:	fbb6 f3f9 	udiv	r3, r6, r9
 8001270:	fb09 6613 	mls	r6, r9, r3, r6
 8001274:	fb03 fe0e 	mul.w	lr, r3, lr
 8001278:	b2a4      	uxth	r4, r4
 800127a:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 800127e:	45a6      	cmp	lr, r4
 8001280:	d908      	bls.n	8001294 <__udivmoddi4+0x1d0>
 8001282:	eb1c 0404 	adds.w	r4, ip, r4
 8001286:	f103 30ff 	add.w	r0, r3, #4294967295
 800128a:	d266      	bcs.n	800135a <__udivmoddi4+0x296>
 800128c:	45a6      	cmp	lr, r4
 800128e:	d964      	bls.n	800135a <__udivmoddi4+0x296>
 8001290:	3b02      	subs	r3, #2
 8001292:	4464      	add	r4, ip
 8001294:	ea43 4008 	orr.w	r0, r3, r8, lsl #16
 8001298:	fba0 8302 	umull	r8, r3, r0, r2
 800129c:	eba4 040e 	sub.w	r4, r4, lr
 80012a0:	429c      	cmp	r4, r3
 80012a2:	46c6      	mov	lr, r8
 80012a4:	461e      	mov	r6, r3
 80012a6:	d350      	bcc.n	800134a <__udivmoddi4+0x286>
 80012a8:	d04d      	beq.n	8001346 <__udivmoddi4+0x282>
 80012aa:	b155      	cbz	r5, 80012c2 <__udivmoddi4+0x1fe>
 80012ac:	ebba 030e 	subs.w	r3, sl, lr
 80012b0:	eb64 0406 	sbc.w	r4, r4, r6
 80012b4:	fa04 f707 	lsl.w	r7, r4, r7
 80012b8:	40cb      	lsrs	r3, r1
 80012ba:	431f      	orrs	r7, r3
 80012bc:	40cc      	lsrs	r4, r1
 80012be:	e9c5 7400 	strd	r7, r4, [r5]
 80012c2:	2100      	movs	r1, #0
 80012c4:	e751      	b.n	800116a <__udivmoddi4+0xa6>
 80012c6:	fa0c fc02 	lsl.w	ip, ip, r2
 80012ca:	f1c2 0320 	rsb	r3, r2, #32
 80012ce:	40d9      	lsrs	r1, r3
 80012d0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80012d4:	fa20 f303 	lsr.w	r3, r0, r3
 80012d8:	fa00 fe02 	lsl.w	lr, r0, r2
 80012dc:	fbb1 f0f8 	udiv	r0, r1, r8
 80012e0:	fb08 1110 	mls	r1, r8, r0, r1
 80012e4:	4094      	lsls	r4, r2
 80012e6:	431c      	orrs	r4, r3
 80012e8:	fa1f f78c 	uxth.w	r7, ip
 80012ec:	0c23      	lsrs	r3, r4, #16
 80012ee:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80012f2:	fb00 f107 	mul.w	r1, r0, r7
 80012f6:	4299      	cmp	r1, r3
 80012f8:	d908      	bls.n	800130c <__udivmoddi4+0x248>
 80012fa:	eb1c 0303 	adds.w	r3, ip, r3
 80012fe:	f100 36ff 	add.w	r6, r0, #4294967295
 8001302:	d22c      	bcs.n	800135e <__udivmoddi4+0x29a>
 8001304:	4299      	cmp	r1, r3
 8001306:	d92a      	bls.n	800135e <__udivmoddi4+0x29a>
 8001308:	3802      	subs	r0, #2
 800130a:	4463      	add	r3, ip
 800130c:	1a5b      	subs	r3, r3, r1
 800130e:	fbb3 f1f8 	udiv	r1, r3, r8
 8001312:	fb08 3311 	mls	r3, r8, r1, r3
 8001316:	b2a4      	uxth	r4, r4
 8001318:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800131c:	fb01 f307 	mul.w	r3, r1, r7
 8001320:	42a3      	cmp	r3, r4
 8001322:	d908      	bls.n	8001336 <__udivmoddi4+0x272>
 8001324:	eb1c 0404 	adds.w	r4, ip, r4
 8001328:	f101 36ff 	add.w	r6, r1, #4294967295
 800132c:	d213      	bcs.n	8001356 <__udivmoddi4+0x292>
 800132e:	42a3      	cmp	r3, r4
 8001330:	d911      	bls.n	8001356 <__udivmoddi4+0x292>
 8001332:	3902      	subs	r1, #2
 8001334:	4464      	add	r4, ip
 8001336:	1ae4      	subs	r4, r4, r3
 8001338:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800133c:	e73b      	b.n	80011b6 <__udivmoddi4+0xf2>
 800133e:	4604      	mov	r4, r0
 8001340:	e6f2      	b.n	8001128 <__udivmoddi4+0x64>
 8001342:	4608      	mov	r0, r1
 8001344:	e708      	b.n	8001158 <__udivmoddi4+0x94>
 8001346:	45c2      	cmp	sl, r8
 8001348:	d2af      	bcs.n	80012aa <__udivmoddi4+0x1e6>
 800134a:	ebb8 0e02 	subs.w	lr, r8, r2
 800134e:	eb63 060c 	sbc.w	r6, r3, ip
 8001352:	3801      	subs	r0, #1
 8001354:	e7a9      	b.n	80012aa <__udivmoddi4+0x1e6>
 8001356:	4631      	mov	r1, r6
 8001358:	e7ed      	b.n	8001336 <__udivmoddi4+0x272>
 800135a:	4603      	mov	r3, r0
 800135c:	e79a      	b.n	8001294 <__udivmoddi4+0x1d0>
 800135e:	4630      	mov	r0, r6
 8001360:	e7d4      	b.n	800130c <__udivmoddi4+0x248>
 8001362:	46b0      	mov	r8, r6
 8001364:	e781      	b.n	800126a <__udivmoddi4+0x1a6>
 8001366:	4463      	add	r3, ip
 8001368:	3802      	subs	r0, #2
 800136a:	e74f      	b.n	800120c <__udivmoddi4+0x148>
 800136c:	4606      	mov	r6, r0
 800136e:	4623      	mov	r3, r4
 8001370:	4608      	mov	r0, r1
 8001372:	e711      	b.n	8001198 <__udivmoddi4+0xd4>
 8001374:	3e02      	subs	r6, #2
 8001376:	4463      	add	r3, ip
 8001378:	e732      	b.n	80011e0 <__udivmoddi4+0x11c>
 800137a:	bf00      	nop

0800137c <__aeabi_idiv0>:
 800137c:	4770      	bx	lr
 800137e:	bf00      	nop

08001380 <BMP280_ReadRegister>:

    float altitude = (T0 / alpha) * (1 - pow((pressure / P0), (1 / beta)));
    return altitude;
}

uint8_t BMP280_ReadRegister(uint8_t reg) {
 8001380:	b500      	push	{lr}
 8001382:	b085      	sub	sp, #20
 8001384:	f88d 0007 	strb.w	r0, [sp, #7]

    uint8_t received_data;
    Write_GPIO(PA, 8, LOW); // Disable CS
 8001388:	2200      	movs	r2, #0
 800138a:	2108      	movs	r1, #8
 800138c:	2001      	movs	r0, #1
 800138e:	f000 fd3f 	bl	8001e10 <Write_GPIO>
    SPI2_TX(&reg, 1);
 8001392:	2101      	movs	r1, #1
 8001394:	f10d 0007 	add.w	r0, sp, #7
 8001398:	f000 fdbe 	bl	8001f18 <SPI2_TX>
    SPI2_RX(&received_data, 1);
 800139c:	2101      	movs	r1, #1
 800139e:	f10d 000f 	add.w	r0, sp, #15
 80013a2:	f000 fdd7 	bl	8001f54 <SPI2_RX>
    Write_GPIO(PA, 8, HIGH); // Enable CS
 80013a6:	2201      	movs	r2, #1
 80013a8:	2108      	movs	r1, #8
 80013aa:	4610      	mov	r0, r2
 80013ac:	f000 fd30 	bl	8001e10 <Write_GPIO>
    return received_data;
}
 80013b0:	f89d 000f 	ldrb.w	r0, [sp, #15]
 80013b4:	b005      	add	sp, #20
 80013b6:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080013bc <BMP280_ReadTemperature>:
uint8_t BMP280_ReadTemperature(BMP280 *devBMP) {
 80013bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013be:	4604      	mov	r4, r0
    int32_t adc_T = (BMP280_ReadRegister(BMP280_REG_TEMP_MSB) << 12) |
 80013c0:	20fa      	movs	r0, #250	@ 0xfa
 80013c2:	f7ff ffdd 	bl	8001380 <BMP280_ReadRegister>
 80013c6:	0305      	lsls	r5, r0, #12
                    (BMP280_ReadRegister(BMP280_REG_TEMP_LSB) << 4) |
 80013c8:	20fb      	movs	r0, #251	@ 0xfb
 80013ca:	f7ff ffd9 	bl	8001380 <BMP280_ReadRegister>
    int32_t adc_T = (BMP280_ReadRegister(BMP280_REG_TEMP_MSB) << 12) |
 80013ce:	ea45 1500 	orr.w	r5, r5, r0, lsl #4
                    (BMP280_ReadRegister(BMP280_REG_TEMP_XLSB) >> 4);
 80013d2:	20fc      	movs	r0, #252	@ 0xfc
 80013d4:	f7ff ffd4 	bl	8001380 <BMP280_ReadRegister>
 80013d8:	f3c0 1007 	ubfx	r0, r0, #4, #8
    int32_t adc_T = (BMP280_ReadRegister(BMP280_REG_TEMP_MSB) << 12) |
 80013dc:	4328      	orrs	r0, r5
    int32_t var1 = ((((adc_T >> 3) - ((int32_t)devBMP->calib_data.dig_T1 << 1))) * ((int32_t)devBMP->calib_data.dig_T2)) >> 11;
 80013de:	8923      	ldrh	r3, [r4, #8]
 80013e0:	005a      	lsls	r2, r3, #1
 80013e2:	ebc2 02e0 	rsb	r2, r2, r0, asr #3
 80013e6:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80013ea:	fb01 f202 	mul.w	r2, r1, r2
    int32_t var2 = (((((adc_T >> 4) - ((int32_t)devBMP->calib_data.dig_T1)) * ((adc_T >> 4) - ((int32_t)devBMP->calib_data.dig_T1))) >> 12) * ((int32_t)devBMP->calib_data.dig_T3)) >> 14;
 80013ee:	ebc3 1320 	rsb	r3, r3, r0, asr #4
 80013f2:	fb03 f303 	mul.w	r3, r3, r3
 80013f6:	131b      	asrs	r3, r3, #12
 80013f8:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80013fc:	fb01 f303 	mul.w	r3, r1, r3
 8001400:	139b      	asrs	r3, r3, #14
    devBMP->t_fine = var1 + var2;
 8001402:	eb03 23e2 	add.w	r3, r3, r2, asr #11
 8001406:	6223      	str	r3, [r4, #32]
    float T = (devBMP->t_fine * 5 + 128) >> 8;
 8001408:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800140c:	3380      	adds	r3, #128	@ 0x80
 800140e:	1218      	asrs	r0, r3, #8
 8001410:	f7ff fc44 	bl	8000c9c <__aeabi_i2f>
    devBMP->temp_C = (T / 100.0) + devBMP->temperature_ref;
 8001414:	f7ff f808 	bl	8000428 <__aeabi_f2d>
 8001418:	2200      	movs	r2, #0
 800141a:	4b09      	ldr	r3, [pc, #36]	@ (8001440 <BMP280_ReadTemperature+0x84>)
 800141c:	f7ff f986 	bl	800072c <__aeabi_ddiv>
 8001420:	4606      	mov	r6, r0
 8001422:	460f      	mov	r7, r1
 8001424:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 8001426:	f7fe ffff 	bl	8000428 <__aeabi_f2d>
 800142a:	4602      	mov	r2, r0
 800142c:	460b      	mov	r3, r1
 800142e:	4630      	mov	r0, r6
 8001430:	4639      	mov	r1, r7
 8001432:	f7fe fe9b 	bl	800016c <__adddf3>
 8001436:	f7ff fb27 	bl	8000a88 <__aeabi_d2f>
 800143a:	6060      	str	r0, [r4, #4]
}
 800143c:	2001      	movs	r0, #1
 800143e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001440:	40590000 	.word	0x40590000
 8001444:	00000000 	.word	0x00000000

08001448 <BMP280_ReadPressure>:
uint8_t BMP280_ReadPressure(BMP280 *devBMP) {
 8001448:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800144c:	4605      	mov	r5, r0
	while((BMP280_ReadRegister(BMP280_REG_STATUS) & 0x04) != 0);
 800144e:	20f3      	movs	r0, #243	@ 0xf3
 8001450:	f7ff ff96 	bl	8001380 <BMP280_ReadRegister>
 8001454:	f010 0404 	ands.w	r4, r0, #4
 8001458:	d1f9      	bne.n	800144e <BMP280_ReadPressure+0x6>
    int32_t adc_P = (BMP280_ReadRegister(BMP280_REG_PRESS_MSB) << 12) |
 800145a:	20f7      	movs	r0, #247	@ 0xf7
 800145c:	f7ff ff90 	bl	8001380 <BMP280_ReadRegister>
 8001460:	0306      	lsls	r6, r0, #12
                    (BMP280_ReadRegister(BMP280_REG_PRESS_LSB) << 4) |
 8001462:	20f8      	movs	r0, #248	@ 0xf8
 8001464:	f7ff ff8c 	bl	8001380 <BMP280_ReadRegister>
    int32_t adc_P = (BMP280_ReadRegister(BMP280_REG_PRESS_MSB) << 12) |
 8001468:	ea46 1600 	orr.w	r6, r6, r0, lsl #4
                    (BMP280_ReadRegister(BMP280_REG_PRESS_XLSB) >> 4);
 800146c:	20f9      	movs	r0, #249	@ 0xf9
 800146e:	f7ff ff87 	bl	8001380 <BMP280_ReadRegister>
 8001472:	f3c0 1007 	ubfx	r0, r0, #4, #8
    int32_t adc_P = (BMP280_ReadRegister(BMP280_REG_PRESS_MSB) << 12) |
 8001476:	ea46 0100 	orr.w	r1, r6, r0
    int64_t var1 = ((int64_t)devBMP->t_fine) - 128000;
 800147a:	6a28      	ldr	r0, [r5, #32]
 800147c:	17c3      	asrs	r3, r0, #31
 800147e:	f5b0 30fa 	subs.w	r0, r0, #128000	@ 0x1f400
 8001482:	f143 33ff 	adc.w	r3, r3, #4294967295
    int64_t var2 = var1 * var1 * (int64_t)devBMP->calib_data.dig_P6;
 8001486:	fb00 f603 	mul.w	r6, r0, r3
 800148a:	fba0 2700 	umull	r2, r7, r0, r0
 800148e:	eb07 0746 	add.w	r7, r7, r6, lsl #1
 8001492:	f9b5 6018 	ldrsh.w	r6, [r5, #24]
 8001496:	ea4f 7ee6 	mov.w	lr, r6, asr #31
 800149a:	fb02 fe0e 	mul.w	lr, r2, lr
 800149e:	fb06 ee07 	mla	lr, r6, r7, lr
 80014a2:	fba2 8606 	umull	r8, r6, r2, r6
 80014a6:	44b6      	add	lr, r6
    var2 = var2 + ((var1 * (int64_t)devBMP->calib_data.dig_P5) << 17);
 80014a8:	f9b5 c016 	ldrsh.w	ip, [r5, #22]
 80014ac:	ea4f 79ec 	mov.w	r9, ip, asr #31
 80014b0:	fb0c f603 	mul.w	r6, ip, r3
 80014b4:	fb00 6609 	mla	r6, r0, r9, r6
 80014b8:	fbac c900 	umull	ip, r9, ip, r0
 80014bc:	444e      	add	r6, r9
 80014be:	0476      	lsls	r6, r6, #17
 80014c0:	ea46 36dc 	orr.w	r6, r6, ip, lsr #15
 80014c4:	ea4f 4c4c 	mov.w	ip, ip, lsl #17
 80014c8:	eb1c 0c08 	adds.w	ip, ip, r8
 80014cc:	eb4e 0e06 	adc.w	lr, lr, r6
    var2 = var2 + (((int64_t)devBMP->calib_data.dig_P4) << 35);
 80014d0:	f9b5 6014 	ldrsh.w	r6, [r5, #20]
 80014d4:	eb0e 0ec6 	add.w	lr, lr, r6, lsl #3
    var1 = ((var1 * var1 * (int64_t)devBMP->calib_data.dig_P3) >> 8) + ((var1 * (int64_t)devBMP->calib_data.dig_P2) << 12);
 80014d8:	f9b5 8012 	ldrsh.w	r8, [r5, #18]
 80014dc:	ea4f 76e8 	mov.w	r6, r8, asr #31
 80014e0:	fb02 f606 	mul.w	r6, r2, r6
 80014e4:	fb08 6607 	mla	r6, r8, r7, r6
 80014e8:	fba2 2808 	umull	r2, r8, r2, r8
 80014ec:	4446      	add	r6, r8
 80014ee:	0a12      	lsrs	r2, r2, #8
 80014f0:	ea42 6206 	orr.w	r2, r2, r6, lsl #24
 80014f4:	f9b5 7010 	ldrsh.w	r7, [r5, #16]
 80014f8:	ea4f 78e7 	mov.w	r8, r7, asr #31
 80014fc:	fb07 f303 	mul.w	r3, r7, r3
 8001500:	fb00 3308 	mla	r3, r0, r8, r3
 8001504:	fba7 7000 	umull	r7, r0, r7, r0
 8001508:	4403      	add	r3, r0
 800150a:	031b      	lsls	r3, r3, #12
 800150c:	ea43 5317 	orr.w	r3, r3, r7, lsr #20
 8001510:	033f      	lsls	r7, r7, #12
 8001512:	19d2      	adds	r2, r2, r7
 8001514:	eb43 2326 	adc.w	r3, r3, r6, asr #8
    var1 = (((((int64_t)1) << 47) + var1)) * ((int64_t)devBMP->calib_data.dig_P1) >> 33;
 8001518:	f503 4300 	add.w	r3, r3, #32768	@ 0x8000
 800151c:	89ee      	ldrh	r6, [r5, #14]
 800151e:	fba2 2006 	umull	r2, r0, r2, r6
 8001522:	fb06 0003 	mla	r0, r6, r3, r0
 8001526:	1042      	asrs	r2, r0, #1
 8001528:	17c3      	asrs	r3, r0, #31
    if (var1 == 0) {
 800152a:	ea53 0060 	orrs.w	r0, r3, r0, asr #1
 800152e:	d077      	beq.n	8001620 <BMP280_ReadPressure+0x1d8>
    int64_t p = 1048576 - adc_P;
 8001530:	f5c1 1680 	rsb	r6, r1, #1048576	@ 0x100000
    p = (((p << 31) - var2) * 3125) / var1;
 8001534:	1071      	asrs	r1, r6, #1
 8001536:	07f6      	lsls	r6, r6, #31
 8001538:	ebb6 060c 	subs.w	r6, r6, ip
 800153c:	eb61 0e0e 	sbc.w	lr, r1, lr
 8001540:	19b4      	adds	r4, r6, r6
 8001542:	eb4e 010e 	adc.w	r1, lr, lr
 8001546:	19a4      	adds	r4, r4, r6
 8001548:	eb4e 0101 	adc.w	r1, lr, r1
 800154c:	0188      	lsls	r0, r1, #6
 800154e:	ea40 6094 	orr.w	r0, r0, r4, lsr #26
 8001552:	01a7      	lsls	r7, r4, #6
 8001554:	19e4      	adds	r4, r4, r7
 8001556:	eb41 0100 	adc.w	r1, r1, r0
 800155a:	0089      	lsls	r1, r1, #2
 800155c:	ea41 7194 	orr.w	r1, r1, r4, lsr #30
 8001560:	00a4      	lsls	r4, r4, #2
 8001562:	19a0      	adds	r0, r4, r6
 8001564:	eb4e 0101 	adc.w	r1, lr, r1
 8001568:	0089      	lsls	r1, r1, #2
 800156a:	ea41 7190 	orr.w	r1, r1, r0, lsr #30
 800156e:	0080      	lsls	r0, r0, #2
 8001570:	1980      	adds	r0, r0, r6
 8001572:	eb4e 0101 	adc.w	r1, lr, r1
 8001576:	f7ff fd55 	bl	8001024 <__aeabi_ldivmod>
 800157a:	4603      	mov	r3, r0
    var1 = (((int64_t)devBMP->calib_data.dig_P9) * (p >> 13) * (p >> 13)) >> 25;
 800157c:	f9b5 401e 	ldrsh.w	r4, [r5, #30]
 8001580:	17e6      	asrs	r6, r4, #31
 8001582:	0b42      	lsrs	r2, r0, #13
 8001584:	ea42 42c1 	orr.w	r2, r2, r1, lsl #19
 8001588:	ea4f 3c61 	mov.w	ip, r1, asr #13
 800158c:	fb04 f70c 	mul.w	r7, r4, ip
 8001590:	fb02 7706 	mla	r7, r2, r6, r7
 8001594:	fba4 6402 	umull	r6, r4, r4, r2
 8001598:	443c      	add	r4, r7
 800159a:	fb02 f404 	mul.w	r4, r2, r4
 800159e:	fb06 440c 	mla	r4, r6, ip, r4
 80015a2:	fba2 2606 	umull	r2, r6, r2, r6
 80015a6:	4434      	add	r4, r6
 80015a8:	0e52      	lsrs	r2, r2, #25
 80015aa:	ea42 12c4 	orr.w	r2, r2, r4, lsl #7
    var2 = (((int64_t)devBMP->calib_data.dig_P8) * p) >> 19;
 80015ae:	f9b5 601c 	ldrsh.w	r6, [r5, #28]
 80015b2:	ea4f 7ce6 	mov.w	ip, r6, asr #31
 80015b6:	fb06 f701 	mul.w	r7, r6, r1
 80015ba:	fb0c 7000 	mla	r0, ip, r0, r7
 80015be:	fba6 6703 	umull	r6, r7, r6, r3
 80015c2:	4438      	add	r0, r7
 80015c4:	0cf6      	lsrs	r6, r6, #19
 80015c6:	ea46 3640 	orr.w	r6, r6, r0, lsl #13
    p = ((p + var1 + var2) >> 8) + (((int64_t)devBMP->calib_data.dig_P7) << 4);
 80015ca:	189b      	adds	r3, r3, r2
 80015cc:	eb41 6164 	adc.w	r1, r1, r4, asr #25
 80015d0:	199b      	adds	r3, r3, r6
 80015d2:	eb41 42e0 	adc.w	r2, r1, r0, asr #19
 80015d6:	0a18      	lsrs	r0, r3, #8
 80015d8:	ea40 6002 	orr.w	r0, r0, r2, lsl #24
 80015dc:	f9b5 301a 	ldrsh.w	r3, [r5, #26]
 80015e0:	17d9      	asrs	r1, r3, #31
 80015e2:	0109      	lsls	r1, r1, #4
 80015e4:	ea41 7113 	orr.w	r1, r1, r3, lsr #28
 80015e8:	011b      	lsls	r3, r3, #4
 80015ea:	18c0      	adds	r0, r0, r3
    devBMP->pressure_Pa = ((float)p / 256.09) + devBMP->pressure_ref;
 80015ec:	eb41 2122 	adc.w	r1, r1, r2, asr #8
 80015f0:	f7ff fb6a 	bl	8000cc8 <__aeabi_l2f>
 80015f4:	f7fe ff18 	bl	8000428 <__aeabi_f2d>
 80015f8:	a30b      	add	r3, pc, #44	@ (adr r3, 8001628 <BMP280_ReadPressure+0x1e0>)
 80015fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80015fe:	f7ff f895 	bl	800072c <__aeabi_ddiv>
 8001602:	4606      	mov	r6, r0
 8001604:	460f      	mov	r7, r1
 8001606:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 8001608:	f7fe ff0e 	bl	8000428 <__aeabi_f2d>
 800160c:	4602      	mov	r2, r0
 800160e:	460b      	mov	r3, r1
 8001610:	4630      	mov	r0, r6
 8001612:	4639      	mov	r1, r7
 8001614:	f7fe fdaa 	bl	800016c <__adddf3>
 8001618:	f7ff fa36 	bl	8000a88 <__aeabi_d2f>
 800161c:	6028      	str	r0, [r5, #0]
    return 1; // OK
 800161e:	2401      	movs	r4, #1
}
 8001620:	4620      	mov	r0, r4
 8001622:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001626:	bf00      	nop
 8001628:	a3d70a3d 	.word	0xa3d70a3d
 800162c:	40700170 	.word	0x40700170

08001630 <BMP280_MeasureReference>:
uint8_t BMP280_MeasureReference(BMP280 *devBMP, float temp_ref, float press_ref) {
 8001630:	b570      	push	{r4, r5, r6, lr}
 8001632:	4604      	mov	r4, r0
 8001634:	460e      	mov	r6, r1
 8001636:	4615      	mov	r5, r2
	devBMP->temperature_ref = BMP280_ReadTemperature(devBMP) - temp_ref;
 8001638:	f7ff fec0 	bl	80013bc <BMP280_ReadTemperature>
 800163c:	f7ff fb2e 	bl	8000c9c <__aeabi_i2f>
 8001640:	4631      	mov	r1, r6
 8001642:	f7ff fa75 	bl	8000b30 <__aeabi_fsub>
 8001646:	6260      	str	r0, [r4, #36]	@ 0x24
	devBMP->pressure_ref = BMP280_ReadPressure(devBMP) - press_ref;
 8001648:	4620      	mov	r0, r4
 800164a:	f7ff fefd 	bl	8001448 <BMP280_ReadPressure>
 800164e:	f7ff fb25 	bl	8000c9c <__aeabi_i2f>
 8001652:	4629      	mov	r1, r5
 8001654:	f7ff fa6c 	bl	8000b30 <__aeabi_fsub>
 8001658:	62a0      	str	r0, [r4, #40]	@ 0x28
}
 800165a:	2001      	movs	r0, #1
 800165c:	bd70      	pop	{r4, r5, r6, pc}

0800165e <BMP280_ReadCalibrationData>:
void BMP280_ReadCalibrationData(BMP280 *devBMP) {
 800165e:	b530      	push	{r4, r5, lr}
 8001660:	b089      	sub	sp, #36	@ 0x24
 8001662:	4605      	mov	r5, r0
	while((BMP280_ReadRegister(BMP280_REG_STATUS) & 0x04) != 0);
 8001664:	20f3      	movs	r0, #243	@ 0xf3
 8001666:	f7ff fe8b 	bl	8001380 <BMP280_ReadRegister>
 800166a:	f010 0f04 	tst.w	r0, #4
 800166e:	d1f9      	bne.n	8001664 <BMP280_ReadCalibrationData+0x6>
    for (int i = 0; i < 26; i++) {
 8001670:	2400      	movs	r4, #0
 8001672:	e00a      	b.n	800168a <BMP280_ReadCalibrationData+0x2c>
        calib[i] = BMP280_ReadRegister(BMP280_REG_CALIB_00 + i);
 8001674:	f1a4 0078 	sub.w	r0, r4, #120	@ 0x78
 8001678:	b2c0      	uxtb	r0, r0
 800167a:	f7ff fe81 	bl	8001380 <BMP280_ReadRegister>
 800167e:	f104 0320 	add.w	r3, r4, #32
 8001682:	446b      	add	r3, sp
 8001684:	f803 0c1c 	strb.w	r0, [r3, #-28]
    for (int i = 0; i < 26; i++) {
 8001688:	3401      	adds	r4, #1
 800168a:	2c19      	cmp	r4, #25
 800168c:	ddf2      	ble.n	8001674 <BMP280_ReadCalibrationData+0x16>
    devBMP->calib_data.dig_T1 = (calib[1] << 8) | calib[0];
 800168e:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8001692:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8001696:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800169a:	812b      	strh	r3, [r5, #8]
    devBMP->calib_data.dig_T2 = (calib[3] << 8) | calib[2];
 800169c:	f89d 2007 	ldrb.w	r2, [sp, #7]
 80016a0:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80016a4:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80016a8:	816b      	strh	r3, [r5, #10]
    devBMP->calib_data.dig_T3 = (calib[5] << 8) | calib[4];
 80016aa:	f89d 2009 	ldrb.w	r2, [sp, #9]
 80016ae:	f89d 3008 	ldrb.w	r3, [sp, #8]
 80016b2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80016b6:	81ab      	strh	r3, [r5, #12]
    devBMP->calib_data.dig_P1 = (calib[7] << 8) | calib[6];
 80016b8:	f89d 200b 	ldrb.w	r2, [sp, #11]
 80016bc:	f89d 300a 	ldrb.w	r3, [sp, #10]
 80016c0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80016c4:	81eb      	strh	r3, [r5, #14]
    devBMP->calib_data.dig_P2 = (calib[9] << 8) | calib[8];
 80016c6:	f89d 200d 	ldrb.w	r2, [sp, #13]
 80016ca:	f89d 300c 	ldrb.w	r3, [sp, #12]
 80016ce:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80016d2:	822b      	strh	r3, [r5, #16]
    devBMP->calib_data.dig_P3 = (calib[11] << 8) | calib[10];
 80016d4:	f89d 200f 	ldrb.w	r2, [sp, #15]
 80016d8:	f89d 300e 	ldrb.w	r3, [sp, #14]
 80016dc:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80016e0:	826b      	strh	r3, [r5, #18]
    devBMP->calib_data.dig_P4 = (calib[13] << 8) | calib[12];
 80016e2:	f89d 2011 	ldrb.w	r2, [sp, #17]
 80016e6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80016ea:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80016ee:	82ab      	strh	r3, [r5, #20]
    devBMP->calib_data.dig_P5 = (calib[15] << 8) | calib[14];
 80016f0:	f89d 2013 	ldrb.w	r2, [sp, #19]
 80016f4:	f89d 3012 	ldrb.w	r3, [sp, #18]
 80016f8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80016fc:	82eb      	strh	r3, [r5, #22]
    devBMP->calib_data.dig_P6 = (calib[17] << 8) | calib[16];
 80016fe:	f89d 2015 	ldrb.w	r2, [sp, #21]
 8001702:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8001706:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800170a:	832b      	strh	r3, [r5, #24]
    devBMP->calib_data.dig_P7 = (calib[19] << 8) | calib[18];
 800170c:	f89d 2017 	ldrb.w	r2, [sp, #23]
 8001710:	f89d 3016 	ldrb.w	r3, [sp, #22]
 8001714:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001718:	836b      	strh	r3, [r5, #26]
    devBMP->calib_data.dig_P8 = (calib[21] << 8) | calib[20];
 800171a:	f89d 2019 	ldrb.w	r2, [sp, #25]
 800171e:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8001722:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001726:	83ab      	strh	r3, [r5, #28]
    devBMP->calib_data.dig_P9 = (calib[23] << 8) | calib[22];
 8001728:	f89d 201b 	ldrb.w	r2, [sp, #27]
 800172c:	f89d 301a 	ldrb.w	r3, [sp, #26]
 8001730:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001734:	83eb      	strh	r3, [r5, #30]
}
 8001736:	b009      	add	sp, #36	@ 0x24
 8001738:	bd30      	pop	{r4, r5, pc}

0800173a <BMP280_WriteRegister>:

uint8_t BMP280_WriteRegister(uint8_t reg, uint8_t value) {
 800173a:	b500      	push	{lr}
 800173c:	b083      	sub	sp, #12

    uint8_t data[2] = {reg, value};
 800173e:	f88d 0004 	strb.w	r0, [sp, #4]
 8001742:	f88d 1005 	strb.w	r1, [sp, #5]
    Write_GPIO(PA, 8, LOW); // Disable CS
 8001746:	2200      	movs	r2, #0
 8001748:	2108      	movs	r1, #8
 800174a:	2001      	movs	r0, #1
 800174c:	f000 fb60 	bl	8001e10 <Write_GPIO>
    SPI2_TX(data, 2);
 8001750:	2102      	movs	r1, #2
 8001752:	a801      	add	r0, sp, #4
 8001754:	f000 fbe0 	bl	8001f18 <SPI2_TX>
    Write_GPIO(PA, 8, HIGH); // Enable CS
 8001758:	2201      	movs	r2, #1
 800175a:	2108      	movs	r1, #8
 800175c:	4610      	mov	r0, r2
 800175e:	f000 fb57 	bl	8001e10 <Write_GPIO>
    return 1; // OK
}
 8001762:	2001      	movs	r0, #1
 8001764:	b003      	add	sp, #12
 8001766:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800176c <BMP280_Init>:
uint8_t BMP280_Init(BMP280 *devBMP, unsigned short spi_port) {
 800176c:	b510      	push	{r4, lr}
 800176e:	4604      	mov	r4, r0
	SPI_Init(spi_port);
 8001770:	4608      	mov	r0, r1
 8001772:	f000 fb6d 	bl	8001e50 <SPI_Init>
    BMP280_WriteRegister(BMP280_REG_RESET, BMP280_RESET_WORD); // Reset
 8001776:	21b6      	movs	r1, #182	@ 0xb6
 8001778:	20e0      	movs	r0, #224	@ 0xe0
 800177a:	f7ff ffde 	bl	800173a <BMP280_WriteRegister>
    if (BMP280_ReadRegister(BMP280_REG_ID) != BMP280_DEVICE_ID) {
 800177e:	20d0      	movs	r0, #208	@ 0xd0
 8001780:	f7ff fdfe 	bl	8001380 <BMP280_ReadRegister>
 8001784:	2858      	cmp	r0, #88	@ 0x58
 8001786:	d001      	beq.n	800178c <BMP280_Init+0x20>
        return 0; // Error
 8001788:	2000      	movs	r0, #0
}
 800178a:	bd10      	pop	{r4, pc}
    BMP280_ReadCalibrationData(devBMP);
 800178c:	4620      	mov	r0, r4
 800178e:	f7ff ff66 	bl	800165e <BMP280_ReadCalibrationData>
    BMP280_WriteRegister(BMP280_REG_CTRL_MEAS, BMP280_SETTING_CTRL_MEAS_NORMAL);
 8001792:	2157      	movs	r1, #87	@ 0x57
 8001794:	20f4      	movs	r0, #244	@ 0xf4
 8001796:	f7ff ffd0 	bl	800173a <BMP280_WriteRegister>
    BMP280_WriteRegister(BMP280_REG_CONFIG, BMP280_SETTING_CONFIG);
 800179a:	2108      	movs	r1, #8
 800179c:	20f5      	movs	r0, #245	@ 0xf5
 800179e:	f7ff ffcc 	bl	800173a <BMP280_WriteRegister>
    BMP280_MeasureReference(devBMP, T0, 101325.0);
 80017a2:	4a03      	ldr	r2, [pc, #12]	@ (80017b0 <BMP280_Init+0x44>)
 80017a4:	4903      	ldr	r1, [pc, #12]	@ (80017b4 <BMP280_Init+0x48>)
 80017a6:	4620      	mov	r0, r4
 80017a8:	f7ff ff42 	bl	8001630 <BMP280_MeasureReference>
    return 1;
 80017ac:	2001      	movs	r0, #1
 80017ae:	e7ec      	b.n	800178a <BMP280_Init+0x1e>
 80017b0:	47c5e680 	.word	0x47c5e680
 80017b4:	43901333 	.word	0x43901333

080017b8 <CD74HC4051_Init>:

uint32_t ADC_Sampling (ADC_HandleTypeDef *hadc);

uint8_t CD74HC4051_Init (ADC_HandleTypeDef *hadc) {

	if (hadc == NULL) {
 80017b8:	b370      	cbz	r0, 8001818 <CD74HC4051_Init+0x60>
uint8_t CD74HC4051_Init (ADC_HandleTypeDef *hadc) {
 80017ba:	b510      	push	{r4, lr}
 80017bc:	4604      	mov	r4, r0
		return 0; // Error
	}
	// Read pin
	Init_GPIO(PA, 0, IN, I_AN); // MUL_AN
 80017be:	2300      	movs	r3, #0
 80017c0:	461a      	mov	r2, r3
 80017c2:	4619      	mov	r1, r3
 80017c4:	2001      	movs	r0, #1
 80017c6:	f000 fad9 	bl	8001d7c <Init_GPIO>
	// Batteries
	Init_GPIO(PC, 13, OUT2, O_GP_PP); // MUL_S0
 80017ca:	2300      	movs	r3, #0
 80017cc:	2202      	movs	r2, #2
 80017ce:	210d      	movs	r1, #13
 80017d0:	2003      	movs	r0, #3
 80017d2:	f000 fad3 	bl	8001d7c <Init_GPIO>
	Init_GPIO(PC, 14, OUT2, O_GP_PP); // MUL_S1
 80017d6:	2300      	movs	r3, #0
 80017d8:	2202      	movs	r2, #2
 80017da:	210e      	movs	r1, #14
 80017dc:	2003      	movs	r0, #3
 80017de:	f000 facd 	bl	8001d7c <Init_GPIO>
	Init_GPIO(PC, 15, OUT2, O_GP_PP); // MUL_S2
 80017e2:	2300      	movs	r3, #0
 80017e4:	2202      	movs	r2, #2
 80017e6:	210f      	movs	r1, #15
 80017e8:	2003      	movs	r0, #3
 80017ea:	f000 fac7 	bl	8001d7c <Init_GPIO>
	Init_GPIO(PB, 8, OUT2, O_GP_PP); // MUL_E~
 80017ee:	2300      	movs	r3, #0
 80017f0:	2202      	movs	r2, #2
 80017f2:	2108      	movs	r1, #8
 80017f4:	4610      	mov	r0, r2
 80017f6:	f000 fac1 	bl	8001d7c <Init_GPIO>
	// Set MUL_E~ (inverse)
	Write_GPIO(PB, 8, HIGH);
 80017fa:	2201      	movs	r2, #1
 80017fc:	2108      	movs	r1, #8
 80017fe:	2002      	movs	r0, #2
 8001800:	f000 fb06 	bl	8001e10 <Write_GPIO>
	// Pyros
	Pyro_Init();
 8001804:	f000 fa02 	bl	8001c0c <Pyro_Init>

	//ADC calibration
	ADC_Stop(hadc);
 8001808:	4620      	mov	r0, r4
 800180a:	f000 fa97 	bl	8001d3c <ADC_Stop>
	ADC_Calibration(hadc);
 800180e:	4620      	mov	r0, r4
 8001810:	f000 fa8f 	bl	8001d32 <ADC_Calibration>

	return 1; // OK
 8001814:	2001      	movs	r0, #1
}
 8001816:	bd10      	pop	{r4, pc}
		return 0; // Error
 8001818:	2000      	movs	r0, #0
}
 800181a:	4770      	bx	lr

0800181c <CD74HC4051_AnRead>:

uint16_t CD74HC4051_AnRead(ADC_HandleTypeDef *hadc, uint8_t channel, uint8_t pyro_channel, float vref) {

	if (hadc == NULL) {
 800181c:	2800      	cmp	r0, #0
 800181e:	d060      	beq.n	80018e2 <CD74HC4051_AnRead+0xc6>
uint16_t CD74HC4051_AnRead(ADC_HandleTypeDef *hadc, uint8_t channel, uint8_t pyro_channel, float vref) {
 8001820:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001822:	460c      	mov	r4, r1
 8001824:	4615      	mov	r5, r2
 8001826:	461e      	mov	r6, r3
 8001828:	4607      	mov	r7, r0
		return 0;
	}
	if(channel == CHANNEL_1 || channel == CHANNEL_7) {
 800182a:	2901      	cmp	r1, #1
 800182c:	d05b      	beq.n	80018e6 <CD74HC4051_AnRead+0xca>
		return 0;
	}

	ADC_Start(hadc);
 800182e:	f000 fa7b 	bl	8001d28 <ADC_Start>

	Write_GPIO(PB, 8, HIGH); // MUL_E~ (inverse)
 8001832:	2201      	movs	r2, #1
 8001834:	2108      	movs	r1, #8
 8001836:	2002      	movs	r0, #2
 8001838:	f000 faea 	bl	8001e10 <Write_GPIO>
	Write_GPIO(PA, 15, LOW); // Pyro_Test (inverse)
 800183c:	2200      	movs	r2, #0
 800183e:	210f      	movs	r1, #15
 8001840:	2001      	movs	r0, #1
 8001842:	f000 fae5 	bl	8001e10 <Write_GPIO>
	if(channel == CHANNEL_0) {
 8001846:	b98c      	cbnz	r4, 800186c <CD74HC4051_AnRead+0x50>
		if(pyro_channel == PYRO_CHANNEL_0) {
 8001848:	2d01      	cmp	r5, #1
 800184a:	d003      	beq.n	8001854 <CD74HC4051_AnRead+0x38>
			Write_GPIO(PB, 4, HIGH); // Pyro_ON0
		} else if (pyro_channel == PYRO_CHANNEL_1) {
 800184c:	2d02      	cmp	r5, #2
 800184e:	d007      	beq.n	8001860 <CD74HC4051_AnRead+0x44>
			Write_GPIO(PB, 5, HIGH); // Pyro_ON1
		} else {
			return 0;
 8001850:	2000      	movs	r0, #0
 8001852:	e045      	b.n	80018e0 <CD74HC4051_AnRead+0xc4>
			Write_GPIO(PB, 4, HIGH); // Pyro_ON0
 8001854:	2201      	movs	r2, #1
 8001856:	2104      	movs	r1, #4
 8001858:	2002      	movs	r0, #2
 800185a:	f000 fad9 	bl	8001e10 <Write_GPIO>
 800185e:	e017      	b.n	8001890 <CD74HC4051_AnRead+0x74>
			Write_GPIO(PB, 5, HIGH); // Pyro_ON1
 8001860:	2201      	movs	r2, #1
 8001862:	2105      	movs	r1, #5
 8001864:	2002      	movs	r0, #2
 8001866:	f000 fad3 	bl	8001e10 <Write_GPIO>
 800186a:	e011      	b.n	8001890 <CD74HC4051_AnRead+0x74>
		}
	} else {
		// Set channel
		Write_GPIO(PC, 13, (channel & 0x01) ? HIGH : LOW);
 800186c:	f004 0201 	and.w	r2, r4, #1
 8001870:	210d      	movs	r1, #13
 8001872:	2003      	movs	r0, #3
 8001874:	f000 facc 	bl	8001e10 <Write_GPIO>
		Write_GPIO(PC, 14, (channel & 0x02) ? HIGH : LOW);
 8001878:	f3c4 0240 	ubfx	r2, r4, #1, #1
 800187c:	210e      	movs	r1, #14
 800187e:	2003      	movs	r0, #3
 8001880:	f000 fac6 	bl	8001e10 <Write_GPIO>
		Write_GPIO(PC, 15, (channel & 0x04) ? HIGH : LOW);
 8001884:	f3c4 0280 	ubfx	r2, r4, #2, #1
 8001888:	210f      	movs	r1, #15
 800188a:	2003      	movs	r0, #3
 800188c:	f000 fac0 	bl	8001e10 <Write_GPIO>
	}
	// Reactiver multiplexer pour lecture
	Write_GPIO(PB, 8, LOW); // MUL_E~ (inverse)
 8001890:	2200      	movs	r2, #0
 8001892:	2108      	movs	r1, #8
 8001894:	2002      	movs	r0, #2
 8001896:	f000 fabb 	bl	8001e10 <Write_GPIO>
	// Lecture
	uint32_t adc_value = ADC_Sampling(hadc);
 800189a:	4638      	mov	r0, r7
 800189c:	f000 fa54 	bl	8001d48 <ADC_Sampling>
 80018a0:	4604      	mov	r4, r0
	// Desactiver pyros (ordre important)
	Write_GPIO(PB, 4, LOW); // Pyro_ON0
 80018a2:	2200      	movs	r2, #0
 80018a4:	2104      	movs	r1, #4
 80018a6:	2002      	movs	r0, #2
 80018a8:	f000 fab2 	bl	8001e10 <Write_GPIO>
	Write_GPIO(PB, 5, LOW); // Pyro_ON1
 80018ac:	2200      	movs	r2, #0
 80018ae:	2105      	movs	r1, #5
 80018b0:	2002      	movs	r0, #2
 80018b2:	f000 faad 	bl	8001e10 <Write_GPIO>
	Write_GPIO(PA, 15, HIGH); // Pyro_Test~
 80018b6:	2201      	movs	r2, #1
 80018b8:	210f      	movs	r1, #15
 80018ba:	4610      	mov	r0, r2
 80018bc:	f000 faa8 	bl	8001e10 <Write_GPIO>

	return (uint16_t)((adc_value * vref / 4096) * 1000); // millivolts
 80018c0:	4620      	mov	r0, r4
 80018c2:	f7ff f9e7 	bl	8000c94 <__aeabi_ui2f>
 80018c6:	4631      	mov	r1, r6
 80018c8:	f7ff fa3c 	bl	8000d44 <__aeabi_fmul>
 80018cc:	f04f 5166 	mov.w	r1, #964689920	@ 0x39800000
 80018d0:	f7ff fa38 	bl	8000d44 <__aeabi_fmul>
 80018d4:	4905      	ldr	r1, [pc, #20]	@ (80018ec <CD74HC4051_AnRead+0xd0>)
 80018d6:	f7ff fa35 	bl	8000d44 <__aeabi_fmul>
 80018da:	f7ff fb83 	bl	8000fe4 <__aeabi_f2uiz>
 80018de:	b280      	uxth	r0, r0
}
 80018e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		return 0;
 80018e2:	2000      	movs	r0, #0
}
 80018e4:	4770      	bx	lr
		return 0;
 80018e6:	2000      	movs	r0, #0
 80018e8:	e7fa      	b.n	80018e0 <CD74HC4051_AnRead+0xc4>
 80018ea:	bf00      	nop
 80018ec:	447a0000 	.word	0x447a0000

080018f0 <HM10BLE_Send>:

	USART_RX(usart_port, response, sizeof(response));
	return 1; // OK
}

uint8_t HM10BLE_Send(unsigned short usart_port, uint8_t *message, uint8_t size) {
 80018f0:	b508      	push	{r3, lr}

	USART_TX(usart_port, message, sizeof(message));
 80018f2:	2204      	movs	r2, #4
 80018f4:	f000 fbbe 	bl	8002074 <USART_TX>
	return 1; // OK
}
 80018f8:	2001      	movs	r0, #1
 80018fa:	bd08      	pop	{r3, pc}

080018fc <HM10BLE_Init>:
uint8_t HM10BLE_Init(HM10BLE *devHM10, unsigned short usart_port) {
 80018fc:	b538      	push	{r3, r4, r5, lr}
 80018fe:	4604      	mov	r4, r0
 8001900:	460d      	mov	r5, r1
	HM10BLE_Send(usart_port, (uint8_t *)command_at, strlen(command_at));
 8001902:	2202      	movs	r2, #2
 8001904:	490b      	ldr	r1, [pc, #44]	@ (8001934 <HM10BLE_Init+0x38>)
 8001906:	4628      	mov	r0, r5
 8001908:	f7ff fff2 	bl	80018f0 <HM10BLE_Send>
	HM10BLE_Send(usart_port, (uint8_t *)"AT+NAMEBulldogs", strlen("AT+NAMEMerope"));	// Name device
 800190c:	220d      	movs	r2, #13
 800190e:	490a      	ldr	r1, [pc, #40]	@ (8001938 <HM10BLE_Init+0x3c>)
 8001910:	4628      	mov	r0, r5
 8001912:	f7ff ffed 	bl	80018f0 <HM10BLE_Send>
	HM10BLE_Send(usart_port, (uint8_t *)"AT+IMME1", strlen("AT+IMME1"));	// Start
 8001916:	2208      	movs	r2, #8
 8001918:	4908      	ldr	r1, [pc, #32]	@ (800193c <HM10BLE_Init+0x40>)
 800191a:	4628      	mov	r0, r5
 800191c:	f7ff ffe8 	bl	80018f0 <HM10BLE_Send>
	devHM10->hm10_status = false;
 8001920:	2300      	movs	r3, #0
 8001922:	7023      	strb	r3, [r4, #0]
	devHM10->rfd_status = false;
 8001924:	7063      	strb	r3, [r4, #1]
	devHM10->icm_status = false;
 8001926:	70a3      	strb	r3, [r4, #2]
	devHM10->l76lm33_status = false;
 8001928:	70e3      	strb	r3, [r4, #3]
	devHM10->bmp_status = false;
 800192a:	7123      	strb	r3, [r4, #4]
	devHM10->bat_status = 0x00;
 800192c:	7163      	strb	r3, [r4, #5]
	devHM10->sd_status = false;
 800192e:	71a3      	strb	r3, [r4, #6]
}
 8001930:	2001      	movs	r0, #1
 8001932:	bd38      	pop	{r3, r4, r5, pc}
 8001934:	080086d0 	.word	0x080086d0
 8001938:	080086d4 	.word	0x080086d4
 800193c:	080086e4 	.word	0x080086e4

08001940 <ICM20602_Read>:
{
	return Read_GPIO(PA, 10);
}

void ICM20602_Read(uint8_t address, uint8_t rxData[], uint8_t size)
{
 8001940:	b530      	push	{r4, r5, lr}
 8001942:	b083      	sub	sp, #12
 8001944:	460c      	mov	r4, r1
 8001946:	4615      	mov	r5, r2
 8001948:	f88d 0007 	strb.w	r0, [sp, #7]
	address |= 0x80;  // read operation
 800194c:	b2c3      	uxtb	r3, r0
 800194e:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8001952:	f88d 3007 	strb.w	r3, [sp, #7]

	Write_GPIO(PB, 12, LOW);
 8001956:	2200      	movs	r2, #0
 8001958:	210c      	movs	r1, #12
 800195a:	2002      	movs	r0, #2
 800195c:	f000 fa58 	bl	8001e10 <Write_GPIO>
	SPI2_TX(&address, 1);  // send address
 8001960:	2101      	movs	r1, #1
 8001962:	f10d 0007 	add.w	r0, sp, #7
 8001966:	f000 fad7 	bl	8001f18 <SPI2_TX>
	SPI2_RX(rxData, size);  // receive 6 bytes data
 800196a:	4629      	mov	r1, r5
 800196c:	4620      	mov	r0, r4
 800196e:	f000 faf1 	bl	8001f54 <SPI2_RX>
	Write_GPIO(PB, 12, HIGH);
 8001972:	2201      	movs	r2, #1
 8001974:	210c      	movs	r1, #12
 8001976:	2002      	movs	r0, #2
 8001978:	f000 fa4a 	bl	8001e10 <Write_GPIO>
}
 800197c:	b003      	add	sp, #12
 800197e:	bd30      	pop	{r4, r5, pc}

08001980 <ICM20602_Write>:

void ICM20602_Write(uint8_t address, uint8_t value)
{
 8001980:	b500      	push	{lr}
 8001982:	b083      	sub	sp, #12
 8001984:	f88d 0007 	strb.w	r0, [sp, #7]
 8001988:	f88d 1006 	strb.w	r1, [sp, #6]
	Write_GPIO(PB, 12, LOW);
 800198c:	2200      	movs	r2, #0
 800198e:	210c      	movs	r1, #12
 8001990:	2002      	movs	r0, #2
 8001992:	f000 fa3d 	bl	8001e10 <Write_GPIO>
	SPI2_TX(&address, 1);  // send address
 8001996:	2101      	movs	r1, #1
 8001998:	f10d 0007 	add.w	r0, sp, #7
 800199c:	f000 fabc 	bl	8001f18 <SPI2_TX>
	SPI2_TX(&value, 1);  // send value
 80019a0:	2101      	movs	r1, #1
 80019a2:	f10d 0006 	add.w	r0, sp, #6
 80019a6:	f000 fab7 	bl	8001f18 <SPI2_TX>
	Write_GPIO(PB, 12, HIGH);
 80019aa:	2201      	movs	r2, #1
 80019ac:	210c      	movs	r1, #12
 80019ae:	2002      	movs	r0, #2
 80019b0:	f000 fa2e 	bl	8001e10 <Write_GPIO>
	HAL_Delay(20);
 80019b4:	2014      	movs	r0, #20
 80019b6:	f001 f87d 	bl	8002ab4 <HAL_Delay>
}
 80019ba:	b003      	add	sp, #12
 80019bc:	f85d fb04 	ldr.w	pc, [sp], #4

080019c0 <ICM20602_Remove_DC_Offset>:
{
 80019c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80019c4:	b084      	sub	sp, #16
 80019c6:	460d      	mov	r5, r1
	int16_t offset[3] = {0,0,0};
 80019c8:	2400      	movs	r4, #0
 80019ca:	f8ad 4008 	strh.w	r4, [sp, #8]
 80019ce:	f8ad 400a 	strh.w	r4, [sp, #10]
 80019d2:	f8ad 400c 	strh.w	r4, [sp, #12]
	for(i = 0; i < mean; i++)
 80019d6:	e027      	b.n	8001a28 <ICM20602_Remove_DC_Offset+0x68>
		ICM20602_Read(ICM20602_REG_GYRO_XOUT_H, rxData, 6);
 80019d8:	2206      	movs	r2, #6
 80019da:	4669      	mov	r1, sp
 80019dc:	2043      	movs	r0, #67	@ 0x43
 80019de:	f7ff ffaf 	bl	8001940 <ICM20602_Read>
		offset[0] += (rxData[0] << 8) | rxData[1];
 80019e2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80019e6:	f89d 1000 	ldrb.w	r1, [sp]
 80019ea:	f89d 2001 	ldrb.w	r2, [sp, #1]
 80019ee:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80019f2:	4413      	add	r3, r2
 80019f4:	f8ad 3008 	strh.w	r3, [sp, #8]
		offset[1] += (rxData[2] << 8) | rxData[3];
 80019f8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80019fc:	f89d 1002 	ldrb.w	r1, [sp, #2]
 8001a00:	f89d 2003 	ldrb.w	r2, [sp, #3]
 8001a04:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8001a08:	4413      	add	r3, r2
 8001a0a:	f8ad 300a 	strh.w	r3, [sp, #10]
		offset[2] += (rxData[4] << 8) | rxData[5];
 8001a0e:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8001a12:	f89d 1004 	ldrb.w	r1, [sp, #4]
 8001a16:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8001a1a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8001a1e:	4413      	add	r3, r2
 8001a20:	f8ad 300c 	strh.w	r3, [sp, #12]
	for(i = 0; i < mean; i++)
 8001a24:	3401      	adds	r4, #1
 8001a26:	b264      	sxtb	r4, r4
 8001a28:	42ac      	cmp	r4, r5
 8001a2a:	dbd5      	blt.n	80019d8 <ICM20602_Remove_DC_Offset+0x18>
	offset[0] /= mean;
 8001a2c:	f9bd 7008 	ldrsh.w	r7, [sp, #8]
 8001a30:	fb97 f7f5 	sdiv	r7, r7, r5
 8001a34:	b239      	sxth	r1, r7
 8001a36:	f8ad 1008 	strh.w	r1, [sp, #8]
	offset[1] /= mean;
 8001a3a:	f9bd 600a 	ldrsh.w	r6, [sp, #10]
 8001a3e:	fb96 f6f5 	sdiv	r6, r6, r5
 8001a42:	fa0f f886 	sxth.w	r8, r6
 8001a46:	f8ad 800a 	strh.w	r8, [sp, #10]
	offset[2] /= mean;
 8001a4a:	f9bd 400c 	ldrsh.w	r4, [sp, #12]
 8001a4e:	fb94 f4f5 	sdiv	r4, r4, r5
 8001a52:	b225      	sxth	r5, r4
 8001a54:	f8ad 500c 	strh.w	r5, [sp, #12]
	ICM20602_Write(ICM20602_REG_XG_OFFS_USRH, (offset[0]*-2)>>8);
 8001a58:	ebc1 71c1 	rsb	r1, r1, r1, lsl #31
 8001a5c:	f3c1 11c7 	ubfx	r1, r1, #7, #8
 8001a60:	2013      	movs	r0, #19
 8001a62:	f7ff ff8d 	bl	8001980 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_XG_OFFS_USRL, offset[0]*-2);
 8001a66:	ebc7 17c7 	rsb	r7, r7, r7, lsl #7
 8001a6a:	0079      	lsls	r1, r7, #1
 8001a6c:	f001 01fe 	and.w	r1, r1, #254	@ 0xfe
 8001a70:	2014      	movs	r0, #20
 8001a72:	f7ff ff85 	bl	8001980 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_YG_OFFS_USRH, (offset[1]*-2)>>8);
 8001a76:	ebc8 78c8 	rsb	r8, r8, r8, lsl #31
 8001a7a:	f3c8 11c7 	ubfx	r1, r8, #7, #8
 8001a7e:	2015      	movs	r0, #21
 8001a80:	f7ff ff7e 	bl	8001980 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_YG_OFFS_USRL, offset[1]*-2);
 8001a84:	ebc6 16c6 	rsb	r6, r6, r6, lsl #7
 8001a88:	0071      	lsls	r1, r6, #1
 8001a8a:	f001 01fe 	and.w	r1, r1, #254	@ 0xfe
 8001a8e:	2016      	movs	r0, #22
 8001a90:	f7ff ff76 	bl	8001980 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_ZG_OFFS_USRH, (offset[2]*-2)>>8);
 8001a94:	ebc5 75c5 	rsb	r5, r5, r5, lsl #31
 8001a98:	f3c5 11c7 	ubfx	r1, r5, #7, #8
 8001a9c:	2017      	movs	r0, #23
 8001a9e:	f7ff ff6f 	bl	8001980 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_ZG_OFFS_USRL, offset[2]*-2);
 8001aa2:	ebc4 14c4 	rsb	r4, r4, r4, lsl #7
 8001aa6:	0061      	lsls	r1, r4, #1
 8001aa8:	f001 01fe 	and.w	r1, r1, #254	@ 0xfe
 8001aac:	2018      	movs	r0, #24
 8001aae:	f7ff ff67 	bl	8001980 <ICM20602_Write>
}
 8001ab2:	b004      	add	sp, #16
 8001ab4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08001ab8 <ICM20602_Init>:
{
 8001ab8:	b530      	push	{r4, r5, lr}
 8001aba:	b083      	sub	sp, #12
 8001abc:	4604      	mov	r4, r0
	dev->gyroXRaw = 	0.0f;
 8001abe:	2500      	movs	r5, #0
 8001ac0:	8005      	strh	r5, [r0, #0]
	dev->gyroYRaw = 	0.0f;
 8001ac2:	8045      	strh	r5, [r0, #2]
	dev->gyroZRaw = 	0.0f;
 8001ac4:	8085      	strh	r5, [r0, #4]
	dev->accXRaw = 		0.0f;
 8001ac6:	80c5      	strh	r5, [r0, #6]
	dev->accYRaw = 		0.0f;
 8001ac8:	8105      	strh	r5, [r0, #8]
	dev->accZRaw = 		0.0f;
 8001aca:	8145      	strh	r5, [r0, #10]
	dev->temperatureC = 0.0f;
 8001acc:	2300      	movs	r3, #0
 8001ace:	6243      	str	r3, [r0, #36]	@ 0x24
	Init_GPIO(PA,  10, IN, I_PP); // Init GPIO for the interrupt
 8001ad0:	2302      	movs	r3, #2
 8001ad2:	462a      	mov	r2, r5
 8001ad4:	210a      	movs	r1, #10
 8001ad6:	2001      	movs	r0, #1
 8001ad8:	f000 f950 	bl	8001d7c <Init_GPIO>
	ICM20602_Write(ICM20602_REG_PWR_MGMT_1, 0x80);
 8001adc:	2180      	movs	r1, #128	@ 0x80
 8001ade:	206b      	movs	r0, #107	@ 0x6b
 8001ae0:	f7ff ff4e 	bl	8001980 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_I2C_IF, 0x40);
 8001ae4:	2140      	movs	r1, #64	@ 0x40
 8001ae6:	2070      	movs	r0, #112	@ 0x70
 8001ae8:	f7ff ff4a 	bl	8001980 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_PWR_MGMT_1, 0x01);
 8001aec:	2101      	movs	r1, #1
 8001aee:	206b      	movs	r0, #107	@ 0x6b
 8001af0:	f7ff ff46 	bl	8001980 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_SMPLRT_DIV, 0x00);
 8001af4:	4629      	mov	r1, r5
 8001af6:	2019      	movs	r0, #25
 8001af8:	f7ff ff42 	bl	8001980 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_CONFIG, 0x05);
 8001afc:	2105      	movs	r1, #5
 8001afe:	201a      	movs	r0, #26
 8001b00:	f7ff ff3e 	bl	8001980 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_GYRO_CONFIG, 0x018);
 8001b04:	2118      	movs	r1, #24
 8001b06:	201b      	movs	r0, #27
 8001b08:	f7ff ff3a 	bl	8001980 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_ACCEL_CONFIG, 0x18);
 8001b0c:	2118      	movs	r1, #24
 8001b0e:	201c      	movs	r0, #28
 8001b10:	f7ff ff36 	bl	8001980 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_ACCEL_CONFIG2, 0x03); // Acc FCHOICE 1kHz(bit3-0), DLPF fc 44.8Hz(bit2:0-011)
 8001b14:	2103      	movs	r1, #3
 8001b16:	201d      	movs	r0, #29
 8001b18:	f7ff ff32 	bl	8001980 <ICM20602_Write>
	ICM20602_Write(ICM20602_REG_INT_ENABLE, 0x01);
 8001b1c:	2101      	movs	r1, #1
 8001b1e:	2038      	movs	r0, #56	@ 0x38
 8001b20:	f7ff ff2e 	bl	8001980 <ICM20602_Write>
	ICM20602_Read(ICM20602_REG_WHO_AM_I, rxData, 1);
 8001b24:	2201      	movs	r2, #1
 8001b26:	a901      	add	r1, sp, #4
 8001b28:	2075      	movs	r0, #117	@ 0x75
 8001b2a:	f7ff ff09 	bl	8001940 <ICM20602_Read>
	ICM20602_Read(ICM20602_REG_I2C_IF, rxData, 1);
 8001b2e:	2201      	movs	r2, #1
 8001b30:	a901      	add	r1, sp, #4
 8001b32:	2070      	movs	r0, #112	@ 0x70
 8001b34:	f7ff ff04 	bl	8001940 <ICM20602_Read>
	ICM20602_Read(ICM20602_REG_PWR_MGMT_1, rxData, 1);
 8001b38:	2201      	movs	r2, #1
 8001b3a:	a901      	add	r1, sp, #4
 8001b3c:	206b      	movs	r0, #107	@ 0x6b
 8001b3e:	f7ff feff 	bl	8001940 <ICM20602_Read>
	ICM20602_Read(ICM20602_REG_SMPLRT_DIV, rxData, 1);
 8001b42:	2201      	movs	r2, #1
 8001b44:	a901      	add	r1, sp, #4
 8001b46:	2019      	movs	r0, #25
 8001b48:	f7ff fefa 	bl	8001940 <ICM20602_Read>
	ICM20602_Read(ICM20602_REG_CONFIG, rxData, 1);
 8001b4c:	2201      	movs	r2, #1
 8001b4e:	a901      	add	r1, sp, #4
 8001b50:	201a      	movs	r0, #26
 8001b52:	f7ff fef5 	bl	8001940 <ICM20602_Read>
	ICM20602_Read(ICM20602_REG_ACCEL_CONFIG, rxData, 1);
 8001b56:	2201      	movs	r2, #1
 8001b58:	a901      	add	r1, sp, #4
 8001b5a:	201c      	movs	r0, #28
 8001b5c:	f7ff fef0 	bl	8001940 <ICM20602_Read>
	ICM20602_Read(ICM20602_REG_ACCEL_CONFIG2, rxData, 1);
 8001b60:	2201      	movs	r2, #1
 8001b62:	a901      	add	r1, sp, #4
 8001b64:	201d      	movs	r0, #29
 8001b66:	f7ff feeb 	bl	8001940 <ICM20602_Read>
	ICM20602_Remove_DC_Offset(dev,2);
 8001b6a:	2102      	movs	r1, #2
 8001b6c:	4620      	mov	r0, r4
 8001b6e:	f7ff ff27 	bl	80019c0 <ICM20602_Remove_DC_Offset>
}
 8001b72:	4628      	mov	r0, r5
 8001b74:	b003      	add	sp, #12
 8001b76:	bd30      	pop	{r4, r5, pc}

08001b78 <L76LM33_SendCommand>:
	return 1; // OK
}

uint8_t L76LM33_SendCommand(unsigned short usart_port, char *command) {

    if (command == NULL) {
 8001b78:	b161      	cbz	r1, 8001b94 <L76LM33_SendCommand+0x1c>
uint8_t L76LM33_SendCommand(unsigned short usart_port, char *command) {
 8001b7a:	b538      	push	{r3, r4, r5, lr}
 8001b7c:	4604      	mov	r4, r0
 8001b7e:	460d      	mov	r5, r1
        return 0; // Error
    }
    USART_TX(usart_port, (uint8_t*)command, strlen(command));
 8001b80:	4608      	mov	r0, r1
 8001b82:	f7fe fae5 	bl	8000150 <strlen>
 8001b86:	4602      	mov	r2, r0
 8001b88:	4629      	mov	r1, r5
 8001b8a:	4620      	mov	r0, r4
 8001b8c:	f000 fa72 	bl	8002074 <USART_TX>
    return 1; // OK
 8001b90:	2001      	movs	r0, #1
}
 8001b92:	bd38      	pop	{r3, r4, r5, pc}
        return 0; // Error
 8001b94:	2000      	movs	r0, #0
}
 8001b96:	4770      	bx	lr

08001b98 <L76LM33_Init>:
uint8_t L76LM33_Init (unsigned short usart_port) {
 8001b98:	b570      	push	{r4, r5, r6, lr}
 8001b9a:	b09a      	sub	sp, #104	@ 0x68
 8001b9c:	4606      	mov	r6, r0
	char PROTOCOL_SETRMS[] = "$PMTK314,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0*35\r\n";
 8001b9e:	f10d 0c2c 	add.w	ip, sp, #44	@ 0x2c
 8001ba2:	4c17      	ldr	r4, [pc, #92]	@ (8001c00 <L76LM33_Init+0x68>)
 8001ba4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001ba6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8001baa:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001bac:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8001bb0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001bb2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8001bb6:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8001bba:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8001bbe:	f8ac 2000 	strh.w	r2, [ip]
	char PROTOCOL_GPSSEARCHONLY[] = "$PMTK353,1,0,0,0,0*2A\r\n";
 8001bc2:	ac05      	add	r4, sp, #20
 8001bc4:	4d0f      	ldr	r5, [pc, #60]	@ (8001c04 <L76LM33_Init+0x6c>)
 8001bc6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001bc8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001bca:	e895 0003 	ldmia.w	r5, {r0, r1}
 8001bce:	e884 0003 	stmia.w	r4, {r0, r1}
	char PROTOCOL_NAVMODE[] = "PMTK886,2*2A\r\n";
 8001bd2:	4b0d      	ldr	r3, [pc, #52]	@ (8001c08 <L76LM33_Init+0x70>)
 8001bd4:	ac01      	add	r4, sp, #4
 8001bd6:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001bd8:	c407      	stmia	r4!, {r0, r1, r2}
 8001bda:	f824 3b02 	strh.w	r3, [r4], #2
 8001bde:	0c1b      	lsrs	r3, r3, #16
 8001be0:	7023      	strb	r3, [r4, #0]
	L76LM33_SendCommand(usart_port, PROTOCOL_SETRMS);
 8001be2:	a90b      	add	r1, sp, #44	@ 0x2c
 8001be4:	4630      	mov	r0, r6
 8001be6:	f7ff ffc7 	bl	8001b78 <L76LM33_SendCommand>
	L76LM33_SendCommand(usart_port, PROTOCOL_GPSSEARCHONLY);
 8001bea:	a905      	add	r1, sp, #20
 8001bec:	4630      	mov	r0, r6
 8001bee:	f7ff ffc3 	bl	8001b78 <L76LM33_SendCommand>
	L76LM33_SendCommand(usart_port, PROTOCOL_NAVMODE);
 8001bf2:	a901      	add	r1, sp, #4
 8001bf4:	4630      	mov	r0, r6
 8001bf6:	f7ff ffbf 	bl	8001b78 <L76LM33_SendCommand>
}
 8001bfa:	2001      	movs	r0, #1
 8001bfc:	b01a      	add	sp, #104	@ 0x68
 8001bfe:	bd70      	pop	{r4, r5, r6, pc}
 8001c00:	080086f0 	.word	0x080086f0
 8001c04:	0800872c 	.word	0x0800872c
 8001c08:	08008744 	.word	0x08008744

08001c0c <Pyro_Init>:
 *      Author: gagno
 */

#include "GAUL_Drivers/Pyros.h"

void Pyro_Init(void) {
 8001c0c:	b508      	push	{r3, lr}
	// Pyros
	Init_GPIO(PB, 4, OUT2, O_GP_PP); // PyroON0
 8001c0e:	2300      	movs	r3, #0
 8001c10:	2202      	movs	r2, #2
 8001c12:	2104      	movs	r1, #4
 8001c14:	4610      	mov	r0, r2
 8001c16:	f000 f8b1 	bl	8001d7c <Init_GPIO>
	Init_GPIO(PB, 5, OUT2, O_GP_PP); // PyroON1
 8001c1a:	2300      	movs	r3, #0
 8001c1c:	2202      	movs	r2, #2
 8001c1e:	2105      	movs	r1, #5
 8001c20:	4610      	mov	r0, r2
 8001c22:	f000 f8ab 	bl	8001d7c <Init_GPIO>
	Init_GPIO(PA, 15, OUT2, O_GP_PP); // Pyro_Test~
 8001c26:	2300      	movs	r3, #0
 8001c28:	2202      	movs	r2, #2
 8001c2a:	210f      	movs	r1, #15
 8001c2c:	2001      	movs	r0, #1
 8001c2e:	f000 f8a5 	bl	8001d7c <Init_GPIO>
	// Set Pyro_Test~ (inverse) et Pyros_ON LOW
	Write_GPIO(PA, 15, HIGH);
 8001c32:	2201      	movs	r2, #1
 8001c34:	210f      	movs	r1, #15
 8001c36:	4610      	mov	r0, r2
 8001c38:	f000 f8ea 	bl	8001e10 <Write_GPIO>
	Write_GPIO(PB, 4, LOW);
 8001c3c:	2200      	movs	r2, #0
 8001c3e:	2104      	movs	r1, #4
 8001c40:	2002      	movs	r0, #2
 8001c42:	f000 f8e5 	bl	8001e10 <Write_GPIO>
	Write_GPIO(PB, 5, LOW);
 8001c46:	2200      	movs	r2, #0
 8001c48:	2105      	movs	r1, #5
 8001c4a:	2002      	movs	r0, #2
 8001c4c:	f000 f8e0 	bl	8001e10 <Write_GPIO>
}
 8001c50:	bd08      	pop	{r3, pc}
	...

08001c54 <ws2812_timer2_init>:
static uint16_t ws2812_gpio_set_bits = 0;
static uint16_t dma_buffer[DMA_BUFFER_SIZE];


static void ws2812_timer2_init(void)
{
 8001c54:	b570      	push	{r4, r5, r6, lr}
 8001c56:	b08e      	sub	sp, #56	@ 0x38
    TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001c58:	2400      	movs	r4, #0
 8001c5a:	940a      	str	r4, [sp, #40]	@ 0x28
 8001c5c:	940b      	str	r4, [sp, #44]	@ 0x2c
 8001c5e:	940c      	str	r4, [sp, #48]	@ 0x30
 8001c60:	940d      	str	r4, [sp, #52]	@ 0x34
    TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001c62:	9408      	str	r4, [sp, #32]
 8001c64:	9409      	str	r4, [sp, #36]	@ 0x24
    TIM_OC_InitTypeDef sConfigOC = {0};
 8001c66:	9401      	str	r4, [sp, #4]
 8001c68:	9402      	str	r4, [sp, #8]
 8001c6a:	9403      	str	r4, [sp, #12]
 8001c6c:	9404      	str	r4, [sp, #16]
 8001c6e:	9405      	str	r4, [sp, #20]
 8001c70:	9406      	str	r4, [sp, #24]
 8001c72:	9407      	str	r4, [sp, #28]

    htimer2.Instance = TIM2;
 8001c74:	4d1a      	ldr	r5, [pc, #104]	@ (8001ce0 <ws2812_timer2_init+0x8c>)
 8001c76:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001c7a:	602b      	str	r3, [r5, #0]
    htimer2.Init.Prescaler = 0;
 8001c7c:	606c      	str	r4, [r5, #4]
    htimer2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001c7e:	60ac      	str	r4, [r5, #8]
    htimer2.Init.Period = WS2812_TIMER_PERIOD;
 8001c80:	235a      	movs	r3, #90	@ 0x5a
 8001c82:	60eb      	str	r3, [r5, #12]

    htimer2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001c84:	612c      	str	r4, [r5, #16]
    htimer2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001c86:	61ac      	str	r4, [r5, #24]
    HAL_TIM_Base_Init(&htimer2);
 8001c88:	4628      	mov	r0, r5
 8001c8a:	f002 fd1b 	bl	80046c4 <HAL_TIM_Base_Init>

    sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001c8e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001c92:	930a      	str	r3, [sp, #40]	@ 0x28
    HAL_TIM_ConfigClockSource(&htimer2, &sClockSourceConfig);
 8001c94:	a90a      	add	r1, sp, #40	@ 0x28
 8001c96:	4628      	mov	r0, r5
 8001c98:	f002 fe7e 	bl	8004998 <HAL_TIM_ConfigClockSource>
    HAL_TIM_PWM_Init(&htimer2);
 8001c9c:	4628      	mov	r0, r5
 8001c9e:	f002 fd60 	bl	8004762 <HAL_TIM_PWM_Init>
    sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001ca2:	9408      	str	r4, [sp, #32]
    sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001ca4:	9409      	str	r4, [sp, #36]	@ 0x24
    HAL_TIMEx_MasterConfigSynchronization(&htimer2, &sMasterConfig);
 8001ca6:	a908      	add	r1, sp, #32
 8001ca8:	4628      	mov	r0, r5
 8001caa:	f003 f9bd 	bl	8005028 <HAL_TIMEx_MasterConfigSynchronization>

    sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001cae:	2660      	movs	r6, #96	@ 0x60
 8001cb0:	9601      	str	r6, [sp, #4]

    sConfigOC.Pulse = WS2812_TIMER_PWM_CH1_TIME;
 8001cb2:	231c      	movs	r3, #28
 8001cb4:	9302      	str	r3, [sp, #8]
    sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001cb6:	9403      	str	r4, [sp, #12]
    sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001cb8:	9405      	str	r4, [sp, #20]
    HAL_TIM_PWM_ConfigChannel(&htimer2, &sConfigOC, TIM_CHANNEL_1);
 8001cba:	4622      	mov	r2, r4
 8001cbc:	a901      	add	r1, sp, #4
 8001cbe:	4628      	mov	r0, r5
 8001cc0:	f002 fda8 	bl	8004814 <HAL_TIM_PWM_ConfigChannel>
    sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001cc4:	9601      	str	r6, [sp, #4]

    sConfigOC.Pulse = WS2812_TIMER_PWM_CH2_TIME;
 8001cc6:	2339      	movs	r3, #57	@ 0x39
 8001cc8:	9302      	str	r3, [sp, #8]
    sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001cca:	9403      	str	r4, [sp, #12]
    sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001ccc:	9405      	str	r4, [sp, #20]
    HAL_TIM_PWM_ConfigChannel(&htimer2, &sConfigOC, TIM_CHANNEL_2);
 8001cce:	2204      	movs	r2, #4
 8001cd0:	eb0d 0102 	add.w	r1, sp, r2
 8001cd4:	4628      	mov	r0, r5
 8001cd6:	f002 fd9d 	bl	8004814 <HAL_TIM_PWM_ConfigChannel>
}
 8001cda:	b00e      	add	sp, #56	@ 0x38
 8001cdc:	bd70      	pop	{r4, r5, r6, pc}
 8001cde:	bf00      	nop
 8001ce0:	20000204 	.word	0x20000204

08001ce4 <WS2812_Init>:
	__HAL_DMA_DISABLE(&hdma_tim2_pwm_ch1);
	__HAL_DMA_DISABLE(&hdma_tim2_pwm_ch2);
}

void WS2812_Init()
{
 8001ce4:	b500      	push	{lr}
 8001ce6:	b083      	sub	sp, #12
    /* DMA controller clock enable */
    __HAL_RCC_DMA1_CLK_ENABLE();
 8001ce8:	4b0e      	ldr	r3, [pc, #56]	@ (8001d24 <WS2812_Init+0x40>)
 8001cea:	695a      	ldr	r2, [r3, #20]
 8001cec:	f042 0201 	orr.w	r2, r2, #1
 8001cf0:	615a      	str	r2, [r3, #20]
 8001cf2:	695b      	ldr	r3, [r3, #20]
 8001cf4:	f003 0301 	and.w	r3, r3, #1
 8001cf8:	9301      	str	r3, [sp, #4]
 8001cfa:	9b01      	ldr	r3, [sp, #4]

    /* DMA interrupt init, not that we're using it... */
    HAL_NVIC_SetPriority(DMA1_Channel2_IRQn, 0, 0);
 8001cfc:	2200      	movs	r2, #0
 8001cfe:	4611      	mov	r1, r2
 8001d00:	200c      	movs	r0, #12
 8001d02:	f001 fcd8 	bl	80036b6 <HAL_NVIC_SetPriority>
    HAL_NVIC_SetPriority(DMA1_Channel5_IRQn, 0, 0);
 8001d06:	2200      	movs	r2, #0
 8001d08:	4611      	mov	r1, r2
 8001d0a:	200f      	movs	r0, #15
 8001d0c:	f001 fcd3 	bl	80036b6 <HAL_NVIC_SetPriority>
    HAL_NVIC_SetPriority(DMA1_Channel7_IRQn, 0, 0);
 8001d10:	2200      	movs	r2, #0
 8001d12:	4611      	mov	r1, r2
 8001d14:	2011      	movs	r0, #17
 8001d16:	f001 fcce 	bl	80036b6 <HAL_NVIC_SetPriority>

    ws2812_timer2_init();
 8001d1a:	f7ff ff9b 	bl	8001c54 <ws2812_timer2_init>
}
 8001d1e:	b003      	add	sp, #12
 8001d20:	f85d fb04 	ldr.w	pc, [sp], #4
 8001d24:	40021000 	.word	0x40021000

08001d28 <ADC_Start>:


#include "GAUL_Drivers/Low_Level_Drivers/ADC_driver.h"


uint8_t ADC_Start(ADC_HandleTypeDef *hadc) {
 8001d28:	b508      	push	{r3, lr}

	HAL_ADC_Start(hadc);
 8001d2a:	f000 ffbf 	bl	8002cac <HAL_ADC_Start>
	return 1; // OK
}
 8001d2e:	2001      	movs	r0, #1
 8001d30:	bd08      	pop	{r3, pc}

08001d32 <ADC_Calibration>:

uint8_t ADC_Calibration(ADC_HandleTypeDef *hadc) {
 8001d32:	b508      	push	{r3, lr}

	HAL_ADCEx_Calibration_Start(hadc);
 8001d34:	f001 fb3a 	bl	80033ac <HAL_ADCEx_Calibration_Start>
	return 1; // OK
}
 8001d38:	2001      	movs	r0, #1
 8001d3a:	bd08      	pop	{r3, pc}

08001d3c <ADC_Stop>:

uint8_t ADC_Stop(ADC_HandleTypeDef *hadc) {
 8001d3c:	b508      	push	{r3, lr}

	HAL_ADC_Stop(hadc);
 8001d3e:	f001 f863 	bl	8002e08 <HAL_ADC_Stop>
	return 1; // OK
}
 8001d42:	2001      	movs	r0, #1
 8001d44:	bd08      	pop	{r3, pc}
	...

08001d48 <ADC_Sampling>:

uint32_t ADC_Sampling (ADC_HandleTypeDef *hadc) {
 8001d48:	b538      	push	{r3, r4, r5, lr}

	if (!(ADC1->CR2 & ADC_CR2_ADON)) {
 8001d4a:	4b0b      	ldr	r3, [pc, #44]	@ (8001d78 <ADC_Sampling+0x30>)
 8001d4c:	689b      	ldr	r3, [r3, #8]
 8001d4e:	f013 0f01 	tst.w	r3, #1
 8001d52:	d00d      	beq.n	8001d70 <ADC_Sampling+0x28>
 8001d54:	4604      	mov	r4, r0
		return 0xFFFF;
	}
	HAL_ADC_PollForConversion(hadc, HAL_MAX_DELAY); // Timeout peut etre ajuste
 8001d56:	f04f 31ff 	mov.w	r1, #4294967295
 8001d5a:	f001 f881 	bl	8002e60 <HAL_ADC_PollForConversion>
	uint32_t adc_value = HAL_ADC_GetValue(hadc);
 8001d5e:	4620      	mov	r0, r4
 8001d60:	f001 f984 	bl	800306c <HAL_ADC_GetValue>
 8001d64:	4605      	mov	r5, r0
	HAL_ADC_Stop(hadc);
 8001d66:	4620      	mov	r0, r4
 8001d68:	f001 f84e 	bl	8002e08 <HAL_ADC_Stop>

	return adc_value;
}
 8001d6c:	4628      	mov	r0, r5
 8001d6e:	bd38      	pop	{r3, r4, r5, pc}
		return 0xFFFF;
 8001d70:	f64f 75ff 	movw	r5, #65535	@ 0xffff
 8001d74:	e7fa      	b.n	8001d6c <ADC_Sampling+0x24>
 8001d76:	bf00      	nop
 8001d78:	40012400 	.word	0x40012400

08001d7c <Init_GPIO>:
#include "GAUL_Drivers/Low_Level_Drivers/GPIO_driver.h"

void Init_GPIO(unsigned short port, unsigned short pin, unsigned short dir, unsigned short opt)
{
 8001d7c:	b510      	push	{r4, lr}
 volatile unsigned long * CR;
 unsigned short tPIN = pin;
 unsigned short offset = 0x00;

	if(pin > 7)
 8001d7e:	2907      	cmp	r1, #7
 8001d80:	d904      	bls.n	8001d8c <Init_GPIO+0x10>
		{
			tPIN -= 8;
 8001d82:	3908      	subs	r1, #8
 8001d84:	b289      	uxth	r1, r1
			offset = 0x01;
 8001d86:	f04f 0e01 	mov.w	lr, #1
 8001d8a:	e001      	b.n	8001d90 <Init_GPIO+0x14>
 unsigned short offset = 0x00;
 8001d8c:	f04f 0e00 	mov.w	lr, #0
		}

	if(port == 1)
 8001d90:	2801      	cmp	r0, #1
 8001d92:	d00f      	beq.n	8001db4 <Init_GPIO+0x38>
		{
			RCC_APB2ENR |= 4; //// Enabling PORT A
			CR = (volatile unsigned long *) (&GPIO_A + offset);
		}
	else if(port == 2)
 8001d94:	2802      	cmp	r0, #2
 8001d96:	d02d      	beq.n	8001df4 <Init_GPIO+0x78>
		{
			RCC_APB2ENR |= 8; //// Enabling PORT A
			CR = (volatile unsigned long *) (&GPIO_B + offset);
		}
	else if(port == 3)
 8001d98:	2803      	cmp	r0, #3
 8001d9a:	d116      	bne.n	8001dca <Init_GPIO+0x4e>
		{
			RCC_APB2ENR |= 0x10; //// Enabling PORT A
 8001d9c:	4c1b      	ldr	r4, [pc, #108]	@ (8001e0c <Init_GPIO+0x90>)
 8001d9e:	69a0      	ldr	r0, [r4, #24]
 8001da0:	f040 0010 	orr.w	r0, r0, #16
 8001da4:	61a0      	str	r0, [r4, #24]
			CR = (volatile unsigned long *) (&GPIO_C + offset);
 8001da6:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8001daa:	f10e 4c80 	add.w	ip, lr, #1073741824	@ 0x40000000
 8001dae:	f50c 3c88 	add.w	ip, ip, #69632	@ 0x11000
 8001db2:	e00a      	b.n	8001dca <Init_GPIO+0x4e>
			RCC_APB2ENR |= 4; //// Enabling PORT A
 8001db4:	4c15      	ldr	r4, [pc, #84]	@ (8001e0c <Init_GPIO+0x90>)
 8001db6:	69a0      	ldr	r0, [r4, #24]
 8001db8:	f040 0004 	orr.w	r0, r0, #4
 8001dbc:	61a0      	str	r0, [r4, #24]
			CR = (volatile unsigned long *) (&GPIO_A + offset);
 8001dbe:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8001dc2:	f10e 4c80 	add.w	ip, lr, #1073741824	@ 0x40000000
 8001dc6:	f50c 3c84 	add.w	ip, ip, #67584	@ 0x10800
		}

		*CR &= ~(0xf<<(tPIN)*4); ///Reset the taget pin
 8001dca:	f8dc 0000 	ldr.w	r0, [ip]
 8001dce:	0089      	lsls	r1, r1, #2
 8001dd0:	f04f 0e0f 	mov.w	lr, #15
 8001dd4:	fa0e fe01 	lsl.w	lr, lr, r1
 8001dd8:	ea20 000e 	bic.w	r0, r0, lr
 8001ddc:	f8cc 0000 	str.w	r0, [ip]
		*CR |= ((dir <<(tPIN*4)) | (opt<<(tPIN*4+2))); //// Set up the direction and the option of the PIN
 8001de0:	f8dc 0000 	ldr.w	r0, [ip]
 8001de4:	408a      	lsls	r2, r1
 8001de6:	3102      	adds	r1, #2
 8001de8:	408b      	lsls	r3, r1
 8001dea:	431a      	orrs	r2, r3
 8001dec:	4302      	orrs	r2, r0
 8001dee:	f8cc 2000 	str.w	r2, [ip]
}
 8001df2:	bd10      	pop	{r4, pc}
			RCC_APB2ENR |= 8; //// Enabling PORT A
 8001df4:	4c05      	ldr	r4, [pc, #20]	@ (8001e0c <Init_GPIO+0x90>)
 8001df6:	69a0      	ldr	r0, [r4, #24]
 8001df8:	f040 0008 	orr.w	r0, r0, #8
 8001dfc:	61a0      	str	r0, [r4, #24]
			CR = (volatile unsigned long *) (&GPIO_B + offset);
 8001dfe:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8001e02:	f10e 4c80 	add.w	ip, lr, #1073741824	@ 0x40000000
 8001e06:	f50c 3c86 	add.w	ip, ip, #68608	@ 0x10c00
 8001e0a:	e7de      	b.n	8001dca <Init_GPIO+0x4e>
 8001e0c:	40021000 	.word	0x40021000

08001e10 <Write_GPIO>:
{
		volatile unsigned long * ODR;
		unsigned long offset = 0x03;


	if(port == 1)
 8001e10:	2801      	cmp	r0, #1
 8001e12:	d005      	beq.n	8001e20 <Write_GPIO+0x10>
		{
			ODR = (volatile unsigned long *) (&GPIO_A + offset);
		}
	else if(port == 2)
 8001e14:	2802      	cmp	r0, #2
 8001e16:	d00a      	beq.n	8001e2e <Write_GPIO+0x1e>
		{
			ODR = (volatile unsigned long *) (&GPIO_B + offset);
		}
	else if(port == 3)
 8001e18:	2803      	cmp	r0, #3
 8001e1a:	d102      	bne.n	8001e22 <Write_GPIO+0x12>
	{
		ODR = (volatile unsigned long *) (&GPIO_C + offset);
 8001e1c:	4b09      	ldr	r3, [pc, #36]	@ (8001e44 <Write_GPIO+0x34>)
 8001e1e:	e000      	b.n	8001e22 <Write_GPIO+0x12>
			ODR = (volatile unsigned long *) (&GPIO_A + offset);
 8001e20:	4b09      	ldr	r3, [pc, #36]	@ (8001e48 <Write_GPIO+0x38>)
	}
	state ? (*ODR |= (state<<pin)) : (*ODR &= ~(1<<pin));
 8001e22:	b132      	cbz	r2, 8001e32 <Write_GPIO+0x22>
 8001e24:	6818      	ldr	r0, [r3, #0]
 8001e26:	408a      	lsls	r2, r1
 8001e28:	4302      	orrs	r2, r0
 8001e2a:	601a      	str	r2, [r3, #0]
 8001e2c:	4770      	bx	lr
			ODR = (volatile unsigned long *) (&GPIO_B + offset);
 8001e2e:	4b07      	ldr	r3, [pc, #28]	@ (8001e4c <Write_GPIO+0x3c>)
 8001e30:	e7f7      	b.n	8001e22 <Write_GPIO+0x12>
	state ? (*ODR |= (state<<pin)) : (*ODR &= ~(1<<pin));
 8001e32:	681a      	ldr	r2, [r3, #0]
 8001e34:	2001      	movs	r0, #1
 8001e36:	fa00 f101 	lsl.w	r1, r0, r1
 8001e3a:	ea22 0201 	bic.w	r2, r2, r1
 8001e3e:	601a      	str	r2, [r3, #0]
}
 8001e40:	4770      	bx	lr
 8001e42:	bf00      	nop
 8001e44:	4001100c 	.word	0x4001100c
 8001e48:	4001080c 	.word	0x4001080c
 8001e4c:	40010c0c 	.word	0x40010c0c

08001e50 <SPI_Init>:

#include "main.h"
#include "GAUL_Drivers/Low_Level_Drivers/GPIO_driver.h"
#include "GAUL_Drivers/Low_Level_Drivers/SPI_driver.h"

void SPI_Init(unsigned short spi) {
 8001e50:	b508      	push	{r3, lr}
    if(spi == 1) {
 8001e52:	2801      	cmp	r0, #1
 8001e54:	d002      	beq.n	8001e5c <SPI_Init+0xc>
        Init_GPIO(PA, 7, OUT50, O_AF_PP); // MOSI SPI1

        Write_GPIO(PA, 4, HIGH);

        SPI1->CR1 = SPI_CR1_MSTR | SPI_CR1_BR_1 | SPI_CR1_BR_2 | SPI_CR1_SSM | SPI_CR1_SSI | SPI_CR1_SPE;
    } else if(spi == 2) {
 8001e56:	2802      	cmp	r0, #2
 8001e58:	d026      	beq.n	8001ea8 <SPI_Init+0x58>
        Write_GPIO(PA, 8, HIGH);
        Write_GPIO(PB, 12, HIGH);

        SPI2->CR1 = SPI_CR1_MSTR | SPI_CR1_BR_1 | SPI_CR1_BR_2 | SPI_CR1_SSM | SPI_CR1_SSI | SPI_CR1_SPE;
    }
}
 8001e5a:	bd08      	pop	{r3, pc}
        RCC->APB2ENR |= RCC_APB2ENR_SPI1EN;
 8001e5c:	4a2b      	ldr	r2, [pc, #172]	@ (8001f0c <SPI_Init+0xbc>)
 8001e5e:	6993      	ldr	r3, [r2, #24]
 8001e60:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8001e64:	6193      	str	r3, [r2, #24]
        Init_GPIO(PA, 4, OUT50, O_GP_PP); // CS
 8001e66:	2300      	movs	r3, #0
 8001e68:	2203      	movs	r2, #3
 8001e6a:	2104      	movs	r1, #4
 8001e6c:	f7ff ff86 	bl	8001d7c <Init_GPIO>
        Init_GPIO(PA, 5, OUT50, O_AF_PP); // CLK
 8001e70:	2302      	movs	r3, #2
 8001e72:	2203      	movs	r2, #3
 8001e74:	2105      	movs	r1, #5
 8001e76:	2001      	movs	r0, #1
 8001e78:	f7ff ff80 	bl	8001d7c <Init_GPIO>
        Init_GPIO(PA, 6, IN, I_PP);    // MISO SPI1
 8001e7c:	2302      	movs	r3, #2
 8001e7e:	2200      	movs	r2, #0
 8001e80:	2106      	movs	r1, #6
 8001e82:	2001      	movs	r0, #1
 8001e84:	f7ff ff7a 	bl	8001d7c <Init_GPIO>
        Init_GPIO(PA, 7, OUT50, O_AF_PP); // MOSI SPI1
 8001e88:	2302      	movs	r3, #2
 8001e8a:	2203      	movs	r2, #3
 8001e8c:	2107      	movs	r1, #7
 8001e8e:	2001      	movs	r0, #1
 8001e90:	f7ff ff74 	bl	8001d7c <Init_GPIO>
        Write_GPIO(PA, 4, HIGH);
 8001e94:	2201      	movs	r2, #1
 8001e96:	2104      	movs	r1, #4
 8001e98:	4610      	mov	r0, r2
 8001e9a:	f7ff ffb9 	bl	8001e10 <Write_GPIO>
        SPI1->CR1 = SPI_CR1_MSTR | SPI_CR1_BR_1 | SPI_CR1_BR_2 | SPI_CR1_SSM | SPI_CR1_SSI | SPI_CR1_SPE;
 8001e9e:	4b1c      	ldr	r3, [pc, #112]	@ (8001f10 <SPI_Init+0xc0>)
 8001ea0:	f44f 725d 	mov.w	r2, #884	@ 0x374
 8001ea4:	601a      	str	r2, [r3, #0]
 8001ea6:	e7d8      	b.n	8001e5a <SPI_Init+0xa>
        RCC->APB1ENR |= RCC_APB1ENR_SPI2EN;
 8001ea8:	4a18      	ldr	r2, [pc, #96]	@ (8001f0c <SPI_Init+0xbc>)
 8001eaa:	69d3      	ldr	r3, [r2, #28]
 8001eac:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001eb0:	61d3      	str	r3, [r2, #28]
        Init_GPIO(PA, 8, OUT50, O_GP_PP); // CS (optionnel)
 8001eb2:	2300      	movs	r3, #0
 8001eb4:	2203      	movs	r2, #3
 8001eb6:	2108      	movs	r1, #8
 8001eb8:	2001      	movs	r0, #1
 8001eba:	f7ff ff5f 	bl	8001d7c <Init_GPIO>
        Init_GPIO(PB, 12, OUT50, O_GP_PP); // CS
 8001ebe:	2300      	movs	r3, #0
 8001ec0:	2203      	movs	r2, #3
 8001ec2:	210c      	movs	r1, #12
 8001ec4:	2002      	movs	r0, #2
 8001ec6:	f7ff ff59 	bl	8001d7c <Init_GPIO>
        Init_GPIO(PB, 13, OUT50, O_AF_PP); // CLK
 8001eca:	2302      	movs	r3, #2
 8001ecc:	2203      	movs	r2, #3
 8001ece:	210d      	movs	r1, #13
 8001ed0:	4618      	mov	r0, r3
 8001ed2:	f7ff ff53 	bl	8001d7c <Init_GPIO>
        Init_GPIO(PB, 14, IN, I_PP);    // MISO SPI2
 8001ed6:	2302      	movs	r3, #2
 8001ed8:	2200      	movs	r2, #0
 8001eda:	210e      	movs	r1, #14
 8001edc:	4618      	mov	r0, r3
 8001ede:	f7ff ff4d 	bl	8001d7c <Init_GPIO>
        Init_GPIO(PB, 15, OUT50, O_AF_PP); // MOSI SPI2
 8001ee2:	2302      	movs	r3, #2
 8001ee4:	2203      	movs	r2, #3
 8001ee6:	210f      	movs	r1, #15
 8001ee8:	4618      	mov	r0, r3
 8001eea:	f7ff ff47 	bl	8001d7c <Init_GPIO>
        Write_GPIO(PA, 8, HIGH);
 8001eee:	2201      	movs	r2, #1
 8001ef0:	2108      	movs	r1, #8
 8001ef2:	4610      	mov	r0, r2
 8001ef4:	f7ff ff8c 	bl	8001e10 <Write_GPIO>
        Write_GPIO(PB, 12, HIGH);
 8001ef8:	2201      	movs	r2, #1
 8001efa:	210c      	movs	r1, #12
 8001efc:	2002      	movs	r0, #2
 8001efe:	f7ff ff87 	bl	8001e10 <Write_GPIO>
        SPI2->CR1 = SPI_CR1_MSTR | SPI_CR1_BR_1 | SPI_CR1_BR_2 | SPI_CR1_SSM | SPI_CR1_SSI | SPI_CR1_SPE;
 8001f02:	4b04      	ldr	r3, [pc, #16]	@ (8001f14 <SPI_Init+0xc4>)
 8001f04:	f44f 725d 	mov.w	r2, #884	@ 0x374
 8001f08:	601a      	str	r2, [r3, #0]
}
 8001f0a:	e7a6      	b.n	8001e5a <SPI_Init+0xa>
 8001f0c:	40021000 	.word	0x40021000
 8001f10:	40013000 	.word	0x40013000
 8001f14:	40003800 	.word	0x40003800

08001f18 <SPI2_TX>:

    uint8_t temp = SPI1->DR;
    temp = SPI1->SR;
}

void SPI2_TX(uint8_t *data, int size) {
 8001f18:	468c      	mov	ip, r1

    for (int i = 0; i < size; ++i) {
 8001f1a:	2200      	movs	r2, #0
 8001f1c:	e008      	b.n	8001f30 <SPI2_TX+0x18>
        while (!(SPI2->SR & SPI_SR_TXE)) {}
 8001f1e:	4b0c      	ldr	r3, [pc, #48]	@ (8001f50 <SPI2_TX+0x38>)
 8001f20:	689b      	ldr	r3, [r3, #8]
 8001f22:	f013 0f02 	tst.w	r3, #2
 8001f26:	d0fa      	beq.n	8001f1e <SPI2_TX+0x6>
        SPI2->DR = data[i];
 8001f28:	5c81      	ldrb	r1, [r0, r2]
 8001f2a:	4b09      	ldr	r3, [pc, #36]	@ (8001f50 <SPI2_TX+0x38>)
 8001f2c:	60d9      	str	r1, [r3, #12]
    for (int i = 0; i < size; ++i) {
 8001f2e:	3201      	adds	r2, #1
 8001f30:	4562      	cmp	r2, ip
 8001f32:	dbf4      	blt.n	8001f1e <SPI2_TX+0x6>
    }

    while (!(SPI2->SR & SPI_SR_TXE)) {}
 8001f34:	4b06      	ldr	r3, [pc, #24]	@ (8001f50 <SPI2_TX+0x38>)
 8001f36:	689b      	ldr	r3, [r3, #8]
 8001f38:	f013 0f02 	tst.w	r3, #2
 8001f3c:	d0fa      	beq.n	8001f34 <SPI2_TX+0x1c>
    while (SPI2->SR & SPI_SR_BSY) {}
 8001f3e:	4b04      	ldr	r3, [pc, #16]	@ (8001f50 <SPI2_TX+0x38>)
 8001f40:	689b      	ldr	r3, [r3, #8]
 8001f42:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8001f46:	d1fa      	bne.n	8001f3e <SPI2_TX+0x26>

    uint8_t temp = SPI2->DR;
 8001f48:	4b01      	ldr	r3, [pc, #4]	@ (8001f50 <SPI2_TX+0x38>)
 8001f4a:	68da      	ldr	r2, [r3, #12]
    temp = SPI2->SR;
 8001f4c:	689b      	ldr	r3, [r3, #8]
}
 8001f4e:	4770      	bx	lr
 8001f50:	40003800 	.word	0x40003800

08001f54 <SPI2_RX>:
    }
}

void SPI2_RX(uint8_t *data, int size) {

    while (size) {
 8001f54:	e011      	b.n	8001f7a <SPI2_RX+0x26>
        while (SPI2->SR & SPI_SR_BSY) {}
 8001f56:	4b0a      	ldr	r3, [pc, #40]	@ (8001f80 <SPI2_RX+0x2c>)
 8001f58:	689b      	ldr	r3, [r3, #8]
 8001f5a:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8001f5e:	d1fa      	bne.n	8001f56 <SPI2_RX+0x2>
        SPI2->DR = 0;
 8001f60:	4b07      	ldr	r3, [pc, #28]	@ (8001f80 <SPI2_RX+0x2c>)
 8001f62:	2200      	movs	r2, #0
 8001f64:	60da      	str	r2, [r3, #12]
        while (!(SPI2->SR & SPI_SR_RXNE)) {}
 8001f66:	4b06      	ldr	r3, [pc, #24]	@ (8001f80 <SPI2_RX+0x2c>)
 8001f68:	689b      	ldr	r3, [r3, #8]
 8001f6a:	f013 0f01 	tst.w	r3, #1
 8001f6e:	d0fa      	beq.n	8001f66 <SPI2_RX+0x12>
        *data++ = SPI2->DR;
 8001f70:	4b03      	ldr	r3, [pc, #12]	@ (8001f80 <SPI2_RX+0x2c>)
 8001f72:	68db      	ldr	r3, [r3, #12]
 8001f74:	f800 3b01 	strb.w	r3, [r0], #1
        --size;
 8001f78:	3901      	subs	r1, #1
    while (size) {
 8001f7a:	2900      	cmp	r1, #0
 8001f7c:	d1eb      	bne.n	8001f56 <SPI2_RX+0x2>
    }
}
 8001f7e:	4770      	bx	lr
 8001f80:	40003800 	.word	0x40003800

08001f84 <USART_Init>:
#include "GAUL_Drivers/Low_Level_Drivers/USART_driver.h"
#include "main.h"


void USART_Init(unsigned short usart)
{
 8001f84:	b508      	push	{r3, lr}
    if(usart == 1) {
 8001f86:	2801      	cmp	r0, #1
 8001f88:	d004      	beq.n	8001f94 <USART_Init+0x10>
        USART1->CR1 |= USART_CR1_TE; // Activer la transmission
        USART1->CR1 |= USART_CR1_RE; // Activer la réception
        // Activation des interruptions globales pour USART1
        NVIC_EnableIRQ(USART1_IRQn);
    }
    else if(usart == 2) {
 8001f8a:	2802      	cmp	r0, #2
 8001f8c:	d024      	beq.n	8001fd8 <USART_Init+0x54>
        USART2->CR1 |= USART_CR1_TE; // Activer la transmission
        USART2->CR1 |= USART_CR1_RE; // Activer la réception
        // Activation des interruptions globales pour USART2
        NVIC_EnableIRQ(USART2_IRQn);
    }
    else if(usart == 3) {
 8001f8e:	2803      	cmp	r0, #3
 8001f90:	d044      	beq.n	800201c <USART_Init+0x98>
        USART3->CR1 |= USART_CR1_TE; // Activer la transmission
        USART3->CR1 |= USART_CR1_RE; // Activer la réception
        // Activation des interruptions globales pour USART3
        NVIC_EnableIRQ(USART3_IRQn);
    }
}
 8001f92:	bd08      	pop	{r3, pc}
        RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 8001f94:	4a32      	ldr	r2, [pc, #200]	@ (8002060 <USART_Init+0xdc>)
 8001f96:	6993      	ldr	r3, [r2, #24]
 8001f98:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001f9c:	6193      	str	r3, [r2, #24]
        Init_GPIO(PB, 6, OUT50, O_AF_PP); // TX
 8001f9e:	2302      	movs	r3, #2
 8001fa0:	2203      	movs	r2, #3
 8001fa2:	2106      	movs	r1, #6
 8001fa4:	4618      	mov	r0, r3
 8001fa6:	f7ff fee9 	bl	8001d7c <Init_GPIO>
        Init_GPIO(PB, 7, IN, I_PP); // RX
 8001faa:	2302      	movs	r3, #2
 8001fac:	2200      	movs	r2, #0
 8001fae:	2107      	movs	r1, #7
 8001fb0:	4618      	mov	r0, r3
 8001fb2:	f7ff fee3 	bl	8001d7c <Init_GPIO>
        USART1->CR1 |= USART_CR1_UE; // Activer USART (0x0C)
 8001fb6:	4b2b      	ldr	r3, [pc, #172]	@ (8002064 <USART_Init+0xe0>)
 8001fb8:	68da      	ldr	r2, [r3, #12]
 8001fba:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8001fbe:	60da      	str	r2, [r3, #12]
        USART1->CR1 |= USART_CR1_TE; // Activer la transmission
 8001fc0:	68da      	ldr	r2, [r3, #12]
 8001fc2:	f042 0208 	orr.w	r2, r2, #8
 8001fc6:	60da      	str	r2, [r3, #12]
        USART1->CR1 |= USART_CR1_RE; // Activer la réception
 8001fc8:	68da      	ldr	r2, [r3, #12]
 8001fca:	f042 0204 	orr.w	r2, r2, #4
 8001fce:	60da      	str	r2, [r3, #12]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001fd0:	4b25      	ldr	r3, [pc, #148]	@ (8002068 <USART_Init+0xe4>)
 8001fd2:	2220      	movs	r2, #32
 8001fd4:	605a      	str	r2, [r3, #4]
 8001fd6:	e7dc      	b.n	8001f92 <USART_Init+0xe>
        RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 8001fd8:	4a21      	ldr	r2, [pc, #132]	@ (8002060 <USART_Init+0xdc>)
 8001fda:	69d3      	ldr	r3, [r2, #28]
 8001fdc:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001fe0:	61d3      	str	r3, [r2, #28]
        Init_GPIO(PA, 2, OUT50, O_AF_PP); // TX
 8001fe2:	2302      	movs	r3, #2
 8001fe4:	2203      	movs	r2, #3
 8001fe6:	4619      	mov	r1, r3
 8001fe8:	2001      	movs	r0, #1
 8001fea:	f7ff fec7 	bl	8001d7c <Init_GPIO>
        Init_GPIO(PA, 3, IN, I_PP); // RX
 8001fee:	2302      	movs	r3, #2
 8001ff0:	2200      	movs	r2, #0
 8001ff2:	2103      	movs	r1, #3
 8001ff4:	2001      	movs	r0, #1
 8001ff6:	f7ff fec1 	bl	8001d7c <Init_GPIO>
        USART2->CR1 |= USART_CR1_UE; // Activer USART (0x10)
 8001ffa:	4b1c      	ldr	r3, [pc, #112]	@ (800206c <USART_Init+0xe8>)
 8001ffc:	68da      	ldr	r2, [r3, #12]
 8001ffe:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8002002:	60da      	str	r2, [r3, #12]
        USART2->CR1 |= USART_CR1_TE; // Activer la transmission
 8002004:	68da      	ldr	r2, [r3, #12]
 8002006:	f042 0208 	orr.w	r2, r2, #8
 800200a:	60da      	str	r2, [r3, #12]
        USART2->CR1 |= USART_CR1_RE; // Activer la réception
 800200c:	68da      	ldr	r2, [r3, #12]
 800200e:	f042 0204 	orr.w	r2, r2, #4
 8002012:	60da      	str	r2, [r3, #12]
 8002014:	4b14      	ldr	r3, [pc, #80]	@ (8002068 <USART_Init+0xe4>)
 8002016:	2240      	movs	r2, #64	@ 0x40
 8002018:	605a      	str	r2, [r3, #4]
 800201a:	e7ba      	b.n	8001f92 <USART_Init+0xe>
        RCC->APB1ENR |= RCC_APB1ENR_USART3EN ;
 800201c:	4a10      	ldr	r2, [pc, #64]	@ (8002060 <USART_Init+0xdc>)
 800201e:	69d3      	ldr	r3, [r2, #28]
 8002020:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002024:	61d3      	str	r3, [r2, #28]
        Init_GPIO(PB, 10, OUT50, O_AF_PP); // TX
 8002026:	2302      	movs	r3, #2
 8002028:	2203      	movs	r2, #3
 800202a:	210a      	movs	r1, #10
 800202c:	4618      	mov	r0, r3
 800202e:	f7ff fea5 	bl	8001d7c <Init_GPIO>
        Init_GPIO(PB, 11, IN, I_PP); // RX
 8002032:	2302      	movs	r3, #2
 8002034:	2200      	movs	r2, #0
 8002036:	210b      	movs	r1, #11
 8002038:	4618      	mov	r0, r3
 800203a:	f7ff fe9f 	bl	8001d7c <Init_GPIO>
        USART3->CR1 |= USART_CR1_UE; // Activer USART (0x14)
 800203e:	4b0c      	ldr	r3, [pc, #48]	@ (8002070 <USART_Init+0xec>)
 8002040:	68da      	ldr	r2, [r3, #12]
 8002042:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8002046:	60da      	str	r2, [r3, #12]
        USART3->CR1 |= USART_CR1_TE; // Activer la transmission
 8002048:	68da      	ldr	r2, [r3, #12]
 800204a:	f042 0208 	orr.w	r2, r2, #8
 800204e:	60da      	str	r2, [r3, #12]
        USART3->CR1 |= USART_CR1_RE; // Activer la réception
 8002050:	68da      	ldr	r2, [r3, #12]
 8002052:	f042 0204 	orr.w	r2, r2, #4
 8002056:	60da      	str	r2, [r3, #12]
 8002058:	4b03      	ldr	r3, [pc, #12]	@ (8002068 <USART_Init+0xe4>)
 800205a:	2280      	movs	r2, #128	@ 0x80
 800205c:	605a      	str	r2, [r3, #4]
}
 800205e:	e798      	b.n	8001f92 <USART_Init+0xe>
 8002060:	40021000 	.word	0x40021000
 8002064:	40013800 	.word	0x40013800
 8002068:	e000e100 	.word	0xe000e100
 800206c:	40004400 	.word	0x40004400
 8002070:	40004800 	.word	0x40004800

08002074 <USART_TX>:

void USART_TX(unsigned short usart, const uint8_t *data, int size) {
 8002074:	b410      	push	{r4}

    if (usart == 1) {
 8002076:	2801      	cmp	r0, #1
 8002078:	d027      	beq.n	80020ca <USART_TX+0x56>
        for (int i = 0; i < size; i++) {
            while (!(USART1->SR & USART_SR_TXE));
            USART1->DR = data[i];
            while (!(USART1->SR & USART_SR_TC));
        }
    } else if (usart == 2) {
 800207a:	2802      	cmp	r0, #2
 800207c:	d038      	beq.n	80020f0 <USART_TX+0x7c>
        for (int i = 0; i < size; i++) {
            while (!(USART2->SR & USART_SR_TXE));
            USART2->DR = data[i];
            while (!(USART2->SR & USART_SR_TC));
        }
    } else if (usart == 3) {
 800207e:	2803      	cmp	r0, #3
 8002080:	d121      	bne.n	80020c6 <USART_TX+0x52>
        for (int i = 0; i < size; i++) {
 8002082:	2000      	movs	r0, #0
 8002084:	4290      	cmp	r0, r2
 8002086:	da1e      	bge.n	80020c6 <USART_TX+0x52>
            while (!(USART3->SR & USART_SR_TXE));
 8002088:	4b1a      	ldr	r3, [pc, #104]	@ (80020f4 <USART_TX+0x80>)
 800208a:	681b      	ldr	r3, [r3, #0]
 800208c:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8002090:	d0fa      	beq.n	8002088 <USART_TX+0x14>
            USART3->DR = data[i];
 8002092:	5c0c      	ldrb	r4, [r1, r0]
 8002094:	4b17      	ldr	r3, [pc, #92]	@ (80020f4 <USART_TX+0x80>)
 8002096:	605c      	str	r4, [r3, #4]
            while (!(USART3->SR & USART_SR_TC));
 8002098:	4b16      	ldr	r3, [pc, #88]	@ (80020f4 <USART_TX+0x80>)
 800209a:	681b      	ldr	r3, [r3, #0]
 800209c:	f013 0f40 	tst.w	r3, #64	@ 0x40
 80020a0:	d0fa      	beq.n	8002098 <USART_TX+0x24>
        for (int i = 0; i < size; i++) {
 80020a2:	3001      	adds	r0, #1
 80020a4:	e7ee      	b.n	8002084 <USART_TX+0x10>
            while (!(USART1->SR & USART_SR_TXE));
 80020a6:	4b14      	ldr	r3, [pc, #80]	@ (80020f8 <USART_TX+0x84>)
 80020a8:	681b      	ldr	r3, [r3, #0]
 80020aa:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80020ae:	d0fa      	beq.n	80020a6 <USART_TX+0x32>
            USART1->DR = data[i];
 80020b0:	5c0c      	ldrb	r4, [r1, r0]
 80020b2:	4b11      	ldr	r3, [pc, #68]	@ (80020f8 <USART_TX+0x84>)
 80020b4:	605c      	str	r4, [r3, #4]
            while (!(USART1->SR & USART_SR_TC));
 80020b6:	4b10      	ldr	r3, [pc, #64]	@ (80020f8 <USART_TX+0x84>)
 80020b8:	681b      	ldr	r3, [r3, #0]
 80020ba:	f013 0f40 	tst.w	r3, #64	@ 0x40
 80020be:	d0fa      	beq.n	80020b6 <USART_TX+0x42>
        for (int i = 0; i < size; i++) {
 80020c0:	3001      	adds	r0, #1
 80020c2:	4290      	cmp	r0, r2
 80020c4:	dbef      	blt.n	80020a6 <USART_TX+0x32>
        }
    }
}
 80020c6:	bc10      	pop	{r4}
 80020c8:	4770      	bx	lr
        for (int i = 0; i < size; i++) {
 80020ca:	2000      	movs	r0, #0
 80020cc:	e7f9      	b.n	80020c2 <USART_TX+0x4e>
            while (!(USART2->SR & USART_SR_TXE));
 80020ce:	4b0b      	ldr	r3, [pc, #44]	@ (80020fc <USART_TX+0x88>)
 80020d0:	681b      	ldr	r3, [r3, #0]
 80020d2:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80020d6:	d0fa      	beq.n	80020ce <USART_TX+0x5a>
            USART2->DR = data[i];
 80020d8:	5c0c      	ldrb	r4, [r1, r0]
 80020da:	4b08      	ldr	r3, [pc, #32]	@ (80020fc <USART_TX+0x88>)
 80020dc:	605c      	str	r4, [r3, #4]
            while (!(USART2->SR & USART_SR_TC));
 80020de:	4b07      	ldr	r3, [pc, #28]	@ (80020fc <USART_TX+0x88>)
 80020e0:	681b      	ldr	r3, [r3, #0]
 80020e2:	f013 0f40 	tst.w	r3, #64	@ 0x40
 80020e6:	d0fa      	beq.n	80020de <USART_TX+0x6a>
        for (int i = 0; i < size; i++) {
 80020e8:	3001      	adds	r0, #1
 80020ea:	4290      	cmp	r0, r2
 80020ec:	dbef      	blt.n	80020ce <USART_TX+0x5a>
 80020ee:	e7ea      	b.n	80020c6 <USART_TX+0x52>
 80020f0:	2000      	movs	r0, #0
 80020f2:	e7fa      	b.n	80020ea <USART_TX+0x76>
 80020f4:	40004800 	.word	0x40004800
 80020f8:	40013800 	.word	0x40013800
 80020fc:	40004400 	.word	0x40004400

08002100 <ITM_SendChar>:
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8002100:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8002104:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	@ 0xe80
 8002108:	f013 0f01 	tst.w	r3, #1
 800210c:	d011      	beq.n	8002132 <ITM_SendChar+0x32>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 800210e:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8002112:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	@ 0xe00
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8002116:	f013 0f01 	tst.w	r3, #1
 800211a:	d101      	bne.n	8002120 <ITM_SendChar+0x20>
 800211c:	4770      	bx	lr
  {
    while (ITM->PORT[0U].u32 == 0UL)
    {
      __NOP();
 800211e:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 8002120:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8002124:	681b      	ldr	r3, [r3, #0]
 8002126:	2b00      	cmp	r3, #0
 8002128:	d0f9      	beq.n	800211e <ITM_SendChar+0x1e>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 800212a:	b2c3      	uxtb	r3, r0
 800212c:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 8002130:	7013      	strb	r3, [r2, #0]
  }
  return (ch);
}
 8002132:	4770      	bx	lr

08002134 <STM32_SetMode>:
	packet.data[index] = (uint8_t)(data & 0xFF);
}

uint8_t STM32_SetMode(uint8_t mode) {

	if(mode != MODE_PREFLIGHT && mode != MODE_INFLIGHT && mode != MODE_POSTFLIGHT) {
 8002134:	2802      	cmp	r0, #2
 8002136:	d803      	bhi.n	8002140 <STM32_SetMode+0xc>
		return 0;
	}
	packet.header_states.mode = mode;
 8002138:	4b02      	ldr	r3, [pc, #8]	@ (8002144 <STM32_SetMode+0x10>)
 800213a:	7018      	strb	r0, [r3, #0]
	return 1; // OK
 800213c:	2001      	movs	r0, #1
 800213e:	4770      	bx	lr
		return 0;
 8002140:	2000      	movs	r0, #0
}
 8002142:	4770      	bx	lr
 8002144:	2000024c 	.word	0x2000024c

08002148 <_write>:

}

/* USER CODE BEGIN 4 */
int _write(int le, char *ptr, int len)
{
 8002148:	b570      	push	{r4, r5, r6, lr}
 800214a:	460c      	mov	r4, r1
 800214c:	4616      	mov	r6, r2
	int DataIdx;
	for(DataIdx = 0; DataIdx < len; DataIdx++)
 800214e:	2500      	movs	r5, #0
 8002150:	e004      	b.n	800215c <_write+0x14>
	{
		ITM_SendChar(*ptr++);
 8002152:	f814 0b01 	ldrb.w	r0, [r4], #1
 8002156:	f7ff ffd3 	bl	8002100 <ITM_SendChar>
	for(DataIdx = 0; DataIdx < len; DataIdx++)
 800215a:	3501      	adds	r5, #1
 800215c:	42b5      	cmp	r5, r6
 800215e:	dbf8      	blt.n	8002152 <_write+0xa>
	}
	return len;
}
 8002160:	4630      	mov	r0, r6
 8002162:	bd70      	pop	{r4, r5, r6, pc}

08002164 <Error_Handler>:
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002164:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002166:	e7fe      	b.n	8002166 <Error_Handler+0x2>

08002168 <MX_USART1_UART_Init>:
{
 8002168:	b508      	push	{r3, lr}
  huart1.Instance = USART1;
 800216a:	480a      	ldr	r0, [pc, #40]	@ (8002194 <MX_USART1_UART_Init+0x2c>)
 800216c:	4b0a      	ldr	r3, [pc, #40]	@ (8002198 <MX_USART1_UART_Init+0x30>)
 800216e:	6003      	str	r3, [r0, #0]
  huart1.Init.BaudRate = 9600;
 8002170:	f44f 5316 	mov.w	r3, #9600	@ 0x2580
 8002174:	6043      	str	r3, [r0, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8002176:	2300      	movs	r3, #0
 8002178:	6083      	str	r3, [r0, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 800217a:	60c3      	str	r3, [r0, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 800217c:	6103      	str	r3, [r0, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 800217e:	220c      	movs	r2, #12
 8002180:	6142      	str	r2, [r0, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002182:	6183      	str	r3, [r0, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8002184:	61c3      	str	r3, [r0, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8002186:	f002 ffad 	bl	80050e4 <HAL_UART_Init>
 800218a:	b900      	cbnz	r0, 800218e <MX_USART1_UART_Init+0x26>
}
 800218c:	bd08      	pop	{r3, pc}
    Error_Handler();
 800218e:	f7ff ffe9 	bl	8002164 <Error_Handler>
 8002192:	bf00      	nop
 8002194:	20000358 	.word	0x20000358
 8002198:	40013800 	.word	0x40013800

0800219c <MX_USART2_UART_Init>:
{
 800219c:	b508      	push	{r3, lr}
  huart2.Instance = USART2;
 800219e:	480a      	ldr	r0, [pc, #40]	@ (80021c8 <MX_USART2_UART_Init+0x2c>)
 80021a0:	4b0a      	ldr	r3, [pc, #40]	@ (80021cc <MX_USART2_UART_Init+0x30>)
 80021a2:	6003      	str	r3, [r0, #0]
  huart2.Init.BaudRate = 9600;
 80021a4:	f44f 5316 	mov.w	r3, #9600	@ 0x2580
 80021a8:	6043      	str	r3, [r0, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80021aa:	2300      	movs	r3, #0
 80021ac:	6083      	str	r3, [r0, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80021ae:	60c3      	str	r3, [r0, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80021b0:	6103      	str	r3, [r0, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80021b2:	220c      	movs	r2, #12
 80021b4:	6142      	str	r2, [r0, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80021b6:	6183      	str	r3, [r0, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80021b8:	61c3      	str	r3, [r0, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80021ba:	f002 ff93 	bl	80050e4 <HAL_UART_Init>
 80021be:	b900      	cbnz	r0, 80021c2 <MX_USART2_UART_Init+0x26>
}
 80021c0:	bd08      	pop	{r3, pc}
    Error_Handler();
 80021c2:	f7ff ffcf 	bl	8002164 <Error_Handler>
 80021c6:	bf00      	nop
 80021c8:	20000310 	.word	0x20000310
 80021cc:	40004400 	.word	0x40004400

080021d0 <MX_USART3_UART_Init>:
{
 80021d0:	b508      	push	{r3, lr}
  huart3.Instance = USART3;
 80021d2:	480a      	ldr	r0, [pc, #40]	@ (80021fc <MX_USART3_UART_Init+0x2c>)
 80021d4:	4b0a      	ldr	r3, [pc, #40]	@ (8002200 <MX_USART3_UART_Init+0x30>)
 80021d6:	6003      	str	r3, [r0, #0]
  huart3.Init.BaudRate = 9600;
 80021d8:	f44f 5316 	mov.w	r3, #9600	@ 0x2580
 80021dc:	6043      	str	r3, [r0, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 80021de:	2300      	movs	r3, #0
 80021e0:	6083      	str	r3, [r0, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 80021e2:	60c3      	str	r3, [r0, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 80021e4:	6103      	str	r3, [r0, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 80021e6:	220c      	movs	r2, #12
 80021e8:	6142      	str	r2, [r0, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80021ea:	6183      	str	r3, [r0, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 80021ec:	61c3      	str	r3, [r0, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 80021ee:	f002 ff79 	bl	80050e4 <HAL_UART_Init>
 80021f2:	b900      	cbnz	r0, 80021f6 <MX_USART3_UART_Init+0x26>
}
 80021f4:	bd08      	pop	{r3, pc}
    Error_Handler();
 80021f6:	f7ff ffb5 	bl	8002164 <Error_Handler>
 80021fa:	bf00      	nop
 80021fc:	200002c8 	.word	0x200002c8
 8002200:	40004800 	.word	0x40004800

08002204 <MX_TIM3_Init>:
{
 8002204:	b500      	push	{lr}
 8002206:	b08f      	sub	sp, #60	@ 0x3c
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8002208:	2300      	movs	r3, #0
 800220a:	930a      	str	r3, [sp, #40]	@ 0x28
 800220c:	930b      	str	r3, [sp, #44]	@ 0x2c
 800220e:	930c      	str	r3, [sp, #48]	@ 0x30
 8002210:	930d      	str	r3, [sp, #52]	@ 0x34
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002212:	9308      	str	r3, [sp, #32]
 8002214:	9309      	str	r3, [sp, #36]	@ 0x24
  TIM_OC_InitTypeDef sConfigOC = {0};
 8002216:	9301      	str	r3, [sp, #4]
 8002218:	9302      	str	r3, [sp, #8]
 800221a:	9303      	str	r3, [sp, #12]
 800221c:	9304      	str	r3, [sp, #16]
 800221e:	9305      	str	r3, [sp, #20]
 8002220:	9306      	str	r3, [sp, #24]
 8002222:	9307      	str	r3, [sp, #28]
  htim3.Instance = TIM3;
 8002224:	481e      	ldr	r0, [pc, #120]	@ (80022a0 <MX_TIM3_Init+0x9c>)
 8002226:	4a1f      	ldr	r2, [pc, #124]	@ (80022a4 <MX_TIM3_Init+0xa0>)
 8002228:	6002      	str	r2, [r0, #0]
  htim3.Init.Prescaler = 127;
 800222a:	227f      	movs	r2, #127	@ 0x7f
 800222c:	6042      	str	r2, [r0, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 800222e:	6083      	str	r3, [r0, #8]
  htim3.Init.Period = 20;
 8002230:	2214      	movs	r2, #20
 8002232:	60c2      	str	r2, [r0, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002234:	6103      	str	r3, [r0, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002236:	6183      	str	r3, [r0, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8002238:	f002 fa44 	bl	80046c4 <HAL_TIM_Base_Init>
 800223c:	bb28      	cbnz	r0, 800228a <MX_TIM3_Init+0x86>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800223e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8002242:	930a      	str	r3, [sp, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8002244:	a90a      	add	r1, sp, #40	@ 0x28
 8002246:	4816      	ldr	r0, [pc, #88]	@ (80022a0 <MX_TIM3_Init+0x9c>)
 8002248:	f002 fba6 	bl	8004998 <HAL_TIM_ConfigClockSource>
 800224c:	b9f8      	cbnz	r0, 800228e <MX_TIM3_Init+0x8a>
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 800224e:	4814      	ldr	r0, [pc, #80]	@ (80022a0 <MX_TIM3_Init+0x9c>)
 8002250:	f002 fa87 	bl	8004762 <HAL_TIM_PWM_Init>
 8002254:	b9e8      	cbnz	r0, 8002292 <MX_TIM3_Init+0x8e>
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002256:	2300      	movs	r3, #0
 8002258:	9308      	str	r3, [sp, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800225a:	9309      	str	r3, [sp, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 800225c:	a908      	add	r1, sp, #32
 800225e:	4810      	ldr	r0, [pc, #64]	@ (80022a0 <MX_TIM3_Init+0x9c>)
 8002260:	f002 fee2 	bl	8005028 <HAL_TIMEx_MasterConfigSynchronization>
 8002264:	b9b8      	cbnz	r0, 8002296 <MX_TIM3_Init+0x92>
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8002266:	2360      	movs	r3, #96	@ 0x60
 8002268:	9301      	str	r3, [sp, #4]
  sConfigOC.Pulse = 0;
 800226a:	2300      	movs	r3, #0
 800226c:	9302      	str	r3, [sp, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800226e:	9303      	str	r3, [sp, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8002270:	9305      	str	r3, [sp, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8002272:	220c      	movs	r2, #12
 8002274:	a901      	add	r1, sp, #4
 8002276:	480a      	ldr	r0, [pc, #40]	@ (80022a0 <MX_TIM3_Init+0x9c>)
 8002278:	f002 facc 	bl	8004814 <HAL_TIM_PWM_ConfigChannel>
 800227c:	b968      	cbnz	r0, 800229a <MX_TIM3_Init+0x96>
  HAL_TIM_MspPostInit(&htim3);
 800227e:	4808      	ldr	r0, [pc, #32]	@ (80022a0 <MX_TIM3_Init+0x9c>)
 8002280:	f000 fa3a 	bl	80026f8 <HAL_TIM_MspPostInit>
}
 8002284:	b00f      	add	sp, #60	@ 0x3c
 8002286:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 800228a:	f7ff ff6b 	bl	8002164 <Error_Handler>
    Error_Handler();
 800228e:	f7ff ff69 	bl	8002164 <Error_Handler>
    Error_Handler();
 8002292:	f7ff ff67 	bl	8002164 <Error_Handler>
    Error_Handler();
 8002296:	f7ff ff65 	bl	8002164 <Error_Handler>
    Error_Handler();
 800229a:	f7ff ff63 	bl	8002164 <Error_Handler>
 800229e:	bf00      	nop
 80022a0:	200003a0 	.word	0x200003a0
 80022a4:	40000400 	.word	0x40000400

080022a8 <MX_TIM2_Init>:
{
 80022a8:	b500      	push	{lr}
 80022aa:	b087      	sub	sp, #28
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80022ac:	2300      	movs	r3, #0
 80022ae:	9302      	str	r3, [sp, #8]
 80022b0:	9303      	str	r3, [sp, #12]
 80022b2:	9304      	str	r3, [sp, #16]
 80022b4:	9305      	str	r3, [sp, #20]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80022b6:	9300      	str	r3, [sp, #0]
 80022b8:	9301      	str	r3, [sp, #4]
  htim2.Instance = TIM2;
 80022ba:	4814      	ldr	r0, [pc, #80]	@ (800230c <MX_TIM2_Init+0x64>)
 80022bc:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80022c0:	6002      	str	r2, [r0, #0]
  htim2.Init.Prescaler = 14400;
 80022c2:	f44f 5261 	mov.w	r2, #14400	@ 0x3840
 80022c6:	6042      	str	r2, [r0, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80022c8:	6083      	str	r3, [r0, #8]
  htim2.Init.Period = 65535;
 80022ca:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80022ce:	60c2      	str	r2, [r0, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80022d0:	6103      	str	r3, [r0, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80022d2:	6183      	str	r3, [r0, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80022d4:	f002 f9f6 	bl	80046c4 <HAL_TIM_Base_Init>
 80022d8:	b990      	cbnz	r0, 8002300 <MX_TIM2_Init+0x58>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80022da:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80022de:	9302      	str	r3, [sp, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80022e0:	a902      	add	r1, sp, #8
 80022e2:	480a      	ldr	r0, [pc, #40]	@ (800230c <MX_TIM2_Init+0x64>)
 80022e4:	f002 fb58 	bl	8004998 <HAL_TIM_ConfigClockSource>
 80022e8:	b960      	cbnz	r0, 8002304 <MX_TIM2_Init+0x5c>
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80022ea:	2300      	movs	r3, #0
 80022ec:	9300      	str	r3, [sp, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80022ee:	9301      	str	r3, [sp, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80022f0:	4669      	mov	r1, sp
 80022f2:	4806      	ldr	r0, [pc, #24]	@ (800230c <MX_TIM2_Init+0x64>)
 80022f4:	f002 fe98 	bl	8005028 <HAL_TIMEx_MasterConfigSynchronization>
 80022f8:	b930      	cbnz	r0, 8002308 <MX_TIM2_Init+0x60>
}
 80022fa:	b007      	add	sp, #28
 80022fc:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 8002300:	f7ff ff30 	bl	8002164 <Error_Handler>
    Error_Handler();
 8002304:	f7ff ff2e 	bl	8002164 <Error_Handler>
    Error_Handler();
 8002308:	f7ff ff2c 	bl	8002164 <Error_Handler>
 800230c:	200003e8 	.word	0x200003e8

08002310 <MX_ADC1_Init>:
{
 8002310:	b500      	push	{lr}
 8002312:	b085      	sub	sp, #20
  ADC_ChannelConfTypeDef sConfig = {0};
 8002314:	2300      	movs	r3, #0
 8002316:	9301      	str	r3, [sp, #4]
 8002318:	9302      	str	r3, [sp, #8]
 800231a:	9303      	str	r3, [sp, #12]
  hadc1.Instance = ADC1;
 800231c:	480f      	ldr	r0, [pc, #60]	@ (800235c <MX_ADC1_Init+0x4c>)
 800231e:	4a10      	ldr	r2, [pc, #64]	@ (8002360 <MX_ADC1_Init+0x50>)
 8002320:	6002      	str	r2, [r0, #0]
  hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 8002322:	6083      	str	r3, [r0, #8]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8002324:	7303      	strb	r3, [r0, #12]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8002326:	7503      	strb	r3, [r0, #20]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8002328:	f44f 2260 	mov.w	r2, #917504	@ 0xe0000
 800232c:	61c2      	str	r2, [r0, #28]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800232e:	6043      	str	r3, [r0, #4]
  hadc1.Init.NbrOfConversion = 1;
 8002330:	2301      	movs	r3, #1
 8002332:	6103      	str	r3, [r0, #16]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8002334:	f000 fbe2 	bl	8002afc <HAL_ADC_Init>
 8002338:	b960      	cbnz	r0, 8002354 <MX_ADC1_Init+0x44>
  sConfig.Channel = ADC_CHANNEL_0;
 800233a:	2300      	movs	r3, #0
 800233c:	9301      	str	r3, [sp, #4]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 800233e:	2201      	movs	r2, #1
 8002340:	9202      	str	r2, [sp, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 8002342:	9303      	str	r3, [sp, #12]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8002344:	a901      	add	r1, sp, #4
 8002346:	4805      	ldr	r0, [pc, #20]	@ (800235c <MX_ADC1_Init+0x4c>)
 8002348:	f000 fe9c 	bl	8003084 <HAL_ADC_ConfigChannel>
 800234c:	b920      	cbnz	r0, 8002358 <MX_ADC1_Init+0x48>
}
 800234e:	b005      	add	sp, #20
 8002350:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 8002354:	f7ff ff06 	bl	8002164 <Error_Handler>
    Error_Handler();
 8002358:	f7ff ff04 	bl	8002164 <Error_Handler>
 800235c:	20000438 	.word	0x20000438
 8002360:	40012400 	.word	0x40012400

08002364 <MX_CRC_Init>:
{
 8002364:	b508      	push	{r3, lr}
  hcrc.Instance = CRC;
 8002366:	4804      	ldr	r0, [pc, #16]	@ (8002378 <MX_CRC_Init+0x14>)
 8002368:	4b04      	ldr	r3, [pc, #16]	@ (800237c <MX_CRC_Init+0x18>)
 800236a:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800236c:	f001 f9d9 	bl	8003722 <HAL_CRC_Init>
 8002370:	b900      	cbnz	r0, 8002374 <MX_CRC_Init+0x10>
}
 8002372:	bd08      	pop	{r3, pc}
    Error_Handler();
 8002374:	f7ff fef6 	bl	8002164 <Error_Handler>
 8002378:	20000430 	.word	0x20000430
 800237c:	40023000 	.word	0x40023000

08002380 <SystemClock_Config>:
{
 8002380:	b500      	push	{lr}
 8002382:	b095      	sub	sp, #84	@ 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8002384:	2228      	movs	r2, #40	@ 0x28
 8002386:	2100      	movs	r1, #0
 8002388:	eb0d 0002 	add.w	r0, sp, r2
 800238c:	f004 fbb4 	bl	8006af8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002390:	2300      	movs	r3, #0
 8002392:	9305      	str	r3, [sp, #20]
 8002394:	9306      	str	r3, [sp, #24]
 8002396:	9307      	str	r3, [sp, #28]
 8002398:	9308      	str	r3, [sp, #32]
 800239a:	9309      	str	r3, [sp, #36]	@ 0x24
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 800239c:	9301      	str	r3, [sp, #4]
 800239e:	9302      	str	r3, [sp, #8]
 80023a0:	9303      	str	r3, [sp, #12]
 80023a2:	9304      	str	r3, [sp, #16]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80023a4:	2201      	movs	r2, #1
 80023a6:	920a      	str	r2, [sp, #40]	@ 0x28
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80023a8:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80023ac:	930b      	str	r3, [sp, #44]	@ 0x2c
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV2;
 80023ae:	f44f 3100 	mov.w	r1, #131072	@ 0x20000
 80023b2:	910c      	str	r1, [sp, #48]	@ 0x30
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80023b4:	920e      	str	r2, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80023b6:	2202      	movs	r2, #2
 80023b8:	9211      	str	r2, [sp, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80023ba:	9312      	str	r3, [sp, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 80023bc:	f44f 13e0 	mov.w	r3, #1835008	@ 0x1c0000
 80023c0:	9313      	str	r3, [sp, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80023c2:	a80a      	add	r0, sp, #40	@ 0x28
 80023c4:	f001 fc00 	bl	8003bc8 <HAL_RCC_OscConfig>
 80023c8:	b9c8      	cbnz	r0, 80023fe <SystemClock_Config+0x7e>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80023ca:	230f      	movs	r3, #15
 80023cc:	9305      	str	r3, [sp, #20]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80023ce:	2102      	movs	r1, #2
 80023d0:	9106      	str	r1, [sp, #24]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80023d2:	2300      	movs	r3, #0
 80023d4:	9307      	str	r3, [sp, #28]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80023d6:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80023da:	9208      	str	r2, [sp, #32]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80023dc:	9309      	str	r3, [sp, #36]	@ 0x24
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 80023de:	a805      	add	r0, sp, #20
 80023e0:	f001 fe74 	bl	80040cc <HAL_RCC_ClockConfig>
 80023e4:	b968      	cbnz	r0, 8002402 <SystemClock_Config+0x82>
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 80023e6:	2302      	movs	r3, #2
 80023e8:	9301      	str	r3, [sp, #4]
  PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 80023ea:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80023ee:	9303      	str	r3, [sp, #12]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80023f0:	a801      	add	r0, sp, #4
 80023f2:	f001 fffb 	bl	80043ec <HAL_RCCEx_PeriphCLKConfig>
 80023f6:	b930      	cbnz	r0, 8002406 <SystemClock_Config+0x86>
}
 80023f8:	b015      	add	sp, #84	@ 0x54
 80023fa:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 80023fe:	f7ff feb1 	bl	8002164 <Error_Handler>
    Error_Handler();
 8002402:	f7ff feaf 	bl	8002164 <Error_Handler>
    Error_Handler();
 8002406:	f7ff fead 	bl	8002164 <Error_Handler>
	...

0800240c <STM32_InitRoutine>:
void STM32_InitRoutine(void) {
 800240c:	b570      	push	{r4, r5, r6, lr}
	HAL_Init();
 800240e:	f000 faef 	bl	80029f0 <HAL_Init>
	SystemClock_Config();
 8002412:	f7ff ffb5 	bl	8002380 <SystemClock_Config>
	MX_USART1_UART_Init();
 8002416:	f7ff fea7 	bl	8002168 <MX_USART1_UART_Init>
	MX_USART2_UART_Init();
 800241a:	f7ff febf 	bl	800219c <MX_USART2_UART_Init>
	MX_USART3_UART_Init();
 800241e:	f7ff fed7 	bl	80021d0 <MX_USART3_UART_Init>
	MX_TIM3_Init();
 8002422:	f7ff feef 	bl	8002204 <MX_TIM3_Init>
	MX_TIM2_Init();
 8002426:	f7ff ff3f 	bl	80022a8 <MX_TIM2_Init>
	MX_ADC1_Init();
 800242a:	f7ff ff71 	bl	8002310 <MX_ADC1_Init>
	MX_CRC_Init();
 800242e:	f7ff ff99 	bl	8002364 <MX_CRC_Init>
	printf("|----------Starting----------|\r\n");
 8002432:	4845      	ldr	r0, [pc, #276]	@ (8002548 <STM32_InitRoutine+0x13c>)
 8002434:	f004 fa80 	bl	8006938 <puts>
	SPI_Init(1);
 8002438:	2001      	movs	r0, #1
 800243a:	f7ff fd09 	bl	8001e50 <SPI_Init>
	printf("(+) SPI1 succeeded...\r\n");
 800243e:	4843      	ldr	r0, [pc, #268]	@ (800254c <STM32_InitRoutine+0x140>)
 8002440:	f004 fa7a 	bl	8006938 <puts>
	SPI_Init(2);
 8002444:	2002      	movs	r0, #2
 8002446:	f7ff fd03 	bl	8001e50 <SPI_Init>
	printf("(+) SPI2 succeeded...\r\n");
 800244a:	4841      	ldr	r0, [pc, #260]	@ (8002550 <STM32_InitRoutine+0x144>)
 800244c:	f004 fa74 	bl	8006938 <puts>
	USART_Init(1);
 8002450:	2001      	movs	r0, #1
 8002452:	f7ff fd97 	bl	8001f84 <USART_Init>
	printf("(+) USART1 succeeded...\r\n");
 8002456:	483f      	ldr	r0, [pc, #252]	@ (8002554 <STM32_InitRoutine+0x148>)
 8002458:	f004 fa6e 	bl	8006938 <puts>
	USART_Init(2);
 800245c:	2002      	movs	r0, #2
 800245e:	f7ff fd91 	bl	8001f84 <USART_Init>
	printf("(+) USART2 succeeded...\r\n");
 8002462:	483d      	ldr	r0, [pc, #244]	@ (8002558 <STM32_InitRoutine+0x14c>)
 8002464:	f004 fa68 	bl	8006938 <puts>
	USART_Init(3);
 8002468:	2003      	movs	r0, #3
 800246a:	f7ff fd8b 	bl	8001f84 <USART_Init>
	printf("(+) USART3 succeeded...\r\n");
 800246e:	483b      	ldr	r0, [pc, #236]	@ (800255c <STM32_InitRoutine+0x150>)
 8002470:	f004 fa62 	bl	8006938 <puts>
	printf("|----------Components initialization----------|\r\n");
 8002474:	483a      	ldr	r0, [pc, #232]	@ (8002560 <STM32_InitRoutine+0x154>)
 8002476:	f004 fa5f 	bl	8006938 <puts>
	STM32_SetMode(MODE_PREFLIGHT);
 800247a:	2000      	movs	r0, #0
 800247c:	f7ff fe5a 	bl	8002134 <STM32_SetMode>
	printf("(+) Mode flight: %i succeeded...\r\n", packet.header_states.mode);
 8002480:	4b38      	ldr	r3, [pc, #224]	@ (8002564 <STM32_InitRoutine+0x158>)
 8002482:	7819      	ldrb	r1, [r3, #0]
 8002484:	4838      	ldr	r0, [pc, #224]	@ (8002568 <STM32_InitRoutine+0x15c>)
 8002486:	f004 f9ef 	bl	8006868 <iprintf>
	WS2812_Init();
 800248a:	f7ff fc2b 	bl	8001ce4 <WS2812_Init>
	printf("(+) WS2812 succeeded...\r\n");
 800248e:	4837      	ldr	r0, [pc, #220]	@ (800256c <STM32_InitRoutine+0x160>)
 8002490:	f004 fa52 	bl	8006938 <puts>
	if (CD74HC4051_Init(&hadc1) != 1) {
 8002494:	4836      	ldr	r0, [pc, #216]	@ (8002570 <STM32_InitRoutine+0x164>)
 8002496:	f7ff f98f 	bl	80017b8 <CD74HC4051_Init>
 800249a:	2801      	cmp	r0, #1
 800249c:	d030      	beq.n	8002500 <STM32_InitRoutine+0xf4>
	  printf("(-) CD74HC4051 failed...\r\n");
 800249e:	4835      	ldr	r0, [pc, #212]	@ (8002574 <STM32_InitRoutine+0x168>)
 80024a0:	f004 fa4a 	bl	8006938 <puts>
	packet.header_states.barometer = BMP280_Init(&bmp_data, BMP_SPI_PORT) == 1 ? 0x01 : 0x00;
 80024a4:	2102      	movs	r1, #2
 80024a6:	4834      	ldr	r0, [pc, #208]	@ (8002578 <STM32_InitRoutine+0x16c>)
 80024a8:	f7ff f960 	bl	800176c <BMP280_Init>
 80024ac:	2801      	cmp	r0, #1
 80024ae:	bf14      	ite	ne
 80024b0:	2000      	movne	r0, #0
 80024b2:	2001      	moveq	r0, #1
 80024b4:	4b2b      	ldr	r3, [pc, #172]	@ (8002564 <STM32_InitRoutine+0x158>)
 80024b6:	7118      	strb	r0, [r3, #4]
	printf(packet.header_states.barometer ? "(+) BMP280 succeeded...\r\n" : "(-) BMP280 failed...\r\n");
 80024b8:	2800      	cmp	r0, #0
 80024ba:	d03e      	beq.n	800253a <STM32_InitRoutine+0x12e>
 80024bc:	482f      	ldr	r0, [pc, #188]	@ (800257c <STM32_InitRoutine+0x170>)
 80024be:	f004 f9d3 	bl	8006868 <iprintf>
	packet.header_states.accelerometer = ICM20602_Init(&icm_data) == 0 ? 0x01 : 0x00;
 80024c2:	482f      	ldr	r0, [pc, #188]	@ (8002580 <STM32_InitRoutine+0x174>)
 80024c4:	f7ff faf8 	bl	8001ab8 <ICM20602_Init>
 80024c8:	fab0 f080 	clz	r0, r0
 80024cc:	0940      	lsrs	r0, r0, #5
 80024ce:	4b25      	ldr	r3, [pc, #148]	@ (8002564 <STM32_InitRoutine+0x158>)
 80024d0:	70d8      	strb	r0, [r3, #3]
	printf(packet.header_states.accelerometer ? "(+) ICM20602 succeeded...\r\n" : "(-) ICM20602 failed...\r\n");
 80024d2:	2800      	cmp	r0, #0
 80024d4:	d033      	beq.n	800253e <STM32_InitRoutine+0x132>
 80024d6:	482b      	ldr	r0, [pc, #172]	@ (8002584 <STM32_InitRoutine+0x178>)
 80024d8:	f004 f9c6 	bl	8006868 <iprintf>
	packet.header_states.gps = L76LM33_Init(GPS_USART_PORT) == 1 ? 0x01 : 0x00;
 80024dc:	2002      	movs	r0, #2
 80024de:	f7ff fb5b 	bl	8001b98 <L76LM33_Init>
 80024e2:	2801      	cmp	r0, #1
 80024e4:	bf14      	ite	ne
 80024e6:	2000      	movne	r0, #0
 80024e8:	2001      	moveq	r0, #1
 80024ea:	4b1e      	ldr	r3, [pc, #120]	@ (8002564 <STM32_InitRoutine+0x158>)
 80024ec:	7158      	strb	r0, [r3, #5]
	printf(packet.header_states.gps ? "(+) L76LM33 succeeded...\r\n" : "(-) L76LM33 failed...\r\n");
 80024ee:	b340      	cbz	r0, 8002542 <STM32_InitRoutine+0x136>
 80024f0:	4825      	ldr	r0, [pc, #148]	@ (8002588 <STM32_InitRoutine+0x17c>)
 80024f2:	f004 f9b9 	bl	8006868 <iprintf>
	HM10BLE_Init(&ble_data, BT_USART_PORT);
 80024f6:	2103      	movs	r1, #3
 80024f8:	4824      	ldr	r0, [pc, #144]	@ (800258c <STM32_InitRoutine+0x180>)
 80024fa:	f7ff f9ff 	bl	80018fc <HM10BLE_Init>
}
 80024fe:	bd70      	pop	{r4, r5, r6, pc}
		packet.header_states.pyro0 = CD74HC4051_AnRead(&hadc1, CHANNEL_0, PYRO_CHANNEL_0, VREF12);  // TODO: Verifier vref
 8002500:	4e23      	ldr	r6, [pc, #140]	@ (8002590 <STM32_InitRoutine+0x184>)
 8002502:	4d1b      	ldr	r5, [pc, #108]	@ (8002570 <STM32_InitRoutine+0x164>)
 8002504:	4633      	mov	r3, r6
 8002506:	2201      	movs	r2, #1
 8002508:	2100      	movs	r1, #0
 800250a:	4628      	mov	r0, r5
 800250c:	f7ff f986 	bl	800181c <CD74HC4051_AnRead>
 8002510:	4c14      	ldr	r4, [pc, #80]	@ (8002564 <STM32_InitRoutine+0x158>)
 8002512:	7060      	strb	r0, [r4, #1]
		packet.header_states.pyro1 = CD74HC4051_AnRead(&hadc1, CHANNEL_0, PYRO_CHANNEL_1, VREF12);  // TODO: Verifier vref
 8002514:	4633      	mov	r3, r6
 8002516:	2202      	movs	r2, #2
 8002518:	2100      	movs	r1, #0
 800251a:	4628      	mov	r0, r5
 800251c:	f7ff f97e 	bl	800181c <CD74HC4051_AnRead>
 8002520:	70a0      	strb	r0, [r4, #2]
		printf(" -> Pyro0 state: %i\r\n", packet.header_states.pyro0);
 8002522:	7861      	ldrb	r1, [r4, #1]
 8002524:	481b      	ldr	r0, [pc, #108]	@ (8002594 <STM32_InitRoutine+0x188>)
 8002526:	f004 f99f 	bl	8006868 <iprintf>
		printf(" -> Pyro1 state: %i\r\n", packet.header_states.pyro1);
 800252a:	78a1      	ldrb	r1, [r4, #2]
 800252c:	481a      	ldr	r0, [pc, #104]	@ (8002598 <STM32_InitRoutine+0x18c>)
 800252e:	f004 f99b 	bl	8006868 <iprintf>
		printf("(+) CD74HC4051 succeeded...\r\n");
 8002532:	481a      	ldr	r0, [pc, #104]	@ (800259c <STM32_InitRoutine+0x190>)
 8002534:	f004 fa00 	bl	8006938 <puts>
 8002538:	e7b4      	b.n	80024a4 <STM32_InitRoutine+0x98>
	printf(packet.header_states.barometer ? "(+) BMP280 succeeded...\r\n" : "(-) BMP280 failed...\r\n");
 800253a:	4819      	ldr	r0, [pc, #100]	@ (80025a0 <STM32_InitRoutine+0x194>)
 800253c:	e7bf      	b.n	80024be <STM32_InitRoutine+0xb2>
	printf(packet.header_states.accelerometer ? "(+) ICM20602 succeeded...\r\n" : "(-) ICM20602 failed...\r\n");
 800253e:	4819      	ldr	r0, [pc, #100]	@ (80025a4 <STM32_InitRoutine+0x198>)
 8002540:	e7ca      	b.n	80024d8 <STM32_InitRoutine+0xcc>
	printf(packet.header_states.gps ? "(+) L76LM33 succeeded...\r\n" : "(-) L76LM33 failed...\r\n");
 8002542:	4819      	ldr	r0, [pc, #100]	@ (80025a8 <STM32_InitRoutine+0x19c>)
 8002544:	e7d5      	b.n	80024f2 <STM32_InitRoutine+0xe6>
 8002546:	bf00      	nop
 8002548:	080087f4 	.word	0x080087f4
 800254c:	08008814 	.word	0x08008814
 8002550:	0800882c 	.word	0x0800882c
 8002554:	08008844 	.word	0x08008844
 8002558:	08008860 	.word	0x08008860
 800255c:	0800887c 	.word	0x0800887c
 8002560:	08008898 	.word	0x08008898
 8002564:	2000024c 	.word	0x2000024c
 8002568:	080088cc 	.word	0x080088cc
 800256c:	080088f0 	.word	0x080088f0
 8002570:	20000438 	.word	0x20000438
 8002574:	0800890c 	.word	0x0800890c
 8002578:	2000029c 	.word	0x2000029c
 800257c:	08008754 	.word	0x08008754
 8002580:	20000264 	.word	0x20000264
 8002584:	08008788 	.word	0x08008788
 8002588:	080087c0 	.word	0x080087c0
 800258c:	2000025c 	.word	0x2000025c
 8002590:	41400000 	.word	0x41400000
 8002594:	08008928 	.word	0x08008928
 8002598:	08008940 	.word	0x08008940
 800259c:	08008958 	.word	0x08008958
 80025a0:	08008770 	.word	0x08008770
 80025a4:	080087a4 	.word	0x080087a4
 80025a8:	080087dc 	.word	0x080087dc

080025ac <main>:
{
 80025ac:	b508      	push	{r3, lr}
	STM32_InitRoutine();
 80025ae:	f7ff ff2d 	bl	800240c <STM32_InitRoutine>
	HAL_Init();
 80025b2:	f000 fa1d 	bl	80029f0 <HAL_Init>
	SystemClock_Config();
 80025b6:	f7ff fee3 	bl	8002380 <SystemClock_Config>
	MX_USART1_UART_Init();
 80025ba:	f7ff fdd5 	bl	8002168 <MX_USART1_UART_Init>
	MX_USART2_UART_Init();
 80025be:	f7ff fded 	bl	800219c <MX_USART2_UART_Init>
	MX_USART3_UART_Init();
 80025c2:	f7ff fe05 	bl	80021d0 <MX_USART3_UART_Init>
	MX_TIM3_Init();
 80025c6:	f7ff fe1d 	bl	8002204 <MX_TIM3_Init>
	MX_TIM2_Init();
 80025ca:	f7ff fe6d 	bl	80022a8 <MX_TIM2_Init>
	MX_ADC1_Init();
 80025ce:	f7ff fe9f 	bl	8002310 <MX_ADC1_Init>
	MX_CRC_Init();
 80025d2:	f7ff fec7 	bl	8002364 <MX_CRC_Init>
	MX_FATFS_Init();
 80025d6:	f003 fab7 	bl	8005b48 <MX_FATFS_Init>
	while (1)
 80025da:	e7fe      	b.n	80025da <main+0x2e>

080025dc <HAL_MspInit>:
 80025dc:	b082      	sub	sp, #8
 80025de:	4b0e      	ldr	r3, [pc, #56]	@ (8002618 <HAL_MspInit+0x3c>)
 80025e0:	699a      	ldr	r2, [r3, #24]
 80025e2:	f042 0201 	orr.w	r2, r2, #1
 80025e6:	619a      	str	r2, [r3, #24]
 80025e8:	699a      	ldr	r2, [r3, #24]
 80025ea:	f002 0201 	and.w	r2, r2, #1
 80025ee:	9200      	str	r2, [sp, #0]
 80025f0:	9a00      	ldr	r2, [sp, #0]
 80025f2:	69da      	ldr	r2, [r3, #28]
 80025f4:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80025f8:	61da      	str	r2, [r3, #28]
 80025fa:	69db      	ldr	r3, [r3, #28]
 80025fc:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002600:	9301      	str	r3, [sp, #4]
 8002602:	9b01      	ldr	r3, [sp, #4]
 8002604:	4a05      	ldr	r2, [pc, #20]	@ (800261c <HAL_MspInit+0x40>)
 8002606:	6853      	ldr	r3, [r2, #4]
 8002608:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 800260c:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8002610:	6053      	str	r3, [r2, #4]
 8002612:	b002      	add	sp, #8
 8002614:	4770      	bx	lr
 8002616:	bf00      	nop
 8002618:	40021000 	.word	0x40021000
 800261c:	40010000 	.word	0x40010000

08002620 <HAL_ADC_MspInit>:
 8002620:	b500      	push	{lr}
 8002622:	b087      	sub	sp, #28
 8002624:	2300      	movs	r3, #0
 8002626:	9302      	str	r3, [sp, #8]
 8002628:	9303      	str	r3, [sp, #12]
 800262a:	9304      	str	r3, [sp, #16]
 800262c:	9305      	str	r3, [sp, #20]
 800262e:	6802      	ldr	r2, [r0, #0]
 8002630:	4b11      	ldr	r3, [pc, #68]	@ (8002678 <HAL_ADC_MspInit+0x58>)
 8002632:	429a      	cmp	r2, r3
 8002634:	d002      	beq.n	800263c <HAL_ADC_MspInit+0x1c>
 8002636:	b007      	add	sp, #28
 8002638:	f85d fb04 	ldr.w	pc, [sp], #4
 800263c:	f503 436c 	add.w	r3, r3, #60416	@ 0xec00
 8002640:	699a      	ldr	r2, [r3, #24]
 8002642:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8002646:	619a      	str	r2, [r3, #24]
 8002648:	699a      	ldr	r2, [r3, #24]
 800264a:	f402 7200 	and.w	r2, r2, #512	@ 0x200
 800264e:	9200      	str	r2, [sp, #0]
 8002650:	9a00      	ldr	r2, [sp, #0]
 8002652:	699a      	ldr	r2, [r3, #24]
 8002654:	f042 0204 	orr.w	r2, r2, #4
 8002658:	619a      	str	r2, [r3, #24]
 800265a:	699b      	ldr	r3, [r3, #24]
 800265c:	f003 0304 	and.w	r3, r3, #4
 8002660:	9301      	str	r3, [sp, #4]
 8002662:	9b01      	ldr	r3, [sp, #4]
 8002664:	2301      	movs	r3, #1
 8002666:	9302      	str	r3, [sp, #8]
 8002668:	2303      	movs	r3, #3
 800266a:	9303      	str	r3, [sp, #12]
 800266c:	a902      	add	r1, sp, #8
 800266e:	4803      	ldr	r0, [pc, #12]	@ (800267c <HAL_ADC_MspInit+0x5c>)
 8002670:	f001 f926 	bl	80038c0 <HAL_GPIO_Init>
 8002674:	e7df      	b.n	8002636 <HAL_ADC_MspInit+0x16>
 8002676:	bf00      	nop
 8002678:	40012400 	.word	0x40012400
 800267c:	40010800 	.word	0x40010800

08002680 <HAL_CRC_MspInit>:
 8002680:	6802      	ldr	r2, [r0, #0]
 8002682:	4b09      	ldr	r3, [pc, #36]	@ (80026a8 <HAL_CRC_MspInit+0x28>)
 8002684:	429a      	cmp	r2, r3
 8002686:	d000      	beq.n	800268a <HAL_CRC_MspInit+0xa>
 8002688:	4770      	bx	lr
 800268a:	b082      	sub	sp, #8
 800268c:	f5a3 5300 	sub.w	r3, r3, #8192	@ 0x2000
 8002690:	695a      	ldr	r2, [r3, #20]
 8002692:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8002696:	615a      	str	r2, [r3, #20]
 8002698:	695b      	ldr	r3, [r3, #20]
 800269a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800269e:	9301      	str	r3, [sp, #4]
 80026a0:	9b01      	ldr	r3, [sp, #4]
 80026a2:	b002      	add	sp, #8
 80026a4:	4770      	bx	lr
 80026a6:	bf00      	nop
 80026a8:	40023000 	.word	0x40023000

080026ac <HAL_TIM_Base_MspInit>:
 80026ac:	b082      	sub	sp, #8
 80026ae:	6803      	ldr	r3, [r0, #0]
 80026b0:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80026b4:	d004      	beq.n	80026c0 <HAL_TIM_Base_MspInit+0x14>
 80026b6:	4a0e      	ldr	r2, [pc, #56]	@ (80026f0 <HAL_TIM_Base_MspInit+0x44>)
 80026b8:	4293      	cmp	r3, r2
 80026ba:	d00d      	beq.n	80026d8 <HAL_TIM_Base_MspInit+0x2c>
 80026bc:	b002      	add	sp, #8
 80026be:	4770      	bx	lr
 80026c0:	f503 3304 	add.w	r3, r3, #135168	@ 0x21000
 80026c4:	69da      	ldr	r2, [r3, #28]
 80026c6:	f042 0201 	orr.w	r2, r2, #1
 80026ca:	61da      	str	r2, [r3, #28]
 80026cc:	69db      	ldr	r3, [r3, #28]
 80026ce:	f003 0301 	and.w	r3, r3, #1
 80026d2:	9300      	str	r3, [sp, #0]
 80026d4:	9b00      	ldr	r3, [sp, #0]
 80026d6:	e7f1      	b.n	80026bc <HAL_TIM_Base_MspInit+0x10>
 80026d8:	4b06      	ldr	r3, [pc, #24]	@ (80026f4 <HAL_TIM_Base_MspInit+0x48>)
 80026da:	69da      	ldr	r2, [r3, #28]
 80026dc:	f042 0202 	orr.w	r2, r2, #2
 80026e0:	61da      	str	r2, [r3, #28]
 80026e2:	69db      	ldr	r3, [r3, #28]
 80026e4:	f003 0302 	and.w	r3, r3, #2
 80026e8:	9301      	str	r3, [sp, #4]
 80026ea:	9b01      	ldr	r3, [sp, #4]
 80026ec:	e7e6      	b.n	80026bc <HAL_TIM_Base_MspInit+0x10>
 80026ee:	bf00      	nop
 80026f0:	40000400 	.word	0x40000400
 80026f4:	40021000 	.word	0x40021000

080026f8 <HAL_TIM_MspPostInit>:
 80026f8:	b500      	push	{lr}
 80026fa:	b087      	sub	sp, #28
 80026fc:	2300      	movs	r3, #0
 80026fe:	9302      	str	r3, [sp, #8]
 8002700:	9303      	str	r3, [sp, #12]
 8002702:	9304      	str	r3, [sp, #16]
 8002704:	9305      	str	r3, [sp, #20]
 8002706:	6802      	ldr	r2, [r0, #0]
 8002708:	4b0c      	ldr	r3, [pc, #48]	@ (800273c <HAL_TIM_MspPostInit+0x44>)
 800270a:	429a      	cmp	r2, r3
 800270c:	d002      	beq.n	8002714 <HAL_TIM_MspPostInit+0x1c>
 800270e:	b007      	add	sp, #28
 8002710:	f85d fb04 	ldr.w	pc, [sp], #4
 8002714:	f503 3303 	add.w	r3, r3, #134144	@ 0x20c00
 8002718:	699a      	ldr	r2, [r3, #24]
 800271a:	f042 0208 	orr.w	r2, r2, #8
 800271e:	619a      	str	r2, [r3, #24]
 8002720:	699b      	ldr	r3, [r3, #24]
 8002722:	f003 0308 	and.w	r3, r3, #8
 8002726:	9301      	str	r3, [sp, #4]
 8002728:	9b01      	ldr	r3, [sp, #4]
 800272a:	2302      	movs	r3, #2
 800272c:	9302      	str	r3, [sp, #8]
 800272e:	9303      	str	r3, [sp, #12]
 8002730:	9305      	str	r3, [sp, #20]
 8002732:	a902      	add	r1, sp, #8
 8002734:	4802      	ldr	r0, [pc, #8]	@ (8002740 <HAL_TIM_MspPostInit+0x48>)
 8002736:	f001 f8c3 	bl	80038c0 <HAL_GPIO_Init>
 800273a:	e7e8      	b.n	800270e <HAL_TIM_MspPostInit+0x16>
 800273c:	40000400 	.word	0x40000400
 8002740:	40010c00 	.word	0x40010c00

08002744 <HAL_UART_MspInit>:
 8002744:	b530      	push	{r4, r5, lr}
 8002746:	b08b      	sub	sp, #44	@ 0x2c
 8002748:	2300      	movs	r3, #0
 800274a:	9306      	str	r3, [sp, #24]
 800274c:	9307      	str	r3, [sp, #28]
 800274e:	9308      	str	r3, [sp, #32]
 8002750:	9309      	str	r3, [sp, #36]	@ 0x24
 8002752:	6803      	ldr	r3, [r0, #0]
 8002754:	4a51      	ldr	r2, [pc, #324]	@ (800289c <HAL_UART_MspInit+0x158>)
 8002756:	4293      	cmp	r3, r2
 8002758:	d007      	beq.n	800276a <HAL_UART_MspInit+0x26>
 800275a:	4a51      	ldr	r2, [pc, #324]	@ (80028a0 <HAL_UART_MspInit+0x15c>)
 800275c:	4293      	cmp	r3, r2
 800275e:	d03b      	beq.n	80027d8 <HAL_UART_MspInit+0x94>
 8002760:	4a50      	ldr	r2, [pc, #320]	@ (80028a4 <HAL_UART_MspInit+0x160>)
 8002762:	4293      	cmp	r3, r2
 8002764:	d068      	beq.n	8002838 <HAL_UART_MspInit+0xf4>
 8002766:	b00b      	add	sp, #44	@ 0x2c
 8002768:	bd30      	pop	{r4, r5, pc}
 800276a:	4b4f      	ldr	r3, [pc, #316]	@ (80028a8 <HAL_UART_MspInit+0x164>)
 800276c:	699a      	ldr	r2, [r3, #24]
 800276e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8002772:	619a      	str	r2, [r3, #24]
 8002774:	699a      	ldr	r2, [r3, #24]
 8002776:	f402 4280 	and.w	r2, r2, #16384	@ 0x4000
 800277a:	9200      	str	r2, [sp, #0]
 800277c:	9a00      	ldr	r2, [sp, #0]
 800277e:	699a      	ldr	r2, [r3, #24]
 8002780:	f042 0208 	orr.w	r2, r2, #8
 8002784:	619a      	str	r2, [r3, #24]
 8002786:	699b      	ldr	r3, [r3, #24]
 8002788:	f003 0308 	and.w	r3, r3, #8
 800278c:	9301      	str	r3, [sp, #4]
 800278e:	9b01      	ldr	r3, [sp, #4]
 8002790:	2340      	movs	r3, #64	@ 0x40
 8002792:	9306      	str	r3, [sp, #24]
 8002794:	2302      	movs	r3, #2
 8002796:	9307      	str	r3, [sp, #28]
 8002798:	2303      	movs	r3, #3
 800279a:	9309      	str	r3, [sp, #36]	@ 0x24
 800279c:	4d43      	ldr	r5, [pc, #268]	@ (80028ac <HAL_UART_MspInit+0x168>)
 800279e:	a906      	add	r1, sp, #24
 80027a0:	4628      	mov	r0, r5
 80027a2:	f001 f88d 	bl	80038c0 <HAL_GPIO_Init>
 80027a6:	2380      	movs	r3, #128	@ 0x80
 80027a8:	9306      	str	r3, [sp, #24]
 80027aa:	2400      	movs	r4, #0
 80027ac:	9407      	str	r4, [sp, #28]
 80027ae:	9408      	str	r4, [sp, #32]
 80027b0:	a906      	add	r1, sp, #24
 80027b2:	4628      	mov	r0, r5
 80027b4:	f001 f884 	bl	80038c0 <HAL_GPIO_Init>
 80027b8:	4a3d      	ldr	r2, [pc, #244]	@ (80028b0 <HAL_UART_MspInit+0x16c>)
 80027ba:	6853      	ldr	r3, [r2, #4]
 80027bc:	f043 63e0 	orr.w	r3, r3, #117440512	@ 0x7000000
 80027c0:	f043 0304 	orr.w	r3, r3, #4
 80027c4:	6053      	str	r3, [r2, #4]
 80027c6:	4622      	mov	r2, r4
 80027c8:	4621      	mov	r1, r4
 80027ca:	2025      	movs	r0, #37	@ 0x25
 80027cc:	f000 ff73 	bl	80036b6 <HAL_NVIC_SetPriority>
 80027d0:	2025      	movs	r0, #37	@ 0x25
 80027d2:	f000 ff8c 	bl	80036ee <HAL_NVIC_EnableIRQ>
 80027d6:	e7c6      	b.n	8002766 <HAL_UART_MspInit+0x22>
 80027d8:	4b33      	ldr	r3, [pc, #204]	@ (80028a8 <HAL_UART_MspInit+0x164>)
 80027da:	69da      	ldr	r2, [r3, #28]
 80027dc:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 80027e0:	61da      	str	r2, [r3, #28]
 80027e2:	69da      	ldr	r2, [r3, #28]
 80027e4:	f402 3200 	and.w	r2, r2, #131072	@ 0x20000
 80027e8:	9202      	str	r2, [sp, #8]
 80027ea:	9a02      	ldr	r2, [sp, #8]
 80027ec:	699a      	ldr	r2, [r3, #24]
 80027ee:	f042 0204 	orr.w	r2, r2, #4
 80027f2:	619a      	str	r2, [r3, #24]
 80027f4:	699b      	ldr	r3, [r3, #24]
 80027f6:	f003 0304 	and.w	r3, r3, #4
 80027fa:	9303      	str	r3, [sp, #12]
 80027fc:	9b03      	ldr	r3, [sp, #12]
 80027fe:	2304      	movs	r3, #4
 8002800:	9306      	str	r3, [sp, #24]
 8002802:	2302      	movs	r3, #2
 8002804:	9307      	str	r3, [sp, #28]
 8002806:	2303      	movs	r3, #3
 8002808:	9309      	str	r3, [sp, #36]	@ 0x24
 800280a:	4d2a      	ldr	r5, [pc, #168]	@ (80028b4 <HAL_UART_MspInit+0x170>)
 800280c:	a906      	add	r1, sp, #24
 800280e:	4628      	mov	r0, r5
 8002810:	f001 f856 	bl	80038c0 <HAL_GPIO_Init>
 8002814:	2308      	movs	r3, #8
 8002816:	9306      	str	r3, [sp, #24]
 8002818:	2400      	movs	r4, #0
 800281a:	9407      	str	r4, [sp, #28]
 800281c:	9408      	str	r4, [sp, #32]
 800281e:	a906      	add	r1, sp, #24
 8002820:	4628      	mov	r0, r5
 8002822:	f001 f84d 	bl	80038c0 <HAL_GPIO_Init>
 8002826:	4622      	mov	r2, r4
 8002828:	4621      	mov	r1, r4
 800282a:	2026      	movs	r0, #38	@ 0x26
 800282c:	f000 ff43 	bl	80036b6 <HAL_NVIC_SetPriority>
 8002830:	2026      	movs	r0, #38	@ 0x26
 8002832:	f000 ff5c 	bl	80036ee <HAL_NVIC_EnableIRQ>
 8002836:	e796      	b.n	8002766 <HAL_UART_MspInit+0x22>
 8002838:	4b1b      	ldr	r3, [pc, #108]	@ (80028a8 <HAL_UART_MspInit+0x164>)
 800283a:	69da      	ldr	r2, [r3, #28]
 800283c:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 8002840:	61da      	str	r2, [r3, #28]
 8002842:	69da      	ldr	r2, [r3, #28]
 8002844:	f402 2280 	and.w	r2, r2, #262144	@ 0x40000
 8002848:	9204      	str	r2, [sp, #16]
 800284a:	9a04      	ldr	r2, [sp, #16]
 800284c:	699a      	ldr	r2, [r3, #24]
 800284e:	f042 0208 	orr.w	r2, r2, #8
 8002852:	619a      	str	r2, [r3, #24]
 8002854:	699b      	ldr	r3, [r3, #24]
 8002856:	f003 0308 	and.w	r3, r3, #8
 800285a:	9305      	str	r3, [sp, #20]
 800285c:	9b05      	ldr	r3, [sp, #20]
 800285e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8002862:	9306      	str	r3, [sp, #24]
 8002864:	2302      	movs	r3, #2
 8002866:	9307      	str	r3, [sp, #28]
 8002868:	2303      	movs	r3, #3
 800286a:	9309      	str	r3, [sp, #36]	@ 0x24
 800286c:	4d0f      	ldr	r5, [pc, #60]	@ (80028ac <HAL_UART_MspInit+0x168>)
 800286e:	a906      	add	r1, sp, #24
 8002870:	4628      	mov	r0, r5
 8002872:	f001 f825 	bl	80038c0 <HAL_GPIO_Init>
 8002876:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800287a:	9306      	str	r3, [sp, #24]
 800287c:	2400      	movs	r4, #0
 800287e:	9407      	str	r4, [sp, #28]
 8002880:	9408      	str	r4, [sp, #32]
 8002882:	a906      	add	r1, sp, #24
 8002884:	4628      	mov	r0, r5
 8002886:	f001 f81b 	bl	80038c0 <HAL_GPIO_Init>
 800288a:	4622      	mov	r2, r4
 800288c:	4621      	mov	r1, r4
 800288e:	2027      	movs	r0, #39	@ 0x27
 8002890:	f000 ff11 	bl	80036b6 <HAL_NVIC_SetPriority>
 8002894:	2027      	movs	r0, #39	@ 0x27
 8002896:	f000 ff2a 	bl	80036ee <HAL_NVIC_EnableIRQ>
 800289a:	e764      	b.n	8002766 <HAL_UART_MspInit+0x22>
 800289c:	40013800 	.word	0x40013800
 80028a0:	40004400 	.word	0x40004400
 80028a4:	40004800 	.word	0x40004800
 80028a8:	40021000 	.word	0x40021000
 80028ac:	40010c00 	.word	0x40010c00
 80028b0:	40010000 	.word	0x40010000
 80028b4:	40010800 	.word	0x40010800

080028b8 <NMI_Handler>:
 80028b8:	e7fe      	b.n	80028b8 <NMI_Handler>

080028ba <HardFault_Handler>:
 80028ba:	e7fe      	b.n	80028ba <HardFault_Handler>

080028bc <MemManage_Handler>:
 80028bc:	e7fe      	b.n	80028bc <MemManage_Handler>

080028be <BusFault_Handler>:
 80028be:	e7fe      	b.n	80028be <BusFault_Handler>

080028c0 <UsageFault_Handler>:
 80028c0:	e7fe      	b.n	80028c0 <UsageFault_Handler>

080028c2 <SVC_Handler>:
 80028c2:	4770      	bx	lr

080028c4 <DebugMon_Handler>:
 80028c4:	4770      	bx	lr

080028c6 <PendSV_Handler>:
 80028c6:	4770      	bx	lr

080028c8 <SysTick_Handler>:
 80028c8:	b508      	push	{r3, lr}
 80028ca:	f000 f8d7 	bl	8002a7c <HAL_IncTick>
 80028ce:	bd08      	pop	{r3, pc}

080028d0 <USART1_IRQHandler>:
 80028d0:	b508      	push	{r3, lr}
 80028d2:	4802      	ldr	r0, [pc, #8]	@ (80028dc <USART1_IRQHandler+0xc>)
 80028d4:	f002 fc56 	bl	8005184 <HAL_UART_IRQHandler>
 80028d8:	bd08      	pop	{r3, pc}
 80028da:	bf00      	nop
 80028dc:	20000358 	.word	0x20000358

080028e0 <USART2_IRQHandler>:
 80028e0:	b508      	push	{r3, lr}
 80028e2:	4802      	ldr	r0, [pc, #8]	@ (80028ec <USART2_IRQHandler+0xc>)
 80028e4:	f002 fc4e 	bl	8005184 <HAL_UART_IRQHandler>
 80028e8:	bd08      	pop	{r3, pc}
 80028ea:	bf00      	nop
 80028ec:	20000310 	.word	0x20000310

080028f0 <USART3_IRQHandler>:
 80028f0:	b508      	push	{r3, lr}
 80028f2:	4802      	ldr	r0, [pc, #8]	@ (80028fc <USART3_IRQHandler+0xc>)
 80028f4:	f002 fc46 	bl	8005184 <HAL_UART_IRQHandler>
 80028f8:	bd08      	pop	{r3, pc}
 80028fa:	bf00      	nop
 80028fc:	200002c8 	.word	0x200002c8

08002900 <_getpid>:
 8002900:	2001      	movs	r0, #1
 8002902:	4770      	bx	lr

08002904 <_kill>:
 8002904:	b508      	push	{r3, lr}
 8002906:	f004 f959 	bl	8006bbc <__errno>
 800290a:	2316      	movs	r3, #22
 800290c:	6003      	str	r3, [r0, #0]
 800290e:	f04f 30ff 	mov.w	r0, #4294967295
 8002912:	bd08      	pop	{r3, pc}

08002914 <_exit>:
 8002914:	b508      	push	{r3, lr}
 8002916:	f04f 31ff 	mov.w	r1, #4294967295
 800291a:	f7ff fff3 	bl	8002904 <_kill>
 800291e:	e7fe      	b.n	800291e <_exit+0xa>

08002920 <_read>:
 8002920:	b570      	push	{r4, r5, r6, lr}
 8002922:	460c      	mov	r4, r1
 8002924:	4616      	mov	r6, r2
 8002926:	2500      	movs	r5, #0
 8002928:	e006      	b.n	8002938 <_read+0x18>
 800292a:	f3af 8000 	nop.w
 800292e:	4621      	mov	r1, r4
 8002930:	f801 0b01 	strb.w	r0, [r1], #1
 8002934:	3501      	adds	r5, #1
 8002936:	460c      	mov	r4, r1
 8002938:	42b5      	cmp	r5, r6
 800293a:	dbf6      	blt.n	800292a <_read+0xa>
 800293c:	4630      	mov	r0, r6
 800293e:	bd70      	pop	{r4, r5, r6, pc}

08002940 <_close>:
 8002940:	f04f 30ff 	mov.w	r0, #4294967295
 8002944:	4770      	bx	lr

08002946 <_fstat>:
 8002946:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800294a:	604b      	str	r3, [r1, #4]
 800294c:	2000      	movs	r0, #0
 800294e:	4770      	bx	lr

08002950 <_isatty>:
 8002950:	2001      	movs	r0, #1
 8002952:	4770      	bx	lr

08002954 <_lseek>:
 8002954:	2000      	movs	r0, #0
 8002956:	4770      	bx	lr

08002958 <_sbrk>:
 8002958:	b510      	push	{r4, lr}
 800295a:	4603      	mov	r3, r0
 800295c:	4a0c      	ldr	r2, [pc, #48]	@ (8002990 <_sbrk+0x38>)
 800295e:	490d      	ldr	r1, [pc, #52]	@ (8002994 <_sbrk+0x3c>)
 8002960:	480d      	ldr	r0, [pc, #52]	@ (8002998 <_sbrk+0x40>)
 8002962:	6800      	ldr	r0, [r0, #0]
 8002964:	b140      	cbz	r0, 8002978 <_sbrk+0x20>
 8002966:	480c      	ldr	r0, [pc, #48]	@ (8002998 <_sbrk+0x40>)
 8002968:	6800      	ldr	r0, [r0, #0]
 800296a:	4403      	add	r3, r0
 800296c:	1a52      	subs	r2, r2, r1
 800296e:	4293      	cmp	r3, r2
 8002970:	d806      	bhi.n	8002980 <_sbrk+0x28>
 8002972:	4a09      	ldr	r2, [pc, #36]	@ (8002998 <_sbrk+0x40>)
 8002974:	6013      	str	r3, [r2, #0]
 8002976:	bd10      	pop	{r4, pc}
 8002978:	4807      	ldr	r0, [pc, #28]	@ (8002998 <_sbrk+0x40>)
 800297a:	4c08      	ldr	r4, [pc, #32]	@ (800299c <_sbrk+0x44>)
 800297c:	6004      	str	r4, [r0, #0]
 800297e:	e7f2      	b.n	8002966 <_sbrk+0xe>
 8002980:	f004 f91c 	bl	8006bbc <__errno>
 8002984:	230c      	movs	r3, #12
 8002986:	6003      	str	r3, [r0, #0]
 8002988:	f04f 30ff 	mov.w	r0, #4294967295
 800298c:	e7f3      	b.n	8002976 <_sbrk+0x1e>
 800298e:	bf00      	nop
 8002990:	20005000 	.word	0x20005000
 8002994:	00000400 	.word	0x00000400
 8002998:	20000468 	.word	0x20000468
 800299c:	200005d0 	.word	0x200005d0

080029a0 <SystemInit>:
 80029a0:	4770      	bx	lr
	...

080029a4 <Reset_Handler>:
 80029a4:	f7ff fffc 	bl	80029a0 <SystemInit>
 80029a8:	480b      	ldr	r0, [pc, #44]	@ (80029d8 <LoopFillZerobss+0xe>)
 80029aa:	490c      	ldr	r1, [pc, #48]	@ (80029dc <LoopFillZerobss+0x12>)
 80029ac:	4a0c      	ldr	r2, [pc, #48]	@ (80029e0 <LoopFillZerobss+0x16>)
 80029ae:	2300      	movs	r3, #0
 80029b0:	e002      	b.n	80029b8 <LoopCopyDataInit>

080029b2 <CopyDataInit>:
 80029b2:	58d4      	ldr	r4, [r2, r3]
 80029b4:	50c4      	str	r4, [r0, r3]
 80029b6:	3304      	adds	r3, #4

080029b8 <LoopCopyDataInit>:
 80029b8:	18c4      	adds	r4, r0, r3
 80029ba:	428c      	cmp	r4, r1
 80029bc:	d3f9      	bcc.n	80029b2 <CopyDataInit>
 80029be:	4a09      	ldr	r2, [pc, #36]	@ (80029e4 <LoopFillZerobss+0x1a>)
 80029c0:	4c09      	ldr	r4, [pc, #36]	@ (80029e8 <LoopFillZerobss+0x1e>)
 80029c2:	2300      	movs	r3, #0
 80029c4:	e001      	b.n	80029ca <LoopFillZerobss>

080029c6 <FillZerobss>:
 80029c6:	6013      	str	r3, [r2, #0]
 80029c8:	3204      	adds	r2, #4

080029ca <LoopFillZerobss>:
 80029ca:	42a2      	cmp	r2, r4
 80029cc:	d3fb      	bcc.n	80029c6 <FillZerobss>
 80029ce:	f004 f8fb 	bl	8006bc8 <__libc_init_array>
 80029d2:	f7ff fdeb 	bl	80025ac <main>
 80029d6:	4770      	bx	lr
 80029d8:	20000000 	.word	0x20000000
 80029dc:	200001e8 	.word	0x200001e8
 80029e0:	08008d3c 	.word	0x08008d3c
 80029e4:	200001e8 	.word	0x200001e8
 80029e8:	200005d0 	.word	0x200005d0

080029ec <ADC1_2_IRQHandler>:
 80029ec:	e7fe      	b.n	80029ec <ADC1_2_IRQHandler>
	...

080029f0 <HAL_Init>:
 80029f0:	b580      	push	{r7, lr}
 80029f2:	af00      	add	r7, sp, #0
 80029f4:	4b08      	ldr	r3, [pc, #32]	@ (8002a18 <HAL_Init+0x28>)
 80029f6:	681b      	ldr	r3, [r3, #0]
 80029f8:	4a07      	ldr	r2, [pc, #28]	@ (8002a18 <HAL_Init+0x28>)
 80029fa:	f043 0310 	orr.w	r3, r3, #16
 80029fe:	6013      	str	r3, [r2, #0]
 8002a00:	2003      	movs	r0, #3
 8002a02:	f000 fe4d 	bl	80036a0 <HAL_NVIC_SetPriorityGrouping>
 8002a06:	200f      	movs	r0, #15
 8002a08:	f000 f808 	bl	8002a1c <HAL_InitTick>
 8002a0c:	f7ff fde6 	bl	80025dc <HAL_MspInit>
 8002a10:	2300      	movs	r3, #0
 8002a12:	4618      	mov	r0, r3
 8002a14:	bd80      	pop	{r7, pc}
 8002a16:	bf00      	nop
 8002a18:	40022000 	.word	0x40022000

08002a1c <HAL_InitTick>:
 8002a1c:	b580      	push	{r7, lr}
 8002a1e:	b082      	sub	sp, #8
 8002a20:	af00      	add	r7, sp, #0
 8002a22:	6078      	str	r0, [r7, #4]
 8002a24:	4b12      	ldr	r3, [pc, #72]	@ (8002a70 <HAL_InitTick+0x54>)
 8002a26:	681a      	ldr	r2, [r3, #0]
 8002a28:	4b12      	ldr	r3, [pc, #72]	@ (8002a74 <HAL_InitTick+0x58>)
 8002a2a:	781b      	ldrb	r3, [r3, #0]
 8002a2c:	4619      	mov	r1, r3
 8002a2e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8002a32:	fbb3 f3f1 	udiv	r3, r3, r1
 8002a36:	fbb2 f3f3 	udiv	r3, r2, r3
 8002a3a:	4618      	mov	r0, r3
 8002a3c:	f000 fe65 	bl	800370a <HAL_SYSTICK_Config>
 8002a40:	4603      	mov	r3, r0
 8002a42:	2b00      	cmp	r3, #0
 8002a44:	d001      	beq.n	8002a4a <HAL_InitTick+0x2e>
 8002a46:	2301      	movs	r3, #1
 8002a48:	e00e      	b.n	8002a68 <HAL_InitTick+0x4c>
 8002a4a:	687b      	ldr	r3, [r7, #4]
 8002a4c:	2b0f      	cmp	r3, #15
 8002a4e:	d80a      	bhi.n	8002a66 <HAL_InitTick+0x4a>
 8002a50:	2200      	movs	r2, #0
 8002a52:	6879      	ldr	r1, [r7, #4]
 8002a54:	f04f 30ff 	mov.w	r0, #4294967295
 8002a58:	f000 fe2d 	bl	80036b6 <HAL_NVIC_SetPriority>
 8002a5c:	4a06      	ldr	r2, [pc, #24]	@ (8002a78 <HAL_InitTick+0x5c>)
 8002a5e:	687b      	ldr	r3, [r7, #4]
 8002a60:	6013      	str	r3, [r2, #0]
 8002a62:	2300      	movs	r3, #0
 8002a64:	e000      	b.n	8002a68 <HAL_InitTick+0x4c>
 8002a66:	2301      	movs	r3, #1
 8002a68:	4618      	mov	r0, r3
 8002a6a:	3708      	adds	r7, #8
 8002a6c:	46bd      	mov	sp, r7
 8002a6e:	bd80      	pop	{r7, pc}
 8002a70:	20000000 	.word	0x20000000
 8002a74:	20000008 	.word	0x20000008
 8002a78:	20000004 	.word	0x20000004

08002a7c <HAL_IncTick>:
 8002a7c:	b480      	push	{r7}
 8002a7e:	af00      	add	r7, sp, #0
 8002a80:	4b05      	ldr	r3, [pc, #20]	@ (8002a98 <HAL_IncTick+0x1c>)
 8002a82:	781b      	ldrb	r3, [r3, #0]
 8002a84:	461a      	mov	r2, r3
 8002a86:	4b05      	ldr	r3, [pc, #20]	@ (8002a9c <HAL_IncTick+0x20>)
 8002a88:	681b      	ldr	r3, [r3, #0]
 8002a8a:	4413      	add	r3, r2
 8002a8c:	4a03      	ldr	r2, [pc, #12]	@ (8002a9c <HAL_IncTick+0x20>)
 8002a8e:	6013      	str	r3, [r2, #0]
 8002a90:	bf00      	nop
 8002a92:	46bd      	mov	sp, r7
 8002a94:	bc80      	pop	{r7}
 8002a96:	4770      	bx	lr
 8002a98:	20000008 	.word	0x20000008
 8002a9c:	2000046c 	.word	0x2000046c

08002aa0 <HAL_GetTick>:
 8002aa0:	b480      	push	{r7}
 8002aa2:	af00      	add	r7, sp, #0
 8002aa4:	4b02      	ldr	r3, [pc, #8]	@ (8002ab0 <HAL_GetTick+0x10>)
 8002aa6:	681b      	ldr	r3, [r3, #0]
 8002aa8:	4618      	mov	r0, r3
 8002aaa:	46bd      	mov	sp, r7
 8002aac:	bc80      	pop	{r7}
 8002aae:	4770      	bx	lr
 8002ab0:	2000046c 	.word	0x2000046c

08002ab4 <HAL_Delay>:
 8002ab4:	b580      	push	{r7, lr}
 8002ab6:	b084      	sub	sp, #16
 8002ab8:	af00      	add	r7, sp, #0
 8002aba:	6078      	str	r0, [r7, #4]
 8002abc:	f7ff fff0 	bl	8002aa0 <HAL_GetTick>
 8002ac0:	60b8      	str	r0, [r7, #8]
 8002ac2:	687b      	ldr	r3, [r7, #4]
 8002ac4:	60fb      	str	r3, [r7, #12]
 8002ac6:	68fb      	ldr	r3, [r7, #12]
 8002ac8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002acc:	d005      	beq.n	8002ada <HAL_Delay+0x26>
 8002ace:	4b0a      	ldr	r3, [pc, #40]	@ (8002af8 <HAL_Delay+0x44>)
 8002ad0:	781b      	ldrb	r3, [r3, #0]
 8002ad2:	461a      	mov	r2, r3
 8002ad4:	68fb      	ldr	r3, [r7, #12]
 8002ad6:	4413      	add	r3, r2
 8002ad8:	60fb      	str	r3, [r7, #12]
 8002ada:	bf00      	nop
 8002adc:	f7ff ffe0 	bl	8002aa0 <HAL_GetTick>
 8002ae0:	4602      	mov	r2, r0
 8002ae2:	68bb      	ldr	r3, [r7, #8]
 8002ae4:	1ad3      	subs	r3, r2, r3
 8002ae6:	68fa      	ldr	r2, [r7, #12]
 8002ae8:	429a      	cmp	r2, r3
 8002aea:	d8f7      	bhi.n	8002adc <HAL_Delay+0x28>
 8002aec:	bf00      	nop
 8002aee:	bf00      	nop
 8002af0:	3710      	adds	r7, #16
 8002af2:	46bd      	mov	sp, r7
 8002af4:	bd80      	pop	{r7, pc}
 8002af6:	bf00      	nop
 8002af8:	20000008 	.word	0x20000008

08002afc <HAL_ADC_Init>:
 8002afc:	b580      	push	{r7, lr}
 8002afe:	b086      	sub	sp, #24
 8002b00:	af00      	add	r7, sp, #0
 8002b02:	6078      	str	r0, [r7, #4]
 8002b04:	2300      	movs	r3, #0
 8002b06:	75fb      	strb	r3, [r7, #23]
 8002b08:	2300      	movs	r3, #0
 8002b0a:	613b      	str	r3, [r7, #16]
 8002b0c:	2300      	movs	r3, #0
 8002b0e:	60bb      	str	r3, [r7, #8]
 8002b10:	2300      	movs	r3, #0
 8002b12:	60fb      	str	r3, [r7, #12]
 8002b14:	687b      	ldr	r3, [r7, #4]
 8002b16:	2b00      	cmp	r3, #0
 8002b18:	d101      	bne.n	8002b1e <HAL_ADC_Init+0x22>
 8002b1a:	2301      	movs	r3, #1
 8002b1c:	e0be      	b.n	8002c9c <HAL_ADC_Init+0x1a0>
 8002b1e:	687b      	ldr	r3, [r7, #4]
 8002b20:	689b      	ldr	r3, [r3, #8]
 8002b22:	2b00      	cmp	r3, #0
 8002b24:	687b      	ldr	r3, [r7, #4]
 8002b26:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002b28:	2b00      	cmp	r3, #0
 8002b2a:	d109      	bne.n	8002b40 <HAL_ADC_Init+0x44>
 8002b2c:	687b      	ldr	r3, [r7, #4]
 8002b2e:	2200      	movs	r2, #0
 8002b30:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002b32:	687b      	ldr	r3, [r7, #4]
 8002b34:	2200      	movs	r2, #0
 8002b36:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002b3a:	6878      	ldr	r0, [r7, #4]
 8002b3c:	f7ff fd70 	bl	8002620 <HAL_ADC_MspInit>
 8002b40:	6878      	ldr	r0, [r7, #4]
 8002b42:	f000 fbf1 	bl	8003328 <ADC_ConversionStop_Disable>
 8002b46:	4603      	mov	r3, r0
 8002b48:	75fb      	strb	r3, [r7, #23]
 8002b4a:	687b      	ldr	r3, [r7, #4]
 8002b4c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002b4e:	f003 0310 	and.w	r3, r3, #16
 8002b52:	2b00      	cmp	r3, #0
 8002b54:	f040 8099 	bne.w	8002c8a <HAL_ADC_Init+0x18e>
 8002b58:	7dfb      	ldrb	r3, [r7, #23]
 8002b5a:	2b00      	cmp	r3, #0
 8002b5c:	f040 8095 	bne.w	8002c8a <HAL_ADC_Init+0x18e>
 8002b60:	687b      	ldr	r3, [r7, #4]
 8002b62:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002b64:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8002b68:	f023 0302 	bic.w	r3, r3, #2
 8002b6c:	f043 0202 	orr.w	r2, r3, #2
 8002b70:	687b      	ldr	r3, [r7, #4]
 8002b72:	629a      	str	r2, [r3, #40]	@ 0x28
 8002b74:	687b      	ldr	r3, [r7, #4]
 8002b76:	685a      	ldr	r2, [r3, #4]
 8002b78:	687b      	ldr	r3, [r7, #4]
 8002b7a:	69db      	ldr	r3, [r3, #28]
 8002b7c:	431a      	orrs	r2, r3
 8002b7e:	687b      	ldr	r3, [r7, #4]
 8002b80:	7b1b      	ldrb	r3, [r3, #12]
 8002b82:	005b      	lsls	r3, r3, #1
 8002b84:	4313      	orrs	r3, r2
 8002b86:	68ba      	ldr	r2, [r7, #8]
 8002b88:	4313      	orrs	r3, r2
 8002b8a:	60bb      	str	r3, [r7, #8]
 8002b8c:	687b      	ldr	r3, [r7, #4]
 8002b8e:	689b      	ldr	r3, [r3, #8]
 8002b90:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002b94:	d003      	beq.n	8002b9e <HAL_ADC_Init+0xa2>
 8002b96:	687b      	ldr	r3, [r7, #4]
 8002b98:	689b      	ldr	r3, [r3, #8]
 8002b9a:	2b01      	cmp	r3, #1
 8002b9c:	d102      	bne.n	8002ba4 <HAL_ADC_Init+0xa8>
 8002b9e:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8002ba2:	e000      	b.n	8002ba6 <HAL_ADC_Init+0xaa>
 8002ba4:	2300      	movs	r3, #0
 8002ba6:	693a      	ldr	r2, [r7, #16]
 8002ba8:	4313      	orrs	r3, r2
 8002baa:	613b      	str	r3, [r7, #16]
 8002bac:	687b      	ldr	r3, [r7, #4]
 8002bae:	7d1b      	ldrb	r3, [r3, #20]
 8002bb0:	2b01      	cmp	r3, #1
 8002bb2:	d119      	bne.n	8002be8 <HAL_ADC_Init+0xec>
 8002bb4:	687b      	ldr	r3, [r7, #4]
 8002bb6:	7b1b      	ldrb	r3, [r3, #12]
 8002bb8:	2b00      	cmp	r3, #0
 8002bba:	d109      	bne.n	8002bd0 <HAL_ADC_Init+0xd4>
 8002bbc:	687b      	ldr	r3, [r7, #4]
 8002bbe:	699b      	ldr	r3, [r3, #24]
 8002bc0:	3b01      	subs	r3, #1
 8002bc2:	035a      	lsls	r2, r3, #13
 8002bc4:	693b      	ldr	r3, [r7, #16]
 8002bc6:	4313      	orrs	r3, r2
 8002bc8:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8002bcc:	613b      	str	r3, [r7, #16]
 8002bce:	e00b      	b.n	8002be8 <HAL_ADC_Init+0xec>
 8002bd0:	687b      	ldr	r3, [r7, #4]
 8002bd2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002bd4:	f043 0220 	orr.w	r2, r3, #32
 8002bd8:	687b      	ldr	r3, [r7, #4]
 8002bda:	629a      	str	r2, [r3, #40]	@ 0x28
 8002bdc:	687b      	ldr	r3, [r7, #4]
 8002bde:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002be0:	f043 0201 	orr.w	r2, r3, #1
 8002be4:	687b      	ldr	r3, [r7, #4]
 8002be6:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002be8:	687b      	ldr	r3, [r7, #4]
 8002bea:	681b      	ldr	r3, [r3, #0]
 8002bec:	685b      	ldr	r3, [r3, #4]
 8002bee:	f423 4169 	bic.w	r1, r3, #59648	@ 0xe900
 8002bf2:	687b      	ldr	r3, [r7, #4]
 8002bf4:	681b      	ldr	r3, [r3, #0]
 8002bf6:	693a      	ldr	r2, [r7, #16]
 8002bf8:	430a      	orrs	r2, r1
 8002bfa:	605a      	str	r2, [r3, #4]
 8002bfc:	687b      	ldr	r3, [r7, #4]
 8002bfe:	681b      	ldr	r3, [r3, #0]
 8002c00:	689a      	ldr	r2, [r3, #8]
 8002c02:	4b28      	ldr	r3, [pc, #160]	@ (8002ca4 <HAL_ADC_Init+0x1a8>)
 8002c04:	4013      	ands	r3, r2
 8002c06:	687a      	ldr	r2, [r7, #4]
 8002c08:	6812      	ldr	r2, [r2, #0]
 8002c0a:	68b9      	ldr	r1, [r7, #8]
 8002c0c:	430b      	orrs	r3, r1
 8002c0e:	6093      	str	r3, [r2, #8]
 8002c10:	687b      	ldr	r3, [r7, #4]
 8002c12:	689b      	ldr	r3, [r3, #8]
 8002c14:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002c18:	d003      	beq.n	8002c22 <HAL_ADC_Init+0x126>
 8002c1a:	687b      	ldr	r3, [r7, #4]
 8002c1c:	689b      	ldr	r3, [r3, #8]
 8002c1e:	2b01      	cmp	r3, #1
 8002c20:	d104      	bne.n	8002c2c <HAL_ADC_Init+0x130>
 8002c22:	687b      	ldr	r3, [r7, #4]
 8002c24:	691b      	ldr	r3, [r3, #16]
 8002c26:	3b01      	subs	r3, #1
 8002c28:	051b      	lsls	r3, r3, #20
 8002c2a:	60fb      	str	r3, [r7, #12]
 8002c2c:	687b      	ldr	r3, [r7, #4]
 8002c2e:	681b      	ldr	r3, [r3, #0]
 8002c30:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002c32:	f423 0170 	bic.w	r1, r3, #15728640	@ 0xf00000
 8002c36:	687b      	ldr	r3, [r7, #4]
 8002c38:	681b      	ldr	r3, [r3, #0]
 8002c3a:	68fa      	ldr	r2, [r7, #12]
 8002c3c:	430a      	orrs	r2, r1
 8002c3e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002c40:	687b      	ldr	r3, [r7, #4]
 8002c42:	681b      	ldr	r3, [r3, #0]
 8002c44:	689a      	ldr	r2, [r3, #8]
 8002c46:	4b18      	ldr	r3, [pc, #96]	@ (8002ca8 <HAL_ADC_Init+0x1ac>)
 8002c48:	4013      	ands	r3, r2
 8002c4a:	68ba      	ldr	r2, [r7, #8]
 8002c4c:	429a      	cmp	r2, r3
 8002c4e:	d10b      	bne.n	8002c68 <HAL_ADC_Init+0x16c>
 8002c50:	687b      	ldr	r3, [r7, #4]
 8002c52:	2200      	movs	r2, #0
 8002c54:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002c56:	687b      	ldr	r3, [r7, #4]
 8002c58:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002c5a:	f023 0303 	bic.w	r3, r3, #3
 8002c5e:	f043 0201 	orr.w	r2, r3, #1
 8002c62:	687b      	ldr	r3, [r7, #4]
 8002c64:	629a      	str	r2, [r3, #40]	@ 0x28
 8002c66:	e018      	b.n	8002c9a <HAL_ADC_Init+0x19e>
 8002c68:	687b      	ldr	r3, [r7, #4]
 8002c6a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002c6c:	f023 0312 	bic.w	r3, r3, #18
 8002c70:	f043 0210 	orr.w	r2, r3, #16
 8002c74:	687b      	ldr	r3, [r7, #4]
 8002c76:	629a      	str	r2, [r3, #40]	@ 0x28
 8002c78:	687b      	ldr	r3, [r7, #4]
 8002c7a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002c7c:	f043 0201 	orr.w	r2, r3, #1
 8002c80:	687b      	ldr	r3, [r7, #4]
 8002c82:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002c84:	2301      	movs	r3, #1
 8002c86:	75fb      	strb	r3, [r7, #23]
 8002c88:	e007      	b.n	8002c9a <HAL_ADC_Init+0x19e>
 8002c8a:	687b      	ldr	r3, [r7, #4]
 8002c8c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002c8e:	f043 0210 	orr.w	r2, r3, #16
 8002c92:	687b      	ldr	r3, [r7, #4]
 8002c94:	629a      	str	r2, [r3, #40]	@ 0x28
 8002c96:	2301      	movs	r3, #1
 8002c98:	75fb      	strb	r3, [r7, #23]
 8002c9a:	7dfb      	ldrb	r3, [r7, #23]
 8002c9c:	4618      	mov	r0, r3
 8002c9e:	3718      	adds	r7, #24
 8002ca0:	46bd      	mov	sp, r7
 8002ca2:	bd80      	pop	{r7, pc}
 8002ca4:	ffe1f7fd 	.word	0xffe1f7fd
 8002ca8:	ff1f0efe 	.word	0xff1f0efe

08002cac <HAL_ADC_Start>:
 8002cac:	b580      	push	{r7, lr}
 8002cae:	b084      	sub	sp, #16
 8002cb0:	af00      	add	r7, sp, #0
 8002cb2:	6078      	str	r0, [r7, #4]
 8002cb4:	2300      	movs	r3, #0
 8002cb6:	73fb      	strb	r3, [r7, #15]
 8002cb8:	687b      	ldr	r3, [r7, #4]
 8002cba:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8002cbe:	2b01      	cmp	r3, #1
 8002cc0:	d101      	bne.n	8002cc6 <HAL_ADC_Start+0x1a>
 8002cc2:	2302      	movs	r3, #2
 8002cc4:	e098      	b.n	8002df8 <HAL_ADC_Start+0x14c>
 8002cc6:	687b      	ldr	r3, [r7, #4]
 8002cc8:	2201      	movs	r2, #1
 8002cca:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002cce:	6878      	ldr	r0, [r7, #4]
 8002cd0:	f000 fad0 	bl	8003274 <ADC_Enable>
 8002cd4:	4603      	mov	r3, r0
 8002cd6:	73fb      	strb	r3, [r7, #15]
 8002cd8:	7bfb      	ldrb	r3, [r7, #15]
 8002cda:	2b00      	cmp	r3, #0
 8002cdc:	f040 8087 	bne.w	8002dee <HAL_ADC_Start+0x142>
 8002ce0:	687b      	ldr	r3, [r7, #4]
 8002ce2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002ce4:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8002ce8:	f023 0301 	bic.w	r3, r3, #1
 8002cec:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8002cf0:	687b      	ldr	r3, [r7, #4]
 8002cf2:	629a      	str	r2, [r3, #40]	@ 0x28
 8002cf4:	687b      	ldr	r3, [r7, #4]
 8002cf6:	681b      	ldr	r3, [r3, #0]
 8002cf8:	4a41      	ldr	r2, [pc, #260]	@ (8002e00 <HAL_ADC_Start+0x154>)
 8002cfa:	4293      	cmp	r3, r2
 8002cfc:	d105      	bne.n	8002d0a <HAL_ADC_Start+0x5e>
 8002cfe:	4b41      	ldr	r3, [pc, #260]	@ (8002e04 <HAL_ADC_Start+0x158>)
 8002d00:	685b      	ldr	r3, [r3, #4]
 8002d02:	f403 2370 	and.w	r3, r3, #983040	@ 0xf0000
 8002d06:	2b00      	cmp	r3, #0
 8002d08:	d115      	bne.n	8002d36 <HAL_ADC_Start+0x8a>
 8002d0a:	687b      	ldr	r3, [r7, #4]
 8002d0c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002d0e:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 8002d12:	687b      	ldr	r3, [r7, #4]
 8002d14:	629a      	str	r2, [r3, #40]	@ 0x28
 8002d16:	687b      	ldr	r3, [r7, #4]
 8002d18:	681b      	ldr	r3, [r3, #0]
 8002d1a:	685b      	ldr	r3, [r3, #4]
 8002d1c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002d20:	2b00      	cmp	r3, #0
 8002d22:	d026      	beq.n	8002d72 <HAL_ADC_Start+0xc6>
 8002d24:	687b      	ldr	r3, [r7, #4]
 8002d26:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002d28:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8002d2c:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8002d30:	687b      	ldr	r3, [r7, #4]
 8002d32:	629a      	str	r2, [r3, #40]	@ 0x28
 8002d34:	e01d      	b.n	8002d72 <HAL_ADC_Start+0xc6>
 8002d36:	687b      	ldr	r3, [r7, #4]
 8002d38:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002d3a:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 8002d3e:	687b      	ldr	r3, [r7, #4]
 8002d40:	629a      	str	r2, [r3, #40]	@ 0x28
 8002d42:	687b      	ldr	r3, [r7, #4]
 8002d44:	681b      	ldr	r3, [r3, #0]
 8002d46:	4a2f      	ldr	r2, [pc, #188]	@ (8002e04 <HAL_ADC_Start+0x158>)
 8002d48:	4293      	cmp	r3, r2
 8002d4a:	d004      	beq.n	8002d56 <HAL_ADC_Start+0xaa>
 8002d4c:	687b      	ldr	r3, [r7, #4]
 8002d4e:	681b      	ldr	r3, [r3, #0]
 8002d50:	4a2b      	ldr	r2, [pc, #172]	@ (8002e00 <HAL_ADC_Start+0x154>)
 8002d52:	4293      	cmp	r3, r2
 8002d54:	d10d      	bne.n	8002d72 <HAL_ADC_Start+0xc6>
 8002d56:	4b2b      	ldr	r3, [pc, #172]	@ (8002e04 <HAL_ADC_Start+0x158>)
 8002d58:	685b      	ldr	r3, [r3, #4]
 8002d5a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002d5e:	2b00      	cmp	r3, #0
 8002d60:	d007      	beq.n	8002d72 <HAL_ADC_Start+0xc6>
 8002d62:	687b      	ldr	r3, [r7, #4]
 8002d64:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002d66:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8002d6a:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8002d6e:	687b      	ldr	r3, [r7, #4]
 8002d70:	629a      	str	r2, [r3, #40]	@ 0x28
 8002d72:	687b      	ldr	r3, [r7, #4]
 8002d74:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002d76:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002d7a:	2b00      	cmp	r3, #0
 8002d7c:	d006      	beq.n	8002d8c <HAL_ADC_Start+0xe0>
 8002d7e:	687b      	ldr	r3, [r7, #4]
 8002d80:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002d82:	f023 0206 	bic.w	r2, r3, #6
 8002d86:	687b      	ldr	r3, [r7, #4]
 8002d88:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002d8a:	e002      	b.n	8002d92 <HAL_ADC_Start+0xe6>
 8002d8c:	687b      	ldr	r3, [r7, #4]
 8002d8e:	2200      	movs	r2, #0
 8002d90:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002d92:	687b      	ldr	r3, [r7, #4]
 8002d94:	2200      	movs	r2, #0
 8002d96:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002d9a:	687b      	ldr	r3, [r7, #4]
 8002d9c:	681b      	ldr	r3, [r3, #0]
 8002d9e:	f06f 0202 	mvn.w	r2, #2
 8002da2:	601a      	str	r2, [r3, #0]
 8002da4:	687b      	ldr	r3, [r7, #4]
 8002da6:	681b      	ldr	r3, [r3, #0]
 8002da8:	689b      	ldr	r3, [r3, #8]
 8002daa:	f403 2360 	and.w	r3, r3, #917504	@ 0xe0000
 8002dae:	f5b3 2f60 	cmp.w	r3, #917504	@ 0xe0000
 8002db2:	d113      	bne.n	8002ddc <HAL_ADC_Start+0x130>
 8002db4:	687b      	ldr	r3, [r7, #4]
 8002db6:	681b      	ldr	r3, [r3, #0]
 8002db8:	4a11      	ldr	r2, [pc, #68]	@ (8002e00 <HAL_ADC_Start+0x154>)
 8002dba:	4293      	cmp	r3, r2
 8002dbc:	d105      	bne.n	8002dca <HAL_ADC_Start+0x11e>
 8002dbe:	4b11      	ldr	r3, [pc, #68]	@ (8002e04 <HAL_ADC_Start+0x158>)
 8002dc0:	685b      	ldr	r3, [r3, #4]
 8002dc2:	f403 2370 	and.w	r3, r3, #983040	@ 0xf0000
 8002dc6:	2b00      	cmp	r3, #0
 8002dc8:	d108      	bne.n	8002ddc <HAL_ADC_Start+0x130>
 8002dca:	687b      	ldr	r3, [r7, #4]
 8002dcc:	681b      	ldr	r3, [r3, #0]
 8002dce:	689a      	ldr	r2, [r3, #8]
 8002dd0:	687b      	ldr	r3, [r7, #4]
 8002dd2:	681b      	ldr	r3, [r3, #0]
 8002dd4:	f442 02a0 	orr.w	r2, r2, #5242880	@ 0x500000
 8002dd8:	609a      	str	r2, [r3, #8]
 8002dda:	e00c      	b.n	8002df6 <HAL_ADC_Start+0x14a>
 8002ddc:	687b      	ldr	r3, [r7, #4]
 8002dde:	681b      	ldr	r3, [r3, #0]
 8002de0:	689a      	ldr	r2, [r3, #8]
 8002de2:	687b      	ldr	r3, [r7, #4]
 8002de4:	681b      	ldr	r3, [r3, #0]
 8002de6:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 8002dea:	609a      	str	r2, [r3, #8]
 8002dec:	e003      	b.n	8002df6 <HAL_ADC_Start+0x14a>
 8002dee:	687b      	ldr	r3, [r7, #4]
 8002df0:	2200      	movs	r2, #0
 8002df2:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002df6:	7bfb      	ldrb	r3, [r7, #15]
 8002df8:	4618      	mov	r0, r3
 8002dfa:	3710      	adds	r7, #16
 8002dfc:	46bd      	mov	sp, r7
 8002dfe:	bd80      	pop	{r7, pc}
 8002e00:	40012800 	.word	0x40012800
 8002e04:	40012400 	.word	0x40012400

08002e08 <HAL_ADC_Stop>:
 8002e08:	b580      	push	{r7, lr}
 8002e0a:	b084      	sub	sp, #16
 8002e0c:	af00      	add	r7, sp, #0
 8002e0e:	6078      	str	r0, [r7, #4]
 8002e10:	2300      	movs	r3, #0
 8002e12:	73fb      	strb	r3, [r7, #15]
 8002e14:	687b      	ldr	r3, [r7, #4]
 8002e16:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8002e1a:	2b01      	cmp	r3, #1
 8002e1c:	d101      	bne.n	8002e22 <HAL_ADC_Stop+0x1a>
 8002e1e:	2302      	movs	r3, #2
 8002e20:	e01a      	b.n	8002e58 <HAL_ADC_Stop+0x50>
 8002e22:	687b      	ldr	r3, [r7, #4]
 8002e24:	2201      	movs	r2, #1
 8002e26:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002e2a:	6878      	ldr	r0, [r7, #4]
 8002e2c:	f000 fa7c 	bl	8003328 <ADC_ConversionStop_Disable>
 8002e30:	4603      	mov	r3, r0
 8002e32:	73fb      	strb	r3, [r7, #15]
 8002e34:	7bfb      	ldrb	r3, [r7, #15]
 8002e36:	2b00      	cmp	r3, #0
 8002e38:	d109      	bne.n	8002e4e <HAL_ADC_Stop+0x46>
 8002e3a:	687b      	ldr	r3, [r7, #4]
 8002e3c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002e3e:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8002e42:	f023 0301 	bic.w	r3, r3, #1
 8002e46:	f043 0201 	orr.w	r2, r3, #1
 8002e4a:	687b      	ldr	r3, [r7, #4]
 8002e4c:	629a      	str	r2, [r3, #40]	@ 0x28
 8002e4e:	687b      	ldr	r3, [r7, #4]
 8002e50:	2200      	movs	r2, #0
 8002e52:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002e56:	7bfb      	ldrb	r3, [r7, #15]
 8002e58:	4618      	mov	r0, r3
 8002e5a:	3710      	adds	r7, #16
 8002e5c:	46bd      	mov	sp, r7
 8002e5e:	bd80      	pop	{r7, pc}

08002e60 <HAL_ADC_PollForConversion>:
 8002e60:	b590      	push	{r4, r7, lr}
 8002e62:	b087      	sub	sp, #28
 8002e64:	af00      	add	r7, sp, #0
 8002e66:	6078      	str	r0, [r7, #4]
 8002e68:	6039      	str	r1, [r7, #0]
 8002e6a:	2300      	movs	r3, #0
 8002e6c:	617b      	str	r3, [r7, #20]
 8002e6e:	2300      	movs	r3, #0
 8002e70:	60fb      	str	r3, [r7, #12]
 8002e72:	2300      	movs	r3, #0
 8002e74:	613b      	str	r3, [r7, #16]
 8002e76:	f7ff fe13 	bl	8002aa0 <HAL_GetTick>
 8002e7a:	6178      	str	r0, [r7, #20]
 8002e7c:	687b      	ldr	r3, [r7, #4]
 8002e7e:	681b      	ldr	r3, [r3, #0]
 8002e80:	689b      	ldr	r3, [r3, #8]
 8002e82:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002e86:	2b00      	cmp	r3, #0
 8002e88:	d00b      	beq.n	8002ea2 <HAL_ADC_PollForConversion+0x42>
 8002e8a:	687b      	ldr	r3, [r7, #4]
 8002e8c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002e8e:	f043 0220 	orr.w	r2, r3, #32
 8002e92:	687b      	ldr	r3, [r7, #4]
 8002e94:	629a      	str	r2, [r3, #40]	@ 0x28
 8002e96:	687b      	ldr	r3, [r7, #4]
 8002e98:	2200      	movs	r2, #0
 8002e9a:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002e9e:	2301      	movs	r3, #1
 8002ea0:	e0d3      	b.n	800304a <HAL_ADC_PollForConversion+0x1ea>
 8002ea2:	687b      	ldr	r3, [r7, #4]
 8002ea4:	681b      	ldr	r3, [r3, #0]
 8002ea6:	685b      	ldr	r3, [r3, #4]
 8002ea8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002eac:	2b00      	cmp	r3, #0
 8002eae:	d131      	bne.n	8002f14 <HAL_ADC_PollForConversion+0xb4>
 8002eb0:	687b      	ldr	r3, [r7, #4]
 8002eb2:	681b      	ldr	r3, [r3, #0]
 8002eb4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002eb6:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
 8002eba:	2b00      	cmp	r3, #0
 8002ebc:	d12a      	bne.n	8002f14 <HAL_ADC_PollForConversion+0xb4>
 8002ebe:	e021      	b.n	8002f04 <HAL_ADC_PollForConversion+0xa4>
 8002ec0:	683b      	ldr	r3, [r7, #0]
 8002ec2:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002ec6:	d01d      	beq.n	8002f04 <HAL_ADC_PollForConversion+0xa4>
 8002ec8:	683b      	ldr	r3, [r7, #0]
 8002eca:	2b00      	cmp	r3, #0
 8002ecc:	d007      	beq.n	8002ede <HAL_ADC_PollForConversion+0x7e>
 8002ece:	f7ff fde7 	bl	8002aa0 <HAL_GetTick>
 8002ed2:	4602      	mov	r2, r0
 8002ed4:	697b      	ldr	r3, [r7, #20]
 8002ed6:	1ad3      	subs	r3, r2, r3
 8002ed8:	683a      	ldr	r2, [r7, #0]
 8002eda:	429a      	cmp	r2, r3
 8002edc:	d212      	bcs.n	8002f04 <HAL_ADC_PollForConversion+0xa4>
 8002ede:	687b      	ldr	r3, [r7, #4]
 8002ee0:	681b      	ldr	r3, [r3, #0]
 8002ee2:	681b      	ldr	r3, [r3, #0]
 8002ee4:	f003 0302 	and.w	r3, r3, #2
 8002ee8:	2b00      	cmp	r3, #0
 8002eea:	d10b      	bne.n	8002f04 <HAL_ADC_PollForConversion+0xa4>
 8002eec:	687b      	ldr	r3, [r7, #4]
 8002eee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002ef0:	f043 0204 	orr.w	r2, r3, #4
 8002ef4:	687b      	ldr	r3, [r7, #4]
 8002ef6:	629a      	str	r2, [r3, #40]	@ 0x28
 8002ef8:	687b      	ldr	r3, [r7, #4]
 8002efa:	2200      	movs	r2, #0
 8002efc:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002f00:	2303      	movs	r3, #3
 8002f02:	e0a2      	b.n	800304a <HAL_ADC_PollForConversion+0x1ea>
 8002f04:	687b      	ldr	r3, [r7, #4]
 8002f06:	681b      	ldr	r3, [r3, #0]
 8002f08:	681b      	ldr	r3, [r3, #0]
 8002f0a:	f003 0302 	and.w	r3, r3, #2
 8002f0e:	2b00      	cmp	r3, #0
 8002f10:	d0d6      	beq.n	8002ec0 <HAL_ADC_PollForConversion+0x60>
 8002f12:	e070      	b.n	8002ff6 <HAL_ADC_PollForConversion+0x196>
 8002f14:	4b4f      	ldr	r3, [pc, #316]	@ (8003054 <HAL_ADC_PollForConversion+0x1f4>)
 8002f16:	681c      	ldr	r4, [r3, #0]
 8002f18:	2002      	movs	r0, #2
 8002f1a:	f001 fb1d 	bl	8004558 <HAL_RCCEx_GetPeriphCLKFreq>
 8002f1e:	4603      	mov	r3, r0
 8002f20:	fbb4 f2f3 	udiv	r2, r4, r3
 8002f24:	687b      	ldr	r3, [r7, #4]
 8002f26:	681b      	ldr	r3, [r3, #0]
 8002f28:	6919      	ldr	r1, [r3, #16]
 8002f2a:	4b4b      	ldr	r3, [pc, #300]	@ (8003058 <HAL_ADC_PollForConversion+0x1f8>)
 8002f2c:	400b      	ands	r3, r1
 8002f2e:	2b00      	cmp	r3, #0
 8002f30:	d118      	bne.n	8002f64 <HAL_ADC_PollForConversion+0x104>
 8002f32:	687b      	ldr	r3, [r7, #4]
 8002f34:	681b      	ldr	r3, [r3, #0]
 8002f36:	68d9      	ldr	r1, [r3, #12]
 8002f38:	4b48      	ldr	r3, [pc, #288]	@ (800305c <HAL_ADC_PollForConversion+0x1fc>)
 8002f3a:	400b      	ands	r3, r1
 8002f3c:	2b00      	cmp	r3, #0
 8002f3e:	d111      	bne.n	8002f64 <HAL_ADC_PollForConversion+0x104>
 8002f40:	687b      	ldr	r3, [r7, #4]
 8002f42:	681b      	ldr	r3, [r3, #0]
 8002f44:	6919      	ldr	r1, [r3, #16]
 8002f46:	4b46      	ldr	r3, [pc, #280]	@ (8003060 <HAL_ADC_PollForConversion+0x200>)
 8002f48:	400b      	ands	r3, r1
 8002f4a:	2b00      	cmp	r3, #0
 8002f4c:	d108      	bne.n	8002f60 <HAL_ADC_PollForConversion+0x100>
 8002f4e:	687b      	ldr	r3, [r7, #4]
 8002f50:	681b      	ldr	r3, [r3, #0]
 8002f52:	68d9      	ldr	r1, [r3, #12]
 8002f54:	4b43      	ldr	r3, [pc, #268]	@ (8003064 <HAL_ADC_PollForConversion+0x204>)
 8002f56:	400b      	ands	r3, r1
 8002f58:	2b00      	cmp	r3, #0
 8002f5a:	d101      	bne.n	8002f60 <HAL_ADC_PollForConversion+0x100>
 8002f5c:	2314      	movs	r3, #20
 8002f5e:	e020      	b.n	8002fa2 <HAL_ADC_PollForConversion+0x142>
 8002f60:	2329      	movs	r3, #41	@ 0x29
 8002f62:	e01e      	b.n	8002fa2 <HAL_ADC_PollForConversion+0x142>
 8002f64:	687b      	ldr	r3, [r7, #4]
 8002f66:	681b      	ldr	r3, [r3, #0]
 8002f68:	6919      	ldr	r1, [r3, #16]
 8002f6a:	4b3d      	ldr	r3, [pc, #244]	@ (8003060 <HAL_ADC_PollForConversion+0x200>)
 8002f6c:	400b      	ands	r3, r1
 8002f6e:	2b00      	cmp	r3, #0
 8002f70:	d106      	bne.n	8002f80 <HAL_ADC_PollForConversion+0x120>
 8002f72:	687b      	ldr	r3, [r7, #4]
 8002f74:	681b      	ldr	r3, [r3, #0]
 8002f76:	68d9      	ldr	r1, [r3, #12]
 8002f78:	4b3a      	ldr	r3, [pc, #232]	@ (8003064 <HAL_ADC_PollForConversion+0x204>)
 8002f7a:	400b      	ands	r3, r1
 8002f7c:	2b00      	cmp	r3, #0
 8002f7e:	d00d      	beq.n	8002f9c <HAL_ADC_PollForConversion+0x13c>
 8002f80:	687b      	ldr	r3, [r7, #4]
 8002f82:	681b      	ldr	r3, [r3, #0]
 8002f84:	6919      	ldr	r1, [r3, #16]
 8002f86:	4b38      	ldr	r3, [pc, #224]	@ (8003068 <HAL_ADC_PollForConversion+0x208>)
 8002f88:	400b      	ands	r3, r1
 8002f8a:	2b00      	cmp	r3, #0
 8002f8c:	d108      	bne.n	8002fa0 <HAL_ADC_PollForConversion+0x140>
 8002f8e:	687b      	ldr	r3, [r7, #4]
 8002f90:	681b      	ldr	r3, [r3, #0]
 8002f92:	68d9      	ldr	r1, [r3, #12]
 8002f94:	4b34      	ldr	r3, [pc, #208]	@ (8003068 <HAL_ADC_PollForConversion+0x208>)
 8002f96:	400b      	ands	r3, r1
 8002f98:	2b00      	cmp	r3, #0
 8002f9a:	d101      	bne.n	8002fa0 <HAL_ADC_PollForConversion+0x140>
 8002f9c:	2354      	movs	r3, #84	@ 0x54
 8002f9e:	e000      	b.n	8002fa2 <HAL_ADC_PollForConversion+0x142>
 8002fa0:	23fc      	movs	r3, #252	@ 0xfc
 8002fa2:	fb02 f303 	mul.w	r3, r2, r3
 8002fa6:	613b      	str	r3, [r7, #16]
 8002fa8:	e021      	b.n	8002fee <HAL_ADC_PollForConversion+0x18e>
 8002faa:	683b      	ldr	r3, [r7, #0]
 8002fac:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002fb0:	d01a      	beq.n	8002fe8 <HAL_ADC_PollForConversion+0x188>
 8002fb2:	683b      	ldr	r3, [r7, #0]
 8002fb4:	2b00      	cmp	r3, #0
 8002fb6:	d007      	beq.n	8002fc8 <HAL_ADC_PollForConversion+0x168>
 8002fb8:	f7ff fd72 	bl	8002aa0 <HAL_GetTick>
 8002fbc:	4602      	mov	r2, r0
 8002fbe:	697b      	ldr	r3, [r7, #20]
 8002fc0:	1ad3      	subs	r3, r2, r3
 8002fc2:	683a      	ldr	r2, [r7, #0]
 8002fc4:	429a      	cmp	r2, r3
 8002fc6:	d20f      	bcs.n	8002fe8 <HAL_ADC_PollForConversion+0x188>
 8002fc8:	68fb      	ldr	r3, [r7, #12]
 8002fca:	693a      	ldr	r2, [r7, #16]
 8002fcc:	429a      	cmp	r2, r3
 8002fce:	d90b      	bls.n	8002fe8 <HAL_ADC_PollForConversion+0x188>
 8002fd0:	687b      	ldr	r3, [r7, #4]
 8002fd2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002fd4:	f043 0204 	orr.w	r2, r3, #4
 8002fd8:	687b      	ldr	r3, [r7, #4]
 8002fda:	629a      	str	r2, [r3, #40]	@ 0x28
 8002fdc:	687b      	ldr	r3, [r7, #4]
 8002fde:	2200      	movs	r2, #0
 8002fe0:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002fe4:	2303      	movs	r3, #3
 8002fe6:	e030      	b.n	800304a <HAL_ADC_PollForConversion+0x1ea>
 8002fe8:	68fb      	ldr	r3, [r7, #12]
 8002fea:	3301      	adds	r3, #1
 8002fec:	60fb      	str	r3, [r7, #12]
 8002fee:	68fb      	ldr	r3, [r7, #12]
 8002ff0:	693a      	ldr	r2, [r7, #16]
 8002ff2:	429a      	cmp	r2, r3
 8002ff4:	d8d9      	bhi.n	8002faa <HAL_ADC_PollForConversion+0x14a>
 8002ff6:	687b      	ldr	r3, [r7, #4]
 8002ff8:	681b      	ldr	r3, [r3, #0]
 8002ffa:	f06f 0212 	mvn.w	r2, #18
 8002ffe:	601a      	str	r2, [r3, #0]
 8003000:	687b      	ldr	r3, [r7, #4]
 8003002:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003004:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8003008:	687b      	ldr	r3, [r7, #4]
 800300a:	629a      	str	r2, [r3, #40]	@ 0x28
 800300c:	687b      	ldr	r3, [r7, #4]
 800300e:	681b      	ldr	r3, [r3, #0]
 8003010:	689b      	ldr	r3, [r3, #8]
 8003012:	f403 2360 	and.w	r3, r3, #917504	@ 0xe0000
 8003016:	f5b3 2f60 	cmp.w	r3, #917504	@ 0xe0000
 800301a:	d115      	bne.n	8003048 <HAL_ADC_PollForConversion+0x1e8>
 800301c:	687b      	ldr	r3, [r7, #4]
 800301e:	7b1b      	ldrb	r3, [r3, #12]
 8003020:	2b00      	cmp	r3, #0
 8003022:	d111      	bne.n	8003048 <HAL_ADC_PollForConversion+0x1e8>
 8003024:	687b      	ldr	r3, [r7, #4]
 8003026:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003028:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 800302c:	687b      	ldr	r3, [r7, #4]
 800302e:	629a      	str	r2, [r3, #40]	@ 0x28
 8003030:	687b      	ldr	r3, [r7, #4]
 8003032:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003034:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8003038:	2b00      	cmp	r3, #0
 800303a:	d105      	bne.n	8003048 <HAL_ADC_PollForConversion+0x1e8>
 800303c:	687b      	ldr	r3, [r7, #4]
 800303e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003040:	f043 0201 	orr.w	r2, r3, #1
 8003044:	687b      	ldr	r3, [r7, #4]
 8003046:	629a      	str	r2, [r3, #40]	@ 0x28
 8003048:	2300      	movs	r3, #0
 800304a:	4618      	mov	r0, r3
 800304c:	371c      	adds	r7, #28
 800304e:	46bd      	mov	sp, r7
 8003050:	bd90      	pop	{r4, r7, pc}
 8003052:	bf00      	nop
 8003054:	20000000 	.word	0x20000000
 8003058:	24924924 	.word	0x24924924
 800305c:	00924924 	.word	0x00924924
 8003060:	12492492 	.word	0x12492492
 8003064:	00492492 	.word	0x00492492
 8003068:	00249249 	.word	0x00249249

0800306c <HAL_ADC_GetValue>:
 800306c:	b480      	push	{r7}
 800306e:	b083      	sub	sp, #12
 8003070:	af00      	add	r7, sp, #0
 8003072:	6078      	str	r0, [r7, #4]
 8003074:	687b      	ldr	r3, [r7, #4]
 8003076:	681b      	ldr	r3, [r3, #0]
 8003078:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800307a:	4618      	mov	r0, r3
 800307c:	370c      	adds	r7, #12
 800307e:	46bd      	mov	sp, r7
 8003080:	bc80      	pop	{r7}
 8003082:	4770      	bx	lr

08003084 <HAL_ADC_ConfigChannel>:
 8003084:	b480      	push	{r7}
 8003086:	b085      	sub	sp, #20
 8003088:	af00      	add	r7, sp, #0
 800308a:	6078      	str	r0, [r7, #4]
 800308c:	6039      	str	r1, [r7, #0]
 800308e:	2300      	movs	r3, #0
 8003090:	73fb      	strb	r3, [r7, #15]
 8003092:	2300      	movs	r3, #0
 8003094:	60bb      	str	r3, [r7, #8]
 8003096:	687b      	ldr	r3, [r7, #4]
 8003098:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 800309c:	2b01      	cmp	r3, #1
 800309e:	d101      	bne.n	80030a4 <HAL_ADC_ConfigChannel+0x20>
 80030a0:	2302      	movs	r3, #2
 80030a2:	e0dc      	b.n	800325e <HAL_ADC_ConfigChannel+0x1da>
 80030a4:	687b      	ldr	r3, [r7, #4]
 80030a6:	2201      	movs	r2, #1
 80030a8:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80030ac:	683b      	ldr	r3, [r7, #0]
 80030ae:	685b      	ldr	r3, [r3, #4]
 80030b0:	2b06      	cmp	r3, #6
 80030b2:	d81c      	bhi.n	80030ee <HAL_ADC_ConfigChannel+0x6a>
 80030b4:	687b      	ldr	r3, [r7, #4]
 80030b6:	681b      	ldr	r3, [r3, #0]
 80030b8:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80030ba:	683b      	ldr	r3, [r7, #0]
 80030bc:	685a      	ldr	r2, [r3, #4]
 80030be:	4613      	mov	r3, r2
 80030c0:	009b      	lsls	r3, r3, #2
 80030c2:	4413      	add	r3, r2
 80030c4:	3b05      	subs	r3, #5
 80030c6:	221f      	movs	r2, #31
 80030c8:	fa02 f303 	lsl.w	r3, r2, r3
 80030cc:	43db      	mvns	r3, r3
 80030ce:	4019      	ands	r1, r3
 80030d0:	683b      	ldr	r3, [r7, #0]
 80030d2:	6818      	ldr	r0, [r3, #0]
 80030d4:	683b      	ldr	r3, [r7, #0]
 80030d6:	685a      	ldr	r2, [r3, #4]
 80030d8:	4613      	mov	r3, r2
 80030da:	009b      	lsls	r3, r3, #2
 80030dc:	4413      	add	r3, r2
 80030de:	3b05      	subs	r3, #5
 80030e0:	fa00 f203 	lsl.w	r2, r0, r3
 80030e4:	687b      	ldr	r3, [r7, #4]
 80030e6:	681b      	ldr	r3, [r3, #0]
 80030e8:	430a      	orrs	r2, r1
 80030ea:	635a      	str	r2, [r3, #52]	@ 0x34
 80030ec:	e03c      	b.n	8003168 <HAL_ADC_ConfigChannel+0xe4>
 80030ee:	683b      	ldr	r3, [r7, #0]
 80030f0:	685b      	ldr	r3, [r3, #4]
 80030f2:	2b0c      	cmp	r3, #12
 80030f4:	d81c      	bhi.n	8003130 <HAL_ADC_ConfigChannel+0xac>
 80030f6:	687b      	ldr	r3, [r7, #4]
 80030f8:	681b      	ldr	r3, [r3, #0]
 80030fa:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 80030fc:	683b      	ldr	r3, [r7, #0]
 80030fe:	685a      	ldr	r2, [r3, #4]
 8003100:	4613      	mov	r3, r2
 8003102:	009b      	lsls	r3, r3, #2
 8003104:	4413      	add	r3, r2
 8003106:	3b23      	subs	r3, #35	@ 0x23
 8003108:	221f      	movs	r2, #31
 800310a:	fa02 f303 	lsl.w	r3, r2, r3
 800310e:	43db      	mvns	r3, r3
 8003110:	4019      	ands	r1, r3
 8003112:	683b      	ldr	r3, [r7, #0]
 8003114:	6818      	ldr	r0, [r3, #0]
 8003116:	683b      	ldr	r3, [r7, #0]
 8003118:	685a      	ldr	r2, [r3, #4]
 800311a:	4613      	mov	r3, r2
 800311c:	009b      	lsls	r3, r3, #2
 800311e:	4413      	add	r3, r2
 8003120:	3b23      	subs	r3, #35	@ 0x23
 8003122:	fa00 f203 	lsl.w	r2, r0, r3
 8003126:	687b      	ldr	r3, [r7, #4]
 8003128:	681b      	ldr	r3, [r3, #0]
 800312a:	430a      	orrs	r2, r1
 800312c:	631a      	str	r2, [r3, #48]	@ 0x30
 800312e:	e01b      	b.n	8003168 <HAL_ADC_ConfigChannel+0xe4>
 8003130:	687b      	ldr	r3, [r7, #4]
 8003132:	681b      	ldr	r3, [r3, #0]
 8003134:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8003136:	683b      	ldr	r3, [r7, #0]
 8003138:	685a      	ldr	r2, [r3, #4]
 800313a:	4613      	mov	r3, r2
 800313c:	009b      	lsls	r3, r3, #2
 800313e:	4413      	add	r3, r2
 8003140:	3b41      	subs	r3, #65	@ 0x41
 8003142:	221f      	movs	r2, #31
 8003144:	fa02 f303 	lsl.w	r3, r2, r3
 8003148:	43db      	mvns	r3, r3
 800314a:	4019      	ands	r1, r3
 800314c:	683b      	ldr	r3, [r7, #0]
 800314e:	6818      	ldr	r0, [r3, #0]
 8003150:	683b      	ldr	r3, [r7, #0]
 8003152:	685a      	ldr	r2, [r3, #4]
 8003154:	4613      	mov	r3, r2
 8003156:	009b      	lsls	r3, r3, #2
 8003158:	4413      	add	r3, r2
 800315a:	3b41      	subs	r3, #65	@ 0x41
 800315c:	fa00 f203 	lsl.w	r2, r0, r3
 8003160:	687b      	ldr	r3, [r7, #4]
 8003162:	681b      	ldr	r3, [r3, #0]
 8003164:	430a      	orrs	r2, r1
 8003166:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003168:	683b      	ldr	r3, [r7, #0]
 800316a:	681b      	ldr	r3, [r3, #0]
 800316c:	2b09      	cmp	r3, #9
 800316e:	d91c      	bls.n	80031aa <HAL_ADC_ConfigChannel+0x126>
 8003170:	687b      	ldr	r3, [r7, #4]
 8003172:	681b      	ldr	r3, [r3, #0]
 8003174:	68d9      	ldr	r1, [r3, #12]
 8003176:	683b      	ldr	r3, [r7, #0]
 8003178:	681a      	ldr	r2, [r3, #0]
 800317a:	4613      	mov	r3, r2
 800317c:	005b      	lsls	r3, r3, #1
 800317e:	4413      	add	r3, r2
 8003180:	3b1e      	subs	r3, #30
 8003182:	2207      	movs	r2, #7
 8003184:	fa02 f303 	lsl.w	r3, r2, r3
 8003188:	43db      	mvns	r3, r3
 800318a:	4019      	ands	r1, r3
 800318c:	683b      	ldr	r3, [r7, #0]
 800318e:	6898      	ldr	r0, [r3, #8]
 8003190:	683b      	ldr	r3, [r7, #0]
 8003192:	681a      	ldr	r2, [r3, #0]
 8003194:	4613      	mov	r3, r2
 8003196:	005b      	lsls	r3, r3, #1
 8003198:	4413      	add	r3, r2
 800319a:	3b1e      	subs	r3, #30
 800319c:	fa00 f203 	lsl.w	r2, r0, r3
 80031a0:	687b      	ldr	r3, [r7, #4]
 80031a2:	681b      	ldr	r3, [r3, #0]
 80031a4:	430a      	orrs	r2, r1
 80031a6:	60da      	str	r2, [r3, #12]
 80031a8:	e019      	b.n	80031de <HAL_ADC_ConfigChannel+0x15a>
 80031aa:	687b      	ldr	r3, [r7, #4]
 80031ac:	681b      	ldr	r3, [r3, #0]
 80031ae:	6919      	ldr	r1, [r3, #16]
 80031b0:	683b      	ldr	r3, [r7, #0]
 80031b2:	681a      	ldr	r2, [r3, #0]
 80031b4:	4613      	mov	r3, r2
 80031b6:	005b      	lsls	r3, r3, #1
 80031b8:	4413      	add	r3, r2
 80031ba:	2207      	movs	r2, #7
 80031bc:	fa02 f303 	lsl.w	r3, r2, r3
 80031c0:	43db      	mvns	r3, r3
 80031c2:	4019      	ands	r1, r3
 80031c4:	683b      	ldr	r3, [r7, #0]
 80031c6:	6898      	ldr	r0, [r3, #8]
 80031c8:	683b      	ldr	r3, [r7, #0]
 80031ca:	681a      	ldr	r2, [r3, #0]
 80031cc:	4613      	mov	r3, r2
 80031ce:	005b      	lsls	r3, r3, #1
 80031d0:	4413      	add	r3, r2
 80031d2:	fa00 f203 	lsl.w	r2, r0, r3
 80031d6:	687b      	ldr	r3, [r7, #4]
 80031d8:	681b      	ldr	r3, [r3, #0]
 80031da:	430a      	orrs	r2, r1
 80031dc:	611a      	str	r2, [r3, #16]
 80031de:	683b      	ldr	r3, [r7, #0]
 80031e0:	681b      	ldr	r3, [r3, #0]
 80031e2:	2b10      	cmp	r3, #16
 80031e4:	d003      	beq.n	80031ee <HAL_ADC_ConfigChannel+0x16a>
 80031e6:	683b      	ldr	r3, [r7, #0]
 80031e8:	681b      	ldr	r3, [r3, #0]
 80031ea:	2b11      	cmp	r3, #17
 80031ec:	d132      	bne.n	8003254 <HAL_ADC_ConfigChannel+0x1d0>
 80031ee:	687b      	ldr	r3, [r7, #4]
 80031f0:	681b      	ldr	r3, [r3, #0]
 80031f2:	4a1d      	ldr	r2, [pc, #116]	@ (8003268 <HAL_ADC_ConfigChannel+0x1e4>)
 80031f4:	4293      	cmp	r3, r2
 80031f6:	d125      	bne.n	8003244 <HAL_ADC_ConfigChannel+0x1c0>
 80031f8:	687b      	ldr	r3, [r7, #4]
 80031fa:	681b      	ldr	r3, [r3, #0]
 80031fc:	689b      	ldr	r3, [r3, #8]
 80031fe:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8003202:	2b00      	cmp	r3, #0
 8003204:	d126      	bne.n	8003254 <HAL_ADC_ConfigChannel+0x1d0>
 8003206:	687b      	ldr	r3, [r7, #4]
 8003208:	681b      	ldr	r3, [r3, #0]
 800320a:	689a      	ldr	r2, [r3, #8]
 800320c:	687b      	ldr	r3, [r7, #4]
 800320e:	681b      	ldr	r3, [r3, #0]
 8003210:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8003214:	609a      	str	r2, [r3, #8]
 8003216:	683b      	ldr	r3, [r7, #0]
 8003218:	681b      	ldr	r3, [r3, #0]
 800321a:	2b10      	cmp	r3, #16
 800321c:	d11a      	bne.n	8003254 <HAL_ADC_ConfigChannel+0x1d0>
 800321e:	4b13      	ldr	r3, [pc, #76]	@ (800326c <HAL_ADC_ConfigChannel+0x1e8>)
 8003220:	681b      	ldr	r3, [r3, #0]
 8003222:	4a13      	ldr	r2, [pc, #76]	@ (8003270 <HAL_ADC_ConfigChannel+0x1ec>)
 8003224:	fba2 2303 	umull	r2, r3, r2, r3
 8003228:	0c9a      	lsrs	r2, r3, #18
 800322a:	4613      	mov	r3, r2
 800322c:	009b      	lsls	r3, r3, #2
 800322e:	4413      	add	r3, r2
 8003230:	005b      	lsls	r3, r3, #1
 8003232:	60bb      	str	r3, [r7, #8]
 8003234:	e002      	b.n	800323c <HAL_ADC_ConfigChannel+0x1b8>
 8003236:	68bb      	ldr	r3, [r7, #8]
 8003238:	3b01      	subs	r3, #1
 800323a:	60bb      	str	r3, [r7, #8]
 800323c:	68bb      	ldr	r3, [r7, #8]
 800323e:	2b00      	cmp	r3, #0
 8003240:	d1f9      	bne.n	8003236 <HAL_ADC_ConfigChannel+0x1b2>
 8003242:	e007      	b.n	8003254 <HAL_ADC_ConfigChannel+0x1d0>
 8003244:	687b      	ldr	r3, [r7, #4]
 8003246:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003248:	f043 0220 	orr.w	r2, r3, #32
 800324c:	687b      	ldr	r3, [r7, #4]
 800324e:	629a      	str	r2, [r3, #40]	@ 0x28
 8003250:	2301      	movs	r3, #1
 8003252:	73fb      	strb	r3, [r7, #15]
 8003254:	687b      	ldr	r3, [r7, #4]
 8003256:	2200      	movs	r2, #0
 8003258:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 800325c:	7bfb      	ldrb	r3, [r7, #15]
 800325e:	4618      	mov	r0, r3
 8003260:	3714      	adds	r7, #20
 8003262:	46bd      	mov	sp, r7
 8003264:	bc80      	pop	{r7}
 8003266:	4770      	bx	lr
 8003268:	40012400 	.word	0x40012400
 800326c:	20000000 	.word	0x20000000
 8003270:	431bde83 	.word	0x431bde83

08003274 <ADC_Enable>:
 8003274:	b580      	push	{r7, lr}
 8003276:	b084      	sub	sp, #16
 8003278:	af00      	add	r7, sp, #0
 800327a:	6078      	str	r0, [r7, #4]
 800327c:	2300      	movs	r3, #0
 800327e:	60fb      	str	r3, [r7, #12]
 8003280:	2300      	movs	r3, #0
 8003282:	60bb      	str	r3, [r7, #8]
 8003284:	687b      	ldr	r3, [r7, #4]
 8003286:	681b      	ldr	r3, [r3, #0]
 8003288:	689b      	ldr	r3, [r3, #8]
 800328a:	f003 0301 	and.w	r3, r3, #1
 800328e:	2b01      	cmp	r3, #1
 8003290:	d040      	beq.n	8003314 <ADC_Enable+0xa0>
 8003292:	687b      	ldr	r3, [r7, #4]
 8003294:	681b      	ldr	r3, [r3, #0]
 8003296:	689a      	ldr	r2, [r3, #8]
 8003298:	687b      	ldr	r3, [r7, #4]
 800329a:	681b      	ldr	r3, [r3, #0]
 800329c:	f042 0201 	orr.w	r2, r2, #1
 80032a0:	609a      	str	r2, [r3, #8]
 80032a2:	4b1f      	ldr	r3, [pc, #124]	@ (8003320 <ADC_Enable+0xac>)
 80032a4:	681b      	ldr	r3, [r3, #0]
 80032a6:	4a1f      	ldr	r2, [pc, #124]	@ (8003324 <ADC_Enable+0xb0>)
 80032a8:	fba2 2303 	umull	r2, r3, r2, r3
 80032ac:	0c9b      	lsrs	r3, r3, #18
 80032ae:	60bb      	str	r3, [r7, #8]
 80032b0:	e002      	b.n	80032b8 <ADC_Enable+0x44>
 80032b2:	68bb      	ldr	r3, [r7, #8]
 80032b4:	3b01      	subs	r3, #1
 80032b6:	60bb      	str	r3, [r7, #8]
 80032b8:	68bb      	ldr	r3, [r7, #8]
 80032ba:	2b00      	cmp	r3, #0
 80032bc:	d1f9      	bne.n	80032b2 <ADC_Enable+0x3e>
 80032be:	f7ff fbef 	bl	8002aa0 <HAL_GetTick>
 80032c2:	60f8      	str	r0, [r7, #12]
 80032c4:	e01f      	b.n	8003306 <ADC_Enable+0x92>
 80032c6:	f7ff fbeb 	bl	8002aa0 <HAL_GetTick>
 80032ca:	4602      	mov	r2, r0
 80032cc:	68fb      	ldr	r3, [r7, #12]
 80032ce:	1ad3      	subs	r3, r2, r3
 80032d0:	2b02      	cmp	r3, #2
 80032d2:	d918      	bls.n	8003306 <ADC_Enable+0x92>
 80032d4:	687b      	ldr	r3, [r7, #4]
 80032d6:	681b      	ldr	r3, [r3, #0]
 80032d8:	689b      	ldr	r3, [r3, #8]
 80032da:	f003 0301 	and.w	r3, r3, #1
 80032de:	2b01      	cmp	r3, #1
 80032e0:	d011      	beq.n	8003306 <ADC_Enable+0x92>
 80032e2:	687b      	ldr	r3, [r7, #4]
 80032e4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80032e6:	f043 0210 	orr.w	r2, r3, #16
 80032ea:	687b      	ldr	r3, [r7, #4]
 80032ec:	629a      	str	r2, [r3, #40]	@ 0x28
 80032ee:	687b      	ldr	r3, [r7, #4]
 80032f0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80032f2:	f043 0201 	orr.w	r2, r3, #1
 80032f6:	687b      	ldr	r3, [r7, #4]
 80032f8:	62da      	str	r2, [r3, #44]	@ 0x2c
 80032fa:	687b      	ldr	r3, [r7, #4]
 80032fc:	2200      	movs	r2, #0
 80032fe:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8003302:	2301      	movs	r3, #1
 8003304:	e007      	b.n	8003316 <ADC_Enable+0xa2>
 8003306:	687b      	ldr	r3, [r7, #4]
 8003308:	681b      	ldr	r3, [r3, #0]
 800330a:	689b      	ldr	r3, [r3, #8]
 800330c:	f003 0301 	and.w	r3, r3, #1
 8003310:	2b01      	cmp	r3, #1
 8003312:	d1d8      	bne.n	80032c6 <ADC_Enable+0x52>
 8003314:	2300      	movs	r3, #0
 8003316:	4618      	mov	r0, r3
 8003318:	3710      	adds	r7, #16
 800331a:	46bd      	mov	sp, r7
 800331c:	bd80      	pop	{r7, pc}
 800331e:	bf00      	nop
 8003320:	20000000 	.word	0x20000000
 8003324:	431bde83 	.word	0x431bde83

08003328 <ADC_ConversionStop_Disable>:
 8003328:	b580      	push	{r7, lr}
 800332a:	b084      	sub	sp, #16
 800332c:	af00      	add	r7, sp, #0
 800332e:	6078      	str	r0, [r7, #4]
 8003330:	2300      	movs	r3, #0
 8003332:	60fb      	str	r3, [r7, #12]
 8003334:	687b      	ldr	r3, [r7, #4]
 8003336:	681b      	ldr	r3, [r3, #0]
 8003338:	689b      	ldr	r3, [r3, #8]
 800333a:	f003 0301 	and.w	r3, r3, #1
 800333e:	2b01      	cmp	r3, #1
 8003340:	d12e      	bne.n	80033a0 <ADC_ConversionStop_Disable+0x78>
 8003342:	687b      	ldr	r3, [r7, #4]
 8003344:	681b      	ldr	r3, [r3, #0]
 8003346:	689a      	ldr	r2, [r3, #8]
 8003348:	687b      	ldr	r3, [r7, #4]
 800334a:	681b      	ldr	r3, [r3, #0]
 800334c:	f022 0201 	bic.w	r2, r2, #1
 8003350:	609a      	str	r2, [r3, #8]
 8003352:	f7ff fba5 	bl	8002aa0 <HAL_GetTick>
 8003356:	60f8      	str	r0, [r7, #12]
 8003358:	e01b      	b.n	8003392 <ADC_ConversionStop_Disable+0x6a>
 800335a:	f7ff fba1 	bl	8002aa0 <HAL_GetTick>
 800335e:	4602      	mov	r2, r0
 8003360:	68fb      	ldr	r3, [r7, #12]
 8003362:	1ad3      	subs	r3, r2, r3
 8003364:	2b02      	cmp	r3, #2
 8003366:	d914      	bls.n	8003392 <ADC_ConversionStop_Disable+0x6a>
 8003368:	687b      	ldr	r3, [r7, #4]
 800336a:	681b      	ldr	r3, [r3, #0]
 800336c:	689b      	ldr	r3, [r3, #8]
 800336e:	f003 0301 	and.w	r3, r3, #1
 8003372:	2b01      	cmp	r3, #1
 8003374:	d10d      	bne.n	8003392 <ADC_ConversionStop_Disable+0x6a>
 8003376:	687b      	ldr	r3, [r7, #4]
 8003378:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800337a:	f043 0210 	orr.w	r2, r3, #16
 800337e:	687b      	ldr	r3, [r7, #4]
 8003380:	629a      	str	r2, [r3, #40]	@ 0x28
 8003382:	687b      	ldr	r3, [r7, #4]
 8003384:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003386:	f043 0201 	orr.w	r2, r3, #1
 800338a:	687b      	ldr	r3, [r7, #4]
 800338c:	62da      	str	r2, [r3, #44]	@ 0x2c
 800338e:	2301      	movs	r3, #1
 8003390:	e007      	b.n	80033a2 <ADC_ConversionStop_Disable+0x7a>
 8003392:	687b      	ldr	r3, [r7, #4]
 8003394:	681b      	ldr	r3, [r3, #0]
 8003396:	689b      	ldr	r3, [r3, #8]
 8003398:	f003 0301 	and.w	r3, r3, #1
 800339c:	2b01      	cmp	r3, #1
 800339e:	d0dc      	beq.n	800335a <ADC_ConversionStop_Disable+0x32>
 80033a0:	2300      	movs	r3, #0
 80033a2:	4618      	mov	r0, r3
 80033a4:	3710      	adds	r7, #16
 80033a6:	46bd      	mov	sp, r7
 80033a8:	bd80      	pop	{r7, pc}
	...

080033ac <HAL_ADCEx_Calibration_Start>:
 80033ac:	b590      	push	{r4, r7, lr}
 80033ae:	b087      	sub	sp, #28
 80033b0:	af00      	add	r7, sp, #0
 80033b2:	6078      	str	r0, [r7, #4]
 80033b4:	2300      	movs	r3, #0
 80033b6:	75fb      	strb	r3, [r7, #23]
 80033b8:	2300      	movs	r3, #0
 80033ba:	60fb      	str	r3, [r7, #12]
 80033bc:	687b      	ldr	r3, [r7, #4]
 80033be:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 80033c2:	2b01      	cmp	r3, #1
 80033c4:	d101      	bne.n	80033ca <HAL_ADCEx_Calibration_Start+0x1e>
 80033c6:	2302      	movs	r3, #2
 80033c8:	e097      	b.n	80034fa <HAL_ADCEx_Calibration_Start+0x14e>
 80033ca:	687b      	ldr	r3, [r7, #4]
 80033cc:	2201      	movs	r2, #1
 80033ce:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80033d2:	6878      	ldr	r0, [r7, #4]
 80033d4:	f7ff ffa8 	bl	8003328 <ADC_ConversionStop_Disable>
 80033d8:	4603      	mov	r3, r0
 80033da:	75fb      	strb	r3, [r7, #23]
 80033dc:	6878      	ldr	r0, [r7, #4]
 80033de:	f7ff ff49 	bl	8003274 <ADC_Enable>
 80033e2:	4603      	mov	r3, r0
 80033e4:	75fb      	strb	r3, [r7, #23]
 80033e6:	7dfb      	ldrb	r3, [r7, #23]
 80033e8:	2b00      	cmp	r3, #0
 80033ea:	f040 8081 	bne.w	80034f0 <HAL_ADCEx_Calibration_Start+0x144>
 80033ee:	687b      	ldr	r3, [r7, #4]
 80033f0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80033f2:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 80033f6:	f023 0302 	bic.w	r3, r3, #2
 80033fa:	f043 0202 	orr.w	r2, r3, #2
 80033fe:	687b      	ldr	r3, [r7, #4]
 8003400:	629a      	str	r2, [r3, #40]	@ 0x28
 8003402:	4b40      	ldr	r3, [pc, #256]	@ (8003504 <HAL_ADCEx_Calibration_Start+0x158>)
 8003404:	681c      	ldr	r4, [r3, #0]
 8003406:	2002      	movs	r0, #2
 8003408:	f001 f8a6 	bl	8004558 <HAL_RCCEx_GetPeriphCLKFreq>
 800340c:	4603      	mov	r3, r0
 800340e:	fbb4 f3f3 	udiv	r3, r4, r3
 8003412:	005b      	lsls	r3, r3, #1
 8003414:	60fb      	str	r3, [r7, #12]
 8003416:	e002      	b.n	800341e <HAL_ADCEx_Calibration_Start+0x72>
 8003418:	68fb      	ldr	r3, [r7, #12]
 800341a:	3b01      	subs	r3, #1
 800341c:	60fb      	str	r3, [r7, #12]
 800341e:	68fb      	ldr	r3, [r7, #12]
 8003420:	2b00      	cmp	r3, #0
 8003422:	d1f9      	bne.n	8003418 <HAL_ADCEx_Calibration_Start+0x6c>
 8003424:	687b      	ldr	r3, [r7, #4]
 8003426:	681b      	ldr	r3, [r3, #0]
 8003428:	689a      	ldr	r2, [r3, #8]
 800342a:	687b      	ldr	r3, [r7, #4]
 800342c:	681b      	ldr	r3, [r3, #0]
 800342e:	f042 0208 	orr.w	r2, r2, #8
 8003432:	609a      	str	r2, [r3, #8]
 8003434:	f7ff fb34 	bl	8002aa0 <HAL_GetTick>
 8003438:	6138      	str	r0, [r7, #16]
 800343a:	e01b      	b.n	8003474 <HAL_ADCEx_Calibration_Start+0xc8>
 800343c:	f7ff fb30 	bl	8002aa0 <HAL_GetTick>
 8003440:	4602      	mov	r2, r0
 8003442:	693b      	ldr	r3, [r7, #16]
 8003444:	1ad3      	subs	r3, r2, r3
 8003446:	2b0a      	cmp	r3, #10
 8003448:	d914      	bls.n	8003474 <HAL_ADCEx_Calibration_Start+0xc8>
 800344a:	687b      	ldr	r3, [r7, #4]
 800344c:	681b      	ldr	r3, [r3, #0]
 800344e:	689b      	ldr	r3, [r3, #8]
 8003450:	f003 0308 	and.w	r3, r3, #8
 8003454:	2b00      	cmp	r3, #0
 8003456:	d00d      	beq.n	8003474 <HAL_ADCEx_Calibration_Start+0xc8>
 8003458:	687b      	ldr	r3, [r7, #4]
 800345a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800345c:	f023 0312 	bic.w	r3, r3, #18
 8003460:	f043 0210 	orr.w	r2, r3, #16
 8003464:	687b      	ldr	r3, [r7, #4]
 8003466:	629a      	str	r2, [r3, #40]	@ 0x28
 8003468:	687b      	ldr	r3, [r7, #4]
 800346a:	2200      	movs	r2, #0
 800346c:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8003470:	2301      	movs	r3, #1
 8003472:	e042      	b.n	80034fa <HAL_ADCEx_Calibration_Start+0x14e>
 8003474:	687b      	ldr	r3, [r7, #4]
 8003476:	681b      	ldr	r3, [r3, #0]
 8003478:	689b      	ldr	r3, [r3, #8]
 800347a:	f003 0308 	and.w	r3, r3, #8
 800347e:	2b00      	cmp	r3, #0
 8003480:	d1dc      	bne.n	800343c <HAL_ADCEx_Calibration_Start+0x90>
 8003482:	687b      	ldr	r3, [r7, #4]
 8003484:	681b      	ldr	r3, [r3, #0]
 8003486:	689a      	ldr	r2, [r3, #8]
 8003488:	687b      	ldr	r3, [r7, #4]
 800348a:	681b      	ldr	r3, [r3, #0]
 800348c:	f042 0204 	orr.w	r2, r2, #4
 8003490:	609a      	str	r2, [r3, #8]
 8003492:	f7ff fb05 	bl	8002aa0 <HAL_GetTick>
 8003496:	6138      	str	r0, [r7, #16]
 8003498:	e01b      	b.n	80034d2 <HAL_ADCEx_Calibration_Start+0x126>
 800349a:	f7ff fb01 	bl	8002aa0 <HAL_GetTick>
 800349e:	4602      	mov	r2, r0
 80034a0:	693b      	ldr	r3, [r7, #16]
 80034a2:	1ad3      	subs	r3, r2, r3
 80034a4:	2b0a      	cmp	r3, #10
 80034a6:	d914      	bls.n	80034d2 <HAL_ADCEx_Calibration_Start+0x126>
 80034a8:	687b      	ldr	r3, [r7, #4]
 80034aa:	681b      	ldr	r3, [r3, #0]
 80034ac:	689b      	ldr	r3, [r3, #8]
 80034ae:	f003 0304 	and.w	r3, r3, #4
 80034b2:	2b00      	cmp	r3, #0
 80034b4:	d00d      	beq.n	80034d2 <HAL_ADCEx_Calibration_Start+0x126>
 80034b6:	687b      	ldr	r3, [r7, #4]
 80034b8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80034ba:	f023 0312 	bic.w	r3, r3, #18
 80034be:	f043 0210 	orr.w	r2, r3, #16
 80034c2:	687b      	ldr	r3, [r7, #4]
 80034c4:	629a      	str	r2, [r3, #40]	@ 0x28
 80034c6:	687b      	ldr	r3, [r7, #4]
 80034c8:	2200      	movs	r2, #0
 80034ca:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80034ce:	2301      	movs	r3, #1
 80034d0:	e013      	b.n	80034fa <HAL_ADCEx_Calibration_Start+0x14e>
 80034d2:	687b      	ldr	r3, [r7, #4]
 80034d4:	681b      	ldr	r3, [r3, #0]
 80034d6:	689b      	ldr	r3, [r3, #8]
 80034d8:	f003 0304 	and.w	r3, r3, #4
 80034dc:	2b00      	cmp	r3, #0
 80034de:	d1dc      	bne.n	800349a <HAL_ADCEx_Calibration_Start+0xee>
 80034e0:	687b      	ldr	r3, [r7, #4]
 80034e2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80034e4:	f023 0303 	bic.w	r3, r3, #3
 80034e8:	f043 0201 	orr.w	r2, r3, #1
 80034ec:	687b      	ldr	r3, [r7, #4]
 80034ee:	629a      	str	r2, [r3, #40]	@ 0x28
 80034f0:	687b      	ldr	r3, [r7, #4]
 80034f2:	2200      	movs	r2, #0
 80034f4:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80034f8:	7dfb      	ldrb	r3, [r7, #23]
 80034fa:	4618      	mov	r0, r3
 80034fc:	371c      	adds	r7, #28
 80034fe:	46bd      	mov	sp, r7
 8003500:	bd90      	pop	{r4, r7, pc}
 8003502:	bf00      	nop
 8003504:	20000000 	.word	0x20000000

08003508 <__NVIC_SetPriorityGrouping>:
 8003508:	b480      	push	{r7}
 800350a:	b085      	sub	sp, #20
 800350c:	af00      	add	r7, sp, #0
 800350e:	6078      	str	r0, [r7, #4]
 8003510:	687b      	ldr	r3, [r7, #4]
 8003512:	f003 0307 	and.w	r3, r3, #7
 8003516:	60fb      	str	r3, [r7, #12]
 8003518:	4b0c      	ldr	r3, [pc, #48]	@ (800354c <__NVIC_SetPriorityGrouping+0x44>)
 800351a:	68db      	ldr	r3, [r3, #12]
 800351c:	60bb      	str	r3, [r7, #8]
 800351e:	68ba      	ldr	r2, [r7, #8]
 8003520:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8003524:	4013      	ands	r3, r2
 8003526:	60bb      	str	r3, [r7, #8]
 8003528:	68fb      	ldr	r3, [r7, #12]
 800352a:	021a      	lsls	r2, r3, #8
 800352c:	68bb      	ldr	r3, [r7, #8]
 800352e:	4313      	orrs	r3, r2
 8003530:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8003534:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8003538:	60bb      	str	r3, [r7, #8]
 800353a:	4a04      	ldr	r2, [pc, #16]	@ (800354c <__NVIC_SetPriorityGrouping+0x44>)
 800353c:	68bb      	ldr	r3, [r7, #8]
 800353e:	60d3      	str	r3, [r2, #12]
 8003540:	bf00      	nop
 8003542:	3714      	adds	r7, #20
 8003544:	46bd      	mov	sp, r7
 8003546:	bc80      	pop	{r7}
 8003548:	4770      	bx	lr
 800354a:	bf00      	nop
 800354c:	e000ed00 	.word	0xe000ed00

08003550 <__NVIC_GetPriorityGrouping>:
 8003550:	b480      	push	{r7}
 8003552:	af00      	add	r7, sp, #0
 8003554:	4b04      	ldr	r3, [pc, #16]	@ (8003568 <__NVIC_GetPriorityGrouping+0x18>)
 8003556:	68db      	ldr	r3, [r3, #12]
 8003558:	0a1b      	lsrs	r3, r3, #8
 800355a:	f003 0307 	and.w	r3, r3, #7
 800355e:	4618      	mov	r0, r3
 8003560:	46bd      	mov	sp, r7
 8003562:	bc80      	pop	{r7}
 8003564:	4770      	bx	lr
 8003566:	bf00      	nop
 8003568:	e000ed00 	.word	0xe000ed00

0800356c <__NVIC_EnableIRQ>:
 800356c:	b480      	push	{r7}
 800356e:	b083      	sub	sp, #12
 8003570:	af00      	add	r7, sp, #0
 8003572:	4603      	mov	r3, r0
 8003574:	71fb      	strb	r3, [r7, #7]
 8003576:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800357a:	2b00      	cmp	r3, #0
 800357c:	db0b      	blt.n	8003596 <__NVIC_EnableIRQ+0x2a>
 800357e:	79fb      	ldrb	r3, [r7, #7]
 8003580:	f003 021f 	and.w	r2, r3, #31
 8003584:	4906      	ldr	r1, [pc, #24]	@ (80035a0 <__NVIC_EnableIRQ+0x34>)
 8003586:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800358a:	095b      	lsrs	r3, r3, #5
 800358c:	2001      	movs	r0, #1
 800358e:	fa00 f202 	lsl.w	r2, r0, r2
 8003592:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003596:	bf00      	nop
 8003598:	370c      	adds	r7, #12
 800359a:	46bd      	mov	sp, r7
 800359c:	bc80      	pop	{r7}
 800359e:	4770      	bx	lr
 80035a0:	e000e100 	.word	0xe000e100

080035a4 <__NVIC_SetPriority>:
 80035a4:	b480      	push	{r7}
 80035a6:	b083      	sub	sp, #12
 80035a8:	af00      	add	r7, sp, #0
 80035aa:	4603      	mov	r3, r0
 80035ac:	6039      	str	r1, [r7, #0]
 80035ae:	71fb      	strb	r3, [r7, #7]
 80035b0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80035b4:	2b00      	cmp	r3, #0
 80035b6:	db0a      	blt.n	80035ce <__NVIC_SetPriority+0x2a>
 80035b8:	683b      	ldr	r3, [r7, #0]
 80035ba:	b2da      	uxtb	r2, r3
 80035bc:	490c      	ldr	r1, [pc, #48]	@ (80035f0 <__NVIC_SetPriority+0x4c>)
 80035be:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80035c2:	0112      	lsls	r2, r2, #4
 80035c4:	b2d2      	uxtb	r2, r2
 80035c6:	440b      	add	r3, r1
 80035c8:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80035cc:	e00a      	b.n	80035e4 <__NVIC_SetPriority+0x40>
 80035ce:	683b      	ldr	r3, [r7, #0]
 80035d0:	b2da      	uxtb	r2, r3
 80035d2:	4908      	ldr	r1, [pc, #32]	@ (80035f4 <__NVIC_SetPriority+0x50>)
 80035d4:	79fb      	ldrb	r3, [r7, #7]
 80035d6:	f003 030f 	and.w	r3, r3, #15
 80035da:	3b04      	subs	r3, #4
 80035dc:	0112      	lsls	r2, r2, #4
 80035de:	b2d2      	uxtb	r2, r2
 80035e0:	440b      	add	r3, r1
 80035e2:	761a      	strb	r2, [r3, #24]
 80035e4:	bf00      	nop
 80035e6:	370c      	adds	r7, #12
 80035e8:	46bd      	mov	sp, r7
 80035ea:	bc80      	pop	{r7}
 80035ec:	4770      	bx	lr
 80035ee:	bf00      	nop
 80035f0:	e000e100 	.word	0xe000e100
 80035f4:	e000ed00 	.word	0xe000ed00

080035f8 <NVIC_EncodePriority>:
 80035f8:	b480      	push	{r7}
 80035fa:	b089      	sub	sp, #36	@ 0x24
 80035fc:	af00      	add	r7, sp, #0
 80035fe:	60f8      	str	r0, [r7, #12]
 8003600:	60b9      	str	r1, [r7, #8]
 8003602:	607a      	str	r2, [r7, #4]
 8003604:	68fb      	ldr	r3, [r7, #12]
 8003606:	f003 0307 	and.w	r3, r3, #7
 800360a:	61fb      	str	r3, [r7, #28]
 800360c:	69fb      	ldr	r3, [r7, #28]
 800360e:	f1c3 0307 	rsb	r3, r3, #7
 8003612:	2b04      	cmp	r3, #4
 8003614:	bf28      	it	cs
 8003616:	2304      	movcs	r3, #4
 8003618:	61bb      	str	r3, [r7, #24]
 800361a:	69fb      	ldr	r3, [r7, #28]
 800361c:	3304      	adds	r3, #4
 800361e:	2b06      	cmp	r3, #6
 8003620:	d902      	bls.n	8003628 <NVIC_EncodePriority+0x30>
 8003622:	69fb      	ldr	r3, [r7, #28]
 8003624:	3b03      	subs	r3, #3
 8003626:	e000      	b.n	800362a <NVIC_EncodePriority+0x32>
 8003628:	2300      	movs	r3, #0
 800362a:	617b      	str	r3, [r7, #20]
 800362c:	f04f 32ff 	mov.w	r2, #4294967295
 8003630:	69bb      	ldr	r3, [r7, #24]
 8003632:	fa02 f303 	lsl.w	r3, r2, r3
 8003636:	43da      	mvns	r2, r3
 8003638:	68bb      	ldr	r3, [r7, #8]
 800363a:	401a      	ands	r2, r3
 800363c:	697b      	ldr	r3, [r7, #20]
 800363e:	409a      	lsls	r2, r3
 8003640:	f04f 31ff 	mov.w	r1, #4294967295
 8003644:	697b      	ldr	r3, [r7, #20]
 8003646:	fa01 f303 	lsl.w	r3, r1, r3
 800364a:	43d9      	mvns	r1, r3
 800364c:	687b      	ldr	r3, [r7, #4]
 800364e:	400b      	ands	r3, r1
 8003650:	4313      	orrs	r3, r2
 8003652:	4618      	mov	r0, r3
 8003654:	3724      	adds	r7, #36	@ 0x24
 8003656:	46bd      	mov	sp, r7
 8003658:	bc80      	pop	{r7}
 800365a:	4770      	bx	lr

0800365c <SysTick_Config>:
 800365c:	b580      	push	{r7, lr}
 800365e:	b082      	sub	sp, #8
 8003660:	af00      	add	r7, sp, #0
 8003662:	6078      	str	r0, [r7, #4]
 8003664:	687b      	ldr	r3, [r7, #4]
 8003666:	3b01      	subs	r3, #1
 8003668:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800366c:	d301      	bcc.n	8003672 <SysTick_Config+0x16>
 800366e:	2301      	movs	r3, #1
 8003670:	e00f      	b.n	8003692 <SysTick_Config+0x36>
 8003672:	4a0a      	ldr	r2, [pc, #40]	@ (800369c <SysTick_Config+0x40>)
 8003674:	687b      	ldr	r3, [r7, #4]
 8003676:	3b01      	subs	r3, #1
 8003678:	6053      	str	r3, [r2, #4]
 800367a:	210f      	movs	r1, #15
 800367c:	f04f 30ff 	mov.w	r0, #4294967295
 8003680:	f7ff ff90 	bl	80035a4 <__NVIC_SetPriority>
 8003684:	4b05      	ldr	r3, [pc, #20]	@ (800369c <SysTick_Config+0x40>)
 8003686:	2200      	movs	r2, #0
 8003688:	609a      	str	r2, [r3, #8]
 800368a:	4b04      	ldr	r3, [pc, #16]	@ (800369c <SysTick_Config+0x40>)
 800368c:	2207      	movs	r2, #7
 800368e:	601a      	str	r2, [r3, #0]
 8003690:	2300      	movs	r3, #0
 8003692:	4618      	mov	r0, r3
 8003694:	3708      	adds	r7, #8
 8003696:	46bd      	mov	sp, r7
 8003698:	bd80      	pop	{r7, pc}
 800369a:	bf00      	nop
 800369c:	e000e010 	.word	0xe000e010

080036a0 <HAL_NVIC_SetPriorityGrouping>:
 80036a0:	b580      	push	{r7, lr}
 80036a2:	b082      	sub	sp, #8
 80036a4:	af00      	add	r7, sp, #0
 80036a6:	6078      	str	r0, [r7, #4]
 80036a8:	6878      	ldr	r0, [r7, #4]
 80036aa:	f7ff ff2d 	bl	8003508 <__NVIC_SetPriorityGrouping>
 80036ae:	bf00      	nop
 80036b0:	3708      	adds	r7, #8
 80036b2:	46bd      	mov	sp, r7
 80036b4:	bd80      	pop	{r7, pc}

080036b6 <HAL_NVIC_SetPriority>:
 80036b6:	b580      	push	{r7, lr}
 80036b8:	b086      	sub	sp, #24
 80036ba:	af00      	add	r7, sp, #0
 80036bc:	4603      	mov	r3, r0
 80036be:	60b9      	str	r1, [r7, #8]
 80036c0:	607a      	str	r2, [r7, #4]
 80036c2:	73fb      	strb	r3, [r7, #15]
 80036c4:	2300      	movs	r3, #0
 80036c6:	617b      	str	r3, [r7, #20]
 80036c8:	f7ff ff42 	bl	8003550 <__NVIC_GetPriorityGrouping>
 80036cc:	6178      	str	r0, [r7, #20]
 80036ce:	687a      	ldr	r2, [r7, #4]
 80036d0:	68b9      	ldr	r1, [r7, #8]
 80036d2:	6978      	ldr	r0, [r7, #20]
 80036d4:	f7ff ff90 	bl	80035f8 <NVIC_EncodePriority>
 80036d8:	4602      	mov	r2, r0
 80036da:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80036de:	4611      	mov	r1, r2
 80036e0:	4618      	mov	r0, r3
 80036e2:	f7ff ff5f 	bl	80035a4 <__NVIC_SetPriority>
 80036e6:	bf00      	nop
 80036e8:	3718      	adds	r7, #24
 80036ea:	46bd      	mov	sp, r7
 80036ec:	bd80      	pop	{r7, pc}

080036ee <HAL_NVIC_EnableIRQ>:
 80036ee:	b580      	push	{r7, lr}
 80036f0:	b082      	sub	sp, #8
 80036f2:	af00      	add	r7, sp, #0
 80036f4:	4603      	mov	r3, r0
 80036f6:	71fb      	strb	r3, [r7, #7]
 80036f8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80036fc:	4618      	mov	r0, r3
 80036fe:	f7ff ff35 	bl	800356c <__NVIC_EnableIRQ>
 8003702:	bf00      	nop
 8003704:	3708      	adds	r7, #8
 8003706:	46bd      	mov	sp, r7
 8003708:	bd80      	pop	{r7, pc}

0800370a <HAL_SYSTICK_Config>:
 800370a:	b580      	push	{r7, lr}
 800370c:	b082      	sub	sp, #8
 800370e:	af00      	add	r7, sp, #0
 8003710:	6078      	str	r0, [r7, #4]
 8003712:	6878      	ldr	r0, [r7, #4]
 8003714:	f7ff ffa2 	bl	800365c <SysTick_Config>
 8003718:	4603      	mov	r3, r0
 800371a:	4618      	mov	r0, r3
 800371c:	3708      	adds	r7, #8
 800371e:	46bd      	mov	sp, r7
 8003720:	bd80      	pop	{r7, pc}

08003722 <HAL_CRC_Init>:
 8003722:	b580      	push	{r7, lr}
 8003724:	b082      	sub	sp, #8
 8003726:	af00      	add	r7, sp, #0
 8003728:	6078      	str	r0, [r7, #4]
 800372a:	687b      	ldr	r3, [r7, #4]
 800372c:	2b00      	cmp	r3, #0
 800372e:	d101      	bne.n	8003734 <HAL_CRC_Init+0x12>
 8003730:	2301      	movs	r3, #1
 8003732:	e00e      	b.n	8003752 <HAL_CRC_Init+0x30>
 8003734:	687b      	ldr	r3, [r7, #4]
 8003736:	795b      	ldrb	r3, [r3, #5]
 8003738:	b2db      	uxtb	r3, r3
 800373a:	2b00      	cmp	r3, #0
 800373c:	d105      	bne.n	800374a <HAL_CRC_Init+0x28>
 800373e:	687b      	ldr	r3, [r7, #4]
 8003740:	2200      	movs	r2, #0
 8003742:	711a      	strb	r2, [r3, #4]
 8003744:	6878      	ldr	r0, [r7, #4]
 8003746:	f7fe ff9b 	bl	8002680 <HAL_CRC_MspInit>
 800374a:	687b      	ldr	r3, [r7, #4]
 800374c:	2201      	movs	r2, #1
 800374e:	715a      	strb	r2, [r3, #5]
 8003750:	2300      	movs	r3, #0
 8003752:	4618      	mov	r0, r3
 8003754:	3708      	adds	r7, #8
 8003756:	46bd      	mov	sp, r7
 8003758:	bd80      	pop	{r7, pc}

0800375a <HAL_DMA_Abort>:
 800375a:	b480      	push	{r7}
 800375c:	b085      	sub	sp, #20
 800375e:	af00      	add	r7, sp, #0
 8003760:	6078      	str	r0, [r7, #4]
 8003762:	2300      	movs	r3, #0
 8003764:	73fb      	strb	r3, [r7, #15]
 8003766:	687b      	ldr	r3, [r7, #4]
 8003768:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 800376c:	b2db      	uxtb	r3, r3
 800376e:	2b02      	cmp	r3, #2
 8003770:	d008      	beq.n	8003784 <HAL_DMA_Abort+0x2a>
 8003772:	687b      	ldr	r3, [r7, #4]
 8003774:	2204      	movs	r2, #4
 8003776:	639a      	str	r2, [r3, #56]	@ 0x38
 8003778:	687b      	ldr	r3, [r7, #4]
 800377a:	2200      	movs	r2, #0
 800377c:	f883 2020 	strb.w	r2, [r3, #32]
 8003780:	2301      	movs	r3, #1
 8003782:	e020      	b.n	80037c6 <HAL_DMA_Abort+0x6c>
 8003784:	687b      	ldr	r3, [r7, #4]
 8003786:	681b      	ldr	r3, [r3, #0]
 8003788:	681a      	ldr	r2, [r3, #0]
 800378a:	687b      	ldr	r3, [r7, #4]
 800378c:	681b      	ldr	r3, [r3, #0]
 800378e:	f022 020e 	bic.w	r2, r2, #14
 8003792:	601a      	str	r2, [r3, #0]
 8003794:	687b      	ldr	r3, [r7, #4]
 8003796:	681b      	ldr	r3, [r3, #0]
 8003798:	681a      	ldr	r2, [r3, #0]
 800379a:	687b      	ldr	r3, [r7, #4]
 800379c:	681b      	ldr	r3, [r3, #0]
 800379e:	f022 0201 	bic.w	r2, r2, #1
 80037a2:	601a      	str	r2, [r3, #0]
 80037a4:	687b      	ldr	r3, [r7, #4]
 80037a6:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80037a8:	687b      	ldr	r3, [r7, #4]
 80037aa:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80037ac:	2101      	movs	r1, #1
 80037ae:	fa01 f202 	lsl.w	r2, r1, r2
 80037b2:	605a      	str	r2, [r3, #4]
 80037b4:	687b      	ldr	r3, [r7, #4]
 80037b6:	2201      	movs	r2, #1
 80037b8:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 80037bc:	687b      	ldr	r3, [r7, #4]
 80037be:	2200      	movs	r2, #0
 80037c0:	f883 2020 	strb.w	r2, [r3, #32]
 80037c4:	7bfb      	ldrb	r3, [r7, #15]
 80037c6:	4618      	mov	r0, r3
 80037c8:	3714      	adds	r7, #20
 80037ca:	46bd      	mov	sp, r7
 80037cc:	bc80      	pop	{r7}
 80037ce:	4770      	bx	lr

080037d0 <HAL_DMA_Abort_IT>:
 80037d0:	b580      	push	{r7, lr}
 80037d2:	b084      	sub	sp, #16
 80037d4:	af00      	add	r7, sp, #0
 80037d6:	6078      	str	r0, [r7, #4]
 80037d8:	2300      	movs	r3, #0
 80037da:	73fb      	strb	r3, [r7, #15]
 80037dc:	687b      	ldr	r3, [r7, #4]
 80037de:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 80037e2:	b2db      	uxtb	r3, r3
 80037e4:	2b02      	cmp	r3, #2
 80037e6:	d005      	beq.n	80037f4 <HAL_DMA_Abort_IT+0x24>
 80037e8:	687b      	ldr	r3, [r7, #4]
 80037ea:	2204      	movs	r2, #4
 80037ec:	639a      	str	r2, [r3, #56]	@ 0x38
 80037ee:	2301      	movs	r3, #1
 80037f0:	73fb      	strb	r3, [r7, #15]
 80037f2:	e051      	b.n	8003898 <HAL_DMA_Abort_IT+0xc8>
 80037f4:	687b      	ldr	r3, [r7, #4]
 80037f6:	681b      	ldr	r3, [r3, #0]
 80037f8:	681a      	ldr	r2, [r3, #0]
 80037fa:	687b      	ldr	r3, [r7, #4]
 80037fc:	681b      	ldr	r3, [r3, #0]
 80037fe:	f022 020e 	bic.w	r2, r2, #14
 8003802:	601a      	str	r2, [r3, #0]
 8003804:	687b      	ldr	r3, [r7, #4]
 8003806:	681b      	ldr	r3, [r3, #0]
 8003808:	681a      	ldr	r2, [r3, #0]
 800380a:	687b      	ldr	r3, [r7, #4]
 800380c:	681b      	ldr	r3, [r3, #0]
 800380e:	f022 0201 	bic.w	r2, r2, #1
 8003812:	601a      	str	r2, [r3, #0]
 8003814:	687b      	ldr	r3, [r7, #4]
 8003816:	681b      	ldr	r3, [r3, #0]
 8003818:	4a22      	ldr	r2, [pc, #136]	@ (80038a4 <HAL_DMA_Abort_IT+0xd4>)
 800381a:	4293      	cmp	r3, r2
 800381c:	d029      	beq.n	8003872 <HAL_DMA_Abort_IT+0xa2>
 800381e:	687b      	ldr	r3, [r7, #4]
 8003820:	681b      	ldr	r3, [r3, #0]
 8003822:	4a21      	ldr	r2, [pc, #132]	@ (80038a8 <HAL_DMA_Abort_IT+0xd8>)
 8003824:	4293      	cmp	r3, r2
 8003826:	d022      	beq.n	800386e <HAL_DMA_Abort_IT+0x9e>
 8003828:	687b      	ldr	r3, [r7, #4]
 800382a:	681b      	ldr	r3, [r3, #0]
 800382c:	4a1f      	ldr	r2, [pc, #124]	@ (80038ac <HAL_DMA_Abort_IT+0xdc>)
 800382e:	4293      	cmp	r3, r2
 8003830:	d01a      	beq.n	8003868 <HAL_DMA_Abort_IT+0x98>
 8003832:	687b      	ldr	r3, [r7, #4]
 8003834:	681b      	ldr	r3, [r3, #0]
 8003836:	4a1e      	ldr	r2, [pc, #120]	@ (80038b0 <HAL_DMA_Abort_IT+0xe0>)
 8003838:	4293      	cmp	r3, r2
 800383a:	d012      	beq.n	8003862 <HAL_DMA_Abort_IT+0x92>
 800383c:	687b      	ldr	r3, [r7, #4]
 800383e:	681b      	ldr	r3, [r3, #0]
 8003840:	4a1c      	ldr	r2, [pc, #112]	@ (80038b4 <HAL_DMA_Abort_IT+0xe4>)
 8003842:	4293      	cmp	r3, r2
 8003844:	d00a      	beq.n	800385c <HAL_DMA_Abort_IT+0x8c>
 8003846:	687b      	ldr	r3, [r7, #4]
 8003848:	681b      	ldr	r3, [r3, #0]
 800384a:	4a1b      	ldr	r2, [pc, #108]	@ (80038b8 <HAL_DMA_Abort_IT+0xe8>)
 800384c:	4293      	cmp	r3, r2
 800384e:	d102      	bne.n	8003856 <HAL_DMA_Abort_IT+0x86>
 8003850:	f44f 1380 	mov.w	r3, #1048576	@ 0x100000
 8003854:	e00e      	b.n	8003874 <HAL_DMA_Abort_IT+0xa4>
 8003856:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 800385a:	e00b      	b.n	8003874 <HAL_DMA_Abort_IT+0xa4>
 800385c:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8003860:	e008      	b.n	8003874 <HAL_DMA_Abort_IT+0xa4>
 8003862:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8003866:	e005      	b.n	8003874 <HAL_DMA_Abort_IT+0xa4>
 8003868:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800386c:	e002      	b.n	8003874 <HAL_DMA_Abort_IT+0xa4>
 800386e:	2310      	movs	r3, #16
 8003870:	e000      	b.n	8003874 <HAL_DMA_Abort_IT+0xa4>
 8003872:	2301      	movs	r3, #1
 8003874:	4a11      	ldr	r2, [pc, #68]	@ (80038bc <HAL_DMA_Abort_IT+0xec>)
 8003876:	6053      	str	r3, [r2, #4]
 8003878:	687b      	ldr	r3, [r7, #4]
 800387a:	2201      	movs	r2, #1
 800387c:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 8003880:	687b      	ldr	r3, [r7, #4]
 8003882:	2200      	movs	r2, #0
 8003884:	f883 2020 	strb.w	r2, [r3, #32]
 8003888:	687b      	ldr	r3, [r7, #4]
 800388a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800388c:	2b00      	cmp	r3, #0
 800388e:	d003      	beq.n	8003898 <HAL_DMA_Abort_IT+0xc8>
 8003890:	687b      	ldr	r3, [r7, #4]
 8003892:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003894:	6878      	ldr	r0, [r7, #4]
 8003896:	4798      	blx	r3
 8003898:	7bfb      	ldrb	r3, [r7, #15]
 800389a:	4618      	mov	r0, r3
 800389c:	3710      	adds	r7, #16
 800389e:	46bd      	mov	sp, r7
 80038a0:	bd80      	pop	{r7, pc}
 80038a2:	bf00      	nop
 80038a4:	40020008 	.word	0x40020008
 80038a8:	4002001c 	.word	0x4002001c
 80038ac:	40020030 	.word	0x40020030
 80038b0:	40020044 	.word	0x40020044
 80038b4:	40020058 	.word	0x40020058
 80038b8:	4002006c 	.word	0x4002006c
 80038bc:	40020000 	.word	0x40020000

080038c0 <HAL_GPIO_Init>:
 80038c0:	b480      	push	{r7}
 80038c2:	b08b      	sub	sp, #44	@ 0x2c
 80038c4:	af00      	add	r7, sp, #0
 80038c6:	6078      	str	r0, [r7, #4]
 80038c8:	6039      	str	r1, [r7, #0]
 80038ca:	2300      	movs	r3, #0
 80038cc:	627b      	str	r3, [r7, #36]	@ 0x24
 80038ce:	2300      	movs	r3, #0
 80038d0:	623b      	str	r3, [r7, #32]
 80038d2:	e169      	b.n	8003ba8 <HAL_GPIO_Init+0x2e8>
 80038d4:	2201      	movs	r2, #1
 80038d6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80038d8:	fa02 f303 	lsl.w	r3, r2, r3
 80038dc:	61fb      	str	r3, [r7, #28]
 80038de:	683b      	ldr	r3, [r7, #0]
 80038e0:	681b      	ldr	r3, [r3, #0]
 80038e2:	69fa      	ldr	r2, [r7, #28]
 80038e4:	4013      	ands	r3, r2
 80038e6:	61bb      	str	r3, [r7, #24]
 80038e8:	69ba      	ldr	r2, [r7, #24]
 80038ea:	69fb      	ldr	r3, [r7, #28]
 80038ec:	429a      	cmp	r2, r3
 80038ee:	f040 8158 	bne.w	8003ba2 <HAL_GPIO_Init+0x2e2>
 80038f2:	683b      	ldr	r3, [r7, #0]
 80038f4:	685b      	ldr	r3, [r3, #4]
 80038f6:	4a9a      	ldr	r2, [pc, #616]	@ (8003b60 <HAL_GPIO_Init+0x2a0>)
 80038f8:	4293      	cmp	r3, r2
 80038fa:	d05e      	beq.n	80039ba <HAL_GPIO_Init+0xfa>
 80038fc:	4a98      	ldr	r2, [pc, #608]	@ (8003b60 <HAL_GPIO_Init+0x2a0>)
 80038fe:	4293      	cmp	r3, r2
 8003900:	d875      	bhi.n	80039ee <HAL_GPIO_Init+0x12e>
 8003902:	4a98      	ldr	r2, [pc, #608]	@ (8003b64 <HAL_GPIO_Init+0x2a4>)
 8003904:	4293      	cmp	r3, r2
 8003906:	d058      	beq.n	80039ba <HAL_GPIO_Init+0xfa>
 8003908:	4a96      	ldr	r2, [pc, #600]	@ (8003b64 <HAL_GPIO_Init+0x2a4>)
 800390a:	4293      	cmp	r3, r2
 800390c:	d86f      	bhi.n	80039ee <HAL_GPIO_Init+0x12e>
 800390e:	4a96      	ldr	r2, [pc, #600]	@ (8003b68 <HAL_GPIO_Init+0x2a8>)
 8003910:	4293      	cmp	r3, r2
 8003912:	d052      	beq.n	80039ba <HAL_GPIO_Init+0xfa>
 8003914:	4a94      	ldr	r2, [pc, #592]	@ (8003b68 <HAL_GPIO_Init+0x2a8>)
 8003916:	4293      	cmp	r3, r2
 8003918:	d869      	bhi.n	80039ee <HAL_GPIO_Init+0x12e>
 800391a:	4a94      	ldr	r2, [pc, #592]	@ (8003b6c <HAL_GPIO_Init+0x2ac>)
 800391c:	4293      	cmp	r3, r2
 800391e:	d04c      	beq.n	80039ba <HAL_GPIO_Init+0xfa>
 8003920:	4a92      	ldr	r2, [pc, #584]	@ (8003b6c <HAL_GPIO_Init+0x2ac>)
 8003922:	4293      	cmp	r3, r2
 8003924:	d863      	bhi.n	80039ee <HAL_GPIO_Init+0x12e>
 8003926:	4a92      	ldr	r2, [pc, #584]	@ (8003b70 <HAL_GPIO_Init+0x2b0>)
 8003928:	4293      	cmp	r3, r2
 800392a:	d046      	beq.n	80039ba <HAL_GPIO_Init+0xfa>
 800392c:	4a90      	ldr	r2, [pc, #576]	@ (8003b70 <HAL_GPIO_Init+0x2b0>)
 800392e:	4293      	cmp	r3, r2
 8003930:	d85d      	bhi.n	80039ee <HAL_GPIO_Init+0x12e>
 8003932:	2b12      	cmp	r3, #18
 8003934:	d82a      	bhi.n	800398c <HAL_GPIO_Init+0xcc>
 8003936:	2b12      	cmp	r3, #18
 8003938:	d859      	bhi.n	80039ee <HAL_GPIO_Init+0x12e>
 800393a:	a201      	add	r2, pc, #4	@ (adr r2, 8003940 <HAL_GPIO_Init+0x80>)
 800393c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003940:	080039bb 	.word	0x080039bb
 8003944:	08003995 	.word	0x08003995
 8003948:	080039a7 	.word	0x080039a7
 800394c:	080039e9 	.word	0x080039e9
 8003950:	080039ef 	.word	0x080039ef
 8003954:	080039ef 	.word	0x080039ef
 8003958:	080039ef 	.word	0x080039ef
 800395c:	080039ef 	.word	0x080039ef
 8003960:	080039ef 	.word	0x080039ef
 8003964:	080039ef 	.word	0x080039ef
 8003968:	080039ef 	.word	0x080039ef
 800396c:	080039ef 	.word	0x080039ef
 8003970:	080039ef 	.word	0x080039ef
 8003974:	080039ef 	.word	0x080039ef
 8003978:	080039ef 	.word	0x080039ef
 800397c:	080039ef 	.word	0x080039ef
 8003980:	080039ef 	.word	0x080039ef
 8003984:	0800399d 	.word	0x0800399d
 8003988:	080039b1 	.word	0x080039b1
 800398c:	4a79      	ldr	r2, [pc, #484]	@ (8003b74 <HAL_GPIO_Init+0x2b4>)
 800398e:	4293      	cmp	r3, r2
 8003990:	d013      	beq.n	80039ba <HAL_GPIO_Init+0xfa>
 8003992:	e02c      	b.n	80039ee <HAL_GPIO_Init+0x12e>
 8003994:	683b      	ldr	r3, [r7, #0]
 8003996:	68db      	ldr	r3, [r3, #12]
 8003998:	623b      	str	r3, [r7, #32]
 800399a:	e029      	b.n	80039f0 <HAL_GPIO_Init+0x130>
 800399c:	683b      	ldr	r3, [r7, #0]
 800399e:	68db      	ldr	r3, [r3, #12]
 80039a0:	3304      	adds	r3, #4
 80039a2:	623b      	str	r3, [r7, #32]
 80039a4:	e024      	b.n	80039f0 <HAL_GPIO_Init+0x130>
 80039a6:	683b      	ldr	r3, [r7, #0]
 80039a8:	68db      	ldr	r3, [r3, #12]
 80039aa:	3308      	adds	r3, #8
 80039ac:	623b      	str	r3, [r7, #32]
 80039ae:	e01f      	b.n	80039f0 <HAL_GPIO_Init+0x130>
 80039b0:	683b      	ldr	r3, [r7, #0]
 80039b2:	68db      	ldr	r3, [r3, #12]
 80039b4:	330c      	adds	r3, #12
 80039b6:	623b      	str	r3, [r7, #32]
 80039b8:	e01a      	b.n	80039f0 <HAL_GPIO_Init+0x130>
 80039ba:	683b      	ldr	r3, [r7, #0]
 80039bc:	689b      	ldr	r3, [r3, #8]
 80039be:	2b00      	cmp	r3, #0
 80039c0:	d102      	bne.n	80039c8 <HAL_GPIO_Init+0x108>
 80039c2:	2304      	movs	r3, #4
 80039c4:	623b      	str	r3, [r7, #32]
 80039c6:	e013      	b.n	80039f0 <HAL_GPIO_Init+0x130>
 80039c8:	683b      	ldr	r3, [r7, #0]
 80039ca:	689b      	ldr	r3, [r3, #8]
 80039cc:	2b01      	cmp	r3, #1
 80039ce:	d105      	bne.n	80039dc <HAL_GPIO_Init+0x11c>
 80039d0:	2308      	movs	r3, #8
 80039d2:	623b      	str	r3, [r7, #32]
 80039d4:	687b      	ldr	r3, [r7, #4]
 80039d6:	69fa      	ldr	r2, [r7, #28]
 80039d8:	611a      	str	r2, [r3, #16]
 80039da:	e009      	b.n	80039f0 <HAL_GPIO_Init+0x130>
 80039dc:	2308      	movs	r3, #8
 80039de:	623b      	str	r3, [r7, #32]
 80039e0:	687b      	ldr	r3, [r7, #4]
 80039e2:	69fa      	ldr	r2, [r7, #28]
 80039e4:	615a      	str	r2, [r3, #20]
 80039e6:	e003      	b.n	80039f0 <HAL_GPIO_Init+0x130>
 80039e8:	2300      	movs	r3, #0
 80039ea:	623b      	str	r3, [r7, #32]
 80039ec:	e000      	b.n	80039f0 <HAL_GPIO_Init+0x130>
 80039ee:	bf00      	nop
 80039f0:	69bb      	ldr	r3, [r7, #24]
 80039f2:	2bff      	cmp	r3, #255	@ 0xff
 80039f4:	d801      	bhi.n	80039fa <HAL_GPIO_Init+0x13a>
 80039f6:	687b      	ldr	r3, [r7, #4]
 80039f8:	e001      	b.n	80039fe <HAL_GPIO_Init+0x13e>
 80039fa:	687b      	ldr	r3, [r7, #4]
 80039fc:	3304      	adds	r3, #4
 80039fe:	617b      	str	r3, [r7, #20]
 8003a00:	69bb      	ldr	r3, [r7, #24]
 8003a02:	2bff      	cmp	r3, #255	@ 0xff
 8003a04:	d802      	bhi.n	8003a0c <HAL_GPIO_Init+0x14c>
 8003a06:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003a08:	009b      	lsls	r3, r3, #2
 8003a0a:	e002      	b.n	8003a12 <HAL_GPIO_Init+0x152>
 8003a0c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003a0e:	3b08      	subs	r3, #8
 8003a10:	009b      	lsls	r3, r3, #2
 8003a12:	613b      	str	r3, [r7, #16]
 8003a14:	697b      	ldr	r3, [r7, #20]
 8003a16:	681a      	ldr	r2, [r3, #0]
 8003a18:	210f      	movs	r1, #15
 8003a1a:	693b      	ldr	r3, [r7, #16]
 8003a1c:	fa01 f303 	lsl.w	r3, r1, r3
 8003a20:	43db      	mvns	r3, r3
 8003a22:	401a      	ands	r2, r3
 8003a24:	6a39      	ldr	r1, [r7, #32]
 8003a26:	693b      	ldr	r3, [r7, #16]
 8003a28:	fa01 f303 	lsl.w	r3, r1, r3
 8003a2c:	431a      	orrs	r2, r3
 8003a2e:	697b      	ldr	r3, [r7, #20]
 8003a30:	601a      	str	r2, [r3, #0]
 8003a32:	683b      	ldr	r3, [r7, #0]
 8003a34:	685b      	ldr	r3, [r3, #4]
 8003a36:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003a3a:	2b00      	cmp	r3, #0
 8003a3c:	f000 80b1 	beq.w	8003ba2 <HAL_GPIO_Init+0x2e2>
 8003a40:	4b4d      	ldr	r3, [pc, #308]	@ (8003b78 <HAL_GPIO_Init+0x2b8>)
 8003a42:	699b      	ldr	r3, [r3, #24]
 8003a44:	4a4c      	ldr	r2, [pc, #304]	@ (8003b78 <HAL_GPIO_Init+0x2b8>)
 8003a46:	f043 0301 	orr.w	r3, r3, #1
 8003a4a:	6193      	str	r3, [r2, #24]
 8003a4c:	4b4a      	ldr	r3, [pc, #296]	@ (8003b78 <HAL_GPIO_Init+0x2b8>)
 8003a4e:	699b      	ldr	r3, [r3, #24]
 8003a50:	f003 0301 	and.w	r3, r3, #1
 8003a54:	60bb      	str	r3, [r7, #8]
 8003a56:	68bb      	ldr	r3, [r7, #8]
 8003a58:	4a48      	ldr	r2, [pc, #288]	@ (8003b7c <HAL_GPIO_Init+0x2bc>)
 8003a5a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003a5c:	089b      	lsrs	r3, r3, #2
 8003a5e:	3302      	adds	r3, #2
 8003a60:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003a64:	60fb      	str	r3, [r7, #12]
 8003a66:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003a68:	f003 0303 	and.w	r3, r3, #3
 8003a6c:	009b      	lsls	r3, r3, #2
 8003a6e:	220f      	movs	r2, #15
 8003a70:	fa02 f303 	lsl.w	r3, r2, r3
 8003a74:	43db      	mvns	r3, r3
 8003a76:	68fa      	ldr	r2, [r7, #12]
 8003a78:	4013      	ands	r3, r2
 8003a7a:	60fb      	str	r3, [r7, #12]
 8003a7c:	687b      	ldr	r3, [r7, #4]
 8003a7e:	4a40      	ldr	r2, [pc, #256]	@ (8003b80 <HAL_GPIO_Init+0x2c0>)
 8003a80:	4293      	cmp	r3, r2
 8003a82:	d013      	beq.n	8003aac <HAL_GPIO_Init+0x1ec>
 8003a84:	687b      	ldr	r3, [r7, #4]
 8003a86:	4a3f      	ldr	r2, [pc, #252]	@ (8003b84 <HAL_GPIO_Init+0x2c4>)
 8003a88:	4293      	cmp	r3, r2
 8003a8a:	d00d      	beq.n	8003aa8 <HAL_GPIO_Init+0x1e8>
 8003a8c:	687b      	ldr	r3, [r7, #4]
 8003a8e:	4a3e      	ldr	r2, [pc, #248]	@ (8003b88 <HAL_GPIO_Init+0x2c8>)
 8003a90:	4293      	cmp	r3, r2
 8003a92:	d007      	beq.n	8003aa4 <HAL_GPIO_Init+0x1e4>
 8003a94:	687b      	ldr	r3, [r7, #4]
 8003a96:	4a3d      	ldr	r2, [pc, #244]	@ (8003b8c <HAL_GPIO_Init+0x2cc>)
 8003a98:	4293      	cmp	r3, r2
 8003a9a:	d101      	bne.n	8003aa0 <HAL_GPIO_Init+0x1e0>
 8003a9c:	2303      	movs	r3, #3
 8003a9e:	e006      	b.n	8003aae <HAL_GPIO_Init+0x1ee>
 8003aa0:	2304      	movs	r3, #4
 8003aa2:	e004      	b.n	8003aae <HAL_GPIO_Init+0x1ee>
 8003aa4:	2302      	movs	r3, #2
 8003aa6:	e002      	b.n	8003aae <HAL_GPIO_Init+0x1ee>
 8003aa8:	2301      	movs	r3, #1
 8003aaa:	e000      	b.n	8003aae <HAL_GPIO_Init+0x1ee>
 8003aac:	2300      	movs	r3, #0
 8003aae:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003ab0:	f002 0203 	and.w	r2, r2, #3
 8003ab4:	0092      	lsls	r2, r2, #2
 8003ab6:	4093      	lsls	r3, r2
 8003ab8:	68fa      	ldr	r2, [r7, #12]
 8003aba:	4313      	orrs	r3, r2
 8003abc:	60fb      	str	r3, [r7, #12]
 8003abe:	492f      	ldr	r1, [pc, #188]	@ (8003b7c <HAL_GPIO_Init+0x2bc>)
 8003ac0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003ac2:	089b      	lsrs	r3, r3, #2
 8003ac4:	3302      	adds	r3, #2
 8003ac6:	68fa      	ldr	r2, [r7, #12]
 8003ac8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003acc:	683b      	ldr	r3, [r7, #0]
 8003ace:	685b      	ldr	r3, [r3, #4]
 8003ad0:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8003ad4:	2b00      	cmp	r3, #0
 8003ad6:	d006      	beq.n	8003ae6 <HAL_GPIO_Init+0x226>
 8003ad8:	4b2d      	ldr	r3, [pc, #180]	@ (8003b90 <HAL_GPIO_Init+0x2d0>)
 8003ada:	689a      	ldr	r2, [r3, #8]
 8003adc:	492c      	ldr	r1, [pc, #176]	@ (8003b90 <HAL_GPIO_Init+0x2d0>)
 8003ade:	69bb      	ldr	r3, [r7, #24]
 8003ae0:	4313      	orrs	r3, r2
 8003ae2:	608b      	str	r3, [r1, #8]
 8003ae4:	e006      	b.n	8003af4 <HAL_GPIO_Init+0x234>
 8003ae6:	4b2a      	ldr	r3, [pc, #168]	@ (8003b90 <HAL_GPIO_Init+0x2d0>)
 8003ae8:	689a      	ldr	r2, [r3, #8]
 8003aea:	69bb      	ldr	r3, [r7, #24]
 8003aec:	43db      	mvns	r3, r3
 8003aee:	4928      	ldr	r1, [pc, #160]	@ (8003b90 <HAL_GPIO_Init+0x2d0>)
 8003af0:	4013      	ands	r3, r2
 8003af2:	608b      	str	r3, [r1, #8]
 8003af4:	683b      	ldr	r3, [r7, #0]
 8003af6:	685b      	ldr	r3, [r3, #4]
 8003af8:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8003afc:	2b00      	cmp	r3, #0
 8003afe:	d006      	beq.n	8003b0e <HAL_GPIO_Init+0x24e>
 8003b00:	4b23      	ldr	r3, [pc, #140]	@ (8003b90 <HAL_GPIO_Init+0x2d0>)
 8003b02:	68da      	ldr	r2, [r3, #12]
 8003b04:	4922      	ldr	r1, [pc, #136]	@ (8003b90 <HAL_GPIO_Init+0x2d0>)
 8003b06:	69bb      	ldr	r3, [r7, #24]
 8003b08:	4313      	orrs	r3, r2
 8003b0a:	60cb      	str	r3, [r1, #12]
 8003b0c:	e006      	b.n	8003b1c <HAL_GPIO_Init+0x25c>
 8003b0e:	4b20      	ldr	r3, [pc, #128]	@ (8003b90 <HAL_GPIO_Init+0x2d0>)
 8003b10:	68da      	ldr	r2, [r3, #12]
 8003b12:	69bb      	ldr	r3, [r7, #24]
 8003b14:	43db      	mvns	r3, r3
 8003b16:	491e      	ldr	r1, [pc, #120]	@ (8003b90 <HAL_GPIO_Init+0x2d0>)
 8003b18:	4013      	ands	r3, r2
 8003b1a:	60cb      	str	r3, [r1, #12]
 8003b1c:	683b      	ldr	r3, [r7, #0]
 8003b1e:	685b      	ldr	r3, [r3, #4]
 8003b20:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003b24:	2b00      	cmp	r3, #0
 8003b26:	d006      	beq.n	8003b36 <HAL_GPIO_Init+0x276>
 8003b28:	4b19      	ldr	r3, [pc, #100]	@ (8003b90 <HAL_GPIO_Init+0x2d0>)
 8003b2a:	685a      	ldr	r2, [r3, #4]
 8003b2c:	4918      	ldr	r1, [pc, #96]	@ (8003b90 <HAL_GPIO_Init+0x2d0>)
 8003b2e:	69bb      	ldr	r3, [r7, #24]
 8003b30:	4313      	orrs	r3, r2
 8003b32:	604b      	str	r3, [r1, #4]
 8003b34:	e006      	b.n	8003b44 <HAL_GPIO_Init+0x284>
 8003b36:	4b16      	ldr	r3, [pc, #88]	@ (8003b90 <HAL_GPIO_Init+0x2d0>)
 8003b38:	685a      	ldr	r2, [r3, #4]
 8003b3a:	69bb      	ldr	r3, [r7, #24]
 8003b3c:	43db      	mvns	r3, r3
 8003b3e:	4914      	ldr	r1, [pc, #80]	@ (8003b90 <HAL_GPIO_Init+0x2d0>)
 8003b40:	4013      	ands	r3, r2
 8003b42:	604b      	str	r3, [r1, #4]
 8003b44:	683b      	ldr	r3, [r7, #0]
 8003b46:	685b      	ldr	r3, [r3, #4]
 8003b48:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003b4c:	2b00      	cmp	r3, #0
 8003b4e:	d021      	beq.n	8003b94 <HAL_GPIO_Init+0x2d4>
 8003b50:	4b0f      	ldr	r3, [pc, #60]	@ (8003b90 <HAL_GPIO_Init+0x2d0>)
 8003b52:	681a      	ldr	r2, [r3, #0]
 8003b54:	490e      	ldr	r1, [pc, #56]	@ (8003b90 <HAL_GPIO_Init+0x2d0>)
 8003b56:	69bb      	ldr	r3, [r7, #24]
 8003b58:	4313      	orrs	r3, r2
 8003b5a:	600b      	str	r3, [r1, #0]
 8003b5c:	e021      	b.n	8003ba2 <HAL_GPIO_Init+0x2e2>
 8003b5e:	bf00      	nop
 8003b60:	10320000 	.word	0x10320000
 8003b64:	10310000 	.word	0x10310000
 8003b68:	10220000 	.word	0x10220000
 8003b6c:	10210000 	.word	0x10210000
 8003b70:	10120000 	.word	0x10120000
 8003b74:	10110000 	.word	0x10110000
 8003b78:	40021000 	.word	0x40021000
 8003b7c:	40010000 	.word	0x40010000
 8003b80:	40010800 	.word	0x40010800
 8003b84:	40010c00 	.word	0x40010c00
 8003b88:	40011000 	.word	0x40011000
 8003b8c:	40011400 	.word	0x40011400
 8003b90:	40010400 	.word	0x40010400
 8003b94:	4b0b      	ldr	r3, [pc, #44]	@ (8003bc4 <HAL_GPIO_Init+0x304>)
 8003b96:	681a      	ldr	r2, [r3, #0]
 8003b98:	69bb      	ldr	r3, [r7, #24]
 8003b9a:	43db      	mvns	r3, r3
 8003b9c:	4909      	ldr	r1, [pc, #36]	@ (8003bc4 <HAL_GPIO_Init+0x304>)
 8003b9e:	4013      	ands	r3, r2
 8003ba0:	600b      	str	r3, [r1, #0]
 8003ba2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003ba4:	3301      	adds	r3, #1
 8003ba6:	627b      	str	r3, [r7, #36]	@ 0x24
 8003ba8:	683b      	ldr	r3, [r7, #0]
 8003baa:	681a      	ldr	r2, [r3, #0]
 8003bac:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003bae:	fa22 f303 	lsr.w	r3, r2, r3
 8003bb2:	2b00      	cmp	r3, #0
 8003bb4:	f47f ae8e 	bne.w	80038d4 <HAL_GPIO_Init+0x14>
 8003bb8:	bf00      	nop
 8003bba:	bf00      	nop
 8003bbc:	372c      	adds	r7, #44	@ 0x2c
 8003bbe:	46bd      	mov	sp, r7
 8003bc0:	bc80      	pop	{r7}
 8003bc2:	4770      	bx	lr
 8003bc4:	40010400 	.word	0x40010400

08003bc8 <HAL_RCC_OscConfig>:
 8003bc8:	b580      	push	{r7, lr}
 8003bca:	b086      	sub	sp, #24
 8003bcc:	af00      	add	r7, sp, #0
 8003bce:	6078      	str	r0, [r7, #4]
 8003bd0:	687b      	ldr	r3, [r7, #4]
 8003bd2:	2b00      	cmp	r3, #0
 8003bd4:	d101      	bne.n	8003bda <HAL_RCC_OscConfig+0x12>
 8003bd6:	2301      	movs	r3, #1
 8003bd8:	e272      	b.n	80040c0 <HAL_RCC_OscConfig+0x4f8>
 8003bda:	687b      	ldr	r3, [r7, #4]
 8003bdc:	681b      	ldr	r3, [r3, #0]
 8003bde:	f003 0301 	and.w	r3, r3, #1
 8003be2:	2b00      	cmp	r3, #0
 8003be4:	f000 8087 	beq.w	8003cf6 <HAL_RCC_OscConfig+0x12e>
 8003be8:	4b92      	ldr	r3, [pc, #584]	@ (8003e34 <HAL_RCC_OscConfig+0x26c>)
 8003bea:	685b      	ldr	r3, [r3, #4]
 8003bec:	f003 030c 	and.w	r3, r3, #12
 8003bf0:	2b04      	cmp	r3, #4
 8003bf2:	d00c      	beq.n	8003c0e <HAL_RCC_OscConfig+0x46>
 8003bf4:	4b8f      	ldr	r3, [pc, #572]	@ (8003e34 <HAL_RCC_OscConfig+0x26c>)
 8003bf6:	685b      	ldr	r3, [r3, #4]
 8003bf8:	f003 030c 	and.w	r3, r3, #12
 8003bfc:	2b08      	cmp	r3, #8
 8003bfe:	d112      	bne.n	8003c26 <HAL_RCC_OscConfig+0x5e>
 8003c00:	4b8c      	ldr	r3, [pc, #560]	@ (8003e34 <HAL_RCC_OscConfig+0x26c>)
 8003c02:	685b      	ldr	r3, [r3, #4]
 8003c04:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003c08:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003c0c:	d10b      	bne.n	8003c26 <HAL_RCC_OscConfig+0x5e>
 8003c0e:	4b89      	ldr	r3, [pc, #548]	@ (8003e34 <HAL_RCC_OscConfig+0x26c>)
 8003c10:	681b      	ldr	r3, [r3, #0]
 8003c12:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003c16:	2b00      	cmp	r3, #0
 8003c18:	d06c      	beq.n	8003cf4 <HAL_RCC_OscConfig+0x12c>
 8003c1a:	687b      	ldr	r3, [r7, #4]
 8003c1c:	685b      	ldr	r3, [r3, #4]
 8003c1e:	2b00      	cmp	r3, #0
 8003c20:	d168      	bne.n	8003cf4 <HAL_RCC_OscConfig+0x12c>
 8003c22:	2301      	movs	r3, #1
 8003c24:	e24c      	b.n	80040c0 <HAL_RCC_OscConfig+0x4f8>
 8003c26:	687b      	ldr	r3, [r7, #4]
 8003c28:	685b      	ldr	r3, [r3, #4]
 8003c2a:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003c2e:	d106      	bne.n	8003c3e <HAL_RCC_OscConfig+0x76>
 8003c30:	4b80      	ldr	r3, [pc, #512]	@ (8003e34 <HAL_RCC_OscConfig+0x26c>)
 8003c32:	681b      	ldr	r3, [r3, #0]
 8003c34:	4a7f      	ldr	r2, [pc, #508]	@ (8003e34 <HAL_RCC_OscConfig+0x26c>)
 8003c36:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003c3a:	6013      	str	r3, [r2, #0]
 8003c3c:	e02e      	b.n	8003c9c <HAL_RCC_OscConfig+0xd4>
 8003c3e:	687b      	ldr	r3, [r7, #4]
 8003c40:	685b      	ldr	r3, [r3, #4]
 8003c42:	2b00      	cmp	r3, #0
 8003c44:	d10c      	bne.n	8003c60 <HAL_RCC_OscConfig+0x98>
 8003c46:	4b7b      	ldr	r3, [pc, #492]	@ (8003e34 <HAL_RCC_OscConfig+0x26c>)
 8003c48:	681b      	ldr	r3, [r3, #0]
 8003c4a:	4a7a      	ldr	r2, [pc, #488]	@ (8003e34 <HAL_RCC_OscConfig+0x26c>)
 8003c4c:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8003c50:	6013      	str	r3, [r2, #0]
 8003c52:	4b78      	ldr	r3, [pc, #480]	@ (8003e34 <HAL_RCC_OscConfig+0x26c>)
 8003c54:	681b      	ldr	r3, [r3, #0]
 8003c56:	4a77      	ldr	r2, [pc, #476]	@ (8003e34 <HAL_RCC_OscConfig+0x26c>)
 8003c58:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8003c5c:	6013      	str	r3, [r2, #0]
 8003c5e:	e01d      	b.n	8003c9c <HAL_RCC_OscConfig+0xd4>
 8003c60:	687b      	ldr	r3, [r7, #4]
 8003c62:	685b      	ldr	r3, [r3, #4]
 8003c64:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8003c68:	d10c      	bne.n	8003c84 <HAL_RCC_OscConfig+0xbc>
 8003c6a:	4b72      	ldr	r3, [pc, #456]	@ (8003e34 <HAL_RCC_OscConfig+0x26c>)
 8003c6c:	681b      	ldr	r3, [r3, #0]
 8003c6e:	4a71      	ldr	r2, [pc, #452]	@ (8003e34 <HAL_RCC_OscConfig+0x26c>)
 8003c70:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8003c74:	6013      	str	r3, [r2, #0]
 8003c76:	4b6f      	ldr	r3, [pc, #444]	@ (8003e34 <HAL_RCC_OscConfig+0x26c>)
 8003c78:	681b      	ldr	r3, [r3, #0]
 8003c7a:	4a6e      	ldr	r2, [pc, #440]	@ (8003e34 <HAL_RCC_OscConfig+0x26c>)
 8003c7c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003c80:	6013      	str	r3, [r2, #0]
 8003c82:	e00b      	b.n	8003c9c <HAL_RCC_OscConfig+0xd4>
 8003c84:	4b6b      	ldr	r3, [pc, #428]	@ (8003e34 <HAL_RCC_OscConfig+0x26c>)
 8003c86:	681b      	ldr	r3, [r3, #0]
 8003c88:	4a6a      	ldr	r2, [pc, #424]	@ (8003e34 <HAL_RCC_OscConfig+0x26c>)
 8003c8a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8003c8e:	6013      	str	r3, [r2, #0]
 8003c90:	4b68      	ldr	r3, [pc, #416]	@ (8003e34 <HAL_RCC_OscConfig+0x26c>)
 8003c92:	681b      	ldr	r3, [r3, #0]
 8003c94:	4a67      	ldr	r2, [pc, #412]	@ (8003e34 <HAL_RCC_OscConfig+0x26c>)
 8003c96:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8003c9a:	6013      	str	r3, [r2, #0]
 8003c9c:	687b      	ldr	r3, [r7, #4]
 8003c9e:	685b      	ldr	r3, [r3, #4]
 8003ca0:	2b00      	cmp	r3, #0
 8003ca2:	d013      	beq.n	8003ccc <HAL_RCC_OscConfig+0x104>
 8003ca4:	f7fe fefc 	bl	8002aa0 <HAL_GetTick>
 8003ca8:	6138      	str	r0, [r7, #16]
 8003caa:	e008      	b.n	8003cbe <HAL_RCC_OscConfig+0xf6>
 8003cac:	f7fe fef8 	bl	8002aa0 <HAL_GetTick>
 8003cb0:	4602      	mov	r2, r0
 8003cb2:	693b      	ldr	r3, [r7, #16]
 8003cb4:	1ad3      	subs	r3, r2, r3
 8003cb6:	2b64      	cmp	r3, #100	@ 0x64
 8003cb8:	d901      	bls.n	8003cbe <HAL_RCC_OscConfig+0xf6>
 8003cba:	2303      	movs	r3, #3
 8003cbc:	e200      	b.n	80040c0 <HAL_RCC_OscConfig+0x4f8>
 8003cbe:	4b5d      	ldr	r3, [pc, #372]	@ (8003e34 <HAL_RCC_OscConfig+0x26c>)
 8003cc0:	681b      	ldr	r3, [r3, #0]
 8003cc2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003cc6:	2b00      	cmp	r3, #0
 8003cc8:	d0f0      	beq.n	8003cac <HAL_RCC_OscConfig+0xe4>
 8003cca:	e014      	b.n	8003cf6 <HAL_RCC_OscConfig+0x12e>
 8003ccc:	f7fe fee8 	bl	8002aa0 <HAL_GetTick>
 8003cd0:	6138      	str	r0, [r7, #16]
 8003cd2:	e008      	b.n	8003ce6 <HAL_RCC_OscConfig+0x11e>
 8003cd4:	f7fe fee4 	bl	8002aa0 <HAL_GetTick>
 8003cd8:	4602      	mov	r2, r0
 8003cda:	693b      	ldr	r3, [r7, #16]
 8003cdc:	1ad3      	subs	r3, r2, r3
 8003cde:	2b64      	cmp	r3, #100	@ 0x64
 8003ce0:	d901      	bls.n	8003ce6 <HAL_RCC_OscConfig+0x11e>
 8003ce2:	2303      	movs	r3, #3
 8003ce4:	e1ec      	b.n	80040c0 <HAL_RCC_OscConfig+0x4f8>
 8003ce6:	4b53      	ldr	r3, [pc, #332]	@ (8003e34 <HAL_RCC_OscConfig+0x26c>)
 8003ce8:	681b      	ldr	r3, [r3, #0]
 8003cea:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003cee:	2b00      	cmp	r3, #0
 8003cf0:	d1f0      	bne.n	8003cd4 <HAL_RCC_OscConfig+0x10c>
 8003cf2:	e000      	b.n	8003cf6 <HAL_RCC_OscConfig+0x12e>
 8003cf4:	bf00      	nop
 8003cf6:	687b      	ldr	r3, [r7, #4]
 8003cf8:	681b      	ldr	r3, [r3, #0]
 8003cfa:	f003 0302 	and.w	r3, r3, #2
 8003cfe:	2b00      	cmp	r3, #0
 8003d00:	d063      	beq.n	8003dca <HAL_RCC_OscConfig+0x202>
 8003d02:	4b4c      	ldr	r3, [pc, #304]	@ (8003e34 <HAL_RCC_OscConfig+0x26c>)
 8003d04:	685b      	ldr	r3, [r3, #4]
 8003d06:	f003 030c 	and.w	r3, r3, #12
 8003d0a:	2b00      	cmp	r3, #0
 8003d0c:	d00b      	beq.n	8003d26 <HAL_RCC_OscConfig+0x15e>
 8003d0e:	4b49      	ldr	r3, [pc, #292]	@ (8003e34 <HAL_RCC_OscConfig+0x26c>)
 8003d10:	685b      	ldr	r3, [r3, #4]
 8003d12:	f003 030c 	and.w	r3, r3, #12
 8003d16:	2b08      	cmp	r3, #8
 8003d18:	d11c      	bne.n	8003d54 <HAL_RCC_OscConfig+0x18c>
 8003d1a:	4b46      	ldr	r3, [pc, #280]	@ (8003e34 <HAL_RCC_OscConfig+0x26c>)
 8003d1c:	685b      	ldr	r3, [r3, #4]
 8003d1e:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003d22:	2b00      	cmp	r3, #0
 8003d24:	d116      	bne.n	8003d54 <HAL_RCC_OscConfig+0x18c>
 8003d26:	4b43      	ldr	r3, [pc, #268]	@ (8003e34 <HAL_RCC_OscConfig+0x26c>)
 8003d28:	681b      	ldr	r3, [r3, #0]
 8003d2a:	f003 0302 	and.w	r3, r3, #2
 8003d2e:	2b00      	cmp	r3, #0
 8003d30:	d005      	beq.n	8003d3e <HAL_RCC_OscConfig+0x176>
 8003d32:	687b      	ldr	r3, [r7, #4]
 8003d34:	691b      	ldr	r3, [r3, #16]
 8003d36:	2b01      	cmp	r3, #1
 8003d38:	d001      	beq.n	8003d3e <HAL_RCC_OscConfig+0x176>
 8003d3a:	2301      	movs	r3, #1
 8003d3c:	e1c0      	b.n	80040c0 <HAL_RCC_OscConfig+0x4f8>
 8003d3e:	4b3d      	ldr	r3, [pc, #244]	@ (8003e34 <HAL_RCC_OscConfig+0x26c>)
 8003d40:	681b      	ldr	r3, [r3, #0]
 8003d42:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8003d46:	687b      	ldr	r3, [r7, #4]
 8003d48:	695b      	ldr	r3, [r3, #20]
 8003d4a:	00db      	lsls	r3, r3, #3
 8003d4c:	4939      	ldr	r1, [pc, #228]	@ (8003e34 <HAL_RCC_OscConfig+0x26c>)
 8003d4e:	4313      	orrs	r3, r2
 8003d50:	600b      	str	r3, [r1, #0]
 8003d52:	e03a      	b.n	8003dca <HAL_RCC_OscConfig+0x202>
 8003d54:	687b      	ldr	r3, [r7, #4]
 8003d56:	691b      	ldr	r3, [r3, #16]
 8003d58:	2b00      	cmp	r3, #0
 8003d5a:	d020      	beq.n	8003d9e <HAL_RCC_OscConfig+0x1d6>
 8003d5c:	4b36      	ldr	r3, [pc, #216]	@ (8003e38 <HAL_RCC_OscConfig+0x270>)
 8003d5e:	2201      	movs	r2, #1
 8003d60:	601a      	str	r2, [r3, #0]
 8003d62:	f7fe fe9d 	bl	8002aa0 <HAL_GetTick>
 8003d66:	6138      	str	r0, [r7, #16]
 8003d68:	e008      	b.n	8003d7c <HAL_RCC_OscConfig+0x1b4>
 8003d6a:	f7fe fe99 	bl	8002aa0 <HAL_GetTick>
 8003d6e:	4602      	mov	r2, r0
 8003d70:	693b      	ldr	r3, [r7, #16]
 8003d72:	1ad3      	subs	r3, r2, r3
 8003d74:	2b02      	cmp	r3, #2
 8003d76:	d901      	bls.n	8003d7c <HAL_RCC_OscConfig+0x1b4>
 8003d78:	2303      	movs	r3, #3
 8003d7a:	e1a1      	b.n	80040c0 <HAL_RCC_OscConfig+0x4f8>
 8003d7c:	4b2d      	ldr	r3, [pc, #180]	@ (8003e34 <HAL_RCC_OscConfig+0x26c>)
 8003d7e:	681b      	ldr	r3, [r3, #0]
 8003d80:	f003 0302 	and.w	r3, r3, #2
 8003d84:	2b00      	cmp	r3, #0
 8003d86:	d0f0      	beq.n	8003d6a <HAL_RCC_OscConfig+0x1a2>
 8003d88:	4b2a      	ldr	r3, [pc, #168]	@ (8003e34 <HAL_RCC_OscConfig+0x26c>)
 8003d8a:	681b      	ldr	r3, [r3, #0]
 8003d8c:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8003d90:	687b      	ldr	r3, [r7, #4]
 8003d92:	695b      	ldr	r3, [r3, #20]
 8003d94:	00db      	lsls	r3, r3, #3
 8003d96:	4927      	ldr	r1, [pc, #156]	@ (8003e34 <HAL_RCC_OscConfig+0x26c>)
 8003d98:	4313      	orrs	r3, r2
 8003d9a:	600b      	str	r3, [r1, #0]
 8003d9c:	e015      	b.n	8003dca <HAL_RCC_OscConfig+0x202>
 8003d9e:	4b26      	ldr	r3, [pc, #152]	@ (8003e38 <HAL_RCC_OscConfig+0x270>)
 8003da0:	2200      	movs	r2, #0
 8003da2:	601a      	str	r2, [r3, #0]
 8003da4:	f7fe fe7c 	bl	8002aa0 <HAL_GetTick>
 8003da8:	6138      	str	r0, [r7, #16]
 8003daa:	e008      	b.n	8003dbe <HAL_RCC_OscConfig+0x1f6>
 8003dac:	f7fe fe78 	bl	8002aa0 <HAL_GetTick>
 8003db0:	4602      	mov	r2, r0
 8003db2:	693b      	ldr	r3, [r7, #16]
 8003db4:	1ad3      	subs	r3, r2, r3
 8003db6:	2b02      	cmp	r3, #2
 8003db8:	d901      	bls.n	8003dbe <HAL_RCC_OscConfig+0x1f6>
 8003dba:	2303      	movs	r3, #3
 8003dbc:	e180      	b.n	80040c0 <HAL_RCC_OscConfig+0x4f8>
 8003dbe:	4b1d      	ldr	r3, [pc, #116]	@ (8003e34 <HAL_RCC_OscConfig+0x26c>)
 8003dc0:	681b      	ldr	r3, [r3, #0]
 8003dc2:	f003 0302 	and.w	r3, r3, #2
 8003dc6:	2b00      	cmp	r3, #0
 8003dc8:	d1f0      	bne.n	8003dac <HAL_RCC_OscConfig+0x1e4>
 8003dca:	687b      	ldr	r3, [r7, #4]
 8003dcc:	681b      	ldr	r3, [r3, #0]
 8003dce:	f003 0308 	and.w	r3, r3, #8
 8003dd2:	2b00      	cmp	r3, #0
 8003dd4:	d03a      	beq.n	8003e4c <HAL_RCC_OscConfig+0x284>
 8003dd6:	687b      	ldr	r3, [r7, #4]
 8003dd8:	699b      	ldr	r3, [r3, #24]
 8003dda:	2b00      	cmp	r3, #0
 8003ddc:	d019      	beq.n	8003e12 <HAL_RCC_OscConfig+0x24a>
 8003dde:	4b17      	ldr	r3, [pc, #92]	@ (8003e3c <HAL_RCC_OscConfig+0x274>)
 8003de0:	2201      	movs	r2, #1
 8003de2:	601a      	str	r2, [r3, #0]
 8003de4:	f7fe fe5c 	bl	8002aa0 <HAL_GetTick>
 8003de8:	6138      	str	r0, [r7, #16]
 8003dea:	e008      	b.n	8003dfe <HAL_RCC_OscConfig+0x236>
 8003dec:	f7fe fe58 	bl	8002aa0 <HAL_GetTick>
 8003df0:	4602      	mov	r2, r0
 8003df2:	693b      	ldr	r3, [r7, #16]
 8003df4:	1ad3      	subs	r3, r2, r3
 8003df6:	2b02      	cmp	r3, #2
 8003df8:	d901      	bls.n	8003dfe <HAL_RCC_OscConfig+0x236>
 8003dfa:	2303      	movs	r3, #3
 8003dfc:	e160      	b.n	80040c0 <HAL_RCC_OscConfig+0x4f8>
 8003dfe:	4b0d      	ldr	r3, [pc, #52]	@ (8003e34 <HAL_RCC_OscConfig+0x26c>)
 8003e00:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003e02:	f003 0302 	and.w	r3, r3, #2
 8003e06:	2b00      	cmp	r3, #0
 8003e08:	d0f0      	beq.n	8003dec <HAL_RCC_OscConfig+0x224>
 8003e0a:	2001      	movs	r0, #1
 8003e0c:	f000 fad0 	bl	80043b0 <RCC_Delay>
 8003e10:	e01c      	b.n	8003e4c <HAL_RCC_OscConfig+0x284>
 8003e12:	4b0a      	ldr	r3, [pc, #40]	@ (8003e3c <HAL_RCC_OscConfig+0x274>)
 8003e14:	2200      	movs	r2, #0
 8003e16:	601a      	str	r2, [r3, #0]
 8003e18:	f7fe fe42 	bl	8002aa0 <HAL_GetTick>
 8003e1c:	6138      	str	r0, [r7, #16]
 8003e1e:	e00f      	b.n	8003e40 <HAL_RCC_OscConfig+0x278>
 8003e20:	f7fe fe3e 	bl	8002aa0 <HAL_GetTick>
 8003e24:	4602      	mov	r2, r0
 8003e26:	693b      	ldr	r3, [r7, #16]
 8003e28:	1ad3      	subs	r3, r2, r3
 8003e2a:	2b02      	cmp	r3, #2
 8003e2c:	d908      	bls.n	8003e40 <HAL_RCC_OscConfig+0x278>
 8003e2e:	2303      	movs	r3, #3
 8003e30:	e146      	b.n	80040c0 <HAL_RCC_OscConfig+0x4f8>
 8003e32:	bf00      	nop
 8003e34:	40021000 	.word	0x40021000
 8003e38:	42420000 	.word	0x42420000
 8003e3c:	42420480 	.word	0x42420480
 8003e40:	4b92      	ldr	r3, [pc, #584]	@ (800408c <HAL_RCC_OscConfig+0x4c4>)
 8003e42:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003e44:	f003 0302 	and.w	r3, r3, #2
 8003e48:	2b00      	cmp	r3, #0
 8003e4a:	d1e9      	bne.n	8003e20 <HAL_RCC_OscConfig+0x258>
 8003e4c:	687b      	ldr	r3, [r7, #4]
 8003e4e:	681b      	ldr	r3, [r3, #0]
 8003e50:	f003 0304 	and.w	r3, r3, #4
 8003e54:	2b00      	cmp	r3, #0
 8003e56:	f000 80a6 	beq.w	8003fa6 <HAL_RCC_OscConfig+0x3de>
 8003e5a:	2300      	movs	r3, #0
 8003e5c:	75fb      	strb	r3, [r7, #23]
 8003e5e:	4b8b      	ldr	r3, [pc, #556]	@ (800408c <HAL_RCC_OscConfig+0x4c4>)
 8003e60:	69db      	ldr	r3, [r3, #28]
 8003e62:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003e66:	2b00      	cmp	r3, #0
 8003e68:	d10d      	bne.n	8003e86 <HAL_RCC_OscConfig+0x2be>
 8003e6a:	4b88      	ldr	r3, [pc, #544]	@ (800408c <HAL_RCC_OscConfig+0x4c4>)
 8003e6c:	69db      	ldr	r3, [r3, #28]
 8003e6e:	4a87      	ldr	r2, [pc, #540]	@ (800408c <HAL_RCC_OscConfig+0x4c4>)
 8003e70:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003e74:	61d3      	str	r3, [r2, #28]
 8003e76:	4b85      	ldr	r3, [pc, #532]	@ (800408c <HAL_RCC_OscConfig+0x4c4>)
 8003e78:	69db      	ldr	r3, [r3, #28]
 8003e7a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003e7e:	60bb      	str	r3, [r7, #8]
 8003e80:	68bb      	ldr	r3, [r7, #8]
 8003e82:	2301      	movs	r3, #1
 8003e84:	75fb      	strb	r3, [r7, #23]
 8003e86:	4b82      	ldr	r3, [pc, #520]	@ (8004090 <HAL_RCC_OscConfig+0x4c8>)
 8003e88:	681b      	ldr	r3, [r3, #0]
 8003e8a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003e8e:	2b00      	cmp	r3, #0
 8003e90:	d118      	bne.n	8003ec4 <HAL_RCC_OscConfig+0x2fc>
 8003e92:	4b7f      	ldr	r3, [pc, #508]	@ (8004090 <HAL_RCC_OscConfig+0x4c8>)
 8003e94:	681b      	ldr	r3, [r3, #0]
 8003e96:	4a7e      	ldr	r2, [pc, #504]	@ (8004090 <HAL_RCC_OscConfig+0x4c8>)
 8003e98:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003e9c:	6013      	str	r3, [r2, #0]
 8003e9e:	f7fe fdff 	bl	8002aa0 <HAL_GetTick>
 8003ea2:	6138      	str	r0, [r7, #16]
 8003ea4:	e008      	b.n	8003eb8 <HAL_RCC_OscConfig+0x2f0>
 8003ea6:	f7fe fdfb 	bl	8002aa0 <HAL_GetTick>
 8003eaa:	4602      	mov	r2, r0
 8003eac:	693b      	ldr	r3, [r7, #16]
 8003eae:	1ad3      	subs	r3, r2, r3
 8003eb0:	2b64      	cmp	r3, #100	@ 0x64
 8003eb2:	d901      	bls.n	8003eb8 <HAL_RCC_OscConfig+0x2f0>
 8003eb4:	2303      	movs	r3, #3
 8003eb6:	e103      	b.n	80040c0 <HAL_RCC_OscConfig+0x4f8>
 8003eb8:	4b75      	ldr	r3, [pc, #468]	@ (8004090 <HAL_RCC_OscConfig+0x4c8>)
 8003eba:	681b      	ldr	r3, [r3, #0]
 8003ebc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003ec0:	2b00      	cmp	r3, #0
 8003ec2:	d0f0      	beq.n	8003ea6 <HAL_RCC_OscConfig+0x2de>
 8003ec4:	687b      	ldr	r3, [r7, #4]
 8003ec6:	68db      	ldr	r3, [r3, #12]
 8003ec8:	2b01      	cmp	r3, #1
 8003eca:	d106      	bne.n	8003eda <HAL_RCC_OscConfig+0x312>
 8003ecc:	4b6f      	ldr	r3, [pc, #444]	@ (800408c <HAL_RCC_OscConfig+0x4c4>)
 8003ece:	6a1b      	ldr	r3, [r3, #32]
 8003ed0:	4a6e      	ldr	r2, [pc, #440]	@ (800408c <HAL_RCC_OscConfig+0x4c4>)
 8003ed2:	f043 0301 	orr.w	r3, r3, #1
 8003ed6:	6213      	str	r3, [r2, #32]
 8003ed8:	e02d      	b.n	8003f36 <HAL_RCC_OscConfig+0x36e>
 8003eda:	687b      	ldr	r3, [r7, #4]
 8003edc:	68db      	ldr	r3, [r3, #12]
 8003ede:	2b00      	cmp	r3, #0
 8003ee0:	d10c      	bne.n	8003efc <HAL_RCC_OscConfig+0x334>
 8003ee2:	4b6a      	ldr	r3, [pc, #424]	@ (800408c <HAL_RCC_OscConfig+0x4c4>)
 8003ee4:	6a1b      	ldr	r3, [r3, #32]
 8003ee6:	4a69      	ldr	r2, [pc, #420]	@ (800408c <HAL_RCC_OscConfig+0x4c4>)
 8003ee8:	f023 0301 	bic.w	r3, r3, #1
 8003eec:	6213      	str	r3, [r2, #32]
 8003eee:	4b67      	ldr	r3, [pc, #412]	@ (800408c <HAL_RCC_OscConfig+0x4c4>)
 8003ef0:	6a1b      	ldr	r3, [r3, #32]
 8003ef2:	4a66      	ldr	r2, [pc, #408]	@ (800408c <HAL_RCC_OscConfig+0x4c4>)
 8003ef4:	f023 0304 	bic.w	r3, r3, #4
 8003ef8:	6213      	str	r3, [r2, #32]
 8003efa:	e01c      	b.n	8003f36 <HAL_RCC_OscConfig+0x36e>
 8003efc:	687b      	ldr	r3, [r7, #4]
 8003efe:	68db      	ldr	r3, [r3, #12]
 8003f00:	2b05      	cmp	r3, #5
 8003f02:	d10c      	bne.n	8003f1e <HAL_RCC_OscConfig+0x356>
 8003f04:	4b61      	ldr	r3, [pc, #388]	@ (800408c <HAL_RCC_OscConfig+0x4c4>)
 8003f06:	6a1b      	ldr	r3, [r3, #32]
 8003f08:	4a60      	ldr	r2, [pc, #384]	@ (800408c <HAL_RCC_OscConfig+0x4c4>)
 8003f0a:	f043 0304 	orr.w	r3, r3, #4
 8003f0e:	6213      	str	r3, [r2, #32]
 8003f10:	4b5e      	ldr	r3, [pc, #376]	@ (800408c <HAL_RCC_OscConfig+0x4c4>)
 8003f12:	6a1b      	ldr	r3, [r3, #32]
 8003f14:	4a5d      	ldr	r2, [pc, #372]	@ (800408c <HAL_RCC_OscConfig+0x4c4>)
 8003f16:	f043 0301 	orr.w	r3, r3, #1
 8003f1a:	6213      	str	r3, [r2, #32]
 8003f1c:	e00b      	b.n	8003f36 <HAL_RCC_OscConfig+0x36e>
 8003f1e:	4b5b      	ldr	r3, [pc, #364]	@ (800408c <HAL_RCC_OscConfig+0x4c4>)
 8003f20:	6a1b      	ldr	r3, [r3, #32]
 8003f22:	4a5a      	ldr	r2, [pc, #360]	@ (800408c <HAL_RCC_OscConfig+0x4c4>)
 8003f24:	f023 0301 	bic.w	r3, r3, #1
 8003f28:	6213      	str	r3, [r2, #32]
 8003f2a:	4b58      	ldr	r3, [pc, #352]	@ (800408c <HAL_RCC_OscConfig+0x4c4>)
 8003f2c:	6a1b      	ldr	r3, [r3, #32]
 8003f2e:	4a57      	ldr	r2, [pc, #348]	@ (800408c <HAL_RCC_OscConfig+0x4c4>)
 8003f30:	f023 0304 	bic.w	r3, r3, #4
 8003f34:	6213      	str	r3, [r2, #32]
 8003f36:	687b      	ldr	r3, [r7, #4]
 8003f38:	68db      	ldr	r3, [r3, #12]
 8003f3a:	2b00      	cmp	r3, #0
 8003f3c:	d015      	beq.n	8003f6a <HAL_RCC_OscConfig+0x3a2>
 8003f3e:	f7fe fdaf 	bl	8002aa0 <HAL_GetTick>
 8003f42:	6138      	str	r0, [r7, #16]
 8003f44:	e00a      	b.n	8003f5c <HAL_RCC_OscConfig+0x394>
 8003f46:	f7fe fdab 	bl	8002aa0 <HAL_GetTick>
 8003f4a:	4602      	mov	r2, r0
 8003f4c:	693b      	ldr	r3, [r7, #16]
 8003f4e:	1ad3      	subs	r3, r2, r3
 8003f50:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003f54:	4293      	cmp	r3, r2
 8003f56:	d901      	bls.n	8003f5c <HAL_RCC_OscConfig+0x394>
 8003f58:	2303      	movs	r3, #3
 8003f5a:	e0b1      	b.n	80040c0 <HAL_RCC_OscConfig+0x4f8>
 8003f5c:	4b4b      	ldr	r3, [pc, #300]	@ (800408c <HAL_RCC_OscConfig+0x4c4>)
 8003f5e:	6a1b      	ldr	r3, [r3, #32]
 8003f60:	f003 0302 	and.w	r3, r3, #2
 8003f64:	2b00      	cmp	r3, #0
 8003f66:	d0ee      	beq.n	8003f46 <HAL_RCC_OscConfig+0x37e>
 8003f68:	e014      	b.n	8003f94 <HAL_RCC_OscConfig+0x3cc>
 8003f6a:	f7fe fd99 	bl	8002aa0 <HAL_GetTick>
 8003f6e:	6138      	str	r0, [r7, #16]
 8003f70:	e00a      	b.n	8003f88 <HAL_RCC_OscConfig+0x3c0>
 8003f72:	f7fe fd95 	bl	8002aa0 <HAL_GetTick>
 8003f76:	4602      	mov	r2, r0
 8003f78:	693b      	ldr	r3, [r7, #16]
 8003f7a:	1ad3      	subs	r3, r2, r3
 8003f7c:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003f80:	4293      	cmp	r3, r2
 8003f82:	d901      	bls.n	8003f88 <HAL_RCC_OscConfig+0x3c0>
 8003f84:	2303      	movs	r3, #3
 8003f86:	e09b      	b.n	80040c0 <HAL_RCC_OscConfig+0x4f8>
 8003f88:	4b40      	ldr	r3, [pc, #256]	@ (800408c <HAL_RCC_OscConfig+0x4c4>)
 8003f8a:	6a1b      	ldr	r3, [r3, #32]
 8003f8c:	f003 0302 	and.w	r3, r3, #2
 8003f90:	2b00      	cmp	r3, #0
 8003f92:	d1ee      	bne.n	8003f72 <HAL_RCC_OscConfig+0x3aa>
 8003f94:	7dfb      	ldrb	r3, [r7, #23]
 8003f96:	2b01      	cmp	r3, #1
 8003f98:	d105      	bne.n	8003fa6 <HAL_RCC_OscConfig+0x3de>
 8003f9a:	4b3c      	ldr	r3, [pc, #240]	@ (800408c <HAL_RCC_OscConfig+0x4c4>)
 8003f9c:	69db      	ldr	r3, [r3, #28]
 8003f9e:	4a3b      	ldr	r2, [pc, #236]	@ (800408c <HAL_RCC_OscConfig+0x4c4>)
 8003fa0:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8003fa4:	61d3      	str	r3, [r2, #28]
 8003fa6:	687b      	ldr	r3, [r7, #4]
 8003fa8:	69db      	ldr	r3, [r3, #28]
 8003faa:	2b00      	cmp	r3, #0
 8003fac:	f000 8087 	beq.w	80040be <HAL_RCC_OscConfig+0x4f6>
 8003fb0:	4b36      	ldr	r3, [pc, #216]	@ (800408c <HAL_RCC_OscConfig+0x4c4>)
 8003fb2:	685b      	ldr	r3, [r3, #4]
 8003fb4:	f003 030c 	and.w	r3, r3, #12
 8003fb8:	2b08      	cmp	r3, #8
 8003fba:	d061      	beq.n	8004080 <HAL_RCC_OscConfig+0x4b8>
 8003fbc:	687b      	ldr	r3, [r7, #4]
 8003fbe:	69db      	ldr	r3, [r3, #28]
 8003fc0:	2b02      	cmp	r3, #2
 8003fc2:	d146      	bne.n	8004052 <HAL_RCC_OscConfig+0x48a>
 8003fc4:	4b33      	ldr	r3, [pc, #204]	@ (8004094 <HAL_RCC_OscConfig+0x4cc>)
 8003fc6:	2200      	movs	r2, #0
 8003fc8:	601a      	str	r2, [r3, #0]
 8003fca:	f7fe fd69 	bl	8002aa0 <HAL_GetTick>
 8003fce:	6138      	str	r0, [r7, #16]
 8003fd0:	e008      	b.n	8003fe4 <HAL_RCC_OscConfig+0x41c>
 8003fd2:	f7fe fd65 	bl	8002aa0 <HAL_GetTick>
 8003fd6:	4602      	mov	r2, r0
 8003fd8:	693b      	ldr	r3, [r7, #16]
 8003fda:	1ad3      	subs	r3, r2, r3
 8003fdc:	2b02      	cmp	r3, #2
 8003fde:	d901      	bls.n	8003fe4 <HAL_RCC_OscConfig+0x41c>
 8003fe0:	2303      	movs	r3, #3
 8003fe2:	e06d      	b.n	80040c0 <HAL_RCC_OscConfig+0x4f8>
 8003fe4:	4b29      	ldr	r3, [pc, #164]	@ (800408c <HAL_RCC_OscConfig+0x4c4>)
 8003fe6:	681b      	ldr	r3, [r3, #0]
 8003fe8:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003fec:	2b00      	cmp	r3, #0
 8003fee:	d1f0      	bne.n	8003fd2 <HAL_RCC_OscConfig+0x40a>
 8003ff0:	687b      	ldr	r3, [r7, #4]
 8003ff2:	6a1b      	ldr	r3, [r3, #32]
 8003ff4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003ff8:	d108      	bne.n	800400c <HAL_RCC_OscConfig+0x444>
 8003ffa:	4b24      	ldr	r3, [pc, #144]	@ (800408c <HAL_RCC_OscConfig+0x4c4>)
 8003ffc:	685b      	ldr	r3, [r3, #4]
 8003ffe:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 8004002:	687b      	ldr	r3, [r7, #4]
 8004004:	689b      	ldr	r3, [r3, #8]
 8004006:	4921      	ldr	r1, [pc, #132]	@ (800408c <HAL_RCC_OscConfig+0x4c4>)
 8004008:	4313      	orrs	r3, r2
 800400a:	604b      	str	r3, [r1, #4]
 800400c:	4b1f      	ldr	r3, [pc, #124]	@ (800408c <HAL_RCC_OscConfig+0x4c4>)
 800400e:	685b      	ldr	r3, [r3, #4]
 8004010:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 8004014:	687b      	ldr	r3, [r7, #4]
 8004016:	6a19      	ldr	r1, [r3, #32]
 8004018:	687b      	ldr	r3, [r7, #4]
 800401a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800401c:	430b      	orrs	r3, r1
 800401e:	491b      	ldr	r1, [pc, #108]	@ (800408c <HAL_RCC_OscConfig+0x4c4>)
 8004020:	4313      	orrs	r3, r2
 8004022:	604b      	str	r3, [r1, #4]
 8004024:	4b1b      	ldr	r3, [pc, #108]	@ (8004094 <HAL_RCC_OscConfig+0x4cc>)
 8004026:	2201      	movs	r2, #1
 8004028:	601a      	str	r2, [r3, #0]
 800402a:	f7fe fd39 	bl	8002aa0 <HAL_GetTick>
 800402e:	6138      	str	r0, [r7, #16]
 8004030:	e008      	b.n	8004044 <HAL_RCC_OscConfig+0x47c>
 8004032:	f7fe fd35 	bl	8002aa0 <HAL_GetTick>
 8004036:	4602      	mov	r2, r0
 8004038:	693b      	ldr	r3, [r7, #16]
 800403a:	1ad3      	subs	r3, r2, r3
 800403c:	2b02      	cmp	r3, #2
 800403e:	d901      	bls.n	8004044 <HAL_RCC_OscConfig+0x47c>
 8004040:	2303      	movs	r3, #3
 8004042:	e03d      	b.n	80040c0 <HAL_RCC_OscConfig+0x4f8>
 8004044:	4b11      	ldr	r3, [pc, #68]	@ (800408c <HAL_RCC_OscConfig+0x4c4>)
 8004046:	681b      	ldr	r3, [r3, #0]
 8004048:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800404c:	2b00      	cmp	r3, #0
 800404e:	d0f0      	beq.n	8004032 <HAL_RCC_OscConfig+0x46a>
 8004050:	e035      	b.n	80040be <HAL_RCC_OscConfig+0x4f6>
 8004052:	4b10      	ldr	r3, [pc, #64]	@ (8004094 <HAL_RCC_OscConfig+0x4cc>)
 8004054:	2200      	movs	r2, #0
 8004056:	601a      	str	r2, [r3, #0]
 8004058:	f7fe fd22 	bl	8002aa0 <HAL_GetTick>
 800405c:	6138      	str	r0, [r7, #16]
 800405e:	e008      	b.n	8004072 <HAL_RCC_OscConfig+0x4aa>
 8004060:	f7fe fd1e 	bl	8002aa0 <HAL_GetTick>
 8004064:	4602      	mov	r2, r0
 8004066:	693b      	ldr	r3, [r7, #16]
 8004068:	1ad3      	subs	r3, r2, r3
 800406a:	2b02      	cmp	r3, #2
 800406c:	d901      	bls.n	8004072 <HAL_RCC_OscConfig+0x4aa>
 800406e:	2303      	movs	r3, #3
 8004070:	e026      	b.n	80040c0 <HAL_RCC_OscConfig+0x4f8>
 8004072:	4b06      	ldr	r3, [pc, #24]	@ (800408c <HAL_RCC_OscConfig+0x4c4>)
 8004074:	681b      	ldr	r3, [r3, #0]
 8004076:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800407a:	2b00      	cmp	r3, #0
 800407c:	d1f0      	bne.n	8004060 <HAL_RCC_OscConfig+0x498>
 800407e:	e01e      	b.n	80040be <HAL_RCC_OscConfig+0x4f6>
 8004080:	687b      	ldr	r3, [r7, #4]
 8004082:	69db      	ldr	r3, [r3, #28]
 8004084:	2b01      	cmp	r3, #1
 8004086:	d107      	bne.n	8004098 <HAL_RCC_OscConfig+0x4d0>
 8004088:	2301      	movs	r3, #1
 800408a:	e019      	b.n	80040c0 <HAL_RCC_OscConfig+0x4f8>
 800408c:	40021000 	.word	0x40021000
 8004090:	40007000 	.word	0x40007000
 8004094:	42420060 	.word	0x42420060
 8004098:	4b0b      	ldr	r3, [pc, #44]	@ (80040c8 <HAL_RCC_OscConfig+0x500>)
 800409a:	685b      	ldr	r3, [r3, #4]
 800409c:	60fb      	str	r3, [r7, #12]
 800409e:	68fb      	ldr	r3, [r7, #12]
 80040a0:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 80040a4:	687b      	ldr	r3, [r7, #4]
 80040a6:	6a1b      	ldr	r3, [r3, #32]
 80040a8:	429a      	cmp	r2, r3
 80040aa:	d106      	bne.n	80040ba <HAL_RCC_OscConfig+0x4f2>
 80040ac:	68fb      	ldr	r3, [r7, #12]
 80040ae:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 80040b2:	687b      	ldr	r3, [r7, #4]
 80040b4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80040b6:	429a      	cmp	r2, r3
 80040b8:	d001      	beq.n	80040be <HAL_RCC_OscConfig+0x4f6>
 80040ba:	2301      	movs	r3, #1
 80040bc:	e000      	b.n	80040c0 <HAL_RCC_OscConfig+0x4f8>
 80040be:	2300      	movs	r3, #0
 80040c0:	4618      	mov	r0, r3
 80040c2:	3718      	adds	r7, #24
 80040c4:	46bd      	mov	sp, r7
 80040c6:	bd80      	pop	{r7, pc}
 80040c8:	40021000 	.word	0x40021000

080040cc <HAL_RCC_ClockConfig>:
 80040cc:	b580      	push	{r7, lr}
 80040ce:	b084      	sub	sp, #16
 80040d0:	af00      	add	r7, sp, #0
 80040d2:	6078      	str	r0, [r7, #4]
 80040d4:	6039      	str	r1, [r7, #0]
 80040d6:	687b      	ldr	r3, [r7, #4]
 80040d8:	2b00      	cmp	r3, #0
 80040da:	d101      	bne.n	80040e0 <HAL_RCC_ClockConfig+0x14>
 80040dc:	2301      	movs	r3, #1
 80040de:	e0d0      	b.n	8004282 <HAL_RCC_ClockConfig+0x1b6>
 80040e0:	4b6a      	ldr	r3, [pc, #424]	@ (800428c <HAL_RCC_ClockConfig+0x1c0>)
 80040e2:	681b      	ldr	r3, [r3, #0]
 80040e4:	f003 0307 	and.w	r3, r3, #7
 80040e8:	683a      	ldr	r2, [r7, #0]
 80040ea:	429a      	cmp	r2, r3
 80040ec:	d910      	bls.n	8004110 <HAL_RCC_ClockConfig+0x44>
 80040ee:	4b67      	ldr	r3, [pc, #412]	@ (800428c <HAL_RCC_ClockConfig+0x1c0>)
 80040f0:	681b      	ldr	r3, [r3, #0]
 80040f2:	f023 0207 	bic.w	r2, r3, #7
 80040f6:	4965      	ldr	r1, [pc, #404]	@ (800428c <HAL_RCC_ClockConfig+0x1c0>)
 80040f8:	683b      	ldr	r3, [r7, #0]
 80040fa:	4313      	orrs	r3, r2
 80040fc:	600b      	str	r3, [r1, #0]
 80040fe:	4b63      	ldr	r3, [pc, #396]	@ (800428c <HAL_RCC_ClockConfig+0x1c0>)
 8004100:	681b      	ldr	r3, [r3, #0]
 8004102:	f003 0307 	and.w	r3, r3, #7
 8004106:	683a      	ldr	r2, [r7, #0]
 8004108:	429a      	cmp	r2, r3
 800410a:	d001      	beq.n	8004110 <HAL_RCC_ClockConfig+0x44>
 800410c:	2301      	movs	r3, #1
 800410e:	e0b8      	b.n	8004282 <HAL_RCC_ClockConfig+0x1b6>
 8004110:	687b      	ldr	r3, [r7, #4]
 8004112:	681b      	ldr	r3, [r3, #0]
 8004114:	f003 0302 	and.w	r3, r3, #2
 8004118:	2b00      	cmp	r3, #0
 800411a:	d020      	beq.n	800415e <HAL_RCC_ClockConfig+0x92>
 800411c:	687b      	ldr	r3, [r7, #4]
 800411e:	681b      	ldr	r3, [r3, #0]
 8004120:	f003 0304 	and.w	r3, r3, #4
 8004124:	2b00      	cmp	r3, #0
 8004126:	d005      	beq.n	8004134 <HAL_RCC_ClockConfig+0x68>
 8004128:	4b59      	ldr	r3, [pc, #356]	@ (8004290 <HAL_RCC_ClockConfig+0x1c4>)
 800412a:	685b      	ldr	r3, [r3, #4]
 800412c:	4a58      	ldr	r2, [pc, #352]	@ (8004290 <HAL_RCC_ClockConfig+0x1c4>)
 800412e:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8004132:	6053      	str	r3, [r2, #4]
 8004134:	687b      	ldr	r3, [r7, #4]
 8004136:	681b      	ldr	r3, [r3, #0]
 8004138:	f003 0308 	and.w	r3, r3, #8
 800413c:	2b00      	cmp	r3, #0
 800413e:	d005      	beq.n	800414c <HAL_RCC_ClockConfig+0x80>
 8004140:	4b53      	ldr	r3, [pc, #332]	@ (8004290 <HAL_RCC_ClockConfig+0x1c4>)
 8004142:	685b      	ldr	r3, [r3, #4]
 8004144:	4a52      	ldr	r2, [pc, #328]	@ (8004290 <HAL_RCC_ClockConfig+0x1c4>)
 8004146:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 800414a:	6053      	str	r3, [r2, #4]
 800414c:	4b50      	ldr	r3, [pc, #320]	@ (8004290 <HAL_RCC_ClockConfig+0x1c4>)
 800414e:	685b      	ldr	r3, [r3, #4]
 8004150:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8004154:	687b      	ldr	r3, [r7, #4]
 8004156:	689b      	ldr	r3, [r3, #8]
 8004158:	494d      	ldr	r1, [pc, #308]	@ (8004290 <HAL_RCC_ClockConfig+0x1c4>)
 800415a:	4313      	orrs	r3, r2
 800415c:	604b      	str	r3, [r1, #4]
 800415e:	687b      	ldr	r3, [r7, #4]
 8004160:	681b      	ldr	r3, [r3, #0]
 8004162:	f003 0301 	and.w	r3, r3, #1
 8004166:	2b00      	cmp	r3, #0
 8004168:	d040      	beq.n	80041ec <HAL_RCC_ClockConfig+0x120>
 800416a:	687b      	ldr	r3, [r7, #4]
 800416c:	685b      	ldr	r3, [r3, #4]
 800416e:	2b01      	cmp	r3, #1
 8004170:	d107      	bne.n	8004182 <HAL_RCC_ClockConfig+0xb6>
 8004172:	4b47      	ldr	r3, [pc, #284]	@ (8004290 <HAL_RCC_ClockConfig+0x1c4>)
 8004174:	681b      	ldr	r3, [r3, #0]
 8004176:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800417a:	2b00      	cmp	r3, #0
 800417c:	d115      	bne.n	80041aa <HAL_RCC_ClockConfig+0xde>
 800417e:	2301      	movs	r3, #1
 8004180:	e07f      	b.n	8004282 <HAL_RCC_ClockConfig+0x1b6>
 8004182:	687b      	ldr	r3, [r7, #4]
 8004184:	685b      	ldr	r3, [r3, #4]
 8004186:	2b02      	cmp	r3, #2
 8004188:	d107      	bne.n	800419a <HAL_RCC_ClockConfig+0xce>
 800418a:	4b41      	ldr	r3, [pc, #260]	@ (8004290 <HAL_RCC_ClockConfig+0x1c4>)
 800418c:	681b      	ldr	r3, [r3, #0]
 800418e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004192:	2b00      	cmp	r3, #0
 8004194:	d109      	bne.n	80041aa <HAL_RCC_ClockConfig+0xde>
 8004196:	2301      	movs	r3, #1
 8004198:	e073      	b.n	8004282 <HAL_RCC_ClockConfig+0x1b6>
 800419a:	4b3d      	ldr	r3, [pc, #244]	@ (8004290 <HAL_RCC_ClockConfig+0x1c4>)
 800419c:	681b      	ldr	r3, [r3, #0]
 800419e:	f003 0302 	and.w	r3, r3, #2
 80041a2:	2b00      	cmp	r3, #0
 80041a4:	d101      	bne.n	80041aa <HAL_RCC_ClockConfig+0xde>
 80041a6:	2301      	movs	r3, #1
 80041a8:	e06b      	b.n	8004282 <HAL_RCC_ClockConfig+0x1b6>
 80041aa:	4b39      	ldr	r3, [pc, #228]	@ (8004290 <HAL_RCC_ClockConfig+0x1c4>)
 80041ac:	685b      	ldr	r3, [r3, #4]
 80041ae:	f023 0203 	bic.w	r2, r3, #3
 80041b2:	687b      	ldr	r3, [r7, #4]
 80041b4:	685b      	ldr	r3, [r3, #4]
 80041b6:	4936      	ldr	r1, [pc, #216]	@ (8004290 <HAL_RCC_ClockConfig+0x1c4>)
 80041b8:	4313      	orrs	r3, r2
 80041ba:	604b      	str	r3, [r1, #4]
 80041bc:	f7fe fc70 	bl	8002aa0 <HAL_GetTick>
 80041c0:	60f8      	str	r0, [r7, #12]
 80041c2:	e00a      	b.n	80041da <HAL_RCC_ClockConfig+0x10e>
 80041c4:	f7fe fc6c 	bl	8002aa0 <HAL_GetTick>
 80041c8:	4602      	mov	r2, r0
 80041ca:	68fb      	ldr	r3, [r7, #12]
 80041cc:	1ad3      	subs	r3, r2, r3
 80041ce:	f241 3288 	movw	r2, #5000	@ 0x1388
 80041d2:	4293      	cmp	r3, r2
 80041d4:	d901      	bls.n	80041da <HAL_RCC_ClockConfig+0x10e>
 80041d6:	2303      	movs	r3, #3
 80041d8:	e053      	b.n	8004282 <HAL_RCC_ClockConfig+0x1b6>
 80041da:	4b2d      	ldr	r3, [pc, #180]	@ (8004290 <HAL_RCC_ClockConfig+0x1c4>)
 80041dc:	685b      	ldr	r3, [r3, #4]
 80041de:	f003 020c 	and.w	r2, r3, #12
 80041e2:	687b      	ldr	r3, [r7, #4]
 80041e4:	685b      	ldr	r3, [r3, #4]
 80041e6:	009b      	lsls	r3, r3, #2
 80041e8:	429a      	cmp	r2, r3
 80041ea:	d1eb      	bne.n	80041c4 <HAL_RCC_ClockConfig+0xf8>
 80041ec:	4b27      	ldr	r3, [pc, #156]	@ (800428c <HAL_RCC_ClockConfig+0x1c0>)
 80041ee:	681b      	ldr	r3, [r3, #0]
 80041f0:	f003 0307 	and.w	r3, r3, #7
 80041f4:	683a      	ldr	r2, [r7, #0]
 80041f6:	429a      	cmp	r2, r3
 80041f8:	d210      	bcs.n	800421c <HAL_RCC_ClockConfig+0x150>
 80041fa:	4b24      	ldr	r3, [pc, #144]	@ (800428c <HAL_RCC_ClockConfig+0x1c0>)
 80041fc:	681b      	ldr	r3, [r3, #0]
 80041fe:	f023 0207 	bic.w	r2, r3, #7
 8004202:	4922      	ldr	r1, [pc, #136]	@ (800428c <HAL_RCC_ClockConfig+0x1c0>)
 8004204:	683b      	ldr	r3, [r7, #0]
 8004206:	4313      	orrs	r3, r2
 8004208:	600b      	str	r3, [r1, #0]
 800420a:	4b20      	ldr	r3, [pc, #128]	@ (800428c <HAL_RCC_ClockConfig+0x1c0>)
 800420c:	681b      	ldr	r3, [r3, #0]
 800420e:	f003 0307 	and.w	r3, r3, #7
 8004212:	683a      	ldr	r2, [r7, #0]
 8004214:	429a      	cmp	r2, r3
 8004216:	d001      	beq.n	800421c <HAL_RCC_ClockConfig+0x150>
 8004218:	2301      	movs	r3, #1
 800421a:	e032      	b.n	8004282 <HAL_RCC_ClockConfig+0x1b6>
 800421c:	687b      	ldr	r3, [r7, #4]
 800421e:	681b      	ldr	r3, [r3, #0]
 8004220:	f003 0304 	and.w	r3, r3, #4
 8004224:	2b00      	cmp	r3, #0
 8004226:	d008      	beq.n	800423a <HAL_RCC_ClockConfig+0x16e>
 8004228:	4b19      	ldr	r3, [pc, #100]	@ (8004290 <HAL_RCC_ClockConfig+0x1c4>)
 800422a:	685b      	ldr	r3, [r3, #4]
 800422c:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8004230:	687b      	ldr	r3, [r7, #4]
 8004232:	68db      	ldr	r3, [r3, #12]
 8004234:	4916      	ldr	r1, [pc, #88]	@ (8004290 <HAL_RCC_ClockConfig+0x1c4>)
 8004236:	4313      	orrs	r3, r2
 8004238:	604b      	str	r3, [r1, #4]
 800423a:	687b      	ldr	r3, [r7, #4]
 800423c:	681b      	ldr	r3, [r3, #0]
 800423e:	f003 0308 	and.w	r3, r3, #8
 8004242:	2b00      	cmp	r3, #0
 8004244:	d009      	beq.n	800425a <HAL_RCC_ClockConfig+0x18e>
 8004246:	4b12      	ldr	r3, [pc, #72]	@ (8004290 <HAL_RCC_ClockConfig+0x1c4>)
 8004248:	685b      	ldr	r3, [r3, #4]
 800424a:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 800424e:	687b      	ldr	r3, [r7, #4]
 8004250:	691b      	ldr	r3, [r3, #16]
 8004252:	00db      	lsls	r3, r3, #3
 8004254:	490e      	ldr	r1, [pc, #56]	@ (8004290 <HAL_RCC_ClockConfig+0x1c4>)
 8004256:	4313      	orrs	r3, r2
 8004258:	604b      	str	r3, [r1, #4]
 800425a:	f000 f821 	bl	80042a0 <HAL_RCC_GetSysClockFreq>
 800425e:	4602      	mov	r2, r0
 8004260:	4b0b      	ldr	r3, [pc, #44]	@ (8004290 <HAL_RCC_ClockConfig+0x1c4>)
 8004262:	685b      	ldr	r3, [r3, #4]
 8004264:	091b      	lsrs	r3, r3, #4
 8004266:	f003 030f 	and.w	r3, r3, #15
 800426a:	490a      	ldr	r1, [pc, #40]	@ (8004294 <HAL_RCC_ClockConfig+0x1c8>)
 800426c:	5ccb      	ldrb	r3, [r1, r3]
 800426e:	fa22 f303 	lsr.w	r3, r2, r3
 8004272:	4a09      	ldr	r2, [pc, #36]	@ (8004298 <HAL_RCC_ClockConfig+0x1cc>)
 8004274:	6013      	str	r3, [r2, #0]
 8004276:	4b09      	ldr	r3, [pc, #36]	@ (800429c <HAL_RCC_ClockConfig+0x1d0>)
 8004278:	681b      	ldr	r3, [r3, #0]
 800427a:	4618      	mov	r0, r3
 800427c:	f7fe fbce 	bl	8002a1c <HAL_InitTick>
 8004280:	2300      	movs	r3, #0
 8004282:	4618      	mov	r0, r3
 8004284:	3710      	adds	r7, #16
 8004286:	46bd      	mov	sp, r7
 8004288:	bd80      	pop	{r7, pc}
 800428a:	bf00      	nop
 800428c:	40022000 	.word	0x40022000
 8004290:	40021000 	.word	0x40021000
 8004294:	08008980 	.word	0x08008980
 8004298:	20000000 	.word	0x20000000
 800429c:	20000004 	.word	0x20000004

080042a0 <HAL_RCC_GetSysClockFreq>:
 80042a0:	b480      	push	{r7}
 80042a2:	b087      	sub	sp, #28
 80042a4:	af00      	add	r7, sp, #0
 80042a6:	2300      	movs	r3, #0
 80042a8:	60fb      	str	r3, [r7, #12]
 80042aa:	2300      	movs	r3, #0
 80042ac:	60bb      	str	r3, [r7, #8]
 80042ae:	2300      	movs	r3, #0
 80042b0:	617b      	str	r3, [r7, #20]
 80042b2:	2300      	movs	r3, #0
 80042b4:	607b      	str	r3, [r7, #4]
 80042b6:	2300      	movs	r3, #0
 80042b8:	613b      	str	r3, [r7, #16]
 80042ba:	4b1e      	ldr	r3, [pc, #120]	@ (8004334 <HAL_RCC_GetSysClockFreq+0x94>)
 80042bc:	685b      	ldr	r3, [r3, #4]
 80042be:	60fb      	str	r3, [r7, #12]
 80042c0:	68fb      	ldr	r3, [r7, #12]
 80042c2:	f003 030c 	and.w	r3, r3, #12
 80042c6:	2b04      	cmp	r3, #4
 80042c8:	d002      	beq.n	80042d0 <HAL_RCC_GetSysClockFreq+0x30>
 80042ca:	2b08      	cmp	r3, #8
 80042cc:	d003      	beq.n	80042d6 <HAL_RCC_GetSysClockFreq+0x36>
 80042ce:	e027      	b.n	8004320 <HAL_RCC_GetSysClockFreq+0x80>
 80042d0:	4b19      	ldr	r3, [pc, #100]	@ (8004338 <HAL_RCC_GetSysClockFreq+0x98>)
 80042d2:	613b      	str	r3, [r7, #16]
 80042d4:	e027      	b.n	8004326 <HAL_RCC_GetSysClockFreq+0x86>
 80042d6:	68fb      	ldr	r3, [r7, #12]
 80042d8:	0c9b      	lsrs	r3, r3, #18
 80042da:	f003 030f 	and.w	r3, r3, #15
 80042de:	4a17      	ldr	r2, [pc, #92]	@ (800433c <HAL_RCC_GetSysClockFreq+0x9c>)
 80042e0:	5cd3      	ldrb	r3, [r2, r3]
 80042e2:	607b      	str	r3, [r7, #4]
 80042e4:	68fb      	ldr	r3, [r7, #12]
 80042e6:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80042ea:	2b00      	cmp	r3, #0
 80042ec:	d010      	beq.n	8004310 <HAL_RCC_GetSysClockFreq+0x70>
 80042ee:	4b11      	ldr	r3, [pc, #68]	@ (8004334 <HAL_RCC_GetSysClockFreq+0x94>)
 80042f0:	685b      	ldr	r3, [r3, #4]
 80042f2:	0c5b      	lsrs	r3, r3, #17
 80042f4:	f003 0301 	and.w	r3, r3, #1
 80042f8:	4a11      	ldr	r2, [pc, #68]	@ (8004340 <HAL_RCC_GetSysClockFreq+0xa0>)
 80042fa:	5cd3      	ldrb	r3, [r2, r3]
 80042fc:	60bb      	str	r3, [r7, #8]
 80042fe:	687b      	ldr	r3, [r7, #4]
 8004300:	4a0d      	ldr	r2, [pc, #52]	@ (8004338 <HAL_RCC_GetSysClockFreq+0x98>)
 8004302:	fb03 f202 	mul.w	r2, r3, r2
 8004306:	68bb      	ldr	r3, [r7, #8]
 8004308:	fbb2 f3f3 	udiv	r3, r2, r3
 800430c:	617b      	str	r3, [r7, #20]
 800430e:	e004      	b.n	800431a <HAL_RCC_GetSysClockFreq+0x7a>
 8004310:	687b      	ldr	r3, [r7, #4]
 8004312:	4a0c      	ldr	r2, [pc, #48]	@ (8004344 <HAL_RCC_GetSysClockFreq+0xa4>)
 8004314:	fb02 f303 	mul.w	r3, r2, r3
 8004318:	617b      	str	r3, [r7, #20]
 800431a:	697b      	ldr	r3, [r7, #20]
 800431c:	613b      	str	r3, [r7, #16]
 800431e:	e002      	b.n	8004326 <HAL_RCC_GetSysClockFreq+0x86>
 8004320:	4b09      	ldr	r3, [pc, #36]	@ (8004348 <HAL_RCC_GetSysClockFreq+0xa8>)
 8004322:	613b      	str	r3, [r7, #16]
 8004324:	bf00      	nop
 8004326:	693b      	ldr	r3, [r7, #16]
 8004328:	4618      	mov	r0, r3
 800432a:	371c      	adds	r7, #28
 800432c:	46bd      	mov	sp, r7
 800432e:	bc80      	pop	{r7}
 8004330:	4770      	bx	lr
 8004332:	bf00      	nop
 8004334:	40021000 	.word	0x40021000
 8004338:	00f42400 	.word	0x00f42400
 800433c:	08008990 	.word	0x08008990
 8004340:	080089a0 	.word	0x080089a0
 8004344:	003d0900 	.word	0x003d0900
 8004348:	007a1200 	.word	0x007a1200

0800434c <HAL_RCC_GetHCLKFreq>:
 800434c:	b480      	push	{r7}
 800434e:	af00      	add	r7, sp, #0
 8004350:	4b02      	ldr	r3, [pc, #8]	@ (800435c <HAL_RCC_GetHCLKFreq+0x10>)
 8004352:	681b      	ldr	r3, [r3, #0]
 8004354:	4618      	mov	r0, r3
 8004356:	46bd      	mov	sp, r7
 8004358:	bc80      	pop	{r7}
 800435a:	4770      	bx	lr
 800435c:	20000000 	.word	0x20000000

08004360 <HAL_RCC_GetPCLK1Freq>:
 8004360:	b580      	push	{r7, lr}
 8004362:	af00      	add	r7, sp, #0
 8004364:	f7ff fff2 	bl	800434c <HAL_RCC_GetHCLKFreq>
 8004368:	4602      	mov	r2, r0
 800436a:	4b05      	ldr	r3, [pc, #20]	@ (8004380 <HAL_RCC_GetPCLK1Freq+0x20>)
 800436c:	685b      	ldr	r3, [r3, #4]
 800436e:	0a1b      	lsrs	r3, r3, #8
 8004370:	f003 0307 	and.w	r3, r3, #7
 8004374:	4903      	ldr	r1, [pc, #12]	@ (8004384 <HAL_RCC_GetPCLK1Freq+0x24>)
 8004376:	5ccb      	ldrb	r3, [r1, r3]
 8004378:	fa22 f303 	lsr.w	r3, r2, r3
 800437c:	4618      	mov	r0, r3
 800437e:	bd80      	pop	{r7, pc}
 8004380:	40021000 	.word	0x40021000
 8004384:	08008978 	.word	0x08008978

08004388 <HAL_RCC_GetPCLK2Freq>:
 8004388:	b580      	push	{r7, lr}
 800438a:	af00      	add	r7, sp, #0
 800438c:	f7ff ffde 	bl	800434c <HAL_RCC_GetHCLKFreq>
 8004390:	4602      	mov	r2, r0
 8004392:	4b05      	ldr	r3, [pc, #20]	@ (80043a8 <HAL_RCC_GetPCLK2Freq+0x20>)
 8004394:	685b      	ldr	r3, [r3, #4]
 8004396:	0adb      	lsrs	r3, r3, #11
 8004398:	f003 0307 	and.w	r3, r3, #7
 800439c:	4903      	ldr	r1, [pc, #12]	@ (80043ac <HAL_RCC_GetPCLK2Freq+0x24>)
 800439e:	5ccb      	ldrb	r3, [r1, r3]
 80043a0:	fa22 f303 	lsr.w	r3, r2, r3
 80043a4:	4618      	mov	r0, r3
 80043a6:	bd80      	pop	{r7, pc}
 80043a8:	40021000 	.word	0x40021000
 80043ac:	08008978 	.word	0x08008978

080043b0 <RCC_Delay>:
 80043b0:	b480      	push	{r7}
 80043b2:	b085      	sub	sp, #20
 80043b4:	af00      	add	r7, sp, #0
 80043b6:	6078      	str	r0, [r7, #4]
 80043b8:	4b0a      	ldr	r3, [pc, #40]	@ (80043e4 <RCC_Delay+0x34>)
 80043ba:	681b      	ldr	r3, [r3, #0]
 80043bc:	4a0a      	ldr	r2, [pc, #40]	@ (80043e8 <RCC_Delay+0x38>)
 80043be:	fba2 2303 	umull	r2, r3, r2, r3
 80043c2:	0a5b      	lsrs	r3, r3, #9
 80043c4:	687a      	ldr	r2, [r7, #4]
 80043c6:	fb02 f303 	mul.w	r3, r2, r3
 80043ca:	60fb      	str	r3, [r7, #12]
 80043cc:	bf00      	nop
 80043ce:	68fb      	ldr	r3, [r7, #12]
 80043d0:	1e5a      	subs	r2, r3, #1
 80043d2:	60fa      	str	r2, [r7, #12]
 80043d4:	2b00      	cmp	r3, #0
 80043d6:	d1f9      	bne.n	80043cc <RCC_Delay+0x1c>
 80043d8:	bf00      	nop
 80043da:	bf00      	nop
 80043dc:	3714      	adds	r7, #20
 80043de:	46bd      	mov	sp, r7
 80043e0:	bc80      	pop	{r7}
 80043e2:	4770      	bx	lr
 80043e4:	20000000 	.word	0x20000000
 80043e8:	10624dd3 	.word	0x10624dd3

080043ec <HAL_RCCEx_PeriphCLKConfig>:
 80043ec:	b580      	push	{r7, lr}
 80043ee:	b086      	sub	sp, #24
 80043f0:	af00      	add	r7, sp, #0
 80043f2:	6078      	str	r0, [r7, #4]
 80043f4:	2300      	movs	r3, #0
 80043f6:	613b      	str	r3, [r7, #16]
 80043f8:	2300      	movs	r3, #0
 80043fa:	60fb      	str	r3, [r7, #12]
 80043fc:	687b      	ldr	r3, [r7, #4]
 80043fe:	681b      	ldr	r3, [r3, #0]
 8004400:	f003 0301 	and.w	r3, r3, #1
 8004404:	2b00      	cmp	r3, #0
 8004406:	d07d      	beq.n	8004504 <HAL_RCCEx_PeriphCLKConfig+0x118>
 8004408:	2300      	movs	r3, #0
 800440a:	75fb      	strb	r3, [r7, #23]
 800440c:	4b4f      	ldr	r3, [pc, #316]	@ (800454c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800440e:	69db      	ldr	r3, [r3, #28]
 8004410:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004414:	2b00      	cmp	r3, #0
 8004416:	d10d      	bne.n	8004434 <HAL_RCCEx_PeriphCLKConfig+0x48>
 8004418:	4b4c      	ldr	r3, [pc, #304]	@ (800454c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800441a:	69db      	ldr	r3, [r3, #28]
 800441c:	4a4b      	ldr	r2, [pc, #300]	@ (800454c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800441e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8004422:	61d3      	str	r3, [r2, #28]
 8004424:	4b49      	ldr	r3, [pc, #292]	@ (800454c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004426:	69db      	ldr	r3, [r3, #28]
 8004428:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800442c:	60bb      	str	r3, [r7, #8]
 800442e:	68bb      	ldr	r3, [r7, #8]
 8004430:	2301      	movs	r3, #1
 8004432:	75fb      	strb	r3, [r7, #23]
 8004434:	4b46      	ldr	r3, [pc, #280]	@ (8004550 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8004436:	681b      	ldr	r3, [r3, #0]
 8004438:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800443c:	2b00      	cmp	r3, #0
 800443e:	d118      	bne.n	8004472 <HAL_RCCEx_PeriphCLKConfig+0x86>
 8004440:	4b43      	ldr	r3, [pc, #268]	@ (8004550 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8004442:	681b      	ldr	r3, [r3, #0]
 8004444:	4a42      	ldr	r2, [pc, #264]	@ (8004550 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8004446:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800444a:	6013      	str	r3, [r2, #0]
 800444c:	f7fe fb28 	bl	8002aa0 <HAL_GetTick>
 8004450:	6138      	str	r0, [r7, #16]
 8004452:	e008      	b.n	8004466 <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8004454:	f7fe fb24 	bl	8002aa0 <HAL_GetTick>
 8004458:	4602      	mov	r2, r0
 800445a:	693b      	ldr	r3, [r7, #16]
 800445c:	1ad3      	subs	r3, r2, r3
 800445e:	2b64      	cmp	r3, #100	@ 0x64
 8004460:	d901      	bls.n	8004466 <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8004462:	2303      	movs	r3, #3
 8004464:	e06d      	b.n	8004542 <HAL_RCCEx_PeriphCLKConfig+0x156>
 8004466:	4b3a      	ldr	r3, [pc, #232]	@ (8004550 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8004468:	681b      	ldr	r3, [r3, #0]
 800446a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800446e:	2b00      	cmp	r3, #0
 8004470:	d0f0      	beq.n	8004454 <HAL_RCCEx_PeriphCLKConfig+0x68>
 8004472:	4b36      	ldr	r3, [pc, #216]	@ (800454c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004474:	6a1b      	ldr	r3, [r3, #32]
 8004476:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800447a:	60fb      	str	r3, [r7, #12]
 800447c:	68fb      	ldr	r3, [r7, #12]
 800447e:	2b00      	cmp	r3, #0
 8004480:	d02e      	beq.n	80044e0 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8004482:	687b      	ldr	r3, [r7, #4]
 8004484:	685b      	ldr	r3, [r3, #4]
 8004486:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800448a:	68fa      	ldr	r2, [r7, #12]
 800448c:	429a      	cmp	r2, r3
 800448e:	d027      	beq.n	80044e0 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8004490:	4b2e      	ldr	r3, [pc, #184]	@ (800454c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004492:	6a1b      	ldr	r3, [r3, #32]
 8004494:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004498:	60fb      	str	r3, [r7, #12]
 800449a:	4b2e      	ldr	r3, [pc, #184]	@ (8004554 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 800449c:	2201      	movs	r2, #1
 800449e:	601a      	str	r2, [r3, #0]
 80044a0:	4b2c      	ldr	r3, [pc, #176]	@ (8004554 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 80044a2:	2200      	movs	r2, #0
 80044a4:	601a      	str	r2, [r3, #0]
 80044a6:	4a29      	ldr	r2, [pc, #164]	@ (800454c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80044a8:	68fb      	ldr	r3, [r7, #12]
 80044aa:	6213      	str	r3, [r2, #32]
 80044ac:	68fb      	ldr	r3, [r7, #12]
 80044ae:	f003 0301 	and.w	r3, r3, #1
 80044b2:	2b00      	cmp	r3, #0
 80044b4:	d014      	beq.n	80044e0 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 80044b6:	f7fe faf3 	bl	8002aa0 <HAL_GetTick>
 80044ba:	6138      	str	r0, [r7, #16]
 80044bc:	e00a      	b.n	80044d4 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 80044be:	f7fe faef 	bl	8002aa0 <HAL_GetTick>
 80044c2:	4602      	mov	r2, r0
 80044c4:	693b      	ldr	r3, [r7, #16]
 80044c6:	1ad3      	subs	r3, r2, r3
 80044c8:	f241 3288 	movw	r2, #5000	@ 0x1388
 80044cc:	4293      	cmp	r3, r2
 80044ce:	d901      	bls.n	80044d4 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 80044d0:	2303      	movs	r3, #3
 80044d2:	e036      	b.n	8004542 <HAL_RCCEx_PeriphCLKConfig+0x156>
 80044d4:	4b1d      	ldr	r3, [pc, #116]	@ (800454c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80044d6:	6a1b      	ldr	r3, [r3, #32]
 80044d8:	f003 0302 	and.w	r3, r3, #2
 80044dc:	2b00      	cmp	r3, #0
 80044de:	d0ee      	beq.n	80044be <HAL_RCCEx_PeriphCLKConfig+0xd2>
 80044e0:	4b1a      	ldr	r3, [pc, #104]	@ (800454c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80044e2:	6a1b      	ldr	r3, [r3, #32]
 80044e4:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 80044e8:	687b      	ldr	r3, [r7, #4]
 80044ea:	685b      	ldr	r3, [r3, #4]
 80044ec:	4917      	ldr	r1, [pc, #92]	@ (800454c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80044ee:	4313      	orrs	r3, r2
 80044f0:	620b      	str	r3, [r1, #32]
 80044f2:	7dfb      	ldrb	r3, [r7, #23]
 80044f4:	2b01      	cmp	r3, #1
 80044f6:	d105      	bne.n	8004504 <HAL_RCCEx_PeriphCLKConfig+0x118>
 80044f8:	4b14      	ldr	r3, [pc, #80]	@ (800454c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80044fa:	69db      	ldr	r3, [r3, #28]
 80044fc:	4a13      	ldr	r2, [pc, #76]	@ (800454c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80044fe:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8004502:	61d3      	str	r3, [r2, #28]
 8004504:	687b      	ldr	r3, [r7, #4]
 8004506:	681b      	ldr	r3, [r3, #0]
 8004508:	f003 0302 	and.w	r3, r3, #2
 800450c:	2b00      	cmp	r3, #0
 800450e:	d008      	beq.n	8004522 <HAL_RCCEx_PeriphCLKConfig+0x136>
 8004510:	4b0e      	ldr	r3, [pc, #56]	@ (800454c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004512:	685b      	ldr	r3, [r3, #4]
 8004514:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 8004518:	687b      	ldr	r3, [r7, #4]
 800451a:	689b      	ldr	r3, [r3, #8]
 800451c:	490b      	ldr	r1, [pc, #44]	@ (800454c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800451e:	4313      	orrs	r3, r2
 8004520:	604b      	str	r3, [r1, #4]
 8004522:	687b      	ldr	r3, [r7, #4]
 8004524:	681b      	ldr	r3, [r3, #0]
 8004526:	f003 0310 	and.w	r3, r3, #16
 800452a:	2b00      	cmp	r3, #0
 800452c:	d008      	beq.n	8004540 <HAL_RCCEx_PeriphCLKConfig+0x154>
 800452e:	4b07      	ldr	r3, [pc, #28]	@ (800454c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004530:	685b      	ldr	r3, [r3, #4]
 8004532:	f423 0280 	bic.w	r2, r3, #4194304	@ 0x400000
 8004536:	687b      	ldr	r3, [r7, #4]
 8004538:	68db      	ldr	r3, [r3, #12]
 800453a:	4904      	ldr	r1, [pc, #16]	@ (800454c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800453c:	4313      	orrs	r3, r2
 800453e:	604b      	str	r3, [r1, #4]
 8004540:	2300      	movs	r3, #0
 8004542:	4618      	mov	r0, r3
 8004544:	3718      	adds	r7, #24
 8004546:	46bd      	mov	sp, r7
 8004548:	bd80      	pop	{r7, pc}
 800454a:	bf00      	nop
 800454c:	40021000 	.word	0x40021000
 8004550:	40007000 	.word	0x40007000
 8004554:	42420440 	.word	0x42420440

08004558 <HAL_RCCEx_GetPeriphCLKFreq>:
 8004558:	b580      	push	{r7, lr}
 800455a:	b088      	sub	sp, #32
 800455c:	af00      	add	r7, sp, #0
 800455e:	6078      	str	r0, [r7, #4]
 8004560:	2300      	movs	r3, #0
 8004562:	617b      	str	r3, [r7, #20]
 8004564:	2300      	movs	r3, #0
 8004566:	61fb      	str	r3, [r7, #28]
 8004568:	2300      	movs	r3, #0
 800456a:	613b      	str	r3, [r7, #16]
 800456c:	2300      	movs	r3, #0
 800456e:	60fb      	str	r3, [r7, #12]
 8004570:	2300      	movs	r3, #0
 8004572:	61bb      	str	r3, [r7, #24]
 8004574:	687b      	ldr	r3, [r7, #4]
 8004576:	2b10      	cmp	r3, #16
 8004578:	d00a      	beq.n	8004590 <HAL_RCCEx_GetPeriphCLKFreq+0x38>
 800457a:	687b      	ldr	r3, [r7, #4]
 800457c:	2b10      	cmp	r3, #16
 800457e:	f200 8089 	bhi.w	8004694 <HAL_RCCEx_GetPeriphCLKFreq+0x13c>
 8004582:	687b      	ldr	r3, [r7, #4]
 8004584:	2b01      	cmp	r3, #1
 8004586:	d045      	beq.n	8004614 <HAL_RCCEx_GetPeriphCLKFreq+0xbc>
 8004588:	687b      	ldr	r3, [r7, #4]
 800458a:	2b02      	cmp	r3, #2
 800458c:	d074      	beq.n	8004678 <HAL_RCCEx_GetPeriphCLKFreq+0x120>
 800458e:	e081      	b.n	8004694 <HAL_RCCEx_GetPeriphCLKFreq+0x13c>
 8004590:	4b45      	ldr	r3, [pc, #276]	@ (80046a8 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 8004592:	685b      	ldr	r3, [r3, #4]
 8004594:	60fb      	str	r3, [r7, #12]
 8004596:	4b44      	ldr	r3, [pc, #272]	@ (80046a8 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 8004598:	681b      	ldr	r3, [r3, #0]
 800459a:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800459e:	2b00      	cmp	r3, #0
 80045a0:	d07a      	beq.n	8004698 <HAL_RCCEx_GetPeriphCLKFreq+0x140>
 80045a2:	68fb      	ldr	r3, [r7, #12]
 80045a4:	0c9b      	lsrs	r3, r3, #18
 80045a6:	f003 030f 	and.w	r3, r3, #15
 80045aa:	4a40      	ldr	r2, [pc, #256]	@ (80046ac <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 80045ac:	5cd3      	ldrb	r3, [r2, r3]
 80045ae:	613b      	str	r3, [r7, #16]
 80045b0:	68fb      	ldr	r3, [r7, #12]
 80045b2:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80045b6:	2b00      	cmp	r3, #0
 80045b8:	d015      	beq.n	80045e6 <HAL_RCCEx_GetPeriphCLKFreq+0x8e>
 80045ba:	4b3b      	ldr	r3, [pc, #236]	@ (80046a8 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 80045bc:	685b      	ldr	r3, [r3, #4]
 80045be:	0c5b      	lsrs	r3, r3, #17
 80045c0:	f003 0301 	and.w	r3, r3, #1
 80045c4:	4a3a      	ldr	r2, [pc, #232]	@ (80046b0 <HAL_RCCEx_GetPeriphCLKFreq+0x158>)
 80045c6:	5cd3      	ldrb	r3, [r2, r3]
 80045c8:	617b      	str	r3, [r7, #20]
 80045ca:	68fb      	ldr	r3, [r7, #12]
 80045cc:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80045d0:	2b00      	cmp	r3, #0
 80045d2:	d00d      	beq.n	80045f0 <HAL_RCCEx_GetPeriphCLKFreq+0x98>
 80045d4:	4a37      	ldr	r2, [pc, #220]	@ (80046b4 <HAL_RCCEx_GetPeriphCLKFreq+0x15c>)
 80045d6:	697b      	ldr	r3, [r7, #20]
 80045d8:	fbb2 f2f3 	udiv	r2, r2, r3
 80045dc:	693b      	ldr	r3, [r7, #16]
 80045de:	fb02 f303 	mul.w	r3, r2, r3
 80045e2:	61fb      	str	r3, [r7, #28]
 80045e4:	e004      	b.n	80045f0 <HAL_RCCEx_GetPeriphCLKFreq+0x98>
 80045e6:	693b      	ldr	r3, [r7, #16]
 80045e8:	4a33      	ldr	r2, [pc, #204]	@ (80046b8 <HAL_RCCEx_GetPeriphCLKFreq+0x160>)
 80045ea:	fb02 f303 	mul.w	r3, r2, r3
 80045ee:	61fb      	str	r3, [r7, #28]
 80045f0:	4b2d      	ldr	r3, [pc, #180]	@ (80046a8 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 80045f2:	685b      	ldr	r3, [r3, #4]
 80045f4:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80045f8:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80045fc:	d102      	bne.n	8004604 <HAL_RCCEx_GetPeriphCLKFreq+0xac>
 80045fe:	69fb      	ldr	r3, [r7, #28]
 8004600:	61bb      	str	r3, [r7, #24]
 8004602:	e049      	b.n	8004698 <HAL_RCCEx_GetPeriphCLKFreq+0x140>
 8004604:	69fb      	ldr	r3, [r7, #28]
 8004606:	005b      	lsls	r3, r3, #1
 8004608:	4a2c      	ldr	r2, [pc, #176]	@ (80046bc <HAL_RCCEx_GetPeriphCLKFreq+0x164>)
 800460a:	fba2 2303 	umull	r2, r3, r2, r3
 800460e:	085b      	lsrs	r3, r3, #1
 8004610:	61bb      	str	r3, [r7, #24]
 8004612:	e041      	b.n	8004698 <HAL_RCCEx_GetPeriphCLKFreq+0x140>
 8004614:	4b24      	ldr	r3, [pc, #144]	@ (80046a8 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 8004616:	6a1b      	ldr	r3, [r3, #32]
 8004618:	60fb      	str	r3, [r7, #12]
 800461a:	68fb      	ldr	r3, [r7, #12]
 800461c:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8004620:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004624:	d108      	bne.n	8004638 <HAL_RCCEx_GetPeriphCLKFreq+0xe0>
 8004626:	68fb      	ldr	r3, [r7, #12]
 8004628:	f003 0302 	and.w	r3, r3, #2
 800462c:	2b00      	cmp	r3, #0
 800462e:	d003      	beq.n	8004638 <HAL_RCCEx_GetPeriphCLKFreq+0xe0>
 8004630:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8004634:	61bb      	str	r3, [r7, #24]
 8004636:	e01e      	b.n	8004676 <HAL_RCCEx_GetPeriphCLKFreq+0x11e>
 8004638:	68fb      	ldr	r3, [r7, #12]
 800463a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800463e:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8004642:	d109      	bne.n	8004658 <HAL_RCCEx_GetPeriphCLKFreq+0x100>
 8004644:	4b18      	ldr	r3, [pc, #96]	@ (80046a8 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 8004646:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004648:	f003 0302 	and.w	r3, r3, #2
 800464c:	2b00      	cmp	r3, #0
 800464e:	d003      	beq.n	8004658 <HAL_RCCEx_GetPeriphCLKFreq+0x100>
 8004650:	f649 4340 	movw	r3, #40000	@ 0x9c40
 8004654:	61bb      	str	r3, [r7, #24]
 8004656:	e00e      	b.n	8004676 <HAL_RCCEx_GetPeriphCLKFreq+0x11e>
 8004658:	68fb      	ldr	r3, [r7, #12]
 800465a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800465e:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8004662:	d11b      	bne.n	800469c <HAL_RCCEx_GetPeriphCLKFreq+0x144>
 8004664:	4b10      	ldr	r3, [pc, #64]	@ (80046a8 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 8004666:	681b      	ldr	r3, [r3, #0]
 8004668:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800466c:	2b00      	cmp	r3, #0
 800466e:	d015      	beq.n	800469c <HAL_RCCEx_GetPeriphCLKFreq+0x144>
 8004670:	4b13      	ldr	r3, [pc, #76]	@ (80046c0 <HAL_RCCEx_GetPeriphCLKFreq+0x168>)
 8004672:	61bb      	str	r3, [r7, #24]
 8004674:	e012      	b.n	800469c <HAL_RCCEx_GetPeriphCLKFreq+0x144>
 8004676:	e011      	b.n	800469c <HAL_RCCEx_GetPeriphCLKFreq+0x144>
 8004678:	f7ff fe86 	bl	8004388 <HAL_RCC_GetPCLK2Freq>
 800467c:	4602      	mov	r2, r0
 800467e:	4b0a      	ldr	r3, [pc, #40]	@ (80046a8 <HAL_RCCEx_GetPeriphCLKFreq+0x150>)
 8004680:	685b      	ldr	r3, [r3, #4]
 8004682:	0b9b      	lsrs	r3, r3, #14
 8004684:	f003 0303 	and.w	r3, r3, #3
 8004688:	3301      	adds	r3, #1
 800468a:	005b      	lsls	r3, r3, #1
 800468c:	fbb2 f3f3 	udiv	r3, r2, r3
 8004690:	61bb      	str	r3, [r7, #24]
 8004692:	e004      	b.n	800469e <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 8004694:	bf00      	nop
 8004696:	e002      	b.n	800469e <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 8004698:	bf00      	nop
 800469a:	e000      	b.n	800469e <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 800469c:	bf00      	nop
 800469e:	69bb      	ldr	r3, [r7, #24]
 80046a0:	4618      	mov	r0, r3
 80046a2:	3720      	adds	r7, #32
 80046a4:	46bd      	mov	sp, r7
 80046a6:	bd80      	pop	{r7, pc}
 80046a8:	40021000 	.word	0x40021000
 80046ac:	080089a4 	.word	0x080089a4
 80046b0:	080089b4 	.word	0x080089b4
 80046b4:	00f42400 	.word	0x00f42400
 80046b8:	003d0900 	.word	0x003d0900
 80046bc:	aaaaaaab 	.word	0xaaaaaaab
 80046c0:	0001e848 	.word	0x0001e848

080046c4 <HAL_TIM_Base_Init>:
 80046c4:	b580      	push	{r7, lr}
 80046c6:	b082      	sub	sp, #8
 80046c8:	af00      	add	r7, sp, #0
 80046ca:	6078      	str	r0, [r7, #4]
 80046cc:	687b      	ldr	r3, [r7, #4]
 80046ce:	2b00      	cmp	r3, #0
 80046d0:	d101      	bne.n	80046d6 <HAL_TIM_Base_Init+0x12>
 80046d2:	2301      	movs	r3, #1
 80046d4:	e041      	b.n	800475a <HAL_TIM_Base_Init+0x96>
 80046d6:	687b      	ldr	r3, [r7, #4]
 80046d8:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80046dc:	b2db      	uxtb	r3, r3
 80046de:	2b00      	cmp	r3, #0
 80046e0:	d106      	bne.n	80046f0 <HAL_TIM_Base_Init+0x2c>
 80046e2:	687b      	ldr	r3, [r7, #4]
 80046e4:	2200      	movs	r2, #0
 80046e6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80046ea:	6878      	ldr	r0, [r7, #4]
 80046ec:	f7fd ffde 	bl	80026ac <HAL_TIM_Base_MspInit>
 80046f0:	687b      	ldr	r3, [r7, #4]
 80046f2:	2202      	movs	r2, #2
 80046f4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80046f8:	687b      	ldr	r3, [r7, #4]
 80046fa:	681a      	ldr	r2, [r3, #0]
 80046fc:	687b      	ldr	r3, [r7, #4]
 80046fe:	3304      	adds	r3, #4
 8004700:	4619      	mov	r1, r3
 8004702:	4610      	mov	r0, r2
 8004704:	f000 fa10 	bl	8004b28 <TIM_Base_SetConfig>
 8004708:	687b      	ldr	r3, [r7, #4]
 800470a:	2201      	movs	r2, #1
 800470c:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8004710:	687b      	ldr	r3, [r7, #4]
 8004712:	2201      	movs	r2, #1
 8004714:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004718:	687b      	ldr	r3, [r7, #4]
 800471a:	2201      	movs	r2, #1
 800471c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004720:	687b      	ldr	r3, [r7, #4]
 8004722:	2201      	movs	r2, #1
 8004724:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004728:	687b      	ldr	r3, [r7, #4]
 800472a:	2201      	movs	r2, #1
 800472c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004730:	687b      	ldr	r3, [r7, #4]
 8004732:	2201      	movs	r2, #1
 8004734:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004738:	687b      	ldr	r3, [r7, #4]
 800473a:	2201      	movs	r2, #1
 800473c:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8004740:	687b      	ldr	r3, [r7, #4]
 8004742:	2201      	movs	r2, #1
 8004744:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8004748:	687b      	ldr	r3, [r7, #4]
 800474a:	2201      	movs	r2, #1
 800474c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8004750:	687b      	ldr	r3, [r7, #4]
 8004752:	2201      	movs	r2, #1
 8004754:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004758:	2300      	movs	r3, #0
 800475a:	4618      	mov	r0, r3
 800475c:	3708      	adds	r7, #8
 800475e:	46bd      	mov	sp, r7
 8004760:	bd80      	pop	{r7, pc}

08004762 <HAL_TIM_PWM_Init>:
 8004762:	b580      	push	{r7, lr}
 8004764:	b082      	sub	sp, #8
 8004766:	af00      	add	r7, sp, #0
 8004768:	6078      	str	r0, [r7, #4]
 800476a:	687b      	ldr	r3, [r7, #4]
 800476c:	2b00      	cmp	r3, #0
 800476e:	d101      	bne.n	8004774 <HAL_TIM_PWM_Init+0x12>
 8004770:	2301      	movs	r3, #1
 8004772:	e041      	b.n	80047f8 <HAL_TIM_PWM_Init+0x96>
 8004774:	687b      	ldr	r3, [r7, #4]
 8004776:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800477a:	b2db      	uxtb	r3, r3
 800477c:	2b00      	cmp	r3, #0
 800477e:	d106      	bne.n	800478e <HAL_TIM_PWM_Init+0x2c>
 8004780:	687b      	ldr	r3, [r7, #4]
 8004782:	2200      	movs	r2, #0
 8004784:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004788:	6878      	ldr	r0, [r7, #4]
 800478a:	f000 f839 	bl	8004800 <HAL_TIM_PWM_MspInit>
 800478e:	687b      	ldr	r3, [r7, #4]
 8004790:	2202      	movs	r2, #2
 8004792:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004796:	687b      	ldr	r3, [r7, #4]
 8004798:	681a      	ldr	r2, [r3, #0]
 800479a:	687b      	ldr	r3, [r7, #4]
 800479c:	3304      	adds	r3, #4
 800479e:	4619      	mov	r1, r3
 80047a0:	4610      	mov	r0, r2
 80047a2:	f000 f9c1 	bl	8004b28 <TIM_Base_SetConfig>
 80047a6:	687b      	ldr	r3, [r7, #4]
 80047a8:	2201      	movs	r2, #1
 80047aa:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80047ae:	687b      	ldr	r3, [r7, #4]
 80047b0:	2201      	movs	r2, #1
 80047b2:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80047b6:	687b      	ldr	r3, [r7, #4]
 80047b8:	2201      	movs	r2, #1
 80047ba:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80047be:	687b      	ldr	r3, [r7, #4]
 80047c0:	2201      	movs	r2, #1
 80047c2:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80047c6:	687b      	ldr	r3, [r7, #4]
 80047c8:	2201      	movs	r2, #1
 80047ca:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80047ce:	687b      	ldr	r3, [r7, #4]
 80047d0:	2201      	movs	r2, #1
 80047d2:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80047d6:	687b      	ldr	r3, [r7, #4]
 80047d8:	2201      	movs	r2, #1
 80047da:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80047de:	687b      	ldr	r3, [r7, #4]
 80047e0:	2201      	movs	r2, #1
 80047e2:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80047e6:	687b      	ldr	r3, [r7, #4]
 80047e8:	2201      	movs	r2, #1
 80047ea:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80047ee:	687b      	ldr	r3, [r7, #4]
 80047f0:	2201      	movs	r2, #1
 80047f2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80047f6:	2300      	movs	r3, #0
 80047f8:	4618      	mov	r0, r3
 80047fa:	3708      	adds	r7, #8
 80047fc:	46bd      	mov	sp, r7
 80047fe:	bd80      	pop	{r7, pc}

08004800 <HAL_TIM_PWM_MspInit>:
 8004800:	b480      	push	{r7}
 8004802:	b083      	sub	sp, #12
 8004804:	af00      	add	r7, sp, #0
 8004806:	6078      	str	r0, [r7, #4]
 8004808:	bf00      	nop
 800480a:	370c      	adds	r7, #12
 800480c:	46bd      	mov	sp, r7
 800480e:	bc80      	pop	{r7}
 8004810:	4770      	bx	lr
	...

08004814 <HAL_TIM_PWM_ConfigChannel>:
 8004814:	b580      	push	{r7, lr}
 8004816:	b086      	sub	sp, #24
 8004818:	af00      	add	r7, sp, #0
 800481a:	60f8      	str	r0, [r7, #12]
 800481c:	60b9      	str	r1, [r7, #8]
 800481e:	607a      	str	r2, [r7, #4]
 8004820:	2300      	movs	r3, #0
 8004822:	75fb      	strb	r3, [r7, #23]
 8004824:	68fb      	ldr	r3, [r7, #12]
 8004826:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800482a:	2b01      	cmp	r3, #1
 800482c:	d101      	bne.n	8004832 <HAL_TIM_PWM_ConfigChannel+0x1e>
 800482e:	2302      	movs	r3, #2
 8004830:	e0ae      	b.n	8004990 <HAL_TIM_PWM_ConfigChannel+0x17c>
 8004832:	68fb      	ldr	r3, [r7, #12]
 8004834:	2201      	movs	r2, #1
 8004836:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800483a:	687b      	ldr	r3, [r7, #4]
 800483c:	2b0c      	cmp	r3, #12
 800483e:	f200 809f 	bhi.w	8004980 <HAL_TIM_PWM_ConfigChannel+0x16c>
 8004842:	a201      	add	r2, pc, #4	@ (adr r2, 8004848 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8004844:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004848:	0800487d 	.word	0x0800487d
 800484c:	08004981 	.word	0x08004981
 8004850:	08004981 	.word	0x08004981
 8004854:	08004981 	.word	0x08004981
 8004858:	080048bd 	.word	0x080048bd
 800485c:	08004981 	.word	0x08004981
 8004860:	08004981 	.word	0x08004981
 8004864:	08004981 	.word	0x08004981
 8004868:	080048ff 	.word	0x080048ff
 800486c:	08004981 	.word	0x08004981
 8004870:	08004981 	.word	0x08004981
 8004874:	08004981 	.word	0x08004981
 8004878:	0800493f 	.word	0x0800493f
 800487c:	68fb      	ldr	r3, [r7, #12]
 800487e:	681b      	ldr	r3, [r3, #0]
 8004880:	68b9      	ldr	r1, [r7, #8]
 8004882:	4618      	mov	r0, r3
 8004884:	f000 f9b2 	bl	8004bec <TIM_OC1_SetConfig>
 8004888:	68fb      	ldr	r3, [r7, #12]
 800488a:	681b      	ldr	r3, [r3, #0]
 800488c:	699a      	ldr	r2, [r3, #24]
 800488e:	68fb      	ldr	r3, [r7, #12]
 8004890:	681b      	ldr	r3, [r3, #0]
 8004892:	f042 0208 	orr.w	r2, r2, #8
 8004896:	619a      	str	r2, [r3, #24]
 8004898:	68fb      	ldr	r3, [r7, #12]
 800489a:	681b      	ldr	r3, [r3, #0]
 800489c:	699a      	ldr	r2, [r3, #24]
 800489e:	68fb      	ldr	r3, [r7, #12]
 80048a0:	681b      	ldr	r3, [r3, #0]
 80048a2:	f022 0204 	bic.w	r2, r2, #4
 80048a6:	619a      	str	r2, [r3, #24]
 80048a8:	68fb      	ldr	r3, [r7, #12]
 80048aa:	681b      	ldr	r3, [r3, #0]
 80048ac:	6999      	ldr	r1, [r3, #24]
 80048ae:	68bb      	ldr	r3, [r7, #8]
 80048b0:	691a      	ldr	r2, [r3, #16]
 80048b2:	68fb      	ldr	r3, [r7, #12]
 80048b4:	681b      	ldr	r3, [r3, #0]
 80048b6:	430a      	orrs	r2, r1
 80048b8:	619a      	str	r2, [r3, #24]
 80048ba:	e064      	b.n	8004986 <HAL_TIM_PWM_ConfigChannel+0x172>
 80048bc:	68fb      	ldr	r3, [r7, #12]
 80048be:	681b      	ldr	r3, [r3, #0]
 80048c0:	68b9      	ldr	r1, [r7, #8]
 80048c2:	4618      	mov	r0, r3
 80048c4:	f000 f9f8 	bl	8004cb8 <TIM_OC2_SetConfig>
 80048c8:	68fb      	ldr	r3, [r7, #12]
 80048ca:	681b      	ldr	r3, [r3, #0]
 80048cc:	699a      	ldr	r2, [r3, #24]
 80048ce:	68fb      	ldr	r3, [r7, #12]
 80048d0:	681b      	ldr	r3, [r3, #0]
 80048d2:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80048d6:	619a      	str	r2, [r3, #24]
 80048d8:	68fb      	ldr	r3, [r7, #12]
 80048da:	681b      	ldr	r3, [r3, #0]
 80048dc:	699a      	ldr	r2, [r3, #24]
 80048de:	68fb      	ldr	r3, [r7, #12]
 80048e0:	681b      	ldr	r3, [r3, #0]
 80048e2:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80048e6:	619a      	str	r2, [r3, #24]
 80048e8:	68fb      	ldr	r3, [r7, #12]
 80048ea:	681b      	ldr	r3, [r3, #0]
 80048ec:	6999      	ldr	r1, [r3, #24]
 80048ee:	68bb      	ldr	r3, [r7, #8]
 80048f0:	691b      	ldr	r3, [r3, #16]
 80048f2:	021a      	lsls	r2, r3, #8
 80048f4:	68fb      	ldr	r3, [r7, #12]
 80048f6:	681b      	ldr	r3, [r3, #0]
 80048f8:	430a      	orrs	r2, r1
 80048fa:	619a      	str	r2, [r3, #24]
 80048fc:	e043      	b.n	8004986 <HAL_TIM_PWM_ConfigChannel+0x172>
 80048fe:	68fb      	ldr	r3, [r7, #12]
 8004900:	681b      	ldr	r3, [r3, #0]
 8004902:	68b9      	ldr	r1, [r7, #8]
 8004904:	4618      	mov	r0, r3
 8004906:	f000 fa41 	bl	8004d8c <TIM_OC3_SetConfig>
 800490a:	68fb      	ldr	r3, [r7, #12]
 800490c:	681b      	ldr	r3, [r3, #0]
 800490e:	69da      	ldr	r2, [r3, #28]
 8004910:	68fb      	ldr	r3, [r7, #12]
 8004912:	681b      	ldr	r3, [r3, #0]
 8004914:	f042 0208 	orr.w	r2, r2, #8
 8004918:	61da      	str	r2, [r3, #28]
 800491a:	68fb      	ldr	r3, [r7, #12]
 800491c:	681b      	ldr	r3, [r3, #0]
 800491e:	69da      	ldr	r2, [r3, #28]
 8004920:	68fb      	ldr	r3, [r7, #12]
 8004922:	681b      	ldr	r3, [r3, #0]
 8004924:	f022 0204 	bic.w	r2, r2, #4
 8004928:	61da      	str	r2, [r3, #28]
 800492a:	68fb      	ldr	r3, [r7, #12]
 800492c:	681b      	ldr	r3, [r3, #0]
 800492e:	69d9      	ldr	r1, [r3, #28]
 8004930:	68bb      	ldr	r3, [r7, #8]
 8004932:	691a      	ldr	r2, [r3, #16]
 8004934:	68fb      	ldr	r3, [r7, #12]
 8004936:	681b      	ldr	r3, [r3, #0]
 8004938:	430a      	orrs	r2, r1
 800493a:	61da      	str	r2, [r3, #28]
 800493c:	e023      	b.n	8004986 <HAL_TIM_PWM_ConfigChannel+0x172>
 800493e:	68fb      	ldr	r3, [r7, #12]
 8004940:	681b      	ldr	r3, [r3, #0]
 8004942:	68b9      	ldr	r1, [r7, #8]
 8004944:	4618      	mov	r0, r3
 8004946:	f000 fa8b 	bl	8004e60 <TIM_OC4_SetConfig>
 800494a:	68fb      	ldr	r3, [r7, #12]
 800494c:	681b      	ldr	r3, [r3, #0]
 800494e:	69da      	ldr	r2, [r3, #28]
 8004950:	68fb      	ldr	r3, [r7, #12]
 8004952:	681b      	ldr	r3, [r3, #0]
 8004954:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004958:	61da      	str	r2, [r3, #28]
 800495a:	68fb      	ldr	r3, [r7, #12]
 800495c:	681b      	ldr	r3, [r3, #0]
 800495e:	69da      	ldr	r2, [r3, #28]
 8004960:	68fb      	ldr	r3, [r7, #12]
 8004962:	681b      	ldr	r3, [r3, #0]
 8004964:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004968:	61da      	str	r2, [r3, #28]
 800496a:	68fb      	ldr	r3, [r7, #12]
 800496c:	681b      	ldr	r3, [r3, #0]
 800496e:	69d9      	ldr	r1, [r3, #28]
 8004970:	68bb      	ldr	r3, [r7, #8]
 8004972:	691b      	ldr	r3, [r3, #16]
 8004974:	021a      	lsls	r2, r3, #8
 8004976:	68fb      	ldr	r3, [r7, #12]
 8004978:	681b      	ldr	r3, [r3, #0]
 800497a:	430a      	orrs	r2, r1
 800497c:	61da      	str	r2, [r3, #28]
 800497e:	e002      	b.n	8004986 <HAL_TIM_PWM_ConfigChannel+0x172>
 8004980:	2301      	movs	r3, #1
 8004982:	75fb      	strb	r3, [r7, #23]
 8004984:	bf00      	nop
 8004986:	68fb      	ldr	r3, [r7, #12]
 8004988:	2200      	movs	r2, #0
 800498a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800498e:	7dfb      	ldrb	r3, [r7, #23]
 8004990:	4618      	mov	r0, r3
 8004992:	3718      	adds	r7, #24
 8004994:	46bd      	mov	sp, r7
 8004996:	bd80      	pop	{r7, pc}

08004998 <HAL_TIM_ConfigClockSource>:
 8004998:	b580      	push	{r7, lr}
 800499a:	b084      	sub	sp, #16
 800499c:	af00      	add	r7, sp, #0
 800499e:	6078      	str	r0, [r7, #4]
 80049a0:	6039      	str	r1, [r7, #0]
 80049a2:	2300      	movs	r3, #0
 80049a4:	73fb      	strb	r3, [r7, #15]
 80049a6:	687b      	ldr	r3, [r7, #4]
 80049a8:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80049ac:	2b01      	cmp	r3, #1
 80049ae:	d101      	bne.n	80049b4 <HAL_TIM_ConfigClockSource+0x1c>
 80049b0:	2302      	movs	r3, #2
 80049b2:	e0b4      	b.n	8004b1e <HAL_TIM_ConfigClockSource+0x186>
 80049b4:	687b      	ldr	r3, [r7, #4]
 80049b6:	2201      	movs	r2, #1
 80049b8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80049bc:	687b      	ldr	r3, [r7, #4]
 80049be:	2202      	movs	r2, #2
 80049c0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80049c4:	687b      	ldr	r3, [r7, #4]
 80049c6:	681b      	ldr	r3, [r3, #0]
 80049c8:	689b      	ldr	r3, [r3, #8]
 80049ca:	60bb      	str	r3, [r7, #8]
 80049cc:	68bb      	ldr	r3, [r7, #8]
 80049ce:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 80049d2:	60bb      	str	r3, [r7, #8]
 80049d4:	68bb      	ldr	r3, [r7, #8]
 80049d6:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80049da:	60bb      	str	r3, [r7, #8]
 80049dc:	687b      	ldr	r3, [r7, #4]
 80049de:	681b      	ldr	r3, [r3, #0]
 80049e0:	68ba      	ldr	r2, [r7, #8]
 80049e2:	609a      	str	r2, [r3, #8]
 80049e4:	683b      	ldr	r3, [r7, #0]
 80049e6:	681b      	ldr	r3, [r3, #0]
 80049e8:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80049ec:	d03e      	beq.n	8004a6c <HAL_TIM_ConfigClockSource+0xd4>
 80049ee:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80049f2:	f200 8087 	bhi.w	8004b04 <HAL_TIM_ConfigClockSource+0x16c>
 80049f6:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80049fa:	f000 8086 	beq.w	8004b0a <HAL_TIM_ConfigClockSource+0x172>
 80049fe:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004a02:	d87f      	bhi.n	8004b04 <HAL_TIM_ConfigClockSource+0x16c>
 8004a04:	2b70      	cmp	r3, #112	@ 0x70
 8004a06:	d01a      	beq.n	8004a3e <HAL_TIM_ConfigClockSource+0xa6>
 8004a08:	2b70      	cmp	r3, #112	@ 0x70
 8004a0a:	d87b      	bhi.n	8004b04 <HAL_TIM_ConfigClockSource+0x16c>
 8004a0c:	2b60      	cmp	r3, #96	@ 0x60
 8004a0e:	d050      	beq.n	8004ab2 <HAL_TIM_ConfigClockSource+0x11a>
 8004a10:	2b60      	cmp	r3, #96	@ 0x60
 8004a12:	d877      	bhi.n	8004b04 <HAL_TIM_ConfigClockSource+0x16c>
 8004a14:	2b50      	cmp	r3, #80	@ 0x50
 8004a16:	d03c      	beq.n	8004a92 <HAL_TIM_ConfigClockSource+0xfa>
 8004a18:	2b50      	cmp	r3, #80	@ 0x50
 8004a1a:	d873      	bhi.n	8004b04 <HAL_TIM_ConfigClockSource+0x16c>
 8004a1c:	2b40      	cmp	r3, #64	@ 0x40
 8004a1e:	d058      	beq.n	8004ad2 <HAL_TIM_ConfigClockSource+0x13a>
 8004a20:	2b40      	cmp	r3, #64	@ 0x40
 8004a22:	d86f      	bhi.n	8004b04 <HAL_TIM_ConfigClockSource+0x16c>
 8004a24:	2b30      	cmp	r3, #48	@ 0x30
 8004a26:	d064      	beq.n	8004af2 <HAL_TIM_ConfigClockSource+0x15a>
 8004a28:	2b30      	cmp	r3, #48	@ 0x30
 8004a2a:	d86b      	bhi.n	8004b04 <HAL_TIM_ConfigClockSource+0x16c>
 8004a2c:	2b20      	cmp	r3, #32
 8004a2e:	d060      	beq.n	8004af2 <HAL_TIM_ConfigClockSource+0x15a>
 8004a30:	2b20      	cmp	r3, #32
 8004a32:	d867      	bhi.n	8004b04 <HAL_TIM_ConfigClockSource+0x16c>
 8004a34:	2b00      	cmp	r3, #0
 8004a36:	d05c      	beq.n	8004af2 <HAL_TIM_ConfigClockSource+0x15a>
 8004a38:	2b10      	cmp	r3, #16
 8004a3a:	d05a      	beq.n	8004af2 <HAL_TIM_ConfigClockSource+0x15a>
 8004a3c:	e062      	b.n	8004b04 <HAL_TIM_ConfigClockSource+0x16c>
 8004a3e:	687b      	ldr	r3, [r7, #4]
 8004a40:	6818      	ldr	r0, [r3, #0]
 8004a42:	683b      	ldr	r3, [r7, #0]
 8004a44:	6899      	ldr	r1, [r3, #8]
 8004a46:	683b      	ldr	r3, [r7, #0]
 8004a48:	685a      	ldr	r2, [r3, #4]
 8004a4a:	683b      	ldr	r3, [r7, #0]
 8004a4c:	68db      	ldr	r3, [r3, #12]
 8004a4e:	f000 facc 	bl	8004fea <TIM_ETR_SetConfig>
 8004a52:	687b      	ldr	r3, [r7, #4]
 8004a54:	681b      	ldr	r3, [r3, #0]
 8004a56:	689b      	ldr	r3, [r3, #8]
 8004a58:	60bb      	str	r3, [r7, #8]
 8004a5a:	68bb      	ldr	r3, [r7, #8]
 8004a5c:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8004a60:	60bb      	str	r3, [r7, #8]
 8004a62:	687b      	ldr	r3, [r7, #4]
 8004a64:	681b      	ldr	r3, [r3, #0]
 8004a66:	68ba      	ldr	r2, [r7, #8]
 8004a68:	609a      	str	r2, [r3, #8]
 8004a6a:	e04f      	b.n	8004b0c <HAL_TIM_ConfigClockSource+0x174>
 8004a6c:	687b      	ldr	r3, [r7, #4]
 8004a6e:	6818      	ldr	r0, [r3, #0]
 8004a70:	683b      	ldr	r3, [r7, #0]
 8004a72:	6899      	ldr	r1, [r3, #8]
 8004a74:	683b      	ldr	r3, [r7, #0]
 8004a76:	685a      	ldr	r2, [r3, #4]
 8004a78:	683b      	ldr	r3, [r7, #0]
 8004a7a:	68db      	ldr	r3, [r3, #12]
 8004a7c:	f000 fab5 	bl	8004fea <TIM_ETR_SetConfig>
 8004a80:	687b      	ldr	r3, [r7, #4]
 8004a82:	681b      	ldr	r3, [r3, #0]
 8004a84:	689a      	ldr	r2, [r3, #8]
 8004a86:	687b      	ldr	r3, [r7, #4]
 8004a88:	681b      	ldr	r3, [r3, #0]
 8004a8a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8004a8e:	609a      	str	r2, [r3, #8]
 8004a90:	e03c      	b.n	8004b0c <HAL_TIM_ConfigClockSource+0x174>
 8004a92:	687b      	ldr	r3, [r7, #4]
 8004a94:	6818      	ldr	r0, [r3, #0]
 8004a96:	683b      	ldr	r3, [r7, #0]
 8004a98:	6859      	ldr	r1, [r3, #4]
 8004a9a:	683b      	ldr	r3, [r7, #0]
 8004a9c:	68db      	ldr	r3, [r3, #12]
 8004a9e:	461a      	mov	r2, r3
 8004aa0:	f000 fa2c 	bl	8004efc <TIM_TI1_ConfigInputStage>
 8004aa4:	687b      	ldr	r3, [r7, #4]
 8004aa6:	681b      	ldr	r3, [r3, #0]
 8004aa8:	2150      	movs	r1, #80	@ 0x50
 8004aaa:	4618      	mov	r0, r3
 8004aac:	f000 fa83 	bl	8004fb6 <TIM_ITRx_SetConfig>
 8004ab0:	e02c      	b.n	8004b0c <HAL_TIM_ConfigClockSource+0x174>
 8004ab2:	687b      	ldr	r3, [r7, #4]
 8004ab4:	6818      	ldr	r0, [r3, #0]
 8004ab6:	683b      	ldr	r3, [r7, #0]
 8004ab8:	6859      	ldr	r1, [r3, #4]
 8004aba:	683b      	ldr	r3, [r7, #0]
 8004abc:	68db      	ldr	r3, [r3, #12]
 8004abe:	461a      	mov	r2, r3
 8004ac0:	f000 fa4a 	bl	8004f58 <TIM_TI2_ConfigInputStage>
 8004ac4:	687b      	ldr	r3, [r7, #4]
 8004ac6:	681b      	ldr	r3, [r3, #0]
 8004ac8:	2160      	movs	r1, #96	@ 0x60
 8004aca:	4618      	mov	r0, r3
 8004acc:	f000 fa73 	bl	8004fb6 <TIM_ITRx_SetConfig>
 8004ad0:	e01c      	b.n	8004b0c <HAL_TIM_ConfigClockSource+0x174>
 8004ad2:	687b      	ldr	r3, [r7, #4]
 8004ad4:	6818      	ldr	r0, [r3, #0]
 8004ad6:	683b      	ldr	r3, [r7, #0]
 8004ad8:	6859      	ldr	r1, [r3, #4]
 8004ada:	683b      	ldr	r3, [r7, #0]
 8004adc:	68db      	ldr	r3, [r3, #12]
 8004ade:	461a      	mov	r2, r3
 8004ae0:	f000 fa0c 	bl	8004efc <TIM_TI1_ConfigInputStage>
 8004ae4:	687b      	ldr	r3, [r7, #4]
 8004ae6:	681b      	ldr	r3, [r3, #0]
 8004ae8:	2140      	movs	r1, #64	@ 0x40
 8004aea:	4618      	mov	r0, r3
 8004aec:	f000 fa63 	bl	8004fb6 <TIM_ITRx_SetConfig>
 8004af0:	e00c      	b.n	8004b0c <HAL_TIM_ConfigClockSource+0x174>
 8004af2:	687b      	ldr	r3, [r7, #4]
 8004af4:	681a      	ldr	r2, [r3, #0]
 8004af6:	683b      	ldr	r3, [r7, #0]
 8004af8:	681b      	ldr	r3, [r3, #0]
 8004afa:	4619      	mov	r1, r3
 8004afc:	4610      	mov	r0, r2
 8004afe:	f000 fa5a 	bl	8004fb6 <TIM_ITRx_SetConfig>
 8004b02:	e003      	b.n	8004b0c <HAL_TIM_ConfigClockSource+0x174>
 8004b04:	2301      	movs	r3, #1
 8004b06:	73fb      	strb	r3, [r7, #15]
 8004b08:	e000      	b.n	8004b0c <HAL_TIM_ConfigClockSource+0x174>
 8004b0a:	bf00      	nop
 8004b0c:	687b      	ldr	r3, [r7, #4]
 8004b0e:	2201      	movs	r2, #1
 8004b10:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004b14:	687b      	ldr	r3, [r7, #4]
 8004b16:	2200      	movs	r2, #0
 8004b18:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004b1c:	7bfb      	ldrb	r3, [r7, #15]
 8004b1e:	4618      	mov	r0, r3
 8004b20:	3710      	adds	r7, #16
 8004b22:	46bd      	mov	sp, r7
 8004b24:	bd80      	pop	{r7, pc}
	...

08004b28 <TIM_Base_SetConfig>:
 8004b28:	b480      	push	{r7}
 8004b2a:	b085      	sub	sp, #20
 8004b2c:	af00      	add	r7, sp, #0
 8004b2e:	6078      	str	r0, [r7, #4]
 8004b30:	6039      	str	r1, [r7, #0]
 8004b32:	687b      	ldr	r3, [r7, #4]
 8004b34:	681b      	ldr	r3, [r3, #0]
 8004b36:	60fb      	str	r3, [r7, #12]
 8004b38:	687b      	ldr	r3, [r7, #4]
 8004b3a:	4a29      	ldr	r2, [pc, #164]	@ (8004be0 <TIM_Base_SetConfig+0xb8>)
 8004b3c:	4293      	cmp	r3, r2
 8004b3e:	d00b      	beq.n	8004b58 <TIM_Base_SetConfig+0x30>
 8004b40:	687b      	ldr	r3, [r7, #4]
 8004b42:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004b46:	d007      	beq.n	8004b58 <TIM_Base_SetConfig+0x30>
 8004b48:	687b      	ldr	r3, [r7, #4]
 8004b4a:	4a26      	ldr	r2, [pc, #152]	@ (8004be4 <TIM_Base_SetConfig+0xbc>)
 8004b4c:	4293      	cmp	r3, r2
 8004b4e:	d003      	beq.n	8004b58 <TIM_Base_SetConfig+0x30>
 8004b50:	687b      	ldr	r3, [r7, #4]
 8004b52:	4a25      	ldr	r2, [pc, #148]	@ (8004be8 <TIM_Base_SetConfig+0xc0>)
 8004b54:	4293      	cmp	r3, r2
 8004b56:	d108      	bne.n	8004b6a <TIM_Base_SetConfig+0x42>
 8004b58:	68fb      	ldr	r3, [r7, #12]
 8004b5a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004b5e:	60fb      	str	r3, [r7, #12]
 8004b60:	683b      	ldr	r3, [r7, #0]
 8004b62:	685b      	ldr	r3, [r3, #4]
 8004b64:	68fa      	ldr	r2, [r7, #12]
 8004b66:	4313      	orrs	r3, r2
 8004b68:	60fb      	str	r3, [r7, #12]
 8004b6a:	687b      	ldr	r3, [r7, #4]
 8004b6c:	4a1c      	ldr	r2, [pc, #112]	@ (8004be0 <TIM_Base_SetConfig+0xb8>)
 8004b6e:	4293      	cmp	r3, r2
 8004b70:	d00b      	beq.n	8004b8a <TIM_Base_SetConfig+0x62>
 8004b72:	687b      	ldr	r3, [r7, #4]
 8004b74:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004b78:	d007      	beq.n	8004b8a <TIM_Base_SetConfig+0x62>
 8004b7a:	687b      	ldr	r3, [r7, #4]
 8004b7c:	4a19      	ldr	r2, [pc, #100]	@ (8004be4 <TIM_Base_SetConfig+0xbc>)
 8004b7e:	4293      	cmp	r3, r2
 8004b80:	d003      	beq.n	8004b8a <TIM_Base_SetConfig+0x62>
 8004b82:	687b      	ldr	r3, [r7, #4]
 8004b84:	4a18      	ldr	r2, [pc, #96]	@ (8004be8 <TIM_Base_SetConfig+0xc0>)
 8004b86:	4293      	cmp	r3, r2
 8004b88:	d108      	bne.n	8004b9c <TIM_Base_SetConfig+0x74>
 8004b8a:	68fb      	ldr	r3, [r7, #12]
 8004b8c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004b90:	60fb      	str	r3, [r7, #12]
 8004b92:	683b      	ldr	r3, [r7, #0]
 8004b94:	68db      	ldr	r3, [r3, #12]
 8004b96:	68fa      	ldr	r2, [r7, #12]
 8004b98:	4313      	orrs	r3, r2
 8004b9a:	60fb      	str	r3, [r7, #12]
 8004b9c:	68fb      	ldr	r3, [r7, #12]
 8004b9e:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8004ba2:	683b      	ldr	r3, [r7, #0]
 8004ba4:	695b      	ldr	r3, [r3, #20]
 8004ba6:	4313      	orrs	r3, r2
 8004ba8:	60fb      	str	r3, [r7, #12]
 8004baa:	687b      	ldr	r3, [r7, #4]
 8004bac:	68fa      	ldr	r2, [r7, #12]
 8004bae:	601a      	str	r2, [r3, #0]
 8004bb0:	683b      	ldr	r3, [r7, #0]
 8004bb2:	689a      	ldr	r2, [r3, #8]
 8004bb4:	687b      	ldr	r3, [r7, #4]
 8004bb6:	62da      	str	r2, [r3, #44]	@ 0x2c
 8004bb8:	683b      	ldr	r3, [r7, #0]
 8004bba:	681a      	ldr	r2, [r3, #0]
 8004bbc:	687b      	ldr	r3, [r7, #4]
 8004bbe:	629a      	str	r2, [r3, #40]	@ 0x28
 8004bc0:	687b      	ldr	r3, [r7, #4]
 8004bc2:	4a07      	ldr	r2, [pc, #28]	@ (8004be0 <TIM_Base_SetConfig+0xb8>)
 8004bc4:	4293      	cmp	r3, r2
 8004bc6:	d103      	bne.n	8004bd0 <TIM_Base_SetConfig+0xa8>
 8004bc8:	683b      	ldr	r3, [r7, #0]
 8004bca:	691a      	ldr	r2, [r3, #16]
 8004bcc:	687b      	ldr	r3, [r7, #4]
 8004bce:	631a      	str	r2, [r3, #48]	@ 0x30
 8004bd0:	687b      	ldr	r3, [r7, #4]
 8004bd2:	2201      	movs	r2, #1
 8004bd4:	615a      	str	r2, [r3, #20]
 8004bd6:	bf00      	nop
 8004bd8:	3714      	adds	r7, #20
 8004bda:	46bd      	mov	sp, r7
 8004bdc:	bc80      	pop	{r7}
 8004bde:	4770      	bx	lr
 8004be0:	40012c00 	.word	0x40012c00
 8004be4:	40000400 	.word	0x40000400
 8004be8:	40000800 	.word	0x40000800

08004bec <TIM_OC1_SetConfig>:
 8004bec:	b480      	push	{r7}
 8004bee:	b087      	sub	sp, #28
 8004bf0:	af00      	add	r7, sp, #0
 8004bf2:	6078      	str	r0, [r7, #4]
 8004bf4:	6039      	str	r1, [r7, #0]
 8004bf6:	687b      	ldr	r3, [r7, #4]
 8004bf8:	6a1b      	ldr	r3, [r3, #32]
 8004bfa:	617b      	str	r3, [r7, #20]
 8004bfc:	687b      	ldr	r3, [r7, #4]
 8004bfe:	6a1b      	ldr	r3, [r3, #32]
 8004c00:	f023 0201 	bic.w	r2, r3, #1
 8004c04:	687b      	ldr	r3, [r7, #4]
 8004c06:	621a      	str	r2, [r3, #32]
 8004c08:	687b      	ldr	r3, [r7, #4]
 8004c0a:	685b      	ldr	r3, [r3, #4]
 8004c0c:	613b      	str	r3, [r7, #16]
 8004c0e:	687b      	ldr	r3, [r7, #4]
 8004c10:	699b      	ldr	r3, [r3, #24]
 8004c12:	60fb      	str	r3, [r7, #12]
 8004c14:	68fb      	ldr	r3, [r7, #12]
 8004c16:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004c1a:	60fb      	str	r3, [r7, #12]
 8004c1c:	68fb      	ldr	r3, [r7, #12]
 8004c1e:	f023 0303 	bic.w	r3, r3, #3
 8004c22:	60fb      	str	r3, [r7, #12]
 8004c24:	683b      	ldr	r3, [r7, #0]
 8004c26:	681b      	ldr	r3, [r3, #0]
 8004c28:	68fa      	ldr	r2, [r7, #12]
 8004c2a:	4313      	orrs	r3, r2
 8004c2c:	60fb      	str	r3, [r7, #12]
 8004c2e:	697b      	ldr	r3, [r7, #20]
 8004c30:	f023 0302 	bic.w	r3, r3, #2
 8004c34:	617b      	str	r3, [r7, #20]
 8004c36:	683b      	ldr	r3, [r7, #0]
 8004c38:	689b      	ldr	r3, [r3, #8]
 8004c3a:	697a      	ldr	r2, [r7, #20]
 8004c3c:	4313      	orrs	r3, r2
 8004c3e:	617b      	str	r3, [r7, #20]
 8004c40:	687b      	ldr	r3, [r7, #4]
 8004c42:	4a1c      	ldr	r2, [pc, #112]	@ (8004cb4 <TIM_OC1_SetConfig+0xc8>)
 8004c44:	4293      	cmp	r3, r2
 8004c46:	d10c      	bne.n	8004c62 <TIM_OC1_SetConfig+0x76>
 8004c48:	697b      	ldr	r3, [r7, #20]
 8004c4a:	f023 0308 	bic.w	r3, r3, #8
 8004c4e:	617b      	str	r3, [r7, #20]
 8004c50:	683b      	ldr	r3, [r7, #0]
 8004c52:	68db      	ldr	r3, [r3, #12]
 8004c54:	697a      	ldr	r2, [r7, #20]
 8004c56:	4313      	orrs	r3, r2
 8004c58:	617b      	str	r3, [r7, #20]
 8004c5a:	697b      	ldr	r3, [r7, #20]
 8004c5c:	f023 0304 	bic.w	r3, r3, #4
 8004c60:	617b      	str	r3, [r7, #20]
 8004c62:	687b      	ldr	r3, [r7, #4]
 8004c64:	4a13      	ldr	r2, [pc, #76]	@ (8004cb4 <TIM_OC1_SetConfig+0xc8>)
 8004c66:	4293      	cmp	r3, r2
 8004c68:	d111      	bne.n	8004c8e <TIM_OC1_SetConfig+0xa2>
 8004c6a:	693b      	ldr	r3, [r7, #16]
 8004c6c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8004c70:	613b      	str	r3, [r7, #16]
 8004c72:	693b      	ldr	r3, [r7, #16]
 8004c74:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8004c78:	613b      	str	r3, [r7, #16]
 8004c7a:	683b      	ldr	r3, [r7, #0]
 8004c7c:	695b      	ldr	r3, [r3, #20]
 8004c7e:	693a      	ldr	r2, [r7, #16]
 8004c80:	4313      	orrs	r3, r2
 8004c82:	613b      	str	r3, [r7, #16]
 8004c84:	683b      	ldr	r3, [r7, #0]
 8004c86:	699b      	ldr	r3, [r3, #24]
 8004c88:	693a      	ldr	r2, [r7, #16]
 8004c8a:	4313      	orrs	r3, r2
 8004c8c:	613b      	str	r3, [r7, #16]
 8004c8e:	687b      	ldr	r3, [r7, #4]
 8004c90:	693a      	ldr	r2, [r7, #16]
 8004c92:	605a      	str	r2, [r3, #4]
 8004c94:	687b      	ldr	r3, [r7, #4]
 8004c96:	68fa      	ldr	r2, [r7, #12]
 8004c98:	619a      	str	r2, [r3, #24]
 8004c9a:	683b      	ldr	r3, [r7, #0]
 8004c9c:	685a      	ldr	r2, [r3, #4]
 8004c9e:	687b      	ldr	r3, [r7, #4]
 8004ca0:	635a      	str	r2, [r3, #52]	@ 0x34
 8004ca2:	687b      	ldr	r3, [r7, #4]
 8004ca4:	697a      	ldr	r2, [r7, #20]
 8004ca6:	621a      	str	r2, [r3, #32]
 8004ca8:	bf00      	nop
 8004caa:	371c      	adds	r7, #28
 8004cac:	46bd      	mov	sp, r7
 8004cae:	bc80      	pop	{r7}
 8004cb0:	4770      	bx	lr
 8004cb2:	bf00      	nop
 8004cb4:	40012c00 	.word	0x40012c00

08004cb8 <TIM_OC2_SetConfig>:
 8004cb8:	b480      	push	{r7}
 8004cba:	b087      	sub	sp, #28
 8004cbc:	af00      	add	r7, sp, #0
 8004cbe:	6078      	str	r0, [r7, #4]
 8004cc0:	6039      	str	r1, [r7, #0]
 8004cc2:	687b      	ldr	r3, [r7, #4]
 8004cc4:	6a1b      	ldr	r3, [r3, #32]
 8004cc6:	617b      	str	r3, [r7, #20]
 8004cc8:	687b      	ldr	r3, [r7, #4]
 8004cca:	6a1b      	ldr	r3, [r3, #32]
 8004ccc:	f023 0210 	bic.w	r2, r3, #16
 8004cd0:	687b      	ldr	r3, [r7, #4]
 8004cd2:	621a      	str	r2, [r3, #32]
 8004cd4:	687b      	ldr	r3, [r7, #4]
 8004cd6:	685b      	ldr	r3, [r3, #4]
 8004cd8:	613b      	str	r3, [r7, #16]
 8004cda:	687b      	ldr	r3, [r7, #4]
 8004cdc:	699b      	ldr	r3, [r3, #24]
 8004cde:	60fb      	str	r3, [r7, #12]
 8004ce0:	68fb      	ldr	r3, [r7, #12]
 8004ce2:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004ce6:	60fb      	str	r3, [r7, #12]
 8004ce8:	68fb      	ldr	r3, [r7, #12]
 8004cea:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004cee:	60fb      	str	r3, [r7, #12]
 8004cf0:	683b      	ldr	r3, [r7, #0]
 8004cf2:	681b      	ldr	r3, [r3, #0]
 8004cf4:	021b      	lsls	r3, r3, #8
 8004cf6:	68fa      	ldr	r2, [r7, #12]
 8004cf8:	4313      	orrs	r3, r2
 8004cfa:	60fb      	str	r3, [r7, #12]
 8004cfc:	697b      	ldr	r3, [r7, #20]
 8004cfe:	f023 0320 	bic.w	r3, r3, #32
 8004d02:	617b      	str	r3, [r7, #20]
 8004d04:	683b      	ldr	r3, [r7, #0]
 8004d06:	689b      	ldr	r3, [r3, #8]
 8004d08:	011b      	lsls	r3, r3, #4
 8004d0a:	697a      	ldr	r2, [r7, #20]
 8004d0c:	4313      	orrs	r3, r2
 8004d0e:	617b      	str	r3, [r7, #20]
 8004d10:	687b      	ldr	r3, [r7, #4]
 8004d12:	4a1d      	ldr	r2, [pc, #116]	@ (8004d88 <TIM_OC2_SetConfig+0xd0>)
 8004d14:	4293      	cmp	r3, r2
 8004d16:	d10d      	bne.n	8004d34 <TIM_OC2_SetConfig+0x7c>
 8004d18:	697b      	ldr	r3, [r7, #20]
 8004d1a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8004d1e:	617b      	str	r3, [r7, #20]
 8004d20:	683b      	ldr	r3, [r7, #0]
 8004d22:	68db      	ldr	r3, [r3, #12]
 8004d24:	011b      	lsls	r3, r3, #4
 8004d26:	697a      	ldr	r2, [r7, #20]
 8004d28:	4313      	orrs	r3, r2
 8004d2a:	617b      	str	r3, [r7, #20]
 8004d2c:	697b      	ldr	r3, [r7, #20]
 8004d2e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8004d32:	617b      	str	r3, [r7, #20]
 8004d34:	687b      	ldr	r3, [r7, #4]
 8004d36:	4a14      	ldr	r2, [pc, #80]	@ (8004d88 <TIM_OC2_SetConfig+0xd0>)
 8004d38:	4293      	cmp	r3, r2
 8004d3a:	d113      	bne.n	8004d64 <TIM_OC2_SetConfig+0xac>
 8004d3c:	693b      	ldr	r3, [r7, #16]
 8004d3e:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8004d42:	613b      	str	r3, [r7, #16]
 8004d44:	693b      	ldr	r3, [r7, #16]
 8004d46:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8004d4a:	613b      	str	r3, [r7, #16]
 8004d4c:	683b      	ldr	r3, [r7, #0]
 8004d4e:	695b      	ldr	r3, [r3, #20]
 8004d50:	009b      	lsls	r3, r3, #2
 8004d52:	693a      	ldr	r2, [r7, #16]
 8004d54:	4313      	orrs	r3, r2
 8004d56:	613b      	str	r3, [r7, #16]
 8004d58:	683b      	ldr	r3, [r7, #0]
 8004d5a:	699b      	ldr	r3, [r3, #24]
 8004d5c:	009b      	lsls	r3, r3, #2
 8004d5e:	693a      	ldr	r2, [r7, #16]
 8004d60:	4313      	orrs	r3, r2
 8004d62:	613b      	str	r3, [r7, #16]
 8004d64:	687b      	ldr	r3, [r7, #4]
 8004d66:	693a      	ldr	r2, [r7, #16]
 8004d68:	605a      	str	r2, [r3, #4]
 8004d6a:	687b      	ldr	r3, [r7, #4]
 8004d6c:	68fa      	ldr	r2, [r7, #12]
 8004d6e:	619a      	str	r2, [r3, #24]
 8004d70:	683b      	ldr	r3, [r7, #0]
 8004d72:	685a      	ldr	r2, [r3, #4]
 8004d74:	687b      	ldr	r3, [r7, #4]
 8004d76:	639a      	str	r2, [r3, #56]	@ 0x38
 8004d78:	687b      	ldr	r3, [r7, #4]
 8004d7a:	697a      	ldr	r2, [r7, #20]
 8004d7c:	621a      	str	r2, [r3, #32]
 8004d7e:	bf00      	nop
 8004d80:	371c      	adds	r7, #28
 8004d82:	46bd      	mov	sp, r7
 8004d84:	bc80      	pop	{r7}
 8004d86:	4770      	bx	lr
 8004d88:	40012c00 	.word	0x40012c00

08004d8c <TIM_OC3_SetConfig>:
 8004d8c:	b480      	push	{r7}
 8004d8e:	b087      	sub	sp, #28
 8004d90:	af00      	add	r7, sp, #0
 8004d92:	6078      	str	r0, [r7, #4]
 8004d94:	6039      	str	r1, [r7, #0]
 8004d96:	687b      	ldr	r3, [r7, #4]
 8004d98:	6a1b      	ldr	r3, [r3, #32]
 8004d9a:	617b      	str	r3, [r7, #20]
 8004d9c:	687b      	ldr	r3, [r7, #4]
 8004d9e:	6a1b      	ldr	r3, [r3, #32]
 8004da0:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8004da4:	687b      	ldr	r3, [r7, #4]
 8004da6:	621a      	str	r2, [r3, #32]
 8004da8:	687b      	ldr	r3, [r7, #4]
 8004daa:	685b      	ldr	r3, [r3, #4]
 8004dac:	613b      	str	r3, [r7, #16]
 8004dae:	687b      	ldr	r3, [r7, #4]
 8004db0:	69db      	ldr	r3, [r3, #28]
 8004db2:	60fb      	str	r3, [r7, #12]
 8004db4:	68fb      	ldr	r3, [r7, #12]
 8004db6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004dba:	60fb      	str	r3, [r7, #12]
 8004dbc:	68fb      	ldr	r3, [r7, #12]
 8004dbe:	f023 0303 	bic.w	r3, r3, #3
 8004dc2:	60fb      	str	r3, [r7, #12]
 8004dc4:	683b      	ldr	r3, [r7, #0]
 8004dc6:	681b      	ldr	r3, [r3, #0]
 8004dc8:	68fa      	ldr	r2, [r7, #12]
 8004dca:	4313      	orrs	r3, r2
 8004dcc:	60fb      	str	r3, [r7, #12]
 8004dce:	697b      	ldr	r3, [r7, #20]
 8004dd0:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8004dd4:	617b      	str	r3, [r7, #20]
 8004dd6:	683b      	ldr	r3, [r7, #0]
 8004dd8:	689b      	ldr	r3, [r3, #8]
 8004dda:	021b      	lsls	r3, r3, #8
 8004ddc:	697a      	ldr	r2, [r7, #20]
 8004dde:	4313      	orrs	r3, r2
 8004de0:	617b      	str	r3, [r7, #20]
 8004de2:	687b      	ldr	r3, [r7, #4]
 8004de4:	4a1d      	ldr	r2, [pc, #116]	@ (8004e5c <TIM_OC3_SetConfig+0xd0>)
 8004de6:	4293      	cmp	r3, r2
 8004de8:	d10d      	bne.n	8004e06 <TIM_OC3_SetConfig+0x7a>
 8004dea:	697b      	ldr	r3, [r7, #20]
 8004dec:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8004df0:	617b      	str	r3, [r7, #20]
 8004df2:	683b      	ldr	r3, [r7, #0]
 8004df4:	68db      	ldr	r3, [r3, #12]
 8004df6:	021b      	lsls	r3, r3, #8
 8004df8:	697a      	ldr	r2, [r7, #20]
 8004dfa:	4313      	orrs	r3, r2
 8004dfc:	617b      	str	r3, [r7, #20]
 8004dfe:	697b      	ldr	r3, [r7, #20]
 8004e00:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8004e04:	617b      	str	r3, [r7, #20]
 8004e06:	687b      	ldr	r3, [r7, #4]
 8004e08:	4a14      	ldr	r2, [pc, #80]	@ (8004e5c <TIM_OC3_SetConfig+0xd0>)
 8004e0a:	4293      	cmp	r3, r2
 8004e0c:	d113      	bne.n	8004e36 <TIM_OC3_SetConfig+0xaa>
 8004e0e:	693b      	ldr	r3, [r7, #16]
 8004e10:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8004e14:	613b      	str	r3, [r7, #16]
 8004e16:	693b      	ldr	r3, [r7, #16]
 8004e18:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8004e1c:	613b      	str	r3, [r7, #16]
 8004e1e:	683b      	ldr	r3, [r7, #0]
 8004e20:	695b      	ldr	r3, [r3, #20]
 8004e22:	011b      	lsls	r3, r3, #4
 8004e24:	693a      	ldr	r2, [r7, #16]
 8004e26:	4313      	orrs	r3, r2
 8004e28:	613b      	str	r3, [r7, #16]
 8004e2a:	683b      	ldr	r3, [r7, #0]
 8004e2c:	699b      	ldr	r3, [r3, #24]
 8004e2e:	011b      	lsls	r3, r3, #4
 8004e30:	693a      	ldr	r2, [r7, #16]
 8004e32:	4313      	orrs	r3, r2
 8004e34:	613b      	str	r3, [r7, #16]
 8004e36:	687b      	ldr	r3, [r7, #4]
 8004e38:	693a      	ldr	r2, [r7, #16]
 8004e3a:	605a      	str	r2, [r3, #4]
 8004e3c:	687b      	ldr	r3, [r7, #4]
 8004e3e:	68fa      	ldr	r2, [r7, #12]
 8004e40:	61da      	str	r2, [r3, #28]
 8004e42:	683b      	ldr	r3, [r7, #0]
 8004e44:	685a      	ldr	r2, [r3, #4]
 8004e46:	687b      	ldr	r3, [r7, #4]
 8004e48:	63da      	str	r2, [r3, #60]	@ 0x3c
 8004e4a:	687b      	ldr	r3, [r7, #4]
 8004e4c:	697a      	ldr	r2, [r7, #20]
 8004e4e:	621a      	str	r2, [r3, #32]
 8004e50:	bf00      	nop
 8004e52:	371c      	adds	r7, #28
 8004e54:	46bd      	mov	sp, r7
 8004e56:	bc80      	pop	{r7}
 8004e58:	4770      	bx	lr
 8004e5a:	bf00      	nop
 8004e5c:	40012c00 	.word	0x40012c00

08004e60 <TIM_OC4_SetConfig>:
 8004e60:	b480      	push	{r7}
 8004e62:	b087      	sub	sp, #28
 8004e64:	af00      	add	r7, sp, #0
 8004e66:	6078      	str	r0, [r7, #4]
 8004e68:	6039      	str	r1, [r7, #0]
 8004e6a:	687b      	ldr	r3, [r7, #4]
 8004e6c:	6a1b      	ldr	r3, [r3, #32]
 8004e6e:	613b      	str	r3, [r7, #16]
 8004e70:	687b      	ldr	r3, [r7, #4]
 8004e72:	6a1b      	ldr	r3, [r3, #32]
 8004e74:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8004e78:	687b      	ldr	r3, [r7, #4]
 8004e7a:	621a      	str	r2, [r3, #32]
 8004e7c:	687b      	ldr	r3, [r7, #4]
 8004e7e:	685b      	ldr	r3, [r3, #4]
 8004e80:	617b      	str	r3, [r7, #20]
 8004e82:	687b      	ldr	r3, [r7, #4]
 8004e84:	69db      	ldr	r3, [r3, #28]
 8004e86:	60fb      	str	r3, [r7, #12]
 8004e88:	68fb      	ldr	r3, [r7, #12]
 8004e8a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004e8e:	60fb      	str	r3, [r7, #12]
 8004e90:	68fb      	ldr	r3, [r7, #12]
 8004e92:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004e96:	60fb      	str	r3, [r7, #12]
 8004e98:	683b      	ldr	r3, [r7, #0]
 8004e9a:	681b      	ldr	r3, [r3, #0]
 8004e9c:	021b      	lsls	r3, r3, #8
 8004e9e:	68fa      	ldr	r2, [r7, #12]
 8004ea0:	4313      	orrs	r3, r2
 8004ea2:	60fb      	str	r3, [r7, #12]
 8004ea4:	693b      	ldr	r3, [r7, #16]
 8004ea6:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8004eaa:	613b      	str	r3, [r7, #16]
 8004eac:	683b      	ldr	r3, [r7, #0]
 8004eae:	689b      	ldr	r3, [r3, #8]
 8004eb0:	031b      	lsls	r3, r3, #12
 8004eb2:	693a      	ldr	r2, [r7, #16]
 8004eb4:	4313      	orrs	r3, r2
 8004eb6:	613b      	str	r3, [r7, #16]
 8004eb8:	687b      	ldr	r3, [r7, #4]
 8004eba:	4a0f      	ldr	r2, [pc, #60]	@ (8004ef8 <TIM_OC4_SetConfig+0x98>)
 8004ebc:	4293      	cmp	r3, r2
 8004ebe:	d109      	bne.n	8004ed4 <TIM_OC4_SetConfig+0x74>
 8004ec0:	697b      	ldr	r3, [r7, #20]
 8004ec2:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8004ec6:	617b      	str	r3, [r7, #20]
 8004ec8:	683b      	ldr	r3, [r7, #0]
 8004eca:	695b      	ldr	r3, [r3, #20]
 8004ecc:	019b      	lsls	r3, r3, #6
 8004ece:	697a      	ldr	r2, [r7, #20]
 8004ed0:	4313      	orrs	r3, r2
 8004ed2:	617b      	str	r3, [r7, #20]
 8004ed4:	687b      	ldr	r3, [r7, #4]
 8004ed6:	697a      	ldr	r2, [r7, #20]
 8004ed8:	605a      	str	r2, [r3, #4]
 8004eda:	687b      	ldr	r3, [r7, #4]
 8004edc:	68fa      	ldr	r2, [r7, #12]
 8004ede:	61da      	str	r2, [r3, #28]
 8004ee0:	683b      	ldr	r3, [r7, #0]
 8004ee2:	685a      	ldr	r2, [r3, #4]
 8004ee4:	687b      	ldr	r3, [r7, #4]
 8004ee6:	641a      	str	r2, [r3, #64]	@ 0x40
 8004ee8:	687b      	ldr	r3, [r7, #4]
 8004eea:	693a      	ldr	r2, [r7, #16]
 8004eec:	621a      	str	r2, [r3, #32]
 8004eee:	bf00      	nop
 8004ef0:	371c      	adds	r7, #28
 8004ef2:	46bd      	mov	sp, r7
 8004ef4:	bc80      	pop	{r7}
 8004ef6:	4770      	bx	lr
 8004ef8:	40012c00 	.word	0x40012c00

08004efc <TIM_TI1_ConfigInputStage>:
 8004efc:	b480      	push	{r7}
 8004efe:	b087      	sub	sp, #28
 8004f00:	af00      	add	r7, sp, #0
 8004f02:	60f8      	str	r0, [r7, #12]
 8004f04:	60b9      	str	r1, [r7, #8]
 8004f06:	607a      	str	r2, [r7, #4]
 8004f08:	68fb      	ldr	r3, [r7, #12]
 8004f0a:	6a1b      	ldr	r3, [r3, #32]
 8004f0c:	617b      	str	r3, [r7, #20]
 8004f0e:	68fb      	ldr	r3, [r7, #12]
 8004f10:	6a1b      	ldr	r3, [r3, #32]
 8004f12:	f023 0201 	bic.w	r2, r3, #1
 8004f16:	68fb      	ldr	r3, [r7, #12]
 8004f18:	621a      	str	r2, [r3, #32]
 8004f1a:	68fb      	ldr	r3, [r7, #12]
 8004f1c:	699b      	ldr	r3, [r3, #24]
 8004f1e:	613b      	str	r3, [r7, #16]
 8004f20:	693b      	ldr	r3, [r7, #16]
 8004f22:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8004f26:	613b      	str	r3, [r7, #16]
 8004f28:	687b      	ldr	r3, [r7, #4]
 8004f2a:	011b      	lsls	r3, r3, #4
 8004f2c:	693a      	ldr	r2, [r7, #16]
 8004f2e:	4313      	orrs	r3, r2
 8004f30:	613b      	str	r3, [r7, #16]
 8004f32:	697b      	ldr	r3, [r7, #20]
 8004f34:	f023 030a 	bic.w	r3, r3, #10
 8004f38:	617b      	str	r3, [r7, #20]
 8004f3a:	697a      	ldr	r2, [r7, #20]
 8004f3c:	68bb      	ldr	r3, [r7, #8]
 8004f3e:	4313      	orrs	r3, r2
 8004f40:	617b      	str	r3, [r7, #20]
 8004f42:	68fb      	ldr	r3, [r7, #12]
 8004f44:	693a      	ldr	r2, [r7, #16]
 8004f46:	619a      	str	r2, [r3, #24]
 8004f48:	68fb      	ldr	r3, [r7, #12]
 8004f4a:	697a      	ldr	r2, [r7, #20]
 8004f4c:	621a      	str	r2, [r3, #32]
 8004f4e:	bf00      	nop
 8004f50:	371c      	adds	r7, #28
 8004f52:	46bd      	mov	sp, r7
 8004f54:	bc80      	pop	{r7}
 8004f56:	4770      	bx	lr

08004f58 <TIM_TI2_ConfigInputStage>:
 8004f58:	b480      	push	{r7}
 8004f5a:	b087      	sub	sp, #28
 8004f5c:	af00      	add	r7, sp, #0
 8004f5e:	60f8      	str	r0, [r7, #12]
 8004f60:	60b9      	str	r1, [r7, #8]
 8004f62:	607a      	str	r2, [r7, #4]
 8004f64:	68fb      	ldr	r3, [r7, #12]
 8004f66:	6a1b      	ldr	r3, [r3, #32]
 8004f68:	617b      	str	r3, [r7, #20]
 8004f6a:	68fb      	ldr	r3, [r7, #12]
 8004f6c:	6a1b      	ldr	r3, [r3, #32]
 8004f6e:	f023 0210 	bic.w	r2, r3, #16
 8004f72:	68fb      	ldr	r3, [r7, #12]
 8004f74:	621a      	str	r2, [r3, #32]
 8004f76:	68fb      	ldr	r3, [r7, #12]
 8004f78:	699b      	ldr	r3, [r3, #24]
 8004f7a:	613b      	str	r3, [r7, #16]
 8004f7c:	693b      	ldr	r3, [r7, #16]
 8004f7e:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8004f82:	613b      	str	r3, [r7, #16]
 8004f84:	687b      	ldr	r3, [r7, #4]
 8004f86:	031b      	lsls	r3, r3, #12
 8004f88:	693a      	ldr	r2, [r7, #16]
 8004f8a:	4313      	orrs	r3, r2
 8004f8c:	613b      	str	r3, [r7, #16]
 8004f8e:	697b      	ldr	r3, [r7, #20]
 8004f90:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8004f94:	617b      	str	r3, [r7, #20]
 8004f96:	68bb      	ldr	r3, [r7, #8]
 8004f98:	011b      	lsls	r3, r3, #4
 8004f9a:	697a      	ldr	r2, [r7, #20]
 8004f9c:	4313      	orrs	r3, r2
 8004f9e:	617b      	str	r3, [r7, #20]
 8004fa0:	68fb      	ldr	r3, [r7, #12]
 8004fa2:	693a      	ldr	r2, [r7, #16]
 8004fa4:	619a      	str	r2, [r3, #24]
 8004fa6:	68fb      	ldr	r3, [r7, #12]
 8004fa8:	697a      	ldr	r2, [r7, #20]
 8004faa:	621a      	str	r2, [r3, #32]
 8004fac:	bf00      	nop
 8004fae:	371c      	adds	r7, #28
 8004fb0:	46bd      	mov	sp, r7
 8004fb2:	bc80      	pop	{r7}
 8004fb4:	4770      	bx	lr

08004fb6 <TIM_ITRx_SetConfig>:
 8004fb6:	b480      	push	{r7}
 8004fb8:	b085      	sub	sp, #20
 8004fba:	af00      	add	r7, sp, #0
 8004fbc:	6078      	str	r0, [r7, #4]
 8004fbe:	6039      	str	r1, [r7, #0]
 8004fc0:	687b      	ldr	r3, [r7, #4]
 8004fc2:	689b      	ldr	r3, [r3, #8]
 8004fc4:	60fb      	str	r3, [r7, #12]
 8004fc6:	68fb      	ldr	r3, [r7, #12]
 8004fc8:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004fcc:	60fb      	str	r3, [r7, #12]
 8004fce:	683a      	ldr	r2, [r7, #0]
 8004fd0:	68fb      	ldr	r3, [r7, #12]
 8004fd2:	4313      	orrs	r3, r2
 8004fd4:	f043 0307 	orr.w	r3, r3, #7
 8004fd8:	60fb      	str	r3, [r7, #12]
 8004fda:	687b      	ldr	r3, [r7, #4]
 8004fdc:	68fa      	ldr	r2, [r7, #12]
 8004fde:	609a      	str	r2, [r3, #8]
 8004fe0:	bf00      	nop
 8004fe2:	3714      	adds	r7, #20
 8004fe4:	46bd      	mov	sp, r7
 8004fe6:	bc80      	pop	{r7}
 8004fe8:	4770      	bx	lr

08004fea <TIM_ETR_SetConfig>:
 8004fea:	b480      	push	{r7}
 8004fec:	b087      	sub	sp, #28
 8004fee:	af00      	add	r7, sp, #0
 8004ff0:	60f8      	str	r0, [r7, #12]
 8004ff2:	60b9      	str	r1, [r7, #8]
 8004ff4:	607a      	str	r2, [r7, #4]
 8004ff6:	603b      	str	r3, [r7, #0]
 8004ff8:	68fb      	ldr	r3, [r7, #12]
 8004ffa:	689b      	ldr	r3, [r3, #8]
 8004ffc:	617b      	str	r3, [r7, #20]
 8004ffe:	697b      	ldr	r3, [r7, #20]
 8005000:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8005004:	617b      	str	r3, [r7, #20]
 8005006:	683b      	ldr	r3, [r7, #0]
 8005008:	021a      	lsls	r2, r3, #8
 800500a:	687b      	ldr	r3, [r7, #4]
 800500c:	431a      	orrs	r2, r3
 800500e:	68bb      	ldr	r3, [r7, #8]
 8005010:	4313      	orrs	r3, r2
 8005012:	697a      	ldr	r2, [r7, #20]
 8005014:	4313      	orrs	r3, r2
 8005016:	617b      	str	r3, [r7, #20]
 8005018:	68fb      	ldr	r3, [r7, #12]
 800501a:	697a      	ldr	r2, [r7, #20]
 800501c:	609a      	str	r2, [r3, #8]
 800501e:	bf00      	nop
 8005020:	371c      	adds	r7, #28
 8005022:	46bd      	mov	sp, r7
 8005024:	bc80      	pop	{r7}
 8005026:	4770      	bx	lr

08005028 <HAL_TIMEx_MasterConfigSynchronization>:
 8005028:	b480      	push	{r7}
 800502a:	b085      	sub	sp, #20
 800502c:	af00      	add	r7, sp, #0
 800502e:	6078      	str	r0, [r7, #4]
 8005030:	6039      	str	r1, [r7, #0]
 8005032:	687b      	ldr	r3, [r7, #4]
 8005034:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005038:	2b01      	cmp	r3, #1
 800503a:	d101      	bne.n	8005040 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800503c:	2302      	movs	r3, #2
 800503e:	e046      	b.n	80050ce <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8005040:	687b      	ldr	r3, [r7, #4]
 8005042:	2201      	movs	r2, #1
 8005044:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005048:	687b      	ldr	r3, [r7, #4]
 800504a:	2202      	movs	r2, #2
 800504c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005050:	687b      	ldr	r3, [r7, #4]
 8005052:	681b      	ldr	r3, [r3, #0]
 8005054:	685b      	ldr	r3, [r3, #4]
 8005056:	60fb      	str	r3, [r7, #12]
 8005058:	687b      	ldr	r3, [r7, #4]
 800505a:	681b      	ldr	r3, [r3, #0]
 800505c:	689b      	ldr	r3, [r3, #8]
 800505e:	60bb      	str	r3, [r7, #8]
 8005060:	68fb      	ldr	r3, [r7, #12]
 8005062:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005066:	60fb      	str	r3, [r7, #12]
 8005068:	683b      	ldr	r3, [r7, #0]
 800506a:	681b      	ldr	r3, [r3, #0]
 800506c:	68fa      	ldr	r2, [r7, #12]
 800506e:	4313      	orrs	r3, r2
 8005070:	60fb      	str	r3, [r7, #12]
 8005072:	687b      	ldr	r3, [r7, #4]
 8005074:	681b      	ldr	r3, [r3, #0]
 8005076:	68fa      	ldr	r2, [r7, #12]
 8005078:	605a      	str	r2, [r3, #4]
 800507a:	687b      	ldr	r3, [r7, #4]
 800507c:	681b      	ldr	r3, [r3, #0]
 800507e:	4a16      	ldr	r2, [pc, #88]	@ (80050d8 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8005080:	4293      	cmp	r3, r2
 8005082:	d00e      	beq.n	80050a2 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8005084:	687b      	ldr	r3, [r7, #4]
 8005086:	681b      	ldr	r3, [r3, #0]
 8005088:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800508c:	d009      	beq.n	80050a2 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 800508e:	687b      	ldr	r3, [r7, #4]
 8005090:	681b      	ldr	r3, [r3, #0]
 8005092:	4a12      	ldr	r2, [pc, #72]	@ (80050dc <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8005094:	4293      	cmp	r3, r2
 8005096:	d004      	beq.n	80050a2 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8005098:	687b      	ldr	r3, [r7, #4]
 800509a:	681b      	ldr	r3, [r3, #0]
 800509c:	4a10      	ldr	r2, [pc, #64]	@ (80050e0 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 800509e:	4293      	cmp	r3, r2
 80050a0:	d10c      	bne.n	80050bc <HAL_TIMEx_MasterConfigSynchronization+0x94>
 80050a2:	68bb      	ldr	r3, [r7, #8]
 80050a4:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80050a8:	60bb      	str	r3, [r7, #8]
 80050aa:	683b      	ldr	r3, [r7, #0]
 80050ac:	685b      	ldr	r3, [r3, #4]
 80050ae:	68ba      	ldr	r2, [r7, #8]
 80050b0:	4313      	orrs	r3, r2
 80050b2:	60bb      	str	r3, [r7, #8]
 80050b4:	687b      	ldr	r3, [r7, #4]
 80050b6:	681b      	ldr	r3, [r3, #0]
 80050b8:	68ba      	ldr	r2, [r7, #8]
 80050ba:	609a      	str	r2, [r3, #8]
 80050bc:	687b      	ldr	r3, [r7, #4]
 80050be:	2201      	movs	r2, #1
 80050c0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80050c4:	687b      	ldr	r3, [r7, #4]
 80050c6:	2200      	movs	r2, #0
 80050c8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80050cc:	2300      	movs	r3, #0
 80050ce:	4618      	mov	r0, r3
 80050d0:	3714      	adds	r7, #20
 80050d2:	46bd      	mov	sp, r7
 80050d4:	bc80      	pop	{r7}
 80050d6:	4770      	bx	lr
 80050d8:	40012c00 	.word	0x40012c00
 80050dc:	40000400 	.word	0x40000400
 80050e0:	40000800 	.word	0x40000800

080050e4 <HAL_UART_Init>:
 80050e4:	b580      	push	{r7, lr}
 80050e6:	b082      	sub	sp, #8
 80050e8:	af00      	add	r7, sp, #0
 80050ea:	6078      	str	r0, [r7, #4]
 80050ec:	687b      	ldr	r3, [r7, #4]
 80050ee:	2b00      	cmp	r3, #0
 80050f0:	d101      	bne.n	80050f6 <HAL_UART_Init+0x12>
 80050f2:	2301      	movs	r3, #1
 80050f4:	e042      	b.n	800517c <HAL_UART_Init+0x98>
 80050f6:	687b      	ldr	r3, [r7, #4]
 80050f8:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80050fc:	b2db      	uxtb	r3, r3
 80050fe:	2b00      	cmp	r3, #0
 8005100:	d106      	bne.n	8005110 <HAL_UART_Init+0x2c>
 8005102:	687b      	ldr	r3, [r7, #4]
 8005104:	2200      	movs	r2, #0
 8005106:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800510a:	6878      	ldr	r0, [r7, #4]
 800510c:	f7fd fb1a 	bl	8002744 <HAL_UART_MspInit>
 8005110:	687b      	ldr	r3, [r7, #4]
 8005112:	2224      	movs	r2, #36	@ 0x24
 8005114:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005118:	687b      	ldr	r3, [r7, #4]
 800511a:	681b      	ldr	r3, [r3, #0]
 800511c:	68da      	ldr	r2, [r3, #12]
 800511e:	687b      	ldr	r3, [r7, #4]
 8005120:	681b      	ldr	r3, [r3, #0]
 8005122:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8005126:	60da      	str	r2, [r3, #12]
 8005128:	6878      	ldr	r0, [r7, #4]
 800512a:	f000 fc7f 	bl	8005a2c <UART_SetConfig>
 800512e:	687b      	ldr	r3, [r7, #4]
 8005130:	681b      	ldr	r3, [r3, #0]
 8005132:	691a      	ldr	r2, [r3, #16]
 8005134:	687b      	ldr	r3, [r7, #4]
 8005136:	681b      	ldr	r3, [r3, #0]
 8005138:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 800513c:	611a      	str	r2, [r3, #16]
 800513e:	687b      	ldr	r3, [r7, #4]
 8005140:	681b      	ldr	r3, [r3, #0]
 8005142:	695a      	ldr	r2, [r3, #20]
 8005144:	687b      	ldr	r3, [r7, #4]
 8005146:	681b      	ldr	r3, [r3, #0]
 8005148:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 800514c:	615a      	str	r2, [r3, #20]
 800514e:	687b      	ldr	r3, [r7, #4]
 8005150:	681b      	ldr	r3, [r3, #0]
 8005152:	68da      	ldr	r2, [r3, #12]
 8005154:	687b      	ldr	r3, [r7, #4]
 8005156:	681b      	ldr	r3, [r3, #0]
 8005158:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800515c:	60da      	str	r2, [r3, #12]
 800515e:	687b      	ldr	r3, [r7, #4]
 8005160:	2200      	movs	r2, #0
 8005162:	645a      	str	r2, [r3, #68]	@ 0x44
 8005164:	687b      	ldr	r3, [r7, #4]
 8005166:	2220      	movs	r2, #32
 8005168:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800516c:	687b      	ldr	r3, [r7, #4]
 800516e:	2220      	movs	r2, #32
 8005170:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005174:	687b      	ldr	r3, [r7, #4]
 8005176:	2200      	movs	r2, #0
 8005178:	635a      	str	r2, [r3, #52]	@ 0x34
 800517a:	2300      	movs	r3, #0
 800517c:	4618      	mov	r0, r3
 800517e:	3708      	adds	r7, #8
 8005180:	46bd      	mov	sp, r7
 8005182:	bd80      	pop	{r7, pc}

08005184 <HAL_UART_IRQHandler>:
 8005184:	b580      	push	{r7, lr}
 8005186:	b0ba      	sub	sp, #232	@ 0xe8
 8005188:	af00      	add	r7, sp, #0
 800518a:	6078      	str	r0, [r7, #4]
 800518c:	687b      	ldr	r3, [r7, #4]
 800518e:	681b      	ldr	r3, [r3, #0]
 8005190:	681b      	ldr	r3, [r3, #0]
 8005192:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8005196:	687b      	ldr	r3, [r7, #4]
 8005198:	681b      	ldr	r3, [r3, #0]
 800519a:	68db      	ldr	r3, [r3, #12]
 800519c:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 80051a0:	687b      	ldr	r3, [r7, #4]
 80051a2:	681b      	ldr	r3, [r3, #0]
 80051a4:	695b      	ldr	r3, [r3, #20]
 80051a6:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 80051aa:	2300      	movs	r3, #0
 80051ac:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80051b0:	2300      	movs	r3, #0
 80051b2:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 80051b6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80051ba:	f003 030f 	and.w	r3, r3, #15
 80051be:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80051c2:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 80051c6:	2b00      	cmp	r3, #0
 80051c8:	d10f      	bne.n	80051ea <HAL_UART_IRQHandler+0x66>
 80051ca:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80051ce:	f003 0320 	and.w	r3, r3, #32
 80051d2:	2b00      	cmp	r3, #0
 80051d4:	d009      	beq.n	80051ea <HAL_UART_IRQHandler+0x66>
 80051d6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80051da:	f003 0320 	and.w	r3, r3, #32
 80051de:	2b00      	cmp	r3, #0
 80051e0:	d003      	beq.n	80051ea <HAL_UART_IRQHandler+0x66>
 80051e2:	6878      	ldr	r0, [r7, #4]
 80051e4:	f000 fb63 	bl	80058ae <UART_Receive_IT>
 80051e8:	e25b      	b.n	80056a2 <HAL_UART_IRQHandler+0x51e>
 80051ea:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 80051ee:	2b00      	cmp	r3, #0
 80051f0:	f000 80de 	beq.w	80053b0 <HAL_UART_IRQHandler+0x22c>
 80051f4:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80051f8:	f003 0301 	and.w	r3, r3, #1
 80051fc:	2b00      	cmp	r3, #0
 80051fe:	d106      	bne.n	800520e <HAL_UART_IRQHandler+0x8a>
 8005200:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005204:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8005208:	2b00      	cmp	r3, #0
 800520a:	f000 80d1 	beq.w	80053b0 <HAL_UART_IRQHandler+0x22c>
 800520e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005212:	f003 0301 	and.w	r3, r3, #1
 8005216:	2b00      	cmp	r3, #0
 8005218:	d00b      	beq.n	8005232 <HAL_UART_IRQHandler+0xae>
 800521a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800521e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005222:	2b00      	cmp	r3, #0
 8005224:	d005      	beq.n	8005232 <HAL_UART_IRQHandler+0xae>
 8005226:	687b      	ldr	r3, [r7, #4]
 8005228:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800522a:	f043 0201 	orr.w	r2, r3, #1
 800522e:	687b      	ldr	r3, [r7, #4]
 8005230:	645a      	str	r2, [r3, #68]	@ 0x44
 8005232:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005236:	f003 0304 	and.w	r3, r3, #4
 800523a:	2b00      	cmp	r3, #0
 800523c:	d00b      	beq.n	8005256 <HAL_UART_IRQHandler+0xd2>
 800523e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8005242:	f003 0301 	and.w	r3, r3, #1
 8005246:	2b00      	cmp	r3, #0
 8005248:	d005      	beq.n	8005256 <HAL_UART_IRQHandler+0xd2>
 800524a:	687b      	ldr	r3, [r7, #4]
 800524c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800524e:	f043 0202 	orr.w	r2, r3, #2
 8005252:	687b      	ldr	r3, [r7, #4]
 8005254:	645a      	str	r2, [r3, #68]	@ 0x44
 8005256:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800525a:	f003 0302 	and.w	r3, r3, #2
 800525e:	2b00      	cmp	r3, #0
 8005260:	d00b      	beq.n	800527a <HAL_UART_IRQHandler+0xf6>
 8005262:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8005266:	f003 0301 	and.w	r3, r3, #1
 800526a:	2b00      	cmp	r3, #0
 800526c:	d005      	beq.n	800527a <HAL_UART_IRQHandler+0xf6>
 800526e:	687b      	ldr	r3, [r7, #4]
 8005270:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005272:	f043 0204 	orr.w	r2, r3, #4
 8005276:	687b      	ldr	r3, [r7, #4]
 8005278:	645a      	str	r2, [r3, #68]	@ 0x44
 800527a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800527e:	f003 0308 	and.w	r3, r3, #8
 8005282:	2b00      	cmp	r3, #0
 8005284:	d011      	beq.n	80052aa <HAL_UART_IRQHandler+0x126>
 8005286:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800528a:	f003 0320 	and.w	r3, r3, #32
 800528e:	2b00      	cmp	r3, #0
 8005290:	d105      	bne.n	800529e <HAL_UART_IRQHandler+0x11a>
 8005292:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8005296:	f003 0301 	and.w	r3, r3, #1
 800529a:	2b00      	cmp	r3, #0
 800529c:	d005      	beq.n	80052aa <HAL_UART_IRQHandler+0x126>
 800529e:	687b      	ldr	r3, [r7, #4]
 80052a0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80052a2:	f043 0208 	orr.w	r2, r3, #8
 80052a6:	687b      	ldr	r3, [r7, #4]
 80052a8:	645a      	str	r2, [r3, #68]	@ 0x44
 80052aa:	687b      	ldr	r3, [r7, #4]
 80052ac:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80052ae:	2b00      	cmp	r3, #0
 80052b0:	f000 81f2 	beq.w	8005698 <HAL_UART_IRQHandler+0x514>
 80052b4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80052b8:	f003 0320 	and.w	r3, r3, #32
 80052bc:	2b00      	cmp	r3, #0
 80052be:	d008      	beq.n	80052d2 <HAL_UART_IRQHandler+0x14e>
 80052c0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80052c4:	f003 0320 	and.w	r3, r3, #32
 80052c8:	2b00      	cmp	r3, #0
 80052ca:	d002      	beq.n	80052d2 <HAL_UART_IRQHandler+0x14e>
 80052cc:	6878      	ldr	r0, [r7, #4]
 80052ce:	f000 faee 	bl	80058ae <UART_Receive_IT>
 80052d2:	687b      	ldr	r3, [r7, #4]
 80052d4:	681b      	ldr	r3, [r3, #0]
 80052d6:	695b      	ldr	r3, [r3, #20]
 80052d8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80052dc:	2b00      	cmp	r3, #0
 80052de:	bf14      	ite	ne
 80052e0:	2301      	movne	r3, #1
 80052e2:	2300      	moveq	r3, #0
 80052e4:	b2db      	uxtb	r3, r3
 80052e6:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 80052ea:	687b      	ldr	r3, [r7, #4]
 80052ec:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80052ee:	f003 0308 	and.w	r3, r3, #8
 80052f2:	2b00      	cmp	r3, #0
 80052f4:	d103      	bne.n	80052fe <HAL_UART_IRQHandler+0x17a>
 80052f6:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 80052fa:	2b00      	cmp	r3, #0
 80052fc:	d04f      	beq.n	800539e <HAL_UART_IRQHandler+0x21a>
 80052fe:	6878      	ldr	r0, [r7, #4]
 8005300:	f000 f9f8 	bl	80056f4 <UART_EndRxTransfer>
 8005304:	687b      	ldr	r3, [r7, #4]
 8005306:	681b      	ldr	r3, [r3, #0]
 8005308:	695b      	ldr	r3, [r3, #20]
 800530a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800530e:	2b00      	cmp	r3, #0
 8005310:	d041      	beq.n	8005396 <HAL_UART_IRQHandler+0x212>
 8005312:	687b      	ldr	r3, [r7, #4]
 8005314:	681b      	ldr	r3, [r3, #0]
 8005316:	3314      	adds	r3, #20
 8005318:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 800531c:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8005320:	e853 3f00 	ldrex	r3, [r3]
 8005324:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8005328:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 800532c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8005330:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8005334:	687b      	ldr	r3, [r7, #4]
 8005336:	681b      	ldr	r3, [r3, #0]
 8005338:	3314      	adds	r3, #20
 800533a:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 800533e:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 8005342:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8005346:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 800534a:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 800534e:	e841 2300 	strex	r3, r2, [r1]
 8005352:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8005356:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 800535a:	2b00      	cmp	r3, #0
 800535c:	d1d9      	bne.n	8005312 <HAL_UART_IRQHandler+0x18e>
 800535e:	687b      	ldr	r3, [r7, #4]
 8005360:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005362:	2b00      	cmp	r3, #0
 8005364:	d013      	beq.n	800538e <HAL_UART_IRQHandler+0x20a>
 8005366:	687b      	ldr	r3, [r7, #4]
 8005368:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800536a:	4a7e      	ldr	r2, [pc, #504]	@ (8005564 <HAL_UART_IRQHandler+0x3e0>)
 800536c:	635a      	str	r2, [r3, #52]	@ 0x34
 800536e:	687b      	ldr	r3, [r7, #4]
 8005370:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005372:	4618      	mov	r0, r3
 8005374:	f7fe fa2c 	bl	80037d0 <HAL_DMA_Abort_IT>
 8005378:	4603      	mov	r3, r0
 800537a:	2b00      	cmp	r3, #0
 800537c:	d016      	beq.n	80053ac <HAL_UART_IRQHandler+0x228>
 800537e:	687b      	ldr	r3, [r7, #4]
 8005380:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005382:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005384:	687a      	ldr	r2, [r7, #4]
 8005386:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8005388:	4610      	mov	r0, r2
 800538a:	4798      	blx	r3
 800538c:	e00e      	b.n	80053ac <HAL_UART_IRQHandler+0x228>
 800538e:	6878      	ldr	r0, [r7, #4]
 8005390:	f000 f99c 	bl	80056cc <HAL_UART_ErrorCallback>
 8005394:	e00a      	b.n	80053ac <HAL_UART_IRQHandler+0x228>
 8005396:	6878      	ldr	r0, [r7, #4]
 8005398:	f000 f998 	bl	80056cc <HAL_UART_ErrorCallback>
 800539c:	e006      	b.n	80053ac <HAL_UART_IRQHandler+0x228>
 800539e:	6878      	ldr	r0, [r7, #4]
 80053a0:	f000 f994 	bl	80056cc <HAL_UART_ErrorCallback>
 80053a4:	687b      	ldr	r3, [r7, #4]
 80053a6:	2200      	movs	r2, #0
 80053a8:	645a      	str	r2, [r3, #68]	@ 0x44
 80053aa:	e175      	b.n	8005698 <HAL_UART_IRQHandler+0x514>
 80053ac:	bf00      	nop
 80053ae:	e173      	b.n	8005698 <HAL_UART_IRQHandler+0x514>
 80053b0:	687b      	ldr	r3, [r7, #4]
 80053b2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80053b4:	2b01      	cmp	r3, #1
 80053b6:	f040 814f 	bne.w	8005658 <HAL_UART_IRQHandler+0x4d4>
 80053ba:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80053be:	f003 0310 	and.w	r3, r3, #16
 80053c2:	2b00      	cmp	r3, #0
 80053c4:	f000 8148 	beq.w	8005658 <HAL_UART_IRQHandler+0x4d4>
 80053c8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80053cc:	f003 0310 	and.w	r3, r3, #16
 80053d0:	2b00      	cmp	r3, #0
 80053d2:	f000 8141 	beq.w	8005658 <HAL_UART_IRQHandler+0x4d4>
 80053d6:	2300      	movs	r3, #0
 80053d8:	60bb      	str	r3, [r7, #8]
 80053da:	687b      	ldr	r3, [r7, #4]
 80053dc:	681b      	ldr	r3, [r3, #0]
 80053de:	681b      	ldr	r3, [r3, #0]
 80053e0:	60bb      	str	r3, [r7, #8]
 80053e2:	687b      	ldr	r3, [r7, #4]
 80053e4:	681b      	ldr	r3, [r3, #0]
 80053e6:	685b      	ldr	r3, [r3, #4]
 80053e8:	60bb      	str	r3, [r7, #8]
 80053ea:	68bb      	ldr	r3, [r7, #8]
 80053ec:	687b      	ldr	r3, [r7, #4]
 80053ee:	681b      	ldr	r3, [r3, #0]
 80053f0:	695b      	ldr	r3, [r3, #20]
 80053f2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80053f6:	2b00      	cmp	r3, #0
 80053f8:	f000 80b6 	beq.w	8005568 <HAL_UART_IRQHandler+0x3e4>
 80053fc:	687b      	ldr	r3, [r7, #4]
 80053fe:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005400:	681b      	ldr	r3, [r3, #0]
 8005402:	685b      	ldr	r3, [r3, #4]
 8005404:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8005408:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 800540c:	2b00      	cmp	r3, #0
 800540e:	f000 8145 	beq.w	800569c <HAL_UART_IRQHandler+0x518>
 8005412:	687b      	ldr	r3, [r7, #4]
 8005414:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8005416:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 800541a:	429a      	cmp	r2, r3
 800541c:	f080 813e 	bcs.w	800569c <HAL_UART_IRQHandler+0x518>
 8005420:	687b      	ldr	r3, [r7, #4]
 8005422:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8005426:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8005428:	687b      	ldr	r3, [r7, #4]
 800542a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800542c:	699b      	ldr	r3, [r3, #24]
 800542e:	2b20      	cmp	r3, #32
 8005430:	f000 8088 	beq.w	8005544 <HAL_UART_IRQHandler+0x3c0>
 8005434:	687b      	ldr	r3, [r7, #4]
 8005436:	681b      	ldr	r3, [r3, #0]
 8005438:	330c      	adds	r3, #12
 800543a:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800543e:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8005442:	e853 3f00 	ldrex	r3, [r3]
 8005446:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 800544a:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 800544e:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8005452:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8005456:	687b      	ldr	r3, [r7, #4]
 8005458:	681b      	ldr	r3, [r3, #0]
 800545a:	330c      	adds	r3, #12
 800545c:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 8005460:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8005464:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8005468:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 800546c:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8005470:	e841 2300 	strex	r3, r2, [r1]
 8005474:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8005478:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800547c:	2b00      	cmp	r3, #0
 800547e:	d1d9      	bne.n	8005434 <HAL_UART_IRQHandler+0x2b0>
 8005480:	687b      	ldr	r3, [r7, #4]
 8005482:	681b      	ldr	r3, [r3, #0]
 8005484:	3314      	adds	r3, #20
 8005486:	677b      	str	r3, [r7, #116]	@ 0x74
 8005488:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800548a:	e853 3f00 	ldrex	r3, [r3]
 800548e:	673b      	str	r3, [r7, #112]	@ 0x70
 8005490:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8005492:	f023 0301 	bic.w	r3, r3, #1
 8005496:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 800549a:	687b      	ldr	r3, [r7, #4]
 800549c:	681b      	ldr	r3, [r3, #0]
 800549e:	3314      	adds	r3, #20
 80054a0:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 80054a4:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 80054a8:	67fb      	str	r3, [r7, #124]	@ 0x7c
 80054aa:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 80054ac:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 80054b0:	e841 2300 	strex	r3, r2, [r1]
 80054b4:	67bb      	str	r3, [r7, #120]	@ 0x78
 80054b6:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 80054b8:	2b00      	cmp	r3, #0
 80054ba:	d1e1      	bne.n	8005480 <HAL_UART_IRQHandler+0x2fc>
 80054bc:	687b      	ldr	r3, [r7, #4]
 80054be:	681b      	ldr	r3, [r3, #0]
 80054c0:	3314      	adds	r3, #20
 80054c2:	663b      	str	r3, [r7, #96]	@ 0x60
 80054c4:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 80054c6:	e853 3f00 	ldrex	r3, [r3]
 80054ca:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80054cc:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 80054ce:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80054d2:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80054d6:	687b      	ldr	r3, [r7, #4]
 80054d8:	681b      	ldr	r3, [r3, #0]
 80054da:	3314      	adds	r3, #20
 80054dc:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 80054e0:	66fa      	str	r2, [r7, #108]	@ 0x6c
 80054e2:	66bb      	str	r3, [r7, #104]	@ 0x68
 80054e4:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 80054e6:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 80054e8:	e841 2300 	strex	r3, r2, [r1]
 80054ec:	667b      	str	r3, [r7, #100]	@ 0x64
 80054ee:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80054f0:	2b00      	cmp	r3, #0
 80054f2:	d1e3      	bne.n	80054bc <HAL_UART_IRQHandler+0x338>
 80054f4:	687b      	ldr	r3, [r7, #4]
 80054f6:	2220      	movs	r2, #32
 80054f8:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80054fc:	687b      	ldr	r3, [r7, #4]
 80054fe:	2200      	movs	r2, #0
 8005500:	631a      	str	r2, [r3, #48]	@ 0x30
 8005502:	687b      	ldr	r3, [r7, #4]
 8005504:	681b      	ldr	r3, [r3, #0]
 8005506:	330c      	adds	r3, #12
 8005508:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800550a:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800550c:	e853 3f00 	ldrex	r3, [r3]
 8005510:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005512:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8005514:	f023 0310 	bic.w	r3, r3, #16
 8005518:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800551c:	687b      	ldr	r3, [r7, #4]
 800551e:	681b      	ldr	r3, [r3, #0]
 8005520:	330c      	adds	r3, #12
 8005522:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 8005526:	65ba      	str	r2, [r7, #88]	@ 0x58
 8005528:	657b      	str	r3, [r7, #84]	@ 0x54
 800552a:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 800552c:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 800552e:	e841 2300 	strex	r3, r2, [r1]
 8005532:	653b      	str	r3, [r7, #80]	@ 0x50
 8005534:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8005536:	2b00      	cmp	r3, #0
 8005538:	d1e3      	bne.n	8005502 <HAL_UART_IRQHandler+0x37e>
 800553a:	687b      	ldr	r3, [r7, #4]
 800553c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800553e:	4618      	mov	r0, r3
 8005540:	f7fe f90b 	bl	800375a <HAL_DMA_Abort>
 8005544:	687b      	ldr	r3, [r7, #4]
 8005546:	2202      	movs	r2, #2
 8005548:	635a      	str	r2, [r3, #52]	@ 0x34
 800554a:	687b      	ldr	r3, [r7, #4]
 800554c:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 800554e:	687b      	ldr	r3, [r7, #4]
 8005550:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8005552:	b29b      	uxth	r3, r3
 8005554:	1ad3      	subs	r3, r2, r3
 8005556:	b29b      	uxth	r3, r3
 8005558:	4619      	mov	r1, r3
 800555a:	6878      	ldr	r0, [r7, #4]
 800555c:	f000 f8bf 	bl	80056de <HAL_UARTEx_RxEventCallback>
 8005560:	e09c      	b.n	800569c <HAL_UART_IRQHandler+0x518>
 8005562:	bf00      	nop
 8005564:	080057b9 	.word	0x080057b9
 8005568:	687b      	ldr	r3, [r7, #4]
 800556a:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 800556c:	687b      	ldr	r3, [r7, #4]
 800556e:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8005570:	b29b      	uxth	r3, r3
 8005572:	1ad3      	subs	r3, r2, r3
 8005574:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8005578:	687b      	ldr	r3, [r7, #4]
 800557a:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800557c:	b29b      	uxth	r3, r3
 800557e:	2b00      	cmp	r3, #0
 8005580:	f000 808e 	beq.w	80056a0 <HAL_UART_IRQHandler+0x51c>
 8005584:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8005588:	2b00      	cmp	r3, #0
 800558a:	f000 8089 	beq.w	80056a0 <HAL_UART_IRQHandler+0x51c>
 800558e:	687b      	ldr	r3, [r7, #4]
 8005590:	681b      	ldr	r3, [r3, #0]
 8005592:	330c      	adds	r3, #12
 8005594:	63bb      	str	r3, [r7, #56]	@ 0x38
 8005596:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005598:	e853 3f00 	ldrex	r3, [r3]
 800559c:	637b      	str	r3, [r7, #52]	@ 0x34
 800559e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80055a0:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80055a4:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80055a8:	687b      	ldr	r3, [r7, #4]
 80055aa:	681b      	ldr	r3, [r3, #0]
 80055ac:	330c      	adds	r3, #12
 80055ae:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 80055b2:	647a      	str	r2, [r7, #68]	@ 0x44
 80055b4:	643b      	str	r3, [r7, #64]	@ 0x40
 80055b6:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 80055b8:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80055ba:	e841 2300 	strex	r3, r2, [r1]
 80055be:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80055c0:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80055c2:	2b00      	cmp	r3, #0
 80055c4:	d1e3      	bne.n	800558e <HAL_UART_IRQHandler+0x40a>
 80055c6:	687b      	ldr	r3, [r7, #4]
 80055c8:	681b      	ldr	r3, [r3, #0]
 80055ca:	3314      	adds	r3, #20
 80055cc:	627b      	str	r3, [r7, #36]	@ 0x24
 80055ce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80055d0:	e853 3f00 	ldrex	r3, [r3]
 80055d4:	623b      	str	r3, [r7, #32]
 80055d6:	6a3b      	ldr	r3, [r7, #32]
 80055d8:	f023 0301 	bic.w	r3, r3, #1
 80055dc:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 80055e0:	687b      	ldr	r3, [r7, #4]
 80055e2:	681b      	ldr	r3, [r3, #0]
 80055e4:	3314      	adds	r3, #20
 80055e6:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 80055ea:	633a      	str	r2, [r7, #48]	@ 0x30
 80055ec:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80055ee:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 80055f0:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80055f2:	e841 2300 	strex	r3, r2, [r1]
 80055f6:	62bb      	str	r3, [r7, #40]	@ 0x28
 80055f8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80055fa:	2b00      	cmp	r3, #0
 80055fc:	d1e3      	bne.n	80055c6 <HAL_UART_IRQHandler+0x442>
 80055fe:	687b      	ldr	r3, [r7, #4]
 8005600:	2220      	movs	r2, #32
 8005602:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005606:	687b      	ldr	r3, [r7, #4]
 8005608:	2200      	movs	r2, #0
 800560a:	631a      	str	r2, [r3, #48]	@ 0x30
 800560c:	687b      	ldr	r3, [r7, #4]
 800560e:	681b      	ldr	r3, [r3, #0]
 8005610:	330c      	adds	r3, #12
 8005612:	613b      	str	r3, [r7, #16]
 8005614:	693b      	ldr	r3, [r7, #16]
 8005616:	e853 3f00 	ldrex	r3, [r3]
 800561a:	60fb      	str	r3, [r7, #12]
 800561c:	68fb      	ldr	r3, [r7, #12]
 800561e:	f023 0310 	bic.w	r3, r3, #16
 8005622:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8005626:	687b      	ldr	r3, [r7, #4]
 8005628:	681b      	ldr	r3, [r3, #0]
 800562a:	330c      	adds	r3, #12
 800562c:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 8005630:	61fa      	str	r2, [r7, #28]
 8005632:	61bb      	str	r3, [r7, #24]
 8005634:	69b9      	ldr	r1, [r7, #24]
 8005636:	69fa      	ldr	r2, [r7, #28]
 8005638:	e841 2300 	strex	r3, r2, [r1]
 800563c:	617b      	str	r3, [r7, #20]
 800563e:	697b      	ldr	r3, [r7, #20]
 8005640:	2b00      	cmp	r3, #0
 8005642:	d1e3      	bne.n	800560c <HAL_UART_IRQHandler+0x488>
 8005644:	687b      	ldr	r3, [r7, #4]
 8005646:	2202      	movs	r2, #2
 8005648:	635a      	str	r2, [r3, #52]	@ 0x34
 800564a:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 800564e:	4619      	mov	r1, r3
 8005650:	6878      	ldr	r0, [r7, #4]
 8005652:	f000 f844 	bl	80056de <HAL_UARTEx_RxEventCallback>
 8005656:	e023      	b.n	80056a0 <HAL_UART_IRQHandler+0x51c>
 8005658:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800565c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005660:	2b00      	cmp	r3, #0
 8005662:	d009      	beq.n	8005678 <HAL_UART_IRQHandler+0x4f4>
 8005664:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005668:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800566c:	2b00      	cmp	r3, #0
 800566e:	d003      	beq.n	8005678 <HAL_UART_IRQHandler+0x4f4>
 8005670:	6878      	ldr	r0, [r7, #4]
 8005672:	f000 f8b5 	bl	80057e0 <UART_Transmit_IT>
 8005676:	e014      	b.n	80056a2 <HAL_UART_IRQHandler+0x51e>
 8005678:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800567c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005680:	2b00      	cmp	r3, #0
 8005682:	d00e      	beq.n	80056a2 <HAL_UART_IRQHandler+0x51e>
 8005684:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005688:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800568c:	2b00      	cmp	r3, #0
 800568e:	d008      	beq.n	80056a2 <HAL_UART_IRQHandler+0x51e>
 8005690:	6878      	ldr	r0, [r7, #4]
 8005692:	f000 f8f4 	bl	800587e <UART_EndTransmit_IT>
 8005696:	e004      	b.n	80056a2 <HAL_UART_IRQHandler+0x51e>
 8005698:	bf00      	nop
 800569a:	e002      	b.n	80056a2 <HAL_UART_IRQHandler+0x51e>
 800569c:	bf00      	nop
 800569e:	e000      	b.n	80056a2 <HAL_UART_IRQHandler+0x51e>
 80056a0:	bf00      	nop
 80056a2:	37e8      	adds	r7, #232	@ 0xe8
 80056a4:	46bd      	mov	sp, r7
 80056a6:	bd80      	pop	{r7, pc}

080056a8 <HAL_UART_TxCpltCallback>:
 80056a8:	b480      	push	{r7}
 80056aa:	b083      	sub	sp, #12
 80056ac:	af00      	add	r7, sp, #0
 80056ae:	6078      	str	r0, [r7, #4]
 80056b0:	bf00      	nop
 80056b2:	370c      	adds	r7, #12
 80056b4:	46bd      	mov	sp, r7
 80056b6:	bc80      	pop	{r7}
 80056b8:	4770      	bx	lr

080056ba <HAL_UART_RxCpltCallback>:
 80056ba:	b480      	push	{r7}
 80056bc:	b083      	sub	sp, #12
 80056be:	af00      	add	r7, sp, #0
 80056c0:	6078      	str	r0, [r7, #4]
 80056c2:	bf00      	nop
 80056c4:	370c      	adds	r7, #12
 80056c6:	46bd      	mov	sp, r7
 80056c8:	bc80      	pop	{r7}
 80056ca:	4770      	bx	lr

080056cc <HAL_UART_ErrorCallback>:
 80056cc:	b480      	push	{r7}
 80056ce:	b083      	sub	sp, #12
 80056d0:	af00      	add	r7, sp, #0
 80056d2:	6078      	str	r0, [r7, #4]
 80056d4:	bf00      	nop
 80056d6:	370c      	adds	r7, #12
 80056d8:	46bd      	mov	sp, r7
 80056da:	bc80      	pop	{r7}
 80056dc:	4770      	bx	lr

080056de <HAL_UARTEx_RxEventCallback>:
 80056de:	b480      	push	{r7}
 80056e0:	b083      	sub	sp, #12
 80056e2:	af00      	add	r7, sp, #0
 80056e4:	6078      	str	r0, [r7, #4]
 80056e6:	460b      	mov	r3, r1
 80056e8:	807b      	strh	r3, [r7, #2]
 80056ea:	bf00      	nop
 80056ec:	370c      	adds	r7, #12
 80056ee:	46bd      	mov	sp, r7
 80056f0:	bc80      	pop	{r7}
 80056f2:	4770      	bx	lr

080056f4 <UART_EndRxTransfer>:
 80056f4:	b480      	push	{r7}
 80056f6:	b095      	sub	sp, #84	@ 0x54
 80056f8:	af00      	add	r7, sp, #0
 80056fa:	6078      	str	r0, [r7, #4]
 80056fc:	687b      	ldr	r3, [r7, #4]
 80056fe:	681b      	ldr	r3, [r3, #0]
 8005700:	330c      	adds	r3, #12
 8005702:	637b      	str	r3, [r7, #52]	@ 0x34
 8005704:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8005706:	e853 3f00 	ldrex	r3, [r3]
 800570a:	633b      	str	r3, [r7, #48]	@ 0x30
 800570c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800570e:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8005712:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8005714:	687b      	ldr	r3, [r7, #4]
 8005716:	681b      	ldr	r3, [r3, #0]
 8005718:	330c      	adds	r3, #12
 800571a:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 800571c:	643a      	str	r2, [r7, #64]	@ 0x40
 800571e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005720:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8005722:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8005724:	e841 2300 	strex	r3, r2, [r1]
 8005728:	63bb      	str	r3, [r7, #56]	@ 0x38
 800572a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800572c:	2b00      	cmp	r3, #0
 800572e:	d1e5      	bne.n	80056fc <UART_EndRxTransfer+0x8>
 8005730:	687b      	ldr	r3, [r7, #4]
 8005732:	681b      	ldr	r3, [r3, #0]
 8005734:	3314      	adds	r3, #20
 8005736:	623b      	str	r3, [r7, #32]
 8005738:	6a3b      	ldr	r3, [r7, #32]
 800573a:	e853 3f00 	ldrex	r3, [r3]
 800573e:	61fb      	str	r3, [r7, #28]
 8005740:	69fb      	ldr	r3, [r7, #28]
 8005742:	f023 0301 	bic.w	r3, r3, #1
 8005746:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005748:	687b      	ldr	r3, [r7, #4]
 800574a:	681b      	ldr	r3, [r3, #0]
 800574c:	3314      	adds	r3, #20
 800574e:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8005750:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8005752:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005754:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8005756:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8005758:	e841 2300 	strex	r3, r2, [r1]
 800575c:	627b      	str	r3, [r7, #36]	@ 0x24
 800575e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005760:	2b00      	cmp	r3, #0
 8005762:	d1e5      	bne.n	8005730 <UART_EndRxTransfer+0x3c>
 8005764:	687b      	ldr	r3, [r7, #4]
 8005766:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005768:	2b01      	cmp	r3, #1
 800576a:	d119      	bne.n	80057a0 <UART_EndRxTransfer+0xac>
 800576c:	687b      	ldr	r3, [r7, #4]
 800576e:	681b      	ldr	r3, [r3, #0]
 8005770:	330c      	adds	r3, #12
 8005772:	60fb      	str	r3, [r7, #12]
 8005774:	68fb      	ldr	r3, [r7, #12]
 8005776:	e853 3f00 	ldrex	r3, [r3]
 800577a:	60bb      	str	r3, [r7, #8]
 800577c:	68bb      	ldr	r3, [r7, #8]
 800577e:	f023 0310 	bic.w	r3, r3, #16
 8005782:	647b      	str	r3, [r7, #68]	@ 0x44
 8005784:	687b      	ldr	r3, [r7, #4]
 8005786:	681b      	ldr	r3, [r3, #0]
 8005788:	330c      	adds	r3, #12
 800578a:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800578c:	61ba      	str	r2, [r7, #24]
 800578e:	617b      	str	r3, [r7, #20]
 8005790:	6979      	ldr	r1, [r7, #20]
 8005792:	69ba      	ldr	r2, [r7, #24]
 8005794:	e841 2300 	strex	r3, r2, [r1]
 8005798:	613b      	str	r3, [r7, #16]
 800579a:	693b      	ldr	r3, [r7, #16]
 800579c:	2b00      	cmp	r3, #0
 800579e:	d1e5      	bne.n	800576c <UART_EndRxTransfer+0x78>
 80057a0:	687b      	ldr	r3, [r7, #4]
 80057a2:	2220      	movs	r2, #32
 80057a4:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80057a8:	687b      	ldr	r3, [r7, #4]
 80057aa:	2200      	movs	r2, #0
 80057ac:	631a      	str	r2, [r3, #48]	@ 0x30
 80057ae:	bf00      	nop
 80057b0:	3754      	adds	r7, #84	@ 0x54
 80057b2:	46bd      	mov	sp, r7
 80057b4:	bc80      	pop	{r7}
 80057b6:	4770      	bx	lr

080057b8 <UART_DMAAbortOnError>:
 80057b8:	b580      	push	{r7, lr}
 80057ba:	b084      	sub	sp, #16
 80057bc:	af00      	add	r7, sp, #0
 80057be:	6078      	str	r0, [r7, #4]
 80057c0:	687b      	ldr	r3, [r7, #4]
 80057c2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80057c4:	60fb      	str	r3, [r7, #12]
 80057c6:	68fb      	ldr	r3, [r7, #12]
 80057c8:	2200      	movs	r2, #0
 80057ca:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80057cc:	68fb      	ldr	r3, [r7, #12]
 80057ce:	2200      	movs	r2, #0
 80057d0:	84da      	strh	r2, [r3, #38]	@ 0x26
 80057d2:	68f8      	ldr	r0, [r7, #12]
 80057d4:	f7ff ff7a 	bl	80056cc <HAL_UART_ErrorCallback>
 80057d8:	bf00      	nop
 80057da:	3710      	adds	r7, #16
 80057dc:	46bd      	mov	sp, r7
 80057de:	bd80      	pop	{r7, pc}

080057e0 <UART_Transmit_IT>:
 80057e0:	b480      	push	{r7}
 80057e2:	b085      	sub	sp, #20
 80057e4:	af00      	add	r7, sp, #0
 80057e6:	6078      	str	r0, [r7, #4]
 80057e8:	687b      	ldr	r3, [r7, #4]
 80057ea:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80057ee:	b2db      	uxtb	r3, r3
 80057f0:	2b21      	cmp	r3, #33	@ 0x21
 80057f2:	d13e      	bne.n	8005872 <UART_Transmit_IT+0x92>
 80057f4:	687b      	ldr	r3, [r7, #4]
 80057f6:	689b      	ldr	r3, [r3, #8]
 80057f8:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80057fc:	d114      	bne.n	8005828 <UART_Transmit_IT+0x48>
 80057fe:	687b      	ldr	r3, [r7, #4]
 8005800:	691b      	ldr	r3, [r3, #16]
 8005802:	2b00      	cmp	r3, #0
 8005804:	d110      	bne.n	8005828 <UART_Transmit_IT+0x48>
 8005806:	687b      	ldr	r3, [r7, #4]
 8005808:	6a1b      	ldr	r3, [r3, #32]
 800580a:	60fb      	str	r3, [r7, #12]
 800580c:	68fb      	ldr	r3, [r7, #12]
 800580e:	881b      	ldrh	r3, [r3, #0]
 8005810:	461a      	mov	r2, r3
 8005812:	687b      	ldr	r3, [r7, #4]
 8005814:	681b      	ldr	r3, [r3, #0]
 8005816:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800581a:	605a      	str	r2, [r3, #4]
 800581c:	687b      	ldr	r3, [r7, #4]
 800581e:	6a1b      	ldr	r3, [r3, #32]
 8005820:	1c9a      	adds	r2, r3, #2
 8005822:	687b      	ldr	r3, [r7, #4]
 8005824:	621a      	str	r2, [r3, #32]
 8005826:	e008      	b.n	800583a <UART_Transmit_IT+0x5a>
 8005828:	687b      	ldr	r3, [r7, #4]
 800582a:	6a1b      	ldr	r3, [r3, #32]
 800582c:	1c59      	adds	r1, r3, #1
 800582e:	687a      	ldr	r2, [r7, #4]
 8005830:	6211      	str	r1, [r2, #32]
 8005832:	781a      	ldrb	r2, [r3, #0]
 8005834:	687b      	ldr	r3, [r7, #4]
 8005836:	681b      	ldr	r3, [r3, #0]
 8005838:	605a      	str	r2, [r3, #4]
 800583a:	687b      	ldr	r3, [r7, #4]
 800583c:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 800583e:	b29b      	uxth	r3, r3
 8005840:	3b01      	subs	r3, #1
 8005842:	b29b      	uxth	r3, r3
 8005844:	687a      	ldr	r2, [r7, #4]
 8005846:	4619      	mov	r1, r3
 8005848:	84d1      	strh	r1, [r2, #38]	@ 0x26
 800584a:	2b00      	cmp	r3, #0
 800584c:	d10f      	bne.n	800586e <UART_Transmit_IT+0x8e>
 800584e:	687b      	ldr	r3, [r7, #4]
 8005850:	681b      	ldr	r3, [r3, #0]
 8005852:	68da      	ldr	r2, [r3, #12]
 8005854:	687b      	ldr	r3, [r7, #4]
 8005856:	681b      	ldr	r3, [r3, #0]
 8005858:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800585c:	60da      	str	r2, [r3, #12]
 800585e:	687b      	ldr	r3, [r7, #4]
 8005860:	681b      	ldr	r3, [r3, #0]
 8005862:	68da      	ldr	r2, [r3, #12]
 8005864:	687b      	ldr	r3, [r7, #4]
 8005866:	681b      	ldr	r3, [r3, #0]
 8005868:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800586c:	60da      	str	r2, [r3, #12]
 800586e:	2300      	movs	r3, #0
 8005870:	e000      	b.n	8005874 <UART_Transmit_IT+0x94>
 8005872:	2302      	movs	r3, #2
 8005874:	4618      	mov	r0, r3
 8005876:	3714      	adds	r7, #20
 8005878:	46bd      	mov	sp, r7
 800587a:	bc80      	pop	{r7}
 800587c:	4770      	bx	lr

0800587e <UART_EndTransmit_IT>:
 800587e:	b580      	push	{r7, lr}
 8005880:	b082      	sub	sp, #8
 8005882:	af00      	add	r7, sp, #0
 8005884:	6078      	str	r0, [r7, #4]
 8005886:	687b      	ldr	r3, [r7, #4]
 8005888:	681b      	ldr	r3, [r3, #0]
 800588a:	68da      	ldr	r2, [r3, #12]
 800588c:	687b      	ldr	r3, [r7, #4]
 800588e:	681b      	ldr	r3, [r3, #0]
 8005890:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005894:	60da      	str	r2, [r3, #12]
 8005896:	687b      	ldr	r3, [r7, #4]
 8005898:	2220      	movs	r2, #32
 800589a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800589e:	6878      	ldr	r0, [r7, #4]
 80058a0:	f7ff ff02 	bl	80056a8 <HAL_UART_TxCpltCallback>
 80058a4:	2300      	movs	r3, #0
 80058a6:	4618      	mov	r0, r3
 80058a8:	3708      	adds	r7, #8
 80058aa:	46bd      	mov	sp, r7
 80058ac:	bd80      	pop	{r7, pc}

080058ae <UART_Receive_IT>:
 80058ae:	b580      	push	{r7, lr}
 80058b0:	b08c      	sub	sp, #48	@ 0x30
 80058b2:	af00      	add	r7, sp, #0
 80058b4:	6078      	str	r0, [r7, #4]
 80058b6:	687b      	ldr	r3, [r7, #4]
 80058b8:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80058bc:	b2db      	uxtb	r3, r3
 80058be:	2b22      	cmp	r3, #34	@ 0x22
 80058c0:	f040 80ae 	bne.w	8005a20 <UART_Receive_IT+0x172>
 80058c4:	687b      	ldr	r3, [r7, #4]
 80058c6:	689b      	ldr	r3, [r3, #8]
 80058c8:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80058cc:	d117      	bne.n	80058fe <UART_Receive_IT+0x50>
 80058ce:	687b      	ldr	r3, [r7, #4]
 80058d0:	691b      	ldr	r3, [r3, #16]
 80058d2:	2b00      	cmp	r3, #0
 80058d4:	d113      	bne.n	80058fe <UART_Receive_IT+0x50>
 80058d6:	2300      	movs	r3, #0
 80058d8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80058da:	687b      	ldr	r3, [r7, #4]
 80058dc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80058de:	62bb      	str	r3, [r7, #40]	@ 0x28
 80058e0:	687b      	ldr	r3, [r7, #4]
 80058e2:	681b      	ldr	r3, [r3, #0]
 80058e4:	685b      	ldr	r3, [r3, #4]
 80058e6:	b29b      	uxth	r3, r3
 80058e8:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80058ec:	b29a      	uxth	r2, r3
 80058ee:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80058f0:	801a      	strh	r2, [r3, #0]
 80058f2:	687b      	ldr	r3, [r7, #4]
 80058f4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80058f6:	1c9a      	adds	r2, r3, #2
 80058f8:	687b      	ldr	r3, [r7, #4]
 80058fa:	629a      	str	r2, [r3, #40]	@ 0x28
 80058fc:	e026      	b.n	800594c <UART_Receive_IT+0x9e>
 80058fe:	687b      	ldr	r3, [r7, #4]
 8005900:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005902:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005904:	2300      	movs	r3, #0
 8005906:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005908:	687b      	ldr	r3, [r7, #4]
 800590a:	689b      	ldr	r3, [r3, #8]
 800590c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005910:	d007      	beq.n	8005922 <UART_Receive_IT+0x74>
 8005912:	687b      	ldr	r3, [r7, #4]
 8005914:	689b      	ldr	r3, [r3, #8]
 8005916:	2b00      	cmp	r3, #0
 8005918:	d10a      	bne.n	8005930 <UART_Receive_IT+0x82>
 800591a:	687b      	ldr	r3, [r7, #4]
 800591c:	691b      	ldr	r3, [r3, #16]
 800591e:	2b00      	cmp	r3, #0
 8005920:	d106      	bne.n	8005930 <UART_Receive_IT+0x82>
 8005922:	687b      	ldr	r3, [r7, #4]
 8005924:	681b      	ldr	r3, [r3, #0]
 8005926:	685b      	ldr	r3, [r3, #4]
 8005928:	b2da      	uxtb	r2, r3
 800592a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800592c:	701a      	strb	r2, [r3, #0]
 800592e:	e008      	b.n	8005942 <UART_Receive_IT+0x94>
 8005930:	687b      	ldr	r3, [r7, #4]
 8005932:	681b      	ldr	r3, [r3, #0]
 8005934:	685b      	ldr	r3, [r3, #4]
 8005936:	b2db      	uxtb	r3, r3
 8005938:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800593c:	b2da      	uxtb	r2, r3
 800593e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005940:	701a      	strb	r2, [r3, #0]
 8005942:	687b      	ldr	r3, [r7, #4]
 8005944:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005946:	1c5a      	adds	r2, r3, #1
 8005948:	687b      	ldr	r3, [r7, #4]
 800594a:	629a      	str	r2, [r3, #40]	@ 0x28
 800594c:	687b      	ldr	r3, [r7, #4]
 800594e:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8005950:	b29b      	uxth	r3, r3
 8005952:	3b01      	subs	r3, #1
 8005954:	b29b      	uxth	r3, r3
 8005956:	687a      	ldr	r2, [r7, #4]
 8005958:	4619      	mov	r1, r3
 800595a:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 800595c:	2b00      	cmp	r3, #0
 800595e:	d15d      	bne.n	8005a1c <UART_Receive_IT+0x16e>
 8005960:	687b      	ldr	r3, [r7, #4]
 8005962:	681b      	ldr	r3, [r3, #0]
 8005964:	68da      	ldr	r2, [r3, #12]
 8005966:	687b      	ldr	r3, [r7, #4]
 8005968:	681b      	ldr	r3, [r3, #0]
 800596a:	f022 0220 	bic.w	r2, r2, #32
 800596e:	60da      	str	r2, [r3, #12]
 8005970:	687b      	ldr	r3, [r7, #4]
 8005972:	681b      	ldr	r3, [r3, #0]
 8005974:	68da      	ldr	r2, [r3, #12]
 8005976:	687b      	ldr	r3, [r7, #4]
 8005978:	681b      	ldr	r3, [r3, #0]
 800597a:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800597e:	60da      	str	r2, [r3, #12]
 8005980:	687b      	ldr	r3, [r7, #4]
 8005982:	681b      	ldr	r3, [r3, #0]
 8005984:	695a      	ldr	r2, [r3, #20]
 8005986:	687b      	ldr	r3, [r7, #4]
 8005988:	681b      	ldr	r3, [r3, #0]
 800598a:	f022 0201 	bic.w	r2, r2, #1
 800598e:	615a      	str	r2, [r3, #20]
 8005990:	687b      	ldr	r3, [r7, #4]
 8005992:	2220      	movs	r2, #32
 8005994:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005998:	687b      	ldr	r3, [r7, #4]
 800599a:	2200      	movs	r2, #0
 800599c:	635a      	str	r2, [r3, #52]	@ 0x34
 800599e:	687b      	ldr	r3, [r7, #4]
 80059a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80059a2:	2b01      	cmp	r3, #1
 80059a4:	d135      	bne.n	8005a12 <UART_Receive_IT+0x164>
 80059a6:	687b      	ldr	r3, [r7, #4]
 80059a8:	2200      	movs	r2, #0
 80059aa:	631a      	str	r2, [r3, #48]	@ 0x30
 80059ac:	687b      	ldr	r3, [r7, #4]
 80059ae:	681b      	ldr	r3, [r3, #0]
 80059b0:	330c      	adds	r3, #12
 80059b2:	617b      	str	r3, [r7, #20]
 80059b4:	697b      	ldr	r3, [r7, #20]
 80059b6:	e853 3f00 	ldrex	r3, [r3]
 80059ba:	613b      	str	r3, [r7, #16]
 80059bc:	693b      	ldr	r3, [r7, #16]
 80059be:	f023 0310 	bic.w	r3, r3, #16
 80059c2:	627b      	str	r3, [r7, #36]	@ 0x24
 80059c4:	687b      	ldr	r3, [r7, #4]
 80059c6:	681b      	ldr	r3, [r3, #0]
 80059c8:	330c      	adds	r3, #12
 80059ca:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80059cc:	623a      	str	r2, [r7, #32]
 80059ce:	61fb      	str	r3, [r7, #28]
 80059d0:	69f9      	ldr	r1, [r7, #28]
 80059d2:	6a3a      	ldr	r2, [r7, #32]
 80059d4:	e841 2300 	strex	r3, r2, [r1]
 80059d8:	61bb      	str	r3, [r7, #24]
 80059da:	69bb      	ldr	r3, [r7, #24]
 80059dc:	2b00      	cmp	r3, #0
 80059de:	d1e5      	bne.n	80059ac <UART_Receive_IT+0xfe>
 80059e0:	687b      	ldr	r3, [r7, #4]
 80059e2:	681b      	ldr	r3, [r3, #0]
 80059e4:	681b      	ldr	r3, [r3, #0]
 80059e6:	f003 0310 	and.w	r3, r3, #16
 80059ea:	2b10      	cmp	r3, #16
 80059ec:	d10a      	bne.n	8005a04 <UART_Receive_IT+0x156>
 80059ee:	2300      	movs	r3, #0
 80059f0:	60fb      	str	r3, [r7, #12]
 80059f2:	687b      	ldr	r3, [r7, #4]
 80059f4:	681b      	ldr	r3, [r3, #0]
 80059f6:	681b      	ldr	r3, [r3, #0]
 80059f8:	60fb      	str	r3, [r7, #12]
 80059fa:	687b      	ldr	r3, [r7, #4]
 80059fc:	681b      	ldr	r3, [r3, #0]
 80059fe:	685b      	ldr	r3, [r3, #4]
 8005a00:	60fb      	str	r3, [r7, #12]
 8005a02:	68fb      	ldr	r3, [r7, #12]
 8005a04:	687b      	ldr	r3, [r7, #4]
 8005a06:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8005a08:	4619      	mov	r1, r3
 8005a0a:	6878      	ldr	r0, [r7, #4]
 8005a0c:	f7ff fe67 	bl	80056de <HAL_UARTEx_RxEventCallback>
 8005a10:	e002      	b.n	8005a18 <UART_Receive_IT+0x16a>
 8005a12:	6878      	ldr	r0, [r7, #4]
 8005a14:	f7ff fe51 	bl	80056ba <HAL_UART_RxCpltCallback>
 8005a18:	2300      	movs	r3, #0
 8005a1a:	e002      	b.n	8005a22 <UART_Receive_IT+0x174>
 8005a1c:	2300      	movs	r3, #0
 8005a1e:	e000      	b.n	8005a22 <UART_Receive_IT+0x174>
 8005a20:	2302      	movs	r3, #2
 8005a22:	4618      	mov	r0, r3
 8005a24:	3730      	adds	r7, #48	@ 0x30
 8005a26:	46bd      	mov	sp, r7
 8005a28:	bd80      	pop	{r7, pc}
	...

08005a2c <UART_SetConfig>:
 8005a2c:	b580      	push	{r7, lr}
 8005a2e:	b084      	sub	sp, #16
 8005a30:	af00      	add	r7, sp, #0
 8005a32:	6078      	str	r0, [r7, #4]
 8005a34:	687b      	ldr	r3, [r7, #4]
 8005a36:	681b      	ldr	r3, [r3, #0]
 8005a38:	691b      	ldr	r3, [r3, #16]
 8005a3a:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 8005a3e:	687b      	ldr	r3, [r7, #4]
 8005a40:	68da      	ldr	r2, [r3, #12]
 8005a42:	687b      	ldr	r3, [r7, #4]
 8005a44:	681b      	ldr	r3, [r3, #0]
 8005a46:	430a      	orrs	r2, r1
 8005a48:	611a      	str	r2, [r3, #16]
 8005a4a:	687b      	ldr	r3, [r7, #4]
 8005a4c:	689a      	ldr	r2, [r3, #8]
 8005a4e:	687b      	ldr	r3, [r7, #4]
 8005a50:	691b      	ldr	r3, [r3, #16]
 8005a52:	431a      	orrs	r2, r3
 8005a54:	687b      	ldr	r3, [r7, #4]
 8005a56:	695b      	ldr	r3, [r3, #20]
 8005a58:	4313      	orrs	r3, r2
 8005a5a:	60bb      	str	r3, [r7, #8]
 8005a5c:	687b      	ldr	r3, [r7, #4]
 8005a5e:	681b      	ldr	r3, [r3, #0]
 8005a60:	68db      	ldr	r3, [r3, #12]
 8005a62:	f423 53b0 	bic.w	r3, r3, #5632	@ 0x1600
 8005a66:	f023 030c 	bic.w	r3, r3, #12
 8005a6a:	687a      	ldr	r2, [r7, #4]
 8005a6c:	6812      	ldr	r2, [r2, #0]
 8005a6e:	68b9      	ldr	r1, [r7, #8]
 8005a70:	430b      	orrs	r3, r1
 8005a72:	60d3      	str	r3, [r2, #12]
 8005a74:	687b      	ldr	r3, [r7, #4]
 8005a76:	681b      	ldr	r3, [r3, #0]
 8005a78:	695b      	ldr	r3, [r3, #20]
 8005a7a:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 8005a7e:	687b      	ldr	r3, [r7, #4]
 8005a80:	699a      	ldr	r2, [r3, #24]
 8005a82:	687b      	ldr	r3, [r7, #4]
 8005a84:	681b      	ldr	r3, [r3, #0]
 8005a86:	430a      	orrs	r2, r1
 8005a88:	615a      	str	r2, [r3, #20]
 8005a8a:	687b      	ldr	r3, [r7, #4]
 8005a8c:	681b      	ldr	r3, [r3, #0]
 8005a8e:	4a2c      	ldr	r2, [pc, #176]	@ (8005b40 <UART_SetConfig+0x114>)
 8005a90:	4293      	cmp	r3, r2
 8005a92:	d103      	bne.n	8005a9c <UART_SetConfig+0x70>
 8005a94:	f7fe fc78 	bl	8004388 <HAL_RCC_GetPCLK2Freq>
 8005a98:	60f8      	str	r0, [r7, #12]
 8005a9a:	e002      	b.n	8005aa2 <UART_SetConfig+0x76>
 8005a9c:	f7fe fc60 	bl	8004360 <HAL_RCC_GetPCLK1Freq>
 8005aa0:	60f8      	str	r0, [r7, #12]
 8005aa2:	68fa      	ldr	r2, [r7, #12]
 8005aa4:	4613      	mov	r3, r2
 8005aa6:	009b      	lsls	r3, r3, #2
 8005aa8:	4413      	add	r3, r2
 8005aaa:	009a      	lsls	r2, r3, #2
 8005aac:	441a      	add	r2, r3
 8005aae:	687b      	ldr	r3, [r7, #4]
 8005ab0:	685b      	ldr	r3, [r3, #4]
 8005ab2:	009b      	lsls	r3, r3, #2
 8005ab4:	fbb2 f3f3 	udiv	r3, r2, r3
 8005ab8:	4a22      	ldr	r2, [pc, #136]	@ (8005b44 <UART_SetConfig+0x118>)
 8005aba:	fba2 2303 	umull	r2, r3, r2, r3
 8005abe:	095b      	lsrs	r3, r3, #5
 8005ac0:	0119      	lsls	r1, r3, #4
 8005ac2:	68fa      	ldr	r2, [r7, #12]
 8005ac4:	4613      	mov	r3, r2
 8005ac6:	009b      	lsls	r3, r3, #2
 8005ac8:	4413      	add	r3, r2
 8005aca:	009a      	lsls	r2, r3, #2
 8005acc:	441a      	add	r2, r3
 8005ace:	687b      	ldr	r3, [r7, #4]
 8005ad0:	685b      	ldr	r3, [r3, #4]
 8005ad2:	009b      	lsls	r3, r3, #2
 8005ad4:	fbb2 f2f3 	udiv	r2, r2, r3
 8005ad8:	4b1a      	ldr	r3, [pc, #104]	@ (8005b44 <UART_SetConfig+0x118>)
 8005ada:	fba3 0302 	umull	r0, r3, r3, r2
 8005ade:	095b      	lsrs	r3, r3, #5
 8005ae0:	2064      	movs	r0, #100	@ 0x64
 8005ae2:	fb00 f303 	mul.w	r3, r0, r3
 8005ae6:	1ad3      	subs	r3, r2, r3
 8005ae8:	011b      	lsls	r3, r3, #4
 8005aea:	3332      	adds	r3, #50	@ 0x32
 8005aec:	4a15      	ldr	r2, [pc, #84]	@ (8005b44 <UART_SetConfig+0x118>)
 8005aee:	fba2 2303 	umull	r2, r3, r2, r3
 8005af2:	095b      	lsrs	r3, r3, #5
 8005af4:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8005af8:	4419      	add	r1, r3
 8005afa:	68fa      	ldr	r2, [r7, #12]
 8005afc:	4613      	mov	r3, r2
 8005afe:	009b      	lsls	r3, r3, #2
 8005b00:	4413      	add	r3, r2
 8005b02:	009a      	lsls	r2, r3, #2
 8005b04:	441a      	add	r2, r3
 8005b06:	687b      	ldr	r3, [r7, #4]
 8005b08:	685b      	ldr	r3, [r3, #4]
 8005b0a:	009b      	lsls	r3, r3, #2
 8005b0c:	fbb2 f2f3 	udiv	r2, r2, r3
 8005b10:	4b0c      	ldr	r3, [pc, #48]	@ (8005b44 <UART_SetConfig+0x118>)
 8005b12:	fba3 0302 	umull	r0, r3, r3, r2
 8005b16:	095b      	lsrs	r3, r3, #5
 8005b18:	2064      	movs	r0, #100	@ 0x64
 8005b1a:	fb00 f303 	mul.w	r3, r0, r3
 8005b1e:	1ad3      	subs	r3, r2, r3
 8005b20:	011b      	lsls	r3, r3, #4
 8005b22:	3332      	adds	r3, #50	@ 0x32
 8005b24:	4a07      	ldr	r2, [pc, #28]	@ (8005b44 <UART_SetConfig+0x118>)
 8005b26:	fba2 2303 	umull	r2, r3, r2, r3
 8005b2a:	095b      	lsrs	r3, r3, #5
 8005b2c:	f003 020f 	and.w	r2, r3, #15
 8005b30:	687b      	ldr	r3, [r7, #4]
 8005b32:	681b      	ldr	r3, [r3, #0]
 8005b34:	440a      	add	r2, r1
 8005b36:	609a      	str	r2, [r3, #8]
 8005b38:	bf00      	nop
 8005b3a:	3710      	adds	r7, #16
 8005b3c:	46bd      	mov	sp, r7
 8005b3e:	bd80      	pop	{r7, pc}
 8005b40:	40013800 	.word	0x40013800
 8005b44:	51eb851f 	.word	0x51eb851f

08005b48 <MX_FATFS_Init>:
/* USER CODE BEGIN Variables */

/* USER CODE END Variables */

void MX_FATFS_Init(void)
{
 8005b48:	b580      	push	{r7, lr}
 8005b4a:	af00      	add	r7, sp, #0
  /*## FatFS: Link the USER driver ###########################*/
  retUSER = FATFS_LinkDriver(&USER_Driver, USERPath);
 8005b4c:	4904      	ldr	r1, [pc, #16]	@ (8005b60 <MX_FATFS_Init+0x18>)
 8005b4e:	4805      	ldr	r0, [pc, #20]	@ (8005b64 <MX_FATFS_Init+0x1c>)
 8005b50:	f000 f8a6 	bl	8005ca0 <FATFS_LinkDriver>
 8005b54:	4603      	mov	r3, r0
 8005b56:	461a      	mov	r2, r3
 8005b58:	4b03      	ldr	r3, [pc, #12]	@ (8005b68 <MX_FATFS_Init+0x20>)
 8005b5a:	701a      	strb	r2, [r3, #0]

  /* USER CODE BEGIN Init */
  /* additional user code for init */
  /* USER CODE END Init */
}
 8005b5c:	bf00      	nop
 8005b5e:	bd80      	pop	{r7, pc}
 8005b60:	20000474 	.word	0x20000474
 8005b64:	2000000c 	.word	0x2000000c
 8005b68:	20000470 	.word	0x20000470

08005b6c <USER_initialize>:
  * @retval DSTATUS: Operation status
  */
DSTATUS USER_initialize (
	BYTE pdrv           /* Physical drive nmuber to identify the drive */
)
{
 8005b6c:	b480      	push	{r7}
 8005b6e:	b083      	sub	sp, #12
 8005b70:	af00      	add	r7, sp, #0
 8005b72:	4603      	mov	r3, r0
 8005b74:	71fb      	strb	r3, [r7, #7]
  /* USER CODE BEGIN INIT */
    Stat = STA_NOINIT;
 8005b76:	4b05      	ldr	r3, [pc, #20]	@ (8005b8c <USER_initialize+0x20>)
 8005b78:	2201      	movs	r2, #1
 8005b7a:	701a      	strb	r2, [r3, #0]
    return Stat;
 8005b7c:	4b03      	ldr	r3, [pc, #12]	@ (8005b8c <USER_initialize+0x20>)
 8005b7e:	781b      	ldrb	r3, [r3, #0]
 8005b80:	b2db      	uxtb	r3, r3
  /* USER CODE END INIT */
}
 8005b82:	4618      	mov	r0, r3
 8005b84:	370c      	adds	r7, #12
 8005b86:	46bd      	mov	sp, r7
 8005b88:	bc80      	pop	{r7}
 8005b8a:	4770      	bx	lr
 8005b8c:	20000009 	.word	0x20000009

08005b90 <USER_status>:
  * @retval DSTATUS: Operation status
  */
DSTATUS USER_status (
	BYTE pdrv       /* Physical drive number to identify the drive */
)
{
 8005b90:	b480      	push	{r7}
 8005b92:	b083      	sub	sp, #12
 8005b94:	af00      	add	r7, sp, #0
 8005b96:	4603      	mov	r3, r0
 8005b98:	71fb      	strb	r3, [r7, #7]
  /* USER CODE BEGIN STATUS */
    Stat = STA_NOINIT;
 8005b9a:	4b05      	ldr	r3, [pc, #20]	@ (8005bb0 <USER_status+0x20>)
 8005b9c:	2201      	movs	r2, #1
 8005b9e:	701a      	strb	r2, [r3, #0]
    return Stat;
 8005ba0:	4b03      	ldr	r3, [pc, #12]	@ (8005bb0 <USER_status+0x20>)
 8005ba2:	781b      	ldrb	r3, [r3, #0]
 8005ba4:	b2db      	uxtb	r3, r3
  /* USER CODE END STATUS */
}
 8005ba6:	4618      	mov	r0, r3
 8005ba8:	370c      	adds	r7, #12
 8005baa:	46bd      	mov	sp, r7
 8005bac:	bc80      	pop	{r7}
 8005bae:	4770      	bx	lr
 8005bb0:	20000009 	.word	0x20000009

08005bb4 <USER_read>:
	BYTE pdrv,      /* Physical drive nmuber to identify the drive */
	BYTE *buff,     /* Data buffer to store read data */
	DWORD sector,   /* Sector address in LBA */
	UINT count      /* Number of sectors to read */
)
{
 8005bb4:	b480      	push	{r7}
 8005bb6:	b085      	sub	sp, #20
 8005bb8:	af00      	add	r7, sp, #0
 8005bba:	60b9      	str	r1, [r7, #8]
 8005bbc:	607a      	str	r2, [r7, #4]
 8005bbe:	603b      	str	r3, [r7, #0]
 8005bc0:	4603      	mov	r3, r0
 8005bc2:	73fb      	strb	r3, [r7, #15]
  /* USER CODE BEGIN READ */
    return RES_OK;
 8005bc4:	2300      	movs	r3, #0
  /* USER CODE END READ */
}
 8005bc6:	4618      	mov	r0, r3
 8005bc8:	3714      	adds	r7, #20
 8005bca:	46bd      	mov	sp, r7
 8005bcc:	bc80      	pop	{r7}
 8005bce:	4770      	bx	lr

08005bd0 <USER_write>:
	BYTE pdrv,          /* Physical drive nmuber to identify the drive */
	const BYTE *buff,   /* Data to be written */
	DWORD sector,       /* Sector address in LBA */
	UINT count          /* Number of sectors to write */
)
{
 8005bd0:	b480      	push	{r7}
 8005bd2:	b085      	sub	sp, #20
 8005bd4:	af00      	add	r7, sp, #0
 8005bd6:	60b9      	str	r1, [r7, #8]
 8005bd8:	607a      	str	r2, [r7, #4]
 8005bda:	603b      	str	r3, [r7, #0]
 8005bdc:	4603      	mov	r3, r0
 8005bde:	73fb      	strb	r3, [r7, #15]
  /* USER CODE BEGIN WRITE */
  /* USER CODE HERE */
    return RES_OK;
 8005be0:	2300      	movs	r3, #0
  /* USER CODE END WRITE */
}
 8005be2:	4618      	mov	r0, r3
 8005be4:	3714      	adds	r7, #20
 8005be6:	46bd      	mov	sp, r7
 8005be8:	bc80      	pop	{r7}
 8005bea:	4770      	bx	lr

08005bec <USER_ioctl>:
DRESULT USER_ioctl (
	BYTE pdrv,      /* Physical drive nmuber (0..) */
	BYTE cmd,       /* Control code */
	void *buff      /* Buffer to send/receive control data */
)
{
 8005bec:	b480      	push	{r7}
 8005bee:	b085      	sub	sp, #20
 8005bf0:	af00      	add	r7, sp, #0
 8005bf2:	4603      	mov	r3, r0
 8005bf4:	603a      	str	r2, [r7, #0]
 8005bf6:	71fb      	strb	r3, [r7, #7]
 8005bf8:	460b      	mov	r3, r1
 8005bfa:	71bb      	strb	r3, [r7, #6]
  /* USER CODE BEGIN IOCTL */
    DRESULT res = RES_ERROR;
 8005bfc:	2301      	movs	r3, #1
 8005bfe:	73fb      	strb	r3, [r7, #15]
    return res;
 8005c00:	7bfb      	ldrb	r3, [r7, #15]
  /* USER CODE END IOCTL */
}
 8005c02:	4618      	mov	r0, r3
 8005c04:	3714      	adds	r7, #20
 8005c06:	46bd      	mov	sp, r7
 8005c08:	bc80      	pop	{r7}
 8005c0a:	4770      	bx	lr

08005c0c <FATFS_LinkDriverEx>:
  * @param  lun : only used for USB Key Disk to add multi-lun management
            else the paramter must be equal to 0
  * @retval Returns 0 in case of success, otherwise 1.
  */
uint8_t FATFS_LinkDriverEx(Diskio_drvTypeDef *drv, char *path, uint8_t lun)
{
 8005c0c:	b480      	push	{r7}
 8005c0e:	b087      	sub	sp, #28
 8005c10:	af00      	add	r7, sp, #0
 8005c12:	60f8      	str	r0, [r7, #12]
 8005c14:	60b9      	str	r1, [r7, #8]
 8005c16:	4613      	mov	r3, r2
 8005c18:	71fb      	strb	r3, [r7, #7]
  uint8_t ret = 1;
 8005c1a:	2301      	movs	r3, #1
 8005c1c:	75fb      	strb	r3, [r7, #23]
  uint8_t DiskNum = 0;
 8005c1e:	2300      	movs	r3, #0
 8005c20:	75bb      	strb	r3, [r7, #22]
  
  if(disk.nbr <= _VOLUMES)
 8005c22:	4b1e      	ldr	r3, [pc, #120]	@ (8005c9c <FATFS_LinkDriverEx+0x90>)
 8005c24:	7a5b      	ldrb	r3, [r3, #9]
 8005c26:	b2db      	uxtb	r3, r3
 8005c28:	2b01      	cmp	r3, #1
 8005c2a:	d831      	bhi.n	8005c90 <FATFS_LinkDriverEx+0x84>
  {
    disk.is_initialized[disk.nbr] = 0;
 8005c2c:	4b1b      	ldr	r3, [pc, #108]	@ (8005c9c <FATFS_LinkDriverEx+0x90>)
 8005c2e:	7a5b      	ldrb	r3, [r3, #9]
 8005c30:	b2db      	uxtb	r3, r3
 8005c32:	461a      	mov	r2, r3
 8005c34:	4b19      	ldr	r3, [pc, #100]	@ (8005c9c <FATFS_LinkDriverEx+0x90>)
 8005c36:	2100      	movs	r1, #0
 8005c38:	5499      	strb	r1, [r3, r2]
    disk.drv[disk.nbr] = drv;  
 8005c3a:	4b18      	ldr	r3, [pc, #96]	@ (8005c9c <FATFS_LinkDriverEx+0x90>)
 8005c3c:	7a5b      	ldrb	r3, [r3, #9]
 8005c3e:	b2db      	uxtb	r3, r3
 8005c40:	4a16      	ldr	r2, [pc, #88]	@ (8005c9c <FATFS_LinkDriverEx+0x90>)
 8005c42:	009b      	lsls	r3, r3, #2
 8005c44:	4413      	add	r3, r2
 8005c46:	68fa      	ldr	r2, [r7, #12]
 8005c48:	605a      	str	r2, [r3, #4]
    disk.lun[disk.nbr] = lun;  
 8005c4a:	4b14      	ldr	r3, [pc, #80]	@ (8005c9c <FATFS_LinkDriverEx+0x90>)
 8005c4c:	7a5b      	ldrb	r3, [r3, #9]
 8005c4e:	b2db      	uxtb	r3, r3
 8005c50:	461a      	mov	r2, r3
 8005c52:	4b12      	ldr	r3, [pc, #72]	@ (8005c9c <FATFS_LinkDriverEx+0x90>)
 8005c54:	4413      	add	r3, r2
 8005c56:	79fa      	ldrb	r2, [r7, #7]
 8005c58:	721a      	strb	r2, [r3, #8]
    DiskNum = disk.nbr++;
 8005c5a:	4b10      	ldr	r3, [pc, #64]	@ (8005c9c <FATFS_LinkDriverEx+0x90>)
 8005c5c:	7a5b      	ldrb	r3, [r3, #9]
 8005c5e:	b2db      	uxtb	r3, r3
 8005c60:	1c5a      	adds	r2, r3, #1
 8005c62:	b2d1      	uxtb	r1, r2
 8005c64:	4a0d      	ldr	r2, [pc, #52]	@ (8005c9c <FATFS_LinkDriverEx+0x90>)
 8005c66:	7251      	strb	r1, [r2, #9]
 8005c68:	75bb      	strb	r3, [r7, #22]
    path[0] = DiskNum + '0';
 8005c6a:	7dbb      	ldrb	r3, [r7, #22]
 8005c6c:	3330      	adds	r3, #48	@ 0x30
 8005c6e:	b2da      	uxtb	r2, r3
 8005c70:	68bb      	ldr	r3, [r7, #8]
 8005c72:	701a      	strb	r2, [r3, #0]
    path[1] = ':';
 8005c74:	68bb      	ldr	r3, [r7, #8]
 8005c76:	3301      	adds	r3, #1
 8005c78:	223a      	movs	r2, #58	@ 0x3a
 8005c7a:	701a      	strb	r2, [r3, #0]
    path[2] = '/';
 8005c7c:	68bb      	ldr	r3, [r7, #8]
 8005c7e:	3302      	adds	r3, #2
 8005c80:	222f      	movs	r2, #47	@ 0x2f
 8005c82:	701a      	strb	r2, [r3, #0]
    path[3] = 0;
 8005c84:	68bb      	ldr	r3, [r7, #8]
 8005c86:	3303      	adds	r3, #3
 8005c88:	2200      	movs	r2, #0
 8005c8a:	701a      	strb	r2, [r3, #0]
    ret = 0;
 8005c8c:	2300      	movs	r3, #0
 8005c8e:	75fb      	strb	r3, [r7, #23]
  }
  
  return ret;
 8005c90:	7dfb      	ldrb	r3, [r7, #23]
}
 8005c92:	4618      	mov	r0, r3
 8005c94:	371c      	adds	r7, #28
 8005c96:	46bd      	mov	sp, r7
 8005c98:	bc80      	pop	{r7}
 8005c9a:	4770      	bx	lr
 8005c9c:	20000478 	.word	0x20000478

08005ca0 <FATFS_LinkDriver>:
  * @param  drv: pointer to the disk IO Driver structure
  * @param  path: pointer to the logical drive path 
  * @retval Returns 0 in case of success, otherwise 1.
  */
uint8_t FATFS_LinkDriver(Diskio_drvTypeDef *drv, char *path)
{
 8005ca0:	b580      	push	{r7, lr}
 8005ca2:	b082      	sub	sp, #8
 8005ca4:	af00      	add	r7, sp, #0
 8005ca6:	6078      	str	r0, [r7, #4]
 8005ca8:	6039      	str	r1, [r7, #0]
  return FATFS_LinkDriverEx(drv, path, 0);
 8005caa:	2200      	movs	r2, #0
 8005cac:	6839      	ldr	r1, [r7, #0]
 8005cae:	6878      	ldr	r0, [r7, #4]
 8005cb0:	f7ff ffac 	bl	8005c0c <FATFS_LinkDriverEx>
 8005cb4:	4603      	mov	r3, r0
}
 8005cb6:	4618      	mov	r0, r3
 8005cb8:	3708      	adds	r7, #8
 8005cba:	46bd      	mov	sp, r7
 8005cbc:	bd80      	pop	{r7, pc}
	...

08005cc0 <malloc>:
 8005cc0:	4b02      	ldr	r3, [pc, #8]	@ (8005ccc <malloc+0xc>)
 8005cc2:	4601      	mov	r1, r0
 8005cc4:	6818      	ldr	r0, [r3, #0]
 8005cc6:	f000 b825 	b.w	8005d14 <_malloc_r>
 8005cca:	bf00      	nop
 8005ccc:	20000198 	.word	0x20000198

08005cd0 <sbrk_aligned>:
 8005cd0:	b570      	push	{r4, r5, r6, lr}
 8005cd2:	4e0f      	ldr	r6, [pc, #60]	@ (8005d10 <sbrk_aligned+0x40>)
 8005cd4:	460c      	mov	r4, r1
 8005cd6:	6831      	ldr	r1, [r6, #0]
 8005cd8:	4605      	mov	r5, r0
 8005cda:	b911      	cbnz	r1, 8005ce2 <sbrk_aligned+0x12>
 8005cdc:	f000 ff4c 	bl	8006b78 <_sbrk_r>
 8005ce0:	6030      	str	r0, [r6, #0]
 8005ce2:	4621      	mov	r1, r4
 8005ce4:	4628      	mov	r0, r5
 8005ce6:	f000 ff47 	bl	8006b78 <_sbrk_r>
 8005cea:	1c43      	adds	r3, r0, #1
 8005cec:	d103      	bne.n	8005cf6 <sbrk_aligned+0x26>
 8005cee:	f04f 34ff 	mov.w	r4, #4294967295
 8005cf2:	4620      	mov	r0, r4
 8005cf4:	bd70      	pop	{r4, r5, r6, pc}
 8005cf6:	1cc4      	adds	r4, r0, #3
 8005cf8:	f024 0403 	bic.w	r4, r4, #3
 8005cfc:	42a0      	cmp	r0, r4
 8005cfe:	d0f8      	beq.n	8005cf2 <sbrk_aligned+0x22>
 8005d00:	1a21      	subs	r1, r4, r0
 8005d02:	4628      	mov	r0, r5
 8005d04:	f000 ff38 	bl	8006b78 <_sbrk_r>
 8005d08:	3001      	adds	r0, #1
 8005d0a:	d1f2      	bne.n	8005cf2 <sbrk_aligned+0x22>
 8005d0c:	e7ef      	b.n	8005cee <sbrk_aligned+0x1e>
 8005d0e:	bf00      	nop
 8005d10:	20000484 	.word	0x20000484

08005d14 <_malloc_r>:
 8005d14:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005d18:	1ccd      	adds	r5, r1, #3
 8005d1a:	f025 0503 	bic.w	r5, r5, #3
 8005d1e:	3508      	adds	r5, #8
 8005d20:	2d0c      	cmp	r5, #12
 8005d22:	bf38      	it	cc
 8005d24:	250c      	movcc	r5, #12
 8005d26:	2d00      	cmp	r5, #0
 8005d28:	4606      	mov	r6, r0
 8005d2a:	db01      	blt.n	8005d30 <_malloc_r+0x1c>
 8005d2c:	42a9      	cmp	r1, r5
 8005d2e:	d904      	bls.n	8005d3a <_malloc_r+0x26>
 8005d30:	230c      	movs	r3, #12
 8005d32:	6033      	str	r3, [r6, #0]
 8005d34:	2000      	movs	r0, #0
 8005d36:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005d3a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8005e10 <_malloc_r+0xfc>
 8005d3e:	f000 f869 	bl	8005e14 <__malloc_lock>
 8005d42:	f8d8 3000 	ldr.w	r3, [r8]
 8005d46:	461c      	mov	r4, r3
 8005d48:	bb44      	cbnz	r4, 8005d9c <_malloc_r+0x88>
 8005d4a:	4629      	mov	r1, r5
 8005d4c:	4630      	mov	r0, r6
 8005d4e:	f7ff ffbf 	bl	8005cd0 <sbrk_aligned>
 8005d52:	1c43      	adds	r3, r0, #1
 8005d54:	4604      	mov	r4, r0
 8005d56:	d158      	bne.n	8005e0a <_malloc_r+0xf6>
 8005d58:	f8d8 4000 	ldr.w	r4, [r8]
 8005d5c:	4627      	mov	r7, r4
 8005d5e:	2f00      	cmp	r7, #0
 8005d60:	d143      	bne.n	8005dea <_malloc_r+0xd6>
 8005d62:	2c00      	cmp	r4, #0
 8005d64:	d04b      	beq.n	8005dfe <_malloc_r+0xea>
 8005d66:	6823      	ldr	r3, [r4, #0]
 8005d68:	4639      	mov	r1, r7
 8005d6a:	4630      	mov	r0, r6
 8005d6c:	eb04 0903 	add.w	r9, r4, r3
 8005d70:	f000 ff02 	bl	8006b78 <_sbrk_r>
 8005d74:	4581      	cmp	r9, r0
 8005d76:	d142      	bne.n	8005dfe <_malloc_r+0xea>
 8005d78:	6821      	ldr	r1, [r4, #0]
 8005d7a:	4630      	mov	r0, r6
 8005d7c:	1a6d      	subs	r5, r5, r1
 8005d7e:	4629      	mov	r1, r5
 8005d80:	f7ff ffa6 	bl	8005cd0 <sbrk_aligned>
 8005d84:	3001      	adds	r0, #1
 8005d86:	d03a      	beq.n	8005dfe <_malloc_r+0xea>
 8005d88:	6823      	ldr	r3, [r4, #0]
 8005d8a:	442b      	add	r3, r5
 8005d8c:	6023      	str	r3, [r4, #0]
 8005d8e:	f8d8 3000 	ldr.w	r3, [r8]
 8005d92:	685a      	ldr	r2, [r3, #4]
 8005d94:	bb62      	cbnz	r2, 8005df0 <_malloc_r+0xdc>
 8005d96:	f8c8 7000 	str.w	r7, [r8]
 8005d9a:	e00f      	b.n	8005dbc <_malloc_r+0xa8>
 8005d9c:	6822      	ldr	r2, [r4, #0]
 8005d9e:	1b52      	subs	r2, r2, r5
 8005da0:	d420      	bmi.n	8005de4 <_malloc_r+0xd0>
 8005da2:	2a0b      	cmp	r2, #11
 8005da4:	d917      	bls.n	8005dd6 <_malloc_r+0xc2>
 8005da6:	1961      	adds	r1, r4, r5
 8005da8:	42a3      	cmp	r3, r4
 8005daa:	6025      	str	r5, [r4, #0]
 8005dac:	bf18      	it	ne
 8005dae:	6059      	strne	r1, [r3, #4]
 8005db0:	6863      	ldr	r3, [r4, #4]
 8005db2:	bf08      	it	eq
 8005db4:	f8c8 1000 	streq.w	r1, [r8]
 8005db8:	5162      	str	r2, [r4, r5]
 8005dba:	604b      	str	r3, [r1, #4]
 8005dbc:	4630      	mov	r0, r6
 8005dbe:	f000 f82f 	bl	8005e20 <__malloc_unlock>
 8005dc2:	f104 000b 	add.w	r0, r4, #11
 8005dc6:	1d23      	adds	r3, r4, #4
 8005dc8:	f020 0007 	bic.w	r0, r0, #7
 8005dcc:	1ac2      	subs	r2, r0, r3
 8005dce:	bf1c      	itt	ne
 8005dd0:	1a1b      	subne	r3, r3, r0
 8005dd2:	50a3      	strne	r3, [r4, r2]
 8005dd4:	e7af      	b.n	8005d36 <_malloc_r+0x22>
 8005dd6:	6862      	ldr	r2, [r4, #4]
 8005dd8:	42a3      	cmp	r3, r4
 8005dda:	bf0c      	ite	eq
 8005ddc:	f8c8 2000 	streq.w	r2, [r8]
 8005de0:	605a      	strne	r2, [r3, #4]
 8005de2:	e7eb      	b.n	8005dbc <_malloc_r+0xa8>
 8005de4:	4623      	mov	r3, r4
 8005de6:	6864      	ldr	r4, [r4, #4]
 8005de8:	e7ae      	b.n	8005d48 <_malloc_r+0x34>
 8005dea:	463c      	mov	r4, r7
 8005dec:	687f      	ldr	r7, [r7, #4]
 8005dee:	e7b6      	b.n	8005d5e <_malloc_r+0x4a>
 8005df0:	461a      	mov	r2, r3
 8005df2:	685b      	ldr	r3, [r3, #4]
 8005df4:	42a3      	cmp	r3, r4
 8005df6:	d1fb      	bne.n	8005df0 <_malloc_r+0xdc>
 8005df8:	2300      	movs	r3, #0
 8005dfa:	6053      	str	r3, [r2, #4]
 8005dfc:	e7de      	b.n	8005dbc <_malloc_r+0xa8>
 8005dfe:	230c      	movs	r3, #12
 8005e00:	4630      	mov	r0, r6
 8005e02:	6033      	str	r3, [r6, #0]
 8005e04:	f000 f80c 	bl	8005e20 <__malloc_unlock>
 8005e08:	e794      	b.n	8005d34 <_malloc_r+0x20>
 8005e0a:	6005      	str	r5, [r0, #0]
 8005e0c:	e7d6      	b.n	8005dbc <_malloc_r+0xa8>
 8005e0e:	bf00      	nop
 8005e10:	20000488 	.word	0x20000488

08005e14 <__malloc_lock>:
 8005e14:	4801      	ldr	r0, [pc, #4]	@ (8005e1c <__malloc_lock+0x8>)
 8005e16:	f000 befc 	b.w	8006c12 <__retarget_lock_acquire_recursive>
 8005e1a:	bf00      	nop
 8005e1c:	200005cc 	.word	0x200005cc

08005e20 <__malloc_unlock>:
 8005e20:	4801      	ldr	r0, [pc, #4]	@ (8005e28 <__malloc_unlock+0x8>)
 8005e22:	f000 bef7 	b.w	8006c14 <__retarget_lock_release_recursive>
 8005e26:	bf00      	nop
 8005e28:	200005cc 	.word	0x200005cc

08005e2c <__cvt>:
 8005e2c:	2b00      	cmp	r3, #0
 8005e2e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005e32:	461d      	mov	r5, r3
 8005e34:	bfbb      	ittet	lt
 8005e36:	f103 4300 	addlt.w	r3, r3, #2147483648	@ 0x80000000
 8005e3a:	461d      	movlt	r5, r3
 8005e3c:	2300      	movge	r3, #0
 8005e3e:	232d      	movlt	r3, #45	@ 0x2d
 8005e40:	b088      	sub	sp, #32
 8005e42:	4614      	mov	r4, r2
 8005e44:	bfb8      	it	lt
 8005e46:	4614      	movlt	r4, r2
 8005e48:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8005e4a:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 8005e4c:	7013      	strb	r3, [r2, #0]
 8005e4e:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8005e50:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 8005e54:	f023 0820 	bic.w	r8, r3, #32
 8005e58:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8005e5c:	d005      	beq.n	8005e6a <__cvt+0x3e>
 8005e5e:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8005e62:	d100      	bne.n	8005e66 <__cvt+0x3a>
 8005e64:	3601      	adds	r6, #1
 8005e66:	2302      	movs	r3, #2
 8005e68:	e000      	b.n	8005e6c <__cvt+0x40>
 8005e6a:	2303      	movs	r3, #3
 8005e6c:	aa07      	add	r2, sp, #28
 8005e6e:	9204      	str	r2, [sp, #16]
 8005e70:	aa06      	add	r2, sp, #24
 8005e72:	e9cd a202 	strd	sl, r2, [sp, #8]
 8005e76:	e9cd 3600 	strd	r3, r6, [sp]
 8005e7a:	4622      	mov	r2, r4
 8005e7c:	462b      	mov	r3, r5
 8005e7e:	f000 ff8f 	bl	8006da0 <_dtoa_r>
 8005e82:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8005e86:	4607      	mov	r7, r0
 8005e88:	d119      	bne.n	8005ebe <__cvt+0x92>
 8005e8a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8005e8c:	07db      	lsls	r3, r3, #31
 8005e8e:	d50e      	bpl.n	8005eae <__cvt+0x82>
 8005e90:	eb00 0906 	add.w	r9, r0, r6
 8005e94:	2200      	movs	r2, #0
 8005e96:	2300      	movs	r3, #0
 8005e98:	4620      	mov	r0, r4
 8005e9a:	4629      	mov	r1, r5
 8005e9c:	f7fa fd84 	bl	80009a8 <__aeabi_dcmpeq>
 8005ea0:	b108      	cbz	r0, 8005ea6 <__cvt+0x7a>
 8005ea2:	f8cd 901c 	str.w	r9, [sp, #28]
 8005ea6:	2230      	movs	r2, #48	@ 0x30
 8005ea8:	9b07      	ldr	r3, [sp, #28]
 8005eaa:	454b      	cmp	r3, r9
 8005eac:	d31e      	bcc.n	8005eec <__cvt+0xc0>
 8005eae:	4638      	mov	r0, r7
 8005eb0:	9b07      	ldr	r3, [sp, #28]
 8005eb2:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8005eb4:	1bdb      	subs	r3, r3, r7
 8005eb6:	6013      	str	r3, [r2, #0]
 8005eb8:	b008      	add	sp, #32
 8005eba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005ebe:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8005ec2:	eb00 0906 	add.w	r9, r0, r6
 8005ec6:	d1e5      	bne.n	8005e94 <__cvt+0x68>
 8005ec8:	7803      	ldrb	r3, [r0, #0]
 8005eca:	2b30      	cmp	r3, #48	@ 0x30
 8005ecc:	d10a      	bne.n	8005ee4 <__cvt+0xb8>
 8005ece:	2200      	movs	r2, #0
 8005ed0:	2300      	movs	r3, #0
 8005ed2:	4620      	mov	r0, r4
 8005ed4:	4629      	mov	r1, r5
 8005ed6:	f7fa fd67 	bl	80009a8 <__aeabi_dcmpeq>
 8005eda:	b918      	cbnz	r0, 8005ee4 <__cvt+0xb8>
 8005edc:	f1c6 0601 	rsb	r6, r6, #1
 8005ee0:	f8ca 6000 	str.w	r6, [sl]
 8005ee4:	f8da 3000 	ldr.w	r3, [sl]
 8005ee8:	4499      	add	r9, r3
 8005eea:	e7d3      	b.n	8005e94 <__cvt+0x68>
 8005eec:	1c59      	adds	r1, r3, #1
 8005eee:	9107      	str	r1, [sp, #28]
 8005ef0:	701a      	strb	r2, [r3, #0]
 8005ef2:	e7d9      	b.n	8005ea8 <__cvt+0x7c>

08005ef4 <__exponent>:
 8005ef4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005ef6:	2900      	cmp	r1, #0
 8005ef8:	bfb6      	itet	lt
 8005efa:	232d      	movlt	r3, #45	@ 0x2d
 8005efc:	232b      	movge	r3, #43	@ 0x2b
 8005efe:	4249      	neglt	r1, r1
 8005f00:	2909      	cmp	r1, #9
 8005f02:	7002      	strb	r2, [r0, #0]
 8005f04:	7043      	strb	r3, [r0, #1]
 8005f06:	dd29      	ble.n	8005f5c <__exponent+0x68>
 8005f08:	f10d 0307 	add.w	r3, sp, #7
 8005f0c:	461d      	mov	r5, r3
 8005f0e:	270a      	movs	r7, #10
 8005f10:	fbb1 f6f7 	udiv	r6, r1, r7
 8005f14:	461a      	mov	r2, r3
 8005f16:	fb07 1416 	mls	r4, r7, r6, r1
 8005f1a:	3430      	adds	r4, #48	@ 0x30
 8005f1c:	f802 4c01 	strb.w	r4, [r2, #-1]
 8005f20:	460c      	mov	r4, r1
 8005f22:	2c63      	cmp	r4, #99	@ 0x63
 8005f24:	4631      	mov	r1, r6
 8005f26:	f103 33ff 	add.w	r3, r3, #4294967295
 8005f2a:	dcf1      	bgt.n	8005f10 <__exponent+0x1c>
 8005f2c:	3130      	adds	r1, #48	@ 0x30
 8005f2e:	1e94      	subs	r4, r2, #2
 8005f30:	f803 1c01 	strb.w	r1, [r3, #-1]
 8005f34:	4623      	mov	r3, r4
 8005f36:	1c41      	adds	r1, r0, #1
 8005f38:	42ab      	cmp	r3, r5
 8005f3a:	d30a      	bcc.n	8005f52 <__exponent+0x5e>
 8005f3c:	f10d 0309 	add.w	r3, sp, #9
 8005f40:	1a9b      	subs	r3, r3, r2
 8005f42:	42ac      	cmp	r4, r5
 8005f44:	bf88      	it	hi
 8005f46:	2300      	movhi	r3, #0
 8005f48:	3302      	adds	r3, #2
 8005f4a:	4403      	add	r3, r0
 8005f4c:	1a18      	subs	r0, r3, r0
 8005f4e:	b003      	add	sp, #12
 8005f50:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005f52:	f813 6b01 	ldrb.w	r6, [r3], #1
 8005f56:	f801 6f01 	strb.w	r6, [r1, #1]!
 8005f5a:	e7ed      	b.n	8005f38 <__exponent+0x44>
 8005f5c:	2330      	movs	r3, #48	@ 0x30
 8005f5e:	3130      	adds	r1, #48	@ 0x30
 8005f60:	7083      	strb	r3, [r0, #2]
 8005f62:	70c1      	strb	r1, [r0, #3]
 8005f64:	1d03      	adds	r3, r0, #4
 8005f66:	e7f1      	b.n	8005f4c <__exponent+0x58>

08005f68 <_printf_float>:
 8005f68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005f6c:	b091      	sub	sp, #68	@ 0x44
 8005f6e:	460c      	mov	r4, r1
 8005f70:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
 8005f74:	4616      	mov	r6, r2
 8005f76:	461f      	mov	r7, r3
 8005f78:	4605      	mov	r5, r0
 8005f7a:	f000 fdc5 	bl	8006b08 <_localeconv_r>
 8005f7e:	6803      	ldr	r3, [r0, #0]
 8005f80:	4618      	mov	r0, r3
 8005f82:	9308      	str	r3, [sp, #32]
 8005f84:	f7fa f8e4 	bl	8000150 <strlen>
 8005f88:	2300      	movs	r3, #0
 8005f8a:	930e      	str	r3, [sp, #56]	@ 0x38
 8005f8c:	f8d8 3000 	ldr.w	r3, [r8]
 8005f90:	9009      	str	r0, [sp, #36]	@ 0x24
 8005f92:	3307      	adds	r3, #7
 8005f94:	f023 0307 	bic.w	r3, r3, #7
 8005f98:	f103 0208 	add.w	r2, r3, #8
 8005f9c:	f894 a018 	ldrb.w	sl, [r4, #24]
 8005fa0:	f8d4 b000 	ldr.w	fp, [r4]
 8005fa4:	f8c8 2000 	str.w	r2, [r8]
 8005fa8:	e9d3 8900 	ldrd	r8, r9, [r3]
 8005fac:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8005fb0:	930b      	str	r3, [sp, #44]	@ 0x2c
 8005fb2:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 8005fb6:	f04f 32ff 	mov.w	r2, #4294967295
 8005fba:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8005fbe:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8005fc2:	4b9c      	ldr	r3, [pc, #624]	@ (8006234 <_printf_float+0x2cc>)
 8005fc4:	f7fa fd22 	bl	8000a0c <__aeabi_dcmpun>
 8005fc8:	bb70      	cbnz	r0, 8006028 <_printf_float+0xc0>
 8005fca:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8005fce:	f04f 32ff 	mov.w	r2, #4294967295
 8005fd2:	4b98      	ldr	r3, [pc, #608]	@ (8006234 <_printf_float+0x2cc>)
 8005fd4:	f7fa fcfc 	bl	80009d0 <__aeabi_dcmple>
 8005fd8:	bb30      	cbnz	r0, 8006028 <_printf_float+0xc0>
 8005fda:	2200      	movs	r2, #0
 8005fdc:	2300      	movs	r3, #0
 8005fde:	4640      	mov	r0, r8
 8005fe0:	4649      	mov	r1, r9
 8005fe2:	f7fa fceb 	bl	80009bc <__aeabi_dcmplt>
 8005fe6:	b110      	cbz	r0, 8005fee <_printf_float+0x86>
 8005fe8:	232d      	movs	r3, #45	@ 0x2d
 8005fea:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8005fee:	4a92      	ldr	r2, [pc, #584]	@ (8006238 <_printf_float+0x2d0>)
 8005ff0:	4b92      	ldr	r3, [pc, #584]	@ (800623c <_printf_float+0x2d4>)
 8005ff2:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8005ff6:	bf94      	ite	ls
 8005ff8:	4690      	movls	r8, r2
 8005ffa:	4698      	movhi	r8, r3
 8005ffc:	2303      	movs	r3, #3
 8005ffe:	f04f 0900 	mov.w	r9, #0
 8006002:	6123      	str	r3, [r4, #16]
 8006004:	f02b 0304 	bic.w	r3, fp, #4
 8006008:	6023      	str	r3, [r4, #0]
 800600a:	4633      	mov	r3, r6
 800600c:	4621      	mov	r1, r4
 800600e:	4628      	mov	r0, r5
 8006010:	9700      	str	r7, [sp, #0]
 8006012:	aa0f      	add	r2, sp, #60	@ 0x3c
 8006014:	f000 f9d4 	bl	80063c0 <_printf_common>
 8006018:	3001      	adds	r0, #1
 800601a:	f040 8090 	bne.w	800613e <_printf_float+0x1d6>
 800601e:	f04f 30ff 	mov.w	r0, #4294967295
 8006022:	b011      	add	sp, #68	@ 0x44
 8006024:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006028:	4642      	mov	r2, r8
 800602a:	464b      	mov	r3, r9
 800602c:	4640      	mov	r0, r8
 800602e:	4649      	mov	r1, r9
 8006030:	f7fa fcec 	bl	8000a0c <__aeabi_dcmpun>
 8006034:	b148      	cbz	r0, 800604a <_printf_float+0xe2>
 8006036:	464b      	mov	r3, r9
 8006038:	2b00      	cmp	r3, #0
 800603a:	bfb8      	it	lt
 800603c:	232d      	movlt	r3, #45	@ 0x2d
 800603e:	4a80      	ldr	r2, [pc, #512]	@ (8006240 <_printf_float+0x2d8>)
 8006040:	bfb8      	it	lt
 8006042:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8006046:	4b7f      	ldr	r3, [pc, #508]	@ (8006244 <_printf_float+0x2dc>)
 8006048:	e7d3      	b.n	8005ff2 <_printf_float+0x8a>
 800604a:	6863      	ldr	r3, [r4, #4]
 800604c:	f00a 01df 	and.w	r1, sl, #223	@ 0xdf
 8006050:	1c5a      	adds	r2, r3, #1
 8006052:	d13f      	bne.n	80060d4 <_printf_float+0x16c>
 8006054:	2306      	movs	r3, #6
 8006056:	6063      	str	r3, [r4, #4]
 8006058:	2200      	movs	r2, #0
 800605a:	f44b 6380 	orr.w	r3, fp, #1024	@ 0x400
 800605e:	6023      	str	r3, [r4, #0]
 8006060:	9206      	str	r2, [sp, #24]
 8006062:	aa0e      	add	r2, sp, #56	@ 0x38
 8006064:	e9cd a204 	strd	sl, r2, [sp, #16]
 8006068:	aa0d      	add	r2, sp, #52	@ 0x34
 800606a:	9203      	str	r2, [sp, #12]
 800606c:	f10d 0233 	add.w	r2, sp, #51	@ 0x33
 8006070:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8006074:	6863      	ldr	r3, [r4, #4]
 8006076:	4642      	mov	r2, r8
 8006078:	9300      	str	r3, [sp, #0]
 800607a:	4628      	mov	r0, r5
 800607c:	464b      	mov	r3, r9
 800607e:	910a      	str	r1, [sp, #40]	@ 0x28
 8006080:	f7ff fed4 	bl	8005e2c <__cvt>
 8006084:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8006086:	4680      	mov	r8, r0
 8006088:	2947      	cmp	r1, #71	@ 0x47
 800608a:	990d      	ldr	r1, [sp, #52]	@ 0x34
 800608c:	d128      	bne.n	80060e0 <_printf_float+0x178>
 800608e:	1cc8      	adds	r0, r1, #3
 8006090:	db02      	blt.n	8006098 <_printf_float+0x130>
 8006092:	6863      	ldr	r3, [r4, #4]
 8006094:	4299      	cmp	r1, r3
 8006096:	dd40      	ble.n	800611a <_printf_float+0x1b2>
 8006098:	f1aa 0a02 	sub.w	sl, sl, #2
 800609c:	fa5f fa8a 	uxtb.w	sl, sl
 80060a0:	4652      	mov	r2, sl
 80060a2:	3901      	subs	r1, #1
 80060a4:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 80060a8:	910d      	str	r1, [sp, #52]	@ 0x34
 80060aa:	f7ff ff23 	bl	8005ef4 <__exponent>
 80060ae:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80060b0:	4681      	mov	r9, r0
 80060b2:	1813      	adds	r3, r2, r0
 80060b4:	2a01      	cmp	r2, #1
 80060b6:	6123      	str	r3, [r4, #16]
 80060b8:	dc02      	bgt.n	80060c0 <_printf_float+0x158>
 80060ba:	6822      	ldr	r2, [r4, #0]
 80060bc:	07d2      	lsls	r2, r2, #31
 80060be:	d501      	bpl.n	80060c4 <_printf_float+0x15c>
 80060c0:	3301      	adds	r3, #1
 80060c2:	6123      	str	r3, [r4, #16]
 80060c4:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 80060c8:	2b00      	cmp	r3, #0
 80060ca:	d09e      	beq.n	800600a <_printf_float+0xa2>
 80060cc:	232d      	movs	r3, #45	@ 0x2d
 80060ce:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80060d2:	e79a      	b.n	800600a <_printf_float+0xa2>
 80060d4:	2947      	cmp	r1, #71	@ 0x47
 80060d6:	d1bf      	bne.n	8006058 <_printf_float+0xf0>
 80060d8:	2b00      	cmp	r3, #0
 80060da:	d1bd      	bne.n	8006058 <_printf_float+0xf0>
 80060dc:	2301      	movs	r3, #1
 80060de:	e7ba      	b.n	8006056 <_printf_float+0xee>
 80060e0:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 80060e4:	d9dc      	bls.n	80060a0 <_printf_float+0x138>
 80060e6:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 80060ea:	d118      	bne.n	800611e <_printf_float+0x1b6>
 80060ec:	2900      	cmp	r1, #0
 80060ee:	6863      	ldr	r3, [r4, #4]
 80060f0:	dd0b      	ble.n	800610a <_printf_float+0x1a2>
 80060f2:	6121      	str	r1, [r4, #16]
 80060f4:	b913      	cbnz	r3, 80060fc <_printf_float+0x194>
 80060f6:	6822      	ldr	r2, [r4, #0]
 80060f8:	07d0      	lsls	r0, r2, #31
 80060fa:	d502      	bpl.n	8006102 <_printf_float+0x19a>
 80060fc:	3301      	adds	r3, #1
 80060fe:	440b      	add	r3, r1
 8006100:	6123      	str	r3, [r4, #16]
 8006102:	f04f 0900 	mov.w	r9, #0
 8006106:	65a1      	str	r1, [r4, #88]	@ 0x58
 8006108:	e7dc      	b.n	80060c4 <_printf_float+0x15c>
 800610a:	b913      	cbnz	r3, 8006112 <_printf_float+0x1aa>
 800610c:	6822      	ldr	r2, [r4, #0]
 800610e:	07d2      	lsls	r2, r2, #31
 8006110:	d501      	bpl.n	8006116 <_printf_float+0x1ae>
 8006112:	3302      	adds	r3, #2
 8006114:	e7f4      	b.n	8006100 <_printf_float+0x198>
 8006116:	2301      	movs	r3, #1
 8006118:	e7f2      	b.n	8006100 <_printf_float+0x198>
 800611a:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 800611e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006120:	4299      	cmp	r1, r3
 8006122:	db05      	blt.n	8006130 <_printf_float+0x1c8>
 8006124:	6823      	ldr	r3, [r4, #0]
 8006126:	6121      	str	r1, [r4, #16]
 8006128:	07d8      	lsls	r0, r3, #31
 800612a:	d5ea      	bpl.n	8006102 <_printf_float+0x19a>
 800612c:	1c4b      	adds	r3, r1, #1
 800612e:	e7e7      	b.n	8006100 <_printf_float+0x198>
 8006130:	2900      	cmp	r1, #0
 8006132:	bfcc      	ite	gt
 8006134:	2201      	movgt	r2, #1
 8006136:	f1c1 0202 	rsble	r2, r1, #2
 800613a:	4413      	add	r3, r2
 800613c:	e7e0      	b.n	8006100 <_printf_float+0x198>
 800613e:	6823      	ldr	r3, [r4, #0]
 8006140:	055a      	lsls	r2, r3, #21
 8006142:	d407      	bmi.n	8006154 <_printf_float+0x1ec>
 8006144:	6923      	ldr	r3, [r4, #16]
 8006146:	4642      	mov	r2, r8
 8006148:	4631      	mov	r1, r6
 800614a:	4628      	mov	r0, r5
 800614c:	47b8      	blx	r7
 800614e:	3001      	adds	r0, #1
 8006150:	d12b      	bne.n	80061aa <_printf_float+0x242>
 8006152:	e764      	b.n	800601e <_printf_float+0xb6>
 8006154:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8006158:	f240 80dc 	bls.w	8006314 <_printf_float+0x3ac>
 800615c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8006160:	2200      	movs	r2, #0
 8006162:	2300      	movs	r3, #0
 8006164:	f7fa fc20 	bl	80009a8 <__aeabi_dcmpeq>
 8006168:	2800      	cmp	r0, #0
 800616a:	d033      	beq.n	80061d4 <_printf_float+0x26c>
 800616c:	2301      	movs	r3, #1
 800616e:	4631      	mov	r1, r6
 8006170:	4628      	mov	r0, r5
 8006172:	4a35      	ldr	r2, [pc, #212]	@ (8006248 <_printf_float+0x2e0>)
 8006174:	47b8      	blx	r7
 8006176:	3001      	adds	r0, #1
 8006178:	f43f af51 	beq.w	800601e <_printf_float+0xb6>
 800617c:	e9dd 380d 	ldrd	r3, r8, [sp, #52]	@ 0x34
 8006180:	4543      	cmp	r3, r8
 8006182:	db02      	blt.n	800618a <_printf_float+0x222>
 8006184:	6823      	ldr	r3, [r4, #0]
 8006186:	07d8      	lsls	r0, r3, #31
 8006188:	d50f      	bpl.n	80061aa <_printf_float+0x242>
 800618a:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800618e:	4631      	mov	r1, r6
 8006190:	4628      	mov	r0, r5
 8006192:	47b8      	blx	r7
 8006194:	3001      	adds	r0, #1
 8006196:	f43f af42 	beq.w	800601e <_printf_float+0xb6>
 800619a:	f04f 0900 	mov.w	r9, #0
 800619e:	f108 38ff 	add.w	r8, r8, #4294967295
 80061a2:	f104 0a1a 	add.w	sl, r4, #26
 80061a6:	45c8      	cmp	r8, r9
 80061a8:	dc09      	bgt.n	80061be <_printf_float+0x256>
 80061aa:	6823      	ldr	r3, [r4, #0]
 80061ac:	079b      	lsls	r3, r3, #30
 80061ae:	f100 8102 	bmi.w	80063b6 <_printf_float+0x44e>
 80061b2:	68e0      	ldr	r0, [r4, #12]
 80061b4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80061b6:	4298      	cmp	r0, r3
 80061b8:	bfb8      	it	lt
 80061ba:	4618      	movlt	r0, r3
 80061bc:	e731      	b.n	8006022 <_printf_float+0xba>
 80061be:	2301      	movs	r3, #1
 80061c0:	4652      	mov	r2, sl
 80061c2:	4631      	mov	r1, r6
 80061c4:	4628      	mov	r0, r5
 80061c6:	47b8      	blx	r7
 80061c8:	3001      	adds	r0, #1
 80061ca:	f43f af28 	beq.w	800601e <_printf_float+0xb6>
 80061ce:	f109 0901 	add.w	r9, r9, #1
 80061d2:	e7e8      	b.n	80061a6 <_printf_float+0x23e>
 80061d4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80061d6:	2b00      	cmp	r3, #0
 80061d8:	dc38      	bgt.n	800624c <_printf_float+0x2e4>
 80061da:	2301      	movs	r3, #1
 80061dc:	4631      	mov	r1, r6
 80061de:	4628      	mov	r0, r5
 80061e0:	4a19      	ldr	r2, [pc, #100]	@ (8006248 <_printf_float+0x2e0>)
 80061e2:	47b8      	blx	r7
 80061e4:	3001      	adds	r0, #1
 80061e6:	f43f af1a 	beq.w	800601e <_printf_float+0xb6>
 80061ea:	e9dd 390d 	ldrd	r3, r9, [sp, #52]	@ 0x34
 80061ee:	ea59 0303 	orrs.w	r3, r9, r3
 80061f2:	d102      	bne.n	80061fa <_printf_float+0x292>
 80061f4:	6823      	ldr	r3, [r4, #0]
 80061f6:	07d9      	lsls	r1, r3, #31
 80061f8:	d5d7      	bpl.n	80061aa <_printf_float+0x242>
 80061fa:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80061fe:	4631      	mov	r1, r6
 8006200:	4628      	mov	r0, r5
 8006202:	47b8      	blx	r7
 8006204:	3001      	adds	r0, #1
 8006206:	f43f af0a 	beq.w	800601e <_printf_float+0xb6>
 800620a:	f04f 0a00 	mov.w	sl, #0
 800620e:	f104 0b1a 	add.w	fp, r4, #26
 8006212:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8006214:	425b      	negs	r3, r3
 8006216:	4553      	cmp	r3, sl
 8006218:	dc01      	bgt.n	800621e <_printf_float+0x2b6>
 800621a:	464b      	mov	r3, r9
 800621c:	e793      	b.n	8006146 <_printf_float+0x1de>
 800621e:	2301      	movs	r3, #1
 8006220:	465a      	mov	r2, fp
 8006222:	4631      	mov	r1, r6
 8006224:	4628      	mov	r0, r5
 8006226:	47b8      	blx	r7
 8006228:	3001      	adds	r0, #1
 800622a:	f43f aef8 	beq.w	800601e <_printf_float+0xb6>
 800622e:	f10a 0a01 	add.w	sl, sl, #1
 8006232:	e7ee      	b.n	8006212 <_printf_float+0x2aa>
 8006234:	7fefffff 	.word	0x7fefffff
 8006238:	080089b6 	.word	0x080089b6
 800623c:	080089ba 	.word	0x080089ba
 8006240:	080089be 	.word	0x080089be
 8006244:	080089c2 	.word	0x080089c2
 8006248:	080089c6 	.word	0x080089c6
 800624c:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800624e:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8006252:	4553      	cmp	r3, sl
 8006254:	bfa8      	it	ge
 8006256:	4653      	movge	r3, sl
 8006258:	2b00      	cmp	r3, #0
 800625a:	4699      	mov	r9, r3
 800625c:	dc36      	bgt.n	80062cc <_printf_float+0x364>
 800625e:	f04f 0b00 	mov.w	fp, #0
 8006262:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8006266:	f104 021a 	add.w	r2, r4, #26
 800626a:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800626c:	930a      	str	r3, [sp, #40]	@ 0x28
 800626e:	eba3 0309 	sub.w	r3, r3, r9
 8006272:	455b      	cmp	r3, fp
 8006274:	dc31      	bgt.n	80062da <_printf_float+0x372>
 8006276:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8006278:	459a      	cmp	sl, r3
 800627a:	dc3a      	bgt.n	80062f2 <_printf_float+0x38a>
 800627c:	6823      	ldr	r3, [r4, #0]
 800627e:	07da      	lsls	r2, r3, #31
 8006280:	d437      	bmi.n	80062f2 <_printf_float+0x38a>
 8006282:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8006284:	ebaa 0903 	sub.w	r9, sl, r3
 8006288:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800628a:	ebaa 0303 	sub.w	r3, sl, r3
 800628e:	4599      	cmp	r9, r3
 8006290:	bfa8      	it	ge
 8006292:	4699      	movge	r9, r3
 8006294:	f1b9 0f00 	cmp.w	r9, #0
 8006298:	dc33      	bgt.n	8006302 <_printf_float+0x39a>
 800629a:	f04f 0800 	mov.w	r8, #0
 800629e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80062a2:	f104 0b1a 	add.w	fp, r4, #26
 80062a6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80062a8:	ebaa 0303 	sub.w	r3, sl, r3
 80062ac:	eba3 0309 	sub.w	r3, r3, r9
 80062b0:	4543      	cmp	r3, r8
 80062b2:	f77f af7a 	ble.w	80061aa <_printf_float+0x242>
 80062b6:	2301      	movs	r3, #1
 80062b8:	465a      	mov	r2, fp
 80062ba:	4631      	mov	r1, r6
 80062bc:	4628      	mov	r0, r5
 80062be:	47b8      	blx	r7
 80062c0:	3001      	adds	r0, #1
 80062c2:	f43f aeac 	beq.w	800601e <_printf_float+0xb6>
 80062c6:	f108 0801 	add.w	r8, r8, #1
 80062ca:	e7ec      	b.n	80062a6 <_printf_float+0x33e>
 80062cc:	4642      	mov	r2, r8
 80062ce:	4631      	mov	r1, r6
 80062d0:	4628      	mov	r0, r5
 80062d2:	47b8      	blx	r7
 80062d4:	3001      	adds	r0, #1
 80062d6:	d1c2      	bne.n	800625e <_printf_float+0x2f6>
 80062d8:	e6a1      	b.n	800601e <_printf_float+0xb6>
 80062da:	2301      	movs	r3, #1
 80062dc:	4631      	mov	r1, r6
 80062de:	4628      	mov	r0, r5
 80062e0:	920a      	str	r2, [sp, #40]	@ 0x28
 80062e2:	47b8      	blx	r7
 80062e4:	3001      	adds	r0, #1
 80062e6:	f43f ae9a 	beq.w	800601e <_printf_float+0xb6>
 80062ea:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80062ec:	f10b 0b01 	add.w	fp, fp, #1
 80062f0:	e7bb      	b.n	800626a <_printf_float+0x302>
 80062f2:	4631      	mov	r1, r6
 80062f4:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80062f8:	4628      	mov	r0, r5
 80062fa:	47b8      	blx	r7
 80062fc:	3001      	adds	r0, #1
 80062fe:	d1c0      	bne.n	8006282 <_printf_float+0x31a>
 8006300:	e68d      	b.n	800601e <_printf_float+0xb6>
 8006302:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8006304:	464b      	mov	r3, r9
 8006306:	4631      	mov	r1, r6
 8006308:	4628      	mov	r0, r5
 800630a:	4442      	add	r2, r8
 800630c:	47b8      	blx	r7
 800630e:	3001      	adds	r0, #1
 8006310:	d1c3      	bne.n	800629a <_printf_float+0x332>
 8006312:	e684      	b.n	800601e <_printf_float+0xb6>
 8006314:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8006318:	f1ba 0f01 	cmp.w	sl, #1
 800631c:	dc01      	bgt.n	8006322 <_printf_float+0x3ba>
 800631e:	07db      	lsls	r3, r3, #31
 8006320:	d536      	bpl.n	8006390 <_printf_float+0x428>
 8006322:	2301      	movs	r3, #1
 8006324:	4642      	mov	r2, r8
 8006326:	4631      	mov	r1, r6
 8006328:	4628      	mov	r0, r5
 800632a:	47b8      	blx	r7
 800632c:	3001      	adds	r0, #1
 800632e:	f43f ae76 	beq.w	800601e <_printf_float+0xb6>
 8006332:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8006336:	4631      	mov	r1, r6
 8006338:	4628      	mov	r0, r5
 800633a:	47b8      	blx	r7
 800633c:	3001      	adds	r0, #1
 800633e:	f43f ae6e 	beq.w	800601e <_printf_float+0xb6>
 8006342:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8006346:	2200      	movs	r2, #0
 8006348:	2300      	movs	r3, #0
 800634a:	f10a 3aff 	add.w	sl, sl, #4294967295
 800634e:	f7fa fb2b 	bl	80009a8 <__aeabi_dcmpeq>
 8006352:	b9c0      	cbnz	r0, 8006386 <_printf_float+0x41e>
 8006354:	4653      	mov	r3, sl
 8006356:	f108 0201 	add.w	r2, r8, #1
 800635a:	4631      	mov	r1, r6
 800635c:	4628      	mov	r0, r5
 800635e:	47b8      	blx	r7
 8006360:	3001      	adds	r0, #1
 8006362:	d10c      	bne.n	800637e <_printf_float+0x416>
 8006364:	e65b      	b.n	800601e <_printf_float+0xb6>
 8006366:	2301      	movs	r3, #1
 8006368:	465a      	mov	r2, fp
 800636a:	4631      	mov	r1, r6
 800636c:	4628      	mov	r0, r5
 800636e:	47b8      	blx	r7
 8006370:	3001      	adds	r0, #1
 8006372:	f43f ae54 	beq.w	800601e <_printf_float+0xb6>
 8006376:	f108 0801 	add.w	r8, r8, #1
 800637a:	45d0      	cmp	r8, sl
 800637c:	dbf3      	blt.n	8006366 <_printf_float+0x3fe>
 800637e:	464b      	mov	r3, r9
 8006380:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8006384:	e6e0      	b.n	8006148 <_printf_float+0x1e0>
 8006386:	f04f 0800 	mov.w	r8, #0
 800638a:	f104 0b1a 	add.w	fp, r4, #26
 800638e:	e7f4      	b.n	800637a <_printf_float+0x412>
 8006390:	2301      	movs	r3, #1
 8006392:	4642      	mov	r2, r8
 8006394:	e7e1      	b.n	800635a <_printf_float+0x3f2>
 8006396:	2301      	movs	r3, #1
 8006398:	464a      	mov	r2, r9
 800639a:	4631      	mov	r1, r6
 800639c:	4628      	mov	r0, r5
 800639e:	47b8      	blx	r7
 80063a0:	3001      	adds	r0, #1
 80063a2:	f43f ae3c 	beq.w	800601e <_printf_float+0xb6>
 80063a6:	f108 0801 	add.w	r8, r8, #1
 80063aa:	68e3      	ldr	r3, [r4, #12]
 80063ac:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80063ae:	1a5b      	subs	r3, r3, r1
 80063b0:	4543      	cmp	r3, r8
 80063b2:	dcf0      	bgt.n	8006396 <_printf_float+0x42e>
 80063b4:	e6fd      	b.n	80061b2 <_printf_float+0x24a>
 80063b6:	f04f 0800 	mov.w	r8, #0
 80063ba:	f104 0919 	add.w	r9, r4, #25
 80063be:	e7f4      	b.n	80063aa <_printf_float+0x442>

080063c0 <_printf_common>:
 80063c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80063c4:	4616      	mov	r6, r2
 80063c6:	4698      	mov	r8, r3
 80063c8:	688a      	ldr	r2, [r1, #8]
 80063ca:	690b      	ldr	r3, [r1, #16]
 80063cc:	4607      	mov	r7, r0
 80063ce:	4293      	cmp	r3, r2
 80063d0:	bfb8      	it	lt
 80063d2:	4613      	movlt	r3, r2
 80063d4:	6033      	str	r3, [r6, #0]
 80063d6:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80063da:	460c      	mov	r4, r1
 80063dc:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80063e0:	b10a      	cbz	r2, 80063e6 <_printf_common+0x26>
 80063e2:	3301      	adds	r3, #1
 80063e4:	6033      	str	r3, [r6, #0]
 80063e6:	6823      	ldr	r3, [r4, #0]
 80063e8:	0699      	lsls	r1, r3, #26
 80063ea:	bf42      	ittt	mi
 80063ec:	6833      	ldrmi	r3, [r6, #0]
 80063ee:	3302      	addmi	r3, #2
 80063f0:	6033      	strmi	r3, [r6, #0]
 80063f2:	6825      	ldr	r5, [r4, #0]
 80063f4:	f015 0506 	ands.w	r5, r5, #6
 80063f8:	d106      	bne.n	8006408 <_printf_common+0x48>
 80063fa:	f104 0a19 	add.w	sl, r4, #25
 80063fe:	68e3      	ldr	r3, [r4, #12]
 8006400:	6832      	ldr	r2, [r6, #0]
 8006402:	1a9b      	subs	r3, r3, r2
 8006404:	42ab      	cmp	r3, r5
 8006406:	dc2b      	bgt.n	8006460 <_printf_common+0xa0>
 8006408:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 800640c:	6822      	ldr	r2, [r4, #0]
 800640e:	3b00      	subs	r3, #0
 8006410:	bf18      	it	ne
 8006412:	2301      	movne	r3, #1
 8006414:	0692      	lsls	r2, r2, #26
 8006416:	d430      	bmi.n	800647a <_printf_common+0xba>
 8006418:	4641      	mov	r1, r8
 800641a:	4638      	mov	r0, r7
 800641c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8006420:	47c8      	blx	r9
 8006422:	3001      	adds	r0, #1
 8006424:	d023      	beq.n	800646e <_printf_common+0xae>
 8006426:	6823      	ldr	r3, [r4, #0]
 8006428:	6922      	ldr	r2, [r4, #16]
 800642a:	f003 0306 	and.w	r3, r3, #6
 800642e:	2b04      	cmp	r3, #4
 8006430:	bf14      	ite	ne
 8006432:	2500      	movne	r5, #0
 8006434:	6833      	ldreq	r3, [r6, #0]
 8006436:	f04f 0600 	mov.w	r6, #0
 800643a:	bf08      	it	eq
 800643c:	68e5      	ldreq	r5, [r4, #12]
 800643e:	f104 041a 	add.w	r4, r4, #26
 8006442:	bf08      	it	eq
 8006444:	1aed      	subeq	r5, r5, r3
 8006446:	f854 3c12 	ldr.w	r3, [r4, #-18]
 800644a:	bf08      	it	eq
 800644c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8006450:	4293      	cmp	r3, r2
 8006452:	bfc4      	itt	gt
 8006454:	1a9b      	subgt	r3, r3, r2
 8006456:	18ed      	addgt	r5, r5, r3
 8006458:	42b5      	cmp	r5, r6
 800645a:	d11a      	bne.n	8006492 <_printf_common+0xd2>
 800645c:	2000      	movs	r0, #0
 800645e:	e008      	b.n	8006472 <_printf_common+0xb2>
 8006460:	2301      	movs	r3, #1
 8006462:	4652      	mov	r2, sl
 8006464:	4641      	mov	r1, r8
 8006466:	4638      	mov	r0, r7
 8006468:	47c8      	blx	r9
 800646a:	3001      	adds	r0, #1
 800646c:	d103      	bne.n	8006476 <_printf_common+0xb6>
 800646e:	f04f 30ff 	mov.w	r0, #4294967295
 8006472:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006476:	3501      	adds	r5, #1
 8006478:	e7c1      	b.n	80063fe <_printf_common+0x3e>
 800647a:	2030      	movs	r0, #48	@ 0x30
 800647c:	18e1      	adds	r1, r4, r3
 800647e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8006482:	1c5a      	adds	r2, r3, #1
 8006484:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8006488:	4422      	add	r2, r4
 800648a:	3302      	adds	r3, #2
 800648c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8006490:	e7c2      	b.n	8006418 <_printf_common+0x58>
 8006492:	2301      	movs	r3, #1
 8006494:	4622      	mov	r2, r4
 8006496:	4641      	mov	r1, r8
 8006498:	4638      	mov	r0, r7
 800649a:	47c8      	blx	r9
 800649c:	3001      	adds	r0, #1
 800649e:	d0e6      	beq.n	800646e <_printf_common+0xae>
 80064a0:	3601      	adds	r6, #1
 80064a2:	e7d9      	b.n	8006458 <_printf_common+0x98>

080064a4 <_printf_i>:
 80064a4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80064a8:	7e0f      	ldrb	r7, [r1, #24]
 80064aa:	4691      	mov	r9, r2
 80064ac:	2f78      	cmp	r7, #120	@ 0x78
 80064ae:	4680      	mov	r8, r0
 80064b0:	460c      	mov	r4, r1
 80064b2:	469a      	mov	sl, r3
 80064b4:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80064b6:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80064ba:	d807      	bhi.n	80064cc <_printf_i+0x28>
 80064bc:	2f62      	cmp	r7, #98	@ 0x62
 80064be:	d80a      	bhi.n	80064d6 <_printf_i+0x32>
 80064c0:	2f00      	cmp	r7, #0
 80064c2:	f000 80d3 	beq.w	800666c <_printf_i+0x1c8>
 80064c6:	2f58      	cmp	r7, #88	@ 0x58
 80064c8:	f000 80ba 	beq.w	8006640 <_printf_i+0x19c>
 80064cc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80064d0:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80064d4:	e03a      	b.n	800654c <_printf_i+0xa8>
 80064d6:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80064da:	2b15      	cmp	r3, #21
 80064dc:	d8f6      	bhi.n	80064cc <_printf_i+0x28>
 80064de:	a101      	add	r1, pc, #4	@ (adr r1, 80064e4 <_printf_i+0x40>)
 80064e0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80064e4:	0800653d 	.word	0x0800653d
 80064e8:	08006551 	.word	0x08006551
 80064ec:	080064cd 	.word	0x080064cd
 80064f0:	080064cd 	.word	0x080064cd
 80064f4:	080064cd 	.word	0x080064cd
 80064f8:	080064cd 	.word	0x080064cd
 80064fc:	08006551 	.word	0x08006551
 8006500:	080064cd 	.word	0x080064cd
 8006504:	080064cd 	.word	0x080064cd
 8006508:	080064cd 	.word	0x080064cd
 800650c:	080064cd 	.word	0x080064cd
 8006510:	08006653 	.word	0x08006653
 8006514:	0800657b 	.word	0x0800657b
 8006518:	0800660d 	.word	0x0800660d
 800651c:	080064cd 	.word	0x080064cd
 8006520:	080064cd 	.word	0x080064cd
 8006524:	08006675 	.word	0x08006675
 8006528:	080064cd 	.word	0x080064cd
 800652c:	0800657b 	.word	0x0800657b
 8006530:	080064cd 	.word	0x080064cd
 8006534:	080064cd 	.word	0x080064cd
 8006538:	08006615 	.word	0x08006615
 800653c:	6833      	ldr	r3, [r6, #0]
 800653e:	1d1a      	adds	r2, r3, #4
 8006540:	681b      	ldr	r3, [r3, #0]
 8006542:	6032      	str	r2, [r6, #0]
 8006544:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8006548:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800654c:	2301      	movs	r3, #1
 800654e:	e09e      	b.n	800668e <_printf_i+0x1ea>
 8006550:	6833      	ldr	r3, [r6, #0]
 8006552:	6820      	ldr	r0, [r4, #0]
 8006554:	1d19      	adds	r1, r3, #4
 8006556:	6031      	str	r1, [r6, #0]
 8006558:	0606      	lsls	r6, r0, #24
 800655a:	d501      	bpl.n	8006560 <_printf_i+0xbc>
 800655c:	681d      	ldr	r5, [r3, #0]
 800655e:	e003      	b.n	8006568 <_printf_i+0xc4>
 8006560:	0645      	lsls	r5, r0, #25
 8006562:	d5fb      	bpl.n	800655c <_printf_i+0xb8>
 8006564:	f9b3 5000 	ldrsh.w	r5, [r3]
 8006568:	2d00      	cmp	r5, #0
 800656a:	da03      	bge.n	8006574 <_printf_i+0xd0>
 800656c:	232d      	movs	r3, #45	@ 0x2d
 800656e:	426d      	negs	r5, r5
 8006570:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8006574:	230a      	movs	r3, #10
 8006576:	4859      	ldr	r0, [pc, #356]	@ (80066dc <_printf_i+0x238>)
 8006578:	e011      	b.n	800659e <_printf_i+0xfa>
 800657a:	6821      	ldr	r1, [r4, #0]
 800657c:	6833      	ldr	r3, [r6, #0]
 800657e:	0608      	lsls	r0, r1, #24
 8006580:	f853 5b04 	ldr.w	r5, [r3], #4
 8006584:	d402      	bmi.n	800658c <_printf_i+0xe8>
 8006586:	0649      	lsls	r1, r1, #25
 8006588:	bf48      	it	mi
 800658a:	b2ad      	uxthmi	r5, r5
 800658c:	2f6f      	cmp	r7, #111	@ 0x6f
 800658e:	6033      	str	r3, [r6, #0]
 8006590:	bf14      	ite	ne
 8006592:	230a      	movne	r3, #10
 8006594:	2308      	moveq	r3, #8
 8006596:	4851      	ldr	r0, [pc, #324]	@ (80066dc <_printf_i+0x238>)
 8006598:	2100      	movs	r1, #0
 800659a:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800659e:	6866      	ldr	r6, [r4, #4]
 80065a0:	2e00      	cmp	r6, #0
 80065a2:	bfa8      	it	ge
 80065a4:	6821      	ldrge	r1, [r4, #0]
 80065a6:	60a6      	str	r6, [r4, #8]
 80065a8:	bfa4      	itt	ge
 80065aa:	f021 0104 	bicge.w	r1, r1, #4
 80065ae:	6021      	strge	r1, [r4, #0]
 80065b0:	b90d      	cbnz	r5, 80065b6 <_printf_i+0x112>
 80065b2:	2e00      	cmp	r6, #0
 80065b4:	d04b      	beq.n	800664e <_printf_i+0x1aa>
 80065b6:	4616      	mov	r6, r2
 80065b8:	fbb5 f1f3 	udiv	r1, r5, r3
 80065bc:	fb03 5711 	mls	r7, r3, r1, r5
 80065c0:	5dc7      	ldrb	r7, [r0, r7]
 80065c2:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80065c6:	462f      	mov	r7, r5
 80065c8:	42bb      	cmp	r3, r7
 80065ca:	460d      	mov	r5, r1
 80065cc:	d9f4      	bls.n	80065b8 <_printf_i+0x114>
 80065ce:	2b08      	cmp	r3, #8
 80065d0:	d10b      	bne.n	80065ea <_printf_i+0x146>
 80065d2:	6823      	ldr	r3, [r4, #0]
 80065d4:	07df      	lsls	r7, r3, #31
 80065d6:	d508      	bpl.n	80065ea <_printf_i+0x146>
 80065d8:	6923      	ldr	r3, [r4, #16]
 80065da:	6861      	ldr	r1, [r4, #4]
 80065dc:	4299      	cmp	r1, r3
 80065de:	bfde      	ittt	le
 80065e0:	2330      	movle	r3, #48	@ 0x30
 80065e2:	f806 3c01 	strble.w	r3, [r6, #-1]
 80065e6:	f106 36ff 	addle.w	r6, r6, #4294967295
 80065ea:	1b92      	subs	r2, r2, r6
 80065ec:	6122      	str	r2, [r4, #16]
 80065ee:	464b      	mov	r3, r9
 80065f0:	4621      	mov	r1, r4
 80065f2:	4640      	mov	r0, r8
 80065f4:	f8cd a000 	str.w	sl, [sp]
 80065f8:	aa03      	add	r2, sp, #12
 80065fa:	f7ff fee1 	bl	80063c0 <_printf_common>
 80065fe:	3001      	adds	r0, #1
 8006600:	d14a      	bne.n	8006698 <_printf_i+0x1f4>
 8006602:	f04f 30ff 	mov.w	r0, #4294967295
 8006606:	b004      	add	sp, #16
 8006608:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800660c:	6823      	ldr	r3, [r4, #0]
 800660e:	f043 0320 	orr.w	r3, r3, #32
 8006612:	6023      	str	r3, [r4, #0]
 8006614:	2778      	movs	r7, #120	@ 0x78
 8006616:	4832      	ldr	r0, [pc, #200]	@ (80066e0 <_printf_i+0x23c>)
 8006618:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800661c:	6823      	ldr	r3, [r4, #0]
 800661e:	6831      	ldr	r1, [r6, #0]
 8006620:	061f      	lsls	r7, r3, #24
 8006622:	f851 5b04 	ldr.w	r5, [r1], #4
 8006626:	d402      	bmi.n	800662e <_printf_i+0x18a>
 8006628:	065f      	lsls	r7, r3, #25
 800662a:	bf48      	it	mi
 800662c:	b2ad      	uxthmi	r5, r5
 800662e:	6031      	str	r1, [r6, #0]
 8006630:	07d9      	lsls	r1, r3, #31
 8006632:	bf44      	itt	mi
 8006634:	f043 0320 	orrmi.w	r3, r3, #32
 8006638:	6023      	strmi	r3, [r4, #0]
 800663a:	b11d      	cbz	r5, 8006644 <_printf_i+0x1a0>
 800663c:	2310      	movs	r3, #16
 800663e:	e7ab      	b.n	8006598 <_printf_i+0xf4>
 8006640:	4826      	ldr	r0, [pc, #152]	@ (80066dc <_printf_i+0x238>)
 8006642:	e7e9      	b.n	8006618 <_printf_i+0x174>
 8006644:	6823      	ldr	r3, [r4, #0]
 8006646:	f023 0320 	bic.w	r3, r3, #32
 800664a:	6023      	str	r3, [r4, #0]
 800664c:	e7f6      	b.n	800663c <_printf_i+0x198>
 800664e:	4616      	mov	r6, r2
 8006650:	e7bd      	b.n	80065ce <_printf_i+0x12a>
 8006652:	6833      	ldr	r3, [r6, #0]
 8006654:	6825      	ldr	r5, [r4, #0]
 8006656:	1d18      	adds	r0, r3, #4
 8006658:	6961      	ldr	r1, [r4, #20]
 800665a:	6030      	str	r0, [r6, #0]
 800665c:	062e      	lsls	r6, r5, #24
 800665e:	681b      	ldr	r3, [r3, #0]
 8006660:	d501      	bpl.n	8006666 <_printf_i+0x1c2>
 8006662:	6019      	str	r1, [r3, #0]
 8006664:	e002      	b.n	800666c <_printf_i+0x1c8>
 8006666:	0668      	lsls	r0, r5, #25
 8006668:	d5fb      	bpl.n	8006662 <_printf_i+0x1be>
 800666a:	8019      	strh	r1, [r3, #0]
 800666c:	2300      	movs	r3, #0
 800666e:	4616      	mov	r6, r2
 8006670:	6123      	str	r3, [r4, #16]
 8006672:	e7bc      	b.n	80065ee <_printf_i+0x14a>
 8006674:	6833      	ldr	r3, [r6, #0]
 8006676:	2100      	movs	r1, #0
 8006678:	1d1a      	adds	r2, r3, #4
 800667a:	6032      	str	r2, [r6, #0]
 800667c:	681e      	ldr	r6, [r3, #0]
 800667e:	6862      	ldr	r2, [r4, #4]
 8006680:	4630      	mov	r0, r6
 8006682:	f000 fac8 	bl	8006c16 <memchr>
 8006686:	b108      	cbz	r0, 800668c <_printf_i+0x1e8>
 8006688:	1b80      	subs	r0, r0, r6
 800668a:	6060      	str	r0, [r4, #4]
 800668c:	6863      	ldr	r3, [r4, #4]
 800668e:	6123      	str	r3, [r4, #16]
 8006690:	2300      	movs	r3, #0
 8006692:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8006696:	e7aa      	b.n	80065ee <_printf_i+0x14a>
 8006698:	4632      	mov	r2, r6
 800669a:	4649      	mov	r1, r9
 800669c:	4640      	mov	r0, r8
 800669e:	6923      	ldr	r3, [r4, #16]
 80066a0:	47d0      	blx	sl
 80066a2:	3001      	adds	r0, #1
 80066a4:	d0ad      	beq.n	8006602 <_printf_i+0x15e>
 80066a6:	6823      	ldr	r3, [r4, #0]
 80066a8:	079b      	lsls	r3, r3, #30
 80066aa:	d413      	bmi.n	80066d4 <_printf_i+0x230>
 80066ac:	68e0      	ldr	r0, [r4, #12]
 80066ae:	9b03      	ldr	r3, [sp, #12]
 80066b0:	4298      	cmp	r0, r3
 80066b2:	bfb8      	it	lt
 80066b4:	4618      	movlt	r0, r3
 80066b6:	e7a6      	b.n	8006606 <_printf_i+0x162>
 80066b8:	2301      	movs	r3, #1
 80066ba:	4632      	mov	r2, r6
 80066bc:	4649      	mov	r1, r9
 80066be:	4640      	mov	r0, r8
 80066c0:	47d0      	blx	sl
 80066c2:	3001      	adds	r0, #1
 80066c4:	d09d      	beq.n	8006602 <_printf_i+0x15e>
 80066c6:	3501      	adds	r5, #1
 80066c8:	68e3      	ldr	r3, [r4, #12]
 80066ca:	9903      	ldr	r1, [sp, #12]
 80066cc:	1a5b      	subs	r3, r3, r1
 80066ce:	42ab      	cmp	r3, r5
 80066d0:	dcf2      	bgt.n	80066b8 <_printf_i+0x214>
 80066d2:	e7eb      	b.n	80066ac <_printf_i+0x208>
 80066d4:	2500      	movs	r5, #0
 80066d6:	f104 0619 	add.w	r6, r4, #25
 80066da:	e7f5      	b.n	80066c8 <_printf_i+0x224>
 80066dc:	080089c8 	.word	0x080089c8
 80066e0:	080089d9 	.word	0x080089d9

080066e4 <std>:
 80066e4:	2300      	movs	r3, #0
 80066e6:	b510      	push	{r4, lr}
 80066e8:	4604      	mov	r4, r0
 80066ea:	e9c0 3300 	strd	r3, r3, [r0]
 80066ee:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80066f2:	6083      	str	r3, [r0, #8]
 80066f4:	8181      	strh	r1, [r0, #12]
 80066f6:	6643      	str	r3, [r0, #100]	@ 0x64
 80066f8:	81c2      	strh	r2, [r0, #14]
 80066fa:	6183      	str	r3, [r0, #24]
 80066fc:	4619      	mov	r1, r3
 80066fe:	2208      	movs	r2, #8
 8006700:	305c      	adds	r0, #92	@ 0x5c
 8006702:	f000 f9f9 	bl	8006af8 <memset>
 8006706:	4b0d      	ldr	r3, [pc, #52]	@ (800673c <std+0x58>)
 8006708:	6224      	str	r4, [r4, #32]
 800670a:	6263      	str	r3, [r4, #36]	@ 0x24
 800670c:	4b0c      	ldr	r3, [pc, #48]	@ (8006740 <std+0x5c>)
 800670e:	62a3      	str	r3, [r4, #40]	@ 0x28
 8006710:	4b0c      	ldr	r3, [pc, #48]	@ (8006744 <std+0x60>)
 8006712:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8006714:	4b0c      	ldr	r3, [pc, #48]	@ (8006748 <std+0x64>)
 8006716:	6323      	str	r3, [r4, #48]	@ 0x30
 8006718:	4b0c      	ldr	r3, [pc, #48]	@ (800674c <std+0x68>)
 800671a:	429c      	cmp	r4, r3
 800671c:	d006      	beq.n	800672c <std+0x48>
 800671e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8006722:	4294      	cmp	r4, r2
 8006724:	d002      	beq.n	800672c <std+0x48>
 8006726:	33d0      	adds	r3, #208	@ 0xd0
 8006728:	429c      	cmp	r4, r3
 800672a:	d105      	bne.n	8006738 <std+0x54>
 800672c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8006730:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006734:	f000 ba6c 	b.w	8006c10 <__retarget_lock_init_recursive>
 8006738:	bd10      	pop	{r4, pc}
 800673a:	bf00      	nop
 800673c:	08006949 	.word	0x08006949
 8006740:	0800696b 	.word	0x0800696b
 8006744:	080069a3 	.word	0x080069a3
 8006748:	080069c7 	.word	0x080069c7
 800674c:	2000048c 	.word	0x2000048c

08006750 <stdio_exit_handler>:
 8006750:	4a02      	ldr	r2, [pc, #8]	@ (800675c <stdio_exit_handler+0xc>)
 8006752:	4903      	ldr	r1, [pc, #12]	@ (8006760 <stdio_exit_handler+0x10>)
 8006754:	4803      	ldr	r0, [pc, #12]	@ (8006764 <stdio_exit_handler+0x14>)
 8006756:	f000 b869 	b.w	800682c <_fwalk_sglue>
 800675a:	bf00      	nop
 800675c:	20000020 	.word	0x20000020
 8006760:	0800847d 	.word	0x0800847d
 8006764:	2000019c 	.word	0x2000019c

08006768 <cleanup_stdio>:
 8006768:	6841      	ldr	r1, [r0, #4]
 800676a:	4b0c      	ldr	r3, [pc, #48]	@ (800679c <cleanup_stdio+0x34>)
 800676c:	b510      	push	{r4, lr}
 800676e:	4299      	cmp	r1, r3
 8006770:	4604      	mov	r4, r0
 8006772:	d001      	beq.n	8006778 <cleanup_stdio+0x10>
 8006774:	f001 fe82 	bl	800847c <_fflush_r>
 8006778:	68a1      	ldr	r1, [r4, #8]
 800677a:	4b09      	ldr	r3, [pc, #36]	@ (80067a0 <cleanup_stdio+0x38>)
 800677c:	4299      	cmp	r1, r3
 800677e:	d002      	beq.n	8006786 <cleanup_stdio+0x1e>
 8006780:	4620      	mov	r0, r4
 8006782:	f001 fe7b 	bl	800847c <_fflush_r>
 8006786:	68e1      	ldr	r1, [r4, #12]
 8006788:	4b06      	ldr	r3, [pc, #24]	@ (80067a4 <cleanup_stdio+0x3c>)
 800678a:	4299      	cmp	r1, r3
 800678c:	d004      	beq.n	8006798 <cleanup_stdio+0x30>
 800678e:	4620      	mov	r0, r4
 8006790:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006794:	f001 be72 	b.w	800847c <_fflush_r>
 8006798:	bd10      	pop	{r4, pc}
 800679a:	bf00      	nop
 800679c:	2000048c 	.word	0x2000048c
 80067a0:	200004f4 	.word	0x200004f4
 80067a4:	2000055c 	.word	0x2000055c

080067a8 <global_stdio_init.part.0>:
 80067a8:	b510      	push	{r4, lr}
 80067aa:	4b0b      	ldr	r3, [pc, #44]	@ (80067d8 <global_stdio_init.part.0+0x30>)
 80067ac:	4c0b      	ldr	r4, [pc, #44]	@ (80067dc <global_stdio_init.part.0+0x34>)
 80067ae:	4a0c      	ldr	r2, [pc, #48]	@ (80067e0 <global_stdio_init.part.0+0x38>)
 80067b0:	4620      	mov	r0, r4
 80067b2:	601a      	str	r2, [r3, #0]
 80067b4:	2104      	movs	r1, #4
 80067b6:	2200      	movs	r2, #0
 80067b8:	f7ff ff94 	bl	80066e4 <std>
 80067bc:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80067c0:	2201      	movs	r2, #1
 80067c2:	2109      	movs	r1, #9
 80067c4:	f7ff ff8e 	bl	80066e4 <std>
 80067c8:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80067cc:	2202      	movs	r2, #2
 80067ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80067d2:	2112      	movs	r1, #18
 80067d4:	f7ff bf86 	b.w	80066e4 <std>
 80067d8:	200005c4 	.word	0x200005c4
 80067dc:	2000048c 	.word	0x2000048c
 80067e0:	08006751 	.word	0x08006751

080067e4 <__sfp_lock_acquire>:
 80067e4:	4801      	ldr	r0, [pc, #4]	@ (80067ec <__sfp_lock_acquire+0x8>)
 80067e6:	f000 ba14 	b.w	8006c12 <__retarget_lock_acquire_recursive>
 80067ea:	bf00      	nop
 80067ec:	200005cd 	.word	0x200005cd

080067f0 <__sfp_lock_release>:
 80067f0:	4801      	ldr	r0, [pc, #4]	@ (80067f8 <__sfp_lock_release+0x8>)
 80067f2:	f000 ba0f 	b.w	8006c14 <__retarget_lock_release_recursive>
 80067f6:	bf00      	nop
 80067f8:	200005cd 	.word	0x200005cd

080067fc <__sinit>:
 80067fc:	b510      	push	{r4, lr}
 80067fe:	4604      	mov	r4, r0
 8006800:	f7ff fff0 	bl	80067e4 <__sfp_lock_acquire>
 8006804:	6a23      	ldr	r3, [r4, #32]
 8006806:	b11b      	cbz	r3, 8006810 <__sinit+0x14>
 8006808:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800680c:	f7ff bff0 	b.w	80067f0 <__sfp_lock_release>
 8006810:	4b04      	ldr	r3, [pc, #16]	@ (8006824 <__sinit+0x28>)
 8006812:	6223      	str	r3, [r4, #32]
 8006814:	4b04      	ldr	r3, [pc, #16]	@ (8006828 <__sinit+0x2c>)
 8006816:	681b      	ldr	r3, [r3, #0]
 8006818:	2b00      	cmp	r3, #0
 800681a:	d1f5      	bne.n	8006808 <__sinit+0xc>
 800681c:	f7ff ffc4 	bl	80067a8 <global_stdio_init.part.0>
 8006820:	e7f2      	b.n	8006808 <__sinit+0xc>
 8006822:	bf00      	nop
 8006824:	08006769 	.word	0x08006769
 8006828:	200005c4 	.word	0x200005c4

0800682c <_fwalk_sglue>:
 800682c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006830:	4607      	mov	r7, r0
 8006832:	4688      	mov	r8, r1
 8006834:	4614      	mov	r4, r2
 8006836:	2600      	movs	r6, #0
 8006838:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800683c:	f1b9 0901 	subs.w	r9, r9, #1
 8006840:	d505      	bpl.n	800684e <_fwalk_sglue+0x22>
 8006842:	6824      	ldr	r4, [r4, #0]
 8006844:	2c00      	cmp	r4, #0
 8006846:	d1f7      	bne.n	8006838 <_fwalk_sglue+0xc>
 8006848:	4630      	mov	r0, r6
 800684a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800684e:	89ab      	ldrh	r3, [r5, #12]
 8006850:	2b01      	cmp	r3, #1
 8006852:	d907      	bls.n	8006864 <_fwalk_sglue+0x38>
 8006854:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8006858:	3301      	adds	r3, #1
 800685a:	d003      	beq.n	8006864 <_fwalk_sglue+0x38>
 800685c:	4629      	mov	r1, r5
 800685e:	4638      	mov	r0, r7
 8006860:	47c0      	blx	r8
 8006862:	4306      	orrs	r6, r0
 8006864:	3568      	adds	r5, #104	@ 0x68
 8006866:	e7e9      	b.n	800683c <_fwalk_sglue+0x10>

08006868 <iprintf>:
 8006868:	b40f      	push	{r0, r1, r2, r3}
 800686a:	b507      	push	{r0, r1, r2, lr}
 800686c:	4906      	ldr	r1, [pc, #24]	@ (8006888 <iprintf+0x20>)
 800686e:	ab04      	add	r3, sp, #16
 8006870:	6808      	ldr	r0, [r1, #0]
 8006872:	f853 2b04 	ldr.w	r2, [r3], #4
 8006876:	6881      	ldr	r1, [r0, #8]
 8006878:	9301      	str	r3, [sp, #4]
 800687a:	f001 fc67 	bl	800814c <_vfiprintf_r>
 800687e:	b003      	add	sp, #12
 8006880:	f85d eb04 	ldr.w	lr, [sp], #4
 8006884:	b004      	add	sp, #16
 8006886:	4770      	bx	lr
 8006888:	20000198 	.word	0x20000198

0800688c <_puts_r>:
 800688c:	6a03      	ldr	r3, [r0, #32]
 800688e:	b570      	push	{r4, r5, r6, lr}
 8006890:	4605      	mov	r5, r0
 8006892:	460e      	mov	r6, r1
 8006894:	6884      	ldr	r4, [r0, #8]
 8006896:	b90b      	cbnz	r3, 800689c <_puts_r+0x10>
 8006898:	f7ff ffb0 	bl	80067fc <__sinit>
 800689c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800689e:	07db      	lsls	r3, r3, #31
 80068a0:	d405      	bmi.n	80068ae <_puts_r+0x22>
 80068a2:	89a3      	ldrh	r3, [r4, #12]
 80068a4:	0598      	lsls	r0, r3, #22
 80068a6:	d402      	bmi.n	80068ae <_puts_r+0x22>
 80068a8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80068aa:	f000 f9b2 	bl	8006c12 <__retarget_lock_acquire_recursive>
 80068ae:	89a3      	ldrh	r3, [r4, #12]
 80068b0:	0719      	lsls	r1, r3, #28
 80068b2:	d502      	bpl.n	80068ba <_puts_r+0x2e>
 80068b4:	6923      	ldr	r3, [r4, #16]
 80068b6:	2b00      	cmp	r3, #0
 80068b8:	d135      	bne.n	8006926 <_puts_r+0x9a>
 80068ba:	4621      	mov	r1, r4
 80068bc:	4628      	mov	r0, r5
 80068be:	f000 f8c5 	bl	8006a4c <__swsetup_r>
 80068c2:	b380      	cbz	r0, 8006926 <_puts_r+0x9a>
 80068c4:	f04f 35ff 	mov.w	r5, #4294967295
 80068c8:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80068ca:	07da      	lsls	r2, r3, #31
 80068cc:	d405      	bmi.n	80068da <_puts_r+0x4e>
 80068ce:	89a3      	ldrh	r3, [r4, #12]
 80068d0:	059b      	lsls	r3, r3, #22
 80068d2:	d402      	bmi.n	80068da <_puts_r+0x4e>
 80068d4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80068d6:	f000 f99d 	bl	8006c14 <__retarget_lock_release_recursive>
 80068da:	4628      	mov	r0, r5
 80068dc:	bd70      	pop	{r4, r5, r6, pc}
 80068de:	2b00      	cmp	r3, #0
 80068e0:	da04      	bge.n	80068ec <_puts_r+0x60>
 80068e2:	69a2      	ldr	r2, [r4, #24]
 80068e4:	429a      	cmp	r2, r3
 80068e6:	dc17      	bgt.n	8006918 <_puts_r+0x8c>
 80068e8:	290a      	cmp	r1, #10
 80068ea:	d015      	beq.n	8006918 <_puts_r+0x8c>
 80068ec:	6823      	ldr	r3, [r4, #0]
 80068ee:	1c5a      	adds	r2, r3, #1
 80068f0:	6022      	str	r2, [r4, #0]
 80068f2:	7019      	strb	r1, [r3, #0]
 80068f4:	68a3      	ldr	r3, [r4, #8]
 80068f6:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80068fa:	3b01      	subs	r3, #1
 80068fc:	60a3      	str	r3, [r4, #8]
 80068fe:	2900      	cmp	r1, #0
 8006900:	d1ed      	bne.n	80068de <_puts_r+0x52>
 8006902:	2b00      	cmp	r3, #0
 8006904:	da11      	bge.n	800692a <_puts_r+0x9e>
 8006906:	4622      	mov	r2, r4
 8006908:	210a      	movs	r1, #10
 800690a:	4628      	mov	r0, r5
 800690c:	f000 f85f 	bl	80069ce <__swbuf_r>
 8006910:	3001      	adds	r0, #1
 8006912:	d0d7      	beq.n	80068c4 <_puts_r+0x38>
 8006914:	250a      	movs	r5, #10
 8006916:	e7d7      	b.n	80068c8 <_puts_r+0x3c>
 8006918:	4622      	mov	r2, r4
 800691a:	4628      	mov	r0, r5
 800691c:	f000 f857 	bl	80069ce <__swbuf_r>
 8006920:	3001      	adds	r0, #1
 8006922:	d1e7      	bne.n	80068f4 <_puts_r+0x68>
 8006924:	e7ce      	b.n	80068c4 <_puts_r+0x38>
 8006926:	3e01      	subs	r6, #1
 8006928:	e7e4      	b.n	80068f4 <_puts_r+0x68>
 800692a:	6823      	ldr	r3, [r4, #0]
 800692c:	1c5a      	adds	r2, r3, #1
 800692e:	6022      	str	r2, [r4, #0]
 8006930:	220a      	movs	r2, #10
 8006932:	701a      	strb	r2, [r3, #0]
 8006934:	e7ee      	b.n	8006914 <_puts_r+0x88>
	...

08006938 <puts>:
 8006938:	4b02      	ldr	r3, [pc, #8]	@ (8006944 <puts+0xc>)
 800693a:	4601      	mov	r1, r0
 800693c:	6818      	ldr	r0, [r3, #0]
 800693e:	f7ff bfa5 	b.w	800688c <_puts_r>
 8006942:	bf00      	nop
 8006944:	20000198 	.word	0x20000198

08006948 <__sread>:
 8006948:	b510      	push	{r4, lr}
 800694a:	460c      	mov	r4, r1
 800694c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006950:	f000 f900 	bl	8006b54 <_read_r>
 8006954:	2800      	cmp	r0, #0
 8006956:	bfab      	itete	ge
 8006958:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800695a:	89a3      	ldrhlt	r3, [r4, #12]
 800695c:	181b      	addge	r3, r3, r0
 800695e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8006962:	bfac      	ite	ge
 8006964:	6563      	strge	r3, [r4, #84]	@ 0x54
 8006966:	81a3      	strhlt	r3, [r4, #12]
 8006968:	bd10      	pop	{r4, pc}

0800696a <__swrite>:
 800696a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800696e:	461f      	mov	r7, r3
 8006970:	898b      	ldrh	r3, [r1, #12]
 8006972:	4605      	mov	r5, r0
 8006974:	05db      	lsls	r3, r3, #23
 8006976:	460c      	mov	r4, r1
 8006978:	4616      	mov	r6, r2
 800697a:	d505      	bpl.n	8006988 <__swrite+0x1e>
 800697c:	2302      	movs	r3, #2
 800697e:	2200      	movs	r2, #0
 8006980:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006984:	f000 f8d4 	bl	8006b30 <_lseek_r>
 8006988:	89a3      	ldrh	r3, [r4, #12]
 800698a:	4632      	mov	r2, r6
 800698c:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8006990:	81a3      	strh	r3, [r4, #12]
 8006992:	4628      	mov	r0, r5
 8006994:	463b      	mov	r3, r7
 8006996:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800699a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800699e:	f000 b8fb 	b.w	8006b98 <_write_r>

080069a2 <__sseek>:
 80069a2:	b510      	push	{r4, lr}
 80069a4:	460c      	mov	r4, r1
 80069a6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80069aa:	f000 f8c1 	bl	8006b30 <_lseek_r>
 80069ae:	1c43      	adds	r3, r0, #1
 80069b0:	89a3      	ldrh	r3, [r4, #12]
 80069b2:	bf15      	itete	ne
 80069b4:	6560      	strne	r0, [r4, #84]	@ 0x54
 80069b6:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80069ba:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80069be:	81a3      	strheq	r3, [r4, #12]
 80069c0:	bf18      	it	ne
 80069c2:	81a3      	strhne	r3, [r4, #12]
 80069c4:	bd10      	pop	{r4, pc}

080069c6 <__sclose>:
 80069c6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80069ca:	f000 b8a1 	b.w	8006b10 <_close_r>

080069ce <__swbuf_r>:
 80069ce:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80069d0:	460e      	mov	r6, r1
 80069d2:	4614      	mov	r4, r2
 80069d4:	4605      	mov	r5, r0
 80069d6:	b118      	cbz	r0, 80069e0 <__swbuf_r+0x12>
 80069d8:	6a03      	ldr	r3, [r0, #32]
 80069da:	b90b      	cbnz	r3, 80069e0 <__swbuf_r+0x12>
 80069dc:	f7ff ff0e 	bl	80067fc <__sinit>
 80069e0:	69a3      	ldr	r3, [r4, #24]
 80069e2:	60a3      	str	r3, [r4, #8]
 80069e4:	89a3      	ldrh	r3, [r4, #12]
 80069e6:	071a      	lsls	r2, r3, #28
 80069e8:	d501      	bpl.n	80069ee <__swbuf_r+0x20>
 80069ea:	6923      	ldr	r3, [r4, #16]
 80069ec:	b943      	cbnz	r3, 8006a00 <__swbuf_r+0x32>
 80069ee:	4621      	mov	r1, r4
 80069f0:	4628      	mov	r0, r5
 80069f2:	f000 f82b 	bl	8006a4c <__swsetup_r>
 80069f6:	b118      	cbz	r0, 8006a00 <__swbuf_r+0x32>
 80069f8:	f04f 37ff 	mov.w	r7, #4294967295
 80069fc:	4638      	mov	r0, r7
 80069fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006a00:	6823      	ldr	r3, [r4, #0]
 8006a02:	6922      	ldr	r2, [r4, #16]
 8006a04:	b2f6      	uxtb	r6, r6
 8006a06:	1a98      	subs	r0, r3, r2
 8006a08:	6963      	ldr	r3, [r4, #20]
 8006a0a:	4637      	mov	r7, r6
 8006a0c:	4283      	cmp	r3, r0
 8006a0e:	dc05      	bgt.n	8006a1c <__swbuf_r+0x4e>
 8006a10:	4621      	mov	r1, r4
 8006a12:	4628      	mov	r0, r5
 8006a14:	f001 fd32 	bl	800847c <_fflush_r>
 8006a18:	2800      	cmp	r0, #0
 8006a1a:	d1ed      	bne.n	80069f8 <__swbuf_r+0x2a>
 8006a1c:	68a3      	ldr	r3, [r4, #8]
 8006a1e:	3b01      	subs	r3, #1
 8006a20:	60a3      	str	r3, [r4, #8]
 8006a22:	6823      	ldr	r3, [r4, #0]
 8006a24:	1c5a      	adds	r2, r3, #1
 8006a26:	6022      	str	r2, [r4, #0]
 8006a28:	701e      	strb	r6, [r3, #0]
 8006a2a:	6962      	ldr	r2, [r4, #20]
 8006a2c:	1c43      	adds	r3, r0, #1
 8006a2e:	429a      	cmp	r2, r3
 8006a30:	d004      	beq.n	8006a3c <__swbuf_r+0x6e>
 8006a32:	89a3      	ldrh	r3, [r4, #12]
 8006a34:	07db      	lsls	r3, r3, #31
 8006a36:	d5e1      	bpl.n	80069fc <__swbuf_r+0x2e>
 8006a38:	2e0a      	cmp	r6, #10
 8006a3a:	d1df      	bne.n	80069fc <__swbuf_r+0x2e>
 8006a3c:	4621      	mov	r1, r4
 8006a3e:	4628      	mov	r0, r5
 8006a40:	f001 fd1c 	bl	800847c <_fflush_r>
 8006a44:	2800      	cmp	r0, #0
 8006a46:	d0d9      	beq.n	80069fc <__swbuf_r+0x2e>
 8006a48:	e7d6      	b.n	80069f8 <__swbuf_r+0x2a>
	...

08006a4c <__swsetup_r>:
 8006a4c:	b538      	push	{r3, r4, r5, lr}
 8006a4e:	4b29      	ldr	r3, [pc, #164]	@ (8006af4 <__swsetup_r+0xa8>)
 8006a50:	4605      	mov	r5, r0
 8006a52:	6818      	ldr	r0, [r3, #0]
 8006a54:	460c      	mov	r4, r1
 8006a56:	b118      	cbz	r0, 8006a60 <__swsetup_r+0x14>
 8006a58:	6a03      	ldr	r3, [r0, #32]
 8006a5a:	b90b      	cbnz	r3, 8006a60 <__swsetup_r+0x14>
 8006a5c:	f7ff fece 	bl	80067fc <__sinit>
 8006a60:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006a64:	0719      	lsls	r1, r3, #28
 8006a66:	d422      	bmi.n	8006aae <__swsetup_r+0x62>
 8006a68:	06da      	lsls	r2, r3, #27
 8006a6a:	d407      	bmi.n	8006a7c <__swsetup_r+0x30>
 8006a6c:	2209      	movs	r2, #9
 8006a6e:	602a      	str	r2, [r5, #0]
 8006a70:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006a74:	f04f 30ff 	mov.w	r0, #4294967295
 8006a78:	81a3      	strh	r3, [r4, #12]
 8006a7a:	e033      	b.n	8006ae4 <__swsetup_r+0x98>
 8006a7c:	0758      	lsls	r0, r3, #29
 8006a7e:	d512      	bpl.n	8006aa6 <__swsetup_r+0x5a>
 8006a80:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8006a82:	b141      	cbz	r1, 8006a96 <__swsetup_r+0x4a>
 8006a84:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8006a88:	4299      	cmp	r1, r3
 8006a8a:	d002      	beq.n	8006a92 <__swsetup_r+0x46>
 8006a8c:	4628      	mov	r0, r5
 8006a8e:	f000 ff4f 	bl	8007930 <_free_r>
 8006a92:	2300      	movs	r3, #0
 8006a94:	6363      	str	r3, [r4, #52]	@ 0x34
 8006a96:	89a3      	ldrh	r3, [r4, #12]
 8006a98:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8006a9c:	81a3      	strh	r3, [r4, #12]
 8006a9e:	2300      	movs	r3, #0
 8006aa0:	6063      	str	r3, [r4, #4]
 8006aa2:	6923      	ldr	r3, [r4, #16]
 8006aa4:	6023      	str	r3, [r4, #0]
 8006aa6:	89a3      	ldrh	r3, [r4, #12]
 8006aa8:	f043 0308 	orr.w	r3, r3, #8
 8006aac:	81a3      	strh	r3, [r4, #12]
 8006aae:	6923      	ldr	r3, [r4, #16]
 8006ab0:	b94b      	cbnz	r3, 8006ac6 <__swsetup_r+0x7a>
 8006ab2:	89a3      	ldrh	r3, [r4, #12]
 8006ab4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8006ab8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8006abc:	d003      	beq.n	8006ac6 <__swsetup_r+0x7a>
 8006abe:	4621      	mov	r1, r4
 8006ac0:	4628      	mov	r0, r5
 8006ac2:	f001 fd3a 	bl	800853a <__smakebuf_r>
 8006ac6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006aca:	f013 0201 	ands.w	r2, r3, #1
 8006ace:	d00a      	beq.n	8006ae6 <__swsetup_r+0x9a>
 8006ad0:	2200      	movs	r2, #0
 8006ad2:	60a2      	str	r2, [r4, #8]
 8006ad4:	6962      	ldr	r2, [r4, #20]
 8006ad6:	4252      	negs	r2, r2
 8006ad8:	61a2      	str	r2, [r4, #24]
 8006ada:	6922      	ldr	r2, [r4, #16]
 8006adc:	b942      	cbnz	r2, 8006af0 <__swsetup_r+0xa4>
 8006ade:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8006ae2:	d1c5      	bne.n	8006a70 <__swsetup_r+0x24>
 8006ae4:	bd38      	pop	{r3, r4, r5, pc}
 8006ae6:	0799      	lsls	r1, r3, #30
 8006ae8:	bf58      	it	pl
 8006aea:	6962      	ldrpl	r2, [r4, #20]
 8006aec:	60a2      	str	r2, [r4, #8]
 8006aee:	e7f4      	b.n	8006ada <__swsetup_r+0x8e>
 8006af0:	2000      	movs	r0, #0
 8006af2:	e7f7      	b.n	8006ae4 <__swsetup_r+0x98>
 8006af4:	20000198 	.word	0x20000198

08006af8 <memset>:
 8006af8:	4603      	mov	r3, r0
 8006afa:	4402      	add	r2, r0
 8006afc:	4293      	cmp	r3, r2
 8006afe:	d100      	bne.n	8006b02 <memset+0xa>
 8006b00:	4770      	bx	lr
 8006b02:	f803 1b01 	strb.w	r1, [r3], #1
 8006b06:	e7f9      	b.n	8006afc <memset+0x4>

08006b08 <_localeconv_r>:
 8006b08:	4800      	ldr	r0, [pc, #0]	@ (8006b0c <_localeconv_r+0x4>)
 8006b0a:	4770      	bx	lr
 8006b0c:	2000011c 	.word	0x2000011c

08006b10 <_close_r>:
 8006b10:	b538      	push	{r3, r4, r5, lr}
 8006b12:	2300      	movs	r3, #0
 8006b14:	4d05      	ldr	r5, [pc, #20]	@ (8006b2c <_close_r+0x1c>)
 8006b16:	4604      	mov	r4, r0
 8006b18:	4608      	mov	r0, r1
 8006b1a:	602b      	str	r3, [r5, #0]
 8006b1c:	f7fb ff10 	bl	8002940 <_close>
 8006b20:	1c43      	adds	r3, r0, #1
 8006b22:	d102      	bne.n	8006b2a <_close_r+0x1a>
 8006b24:	682b      	ldr	r3, [r5, #0]
 8006b26:	b103      	cbz	r3, 8006b2a <_close_r+0x1a>
 8006b28:	6023      	str	r3, [r4, #0]
 8006b2a:	bd38      	pop	{r3, r4, r5, pc}
 8006b2c:	200005c8 	.word	0x200005c8

08006b30 <_lseek_r>:
 8006b30:	b538      	push	{r3, r4, r5, lr}
 8006b32:	4604      	mov	r4, r0
 8006b34:	4608      	mov	r0, r1
 8006b36:	4611      	mov	r1, r2
 8006b38:	2200      	movs	r2, #0
 8006b3a:	4d05      	ldr	r5, [pc, #20]	@ (8006b50 <_lseek_r+0x20>)
 8006b3c:	602a      	str	r2, [r5, #0]
 8006b3e:	461a      	mov	r2, r3
 8006b40:	f7fb ff08 	bl	8002954 <_lseek>
 8006b44:	1c43      	adds	r3, r0, #1
 8006b46:	d102      	bne.n	8006b4e <_lseek_r+0x1e>
 8006b48:	682b      	ldr	r3, [r5, #0]
 8006b4a:	b103      	cbz	r3, 8006b4e <_lseek_r+0x1e>
 8006b4c:	6023      	str	r3, [r4, #0]
 8006b4e:	bd38      	pop	{r3, r4, r5, pc}
 8006b50:	200005c8 	.word	0x200005c8

08006b54 <_read_r>:
 8006b54:	b538      	push	{r3, r4, r5, lr}
 8006b56:	4604      	mov	r4, r0
 8006b58:	4608      	mov	r0, r1
 8006b5a:	4611      	mov	r1, r2
 8006b5c:	2200      	movs	r2, #0
 8006b5e:	4d05      	ldr	r5, [pc, #20]	@ (8006b74 <_read_r+0x20>)
 8006b60:	602a      	str	r2, [r5, #0]
 8006b62:	461a      	mov	r2, r3
 8006b64:	f7fb fedc 	bl	8002920 <_read>
 8006b68:	1c43      	adds	r3, r0, #1
 8006b6a:	d102      	bne.n	8006b72 <_read_r+0x1e>
 8006b6c:	682b      	ldr	r3, [r5, #0]
 8006b6e:	b103      	cbz	r3, 8006b72 <_read_r+0x1e>
 8006b70:	6023      	str	r3, [r4, #0]
 8006b72:	bd38      	pop	{r3, r4, r5, pc}
 8006b74:	200005c8 	.word	0x200005c8

08006b78 <_sbrk_r>:
 8006b78:	b538      	push	{r3, r4, r5, lr}
 8006b7a:	2300      	movs	r3, #0
 8006b7c:	4d05      	ldr	r5, [pc, #20]	@ (8006b94 <_sbrk_r+0x1c>)
 8006b7e:	4604      	mov	r4, r0
 8006b80:	4608      	mov	r0, r1
 8006b82:	602b      	str	r3, [r5, #0]
 8006b84:	f7fb fee8 	bl	8002958 <_sbrk>
 8006b88:	1c43      	adds	r3, r0, #1
 8006b8a:	d102      	bne.n	8006b92 <_sbrk_r+0x1a>
 8006b8c:	682b      	ldr	r3, [r5, #0]
 8006b8e:	b103      	cbz	r3, 8006b92 <_sbrk_r+0x1a>
 8006b90:	6023      	str	r3, [r4, #0]
 8006b92:	bd38      	pop	{r3, r4, r5, pc}
 8006b94:	200005c8 	.word	0x200005c8

08006b98 <_write_r>:
 8006b98:	b538      	push	{r3, r4, r5, lr}
 8006b9a:	4604      	mov	r4, r0
 8006b9c:	4608      	mov	r0, r1
 8006b9e:	4611      	mov	r1, r2
 8006ba0:	2200      	movs	r2, #0
 8006ba2:	4d05      	ldr	r5, [pc, #20]	@ (8006bb8 <_write_r+0x20>)
 8006ba4:	602a      	str	r2, [r5, #0]
 8006ba6:	461a      	mov	r2, r3
 8006ba8:	f7fb face 	bl	8002148 <_write>
 8006bac:	1c43      	adds	r3, r0, #1
 8006bae:	d102      	bne.n	8006bb6 <_write_r+0x1e>
 8006bb0:	682b      	ldr	r3, [r5, #0]
 8006bb2:	b103      	cbz	r3, 8006bb6 <_write_r+0x1e>
 8006bb4:	6023      	str	r3, [r4, #0]
 8006bb6:	bd38      	pop	{r3, r4, r5, pc}
 8006bb8:	200005c8 	.word	0x200005c8

08006bbc <__errno>:
 8006bbc:	4b01      	ldr	r3, [pc, #4]	@ (8006bc4 <__errno+0x8>)
 8006bbe:	6818      	ldr	r0, [r3, #0]
 8006bc0:	4770      	bx	lr
 8006bc2:	bf00      	nop
 8006bc4:	20000198 	.word	0x20000198

08006bc8 <__libc_init_array>:
 8006bc8:	b570      	push	{r4, r5, r6, lr}
 8006bca:	2600      	movs	r6, #0
 8006bcc:	4d0c      	ldr	r5, [pc, #48]	@ (8006c00 <__libc_init_array+0x38>)
 8006bce:	4c0d      	ldr	r4, [pc, #52]	@ (8006c04 <__libc_init_array+0x3c>)
 8006bd0:	1b64      	subs	r4, r4, r5
 8006bd2:	10a4      	asrs	r4, r4, #2
 8006bd4:	42a6      	cmp	r6, r4
 8006bd6:	d109      	bne.n	8006bec <__libc_init_array+0x24>
 8006bd8:	f001 fd6e 	bl	80086b8 <_init>
 8006bdc:	2600      	movs	r6, #0
 8006bde:	4d0a      	ldr	r5, [pc, #40]	@ (8006c08 <__libc_init_array+0x40>)
 8006be0:	4c0a      	ldr	r4, [pc, #40]	@ (8006c0c <__libc_init_array+0x44>)
 8006be2:	1b64      	subs	r4, r4, r5
 8006be4:	10a4      	asrs	r4, r4, #2
 8006be6:	42a6      	cmp	r6, r4
 8006be8:	d105      	bne.n	8006bf6 <__libc_init_array+0x2e>
 8006bea:	bd70      	pop	{r4, r5, r6, pc}
 8006bec:	f855 3b04 	ldr.w	r3, [r5], #4
 8006bf0:	4798      	blx	r3
 8006bf2:	3601      	adds	r6, #1
 8006bf4:	e7ee      	b.n	8006bd4 <__libc_init_array+0xc>
 8006bf6:	f855 3b04 	ldr.w	r3, [r5], #4
 8006bfa:	4798      	blx	r3
 8006bfc:	3601      	adds	r6, #1
 8006bfe:	e7f2      	b.n	8006be6 <__libc_init_array+0x1e>
 8006c00:	08008d34 	.word	0x08008d34
 8006c04:	08008d34 	.word	0x08008d34
 8006c08:	08008d34 	.word	0x08008d34
 8006c0c:	08008d38 	.word	0x08008d38

08006c10 <__retarget_lock_init_recursive>:
 8006c10:	4770      	bx	lr

08006c12 <__retarget_lock_acquire_recursive>:
 8006c12:	4770      	bx	lr

08006c14 <__retarget_lock_release_recursive>:
 8006c14:	4770      	bx	lr

08006c16 <memchr>:
 8006c16:	4603      	mov	r3, r0
 8006c18:	b510      	push	{r4, lr}
 8006c1a:	b2c9      	uxtb	r1, r1
 8006c1c:	4402      	add	r2, r0
 8006c1e:	4293      	cmp	r3, r2
 8006c20:	4618      	mov	r0, r3
 8006c22:	d101      	bne.n	8006c28 <memchr+0x12>
 8006c24:	2000      	movs	r0, #0
 8006c26:	e003      	b.n	8006c30 <memchr+0x1a>
 8006c28:	7804      	ldrb	r4, [r0, #0]
 8006c2a:	3301      	adds	r3, #1
 8006c2c:	428c      	cmp	r4, r1
 8006c2e:	d1f6      	bne.n	8006c1e <memchr+0x8>
 8006c30:	bd10      	pop	{r4, pc}

08006c32 <memcpy>:
 8006c32:	440a      	add	r2, r1
 8006c34:	4291      	cmp	r1, r2
 8006c36:	f100 33ff 	add.w	r3, r0, #4294967295
 8006c3a:	d100      	bne.n	8006c3e <memcpy+0xc>
 8006c3c:	4770      	bx	lr
 8006c3e:	b510      	push	{r4, lr}
 8006c40:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006c44:	4291      	cmp	r1, r2
 8006c46:	f803 4f01 	strb.w	r4, [r3, #1]!
 8006c4a:	d1f9      	bne.n	8006c40 <memcpy+0xe>
 8006c4c:	bd10      	pop	{r4, pc}
	...

08006c50 <__assert_func>:
 8006c50:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8006c52:	4614      	mov	r4, r2
 8006c54:	461a      	mov	r2, r3
 8006c56:	4b09      	ldr	r3, [pc, #36]	@ (8006c7c <__assert_func+0x2c>)
 8006c58:	4605      	mov	r5, r0
 8006c5a:	681b      	ldr	r3, [r3, #0]
 8006c5c:	68d8      	ldr	r0, [r3, #12]
 8006c5e:	b954      	cbnz	r4, 8006c76 <__assert_func+0x26>
 8006c60:	4b07      	ldr	r3, [pc, #28]	@ (8006c80 <__assert_func+0x30>)
 8006c62:	461c      	mov	r4, r3
 8006c64:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8006c68:	9100      	str	r1, [sp, #0]
 8006c6a:	462b      	mov	r3, r5
 8006c6c:	4905      	ldr	r1, [pc, #20]	@ (8006c84 <__assert_func+0x34>)
 8006c6e:	f001 fc2d 	bl	80084cc <fiprintf>
 8006c72:	f001 fcc1 	bl	80085f8 <abort>
 8006c76:	4b04      	ldr	r3, [pc, #16]	@ (8006c88 <__assert_func+0x38>)
 8006c78:	e7f4      	b.n	8006c64 <__assert_func+0x14>
 8006c7a:	bf00      	nop
 8006c7c:	20000198 	.word	0x20000198
 8006c80:	08008a2f 	.word	0x08008a2f
 8006c84:	08008a01 	.word	0x08008a01
 8006c88:	080089f4 	.word	0x080089f4

08006c8c <quorem>:
 8006c8c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006c90:	6903      	ldr	r3, [r0, #16]
 8006c92:	690c      	ldr	r4, [r1, #16]
 8006c94:	4607      	mov	r7, r0
 8006c96:	42a3      	cmp	r3, r4
 8006c98:	db7e      	blt.n	8006d98 <quorem+0x10c>
 8006c9a:	3c01      	subs	r4, #1
 8006c9c:	00a3      	lsls	r3, r4, #2
 8006c9e:	f100 0514 	add.w	r5, r0, #20
 8006ca2:	f101 0814 	add.w	r8, r1, #20
 8006ca6:	9300      	str	r3, [sp, #0]
 8006ca8:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8006cac:	9301      	str	r3, [sp, #4]
 8006cae:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8006cb2:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8006cb6:	3301      	adds	r3, #1
 8006cb8:	429a      	cmp	r2, r3
 8006cba:	fbb2 f6f3 	udiv	r6, r2, r3
 8006cbe:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8006cc2:	d32e      	bcc.n	8006d22 <quorem+0x96>
 8006cc4:	f04f 0a00 	mov.w	sl, #0
 8006cc8:	46c4      	mov	ip, r8
 8006cca:	46ae      	mov	lr, r5
 8006ccc:	46d3      	mov	fp, sl
 8006cce:	f85c 3b04 	ldr.w	r3, [ip], #4
 8006cd2:	b298      	uxth	r0, r3
 8006cd4:	fb06 a000 	mla	r0, r6, r0, sl
 8006cd8:	0c1b      	lsrs	r3, r3, #16
 8006cda:	0c02      	lsrs	r2, r0, #16
 8006cdc:	fb06 2303 	mla	r3, r6, r3, r2
 8006ce0:	f8de 2000 	ldr.w	r2, [lr]
 8006ce4:	b280      	uxth	r0, r0
 8006ce6:	b292      	uxth	r2, r2
 8006ce8:	1a12      	subs	r2, r2, r0
 8006cea:	445a      	add	r2, fp
 8006cec:	f8de 0000 	ldr.w	r0, [lr]
 8006cf0:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8006cf4:	b29b      	uxth	r3, r3
 8006cf6:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8006cfa:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8006cfe:	b292      	uxth	r2, r2
 8006d00:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8006d04:	45e1      	cmp	r9, ip
 8006d06:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8006d0a:	f84e 2b04 	str.w	r2, [lr], #4
 8006d0e:	d2de      	bcs.n	8006cce <quorem+0x42>
 8006d10:	9b00      	ldr	r3, [sp, #0]
 8006d12:	58eb      	ldr	r3, [r5, r3]
 8006d14:	b92b      	cbnz	r3, 8006d22 <quorem+0x96>
 8006d16:	9b01      	ldr	r3, [sp, #4]
 8006d18:	3b04      	subs	r3, #4
 8006d1a:	429d      	cmp	r5, r3
 8006d1c:	461a      	mov	r2, r3
 8006d1e:	d32f      	bcc.n	8006d80 <quorem+0xf4>
 8006d20:	613c      	str	r4, [r7, #16]
 8006d22:	4638      	mov	r0, r7
 8006d24:	f001 f8d6 	bl	8007ed4 <__mcmp>
 8006d28:	2800      	cmp	r0, #0
 8006d2a:	db25      	blt.n	8006d78 <quorem+0xec>
 8006d2c:	4629      	mov	r1, r5
 8006d2e:	2000      	movs	r0, #0
 8006d30:	f858 2b04 	ldr.w	r2, [r8], #4
 8006d34:	f8d1 c000 	ldr.w	ip, [r1]
 8006d38:	fa1f fe82 	uxth.w	lr, r2
 8006d3c:	fa1f f38c 	uxth.w	r3, ip
 8006d40:	eba3 030e 	sub.w	r3, r3, lr
 8006d44:	4403      	add	r3, r0
 8006d46:	0c12      	lsrs	r2, r2, #16
 8006d48:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8006d4c:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8006d50:	b29b      	uxth	r3, r3
 8006d52:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8006d56:	45c1      	cmp	r9, r8
 8006d58:	ea4f 4022 	mov.w	r0, r2, asr #16
 8006d5c:	f841 3b04 	str.w	r3, [r1], #4
 8006d60:	d2e6      	bcs.n	8006d30 <quorem+0xa4>
 8006d62:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8006d66:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8006d6a:	b922      	cbnz	r2, 8006d76 <quorem+0xea>
 8006d6c:	3b04      	subs	r3, #4
 8006d6e:	429d      	cmp	r5, r3
 8006d70:	461a      	mov	r2, r3
 8006d72:	d30b      	bcc.n	8006d8c <quorem+0x100>
 8006d74:	613c      	str	r4, [r7, #16]
 8006d76:	3601      	adds	r6, #1
 8006d78:	4630      	mov	r0, r6
 8006d7a:	b003      	add	sp, #12
 8006d7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006d80:	6812      	ldr	r2, [r2, #0]
 8006d82:	3b04      	subs	r3, #4
 8006d84:	2a00      	cmp	r2, #0
 8006d86:	d1cb      	bne.n	8006d20 <quorem+0x94>
 8006d88:	3c01      	subs	r4, #1
 8006d8a:	e7c6      	b.n	8006d1a <quorem+0x8e>
 8006d8c:	6812      	ldr	r2, [r2, #0]
 8006d8e:	3b04      	subs	r3, #4
 8006d90:	2a00      	cmp	r2, #0
 8006d92:	d1ef      	bne.n	8006d74 <quorem+0xe8>
 8006d94:	3c01      	subs	r4, #1
 8006d96:	e7ea      	b.n	8006d6e <quorem+0xe2>
 8006d98:	2000      	movs	r0, #0
 8006d9a:	e7ee      	b.n	8006d7a <quorem+0xee>
 8006d9c:	0000      	movs	r0, r0
	...

08006da0 <_dtoa_r>:
 8006da0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006da4:	4614      	mov	r4, r2
 8006da6:	461d      	mov	r5, r3
 8006da8:	69c7      	ldr	r7, [r0, #28]
 8006daa:	b097      	sub	sp, #92	@ 0x5c
 8006dac:	4683      	mov	fp, r0
 8006dae:	e9cd 4502 	strd	r4, r5, [sp, #8]
 8006db2:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 8006db4:	b97f      	cbnz	r7, 8006dd6 <_dtoa_r+0x36>
 8006db6:	2010      	movs	r0, #16
 8006db8:	f7fe ff82 	bl	8005cc0 <malloc>
 8006dbc:	4602      	mov	r2, r0
 8006dbe:	f8cb 001c 	str.w	r0, [fp, #28]
 8006dc2:	b920      	cbnz	r0, 8006dce <_dtoa_r+0x2e>
 8006dc4:	21ef      	movs	r1, #239	@ 0xef
 8006dc6:	4ba8      	ldr	r3, [pc, #672]	@ (8007068 <_dtoa_r+0x2c8>)
 8006dc8:	48a8      	ldr	r0, [pc, #672]	@ (800706c <_dtoa_r+0x2cc>)
 8006dca:	f7ff ff41 	bl	8006c50 <__assert_func>
 8006dce:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8006dd2:	6007      	str	r7, [r0, #0]
 8006dd4:	60c7      	str	r7, [r0, #12]
 8006dd6:	f8db 301c 	ldr.w	r3, [fp, #28]
 8006dda:	6819      	ldr	r1, [r3, #0]
 8006ddc:	b159      	cbz	r1, 8006df6 <_dtoa_r+0x56>
 8006dde:	685a      	ldr	r2, [r3, #4]
 8006de0:	2301      	movs	r3, #1
 8006de2:	4093      	lsls	r3, r2
 8006de4:	604a      	str	r2, [r1, #4]
 8006de6:	608b      	str	r3, [r1, #8]
 8006de8:	4658      	mov	r0, fp
 8006dea:	f000 fe3b 	bl	8007a64 <_Bfree>
 8006dee:	2200      	movs	r2, #0
 8006df0:	f8db 301c 	ldr.w	r3, [fp, #28]
 8006df4:	601a      	str	r2, [r3, #0]
 8006df6:	1e2b      	subs	r3, r5, #0
 8006df8:	bfaf      	iteee	ge
 8006dfa:	2300      	movge	r3, #0
 8006dfc:	2201      	movlt	r2, #1
 8006dfe:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8006e02:	9303      	strlt	r3, [sp, #12]
 8006e04:	bfa8      	it	ge
 8006e06:	6033      	strge	r3, [r6, #0]
 8006e08:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8006e0c:	4b98      	ldr	r3, [pc, #608]	@ (8007070 <_dtoa_r+0x2d0>)
 8006e0e:	bfb8      	it	lt
 8006e10:	6032      	strlt	r2, [r6, #0]
 8006e12:	ea33 0308 	bics.w	r3, r3, r8
 8006e16:	d112      	bne.n	8006e3e <_dtoa_r+0x9e>
 8006e18:	f242 730f 	movw	r3, #9999	@ 0x270f
 8006e1c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8006e1e:	6013      	str	r3, [r2, #0]
 8006e20:	f3c8 0313 	ubfx	r3, r8, #0, #20
 8006e24:	4323      	orrs	r3, r4
 8006e26:	f000 8550 	beq.w	80078ca <_dtoa_r+0xb2a>
 8006e2a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8006e2c:	f8df a244 	ldr.w	sl, [pc, #580]	@ 8007074 <_dtoa_r+0x2d4>
 8006e30:	2b00      	cmp	r3, #0
 8006e32:	f000 8552 	beq.w	80078da <_dtoa_r+0xb3a>
 8006e36:	f10a 0303 	add.w	r3, sl, #3
 8006e3a:	f000 bd4c 	b.w	80078d6 <_dtoa_r+0xb36>
 8006e3e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8006e42:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 8006e46:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8006e4a:	2200      	movs	r2, #0
 8006e4c:	2300      	movs	r3, #0
 8006e4e:	f7f9 fdab 	bl	80009a8 <__aeabi_dcmpeq>
 8006e52:	4607      	mov	r7, r0
 8006e54:	b158      	cbz	r0, 8006e6e <_dtoa_r+0xce>
 8006e56:	2301      	movs	r3, #1
 8006e58:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8006e5a:	6013      	str	r3, [r2, #0]
 8006e5c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8006e5e:	b113      	cbz	r3, 8006e66 <_dtoa_r+0xc6>
 8006e60:	4b85      	ldr	r3, [pc, #532]	@ (8007078 <_dtoa_r+0x2d8>)
 8006e62:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8006e64:	6013      	str	r3, [r2, #0]
 8006e66:	f8df a214 	ldr.w	sl, [pc, #532]	@ 800707c <_dtoa_r+0x2dc>
 8006e6a:	f000 bd36 	b.w	80078da <_dtoa_r+0xb3a>
 8006e6e:	ab14      	add	r3, sp, #80	@ 0x50
 8006e70:	9301      	str	r3, [sp, #4]
 8006e72:	ab15      	add	r3, sp, #84	@ 0x54
 8006e74:	9300      	str	r3, [sp, #0]
 8006e76:	4658      	mov	r0, fp
 8006e78:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 8006e7c:	f001 f8da 	bl	8008034 <__d2b>
 8006e80:	f3c8 560a 	ubfx	r6, r8, #20, #11
 8006e84:	4681      	mov	r9, r0
 8006e86:	2e00      	cmp	r6, #0
 8006e88:	d077      	beq.n	8006f7a <_dtoa_r+0x1da>
 8006e8a:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8006e8e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8006e90:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8006e94:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006e98:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8006e9c:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8006ea0:	9712      	str	r7, [sp, #72]	@ 0x48
 8006ea2:	4619      	mov	r1, r3
 8006ea4:	2200      	movs	r2, #0
 8006ea6:	4b76      	ldr	r3, [pc, #472]	@ (8007080 <_dtoa_r+0x2e0>)
 8006ea8:	f7f9 f95e 	bl	8000168 <__aeabi_dsub>
 8006eac:	a368      	add	r3, pc, #416	@ (adr r3, 8007050 <_dtoa_r+0x2b0>)
 8006eae:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006eb2:	f7f9 fb11 	bl	80004d8 <__aeabi_dmul>
 8006eb6:	a368      	add	r3, pc, #416	@ (adr r3, 8007058 <_dtoa_r+0x2b8>)
 8006eb8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006ebc:	f7f9 f956 	bl	800016c <__adddf3>
 8006ec0:	4604      	mov	r4, r0
 8006ec2:	4630      	mov	r0, r6
 8006ec4:	460d      	mov	r5, r1
 8006ec6:	f7f9 fa9d 	bl	8000404 <__aeabi_i2d>
 8006eca:	a365      	add	r3, pc, #404	@ (adr r3, 8007060 <_dtoa_r+0x2c0>)
 8006ecc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006ed0:	f7f9 fb02 	bl	80004d8 <__aeabi_dmul>
 8006ed4:	4602      	mov	r2, r0
 8006ed6:	460b      	mov	r3, r1
 8006ed8:	4620      	mov	r0, r4
 8006eda:	4629      	mov	r1, r5
 8006edc:	f7f9 f946 	bl	800016c <__adddf3>
 8006ee0:	4604      	mov	r4, r0
 8006ee2:	460d      	mov	r5, r1
 8006ee4:	f7f9 fda8 	bl	8000a38 <__aeabi_d2iz>
 8006ee8:	2200      	movs	r2, #0
 8006eea:	4607      	mov	r7, r0
 8006eec:	2300      	movs	r3, #0
 8006eee:	4620      	mov	r0, r4
 8006ef0:	4629      	mov	r1, r5
 8006ef2:	f7f9 fd63 	bl	80009bc <__aeabi_dcmplt>
 8006ef6:	b140      	cbz	r0, 8006f0a <_dtoa_r+0x16a>
 8006ef8:	4638      	mov	r0, r7
 8006efa:	f7f9 fa83 	bl	8000404 <__aeabi_i2d>
 8006efe:	4622      	mov	r2, r4
 8006f00:	462b      	mov	r3, r5
 8006f02:	f7f9 fd51 	bl	80009a8 <__aeabi_dcmpeq>
 8006f06:	b900      	cbnz	r0, 8006f0a <_dtoa_r+0x16a>
 8006f08:	3f01      	subs	r7, #1
 8006f0a:	2f16      	cmp	r7, #22
 8006f0c:	d853      	bhi.n	8006fb6 <_dtoa_r+0x216>
 8006f0e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8006f12:	4b5c      	ldr	r3, [pc, #368]	@ (8007084 <_dtoa_r+0x2e4>)
 8006f14:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8006f18:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006f1c:	f7f9 fd4e 	bl	80009bc <__aeabi_dcmplt>
 8006f20:	2800      	cmp	r0, #0
 8006f22:	d04a      	beq.n	8006fba <_dtoa_r+0x21a>
 8006f24:	2300      	movs	r3, #0
 8006f26:	3f01      	subs	r7, #1
 8006f28:	930f      	str	r3, [sp, #60]	@ 0x3c
 8006f2a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8006f2c:	1b9b      	subs	r3, r3, r6
 8006f2e:	1e5a      	subs	r2, r3, #1
 8006f30:	bf46      	itte	mi
 8006f32:	f1c3 0801 	rsbmi	r8, r3, #1
 8006f36:	2300      	movmi	r3, #0
 8006f38:	f04f 0800 	movpl.w	r8, #0
 8006f3c:	9209      	str	r2, [sp, #36]	@ 0x24
 8006f3e:	bf48      	it	mi
 8006f40:	9309      	strmi	r3, [sp, #36]	@ 0x24
 8006f42:	2f00      	cmp	r7, #0
 8006f44:	db3b      	blt.n	8006fbe <_dtoa_r+0x21e>
 8006f46:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006f48:	970e      	str	r7, [sp, #56]	@ 0x38
 8006f4a:	443b      	add	r3, r7
 8006f4c:	9309      	str	r3, [sp, #36]	@ 0x24
 8006f4e:	2300      	movs	r3, #0
 8006f50:	930a      	str	r3, [sp, #40]	@ 0x28
 8006f52:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8006f54:	2b09      	cmp	r3, #9
 8006f56:	d866      	bhi.n	8007026 <_dtoa_r+0x286>
 8006f58:	2b05      	cmp	r3, #5
 8006f5a:	bfc4      	itt	gt
 8006f5c:	3b04      	subgt	r3, #4
 8006f5e:	9320      	strgt	r3, [sp, #128]	@ 0x80
 8006f60:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8006f62:	bfc8      	it	gt
 8006f64:	2400      	movgt	r4, #0
 8006f66:	f1a3 0302 	sub.w	r3, r3, #2
 8006f6a:	bfd8      	it	le
 8006f6c:	2401      	movle	r4, #1
 8006f6e:	2b03      	cmp	r3, #3
 8006f70:	d864      	bhi.n	800703c <_dtoa_r+0x29c>
 8006f72:	e8df f003 	tbb	[pc, r3]
 8006f76:	382b      	.short	0x382b
 8006f78:	5636      	.short	0x5636
 8006f7a:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 8006f7e:	441e      	add	r6, r3
 8006f80:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8006f84:	2b20      	cmp	r3, #32
 8006f86:	bfc1      	itttt	gt
 8006f88:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8006f8c:	fa08 f803 	lslgt.w	r8, r8, r3
 8006f90:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8006f94:	fa24 f303 	lsrgt.w	r3, r4, r3
 8006f98:	bfd6      	itet	le
 8006f9a:	f1c3 0320 	rsble	r3, r3, #32
 8006f9e:	ea48 0003 	orrgt.w	r0, r8, r3
 8006fa2:	fa04 f003 	lslle.w	r0, r4, r3
 8006fa6:	f7f9 fa1d 	bl	80003e4 <__aeabi_ui2d>
 8006faa:	2201      	movs	r2, #1
 8006fac:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8006fb0:	3e01      	subs	r6, #1
 8006fb2:	9212      	str	r2, [sp, #72]	@ 0x48
 8006fb4:	e775      	b.n	8006ea2 <_dtoa_r+0x102>
 8006fb6:	2301      	movs	r3, #1
 8006fb8:	e7b6      	b.n	8006f28 <_dtoa_r+0x188>
 8006fba:	900f      	str	r0, [sp, #60]	@ 0x3c
 8006fbc:	e7b5      	b.n	8006f2a <_dtoa_r+0x18a>
 8006fbe:	427b      	negs	r3, r7
 8006fc0:	930a      	str	r3, [sp, #40]	@ 0x28
 8006fc2:	2300      	movs	r3, #0
 8006fc4:	eba8 0807 	sub.w	r8, r8, r7
 8006fc8:	930e      	str	r3, [sp, #56]	@ 0x38
 8006fca:	e7c2      	b.n	8006f52 <_dtoa_r+0x1b2>
 8006fcc:	2300      	movs	r3, #0
 8006fce:	930b      	str	r3, [sp, #44]	@ 0x2c
 8006fd0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8006fd2:	2b00      	cmp	r3, #0
 8006fd4:	dc35      	bgt.n	8007042 <_dtoa_r+0x2a2>
 8006fd6:	2301      	movs	r3, #1
 8006fd8:	461a      	mov	r2, r3
 8006fda:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8006fde:	9221      	str	r2, [sp, #132]	@ 0x84
 8006fe0:	e00b      	b.n	8006ffa <_dtoa_r+0x25a>
 8006fe2:	2301      	movs	r3, #1
 8006fe4:	e7f3      	b.n	8006fce <_dtoa_r+0x22e>
 8006fe6:	2300      	movs	r3, #0
 8006fe8:	930b      	str	r3, [sp, #44]	@ 0x2c
 8006fea:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8006fec:	18fb      	adds	r3, r7, r3
 8006fee:	9308      	str	r3, [sp, #32]
 8006ff0:	3301      	adds	r3, #1
 8006ff2:	2b01      	cmp	r3, #1
 8006ff4:	9307      	str	r3, [sp, #28]
 8006ff6:	bfb8      	it	lt
 8006ff8:	2301      	movlt	r3, #1
 8006ffa:	2100      	movs	r1, #0
 8006ffc:	2204      	movs	r2, #4
 8006ffe:	f8db 001c 	ldr.w	r0, [fp, #28]
 8007002:	f102 0514 	add.w	r5, r2, #20
 8007006:	429d      	cmp	r5, r3
 8007008:	d91f      	bls.n	800704a <_dtoa_r+0x2aa>
 800700a:	6041      	str	r1, [r0, #4]
 800700c:	4658      	mov	r0, fp
 800700e:	f000 fce9 	bl	80079e4 <_Balloc>
 8007012:	4682      	mov	sl, r0
 8007014:	2800      	cmp	r0, #0
 8007016:	d139      	bne.n	800708c <_dtoa_r+0x2ec>
 8007018:	4602      	mov	r2, r0
 800701a:	f240 11af 	movw	r1, #431	@ 0x1af
 800701e:	4b1a      	ldr	r3, [pc, #104]	@ (8007088 <_dtoa_r+0x2e8>)
 8007020:	e6d2      	b.n	8006dc8 <_dtoa_r+0x28>
 8007022:	2301      	movs	r3, #1
 8007024:	e7e0      	b.n	8006fe8 <_dtoa_r+0x248>
 8007026:	2401      	movs	r4, #1
 8007028:	2300      	movs	r3, #0
 800702a:	940b      	str	r4, [sp, #44]	@ 0x2c
 800702c:	9320      	str	r3, [sp, #128]	@ 0x80
 800702e:	f04f 33ff 	mov.w	r3, #4294967295
 8007032:	2200      	movs	r2, #0
 8007034:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8007038:	2312      	movs	r3, #18
 800703a:	e7d0      	b.n	8006fde <_dtoa_r+0x23e>
 800703c:	2301      	movs	r3, #1
 800703e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8007040:	e7f5      	b.n	800702e <_dtoa_r+0x28e>
 8007042:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8007044:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8007048:	e7d7      	b.n	8006ffa <_dtoa_r+0x25a>
 800704a:	3101      	adds	r1, #1
 800704c:	0052      	lsls	r2, r2, #1
 800704e:	e7d8      	b.n	8007002 <_dtoa_r+0x262>
 8007050:	636f4361 	.word	0x636f4361
 8007054:	3fd287a7 	.word	0x3fd287a7
 8007058:	8b60c8b3 	.word	0x8b60c8b3
 800705c:	3fc68a28 	.word	0x3fc68a28
 8007060:	509f79fb 	.word	0x509f79fb
 8007064:	3fd34413 	.word	0x3fd34413
 8007068:	08008a3d 	.word	0x08008a3d
 800706c:	08008a54 	.word	0x08008a54
 8007070:	7ff00000 	.word	0x7ff00000
 8007074:	08008a39 	.word	0x08008a39
 8007078:	080089c7 	.word	0x080089c7
 800707c:	080089c6 	.word	0x080089c6
 8007080:	3ff80000 	.word	0x3ff80000
 8007084:	08008b50 	.word	0x08008b50
 8007088:	08008aac 	.word	0x08008aac
 800708c:	f8db 301c 	ldr.w	r3, [fp, #28]
 8007090:	6018      	str	r0, [r3, #0]
 8007092:	9b07      	ldr	r3, [sp, #28]
 8007094:	2b0e      	cmp	r3, #14
 8007096:	f200 80a4 	bhi.w	80071e2 <_dtoa_r+0x442>
 800709a:	2c00      	cmp	r4, #0
 800709c:	f000 80a1 	beq.w	80071e2 <_dtoa_r+0x442>
 80070a0:	2f00      	cmp	r7, #0
 80070a2:	dd33      	ble.n	800710c <_dtoa_r+0x36c>
 80070a4:	4b86      	ldr	r3, [pc, #536]	@ (80072c0 <_dtoa_r+0x520>)
 80070a6:	f007 020f 	and.w	r2, r7, #15
 80070aa:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80070ae:	05f8      	lsls	r0, r7, #23
 80070b0:	e9d3 3400 	ldrd	r3, r4, [r3]
 80070b4:	e9cd 3404 	strd	r3, r4, [sp, #16]
 80070b8:	ea4f 1427 	mov.w	r4, r7, asr #4
 80070bc:	d516      	bpl.n	80070ec <_dtoa_r+0x34c>
 80070be:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80070c2:	4b80      	ldr	r3, [pc, #512]	@ (80072c4 <_dtoa_r+0x524>)
 80070c4:	2603      	movs	r6, #3
 80070c6:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80070ca:	f7f9 fb2f 	bl	800072c <__aeabi_ddiv>
 80070ce:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80070d2:	f004 040f 	and.w	r4, r4, #15
 80070d6:	4d7b      	ldr	r5, [pc, #492]	@ (80072c4 <_dtoa_r+0x524>)
 80070d8:	b954      	cbnz	r4, 80070f0 <_dtoa_r+0x350>
 80070da:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80070de:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80070e2:	f7f9 fb23 	bl	800072c <__aeabi_ddiv>
 80070e6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80070ea:	e028      	b.n	800713e <_dtoa_r+0x39e>
 80070ec:	2602      	movs	r6, #2
 80070ee:	e7f2      	b.n	80070d6 <_dtoa_r+0x336>
 80070f0:	07e1      	lsls	r1, r4, #31
 80070f2:	d508      	bpl.n	8007106 <_dtoa_r+0x366>
 80070f4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80070f8:	e9d5 2300 	ldrd	r2, r3, [r5]
 80070fc:	f7f9 f9ec 	bl	80004d8 <__aeabi_dmul>
 8007100:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8007104:	3601      	adds	r6, #1
 8007106:	1064      	asrs	r4, r4, #1
 8007108:	3508      	adds	r5, #8
 800710a:	e7e5      	b.n	80070d8 <_dtoa_r+0x338>
 800710c:	f000 80d2 	beq.w	80072b4 <_dtoa_r+0x514>
 8007110:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8007114:	427c      	negs	r4, r7
 8007116:	4b6a      	ldr	r3, [pc, #424]	@ (80072c0 <_dtoa_r+0x520>)
 8007118:	f004 020f 	and.w	r2, r4, #15
 800711c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8007120:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007124:	f7f9 f9d8 	bl	80004d8 <__aeabi_dmul>
 8007128:	2602      	movs	r6, #2
 800712a:	2300      	movs	r3, #0
 800712c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8007130:	4d64      	ldr	r5, [pc, #400]	@ (80072c4 <_dtoa_r+0x524>)
 8007132:	1124      	asrs	r4, r4, #4
 8007134:	2c00      	cmp	r4, #0
 8007136:	f040 80b2 	bne.w	800729e <_dtoa_r+0x4fe>
 800713a:	2b00      	cmp	r3, #0
 800713c:	d1d3      	bne.n	80070e6 <_dtoa_r+0x346>
 800713e:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8007142:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8007144:	2b00      	cmp	r3, #0
 8007146:	f000 80b7 	beq.w	80072b8 <_dtoa_r+0x518>
 800714a:	2200      	movs	r2, #0
 800714c:	4620      	mov	r0, r4
 800714e:	4629      	mov	r1, r5
 8007150:	4b5d      	ldr	r3, [pc, #372]	@ (80072c8 <_dtoa_r+0x528>)
 8007152:	f7f9 fc33 	bl	80009bc <__aeabi_dcmplt>
 8007156:	2800      	cmp	r0, #0
 8007158:	f000 80ae 	beq.w	80072b8 <_dtoa_r+0x518>
 800715c:	9b07      	ldr	r3, [sp, #28]
 800715e:	2b00      	cmp	r3, #0
 8007160:	f000 80aa 	beq.w	80072b8 <_dtoa_r+0x518>
 8007164:	9b08      	ldr	r3, [sp, #32]
 8007166:	2b00      	cmp	r3, #0
 8007168:	dd37      	ble.n	80071da <_dtoa_r+0x43a>
 800716a:	1e7b      	subs	r3, r7, #1
 800716c:	4620      	mov	r0, r4
 800716e:	9304      	str	r3, [sp, #16]
 8007170:	2200      	movs	r2, #0
 8007172:	4629      	mov	r1, r5
 8007174:	4b55      	ldr	r3, [pc, #340]	@ (80072cc <_dtoa_r+0x52c>)
 8007176:	f7f9 f9af 	bl	80004d8 <__aeabi_dmul>
 800717a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800717e:	9c08      	ldr	r4, [sp, #32]
 8007180:	3601      	adds	r6, #1
 8007182:	4630      	mov	r0, r6
 8007184:	f7f9 f93e 	bl	8000404 <__aeabi_i2d>
 8007188:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800718c:	f7f9 f9a4 	bl	80004d8 <__aeabi_dmul>
 8007190:	2200      	movs	r2, #0
 8007192:	4b4f      	ldr	r3, [pc, #316]	@ (80072d0 <_dtoa_r+0x530>)
 8007194:	f7f8 ffea 	bl	800016c <__adddf3>
 8007198:	4605      	mov	r5, r0
 800719a:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 800719e:	2c00      	cmp	r4, #0
 80071a0:	f040 809a 	bne.w	80072d8 <_dtoa_r+0x538>
 80071a4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80071a8:	2200      	movs	r2, #0
 80071aa:	4b4a      	ldr	r3, [pc, #296]	@ (80072d4 <_dtoa_r+0x534>)
 80071ac:	f7f8 ffdc 	bl	8000168 <__aeabi_dsub>
 80071b0:	4602      	mov	r2, r0
 80071b2:	460b      	mov	r3, r1
 80071b4:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80071b8:	462a      	mov	r2, r5
 80071ba:	4633      	mov	r3, r6
 80071bc:	f7f9 fc1c 	bl	80009f8 <__aeabi_dcmpgt>
 80071c0:	2800      	cmp	r0, #0
 80071c2:	f040 828e 	bne.w	80076e2 <_dtoa_r+0x942>
 80071c6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80071ca:	462a      	mov	r2, r5
 80071cc:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 80071d0:	f7f9 fbf4 	bl	80009bc <__aeabi_dcmplt>
 80071d4:	2800      	cmp	r0, #0
 80071d6:	f040 8127 	bne.w	8007428 <_dtoa_r+0x688>
 80071da:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 80071de:	e9cd 3402 	strd	r3, r4, [sp, #8]
 80071e2:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80071e4:	2b00      	cmp	r3, #0
 80071e6:	f2c0 8163 	blt.w	80074b0 <_dtoa_r+0x710>
 80071ea:	2f0e      	cmp	r7, #14
 80071ec:	f300 8160 	bgt.w	80074b0 <_dtoa_r+0x710>
 80071f0:	4b33      	ldr	r3, [pc, #204]	@ (80072c0 <_dtoa_r+0x520>)
 80071f2:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80071f6:	e9d3 3400 	ldrd	r3, r4, [r3]
 80071fa:	e9cd 3404 	strd	r3, r4, [sp, #16]
 80071fe:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8007200:	2b00      	cmp	r3, #0
 8007202:	da03      	bge.n	800720c <_dtoa_r+0x46c>
 8007204:	9b07      	ldr	r3, [sp, #28]
 8007206:	2b00      	cmp	r3, #0
 8007208:	f340 8100 	ble.w	800740c <_dtoa_r+0x66c>
 800720c:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8007210:	4656      	mov	r6, sl
 8007212:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8007216:	4620      	mov	r0, r4
 8007218:	4629      	mov	r1, r5
 800721a:	f7f9 fa87 	bl	800072c <__aeabi_ddiv>
 800721e:	f7f9 fc0b 	bl	8000a38 <__aeabi_d2iz>
 8007222:	4680      	mov	r8, r0
 8007224:	f7f9 f8ee 	bl	8000404 <__aeabi_i2d>
 8007228:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800722c:	f7f9 f954 	bl	80004d8 <__aeabi_dmul>
 8007230:	4602      	mov	r2, r0
 8007232:	460b      	mov	r3, r1
 8007234:	4620      	mov	r0, r4
 8007236:	4629      	mov	r1, r5
 8007238:	f7f8 ff96 	bl	8000168 <__aeabi_dsub>
 800723c:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8007240:	9d07      	ldr	r5, [sp, #28]
 8007242:	f806 4b01 	strb.w	r4, [r6], #1
 8007246:	eba6 040a 	sub.w	r4, r6, sl
 800724a:	42a5      	cmp	r5, r4
 800724c:	4602      	mov	r2, r0
 800724e:	460b      	mov	r3, r1
 8007250:	f040 8116 	bne.w	8007480 <_dtoa_r+0x6e0>
 8007254:	f7f8 ff8a 	bl	800016c <__adddf3>
 8007258:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800725c:	4604      	mov	r4, r0
 800725e:	460d      	mov	r5, r1
 8007260:	f7f9 fbca 	bl	80009f8 <__aeabi_dcmpgt>
 8007264:	2800      	cmp	r0, #0
 8007266:	f040 80f8 	bne.w	800745a <_dtoa_r+0x6ba>
 800726a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800726e:	4620      	mov	r0, r4
 8007270:	4629      	mov	r1, r5
 8007272:	f7f9 fb99 	bl	80009a8 <__aeabi_dcmpeq>
 8007276:	b118      	cbz	r0, 8007280 <_dtoa_r+0x4e0>
 8007278:	f018 0f01 	tst.w	r8, #1
 800727c:	f040 80ed 	bne.w	800745a <_dtoa_r+0x6ba>
 8007280:	4649      	mov	r1, r9
 8007282:	4658      	mov	r0, fp
 8007284:	f000 fbee 	bl	8007a64 <_Bfree>
 8007288:	2300      	movs	r3, #0
 800728a:	7033      	strb	r3, [r6, #0]
 800728c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 800728e:	3701      	adds	r7, #1
 8007290:	601f      	str	r7, [r3, #0]
 8007292:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8007294:	2b00      	cmp	r3, #0
 8007296:	f000 8320 	beq.w	80078da <_dtoa_r+0xb3a>
 800729a:	601e      	str	r6, [r3, #0]
 800729c:	e31d      	b.n	80078da <_dtoa_r+0xb3a>
 800729e:	07e2      	lsls	r2, r4, #31
 80072a0:	d505      	bpl.n	80072ae <_dtoa_r+0x50e>
 80072a2:	e9d5 2300 	ldrd	r2, r3, [r5]
 80072a6:	f7f9 f917 	bl	80004d8 <__aeabi_dmul>
 80072aa:	2301      	movs	r3, #1
 80072ac:	3601      	adds	r6, #1
 80072ae:	1064      	asrs	r4, r4, #1
 80072b0:	3508      	adds	r5, #8
 80072b2:	e73f      	b.n	8007134 <_dtoa_r+0x394>
 80072b4:	2602      	movs	r6, #2
 80072b6:	e742      	b.n	800713e <_dtoa_r+0x39e>
 80072b8:	9c07      	ldr	r4, [sp, #28]
 80072ba:	9704      	str	r7, [sp, #16]
 80072bc:	e761      	b.n	8007182 <_dtoa_r+0x3e2>
 80072be:	bf00      	nop
 80072c0:	08008b50 	.word	0x08008b50
 80072c4:	08008b28 	.word	0x08008b28
 80072c8:	3ff00000 	.word	0x3ff00000
 80072cc:	40240000 	.word	0x40240000
 80072d0:	401c0000 	.word	0x401c0000
 80072d4:	40140000 	.word	0x40140000
 80072d8:	4b70      	ldr	r3, [pc, #448]	@ (800749c <_dtoa_r+0x6fc>)
 80072da:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80072dc:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80072e0:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 80072e4:	4454      	add	r4, sl
 80072e6:	2900      	cmp	r1, #0
 80072e8:	d045      	beq.n	8007376 <_dtoa_r+0x5d6>
 80072ea:	2000      	movs	r0, #0
 80072ec:	496c      	ldr	r1, [pc, #432]	@ (80074a0 <_dtoa_r+0x700>)
 80072ee:	f7f9 fa1d 	bl	800072c <__aeabi_ddiv>
 80072f2:	4633      	mov	r3, r6
 80072f4:	462a      	mov	r2, r5
 80072f6:	f7f8 ff37 	bl	8000168 <__aeabi_dsub>
 80072fa:	4656      	mov	r6, sl
 80072fc:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8007300:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8007304:	f7f9 fb98 	bl	8000a38 <__aeabi_d2iz>
 8007308:	4605      	mov	r5, r0
 800730a:	f7f9 f87b 	bl	8000404 <__aeabi_i2d>
 800730e:	4602      	mov	r2, r0
 8007310:	460b      	mov	r3, r1
 8007312:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8007316:	f7f8 ff27 	bl	8000168 <__aeabi_dsub>
 800731a:	4602      	mov	r2, r0
 800731c:	460b      	mov	r3, r1
 800731e:	3530      	adds	r5, #48	@ 0x30
 8007320:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8007324:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8007328:	f806 5b01 	strb.w	r5, [r6], #1
 800732c:	f7f9 fb46 	bl	80009bc <__aeabi_dcmplt>
 8007330:	2800      	cmp	r0, #0
 8007332:	d163      	bne.n	80073fc <_dtoa_r+0x65c>
 8007334:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007338:	2000      	movs	r0, #0
 800733a:	495a      	ldr	r1, [pc, #360]	@ (80074a4 <_dtoa_r+0x704>)
 800733c:	f7f8 ff14 	bl	8000168 <__aeabi_dsub>
 8007340:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8007344:	f7f9 fb3a 	bl	80009bc <__aeabi_dcmplt>
 8007348:	2800      	cmp	r0, #0
 800734a:	f040 8087 	bne.w	800745c <_dtoa_r+0x6bc>
 800734e:	42a6      	cmp	r6, r4
 8007350:	f43f af43 	beq.w	80071da <_dtoa_r+0x43a>
 8007354:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8007358:	2200      	movs	r2, #0
 800735a:	4b53      	ldr	r3, [pc, #332]	@ (80074a8 <_dtoa_r+0x708>)
 800735c:	f7f9 f8bc 	bl	80004d8 <__aeabi_dmul>
 8007360:	2200      	movs	r2, #0
 8007362:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8007366:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800736a:	4b4f      	ldr	r3, [pc, #316]	@ (80074a8 <_dtoa_r+0x708>)
 800736c:	f7f9 f8b4 	bl	80004d8 <__aeabi_dmul>
 8007370:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8007374:	e7c4      	b.n	8007300 <_dtoa_r+0x560>
 8007376:	4631      	mov	r1, r6
 8007378:	4628      	mov	r0, r5
 800737a:	f7f9 f8ad 	bl	80004d8 <__aeabi_dmul>
 800737e:	4656      	mov	r6, sl
 8007380:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8007384:	9413      	str	r4, [sp, #76]	@ 0x4c
 8007386:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800738a:	f7f9 fb55 	bl	8000a38 <__aeabi_d2iz>
 800738e:	4605      	mov	r5, r0
 8007390:	f7f9 f838 	bl	8000404 <__aeabi_i2d>
 8007394:	4602      	mov	r2, r0
 8007396:	460b      	mov	r3, r1
 8007398:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800739c:	f7f8 fee4 	bl	8000168 <__aeabi_dsub>
 80073a0:	4602      	mov	r2, r0
 80073a2:	460b      	mov	r3, r1
 80073a4:	3530      	adds	r5, #48	@ 0x30
 80073a6:	f806 5b01 	strb.w	r5, [r6], #1
 80073aa:	42a6      	cmp	r6, r4
 80073ac:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80073b0:	f04f 0200 	mov.w	r2, #0
 80073b4:	d124      	bne.n	8007400 <_dtoa_r+0x660>
 80073b6:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 80073ba:	4b39      	ldr	r3, [pc, #228]	@ (80074a0 <_dtoa_r+0x700>)
 80073bc:	f7f8 fed6 	bl	800016c <__adddf3>
 80073c0:	4602      	mov	r2, r0
 80073c2:	460b      	mov	r3, r1
 80073c4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80073c8:	f7f9 fb16 	bl	80009f8 <__aeabi_dcmpgt>
 80073cc:	2800      	cmp	r0, #0
 80073ce:	d145      	bne.n	800745c <_dtoa_r+0x6bc>
 80073d0:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 80073d4:	2000      	movs	r0, #0
 80073d6:	4932      	ldr	r1, [pc, #200]	@ (80074a0 <_dtoa_r+0x700>)
 80073d8:	f7f8 fec6 	bl	8000168 <__aeabi_dsub>
 80073dc:	4602      	mov	r2, r0
 80073de:	460b      	mov	r3, r1
 80073e0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80073e4:	f7f9 faea 	bl	80009bc <__aeabi_dcmplt>
 80073e8:	2800      	cmp	r0, #0
 80073ea:	f43f aef6 	beq.w	80071da <_dtoa_r+0x43a>
 80073ee:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80073f0:	1e73      	subs	r3, r6, #1
 80073f2:	9313      	str	r3, [sp, #76]	@ 0x4c
 80073f4:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 80073f8:	2b30      	cmp	r3, #48	@ 0x30
 80073fa:	d0f8      	beq.n	80073ee <_dtoa_r+0x64e>
 80073fc:	9f04      	ldr	r7, [sp, #16]
 80073fe:	e73f      	b.n	8007280 <_dtoa_r+0x4e0>
 8007400:	4b29      	ldr	r3, [pc, #164]	@ (80074a8 <_dtoa_r+0x708>)
 8007402:	f7f9 f869 	bl	80004d8 <__aeabi_dmul>
 8007406:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800740a:	e7bc      	b.n	8007386 <_dtoa_r+0x5e6>
 800740c:	d10c      	bne.n	8007428 <_dtoa_r+0x688>
 800740e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8007412:	2200      	movs	r2, #0
 8007414:	4b25      	ldr	r3, [pc, #148]	@ (80074ac <_dtoa_r+0x70c>)
 8007416:	f7f9 f85f 	bl	80004d8 <__aeabi_dmul>
 800741a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800741e:	f7f9 fae1 	bl	80009e4 <__aeabi_dcmpge>
 8007422:	2800      	cmp	r0, #0
 8007424:	f000 815b 	beq.w	80076de <_dtoa_r+0x93e>
 8007428:	2400      	movs	r4, #0
 800742a:	4625      	mov	r5, r4
 800742c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800742e:	4656      	mov	r6, sl
 8007430:	43db      	mvns	r3, r3
 8007432:	9304      	str	r3, [sp, #16]
 8007434:	2700      	movs	r7, #0
 8007436:	4621      	mov	r1, r4
 8007438:	4658      	mov	r0, fp
 800743a:	f000 fb13 	bl	8007a64 <_Bfree>
 800743e:	2d00      	cmp	r5, #0
 8007440:	d0dc      	beq.n	80073fc <_dtoa_r+0x65c>
 8007442:	b12f      	cbz	r7, 8007450 <_dtoa_r+0x6b0>
 8007444:	42af      	cmp	r7, r5
 8007446:	d003      	beq.n	8007450 <_dtoa_r+0x6b0>
 8007448:	4639      	mov	r1, r7
 800744a:	4658      	mov	r0, fp
 800744c:	f000 fb0a 	bl	8007a64 <_Bfree>
 8007450:	4629      	mov	r1, r5
 8007452:	4658      	mov	r0, fp
 8007454:	f000 fb06 	bl	8007a64 <_Bfree>
 8007458:	e7d0      	b.n	80073fc <_dtoa_r+0x65c>
 800745a:	9704      	str	r7, [sp, #16]
 800745c:	4633      	mov	r3, r6
 800745e:	461e      	mov	r6, r3
 8007460:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8007464:	2a39      	cmp	r2, #57	@ 0x39
 8007466:	d107      	bne.n	8007478 <_dtoa_r+0x6d8>
 8007468:	459a      	cmp	sl, r3
 800746a:	d1f8      	bne.n	800745e <_dtoa_r+0x6be>
 800746c:	9a04      	ldr	r2, [sp, #16]
 800746e:	3201      	adds	r2, #1
 8007470:	9204      	str	r2, [sp, #16]
 8007472:	2230      	movs	r2, #48	@ 0x30
 8007474:	f88a 2000 	strb.w	r2, [sl]
 8007478:	781a      	ldrb	r2, [r3, #0]
 800747a:	3201      	adds	r2, #1
 800747c:	701a      	strb	r2, [r3, #0]
 800747e:	e7bd      	b.n	80073fc <_dtoa_r+0x65c>
 8007480:	2200      	movs	r2, #0
 8007482:	4b09      	ldr	r3, [pc, #36]	@ (80074a8 <_dtoa_r+0x708>)
 8007484:	f7f9 f828 	bl	80004d8 <__aeabi_dmul>
 8007488:	2200      	movs	r2, #0
 800748a:	2300      	movs	r3, #0
 800748c:	4604      	mov	r4, r0
 800748e:	460d      	mov	r5, r1
 8007490:	f7f9 fa8a 	bl	80009a8 <__aeabi_dcmpeq>
 8007494:	2800      	cmp	r0, #0
 8007496:	f43f aebc 	beq.w	8007212 <_dtoa_r+0x472>
 800749a:	e6f1      	b.n	8007280 <_dtoa_r+0x4e0>
 800749c:	08008b50 	.word	0x08008b50
 80074a0:	3fe00000 	.word	0x3fe00000
 80074a4:	3ff00000 	.word	0x3ff00000
 80074a8:	40240000 	.word	0x40240000
 80074ac:	40140000 	.word	0x40140000
 80074b0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80074b2:	2a00      	cmp	r2, #0
 80074b4:	f000 80db 	beq.w	800766e <_dtoa_r+0x8ce>
 80074b8:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80074ba:	2a01      	cmp	r2, #1
 80074bc:	f300 80bf 	bgt.w	800763e <_dtoa_r+0x89e>
 80074c0:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80074c2:	2a00      	cmp	r2, #0
 80074c4:	f000 80b7 	beq.w	8007636 <_dtoa_r+0x896>
 80074c8:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 80074cc:	4646      	mov	r6, r8
 80074ce:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80074d0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80074d2:	2101      	movs	r1, #1
 80074d4:	441a      	add	r2, r3
 80074d6:	4658      	mov	r0, fp
 80074d8:	4498      	add	r8, r3
 80074da:	9209      	str	r2, [sp, #36]	@ 0x24
 80074dc:	f000 fb76 	bl	8007bcc <__i2b>
 80074e0:	4605      	mov	r5, r0
 80074e2:	b15e      	cbz	r6, 80074fc <_dtoa_r+0x75c>
 80074e4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80074e6:	2b00      	cmp	r3, #0
 80074e8:	dd08      	ble.n	80074fc <_dtoa_r+0x75c>
 80074ea:	42b3      	cmp	r3, r6
 80074ec:	bfa8      	it	ge
 80074ee:	4633      	movge	r3, r6
 80074f0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80074f2:	eba8 0803 	sub.w	r8, r8, r3
 80074f6:	1af6      	subs	r6, r6, r3
 80074f8:	1ad3      	subs	r3, r2, r3
 80074fa:	9309      	str	r3, [sp, #36]	@ 0x24
 80074fc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80074fe:	b1f3      	cbz	r3, 800753e <_dtoa_r+0x79e>
 8007500:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8007502:	2b00      	cmp	r3, #0
 8007504:	f000 80b7 	beq.w	8007676 <_dtoa_r+0x8d6>
 8007508:	b18c      	cbz	r4, 800752e <_dtoa_r+0x78e>
 800750a:	4629      	mov	r1, r5
 800750c:	4622      	mov	r2, r4
 800750e:	4658      	mov	r0, fp
 8007510:	f000 fc1a 	bl	8007d48 <__pow5mult>
 8007514:	464a      	mov	r2, r9
 8007516:	4601      	mov	r1, r0
 8007518:	4605      	mov	r5, r0
 800751a:	4658      	mov	r0, fp
 800751c:	f000 fb6c 	bl	8007bf8 <__multiply>
 8007520:	4649      	mov	r1, r9
 8007522:	9004      	str	r0, [sp, #16]
 8007524:	4658      	mov	r0, fp
 8007526:	f000 fa9d 	bl	8007a64 <_Bfree>
 800752a:	9b04      	ldr	r3, [sp, #16]
 800752c:	4699      	mov	r9, r3
 800752e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8007530:	1b1a      	subs	r2, r3, r4
 8007532:	d004      	beq.n	800753e <_dtoa_r+0x79e>
 8007534:	4649      	mov	r1, r9
 8007536:	4658      	mov	r0, fp
 8007538:	f000 fc06 	bl	8007d48 <__pow5mult>
 800753c:	4681      	mov	r9, r0
 800753e:	2101      	movs	r1, #1
 8007540:	4658      	mov	r0, fp
 8007542:	f000 fb43 	bl	8007bcc <__i2b>
 8007546:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8007548:	4604      	mov	r4, r0
 800754a:	2b00      	cmp	r3, #0
 800754c:	f000 81c9 	beq.w	80078e2 <_dtoa_r+0xb42>
 8007550:	461a      	mov	r2, r3
 8007552:	4601      	mov	r1, r0
 8007554:	4658      	mov	r0, fp
 8007556:	f000 fbf7 	bl	8007d48 <__pow5mult>
 800755a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 800755c:	4604      	mov	r4, r0
 800755e:	2b01      	cmp	r3, #1
 8007560:	f300 808f 	bgt.w	8007682 <_dtoa_r+0x8e2>
 8007564:	9b02      	ldr	r3, [sp, #8]
 8007566:	2b00      	cmp	r3, #0
 8007568:	f040 8087 	bne.w	800767a <_dtoa_r+0x8da>
 800756c:	9b03      	ldr	r3, [sp, #12]
 800756e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8007572:	2b00      	cmp	r3, #0
 8007574:	f040 8083 	bne.w	800767e <_dtoa_r+0x8de>
 8007578:	9b03      	ldr	r3, [sp, #12]
 800757a:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800757e:	0d1b      	lsrs	r3, r3, #20
 8007580:	051b      	lsls	r3, r3, #20
 8007582:	b12b      	cbz	r3, 8007590 <_dtoa_r+0x7f0>
 8007584:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007586:	f108 0801 	add.w	r8, r8, #1
 800758a:	3301      	adds	r3, #1
 800758c:	9309      	str	r3, [sp, #36]	@ 0x24
 800758e:	2301      	movs	r3, #1
 8007590:	930a      	str	r3, [sp, #40]	@ 0x28
 8007592:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8007594:	2b00      	cmp	r3, #0
 8007596:	f000 81aa 	beq.w	80078ee <_dtoa_r+0xb4e>
 800759a:	6923      	ldr	r3, [r4, #16]
 800759c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80075a0:	6918      	ldr	r0, [r3, #16]
 80075a2:	f000 fac7 	bl	8007b34 <__hi0bits>
 80075a6:	f1c0 0020 	rsb	r0, r0, #32
 80075aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80075ac:	4418      	add	r0, r3
 80075ae:	f010 001f 	ands.w	r0, r0, #31
 80075b2:	d071      	beq.n	8007698 <_dtoa_r+0x8f8>
 80075b4:	f1c0 0320 	rsb	r3, r0, #32
 80075b8:	2b04      	cmp	r3, #4
 80075ba:	dd65      	ble.n	8007688 <_dtoa_r+0x8e8>
 80075bc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80075be:	f1c0 001c 	rsb	r0, r0, #28
 80075c2:	4403      	add	r3, r0
 80075c4:	4480      	add	r8, r0
 80075c6:	4406      	add	r6, r0
 80075c8:	9309      	str	r3, [sp, #36]	@ 0x24
 80075ca:	f1b8 0f00 	cmp.w	r8, #0
 80075ce:	dd05      	ble.n	80075dc <_dtoa_r+0x83c>
 80075d0:	4649      	mov	r1, r9
 80075d2:	4642      	mov	r2, r8
 80075d4:	4658      	mov	r0, fp
 80075d6:	f000 fc11 	bl	8007dfc <__lshift>
 80075da:	4681      	mov	r9, r0
 80075dc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80075de:	2b00      	cmp	r3, #0
 80075e0:	dd05      	ble.n	80075ee <_dtoa_r+0x84e>
 80075e2:	4621      	mov	r1, r4
 80075e4:	461a      	mov	r2, r3
 80075e6:	4658      	mov	r0, fp
 80075e8:	f000 fc08 	bl	8007dfc <__lshift>
 80075ec:	4604      	mov	r4, r0
 80075ee:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80075f0:	2b00      	cmp	r3, #0
 80075f2:	d053      	beq.n	800769c <_dtoa_r+0x8fc>
 80075f4:	4621      	mov	r1, r4
 80075f6:	4648      	mov	r0, r9
 80075f8:	f000 fc6c 	bl	8007ed4 <__mcmp>
 80075fc:	2800      	cmp	r0, #0
 80075fe:	da4d      	bge.n	800769c <_dtoa_r+0x8fc>
 8007600:	1e7b      	subs	r3, r7, #1
 8007602:	4649      	mov	r1, r9
 8007604:	9304      	str	r3, [sp, #16]
 8007606:	220a      	movs	r2, #10
 8007608:	2300      	movs	r3, #0
 800760a:	4658      	mov	r0, fp
 800760c:	f000 fa4c 	bl	8007aa8 <__multadd>
 8007610:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8007612:	4681      	mov	r9, r0
 8007614:	2b00      	cmp	r3, #0
 8007616:	f000 816c 	beq.w	80078f2 <_dtoa_r+0xb52>
 800761a:	2300      	movs	r3, #0
 800761c:	4629      	mov	r1, r5
 800761e:	220a      	movs	r2, #10
 8007620:	4658      	mov	r0, fp
 8007622:	f000 fa41 	bl	8007aa8 <__multadd>
 8007626:	9b08      	ldr	r3, [sp, #32]
 8007628:	4605      	mov	r5, r0
 800762a:	2b00      	cmp	r3, #0
 800762c:	dc61      	bgt.n	80076f2 <_dtoa_r+0x952>
 800762e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8007630:	2b02      	cmp	r3, #2
 8007632:	dc3b      	bgt.n	80076ac <_dtoa_r+0x90c>
 8007634:	e05d      	b.n	80076f2 <_dtoa_r+0x952>
 8007636:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8007638:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 800763c:	e746      	b.n	80074cc <_dtoa_r+0x72c>
 800763e:	9b07      	ldr	r3, [sp, #28]
 8007640:	1e5c      	subs	r4, r3, #1
 8007642:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8007644:	42a3      	cmp	r3, r4
 8007646:	bfbf      	itttt	lt
 8007648:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 800764a:	9a0e      	ldrlt	r2, [sp, #56]	@ 0x38
 800764c:	1ae3      	sublt	r3, r4, r3
 800764e:	18d2      	addlt	r2, r2, r3
 8007650:	bfa8      	it	ge
 8007652:	1b1c      	subge	r4, r3, r4
 8007654:	9b07      	ldr	r3, [sp, #28]
 8007656:	bfbe      	ittt	lt
 8007658:	940a      	strlt	r4, [sp, #40]	@ 0x28
 800765a:	920e      	strlt	r2, [sp, #56]	@ 0x38
 800765c:	2400      	movlt	r4, #0
 800765e:	2b00      	cmp	r3, #0
 8007660:	bfb5      	itete	lt
 8007662:	eba8 0603 	sublt.w	r6, r8, r3
 8007666:	4646      	movge	r6, r8
 8007668:	2300      	movlt	r3, #0
 800766a:	9b07      	ldrge	r3, [sp, #28]
 800766c:	e730      	b.n	80074d0 <_dtoa_r+0x730>
 800766e:	4646      	mov	r6, r8
 8007670:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8007672:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8007674:	e735      	b.n	80074e2 <_dtoa_r+0x742>
 8007676:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8007678:	e75c      	b.n	8007534 <_dtoa_r+0x794>
 800767a:	2300      	movs	r3, #0
 800767c:	e788      	b.n	8007590 <_dtoa_r+0x7f0>
 800767e:	9b02      	ldr	r3, [sp, #8]
 8007680:	e786      	b.n	8007590 <_dtoa_r+0x7f0>
 8007682:	2300      	movs	r3, #0
 8007684:	930a      	str	r3, [sp, #40]	@ 0x28
 8007686:	e788      	b.n	800759a <_dtoa_r+0x7fa>
 8007688:	d09f      	beq.n	80075ca <_dtoa_r+0x82a>
 800768a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800768c:	331c      	adds	r3, #28
 800768e:	441a      	add	r2, r3
 8007690:	4498      	add	r8, r3
 8007692:	441e      	add	r6, r3
 8007694:	9209      	str	r2, [sp, #36]	@ 0x24
 8007696:	e798      	b.n	80075ca <_dtoa_r+0x82a>
 8007698:	4603      	mov	r3, r0
 800769a:	e7f6      	b.n	800768a <_dtoa_r+0x8ea>
 800769c:	9b07      	ldr	r3, [sp, #28]
 800769e:	9704      	str	r7, [sp, #16]
 80076a0:	2b00      	cmp	r3, #0
 80076a2:	dc20      	bgt.n	80076e6 <_dtoa_r+0x946>
 80076a4:	9308      	str	r3, [sp, #32]
 80076a6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80076a8:	2b02      	cmp	r3, #2
 80076aa:	dd1e      	ble.n	80076ea <_dtoa_r+0x94a>
 80076ac:	9b08      	ldr	r3, [sp, #32]
 80076ae:	2b00      	cmp	r3, #0
 80076b0:	f47f aebc 	bne.w	800742c <_dtoa_r+0x68c>
 80076b4:	4621      	mov	r1, r4
 80076b6:	2205      	movs	r2, #5
 80076b8:	4658      	mov	r0, fp
 80076ba:	f000 f9f5 	bl	8007aa8 <__multadd>
 80076be:	4601      	mov	r1, r0
 80076c0:	4604      	mov	r4, r0
 80076c2:	4648      	mov	r0, r9
 80076c4:	f000 fc06 	bl	8007ed4 <__mcmp>
 80076c8:	2800      	cmp	r0, #0
 80076ca:	f77f aeaf 	ble.w	800742c <_dtoa_r+0x68c>
 80076ce:	2331      	movs	r3, #49	@ 0x31
 80076d0:	4656      	mov	r6, sl
 80076d2:	f806 3b01 	strb.w	r3, [r6], #1
 80076d6:	9b04      	ldr	r3, [sp, #16]
 80076d8:	3301      	adds	r3, #1
 80076da:	9304      	str	r3, [sp, #16]
 80076dc:	e6aa      	b.n	8007434 <_dtoa_r+0x694>
 80076de:	9c07      	ldr	r4, [sp, #28]
 80076e0:	9704      	str	r7, [sp, #16]
 80076e2:	4625      	mov	r5, r4
 80076e4:	e7f3      	b.n	80076ce <_dtoa_r+0x92e>
 80076e6:	9b07      	ldr	r3, [sp, #28]
 80076e8:	9308      	str	r3, [sp, #32]
 80076ea:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80076ec:	2b00      	cmp	r3, #0
 80076ee:	f000 8104 	beq.w	80078fa <_dtoa_r+0xb5a>
 80076f2:	2e00      	cmp	r6, #0
 80076f4:	dd05      	ble.n	8007702 <_dtoa_r+0x962>
 80076f6:	4629      	mov	r1, r5
 80076f8:	4632      	mov	r2, r6
 80076fa:	4658      	mov	r0, fp
 80076fc:	f000 fb7e 	bl	8007dfc <__lshift>
 8007700:	4605      	mov	r5, r0
 8007702:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8007704:	2b00      	cmp	r3, #0
 8007706:	d05a      	beq.n	80077be <_dtoa_r+0xa1e>
 8007708:	4658      	mov	r0, fp
 800770a:	6869      	ldr	r1, [r5, #4]
 800770c:	f000 f96a 	bl	80079e4 <_Balloc>
 8007710:	4606      	mov	r6, r0
 8007712:	b928      	cbnz	r0, 8007720 <_dtoa_r+0x980>
 8007714:	4602      	mov	r2, r0
 8007716:	f240 21ef 	movw	r1, #751	@ 0x2ef
 800771a:	4b83      	ldr	r3, [pc, #524]	@ (8007928 <_dtoa_r+0xb88>)
 800771c:	f7ff bb54 	b.w	8006dc8 <_dtoa_r+0x28>
 8007720:	692a      	ldr	r2, [r5, #16]
 8007722:	f105 010c 	add.w	r1, r5, #12
 8007726:	3202      	adds	r2, #2
 8007728:	0092      	lsls	r2, r2, #2
 800772a:	300c      	adds	r0, #12
 800772c:	f7ff fa81 	bl	8006c32 <memcpy>
 8007730:	2201      	movs	r2, #1
 8007732:	4631      	mov	r1, r6
 8007734:	4658      	mov	r0, fp
 8007736:	f000 fb61 	bl	8007dfc <__lshift>
 800773a:	462f      	mov	r7, r5
 800773c:	4605      	mov	r5, r0
 800773e:	f10a 0301 	add.w	r3, sl, #1
 8007742:	9307      	str	r3, [sp, #28]
 8007744:	9b08      	ldr	r3, [sp, #32]
 8007746:	4453      	add	r3, sl
 8007748:	930b      	str	r3, [sp, #44]	@ 0x2c
 800774a:	9b02      	ldr	r3, [sp, #8]
 800774c:	f003 0301 	and.w	r3, r3, #1
 8007750:	930a      	str	r3, [sp, #40]	@ 0x28
 8007752:	9b07      	ldr	r3, [sp, #28]
 8007754:	4621      	mov	r1, r4
 8007756:	3b01      	subs	r3, #1
 8007758:	4648      	mov	r0, r9
 800775a:	9302      	str	r3, [sp, #8]
 800775c:	f7ff fa96 	bl	8006c8c <quorem>
 8007760:	4639      	mov	r1, r7
 8007762:	9008      	str	r0, [sp, #32]
 8007764:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8007768:	4648      	mov	r0, r9
 800776a:	f000 fbb3 	bl	8007ed4 <__mcmp>
 800776e:	462a      	mov	r2, r5
 8007770:	9009      	str	r0, [sp, #36]	@ 0x24
 8007772:	4621      	mov	r1, r4
 8007774:	4658      	mov	r0, fp
 8007776:	f000 fbc9 	bl	8007f0c <__mdiff>
 800777a:	68c2      	ldr	r2, [r0, #12]
 800777c:	4606      	mov	r6, r0
 800777e:	bb02      	cbnz	r2, 80077c2 <_dtoa_r+0xa22>
 8007780:	4601      	mov	r1, r0
 8007782:	4648      	mov	r0, r9
 8007784:	f000 fba6 	bl	8007ed4 <__mcmp>
 8007788:	4602      	mov	r2, r0
 800778a:	4631      	mov	r1, r6
 800778c:	4658      	mov	r0, fp
 800778e:	920c      	str	r2, [sp, #48]	@ 0x30
 8007790:	f000 f968 	bl	8007a64 <_Bfree>
 8007794:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8007796:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8007798:	9e07      	ldr	r6, [sp, #28]
 800779a:	ea43 0102 	orr.w	r1, r3, r2
 800779e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80077a0:	4319      	orrs	r1, r3
 80077a2:	d110      	bne.n	80077c6 <_dtoa_r+0xa26>
 80077a4:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 80077a8:	d029      	beq.n	80077fe <_dtoa_r+0xa5e>
 80077aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80077ac:	2b00      	cmp	r3, #0
 80077ae:	dd02      	ble.n	80077b6 <_dtoa_r+0xa16>
 80077b0:	9b08      	ldr	r3, [sp, #32]
 80077b2:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 80077b6:	9b02      	ldr	r3, [sp, #8]
 80077b8:	f883 8000 	strb.w	r8, [r3]
 80077bc:	e63b      	b.n	8007436 <_dtoa_r+0x696>
 80077be:	4628      	mov	r0, r5
 80077c0:	e7bb      	b.n	800773a <_dtoa_r+0x99a>
 80077c2:	2201      	movs	r2, #1
 80077c4:	e7e1      	b.n	800778a <_dtoa_r+0x9ea>
 80077c6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80077c8:	2b00      	cmp	r3, #0
 80077ca:	db04      	blt.n	80077d6 <_dtoa_r+0xa36>
 80077cc:	9920      	ldr	r1, [sp, #128]	@ 0x80
 80077ce:	430b      	orrs	r3, r1
 80077d0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80077d2:	430b      	orrs	r3, r1
 80077d4:	d120      	bne.n	8007818 <_dtoa_r+0xa78>
 80077d6:	2a00      	cmp	r2, #0
 80077d8:	dded      	ble.n	80077b6 <_dtoa_r+0xa16>
 80077da:	4649      	mov	r1, r9
 80077dc:	2201      	movs	r2, #1
 80077de:	4658      	mov	r0, fp
 80077e0:	f000 fb0c 	bl	8007dfc <__lshift>
 80077e4:	4621      	mov	r1, r4
 80077e6:	4681      	mov	r9, r0
 80077e8:	f000 fb74 	bl	8007ed4 <__mcmp>
 80077ec:	2800      	cmp	r0, #0
 80077ee:	dc03      	bgt.n	80077f8 <_dtoa_r+0xa58>
 80077f0:	d1e1      	bne.n	80077b6 <_dtoa_r+0xa16>
 80077f2:	f018 0f01 	tst.w	r8, #1
 80077f6:	d0de      	beq.n	80077b6 <_dtoa_r+0xa16>
 80077f8:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 80077fc:	d1d8      	bne.n	80077b0 <_dtoa_r+0xa10>
 80077fe:	2339      	movs	r3, #57	@ 0x39
 8007800:	9a02      	ldr	r2, [sp, #8]
 8007802:	7013      	strb	r3, [r2, #0]
 8007804:	4633      	mov	r3, r6
 8007806:	461e      	mov	r6, r3
 8007808:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 800780c:	3b01      	subs	r3, #1
 800780e:	2a39      	cmp	r2, #57	@ 0x39
 8007810:	d052      	beq.n	80078b8 <_dtoa_r+0xb18>
 8007812:	3201      	adds	r2, #1
 8007814:	701a      	strb	r2, [r3, #0]
 8007816:	e60e      	b.n	8007436 <_dtoa_r+0x696>
 8007818:	2a00      	cmp	r2, #0
 800781a:	dd07      	ble.n	800782c <_dtoa_r+0xa8c>
 800781c:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8007820:	d0ed      	beq.n	80077fe <_dtoa_r+0xa5e>
 8007822:	9a02      	ldr	r2, [sp, #8]
 8007824:	f108 0301 	add.w	r3, r8, #1
 8007828:	7013      	strb	r3, [r2, #0]
 800782a:	e604      	b.n	8007436 <_dtoa_r+0x696>
 800782c:	9b07      	ldr	r3, [sp, #28]
 800782e:	9a07      	ldr	r2, [sp, #28]
 8007830:	f803 8c01 	strb.w	r8, [r3, #-1]
 8007834:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8007836:	4293      	cmp	r3, r2
 8007838:	d028      	beq.n	800788c <_dtoa_r+0xaec>
 800783a:	4649      	mov	r1, r9
 800783c:	2300      	movs	r3, #0
 800783e:	220a      	movs	r2, #10
 8007840:	4658      	mov	r0, fp
 8007842:	f000 f931 	bl	8007aa8 <__multadd>
 8007846:	42af      	cmp	r7, r5
 8007848:	4681      	mov	r9, r0
 800784a:	f04f 0300 	mov.w	r3, #0
 800784e:	f04f 020a 	mov.w	r2, #10
 8007852:	4639      	mov	r1, r7
 8007854:	4658      	mov	r0, fp
 8007856:	d107      	bne.n	8007868 <_dtoa_r+0xac8>
 8007858:	f000 f926 	bl	8007aa8 <__multadd>
 800785c:	4607      	mov	r7, r0
 800785e:	4605      	mov	r5, r0
 8007860:	9b07      	ldr	r3, [sp, #28]
 8007862:	3301      	adds	r3, #1
 8007864:	9307      	str	r3, [sp, #28]
 8007866:	e774      	b.n	8007752 <_dtoa_r+0x9b2>
 8007868:	f000 f91e 	bl	8007aa8 <__multadd>
 800786c:	4629      	mov	r1, r5
 800786e:	4607      	mov	r7, r0
 8007870:	2300      	movs	r3, #0
 8007872:	220a      	movs	r2, #10
 8007874:	4658      	mov	r0, fp
 8007876:	f000 f917 	bl	8007aa8 <__multadd>
 800787a:	4605      	mov	r5, r0
 800787c:	e7f0      	b.n	8007860 <_dtoa_r+0xac0>
 800787e:	9b08      	ldr	r3, [sp, #32]
 8007880:	2700      	movs	r7, #0
 8007882:	2b00      	cmp	r3, #0
 8007884:	bfcc      	ite	gt
 8007886:	461e      	movgt	r6, r3
 8007888:	2601      	movle	r6, #1
 800788a:	4456      	add	r6, sl
 800788c:	4649      	mov	r1, r9
 800788e:	2201      	movs	r2, #1
 8007890:	4658      	mov	r0, fp
 8007892:	f000 fab3 	bl	8007dfc <__lshift>
 8007896:	4621      	mov	r1, r4
 8007898:	4681      	mov	r9, r0
 800789a:	f000 fb1b 	bl	8007ed4 <__mcmp>
 800789e:	2800      	cmp	r0, #0
 80078a0:	dcb0      	bgt.n	8007804 <_dtoa_r+0xa64>
 80078a2:	d102      	bne.n	80078aa <_dtoa_r+0xb0a>
 80078a4:	f018 0f01 	tst.w	r8, #1
 80078a8:	d1ac      	bne.n	8007804 <_dtoa_r+0xa64>
 80078aa:	4633      	mov	r3, r6
 80078ac:	461e      	mov	r6, r3
 80078ae:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80078b2:	2a30      	cmp	r2, #48	@ 0x30
 80078b4:	d0fa      	beq.n	80078ac <_dtoa_r+0xb0c>
 80078b6:	e5be      	b.n	8007436 <_dtoa_r+0x696>
 80078b8:	459a      	cmp	sl, r3
 80078ba:	d1a4      	bne.n	8007806 <_dtoa_r+0xa66>
 80078bc:	9b04      	ldr	r3, [sp, #16]
 80078be:	3301      	adds	r3, #1
 80078c0:	9304      	str	r3, [sp, #16]
 80078c2:	2331      	movs	r3, #49	@ 0x31
 80078c4:	f88a 3000 	strb.w	r3, [sl]
 80078c8:	e5b5      	b.n	8007436 <_dtoa_r+0x696>
 80078ca:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80078cc:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 800792c <_dtoa_r+0xb8c>
 80078d0:	b11b      	cbz	r3, 80078da <_dtoa_r+0xb3a>
 80078d2:	f10a 0308 	add.w	r3, sl, #8
 80078d6:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 80078d8:	6013      	str	r3, [r2, #0]
 80078da:	4650      	mov	r0, sl
 80078dc:	b017      	add	sp, #92	@ 0x5c
 80078de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80078e2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80078e4:	2b01      	cmp	r3, #1
 80078e6:	f77f ae3d 	ble.w	8007564 <_dtoa_r+0x7c4>
 80078ea:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80078ec:	930a      	str	r3, [sp, #40]	@ 0x28
 80078ee:	2001      	movs	r0, #1
 80078f0:	e65b      	b.n	80075aa <_dtoa_r+0x80a>
 80078f2:	9b08      	ldr	r3, [sp, #32]
 80078f4:	2b00      	cmp	r3, #0
 80078f6:	f77f aed6 	ble.w	80076a6 <_dtoa_r+0x906>
 80078fa:	4656      	mov	r6, sl
 80078fc:	4621      	mov	r1, r4
 80078fe:	4648      	mov	r0, r9
 8007900:	f7ff f9c4 	bl	8006c8c <quorem>
 8007904:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8007908:	9b08      	ldr	r3, [sp, #32]
 800790a:	f806 8b01 	strb.w	r8, [r6], #1
 800790e:	eba6 020a 	sub.w	r2, r6, sl
 8007912:	4293      	cmp	r3, r2
 8007914:	ddb3      	ble.n	800787e <_dtoa_r+0xade>
 8007916:	4649      	mov	r1, r9
 8007918:	2300      	movs	r3, #0
 800791a:	220a      	movs	r2, #10
 800791c:	4658      	mov	r0, fp
 800791e:	f000 f8c3 	bl	8007aa8 <__multadd>
 8007922:	4681      	mov	r9, r0
 8007924:	e7ea      	b.n	80078fc <_dtoa_r+0xb5c>
 8007926:	bf00      	nop
 8007928:	08008aac 	.word	0x08008aac
 800792c:	08008a30 	.word	0x08008a30

08007930 <_free_r>:
 8007930:	b538      	push	{r3, r4, r5, lr}
 8007932:	4605      	mov	r5, r0
 8007934:	2900      	cmp	r1, #0
 8007936:	d040      	beq.n	80079ba <_free_r+0x8a>
 8007938:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800793c:	1f0c      	subs	r4, r1, #4
 800793e:	2b00      	cmp	r3, #0
 8007940:	bfb8      	it	lt
 8007942:	18e4      	addlt	r4, r4, r3
 8007944:	f7fe fa66 	bl	8005e14 <__malloc_lock>
 8007948:	4a1c      	ldr	r2, [pc, #112]	@ (80079bc <_free_r+0x8c>)
 800794a:	6813      	ldr	r3, [r2, #0]
 800794c:	b933      	cbnz	r3, 800795c <_free_r+0x2c>
 800794e:	6063      	str	r3, [r4, #4]
 8007950:	6014      	str	r4, [r2, #0]
 8007952:	4628      	mov	r0, r5
 8007954:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007958:	f7fe ba62 	b.w	8005e20 <__malloc_unlock>
 800795c:	42a3      	cmp	r3, r4
 800795e:	d908      	bls.n	8007972 <_free_r+0x42>
 8007960:	6820      	ldr	r0, [r4, #0]
 8007962:	1821      	adds	r1, r4, r0
 8007964:	428b      	cmp	r3, r1
 8007966:	bf01      	itttt	eq
 8007968:	6819      	ldreq	r1, [r3, #0]
 800796a:	685b      	ldreq	r3, [r3, #4]
 800796c:	1809      	addeq	r1, r1, r0
 800796e:	6021      	streq	r1, [r4, #0]
 8007970:	e7ed      	b.n	800794e <_free_r+0x1e>
 8007972:	461a      	mov	r2, r3
 8007974:	685b      	ldr	r3, [r3, #4]
 8007976:	b10b      	cbz	r3, 800797c <_free_r+0x4c>
 8007978:	42a3      	cmp	r3, r4
 800797a:	d9fa      	bls.n	8007972 <_free_r+0x42>
 800797c:	6811      	ldr	r1, [r2, #0]
 800797e:	1850      	adds	r0, r2, r1
 8007980:	42a0      	cmp	r0, r4
 8007982:	d10b      	bne.n	800799c <_free_r+0x6c>
 8007984:	6820      	ldr	r0, [r4, #0]
 8007986:	4401      	add	r1, r0
 8007988:	1850      	adds	r0, r2, r1
 800798a:	4283      	cmp	r3, r0
 800798c:	6011      	str	r1, [r2, #0]
 800798e:	d1e0      	bne.n	8007952 <_free_r+0x22>
 8007990:	6818      	ldr	r0, [r3, #0]
 8007992:	685b      	ldr	r3, [r3, #4]
 8007994:	4408      	add	r0, r1
 8007996:	6010      	str	r0, [r2, #0]
 8007998:	6053      	str	r3, [r2, #4]
 800799a:	e7da      	b.n	8007952 <_free_r+0x22>
 800799c:	d902      	bls.n	80079a4 <_free_r+0x74>
 800799e:	230c      	movs	r3, #12
 80079a0:	602b      	str	r3, [r5, #0]
 80079a2:	e7d6      	b.n	8007952 <_free_r+0x22>
 80079a4:	6820      	ldr	r0, [r4, #0]
 80079a6:	1821      	adds	r1, r4, r0
 80079a8:	428b      	cmp	r3, r1
 80079aa:	bf01      	itttt	eq
 80079ac:	6819      	ldreq	r1, [r3, #0]
 80079ae:	685b      	ldreq	r3, [r3, #4]
 80079b0:	1809      	addeq	r1, r1, r0
 80079b2:	6021      	streq	r1, [r4, #0]
 80079b4:	6063      	str	r3, [r4, #4]
 80079b6:	6054      	str	r4, [r2, #4]
 80079b8:	e7cb      	b.n	8007952 <_free_r+0x22>
 80079ba:	bd38      	pop	{r3, r4, r5, pc}
 80079bc:	20000488 	.word	0x20000488

080079c0 <__ascii_mbtowc>:
 80079c0:	b082      	sub	sp, #8
 80079c2:	b901      	cbnz	r1, 80079c6 <__ascii_mbtowc+0x6>
 80079c4:	a901      	add	r1, sp, #4
 80079c6:	b142      	cbz	r2, 80079da <__ascii_mbtowc+0x1a>
 80079c8:	b14b      	cbz	r3, 80079de <__ascii_mbtowc+0x1e>
 80079ca:	7813      	ldrb	r3, [r2, #0]
 80079cc:	600b      	str	r3, [r1, #0]
 80079ce:	7812      	ldrb	r2, [r2, #0]
 80079d0:	1e10      	subs	r0, r2, #0
 80079d2:	bf18      	it	ne
 80079d4:	2001      	movne	r0, #1
 80079d6:	b002      	add	sp, #8
 80079d8:	4770      	bx	lr
 80079da:	4610      	mov	r0, r2
 80079dc:	e7fb      	b.n	80079d6 <__ascii_mbtowc+0x16>
 80079de:	f06f 0001 	mvn.w	r0, #1
 80079e2:	e7f8      	b.n	80079d6 <__ascii_mbtowc+0x16>

080079e4 <_Balloc>:
 80079e4:	b570      	push	{r4, r5, r6, lr}
 80079e6:	69c6      	ldr	r6, [r0, #28]
 80079e8:	4604      	mov	r4, r0
 80079ea:	460d      	mov	r5, r1
 80079ec:	b976      	cbnz	r6, 8007a0c <_Balloc+0x28>
 80079ee:	2010      	movs	r0, #16
 80079f0:	f7fe f966 	bl	8005cc0 <malloc>
 80079f4:	4602      	mov	r2, r0
 80079f6:	61e0      	str	r0, [r4, #28]
 80079f8:	b920      	cbnz	r0, 8007a04 <_Balloc+0x20>
 80079fa:	216b      	movs	r1, #107	@ 0x6b
 80079fc:	4b17      	ldr	r3, [pc, #92]	@ (8007a5c <_Balloc+0x78>)
 80079fe:	4818      	ldr	r0, [pc, #96]	@ (8007a60 <_Balloc+0x7c>)
 8007a00:	f7ff f926 	bl	8006c50 <__assert_func>
 8007a04:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8007a08:	6006      	str	r6, [r0, #0]
 8007a0a:	60c6      	str	r6, [r0, #12]
 8007a0c:	69e6      	ldr	r6, [r4, #28]
 8007a0e:	68f3      	ldr	r3, [r6, #12]
 8007a10:	b183      	cbz	r3, 8007a34 <_Balloc+0x50>
 8007a12:	69e3      	ldr	r3, [r4, #28]
 8007a14:	68db      	ldr	r3, [r3, #12]
 8007a16:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8007a1a:	b9b8      	cbnz	r0, 8007a4c <_Balloc+0x68>
 8007a1c:	2101      	movs	r1, #1
 8007a1e:	fa01 f605 	lsl.w	r6, r1, r5
 8007a22:	1d72      	adds	r2, r6, #5
 8007a24:	4620      	mov	r0, r4
 8007a26:	0092      	lsls	r2, r2, #2
 8007a28:	f000 fded 	bl	8008606 <_calloc_r>
 8007a2c:	b160      	cbz	r0, 8007a48 <_Balloc+0x64>
 8007a2e:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8007a32:	e00e      	b.n	8007a52 <_Balloc+0x6e>
 8007a34:	2221      	movs	r2, #33	@ 0x21
 8007a36:	2104      	movs	r1, #4
 8007a38:	4620      	mov	r0, r4
 8007a3a:	f000 fde4 	bl	8008606 <_calloc_r>
 8007a3e:	69e3      	ldr	r3, [r4, #28]
 8007a40:	60f0      	str	r0, [r6, #12]
 8007a42:	68db      	ldr	r3, [r3, #12]
 8007a44:	2b00      	cmp	r3, #0
 8007a46:	d1e4      	bne.n	8007a12 <_Balloc+0x2e>
 8007a48:	2000      	movs	r0, #0
 8007a4a:	bd70      	pop	{r4, r5, r6, pc}
 8007a4c:	6802      	ldr	r2, [r0, #0]
 8007a4e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8007a52:	2300      	movs	r3, #0
 8007a54:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8007a58:	e7f7      	b.n	8007a4a <_Balloc+0x66>
 8007a5a:	bf00      	nop
 8007a5c:	08008a3d 	.word	0x08008a3d
 8007a60:	08008abd 	.word	0x08008abd

08007a64 <_Bfree>:
 8007a64:	b570      	push	{r4, r5, r6, lr}
 8007a66:	69c6      	ldr	r6, [r0, #28]
 8007a68:	4605      	mov	r5, r0
 8007a6a:	460c      	mov	r4, r1
 8007a6c:	b976      	cbnz	r6, 8007a8c <_Bfree+0x28>
 8007a6e:	2010      	movs	r0, #16
 8007a70:	f7fe f926 	bl	8005cc0 <malloc>
 8007a74:	4602      	mov	r2, r0
 8007a76:	61e8      	str	r0, [r5, #28]
 8007a78:	b920      	cbnz	r0, 8007a84 <_Bfree+0x20>
 8007a7a:	218f      	movs	r1, #143	@ 0x8f
 8007a7c:	4b08      	ldr	r3, [pc, #32]	@ (8007aa0 <_Bfree+0x3c>)
 8007a7e:	4809      	ldr	r0, [pc, #36]	@ (8007aa4 <_Bfree+0x40>)
 8007a80:	f7ff f8e6 	bl	8006c50 <__assert_func>
 8007a84:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8007a88:	6006      	str	r6, [r0, #0]
 8007a8a:	60c6      	str	r6, [r0, #12]
 8007a8c:	b13c      	cbz	r4, 8007a9e <_Bfree+0x3a>
 8007a8e:	69eb      	ldr	r3, [r5, #28]
 8007a90:	6862      	ldr	r2, [r4, #4]
 8007a92:	68db      	ldr	r3, [r3, #12]
 8007a94:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8007a98:	6021      	str	r1, [r4, #0]
 8007a9a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8007a9e:	bd70      	pop	{r4, r5, r6, pc}
 8007aa0:	08008a3d 	.word	0x08008a3d
 8007aa4:	08008abd 	.word	0x08008abd

08007aa8 <__multadd>:
 8007aa8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007aac:	4607      	mov	r7, r0
 8007aae:	460c      	mov	r4, r1
 8007ab0:	461e      	mov	r6, r3
 8007ab2:	2000      	movs	r0, #0
 8007ab4:	690d      	ldr	r5, [r1, #16]
 8007ab6:	f101 0c14 	add.w	ip, r1, #20
 8007aba:	f8dc 3000 	ldr.w	r3, [ip]
 8007abe:	3001      	adds	r0, #1
 8007ac0:	b299      	uxth	r1, r3
 8007ac2:	fb02 6101 	mla	r1, r2, r1, r6
 8007ac6:	0c1e      	lsrs	r6, r3, #16
 8007ac8:	0c0b      	lsrs	r3, r1, #16
 8007aca:	fb02 3306 	mla	r3, r2, r6, r3
 8007ace:	b289      	uxth	r1, r1
 8007ad0:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8007ad4:	4285      	cmp	r5, r0
 8007ad6:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8007ada:	f84c 1b04 	str.w	r1, [ip], #4
 8007ade:	dcec      	bgt.n	8007aba <__multadd+0x12>
 8007ae0:	b30e      	cbz	r6, 8007b26 <__multadd+0x7e>
 8007ae2:	68a3      	ldr	r3, [r4, #8]
 8007ae4:	42ab      	cmp	r3, r5
 8007ae6:	dc19      	bgt.n	8007b1c <__multadd+0x74>
 8007ae8:	6861      	ldr	r1, [r4, #4]
 8007aea:	4638      	mov	r0, r7
 8007aec:	3101      	adds	r1, #1
 8007aee:	f7ff ff79 	bl	80079e4 <_Balloc>
 8007af2:	4680      	mov	r8, r0
 8007af4:	b928      	cbnz	r0, 8007b02 <__multadd+0x5a>
 8007af6:	4602      	mov	r2, r0
 8007af8:	21ba      	movs	r1, #186	@ 0xba
 8007afa:	4b0c      	ldr	r3, [pc, #48]	@ (8007b2c <__multadd+0x84>)
 8007afc:	480c      	ldr	r0, [pc, #48]	@ (8007b30 <__multadd+0x88>)
 8007afe:	f7ff f8a7 	bl	8006c50 <__assert_func>
 8007b02:	6922      	ldr	r2, [r4, #16]
 8007b04:	f104 010c 	add.w	r1, r4, #12
 8007b08:	3202      	adds	r2, #2
 8007b0a:	0092      	lsls	r2, r2, #2
 8007b0c:	300c      	adds	r0, #12
 8007b0e:	f7ff f890 	bl	8006c32 <memcpy>
 8007b12:	4621      	mov	r1, r4
 8007b14:	4638      	mov	r0, r7
 8007b16:	f7ff ffa5 	bl	8007a64 <_Bfree>
 8007b1a:	4644      	mov	r4, r8
 8007b1c:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8007b20:	3501      	adds	r5, #1
 8007b22:	615e      	str	r6, [r3, #20]
 8007b24:	6125      	str	r5, [r4, #16]
 8007b26:	4620      	mov	r0, r4
 8007b28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007b2c:	08008aac 	.word	0x08008aac
 8007b30:	08008abd 	.word	0x08008abd

08007b34 <__hi0bits>:
 8007b34:	4603      	mov	r3, r0
 8007b36:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8007b3a:	bf3a      	itte	cc
 8007b3c:	0403      	lslcc	r3, r0, #16
 8007b3e:	2010      	movcc	r0, #16
 8007b40:	2000      	movcs	r0, #0
 8007b42:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8007b46:	bf3c      	itt	cc
 8007b48:	021b      	lslcc	r3, r3, #8
 8007b4a:	3008      	addcc	r0, #8
 8007b4c:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8007b50:	bf3c      	itt	cc
 8007b52:	011b      	lslcc	r3, r3, #4
 8007b54:	3004      	addcc	r0, #4
 8007b56:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007b5a:	bf3c      	itt	cc
 8007b5c:	009b      	lslcc	r3, r3, #2
 8007b5e:	3002      	addcc	r0, #2
 8007b60:	2b00      	cmp	r3, #0
 8007b62:	db05      	blt.n	8007b70 <__hi0bits+0x3c>
 8007b64:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8007b68:	f100 0001 	add.w	r0, r0, #1
 8007b6c:	bf08      	it	eq
 8007b6e:	2020      	moveq	r0, #32
 8007b70:	4770      	bx	lr

08007b72 <__lo0bits>:
 8007b72:	6803      	ldr	r3, [r0, #0]
 8007b74:	4602      	mov	r2, r0
 8007b76:	f013 0007 	ands.w	r0, r3, #7
 8007b7a:	d00b      	beq.n	8007b94 <__lo0bits+0x22>
 8007b7c:	07d9      	lsls	r1, r3, #31
 8007b7e:	d421      	bmi.n	8007bc4 <__lo0bits+0x52>
 8007b80:	0798      	lsls	r0, r3, #30
 8007b82:	bf49      	itett	mi
 8007b84:	085b      	lsrmi	r3, r3, #1
 8007b86:	089b      	lsrpl	r3, r3, #2
 8007b88:	2001      	movmi	r0, #1
 8007b8a:	6013      	strmi	r3, [r2, #0]
 8007b8c:	bf5c      	itt	pl
 8007b8e:	2002      	movpl	r0, #2
 8007b90:	6013      	strpl	r3, [r2, #0]
 8007b92:	4770      	bx	lr
 8007b94:	b299      	uxth	r1, r3
 8007b96:	b909      	cbnz	r1, 8007b9c <__lo0bits+0x2a>
 8007b98:	2010      	movs	r0, #16
 8007b9a:	0c1b      	lsrs	r3, r3, #16
 8007b9c:	b2d9      	uxtb	r1, r3
 8007b9e:	b909      	cbnz	r1, 8007ba4 <__lo0bits+0x32>
 8007ba0:	3008      	adds	r0, #8
 8007ba2:	0a1b      	lsrs	r3, r3, #8
 8007ba4:	0719      	lsls	r1, r3, #28
 8007ba6:	bf04      	itt	eq
 8007ba8:	091b      	lsreq	r3, r3, #4
 8007baa:	3004      	addeq	r0, #4
 8007bac:	0799      	lsls	r1, r3, #30
 8007bae:	bf04      	itt	eq
 8007bb0:	089b      	lsreq	r3, r3, #2
 8007bb2:	3002      	addeq	r0, #2
 8007bb4:	07d9      	lsls	r1, r3, #31
 8007bb6:	d403      	bmi.n	8007bc0 <__lo0bits+0x4e>
 8007bb8:	085b      	lsrs	r3, r3, #1
 8007bba:	f100 0001 	add.w	r0, r0, #1
 8007bbe:	d003      	beq.n	8007bc8 <__lo0bits+0x56>
 8007bc0:	6013      	str	r3, [r2, #0]
 8007bc2:	4770      	bx	lr
 8007bc4:	2000      	movs	r0, #0
 8007bc6:	4770      	bx	lr
 8007bc8:	2020      	movs	r0, #32
 8007bca:	4770      	bx	lr

08007bcc <__i2b>:
 8007bcc:	b510      	push	{r4, lr}
 8007bce:	460c      	mov	r4, r1
 8007bd0:	2101      	movs	r1, #1
 8007bd2:	f7ff ff07 	bl	80079e4 <_Balloc>
 8007bd6:	4602      	mov	r2, r0
 8007bd8:	b928      	cbnz	r0, 8007be6 <__i2b+0x1a>
 8007bda:	f240 1145 	movw	r1, #325	@ 0x145
 8007bde:	4b04      	ldr	r3, [pc, #16]	@ (8007bf0 <__i2b+0x24>)
 8007be0:	4804      	ldr	r0, [pc, #16]	@ (8007bf4 <__i2b+0x28>)
 8007be2:	f7ff f835 	bl	8006c50 <__assert_func>
 8007be6:	2301      	movs	r3, #1
 8007be8:	6144      	str	r4, [r0, #20]
 8007bea:	6103      	str	r3, [r0, #16]
 8007bec:	bd10      	pop	{r4, pc}
 8007bee:	bf00      	nop
 8007bf0:	08008aac 	.word	0x08008aac
 8007bf4:	08008abd 	.word	0x08008abd

08007bf8 <__multiply>:
 8007bf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007bfc:	4614      	mov	r4, r2
 8007bfe:	690a      	ldr	r2, [r1, #16]
 8007c00:	6923      	ldr	r3, [r4, #16]
 8007c02:	460f      	mov	r7, r1
 8007c04:	429a      	cmp	r2, r3
 8007c06:	bfa2      	ittt	ge
 8007c08:	4623      	movge	r3, r4
 8007c0a:	460c      	movge	r4, r1
 8007c0c:	461f      	movge	r7, r3
 8007c0e:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8007c12:	f8d7 9010 	ldr.w	r9, [r7, #16]
 8007c16:	68a3      	ldr	r3, [r4, #8]
 8007c18:	6861      	ldr	r1, [r4, #4]
 8007c1a:	eb0a 0609 	add.w	r6, sl, r9
 8007c1e:	42b3      	cmp	r3, r6
 8007c20:	b085      	sub	sp, #20
 8007c22:	bfb8      	it	lt
 8007c24:	3101      	addlt	r1, #1
 8007c26:	f7ff fedd 	bl	80079e4 <_Balloc>
 8007c2a:	b930      	cbnz	r0, 8007c3a <__multiply+0x42>
 8007c2c:	4602      	mov	r2, r0
 8007c2e:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8007c32:	4b43      	ldr	r3, [pc, #268]	@ (8007d40 <__multiply+0x148>)
 8007c34:	4843      	ldr	r0, [pc, #268]	@ (8007d44 <__multiply+0x14c>)
 8007c36:	f7ff f80b 	bl	8006c50 <__assert_func>
 8007c3a:	f100 0514 	add.w	r5, r0, #20
 8007c3e:	462b      	mov	r3, r5
 8007c40:	2200      	movs	r2, #0
 8007c42:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8007c46:	4543      	cmp	r3, r8
 8007c48:	d321      	bcc.n	8007c8e <__multiply+0x96>
 8007c4a:	f107 0114 	add.w	r1, r7, #20
 8007c4e:	f104 0214 	add.w	r2, r4, #20
 8007c52:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 8007c56:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 8007c5a:	9302      	str	r3, [sp, #8]
 8007c5c:	1b13      	subs	r3, r2, r4
 8007c5e:	3b15      	subs	r3, #21
 8007c60:	f023 0303 	bic.w	r3, r3, #3
 8007c64:	3304      	adds	r3, #4
 8007c66:	f104 0715 	add.w	r7, r4, #21
 8007c6a:	42ba      	cmp	r2, r7
 8007c6c:	bf38      	it	cc
 8007c6e:	2304      	movcc	r3, #4
 8007c70:	9301      	str	r3, [sp, #4]
 8007c72:	9b02      	ldr	r3, [sp, #8]
 8007c74:	9103      	str	r1, [sp, #12]
 8007c76:	428b      	cmp	r3, r1
 8007c78:	d80c      	bhi.n	8007c94 <__multiply+0x9c>
 8007c7a:	2e00      	cmp	r6, #0
 8007c7c:	dd03      	ble.n	8007c86 <__multiply+0x8e>
 8007c7e:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8007c82:	2b00      	cmp	r3, #0
 8007c84:	d05a      	beq.n	8007d3c <__multiply+0x144>
 8007c86:	6106      	str	r6, [r0, #16]
 8007c88:	b005      	add	sp, #20
 8007c8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007c8e:	f843 2b04 	str.w	r2, [r3], #4
 8007c92:	e7d8      	b.n	8007c46 <__multiply+0x4e>
 8007c94:	f8b1 a000 	ldrh.w	sl, [r1]
 8007c98:	f1ba 0f00 	cmp.w	sl, #0
 8007c9c:	d023      	beq.n	8007ce6 <__multiply+0xee>
 8007c9e:	46a9      	mov	r9, r5
 8007ca0:	f04f 0c00 	mov.w	ip, #0
 8007ca4:	f104 0e14 	add.w	lr, r4, #20
 8007ca8:	f85e 7b04 	ldr.w	r7, [lr], #4
 8007cac:	f8d9 3000 	ldr.w	r3, [r9]
 8007cb0:	fa1f fb87 	uxth.w	fp, r7
 8007cb4:	b29b      	uxth	r3, r3
 8007cb6:	fb0a 330b 	mla	r3, sl, fp, r3
 8007cba:	4463      	add	r3, ip
 8007cbc:	f8d9 c000 	ldr.w	ip, [r9]
 8007cc0:	0c3f      	lsrs	r7, r7, #16
 8007cc2:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8007cc6:	fb0a c707 	mla	r7, sl, r7, ip
 8007cca:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 8007cce:	b29b      	uxth	r3, r3
 8007cd0:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8007cd4:	4572      	cmp	r2, lr
 8007cd6:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8007cda:	f849 3b04 	str.w	r3, [r9], #4
 8007cde:	d8e3      	bhi.n	8007ca8 <__multiply+0xb0>
 8007ce0:	9b01      	ldr	r3, [sp, #4]
 8007ce2:	f845 c003 	str.w	ip, [r5, r3]
 8007ce6:	9b03      	ldr	r3, [sp, #12]
 8007ce8:	3104      	adds	r1, #4
 8007cea:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8007cee:	f1b9 0f00 	cmp.w	r9, #0
 8007cf2:	d021      	beq.n	8007d38 <__multiply+0x140>
 8007cf4:	46ae      	mov	lr, r5
 8007cf6:	f04f 0a00 	mov.w	sl, #0
 8007cfa:	682b      	ldr	r3, [r5, #0]
 8007cfc:	f104 0c14 	add.w	ip, r4, #20
 8007d00:	f8bc b000 	ldrh.w	fp, [ip]
 8007d04:	f8be 7002 	ldrh.w	r7, [lr, #2]
 8007d08:	b29b      	uxth	r3, r3
 8007d0a:	fb09 770b 	mla	r7, r9, fp, r7
 8007d0e:	4457      	add	r7, sl
 8007d10:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8007d14:	f84e 3b04 	str.w	r3, [lr], #4
 8007d18:	f85c 3b04 	ldr.w	r3, [ip], #4
 8007d1c:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8007d20:	f8be 3000 	ldrh.w	r3, [lr]
 8007d24:	4562      	cmp	r2, ip
 8007d26:	fb09 330a 	mla	r3, r9, sl, r3
 8007d2a:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 8007d2e:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8007d32:	d8e5      	bhi.n	8007d00 <__multiply+0x108>
 8007d34:	9f01      	ldr	r7, [sp, #4]
 8007d36:	51eb      	str	r3, [r5, r7]
 8007d38:	3504      	adds	r5, #4
 8007d3a:	e79a      	b.n	8007c72 <__multiply+0x7a>
 8007d3c:	3e01      	subs	r6, #1
 8007d3e:	e79c      	b.n	8007c7a <__multiply+0x82>
 8007d40:	08008aac 	.word	0x08008aac
 8007d44:	08008abd 	.word	0x08008abd

08007d48 <__pow5mult>:
 8007d48:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007d4c:	4615      	mov	r5, r2
 8007d4e:	f012 0203 	ands.w	r2, r2, #3
 8007d52:	4607      	mov	r7, r0
 8007d54:	460e      	mov	r6, r1
 8007d56:	d007      	beq.n	8007d68 <__pow5mult+0x20>
 8007d58:	4c25      	ldr	r4, [pc, #148]	@ (8007df0 <__pow5mult+0xa8>)
 8007d5a:	3a01      	subs	r2, #1
 8007d5c:	2300      	movs	r3, #0
 8007d5e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8007d62:	f7ff fea1 	bl	8007aa8 <__multadd>
 8007d66:	4606      	mov	r6, r0
 8007d68:	10ad      	asrs	r5, r5, #2
 8007d6a:	d03d      	beq.n	8007de8 <__pow5mult+0xa0>
 8007d6c:	69fc      	ldr	r4, [r7, #28]
 8007d6e:	b97c      	cbnz	r4, 8007d90 <__pow5mult+0x48>
 8007d70:	2010      	movs	r0, #16
 8007d72:	f7fd ffa5 	bl	8005cc0 <malloc>
 8007d76:	4602      	mov	r2, r0
 8007d78:	61f8      	str	r0, [r7, #28]
 8007d7a:	b928      	cbnz	r0, 8007d88 <__pow5mult+0x40>
 8007d7c:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8007d80:	4b1c      	ldr	r3, [pc, #112]	@ (8007df4 <__pow5mult+0xac>)
 8007d82:	481d      	ldr	r0, [pc, #116]	@ (8007df8 <__pow5mult+0xb0>)
 8007d84:	f7fe ff64 	bl	8006c50 <__assert_func>
 8007d88:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8007d8c:	6004      	str	r4, [r0, #0]
 8007d8e:	60c4      	str	r4, [r0, #12]
 8007d90:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8007d94:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8007d98:	b94c      	cbnz	r4, 8007dae <__pow5mult+0x66>
 8007d9a:	f240 2171 	movw	r1, #625	@ 0x271
 8007d9e:	4638      	mov	r0, r7
 8007da0:	f7ff ff14 	bl	8007bcc <__i2b>
 8007da4:	2300      	movs	r3, #0
 8007da6:	4604      	mov	r4, r0
 8007da8:	f8c8 0008 	str.w	r0, [r8, #8]
 8007dac:	6003      	str	r3, [r0, #0]
 8007dae:	f04f 0900 	mov.w	r9, #0
 8007db2:	07eb      	lsls	r3, r5, #31
 8007db4:	d50a      	bpl.n	8007dcc <__pow5mult+0x84>
 8007db6:	4631      	mov	r1, r6
 8007db8:	4622      	mov	r2, r4
 8007dba:	4638      	mov	r0, r7
 8007dbc:	f7ff ff1c 	bl	8007bf8 <__multiply>
 8007dc0:	4680      	mov	r8, r0
 8007dc2:	4631      	mov	r1, r6
 8007dc4:	4638      	mov	r0, r7
 8007dc6:	f7ff fe4d 	bl	8007a64 <_Bfree>
 8007dca:	4646      	mov	r6, r8
 8007dcc:	106d      	asrs	r5, r5, #1
 8007dce:	d00b      	beq.n	8007de8 <__pow5mult+0xa0>
 8007dd0:	6820      	ldr	r0, [r4, #0]
 8007dd2:	b938      	cbnz	r0, 8007de4 <__pow5mult+0x9c>
 8007dd4:	4622      	mov	r2, r4
 8007dd6:	4621      	mov	r1, r4
 8007dd8:	4638      	mov	r0, r7
 8007dda:	f7ff ff0d 	bl	8007bf8 <__multiply>
 8007dde:	6020      	str	r0, [r4, #0]
 8007de0:	f8c0 9000 	str.w	r9, [r0]
 8007de4:	4604      	mov	r4, r0
 8007de6:	e7e4      	b.n	8007db2 <__pow5mult+0x6a>
 8007de8:	4630      	mov	r0, r6
 8007dea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007dee:	bf00      	nop
 8007df0:	08008b18 	.word	0x08008b18
 8007df4:	08008a3d 	.word	0x08008a3d
 8007df8:	08008abd 	.word	0x08008abd

08007dfc <__lshift>:
 8007dfc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007e00:	460c      	mov	r4, r1
 8007e02:	4607      	mov	r7, r0
 8007e04:	4691      	mov	r9, r2
 8007e06:	6923      	ldr	r3, [r4, #16]
 8007e08:	6849      	ldr	r1, [r1, #4]
 8007e0a:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8007e0e:	68a3      	ldr	r3, [r4, #8]
 8007e10:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8007e14:	f108 0601 	add.w	r6, r8, #1
 8007e18:	42b3      	cmp	r3, r6
 8007e1a:	db0b      	blt.n	8007e34 <__lshift+0x38>
 8007e1c:	4638      	mov	r0, r7
 8007e1e:	f7ff fde1 	bl	80079e4 <_Balloc>
 8007e22:	4605      	mov	r5, r0
 8007e24:	b948      	cbnz	r0, 8007e3a <__lshift+0x3e>
 8007e26:	4602      	mov	r2, r0
 8007e28:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8007e2c:	4b27      	ldr	r3, [pc, #156]	@ (8007ecc <__lshift+0xd0>)
 8007e2e:	4828      	ldr	r0, [pc, #160]	@ (8007ed0 <__lshift+0xd4>)
 8007e30:	f7fe ff0e 	bl	8006c50 <__assert_func>
 8007e34:	3101      	adds	r1, #1
 8007e36:	005b      	lsls	r3, r3, #1
 8007e38:	e7ee      	b.n	8007e18 <__lshift+0x1c>
 8007e3a:	2300      	movs	r3, #0
 8007e3c:	f100 0114 	add.w	r1, r0, #20
 8007e40:	f100 0210 	add.w	r2, r0, #16
 8007e44:	4618      	mov	r0, r3
 8007e46:	4553      	cmp	r3, sl
 8007e48:	db33      	blt.n	8007eb2 <__lshift+0xb6>
 8007e4a:	6920      	ldr	r0, [r4, #16]
 8007e4c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8007e50:	f104 0314 	add.w	r3, r4, #20
 8007e54:	f019 091f 	ands.w	r9, r9, #31
 8007e58:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8007e5c:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8007e60:	d02b      	beq.n	8007eba <__lshift+0xbe>
 8007e62:	468a      	mov	sl, r1
 8007e64:	2200      	movs	r2, #0
 8007e66:	f1c9 0e20 	rsb	lr, r9, #32
 8007e6a:	6818      	ldr	r0, [r3, #0]
 8007e6c:	fa00 f009 	lsl.w	r0, r0, r9
 8007e70:	4310      	orrs	r0, r2
 8007e72:	f84a 0b04 	str.w	r0, [sl], #4
 8007e76:	f853 2b04 	ldr.w	r2, [r3], #4
 8007e7a:	459c      	cmp	ip, r3
 8007e7c:	fa22 f20e 	lsr.w	r2, r2, lr
 8007e80:	d8f3      	bhi.n	8007e6a <__lshift+0x6e>
 8007e82:	ebac 0304 	sub.w	r3, ip, r4
 8007e86:	3b15      	subs	r3, #21
 8007e88:	f023 0303 	bic.w	r3, r3, #3
 8007e8c:	3304      	adds	r3, #4
 8007e8e:	f104 0015 	add.w	r0, r4, #21
 8007e92:	4584      	cmp	ip, r0
 8007e94:	bf38      	it	cc
 8007e96:	2304      	movcc	r3, #4
 8007e98:	50ca      	str	r2, [r1, r3]
 8007e9a:	b10a      	cbz	r2, 8007ea0 <__lshift+0xa4>
 8007e9c:	f108 0602 	add.w	r6, r8, #2
 8007ea0:	3e01      	subs	r6, #1
 8007ea2:	4638      	mov	r0, r7
 8007ea4:	4621      	mov	r1, r4
 8007ea6:	612e      	str	r6, [r5, #16]
 8007ea8:	f7ff fddc 	bl	8007a64 <_Bfree>
 8007eac:	4628      	mov	r0, r5
 8007eae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007eb2:	f842 0f04 	str.w	r0, [r2, #4]!
 8007eb6:	3301      	adds	r3, #1
 8007eb8:	e7c5      	b.n	8007e46 <__lshift+0x4a>
 8007eba:	3904      	subs	r1, #4
 8007ebc:	f853 2b04 	ldr.w	r2, [r3], #4
 8007ec0:	459c      	cmp	ip, r3
 8007ec2:	f841 2f04 	str.w	r2, [r1, #4]!
 8007ec6:	d8f9      	bhi.n	8007ebc <__lshift+0xc0>
 8007ec8:	e7ea      	b.n	8007ea0 <__lshift+0xa4>
 8007eca:	bf00      	nop
 8007ecc:	08008aac 	.word	0x08008aac
 8007ed0:	08008abd 	.word	0x08008abd

08007ed4 <__mcmp>:
 8007ed4:	4603      	mov	r3, r0
 8007ed6:	690a      	ldr	r2, [r1, #16]
 8007ed8:	6900      	ldr	r0, [r0, #16]
 8007eda:	b530      	push	{r4, r5, lr}
 8007edc:	1a80      	subs	r0, r0, r2
 8007ede:	d10e      	bne.n	8007efe <__mcmp+0x2a>
 8007ee0:	3314      	adds	r3, #20
 8007ee2:	3114      	adds	r1, #20
 8007ee4:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8007ee8:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8007eec:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8007ef0:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8007ef4:	4295      	cmp	r5, r2
 8007ef6:	d003      	beq.n	8007f00 <__mcmp+0x2c>
 8007ef8:	d205      	bcs.n	8007f06 <__mcmp+0x32>
 8007efa:	f04f 30ff 	mov.w	r0, #4294967295
 8007efe:	bd30      	pop	{r4, r5, pc}
 8007f00:	42a3      	cmp	r3, r4
 8007f02:	d3f3      	bcc.n	8007eec <__mcmp+0x18>
 8007f04:	e7fb      	b.n	8007efe <__mcmp+0x2a>
 8007f06:	2001      	movs	r0, #1
 8007f08:	e7f9      	b.n	8007efe <__mcmp+0x2a>
	...

08007f0c <__mdiff>:
 8007f0c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007f10:	4689      	mov	r9, r1
 8007f12:	4606      	mov	r6, r0
 8007f14:	4611      	mov	r1, r2
 8007f16:	4648      	mov	r0, r9
 8007f18:	4614      	mov	r4, r2
 8007f1a:	f7ff ffdb 	bl	8007ed4 <__mcmp>
 8007f1e:	1e05      	subs	r5, r0, #0
 8007f20:	d112      	bne.n	8007f48 <__mdiff+0x3c>
 8007f22:	4629      	mov	r1, r5
 8007f24:	4630      	mov	r0, r6
 8007f26:	f7ff fd5d 	bl	80079e4 <_Balloc>
 8007f2a:	4602      	mov	r2, r0
 8007f2c:	b928      	cbnz	r0, 8007f3a <__mdiff+0x2e>
 8007f2e:	f240 2137 	movw	r1, #567	@ 0x237
 8007f32:	4b3e      	ldr	r3, [pc, #248]	@ (800802c <__mdiff+0x120>)
 8007f34:	483e      	ldr	r0, [pc, #248]	@ (8008030 <__mdiff+0x124>)
 8007f36:	f7fe fe8b 	bl	8006c50 <__assert_func>
 8007f3a:	2301      	movs	r3, #1
 8007f3c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8007f40:	4610      	mov	r0, r2
 8007f42:	b003      	add	sp, #12
 8007f44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007f48:	bfbc      	itt	lt
 8007f4a:	464b      	movlt	r3, r9
 8007f4c:	46a1      	movlt	r9, r4
 8007f4e:	4630      	mov	r0, r6
 8007f50:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8007f54:	bfba      	itte	lt
 8007f56:	461c      	movlt	r4, r3
 8007f58:	2501      	movlt	r5, #1
 8007f5a:	2500      	movge	r5, #0
 8007f5c:	f7ff fd42 	bl	80079e4 <_Balloc>
 8007f60:	4602      	mov	r2, r0
 8007f62:	b918      	cbnz	r0, 8007f6c <__mdiff+0x60>
 8007f64:	f240 2145 	movw	r1, #581	@ 0x245
 8007f68:	4b30      	ldr	r3, [pc, #192]	@ (800802c <__mdiff+0x120>)
 8007f6a:	e7e3      	b.n	8007f34 <__mdiff+0x28>
 8007f6c:	f100 0b14 	add.w	fp, r0, #20
 8007f70:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8007f74:	f109 0310 	add.w	r3, r9, #16
 8007f78:	60c5      	str	r5, [r0, #12]
 8007f7a:	f04f 0c00 	mov.w	ip, #0
 8007f7e:	f109 0514 	add.w	r5, r9, #20
 8007f82:	46d9      	mov	r9, fp
 8007f84:	6926      	ldr	r6, [r4, #16]
 8007f86:	f104 0e14 	add.w	lr, r4, #20
 8007f8a:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8007f8e:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8007f92:	9301      	str	r3, [sp, #4]
 8007f94:	9b01      	ldr	r3, [sp, #4]
 8007f96:	f85e 0b04 	ldr.w	r0, [lr], #4
 8007f9a:	f853 af04 	ldr.w	sl, [r3, #4]!
 8007f9e:	b281      	uxth	r1, r0
 8007fa0:	9301      	str	r3, [sp, #4]
 8007fa2:	fa1f f38a 	uxth.w	r3, sl
 8007fa6:	1a5b      	subs	r3, r3, r1
 8007fa8:	0c00      	lsrs	r0, r0, #16
 8007faa:	4463      	add	r3, ip
 8007fac:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8007fb0:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8007fb4:	b29b      	uxth	r3, r3
 8007fb6:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8007fba:	4576      	cmp	r6, lr
 8007fbc:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8007fc0:	f849 3b04 	str.w	r3, [r9], #4
 8007fc4:	d8e6      	bhi.n	8007f94 <__mdiff+0x88>
 8007fc6:	1b33      	subs	r3, r6, r4
 8007fc8:	3b15      	subs	r3, #21
 8007fca:	f023 0303 	bic.w	r3, r3, #3
 8007fce:	3415      	adds	r4, #21
 8007fd0:	3304      	adds	r3, #4
 8007fd2:	42a6      	cmp	r6, r4
 8007fd4:	bf38      	it	cc
 8007fd6:	2304      	movcc	r3, #4
 8007fd8:	441d      	add	r5, r3
 8007fda:	445b      	add	r3, fp
 8007fdc:	461e      	mov	r6, r3
 8007fde:	462c      	mov	r4, r5
 8007fe0:	4544      	cmp	r4, r8
 8007fe2:	d30e      	bcc.n	8008002 <__mdiff+0xf6>
 8007fe4:	f108 0103 	add.w	r1, r8, #3
 8007fe8:	1b49      	subs	r1, r1, r5
 8007fea:	f021 0103 	bic.w	r1, r1, #3
 8007fee:	3d03      	subs	r5, #3
 8007ff0:	45a8      	cmp	r8, r5
 8007ff2:	bf38      	it	cc
 8007ff4:	2100      	movcc	r1, #0
 8007ff6:	440b      	add	r3, r1
 8007ff8:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8007ffc:	b199      	cbz	r1, 8008026 <__mdiff+0x11a>
 8007ffe:	6117      	str	r7, [r2, #16]
 8008000:	e79e      	b.n	8007f40 <__mdiff+0x34>
 8008002:	46e6      	mov	lr, ip
 8008004:	f854 1b04 	ldr.w	r1, [r4], #4
 8008008:	fa1f fc81 	uxth.w	ip, r1
 800800c:	44f4      	add	ip, lr
 800800e:	0c08      	lsrs	r0, r1, #16
 8008010:	4471      	add	r1, lr
 8008012:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8008016:	b289      	uxth	r1, r1
 8008018:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800801c:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8008020:	f846 1b04 	str.w	r1, [r6], #4
 8008024:	e7dc      	b.n	8007fe0 <__mdiff+0xd4>
 8008026:	3f01      	subs	r7, #1
 8008028:	e7e6      	b.n	8007ff8 <__mdiff+0xec>
 800802a:	bf00      	nop
 800802c:	08008aac 	.word	0x08008aac
 8008030:	08008abd 	.word	0x08008abd

08008034 <__d2b>:
 8008034:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
 8008038:	2101      	movs	r1, #1
 800803a:	4690      	mov	r8, r2
 800803c:	4699      	mov	r9, r3
 800803e:	9e08      	ldr	r6, [sp, #32]
 8008040:	f7ff fcd0 	bl	80079e4 <_Balloc>
 8008044:	4604      	mov	r4, r0
 8008046:	b930      	cbnz	r0, 8008056 <__d2b+0x22>
 8008048:	4602      	mov	r2, r0
 800804a:	f240 310f 	movw	r1, #783	@ 0x30f
 800804e:	4b23      	ldr	r3, [pc, #140]	@ (80080dc <__d2b+0xa8>)
 8008050:	4823      	ldr	r0, [pc, #140]	@ (80080e0 <__d2b+0xac>)
 8008052:	f7fe fdfd 	bl	8006c50 <__assert_func>
 8008056:	f3c9 550a 	ubfx	r5, r9, #20, #11
 800805a:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800805e:	b10d      	cbz	r5, 8008064 <__d2b+0x30>
 8008060:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8008064:	9301      	str	r3, [sp, #4]
 8008066:	f1b8 0300 	subs.w	r3, r8, #0
 800806a:	d024      	beq.n	80080b6 <__d2b+0x82>
 800806c:	4668      	mov	r0, sp
 800806e:	9300      	str	r3, [sp, #0]
 8008070:	f7ff fd7f 	bl	8007b72 <__lo0bits>
 8008074:	e9dd 1200 	ldrd	r1, r2, [sp]
 8008078:	b1d8      	cbz	r0, 80080b2 <__d2b+0x7e>
 800807a:	f1c0 0320 	rsb	r3, r0, #32
 800807e:	fa02 f303 	lsl.w	r3, r2, r3
 8008082:	430b      	orrs	r3, r1
 8008084:	40c2      	lsrs	r2, r0
 8008086:	6163      	str	r3, [r4, #20]
 8008088:	9201      	str	r2, [sp, #4]
 800808a:	9b01      	ldr	r3, [sp, #4]
 800808c:	2b00      	cmp	r3, #0
 800808e:	bf0c      	ite	eq
 8008090:	2201      	moveq	r2, #1
 8008092:	2202      	movne	r2, #2
 8008094:	61a3      	str	r3, [r4, #24]
 8008096:	6122      	str	r2, [r4, #16]
 8008098:	b1ad      	cbz	r5, 80080c6 <__d2b+0x92>
 800809a:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 800809e:	4405      	add	r5, r0
 80080a0:	6035      	str	r5, [r6, #0]
 80080a2:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 80080a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80080a8:	6018      	str	r0, [r3, #0]
 80080aa:	4620      	mov	r0, r4
 80080ac:	b002      	add	sp, #8
 80080ae:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 80080b2:	6161      	str	r1, [r4, #20]
 80080b4:	e7e9      	b.n	800808a <__d2b+0x56>
 80080b6:	a801      	add	r0, sp, #4
 80080b8:	f7ff fd5b 	bl	8007b72 <__lo0bits>
 80080bc:	9b01      	ldr	r3, [sp, #4]
 80080be:	2201      	movs	r2, #1
 80080c0:	6163      	str	r3, [r4, #20]
 80080c2:	3020      	adds	r0, #32
 80080c4:	e7e7      	b.n	8008096 <__d2b+0x62>
 80080c6:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 80080ca:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80080ce:	6030      	str	r0, [r6, #0]
 80080d0:	6918      	ldr	r0, [r3, #16]
 80080d2:	f7ff fd2f 	bl	8007b34 <__hi0bits>
 80080d6:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 80080da:	e7e4      	b.n	80080a6 <__d2b+0x72>
 80080dc:	08008aac 	.word	0x08008aac
 80080e0:	08008abd 	.word	0x08008abd

080080e4 <__ascii_wctomb>:
 80080e4:	4603      	mov	r3, r0
 80080e6:	4608      	mov	r0, r1
 80080e8:	b141      	cbz	r1, 80080fc <__ascii_wctomb+0x18>
 80080ea:	2aff      	cmp	r2, #255	@ 0xff
 80080ec:	d904      	bls.n	80080f8 <__ascii_wctomb+0x14>
 80080ee:	228a      	movs	r2, #138	@ 0x8a
 80080f0:	f04f 30ff 	mov.w	r0, #4294967295
 80080f4:	601a      	str	r2, [r3, #0]
 80080f6:	4770      	bx	lr
 80080f8:	2001      	movs	r0, #1
 80080fa:	700a      	strb	r2, [r1, #0]
 80080fc:	4770      	bx	lr

080080fe <__sfputc_r>:
 80080fe:	6893      	ldr	r3, [r2, #8]
 8008100:	b410      	push	{r4}
 8008102:	3b01      	subs	r3, #1
 8008104:	2b00      	cmp	r3, #0
 8008106:	6093      	str	r3, [r2, #8]
 8008108:	da07      	bge.n	800811a <__sfputc_r+0x1c>
 800810a:	6994      	ldr	r4, [r2, #24]
 800810c:	42a3      	cmp	r3, r4
 800810e:	db01      	blt.n	8008114 <__sfputc_r+0x16>
 8008110:	290a      	cmp	r1, #10
 8008112:	d102      	bne.n	800811a <__sfputc_r+0x1c>
 8008114:	bc10      	pop	{r4}
 8008116:	f7fe bc5a 	b.w	80069ce <__swbuf_r>
 800811a:	6813      	ldr	r3, [r2, #0]
 800811c:	1c58      	adds	r0, r3, #1
 800811e:	6010      	str	r0, [r2, #0]
 8008120:	7019      	strb	r1, [r3, #0]
 8008122:	4608      	mov	r0, r1
 8008124:	bc10      	pop	{r4}
 8008126:	4770      	bx	lr

08008128 <__sfputs_r>:
 8008128:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800812a:	4606      	mov	r6, r0
 800812c:	460f      	mov	r7, r1
 800812e:	4614      	mov	r4, r2
 8008130:	18d5      	adds	r5, r2, r3
 8008132:	42ac      	cmp	r4, r5
 8008134:	d101      	bne.n	800813a <__sfputs_r+0x12>
 8008136:	2000      	movs	r0, #0
 8008138:	e007      	b.n	800814a <__sfputs_r+0x22>
 800813a:	463a      	mov	r2, r7
 800813c:	4630      	mov	r0, r6
 800813e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008142:	f7ff ffdc 	bl	80080fe <__sfputc_r>
 8008146:	1c43      	adds	r3, r0, #1
 8008148:	d1f3      	bne.n	8008132 <__sfputs_r+0xa>
 800814a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800814c <_vfiprintf_r>:
 800814c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008150:	460d      	mov	r5, r1
 8008152:	4614      	mov	r4, r2
 8008154:	4698      	mov	r8, r3
 8008156:	4606      	mov	r6, r0
 8008158:	b09d      	sub	sp, #116	@ 0x74
 800815a:	b118      	cbz	r0, 8008164 <_vfiprintf_r+0x18>
 800815c:	6a03      	ldr	r3, [r0, #32]
 800815e:	b90b      	cbnz	r3, 8008164 <_vfiprintf_r+0x18>
 8008160:	f7fe fb4c 	bl	80067fc <__sinit>
 8008164:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8008166:	07d9      	lsls	r1, r3, #31
 8008168:	d405      	bmi.n	8008176 <_vfiprintf_r+0x2a>
 800816a:	89ab      	ldrh	r3, [r5, #12]
 800816c:	059a      	lsls	r2, r3, #22
 800816e:	d402      	bmi.n	8008176 <_vfiprintf_r+0x2a>
 8008170:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8008172:	f7fe fd4e 	bl	8006c12 <__retarget_lock_acquire_recursive>
 8008176:	89ab      	ldrh	r3, [r5, #12]
 8008178:	071b      	lsls	r3, r3, #28
 800817a:	d501      	bpl.n	8008180 <_vfiprintf_r+0x34>
 800817c:	692b      	ldr	r3, [r5, #16]
 800817e:	b99b      	cbnz	r3, 80081a8 <_vfiprintf_r+0x5c>
 8008180:	4629      	mov	r1, r5
 8008182:	4630      	mov	r0, r6
 8008184:	f7fe fc62 	bl	8006a4c <__swsetup_r>
 8008188:	b170      	cbz	r0, 80081a8 <_vfiprintf_r+0x5c>
 800818a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800818c:	07dc      	lsls	r4, r3, #31
 800818e:	d504      	bpl.n	800819a <_vfiprintf_r+0x4e>
 8008190:	f04f 30ff 	mov.w	r0, #4294967295
 8008194:	b01d      	add	sp, #116	@ 0x74
 8008196:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800819a:	89ab      	ldrh	r3, [r5, #12]
 800819c:	0598      	lsls	r0, r3, #22
 800819e:	d4f7      	bmi.n	8008190 <_vfiprintf_r+0x44>
 80081a0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80081a2:	f7fe fd37 	bl	8006c14 <__retarget_lock_release_recursive>
 80081a6:	e7f3      	b.n	8008190 <_vfiprintf_r+0x44>
 80081a8:	2300      	movs	r3, #0
 80081aa:	9309      	str	r3, [sp, #36]	@ 0x24
 80081ac:	2320      	movs	r3, #32
 80081ae:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80081b2:	2330      	movs	r3, #48	@ 0x30
 80081b4:	f04f 0901 	mov.w	r9, #1
 80081b8:	f8cd 800c 	str.w	r8, [sp, #12]
 80081bc:	f8df 81a8 	ldr.w	r8, [pc, #424]	@ 8008368 <_vfiprintf_r+0x21c>
 80081c0:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80081c4:	4623      	mov	r3, r4
 80081c6:	469a      	mov	sl, r3
 80081c8:	f813 2b01 	ldrb.w	r2, [r3], #1
 80081cc:	b10a      	cbz	r2, 80081d2 <_vfiprintf_r+0x86>
 80081ce:	2a25      	cmp	r2, #37	@ 0x25
 80081d0:	d1f9      	bne.n	80081c6 <_vfiprintf_r+0x7a>
 80081d2:	ebba 0b04 	subs.w	fp, sl, r4
 80081d6:	d00b      	beq.n	80081f0 <_vfiprintf_r+0xa4>
 80081d8:	465b      	mov	r3, fp
 80081da:	4622      	mov	r2, r4
 80081dc:	4629      	mov	r1, r5
 80081de:	4630      	mov	r0, r6
 80081e0:	f7ff ffa2 	bl	8008128 <__sfputs_r>
 80081e4:	3001      	adds	r0, #1
 80081e6:	f000 80a7 	beq.w	8008338 <_vfiprintf_r+0x1ec>
 80081ea:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80081ec:	445a      	add	r2, fp
 80081ee:	9209      	str	r2, [sp, #36]	@ 0x24
 80081f0:	f89a 3000 	ldrb.w	r3, [sl]
 80081f4:	2b00      	cmp	r3, #0
 80081f6:	f000 809f 	beq.w	8008338 <_vfiprintf_r+0x1ec>
 80081fa:	2300      	movs	r3, #0
 80081fc:	f04f 32ff 	mov.w	r2, #4294967295
 8008200:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8008204:	f10a 0a01 	add.w	sl, sl, #1
 8008208:	9304      	str	r3, [sp, #16]
 800820a:	9307      	str	r3, [sp, #28]
 800820c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8008210:	931a      	str	r3, [sp, #104]	@ 0x68
 8008212:	4654      	mov	r4, sl
 8008214:	2205      	movs	r2, #5
 8008216:	f814 1b01 	ldrb.w	r1, [r4], #1
 800821a:	4853      	ldr	r0, [pc, #332]	@ (8008368 <_vfiprintf_r+0x21c>)
 800821c:	f7fe fcfb 	bl	8006c16 <memchr>
 8008220:	9a04      	ldr	r2, [sp, #16]
 8008222:	b9d8      	cbnz	r0, 800825c <_vfiprintf_r+0x110>
 8008224:	06d1      	lsls	r1, r2, #27
 8008226:	bf44      	itt	mi
 8008228:	2320      	movmi	r3, #32
 800822a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800822e:	0713      	lsls	r3, r2, #28
 8008230:	bf44      	itt	mi
 8008232:	232b      	movmi	r3, #43	@ 0x2b
 8008234:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8008238:	f89a 3000 	ldrb.w	r3, [sl]
 800823c:	2b2a      	cmp	r3, #42	@ 0x2a
 800823e:	d015      	beq.n	800826c <_vfiprintf_r+0x120>
 8008240:	4654      	mov	r4, sl
 8008242:	2000      	movs	r0, #0
 8008244:	f04f 0c0a 	mov.w	ip, #10
 8008248:	9a07      	ldr	r2, [sp, #28]
 800824a:	4621      	mov	r1, r4
 800824c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8008250:	3b30      	subs	r3, #48	@ 0x30
 8008252:	2b09      	cmp	r3, #9
 8008254:	d94b      	bls.n	80082ee <_vfiprintf_r+0x1a2>
 8008256:	b1b0      	cbz	r0, 8008286 <_vfiprintf_r+0x13a>
 8008258:	9207      	str	r2, [sp, #28]
 800825a:	e014      	b.n	8008286 <_vfiprintf_r+0x13a>
 800825c:	eba0 0308 	sub.w	r3, r0, r8
 8008260:	fa09 f303 	lsl.w	r3, r9, r3
 8008264:	4313      	orrs	r3, r2
 8008266:	46a2      	mov	sl, r4
 8008268:	9304      	str	r3, [sp, #16]
 800826a:	e7d2      	b.n	8008212 <_vfiprintf_r+0xc6>
 800826c:	9b03      	ldr	r3, [sp, #12]
 800826e:	1d19      	adds	r1, r3, #4
 8008270:	681b      	ldr	r3, [r3, #0]
 8008272:	9103      	str	r1, [sp, #12]
 8008274:	2b00      	cmp	r3, #0
 8008276:	bfbb      	ittet	lt
 8008278:	425b      	neglt	r3, r3
 800827a:	f042 0202 	orrlt.w	r2, r2, #2
 800827e:	9307      	strge	r3, [sp, #28]
 8008280:	9307      	strlt	r3, [sp, #28]
 8008282:	bfb8      	it	lt
 8008284:	9204      	strlt	r2, [sp, #16]
 8008286:	7823      	ldrb	r3, [r4, #0]
 8008288:	2b2e      	cmp	r3, #46	@ 0x2e
 800828a:	d10a      	bne.n	80082a2 <_vfiprintf_r+0x156>
 800828c:	7863      	ldrb	r3, [r4, #1]
 800828e:	2b2a      	cmp	r3, #42	@ 0x2a
 8008290:	d132      	bne.n	80082f8 <_vfiprintf_r+0x1ac>
 8008292:	9b03      	ldr	r3, [sp, #12]
 8008294:	3402      	adds	r4, #2
 8008296:	1d1a      	adds	r2, r3, #4
 8008298:	681b      	ldr	r3, [r3, #0]
 800829a:	9203      	str	r2, [sp, #12]
 800829c:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80082a0:	9305      	str	r3, [sp, #20]
 80082a2:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 800836c <_vfiprintf_r+0x220>
 80082a6:	2203      	movs	r2, #3
 80082a8:	4650      	mov	r0, sl
 80082aa:	7821      	ldrb	r1, [r4, #0]
 80082ac:	f7fe fcb3 	bl	8006c16 <memchr>
 80082b0:	b138      	cbz	r0, 80082c2 <_vfiprintf_r+0x176>
 80082b2:	2240      	movs	r2, #64	@ 0x40
 80082b4:	9b04      	ldr	r3, [sp, #16]
 80082b6:	eba0 000a 	sub.w	r0, r0, sl
 80082ba:	4082      	lsls	r2, r0
 80082bc:	4313      	orrs	r3, r2
 80082be:	3401      	adds	r4, #1
 80082c0:	9304      	str	r3, [sp, #16]
 80082c2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80082c6:	2206      	movs	r2, #6
 80082c8:	4829      	ldr	r0, [pc, #164]	@ (8008370 <_vfiprintf_r+0x224>)
 80082ca:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80082ce:	f7fe fca2 	bl	8006c16 <memchr>
 80082d2:	2800      	cmp	r0, #0
 80082d4:	d03f      	beq.n	8008356 <_vfiprintf_r+0x20a>
 80082d6:	4b27      	ldr	r3, [pc, #156]	@ (8008374 <_vfiprintf_r+0x228>)
 80082d8:	bb1b      	cbnz	r3, 8008322 <_vfiprintf_r+0x1d6>
 80082da:	9b03      	ldr	r3, [sp, #12]
 80082dc:	3307      	adds	r3, #7
 80082de:	f023 0307 	bic.w	r3, r3, #7
 80082e2:	3308      	adds	r3, #8
 80082e4:	9303      	str	r3, [sp, #12]
 80082e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80082e8:	443b      	add	r3, r7
 80082ea:	9309      	str	r3, [sp, #36]	@ 0x24
 80082ec:	e76a      	b.n	80081c4 <_vfiprintf_r+0x78>
 80082ee:	460c      	mov	r4, r1
 80082f0:	2001      	movs	r0, #1
 80082f2:	fb0c 3202 	mla	r2, ip, r2, r3
 80082f6:	e7a8      	b.n	800824a <_vfiprintf_r+0xfe>
 80082f8:	2300      	movs	r3, #0
 80082fa:	f04f 0c0a 	mov.w	ip, #10
 80082fe:	4619      	mov	r1, r3
 8008300:	3401      	adds	r4, #1
 8008302:	9305      	str	r3, [sp, #20]
 8008304:	4620      	mov	r0, r4
 8008306:	f810 2b01 	ldrb.w	r2, [r0], #1
 800830a:	3a30      	subs	r2, #48	@ 0x30
 800830c:	2a09      	cmp	r2, #9
 800830e:	d903      	bls.n	8008318 <_vfiprintf_r+0x1cc>
 8008310:	2b00      	cmp	r3, #0
 8008312:	d0c6      	beq.n	80082a2 <_vfiprintf_r+0x156>
 8008314:	9105      	str	r1, [sp, #20]
 8008316:	e7c4      	b.n	80082a2 <_vfiprintf_r+0x156>
 8008318:	4604      	mov	r4, r0
 800831a:	2301      	movs	r3, #1
 800831c:	fb0c 2101 	mla	r1, ip, r1, r2
 8008320:	e7f0      	b.n	8008304 <_vfiprintf_r+0x1b8>
 8008322:	ab03      	add	r3, sp, #12
 8008324:	9300      	str	r3, [sp, #0]
 8008326:	462a      	mov	r2, r5
 8008328:	4630      	mov	r0, r6
 800832a:	4b13      	ldr	r3, [pc, #76]	@ (8008378 <_vfiprintf_r+0x22c>)
 800832c:	a904      	add	r1, sp, #16
 800832e:	f7fd fe1b 	bl	8005f68 <_printf_float>
 8008332:	4607      	mov	r7, r0
 8008334:	1c78      	adds	r0, r7, #1
 8008336:	d1d6      	bne.n	80082e6 <_vfiprintf_r+0x19a>
 8008338:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800833a:	07d9      	lsls	r1, r3, #31
 800833c:	d405      	bmi.n	800834a <_vfiprintf_r+0x1fe>
 800833e:	89ab      	ldrh	r3, [r5, #12]
 8008340:	059a      	lsls	r2, r3, #22
 8008342:	d402      	bmi.n	800834a <_vfiprintf_r+0x1fe>
 8008344:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8008346:	f7fe fc65 	bl	8006c14 <__retarget_lock_release_recursive>
 800834a:	89ab      	ldrh	r3, [r5, #12]
 800834c:	065b      	lsls	r3, r3, #25
 800834e:	f53f af1f 	bmi.w	8008190 <_vfiprintf_r+0x44>
 8008352:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8008354:	e71e      	b.n	8008194 <_vfiprintf_r+0x48>
 8008356:	ab03      	add	r3, sp, #12
 8008358:	9300      	str	r3, [sp, #0]
 800835a:	462a      	mov	r2, r5
 800835c:	4630      	mov	r0, r6
 800835e:	4b06      	ldr	r3, [pc, #24]	@ (8008378 <_vfiprintf_r+0x22c>)
 8008360:	a904      	add	r1, sp, #16
 8008362:	f7fe f89f 	bl	80064a4 <_printf_i>
 8008366:	e7e4      	b.n	8008332 <_vfiprintf_r+0x1e6>
 8008368:	08008d19 	.word	0x08008d19
 800836c:	08008d1f 	.word	0x08008d1f
 8008370:	08008d23 	.word	0x08008d23
 8008374:	08005f69 	.word	0x08005f69
 8008378:	08008129 	.word	0x08008129

0800837c <__sflush_r>:
 800837c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8008380:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008382:	0716      	lsls	r6, r2, #28
 8008384:	4605      	mov	r5, r0
 8008386:	460c      	mov	r4, r1
 8008388:	d454      	bmi.n	8008434 <__sflush_r+0xb8>
 800838a:	684b      	ldr	r3, [r1, #4]
 800838c:	2b00      	cmp	r3, #0
 800838e:	dc02      	bgt.n	8008396 <__sflush_r+0x1a>
 8008390:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8008392:	2b00      	cmp	r3, #0
 8008394:	dd48      	ble.n	8008428 <__sflush_r+0xac>
 8008396:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8008398:	2e00      	cmp	r6, #0
 800839a:	d045      	beq.n	8008428 <__sflush_r+0xac>
 800839c:	2300      	movs	r3, #0
 800839e:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80083a2:	682f      	ldr	r7, [r5, #0]
 80083a4:	6a21      	ldr	r1, [r4, #32]
 80083a6:	602b      	str	r3, [r5, #0]
 80083a8:	d030      	beq.n	800840c <__sflush_r+0x90>
 80083aa:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80083ac:	89a3      	ldrh	r3, [r4, #12]
 80083ae:	0759      	lsls	r1, r3, #29
 80083b0:	d505      	bpl.n	80083be <__sflush_r+0x42>
 80083b2:	6863      	ldr	r3, [r4, #4]
 80083b4:	1ad2      	subs	r2, r2, r3
 80083b6:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80083b8:	b10b      	cbz	r3, 80083be <__sflush_r+0x42>
 80083ba:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80083bc:	1ad2      	subs	r2, r2, r3
 80083be:	2300      	movs	r3, #0
 80083c0:	4628      	mov	r0, r5
 80083c2:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80083c4:	6a21      	ldr	r1, [r4, #32]
 80083c6:	47b0      	blx	r6
 80083c8:	1c43      	adds	r3, r0, #1
 80083ca:	89a3      	ldrh	r3, [r4, #12]
 80083cc:	d106      	bne.n	80083dc <__sflush_r+0x60>
 80083ce:	6829      	ldr	r1, [r5, #0]
 80083d0:	291d      	cmp	r1, #29
 80083d2:	d82b      	bhi.n	800842c <__sflush_r+0xb0>
 80083d4:	4a28      	ldr	r2, [pc, #160]	@ (8008478 <__sflush_r+0xfc>)
 80083d6:	410a      	asrs	r2, r1
 80083d8:	07d6      	lsls	r6, r2, #31
 80083da:	d427      	bmi.n	800842c <__sflush_r+0xb0>
 80083dc:	2200      	movs	r2, #0
 80083de:	6062      	str	r2, [r4, #4]
 80083e0:	6922      	ldr	r2, [r4, #16]
 80083e2:	04d9      	lsls	r1, r3, #19
 80083e4:	6022      	str	r2, [r4, #0]
 80083e6:	d504      	bpl.n	80083f2 <__sflush_r+0x76>
 80083e8:	1c42      	adds	r2, r0, #1
 80083ea:	d101      	bne.n	80083f0 <__sflush_r+0x74>
 80083ec:	682b      	ldr	r3, [r5, #0]
 80083ee:	b903      	cbnz	r3, 80083f2 <__sflush_r+0x76>
 80083f0:	6560      	str	r0, [r4, #84]	@ 0x54
 80083f2:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80083f4:	602f      	str	r7, [r5, #0]
 80083f6:	b1b9      	cbz	r1, 8008428 <__sflush_r+0xac>
 80083f8:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80083fc:	4299      	cmp	r1, r3
 80083fe:	d002      	beq.n	8008406 <__sflush_r+0x8a>
 8008400:	4628      	mov	r0, r5
 8008402:	f7ff fa95 	bl	8007930 <_free_r>
 8008406:	2300      	movs	r3, #0
 8008408:	6363      	str	r3, [r4, #52]	@ 0x34
 800840a:	e00d      	b.n	8008428 <__sflush_r+0xac>
 800840c:	2301      	movs	r3, #1
 800840e:	4628      	mov	r0, r5
 8008410:	47b0      	blx	r6
 8008412:	4602      	mov	r2, r0
 8008414:	1c50      	adds	r0, r2, #1
 8008416:	d1c9      	bne.n	80083ac <__sflush_r+0x30>
 8008418:	682b      	ldr	r3, [r5, #0]
 800841a:	2b00      	cmp	r3, #0
 800841c:	d0c6      	beq.n	80083ac <__sflush_r+0x30>
 800841e:	2b1d      	cmp	r3, #29
 8008420:	d001      	beq.n	8008426 <__sflush_r+0xaa>
 8008422:	2b16      	cmp	r3, #22
 8008424:	d11d      	bne.n	8008462 <__sflush_r+0xe6>
 8008426:	602f      	str	r7, [r5, #0]
 8008428:	2000      	movs	r0, #0
 800842a:	e021      	b.n	8008470 <__sflush_r+0xf4>
 800842c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8008430:	b21b      	sxth	r3, r3
 8008432:	e01a      	b.n	800846a <__sflush_r+0xee>
 8008434:	690f      	ldr	r7, [r1, #16]
 8008436:	2f00      	cmp	r7, #0
 8008438:	d0f6      	beq.n	8008428 <__sflush_r+0xac>
 800843a:	0793      	lsls	r3, r2, #30
 800843c:	bf18      	it	ne
 800843e:	2300      	movne	r3, #0
 8008440:	680e      	ldr	r6, [r1, #0]
 8008442:	bf08      	it	eq
 8008444:	694b      	ldreq	r3, [r1, #20]
 8008446:	1bf6      	subs	r6, r6, r7
 8008448:	600f      	str	r7, [r1, #0]
 800844a:	608b      	str	r3, [r1, #8]
 800844c:	2e00      	cmp	r6, #0
 800844e:	ddeb      	ble.n	8008428 <__sflush_r+0xac>
 8008450:	4633      	mov	r3, r6
 8008452:	463a      	mov	r2, r7
 8008454:	4628      	mov	r0, r5
 8008456:	6a21      	ldr	r1, [r4, #32]
 8008458:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 800845c:	47e0      	blx	ip
 800845e:	2800      	cmp	r0, #0
 8008460:	dc07      	bgt.n	8008472 <__sflush_r+0xf6>
 8008462:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008466:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800846a:	f04f 30ff 	mov.w	r0, #4294967295
 800846e:	81a3      	strh	r3, [r4, #12]
 8008470:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008472:	4407      	add	r7, r0
 8008474:	1a36      	subs	r6, r6, r0
 8008476:	e7e9      	b.n	800844c <__sflush_r+0xd0>
 8008478:	dfbffffe 	.word	0xdfbffffe

0800847c <_fflush_r>:
 800847c:	b538      	push	{r3, r4, r5, lr}
 800847e:	690b      	ldr	r3, [r1, #16]
 8008480:	4605      	mov	r5, r0
 8008482:	460c      	mov	r4, r1
 8008484:	b913      	cbnz	r3, 800848c <_fflush_r+0x10>
 8008486:	2500      	movs	r5, #0
 8008488:	4628      	mov	r0, r5
 800848a:	bd38      	pop	{r3, r4, r5, pc}
 800848c:	b118      	cbz	r0, 8008496 <_fflush_r+0x1a>
 800848e:	6a03      	ldr	r3, [r0, #32]
 8008490:	b90b      	cbnz	r3, 8008496 <_fflush_r+0x1a>
 8008492:	f7fe f9b3 	bl	80067fc <__sinit>
 8008496:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800849a:	2b00      	cmp	r3, #0
 800849c:	d0f3      	beq.n	8008486 <_fflush_r+0xa>
 800849e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80084a0:	07d0      	lsls	r0, r2, #31
 80084a2:	d404      	bmi.n	80084ae <_fflush_r+0x32>
 80084a4:	0599      	lsls	r1, r3, #22
 80084a6:	d402      	bmi.n	80084ae <_fflush_r+0x32>
 80084a8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80084aa:	f7fe fbb2 	bl	8006c12 <__retarget_lock_acquire_recursive>
 80084ae:	4628      	mov	r0, r5
 80084b0:	4621      	mov	r1, r4
 80084b2:	f7ff ff63 	bl	800837c <__sflush_r>
 80084b6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80084b8:	4605      	mov	r5, r0
 80084ba:	07da      	lsls	r2, r3, #31
 80084bc:	d4e4      	bmi.n	8008488 <_fflush_r+0xc>
 80084be:	89a3      	ldrh	r3, [r4, #12]
 80084c0:	059b      	lsls	r3, r3, #22
 80084c2:	d4e1      	bmi.n	8008488 <_fflush_r+0xc>
 80084c4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80084c6:	f7fe fba5 	bl	8006c14 <__retarget_lock_release_recursive>
 80084ca:	e7dd      	b.n	8008488 <_fflush_r+0xc>

080084cc <fiprintf>:
 80084cc:	b40e      	push	{r1, r2, r3}
 80084ce:	b503      	push	{r0, r1, lr}
 80084d0:	4601      	mov	r1, r0
 80084d2:	ab03      	add	r3, sp, #12
 80084d4:	4805      	ldr	r0, [pc, #20]	@ (80084ec <fiprintf+0x20>)
 80084d6:	f853 2b04 	ldr.w	r2, [r3], #4
 80084da:	6800      	ldr	r0, [r0, #0]
 80084dc:	9301      	str	r3, [sp, #4]
 80084de:	f7ff fe35 	bl	800814c <_vfiprintf_r>
 80084e2:	b002      	add	sp, #8
 80084e4:	f85d eb04 	ldr.w	lr, [sp], #4
 80084e8:	b003      	add	sp, #12
 80084ea:	4770      	bx	lr
 80084ec:	20000198 	.word	0x20000198

080084f0 <__swhatbuf_r>:
 80084f0:	b570      	push	{r4, r5, r6, lr}
 80084f2:	460c      	mov	r4, r1
 80084f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80084f8:	4615      	mov	r5, r2
 80084fa:	2900      	cmp	r1, #0
 80084fc:	461e      	mov	r6, r3
 80084fe:	b096      	sub	sp, #88	@ 0x58
 8008500:	da0c      	bge.n	800851c <__swhatbuf_r+0x2c>
 8008502:	89a3      	ldrh	r3, [r4, #12]
 8008504:	2100      	movs	r1, #0
 8008506:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800850a:	bf14      	ite	ne
 800850c:	2340      	movne	r3, #64	@ 0x40
 800850e:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8008512:	2000      	movs	r0, #0
 8008514:	6031      	str	r1, [r6, #0]
 8008516:	602b      	str	r3, [r5, #0]
 8008518:	b016      	add	sp, #88	@ 0x58
 800851a:	bd70      	pop	{r4, r5, r6, pc}
 800851c:	466a      	mov	r2, sp
 800851e:	f000 f849 	bl	80085b4 <_fstat_r>
 8008522:	2800      	cmp	r0, #0
 8008524:	dbed      	blt.n	8008502 <__swhatbuf_r+0x12>
 8008526:	9901      	ldr	r1, [sp, #4]
 8008528:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800852c:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8008530:	4259      	negs	r1, r3
 8008532:	4159      	adcs	r1, r3
 8008534:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8008538:	e7eb      	b.n	8008512 <__swhatbuf_r+0x22>

0800853a <__smakebuf_r>:
 800853a:	898b      	ldrh	r3, [r1, #12]
 800853c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800853e:	079d      	lsls	r5, r3, #30
 8008540:	4606      	mov	r6, r0
 8008542:	460c      	mov	r4, r1
 8008544:	d507      	bpl.n	8008556 <__smakebuf_r+0x1c>
 8008546:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800854a:	6023      	str	r3, [r4, #0]
 800854c:	6123      	str	r3, [r4, #16]
 800854e:	2301      	movs	r3, #1
 8008550:	6163      	str	r3, [r4, #20]
 8008552:	b003      	add	sp, #12
 8008554:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008556:	466a      	mov	r2, sp
 8008558:	ab01      	add	r3, sp, #4
 800855a:	f7ff ffc9 	bl	80084f0 <__swhatbuf_r>
 800855e:	9f00      	ldr	r7, [sp, #0]
 8008560:	4605      	mov	r5, r0
 8008562:	4639      	mov	r1, r7
 8008564:	4630      	mov	r0, r6
 8008566:	f7fd fbd5 	bl	8005d14 <_malloc_r>
 800856a:	b948      	cbnz	r0, 8008580 <__smakebuf_r+0x46>
 800856c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008570:	059a      	lsls	r2, r3, #22
 8008572:	d4ee      	bmi.n	8008552 <__smakebuf_r+0x18>
 8008574:	f023 0303 	bic.w	r3, r3, #3
 8008578:	f043 0302 	orr.w	r3, r3, #2
 800857c:	81a3      	strh	r3, [r4, #12]
 800857e:	e7e2      	b.n	8008546 <__smakebuf_r+0xc>
 8008580:	89a3      	ldrh	r3, [r4, #12]
 8008582:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8008586:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800858a:	81a3      	strh	r3, [r4, #12]
 800858c:	9b01      	ldr	r3, [sp, #4]
 800858e:	6020      	str	r0, [r4, #0]
 8008590:	b15b      	cbz	r3, 80085aa <__smakebuf_r+0x70>
 8008592:	4630      	mov	r0, r6
 8008594:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8008598:	f000 f81e 	bl	80085d8 <_isatty_r>
 800859c:	b128      	cbz	r0, 80085aa <__smakebuf_r+0x70>
 800859e:	89a3      	ldrh	r3, [r4, #12]
 80085a0:	f023 0303 	bic.w	r3, r3, #3
 80085a4:	f043 0301 	orr.w	r3, r3, #1
 80085a8:	81a3      	strh	r3, [r4, #12]
 80085aa:	89a3      	ldrh	r3, [r4, #12]
 80085ac:	431d      	orrs	r5, r3
 80085ae:	81a5      	strh	r5, [r4, #12]
 80085b0:	e7cf      	b.n	8008552 <__smakebuf_r+0x18>
	...

080085b4 <_fstat_r>:
 80085b4:	b538      	push	{r3, r4, r5, lr}
 80085b6:	2300      	movs	r3, #0
 80085b8:	4d06      	ldr	r5, [pc, #24]	@ (80085d4 <_fstat_r+0x20>)
 80085ba:	4604      	mov	r4, r0
 80085bc:	4608      	mov	r0, r1
 80085be:	4611      	mov	r1, r2
 80085c0:	602b      	str	r3, [r5, #0]
 80085c2:	f7fa f9c0 	bl	8002946 <_fstat>
 80085c6:	1c43      	adds	r3, r0, #1
 80085c8:	d102      	bne.n	80085d0 <_fstat_r+0x1c>
 80085ca:	682b      	ldr	r3, [r5, #0]
 80085cc:	b103      	cbz	r3, 80085d0 <_fstat_r+0x1c>
 80085ce:	6023      	str	r3, [r4, #0]
 80085d0:	bd38      	pop	{r3, r4, r5, pc}
 80085d2:	bf00      	nop
 80085d4:	200005c8 	.word	0x200005c8

080085d8 <_isatty_r>:
 80085d8:	b538      	push	{r3, r4, r5, lr}
 80085da:	2300      	movs	r3, #0
 80085dc:	4d05      	ldr	r5, [pc, #20]	@ (80085f4 <_isatty_r+0x1c>)
 80085de:	4604      	mov	r4, r0
 80085e0:	4608      	mov	r0, r1
 80085e2:	602b      	str	r3, [r5, #0]
 80085e4:	f7fa f9b4 	bl	8002950 <_isatty>
 80085e8:	1c43      	adds	r3, r0, #1
 80085ea:	d102      	bne.n	80085f2 <_isatty_r+0x1a>
 80085ec:	682b      	ldr	r3, [r5, #0]
 80085ee:	b103      	cbz	r3, 80085f2 <_isatty_r+0x1a>
 80085f0:	6023      	str	r3, [r4, #0]
 80085f2:	bd38      	pop	{r3, r4, r5, pc}
 80085f4:	200005c8 	.word	0x200005c8

080085f8 <abort>:
 80085f8:	2006      	movs	r0, #6
 80085fa:	b508      	push	{r3, lr}
 80085fc:	f000 f840 	bl	8008680 <raise>
 8008600:	2001      	movs	r0, #1
 8008602:	f7fa f987 	bl	8002914 <_exit>

08008606 <_calloc_r>:
 8008606:	b570      	push	{r4, r5, r6, lr}
 8008608:	fba1 5402 	umull	r5, r4, r1, r2
 800860c:	b93c      	cbnz	r4, 800861e <_calloc_r+0x18>
 800860e:	4629      	mov	r1, r5
 8008610:	f7fd fb80 	bl	8005d14 <_malloc_r>
 8008614:	4606      	mov	r6, r0
 8008616:	b928      	cbnz	r0, 8008624 <_calloc_r+0x1e>
 8008618:	2600      	movs	r6, #0
 800861a:	4630      	mov	r0, r6
 800861c:	bd70      	pop	{r4, r5, r6, pc}
 800861e:	220c      	movs	r2, #12
 8008620:	6002      	str	r2, [r0, #0]
 8008622:	e7f9      	b.n	8008618 <_calloc_r+0x12>
 8008624:	462a      	mov	r2, r5
 8008626:	4621      	mov	r1, r4
 8008628:	f7fe fa66 	bl	8006af8 <memset>
 800862c:	e7f5      	b.n	800861a <_calloc_r+0x14>

0800862e <_raise_r>:
 800862e:	291f      	cmp	r1, #31
 8008630:	b538      	push	{r3, r4, r5, lr}
 8008632:	4605      	mov	r5, r0
 8008634:	460c      	mov	r4, r1
 8008636:	d904      	bls.n	8008642 <_raise_r+0x14>
 8008638:	2316      	movs	r3, #22
 800863a:	6003      	str	r3, [r0, #0]
 800863c:	f04f 30ff 	mov.w	r0, #4294967295
 8008640:	bd38      	pop	{r3, r4, r5, pc}
 8008642:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8008644:	b112      	cbz	r2, 800864c <_raise_r+0x1e>
 8008646:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800864a:	b94b      	cbnz	r3, 8008660 <_raise_r+0x32>
 800864c:	4628      	mov	r0, r5
 800864e:	f000 f831 	bl	80086b4 <_getpid_r>
 8008652:	4622      	mov	r2, r4
 8008654:	4601      	mov	r1, r0
 8008656:	4628      	mov	r0, r5
 8008658:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800865c:	f000 b818 	b.w	8008690 <_kill_r>
 8008660:	2b01      	cmp	r3, #1
 8008662:	d00a      	beq.n	800867a <_raise_r+0x4c>
 8008664:	1c59      	adds	r1, r3, #1
 8008666:	d103      	bne.n	8008670 <_raise_r+0x42>
 8008668:	2316      	movs	r3, #22
 800866a:	6003      	str	r3, [r0, #0]
 800866c:	2001      	movs	r0, #1
 800866e:	e7e7      	b.n	8008640 <_raise_r+0x12>
 8008670:	2100      	movs	r1, #0
 8008672:	4620      	mov	r0, r4
 8008674:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8008678:	4798      	blx	r3
 800867a:	2000      	movs	r0, #0
 800867c:	e7e0      	b.n	8008640 <_raise_r+0x12>
	...

08008680 <raise>:
 8008680:	4b02      	ldr	r3, [pc, #8]	@ (800868c <raise+0xc>)
 8008682:	4601      	mov	r1, r0
 8008684:	6818      	ldr	r0, [r3, #0]
 8008686:	f7ff bfd2 	b.w	800862e <_raise_r>
 800868a:	bf00      	nop
 800868c:	20000198 	.word	0x20000198

08008690 <_kill_r>:
 8008690:	b538      	push	{r3, r4, r5, lr}
 8008692:	2300      	movs	r3, #0
 8008694:	4d06      	ldr	r5, [pc, #24]	@ (80086b0 <_kill_r+0x20>)
 8008696:	4604      	mov	r4, r0
 8008698:	4608      	mov	r0, r1
 800869a:	4611      	mov	r1, r2
 800869c:	602b      	str	r3, [r5, #0]
 800869e:	f7fa f931 	bl	8002904 <_kill>
 80086a2:	1c43      	adds	r3, r0, #1
 80086a4:	d102      	bne.n	80086ac <_kill_r+0x1c>
 80086a6:	682b      	ldr	r3, [r5, #0]
 80086a8:	b103      	cbz	r3, 80086ac <_kill_r+0x1c>
 80086aa:	6023      	str	r3, [r4, #0]
 80086ac:	bd38      	pop	{r3, r4, r5, pc}
 80086ae:	bf00      	nop
 80086b0:	200005c8 	.word	0x200005c8

080086b4 <_getpid_r>:
 80086b4:	f7fa b924 	b.w	8002900 <_getpid>

080086b8 <_init>:
 80086b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80086ba:	bf00      	nop
 80086bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80086be:	bc08      	pop	{r3}
 80086c0:	469e      	mov	lr, r3
 80086c2:	4770      	bx	lr

080086c4 <_fini>:
 80086c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80086c6:	bf00      	nop
 80086c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80086ca:	bc08      	pop	{r3}
 80086cc:	469e      	mov	lr, r3
 80086ce:	4770      	bx	lr
